[
  {
    "text": "I think one of the main appeals of go is that you don't really need to think about security as much as with other",
    "start": "80",
    "end": "5960"
  },
  {
    "text": "languages go is a memory safe language unless I'm mistaken and the compiler is never going to let you do stupid stuff",
    "start": "5960",
    "end": "13320"
  },
  {
    "text": "like create an array that is too small and then you know write stuff that goes out of it it's just not possible so it",
    "start": "13320",
    "end": "18760"
  },
  {
    "text": "eliminates a whole lot of bug classes which we call memory Corruptions it's just not going to happen you cannot do",
    "start": "18760",
    "end": "24800"
  },
  {
    "text": "this to yourself and go and it means that all the old school buffer overflows that plagued all the C and C++ programs",
    "start": "24800",
    "end": "31720"
  },
  {
    "text": "for dozens of years are not going to ever happen in the go language it doesn't mean that the program is going",
    "start": "31720",
    "end": "37520"
  },
  {
    "text": "to be like perfectly safe from any security issues but the issues are not going to be related to oh I made a",
    "start": "37520",
    "end": "43719"
  },
  {
    "text": "programming mistake and uh there is a bug in my program it's going to be exploited it's going to be more related",
    "start": "43719",
    "end": "49199"
  },
  {
    "text": "to design [Music]",
    "start": "49199",
    "end": "54320"
  },
  {
    "text": "issues what's up friends this episode is brought to you by Source graph with the",
    "start": "54320",
    "end": "59440"
  },
  {
    "text": "release of source graph 4.0 and the Starship event just a few weeks behind us is super clear that Source graph is",
    "start": "59440",
    "end": "66119"
  },
  {
    "text": "becoming not just code search but a full-on code intelligence platform and",
    "start": "66119",
    "end": "71159"
  },
  {
    "text": "I'm here with Joel kler product manager of code insights for Source graph Joel this move from code search to code",
    "start": "71159",
    "end": "77240"
  },
  {
    "text": "intelligence is a really big deal how would you explain this feature code insights if you're just talking to folks",
    "start": "77240",
    "end": "83360"
  },
  {
    "text": "in the hallway track of your favorite conference um I would really start with the technical because before I was",
    "start": "83360",
    "end": "88960"
  },
  {
    "text": "product manager I used to be as well and it's really cool and exciting just to be able to say we're going to turn your",
    "start": "88960",
    "end": "94200"
  },
  {
    "text": "codebase into a database and the structured language that you need to interact is just the ability to write a",
    "start": "94200",
    "end": "99880"
  },
  {
    "text": "code search you know literal search that's totally fine regular expression you know that'll give you a few more advanced options even a structural",
    "start": "99880",
    "end": "106159"
  },
  {
    "text": "search but the number of longtail possibilities it unlocks truly the Journey of building this product was",
    "start": "106159",
    "end": "112520"
  },
  {
    "text": "just saying well we've just unlocked you know an infinite number of possibilities we got to figure out some immediate use",
    "start": "112520",
    "end": "118280"
  },
  {
    "text": "cases so we can start to you know invest in this product build it and sell it but we're only getting started in terms of",
    "start": "118280",
    "end": "123640"
  },
  {
    "text": "the number of uses that we're uncovering for it the story I told you about discovering like version tracking turned",
    "start": "123640",
    "end": "129160"
  },
  {
    "text": "out to be a really important use case that wasn't even on a road map 6 months prior to discovering that as we were already planning to launch this product",
    "start": "129160",
    "end": "134800"
  },
  {
    "text": "until we talked to enough folks realized this was a problem and then found well oh that's like a simple regular expression capture group that you can",
    "start": "134800",
    "end": "140680"
  },
  {
    "text": "just plug right in because we really built this system to not limit the power of what we buil we don't want to give you like three out of the box templates",
    "start": "140680",
    "end": "147160"
  },
  {
    "text": "and you can only change like one character or something it's truly like the templates are there to hold your hand and get you started but if you",
    "start": "147160",
    "end": "152840"
  },
  {
    "text": "can come up with anything you want track in your code base you can do that with code insights I love it thank you Joel",
    "start": "152840",
    "end": "157959"
  },
  {
    "text": "so right now there is a treasure Trove of insights just waiting for you living",
    "start": "157959",
    "end": "163280"
  },
  {
    "text": "inside your c-base your c-base is now a quable database thanks to Source graph",
    "start": "163280",
    "end": "168959"
  },
  {
    "text": "this opens up a world of possibilities for your code and the intelligence you can gain from it a good next step is to",
    "start": "168959",
    "end": "174560"
  },
  {
    "text": "go to about. source.com code-in insights the link will be in the show not notes see how the teams are",
    "start": "174560",
    "end": "181680"
  },
  {
    "text": "using this awesome feature again about. source.com code-in insights again this link is in",
    "start": "181680",
    "end": "189920"
  },
  {
    "text": "the show [Music]",
    "start": "189920",
    "end": "199220"
  },
  {
    "text": "notes let's do it it's go time welcome to go time your source for diverse",
    "start": "205000",
    "end": "211840"
  },
  {
    "text": "discussions from all around the go Community check out our back catalog at go time. FM there you'll find the most",
    "start": "211840",
    "end": "218080"
  },
  {
    "text": "popular episodes our favorites and a request form so you can let us know what you want to hear about on the Pod",
    "start": "218080",
    "end": "224280"
  },
  {
    "text": "special thanks to our partners at fastly for shipping our shows super fast to wherever you listen check them out at",
    "start": "224280",
    "end": "230000"
  },
  {
    "text": "fastly.com and to our friends at fly.io Host your app servers close to your users no opts required learn more at",
    "start": "230000",
    "end": "237799"
  },
  {
    "text": "fly.io okay here we go hello everyone who is joining us today on a Wednesday of their recording we",
    "start": "237799",
    "end": "245400"
  },
  {
    "text": "normally record on a Tuesday but we have a very special guest that we need to make a very special event about that Ian",
    "start": "245400",
    "end": "251560"
  },
  {
    "text": "is my co-host today hi Ian hey how you doing Natalie good I'm very excited to have Ivan today join us yeah Ivan kovski",
    "start": "251560",
    "end": "260079"
  },
  {
    "text": "also known on Twitter as Justice rage you are a senior security researcher at",
    "start": "260079",
    "end": "265560"
  },
  {
    "text": "kaspari yes hello very happy to be here indeed so I work in the threat intelligence field and my daily work",
    "start": "265560",
    "end": "273080"
  },
  {
    "text": "involves looking at malware and writing reports about it basically the activity that I'm involved in is uh trying to",
    "start": "273080",
    "end": "280000"
  },
  {
    "text": "figure out what the attackers are up to what kind of tools they're using methodologies what types of victims they are after and then you know we've write",
    "start": "280000",
    "end": "286400"
  },
  {
    "text": "stuff about it and our customers read our reports and then it allows them to figure out whether or not this group or",
    "start": "286400",
    "end": "292639"
  },
  {
    "text": "this group is likely to attack them or not depending on you know what type information that they are after and if",
    "start": "292639",
    "end": "297759"
  },
  {
    "text": "so how they may defend from those attacks you know by knowing more about the type of malware that they use the",
    "start": "297759",
    "end": "303120"
  },
  {
    "text": "type of attack vectors that they typically favor and so on so really I",
    "start": "303120",
    "end": "308880"
  },
  {
    "text": "spend my day in Ida Pro most of the time and sometimes as well I do give out",
    "start": "308880",
    "end": "314120"
  },
  {
    "text": "trainings or reverse engineering either in universities or for our customers as well and there's a very cool video that",
    "start": "314120",
    "end": "321800"
  },
  {
    "text": "has two parts of you reverse engineering and malware written about a year ago that was written in go actually",
    "start": "321800",
    "end": "328400"
  },
  {
    "text": "absolutely and that from the solar winds attack exactly this specific example comes from the solar winds incident",
    "start": "328400",
    "end": "335280"
  },
  {
    "text": "which I'm pretty sure that most uh listeners will be aware of because it was such a high media impact case to",
    "start": "335280",
    "end": "342520"
  },
  {
    "text": "make a quick summary about it what happened was a company called I always get dugs mixed up I think the name of",
    "start": "342520",
    "end": "348720"
  },
  {
    "text": "the company is solo wind and then the product is Oran it but maybe the other way around like I do really get confused",
    "start": "348720",
    "end": "354160"
  },
  {
    "text": "about this all the time I think you way the way you have it is right okay great that was really a 50-50 chance there",
    "start": "354160",
    "end": "360000"
  },
  {
    "text": "anyway this company got attacked but it wasn't attacked for the information that it had because it was just a software",
    "start": "360000",
    "end": "366960"
  },
  {
    "text": "company which in itself had little value as an intelligence Target but the thing",
    "start": "366960",
    "end": "372520"
  },
  {
    "text": "was that it had a high number of high-profile customers and these customers were you know us uh government",
    "start": "372520",
    "end": "379400"
  },
  {
    "text": "entities or big companies uh in the field and what the attackers did was",
    "start": "379400",
    "end": "385120"
  },
  {
    "text": "they were able to compromise the software build chain and they were able to insert their own code inside of the",
    "start": "385120",
    "end": "392800"
  },
  {
    "text": "uh software that was then pushed to customers and using this they were able to create a back door that would be",
    "start": "392800",
    "end": "398919"
  },
  {
    "text": "automatically deployed at all Sol wind this customers and then you know maybe",
    "start": "398919",
    "end": "404400"
  },
  {
    "text": "two weeks or 3 weeks later because this uh very stealthy attack had a very long sleeping time it it stayed dormant for a",
    "start": "404400",
    "end": "410840"
  },
  {
    "text": "while to make sure it would remain very stealthy but after a while then it would start connecting to the C2 server and",
    "start": "410840",
    "end": "416360"
  },
  {
    "text": "then for all the targets that were deemed interesting by the attacker they would receive a second stage payload",
    "start": "416360",
    "end": "421840"
  },
  {
    "text": "that would allow them to get into the network and then collect intelligence and whatnot so the first the very first",
    "start": "421840",
    "end": "427120"
  },
  {
    "text": "stage of the attack was just some modification of the code of the original",
    "start": "427120",
    "end": "432199"
  },
  {
    "text": "program this part was written in net but then the second part which is called Sun shuttle was actually written in go",
    "start": "432199",
    "end": "438879"
  },
  {
    "text": "language so it was for me like the first time I was getting involved in reverse engineering for the gold language",
    "start": "438879",
    "end": "445280"
  },
  {
    "text": "learning curve was a little steep but then again I kind of used it as a learning experience but also as an",
    "start": "445280",
    "end": "451080"
  },
  {
    "text": "example in future reverse engineering courses for other people that might be interested in learning how to well how",
    "start": "451080",
    "end": "457800"
  },
  {
    "text": "to reverse engineer go programs but also I think if you are a go Enthusiast reverse engineering can allow you to get",
    "start": "457800",
    "end": "463599"
  },
  {
    "text": "to know more about how the language actually works under the hood which I think is also very interesting from a",
    "start": "463599",
    "end": "469520"
  },
  {
    "text": "software development point of view so that's one like famous example of go malware are there other famous ones",
    "start": "469520",
    "end": "475319"
  },
  {
    "text": "written in go that you can think of off the top of your head yeah so from from the same incident one of the companies",
    "start": "475319",
    "end": "481400"
  },
  {
    "text": "that was breached through the solwind incident was ment now belongs to Google",
    "start": "481400",
    "end": "486560"
  },
  {
    "text": "and they were the ones that actually detected that there was something wrong in their Network and reported it and so kudos to them really a great job on",
    "start": "486560",
    "end": "492520"
  },
  {
    "text": "figuring out that something was wrong but one of the things that the attackers were very interested in was getting",
    "start": "492520",
    "end": "498960"
  },
  {
    "text": "access to the tool set that ment was using for their own penetration testing and red teaming engagements and it so",
    "start": "498960",
    "end": "505919"
  },
  {
    "text": "happens that the tools that they were using were actually written in go language which I think is really",
    "start": "505919",
    "end": "511280"
  },
  {
    "text": "interesting from a an analyst perspective so it's kind of I think there's an interesting discussion to",
    "start": "511280",
    "end": "516518"
  },
  {
    "text": "have about why they chose this language for their own offensive tools there are a number of other projects on GitHub",
    "start": "516519",
    "end": "523800"
  },
  {
    "text": "which I can probably I can think of one called stow away on the top of my head which has been uh also reused and",
    "start": "523800",
    "end": "530399"
  },
  {
    "text": "Modified by some threat actors We'll add a link to that in the show notes that sounds interesting yeah sure i' say",
    "start": "530399",
    "end": "536680"
  },
  {
    "text": "networking tool is really something that proxies stuff in and out of a network goes between protocols and that kind of",
    "start": "536680",
    "end": "542600"
  },
  {
    "text": "stuff it's written in go language pretty annoying to reverse engineer because it's a number of a lot of go routines",
    "start": "542600",
    "end": "547800"
  },
  {
    "text": "know talking to each other very hard to figure out how it's architectured and another example I can think about is I'm",
    "start": "547800",
    "end": "553800"
  },
  {
    "text": "not 100% sure but I do believe that a commercial back door called Brute ratel",
    "start": "553800",
    "end": "560079"
  },
  {
    "text": "which is a big competitor or new competitor maybe to uh Cobalt strike",
    "start": "560079",
    "end": "565160"
  },
  {
    "text": "which places a enormous emphasis on evading dete and being able to you know",
    "start": "565160",
    "end": "571120"
  },
  {
    "text": "slip through EDR Solutions Etc is also written in go language I do believe but",
    "start": "571120",
    "end": "576200"
  },
  {
    "text": "I would have to double check that so these are examples of malware families written in go language and I think that",
    "start": "576200",
    "end": "582680"
  },
  {
    "text": "over time we're going to see more and more of them why do you think we're going to see more and more is there a specific reason you mentioned that they",
    "start": "582680",
    "end": "588120"
  },
  {
    "text": "were hard to reverse engineer is that part of it or all of it or yeah there are a few reasons the first reason I",
    "start": "588120",
    "end": "595200"
  },
  {
    "text": "think is probably related to the ease of use for the uh developers I don't mean",
    "start": "595200",
    "end": "601519"
  },
  {
    "text": "that go is like easier to program than other languages but the fact that it generates statically built executables",
    "start": "601519",
    "end": "607240"
  },
  {
    "text": "you know binaries that are self-contained that do not need any additional libraries is kind of very",
    "start": "607240",
    "end": "612720"
  },
  {
    "text": "comfortable for attackers like you know they create their their back door they send it to the victim or you know they deploy it at the victim one way or the",
    "start": "612720",
    "end": "619079"
  },
  {
    "text": "other and then it just works right you don't have to think about you know is this DL present on the system or do I have to pull in additional libraries Etc",
    "start": "619079",
    "end": "626279"
  },
  {
    "text": "so this is something that makes running prog s very easy on victim machines where you do not control the environment",
    "start": "626279",
    "end": "633000"
  },
  {
    "text": "a long time ago like maybe 10 years ago it was kind of a problem because you cannot send binaries that are two or",
    "start": "633000",
    "end": "638440"
  },
  {
    "text": "three megabytes big to victims you know if your attack Vector is you know infected PDF or infected Word documents",
    "start": "638440",
    "end": "644480"
  },
  {
    "text": "then you know you cannot really send over email a PDF that ends up being 5 megabytes big because back back in the",
    "start": "644480",
    "end": "650760"
  },
  {
    "text": "day it would be rejected or maybe you know the victim uh you know has some limit on their mailbox or maybe they",
    "start": "650760",
    "end": "656480"
  },
  {
    "text": "have a slow connection that is not going to be able to retrieve that binary in Europe or in the US in the Western World",
    "start": "656480",
    "end": "663160"
  },
  {
    "text": "it used to be fine but you know if you think about victims that are in third world countries where the internet access is not as good and it used to be",
    "start": "663160",
    "end": "669600"
  },
  {
    "text": "some real a real issue for attackers now that you know the internet connectivity is pretty much well at least way better",
    "start": "669600",
    "end": "676040"
  },
  {
    "text": "in most parts of the world than having back doors that are know five or 10 maybe 20 megabytes is really not that",
    "start": "676040",
    "end": "681360"
  },
  {
    "text": "much of an issue anymore I think then second very good reason for using go as",
    "start": "681360",
    "end": "686639"
  },
  {
    "text": "an offensive language is going to be that reverse engineering is difficult",
    "start": "686639",
    "end": "692000"
  },
  {
    "text": "which I will get back to but also all the standard tools that we as Defenders",
    "start": "692000",
    "end": "697360"
  },
  {
    "text": "tend to use in order to figure out quickly if a program is malicious or is not tend to kind of break with go",
    "start": "697360",
    "end": "702959"
  },
  {
    "text": "language the reason for this and it ties into the discussion of why reverse enging go is annoying for us is that go",
    "start": "702959",
    "end": "709480"
  },
  {
    "text": "tends to really do its own thing right the assembly it generates really does not look like any other assembly it's",
    "start": "709480",
    "end": "714959"
  },
  {
    "text": "not like C or it's not like C++ or Deli that kind of tend to like look like distant cousins or even Brothers in some",
    "start": "714959",
    "end": "721519"
  },
  {
    "text": "cases go really does things its own way and all the automated methods for",
    "start": "721519",
    "end": "728320"
  },
  {
    "text": "analyzing code statically or all the maybe uh signatures you can recreate for",
    "start": "728320",
    "end": "733600"
  },
  {
    "text": "go language Etc but all the all tools that would try to recognize specific patterns in code are not going to work",
    "start": "733600",
    "end": "740279"
  },
  {
    "text": "because the code generated by go just looks like like nothing you've seen before so that's one reason and know the",
    "start": "740279",
    "end": "745680"
  },
  {
    "text": "final reason is reverse engineering it's really difficult for us because the",
    "start": "745680",
    "end": "750720"
  },
  {
    "text": "constructs that are generated by the ego compiler tend to be very unfamiliar to us and so the learning curve I would not",
    "start": "750720",
    "end": "757480"
  },
  {
    "text": "say it's that steep like uh you know you mentioned natly that I had released a few videos about it I think you know by",
    "start": "757480",
    "end": "763480"
  },
  {
    "text": "the end of the videos you can have like a rough idea of how to approach those programs so it's not that like it's not",
    "start": "763480",
    "end": "768839"
  },
  {
    "text": "like a an obstacle that is insurmountable it's something that eventually you will be able to figure out but when you've been working on C or",
    "start": "768839",
    "end": "776480"
  },
  {
    "text": "like similar looking code as see for 10 years and sometimes you learning",
    "start": "776480",
    "end": "781800"
  },
  {
    "text": "something new is not something that uh you are easily going to do because you are you have your comfort zone and then",
    "start": "781800",
    "end": "787720"
  },
  {
    "text": "you have to like discover something different and maybe you don't like to do this and maybe you have you know 10 easy",
    "start": "787720",
    "end": "793160"
  },
  {
    "text": "mware return SE that are waiting in the in the test list and maybe you're going to work on those first because it will allow you to end your day earlier next",
    "start": "793160",
    "end": "799839"
  },
  {
    "text": "Friday right so you you kind of mentioned that there's a assembly differences that make it hard to recognize are there any like specific",
    "start": "799839",
    "end": "806480"
  },
  {
    "text": "things that you've learned about go under the hood from you know like that differ from see like how functions are",
    "start": "806480",
    "end": "812720"
  },
  {
    "text": "called in the assembly or something like that yeah absolutely so one of the major",
    "start": "812720",
    "end": "818639"
  },
  {
    "text": "differences it's not really about the assembly itself it's about you know the static aspect of the executables is the",
    "start": "818639",
    "end": "824639"
  },
  {
    "text": "fact that all the functions are pulled inside the final binary and then you have this big program that's 2 megabytes",
    "start": "824639",
    "end": "831240"
  },
  {
    "text": "or 3 megabytes big just for a print hello world and now it's getting a bit better I think Ida pro has made",
    "start": "831240",
    "end": "837440"
  },
  {
    "text": "significant improvements in its later versions but maybe two to three years ago when you were opening a go program",
    "start": "837440",
    "end": "843360"
  },
  {
    "text": "you would have nothing recognized at all maybe you would be able to pull a few plugins here and there or Python scripts",
    "start": "843360",
    "end": "850199"
  },
  {
    "text": "that may or may not work and in that case if you were lucky you might have been able to create signatures for the",
    "start": "850199",
    "end": "856240"
  },
  {
    "text": "well-known functions and maybe start from there but it was really a huge ordeal now it's a bit better so at least",
    "start": "856240",
    "end": "862240"
  },
  {
    "text": "you are starting to get pretty reliably all the references to All the known functions Beyond this the calling",
    "start": "862240",
    "end": "868759"
  },
  {
    "text": "mention is I'm not going to say it's weird because like it's I mean it's as valid as any other one it's just not the",
    "start": "868759",
    "end": "874199"
  },
  {
    "text": "same one that we are used to seeing the main difference is that considering that go can return multiple return values",
    "start": "874199",
    "end": "882120"
  },
  {
    "text": "then you cannot you know have the same U system as we had to as we had before like for instance in the C program",
    "start": "882120",
    "end": "888360"
  },
  {
    "text": "return value goes into eax and that's it right no difference I mean the ax register of your CPU when it comes to go",
    "start": "888360",
    "end": "894600"
  },
  {
    "text": "language if you have three four or you know maybe more return values you know typically one return value and also some",
    "start": "894600",
    "end": "900320"
  },
  {
    "text": "error objects if I'm not mistaken then you cannot put all that into a single",
    "start": "900320",
    "end": "905759"
  },
  {
    "text": "CPU register it just doesn't work and so you tend to get values that well in the",
    "start": "905759",
    "end": "910800"
  },
  {
    "text": "past you would have all the arguments being passed through the stack not through pushes but direct moves from the",
    "start": "910800",
    "end": "916880"
  },
  {
    "text": "you know from the value into the stack directly so the instruction was not push which these assemblers or you know",
    "start": "916880",
    "end": "923639"
  },
  {
    "text": "automated analys tools they just like to see push push push and then go that's that's something that is easy for for",
    "start": "923639",
    "end": "928880"
  },
  {
    "text": "them to recognize but go would just do move this on the stack at this place move this on the stack at this place and",
    "start": "928880",
    "end": "933959"
  },
  {
    "text": "then you go into another function it knows because the compiler knows where the stuff ends up so it figures it out but you know the ID Pro looks at this",
    "start": "933959",
    "end": "940519"
  },
  {
    "text": "and like what the hell is this this memory has never been initialized before I can show this to you that was an issue",
    "start": "940519",
    "end": "945839"
  },
  {
    "text": "and then the return values were given back exactly the same so the program would just move back all the return",
    "start": "945839",
    "end": "951240"
  },
  {
    "text": "values onto the stack as well at places that it would be able to figure out later but then when you look at I the",
    "start": "951240",
    "end": "956759"
  },
  {
    "text": "pro then you know it sees okay values being moved on the stack you go back into the calling function and then you see references to the stack as well but",
    "start": "956759",
    "end": "963959"
  },
  {
    "text": "you know the offsets are going to be different because since you are returning from a function you know things have shifted a little bit and so",
    "start": "963959",
    "end": "969279"
  },
  {
    "text": "the offsets are not well do not work well anymore and so this is like another issue you have to face like figuring out",
    "start": "969279",
    "end": "974759"
  },
  {
    "text": "where your return values go was like it still is by the way a terrible Nightmare and finally there is this other key",
    "start": "974759",
    "end": "982319"
  },
  {
    "text": "difference and U this difference is the fact that usually the C compiler and",
    "start": "982319",
    "end": "987440"
  },
  {
    "text": "other similar compilers will tend to reserve some space on the stack for specific local variables and this tends",
    "start": "987440",
    "end": "995399"
  },
  {
    "text": "to be very reliable it doesn't move too much so when you have some variable in C you know it gets used some part of the",
    "start": "995399",
    "end": "1001360"
  },
  {
    "text": "program it's S one place on the stack and then that's it and if the program needs another local variable layer on then there's just another space located",
    "start": "1001360",
    "end": "1007759"
  },
  {
    "text": "for this in the stack and the go compiler tends to be very smart about these things and what it does is if it",
    "start": "1007759",
    "end": "1013680"
  },
  {
    "text": "sees that you know there used to be a variable at some place on the stack and it's not used anymore then it will feel like it's totally okay to reuse the same",
    "start": "1013680",
    "end": "1020839"
  },
  {
    "text": "space to store something else later which makes total sense I mean do not use more memory that you need to right",
    "start": "1020839",
    "end": "1026438"
  },
  {
    "text": "like the Google compiler is totally right in doing this but for me it's really really a problem because what I",
    "start": "1026439",
    "end": "1031798"
  },
  {
    "text": "do in Ida Pro is I try to figure out where the local variables are in the stack I name those positions by saying",
    "start": "1031799",
    "end": "1037918"
  },
  {
    "text": "okay this is the error variable this is the I don't know this is the integer that represents an iteration count or",
    "start": "1037919",
    "end": "1043959"
  },
  {
    "text": "whatever and I name or rename everything I can and then eventually stuff starts",
    "start": "1043959",
    "end": "1049440"
  },
  {
    "text": "to make sense because I know what represents what on the stack and I know what the variables are Etc but the thing",
    "start": "1049440",
    "end": "1055559"
  },
  {
    "text": "is if one position on the stack does not consistently represent a specific variable then I cannot rename things",
    "start": "1055559",
    "end": "1061320"
  },
  {
    "text": "anymore right there's just no way for me to do this and the tools that we have such as Ida I'm pretty sure gidra is",
    "start": "1061320",
    "end": "1066559"
  },
  {
    "text": "going to function the same way it's not going to allow me to say okay up to this point this variable should be named like",
    "start": "1066559",
    "end": "1072679"
  },
  {
    "text": "this and then from there on then it should have another name and then yet another Etc so this is like a very very",
    "start": "1072679",
    "end": "1080400"
  },
  {
    "text": "difficult thing for us is that you know trying to track down variables and return values even arguments is something extremely complex and",
    "start": "1080400",
    "end": "1087159"
  },
  {
    "text": "basically this is the normal flow of how you analyze a program you try to figure out what the variables are you try to",
    "start": "1087159",
    "end": "1092360"
  },
  {
    "text": "look at the functions and how they are called what they return and that kind of stuff and just you know doing those simple things that would be the basic",
    "start": "1092360",
    "end": "1098880"
  },
  {
    "text": "operations in building blocks of trying to understand what is going on in some random program are in themselves",
    "start": "1098880",
    "end": "1105200"
  },
  {
    "text": "extremely complex operations due to like optimization that were performed by the go compiler now the last thing I can",
    "start": "1105200",
    "end": "1112039"
  },
  {
    "text": "mention is that since version probably 16.1 or something like this or 1.16 I",
    "start": "1112039",
    "end": "1117360"
  },
  {
    "text": "guess in go the calling convention actually changed and they do things even smaller now which is pass some arguments",
    "start": "1117360",
    "end": "1124120"
  },
  {
    "text": "through the registers and not through the stack so it for me it doesn't change that much actually it makes things a little bit easier because at least you",
    "start": "1124120",
    "end": "1130200"
  },
  {
    "text": "know I know argument one is ECX argument two is edx from memory it might not be that one but you know generally it's",
    "start": "1130200",
    "end": "1136000"
  },
  {
    "text": "going to be at in a fixed register at least for the two first arguments and so I know where they are so that's way better but you know overall this doesn't",
    "start": "1136000",
    "end": "1143400"
  },
  {
    "text": "change the this bigger game of renaming things which is not possible anymore and then when it comes to the quick and easy",
    "start": "1143400",
    "end": "1149640"
  },
  {
    "text": "mode which is you know getting my super expensive ID Pro license that comes with a decompiler then you know I just open a",
    "start": "1149640",
    "end": "1155840"
  },
  {
    "text": "program press F5 and hopefully I can read whatever is going on in the program well that just doesn't work because you",
    "start": "1155840",
    "end": "1161039"
  },
  {
    "text": "know the constructs that are generated by the go compiler especially I think when it comes to function calls is",
    "start": "1161039",
    "end": "1166600"
  },
  {
    "text": "totally alien to Ida and you know every time you try to decompile code that uh comes from the from the go language you",
    "start": "1166600",
    "end": "1173720"
  },
  {
    "text": "just end up with something that has that makes absolutely no sense because again Ida tries to recreate pseudo C code and",
    "start": "1173720",
    "end": "1181240"
  },
  {
    "text": "pseudo C code has just no way of representing Concepts like multiple return values or that kind of stuff so",
    "start": "1181240",
    "end": "1188600"
  },
  {
    "text": "this is the way that go breaks everything that we hold dear in the reverse engineering world for anybody",
    "start": "1188600",
    "end": "1194080"
  },
  {
    "text": "who didn't watch the video or is not familiar with how to do reverse engineering I can in simple words say",
    "start": "1194080",
    "end": "1200480"
  },
  {
    "text": "that roughly you look at the instructions and then you try to kind of see entry point is usually main so this",
    "start": "1200480",
    "end": "1206960"
  },
  {
    "text": "is probably function main this is one thing that's being returned and then you kind of try to to follow that basically",
    "start": "1206960",
    "end": "1214039"
  },
  {
    "text": "this is what you do when you reverse engineer yeah actually maybe I can say a few words about what reverse engineering",
    "start": "1214039",
    "end": "1219960"
  },
  {
    "text": "is for people that you know might not be familiar with it the general idea is that we try to understand what a program",
    "start": "1219960",
    "end": "1226400"
  },
  {
    "text": "does even though we do not have access to the source code like this is the typical case for malware because you know we cannot call up malware authors",
    "start": "1226400",
    "end": "1232880"
  },
  {
    "text": "and tell them okay please show me the code because I don't really understand what this was going on there they just we don't know where they are they don't",
    "start": "1232880",
    "end": "1238520"
  },
  {
    "text": "want to be found and they don't want to give us their code anyway so what we have to do then is like we have no other",
    "start": "1238520",
    "end": "1244520"
  },
  {
    "text": "solution but to look at the program and see what instructions the program is sending to the CPU and then try to",
    "start": "1244520",
    "end": "1251120"
  },
  {
    "text": "figure out from there based on those instructions that are working at the CPU level what the higher level like of code",
    "start": "1251120",
    "end": "1258679"
  },
  {
    "text": "that might have generated this type of instruction might have been so this not really it's not entirely a guessing game",
    "start": "1258679",
    "end": "1263720"
  },
  {
    "text": "because it's sort of a mostly exact science but also it's a very unnatural",
    "start": "1263720",
    "end": "1268919"
  },
  {
    "text": "operation to perform because this CPU language was really made for CPUs and machines and for us humans like it's",
    "start": "1268919",
    "end": "1276480"
  },
  {
    "text": "extremely difficult to understand like it's really it's really not something natural for human beings to read that",
    "start": "1276480",
    "end": "1282480"
  },
  {
    "text": "those instruction it doesn't make sense to us and it really requires a lot of effort to figure out what the programmer",
    "start": "1282480",
    "end": "1288120"
  },
  {
    "text": "intent was just by looking at those instructions and so this is why actually we are looking for reverse Engineers I",
    "start": "1288120",
    "end": "1293640"
  },
  {
    "text": "mean not just at kaski just the whole industry is looking for people that are able to do this because it's something",
    "start": "1293640",
    "end": "1299720"
  },
  {
    "text": "that is that most people find unpleasant and I have to say myself I do find it unpleasant most of the times but you",
    "start": "1299720",
    "end": "1305159"
  },
  {
    "text": "know at the end of the day when I I am able to figure out what was actually happening in the program I feel very good about myself and so this is the",
    "start": "1305159",
    "end": "1310919"
  },
  {
    "text": "reason why you know I still do this job but overall this is kind of a difficult",
    "start": "1310919",
    "end": "1316400"
  },
  {
    "text": "thing to do and it's kind of painful and uh takes a lot of time to be able to figure out even the simplest programs",
    "start": "1316400",
    "end": "1322679"
  },
  {
    "text": "especially when the tooling is not even there for you yes just for some reference like the ratio between lines",
    "start": "1322679",
    "end": "1329039"
  },
  {
    "text": "of say go to assembly do you know what that ratio is just like a rough it's like one to 100 one to a th one to",
    "start": "1329039",
    "end": "1335960"
  },
  {
    "text": "that's a good question it would depend on the complexity of the line know in go I'm pretty sure that you can do function calls that are chained together in a",
    "start": "1335960",
    "end": "1342320"
  },
  {
    "text": "pretty like long lines maybe I'm not sure if it's like the compliant to the official GH styling code or something",
    "start": "1342320",
    "end": "1348080"
  },
  {
    "text": "like this but if you were to do this then you would have a I mean let's take it from the other way if you have some",
    "start": "1348080",
    "end": "1353960"
  },
  {
    "text": "normal looking go code like a hello world or something like this it would probably translate into 10 or 15 lines",
    "start": "1353960",
    "end": "1360240"
  },
  {
    "text": "of assembly so i' would say the default would be 15 lines of assembly for one line of actual go code but then if you",
    "start": "1360240",
    "end": "1367919"
  },
  {
    "text": "get up into lines of codes that are a bit more complex or that check or that return multiple return values or",
    "start": "1367919",
    "end": "1374159"
  },
  {
    "text": "function calls then this can bit get a bit bigger but this is still going to be the right B Park okay yeah that gives me",
    "start": "1374159",
    "end": "1379320"
  },
  {
    "text": "a good idea what is it for other languages like is it a lot more is it a lot less is it roughly the same I would",
    "start": "1379320",
    "end": "1385400"
  },
  {
    "text": "say it's uh probably going to be mostly the same C++ tends to be very uh like",
    "start": "1385400",
    "end": "1391360"
  },
  {
    "text": "tends to generate a lot of code it's very comparable to us to go C might be a bit more direct like the translation",
    "start": "1391360",
    "end": "1398159"
  },
  {
    "text": "between C and assembly is going to be a bit more how would I say it in English the correspondence between C code and",
    "start": "1398159",
    "end": "1404880"
  },
  {
    "text": "the assembly is going to be a bit more direct that's it but otherwise I would say this is a like a common ratio for",
    "start": "1404880",
    "end": "1411159"
  },
  {
    "text": "languages the problem is not that go generates more assembly the problem is that the assembly generates like is not",
    "start": "1411159",
    "end": "1416840"
  },
  {
    "text": "the one that we are used to seeing and you know we don't like that interesting to see if in one or two years from now it will be more supportive and more",
    "start": "1416840",
    "end": "1424279"
  },
  {
    "text": "pattern recognition working well that's the thing right it kind of depends on the attackers like if we do end up",
    "start": "1424279",
    "end": "1430279"
  },
  {
    "text": "seeing more and more go tools out there in the wild then uh there was going to be pressure on the tool authors like",
    "start": "1430279",
    "end": "1437240"
  },
  {
    "text": "idaf like gidra Etc to implement better detection and you know better support for those languages I'm pretty sure that",
    "start": "1437240",
    "end": "1444360"
  },
  {
    "text": "since last time I tried using a the compiler on some go program Ida has made improvements and it's probably not as",
    "start": "1444360",
    "end": "1450440"
  },
  {
    "text": "broken as it used to be but if we keep seeing offensive tools written in go then I'm pretty sure that the tools will",
    "start": "1450440",
    "end": "1455919"
  },
  {
    "text": "get better we will still have to figure out how the go assembly Works especially if it changes again in the future but",
    "start": "1455919",
    "end": "1462279"
  },
  {
    "text": "overall at least the support in the last years has improved tremendously and I think it will continue to do so Al also",
    "start": "1462279",
    "end": "1469320"
  },
  {
    "text": "in the future if there is a need to and I would guess that go is only going to become more prevalent when it comes to",
    "start": "1469320",
    "end": "1475720"
  },
  {
    "text": "offensive software because of all the reasons that you mentioned yeah exactly some specific questions you mentioned",
    "start": "1475720",
    "end": "1482919"
  },
  {
    "text": "that you kind of thinking out loud about the behavior you see in Ida Pro when you",
    "start": "1482919",
    "end": "1488200"
  },
  {
    "text": "were looking at the Go code that you loaded there or the binary of it that you loaded there so some I'm going to",
    "start": "1488200",
    "end": "1495600"
  },
  {
    "text": "describe two things that you mentioned tell me how you you you think if it's good if it's bad how would it compare to other languages just as a interesting",
    "start": "1495600",
    "end": "1502120"
  },
  {
    "text": "kind of point it can get too deep so we'll try to keep it at a slightly higher level for everybody who's out of",
    "start": "1502120",
    "end": "1508720"
  },
  {
    "text": "U who's kind of hearing about this and not very well familiar so for example",
    "start": "1508720",
    "end": "1513840"
  },
  {
    "text": "you mentioned that skiing to the next instruction lands you in another place in the code of the CPU instruction yeah",
    "start": "1513840",
    "end": "1520440"
  },
  {
    "text": "exactly so this is something that was super surprising to me which is when I reverse engineer a program so you can",
    "start": "1520440",
    "end": "1525480"
  },
  {
    "text": "look at it statically in Ida Pro which means you display the instructions and you read them like a book or there's",
    "start": "1525480",
    "end": "1531080"
  },
  {
    "text": "another approach which is not like opposite but maybe more like a complement to it which is to look at the",
    "start": "1531080",
    "end": "1536760"
  },
  {
    "text": "program inside the debugger you know debugger just they just work exactly the same as in the software development world like you execute the code",
    "start": "1536760",
    "end": "1542600"
  },
  {
    "text": "instruction by instruction or line by line and you can see the state of the various variables except for us you know",
    "start": "1542600",
    "end": "1547799"
  },
  {
    "text": "we don't have the source code so it's not lines of code it's just assembly instructions but we can still watch them",
    "start": "1547799",
    "end": "1553240"
  },
  {
    "text": "execute one by one and we can see the CPU registers getting updated Etc and",
    "start": "1553240",
    "end": "1558279"
  },
  {
    "text": "when I was doing this with the go programs it turned out that I was very surprised to see that sometimes I would step from one instruction to the next",
    "start": "1558279",
    "end": "1564039"
  },
  {
    "text": "and I would end up at a totally random place somewhere else in the program and eventually like by doing some Google",
    "start": "1564039",
    "end": "1570120"
  },
  {
    "text": "searches Etc I figured out that it is actually the um I don't know if it's the go Schuler that is involved in there",
    "start": "1570120",
    "end": "1576399"
  },
  {
    "text": "probably it is but there is a garbage collector that is in charge of you know freeing the variables that are not used",
    "start": "1576399",
    "end": "1582120"
  },
  {
    "text": "anymore and sometimes you know it takes priority and starts you know freeing stuff and then once it's done running it",
    "start": "1582120",
    "end": "1588000"
  },
  {
    "text": "takes you back where you were in the program and so this is something that is super jarring for us as reverse",
    "start": "1588000",
    "end": "1593320"
  },
  {
    "text": "Engineers because we are looking at a very specific place in the program we are frowning looking very concentrated",
    "start": "1593320",
    "end": "1599320"
  },
  {
    "text": "and focused because we are looking super serious and then you we press F7 F7 you know we step into the next instru",
    "start": "1599320",
    "end": "1605600"
  },
  {
    "text": "suddenly we end up somewhere totally different even though we didn't see any jump instruction and suddenly it's like oh something is going on what's",
    "start": "1605600",
    "end": "1611440"
  },
  {
    "text": "happening with my program there because it's not supposed to to just go somewhere else now once I was able to",
    "start": "1611440",
    "end": "1616919"
  },
  {
    "text": "figure out what was was going on and understand that I just have to get out of this garbage collector function and",
    "start": "1616919",
    "end": "1622279"
  },
  {
    "text": "it will take me back exactly where I used to be and things were fine but initially I was it was another one of",
    "start": "1622279",
    "end": "1628360"
  },
  {
    "text": "Go's indos syncrasy that felt Super Alien to me and that like I wasn't happy about at first so that means it's not",
    "start": "1628360",
    "end": "1634440"
  },
  {
    "text": "something behavior that you see often in other languages oh no it's something I had never seen before I know that other",
    "start": "1634440",
    "end": "1641120"
  },
  {
    "text": "languages they do have their own garbage collectors but when it comes to Java we don't really have to look at the instructions because Java is compiled to",
    "start": "1641120",
    "end": "1647799"
  },
  {
    "text": "code so we just read the code disassembled or decompiled maybe and get",
    "start": "1647799",
    "end": "1653720"
  },
  {
    "text": "access to the something that looks like the source code it may be aisc which means that it will be modified in a way",
    "start": "1653720",
    "end": "1659840"
  },
  {
    "text": "that the variable names are not there anymore or it has been specifically engineered to be harder to read but in",
    "start": "1659840",
    "end": "1665440"
  },
  {
    "text": "that case or for net or for Java we just never have to worry about CPU instructions because they are not that",
    "start": "1665440",
    "end": "1670600"
  },
  {
    "text": "relevant to the language so go was for me a big surprise on that level because",
    "start": "1670600",
    "end": "1675679"
  },
  {
    "text": "this was the first time I had to encounter like debugging a program and being you know taken far away somewhere",
    "start": "1675679",
    "end": "1681480"
  },
  {
    "text": "without even asking to and you know it kind of happens on a regular basis too and then one more question about another",
    "start": "1681480",
    "end": "1687240"
  },
  {
    "text": "behavior that was a peculiar that you pointed out that at some point when you had two following instructions and they",
    "start": "1687240",
    "end": "1693600"
  },
  {
    "text": "were using the same variable you didn't see the return but because it was right the one after or before I'm not sure",
    "start": "1693600",
    "end": "1699440"
  },
  {
    "text": "exactly if I'm I remember exactly the part that you refer to but what I'm I noticed is yeah this might be one of the",
    "start": "1699440",
    "end": "1705360"
  },
  {
    "text": "other ways that the compiler in go is being very smart which is that if you have chained function calls it turns out",
    "start": "1705360",
    "end": "1711720"
  },
  {
    "text": "I think that the way that arguments from one functions are returned on the stack happen to be the exact place where they",
    "start": "1711720",
    "end": "1718440"
  },
  {
    "text": "would be considered as Arguments for the next function so you don't really see the data moving back and forth from the",
    "start": "1718440",
    "end": "1725240"
  },
  {
    "text": "functions just you know you have chained calls and the compiler knows that whatever was returned happens to be at",
    "start": "1725240",
    "end": "1730640"
  },
  {
    "text": "the right place for the next one Etc so one of these other things that we are used to seeing like we see a function we",
    "start": "1730640",
    "end": "1737760"
  },
  {
    "text": "look at the input we look at what goes in and what goes out basically this helps us understand what is going on and",
    "start": "1737760",
    "end": "1743159"
  },
  {
    "text": "with go sometimes you just don't see that because it's hidden from you like the complexity tends to be well the",
    "start": "1743159",
    "end": "1748919"
  },
  {
    "text": "complexity is still there but you know the all these operations are massed by the way that the stack is constructed by",
    "start": "1748919",
    "end": "1755399"
  },
  {
    "text": "the go compiler which again is a super good thing for go programmers because it means that you don't have those memory",
    "start": "1755399",
    "end": "1760840"
  },
  {
    "text": "movements that are taking place in the program that are actually not that not that useful and every time you have a",
    "start": "1760840",
    "end": "1766279"
  },
  {
    "text": "movement that involves the memory in a program it takes a lot of time I mean not a lot compared to our human",
    "start": "1766279",
    "end": "1772880"
  },
  {
    "text": "existence but if you look at how a CPU works you have the CPU that has some",
    "start": "1772880",
    "end": "1778760"
  },
  {
    "text": "memory regions inside of it which are called the registers and then you have the ram as well you know when you allocate memory in C program with a",
    "start": "1778760",
    "end": "1785200"
  },
  {
    "text": "maloc or C aloc it goes into the Ram or when you move something into the stack it's also a region of memory that is on",
    "start": "1785200",
    "end": "1792320"
  },
  {
    "text": "the inside the ram you know the ram stick of the computer every time the CPU has to talk to the ram stick",
    "start": "1792320",
    "end": "1798120"
  },
  {
    "text": "it has to be an electrical signal that goes from the CPU through a bus to the motherboard and the motherboard",
    "start": "1798120",
    "end": "1803200"
  },
  {
    "text": "understands it has to request know specific region of data to the RAM sticks and you know you have to to have",
    "start": "1803200",
    "end": "1808840"
  },
  {
    "text": "the response that goes back the same way converted into electrical signals so",
    "start": "1808840",
    "end": "1813919"
  },
  {
    "text": "it's pretty fast of course when it comes to it's probably in the ballpark of microsc or milliseconds but compared to",
    "start": "1813919",
    "end": "1821039"
  },
  {
    "text": "just the CPU talking to itself or you know moving stuff inside of the physical",
    "start": "1821039",
    "end": "1826240"
  },
  {
    "text": "area that is the CPU or just not moving things at all because they are already in the right place then you get performance increases that I think are",
    "start": "1826240",
    "end": "1832080"
  },
  {
    "text": "pretty significant especially considering you know the amount of function go that you have in the program it's very interesting to hear about this",
    "start": "1832080",
    "end": "1838159"
  },
  {
    "text": "from the perspective of somebody who's kind of poking this out from the outside no this this makes me want to dive more",
    "start": "1838159",
    "end": "1843440"
  },
  {
    "text": "into the reverse engineering just to learn more about the [Music]",
    "start": "1843440",
    "end": "1856240"
  },
  {
    "text": "internals hey friends this episode is brought to you by my friends and potentially your",
    "start": "1856240",
    "end": "1862639"
  },
  {
    "text": "friends too at fire hydrant and I'm here with Robert Ross founder and CEO of fire",
    "start": "1862639",
    "end": "1867880"
  },
  {
    "text": "hydrant and Robert there are several options out there for Incident Management but what is it that makes",
    "start": "1867880",
    "end": "1873760"
  },
  {
    "text": "fire hydrant different the reason that we think that fire hydrant is is on to something is cuz we're meeting companies",
    "start": "1873760",
    "end": "1880360"
  },
  {
    "text": "really where they are we faced the same problems that every company in the industry that is building and releasing",
    "start": "1880360",
    "end": "1886720"
  },
  {
    "text": "software is also facing so where you want people to be able to sign up for fire hydrant",
    "start": "1886720",
    "end": "1892559"
  },
  {
    "text": "and immediately be able to kick off an incident using the best practices that we've built and we've experienced and",
    "start": "1892559",
    "end": "1899519"
  },
  {
    "text": "have gathered through the other amazing customers that use our tool it really is a very quick time to value and we want",
    "start": "1899519",
    "end": "1905279"
  },
  {
    "text": "people to have a long jump from where they are to where they want to be in Incident Management I love it thank you",
    "start": "1905279",
    "end": "1912039"
  },
  {
    "text": "Robert small teams up to 10 people can get started for free with all fire hydrant featur features included there's",
    "start": "1912039",
    "end": "1917960"
  },
  {
    "text": "no credit card required to sign up they are making it too easy to get started so check them out at fir hydrant dcom again",
    "start": "1917960",
    "end": "1925559"
  },
  {
    "text": "fireh hydrant [Music]",
    "start": "1925559",
    "end": "1946080"
  },
  {
    "text": "decom so let's maybe move to a bit of a higher",
    "start": "1946080",
    "end": "1952559"
  },
  {
    "text": "level now ghost Community is kind of big on consistency you know we have like the linters that yeah keep everything",
    "start": "1952559",
    "end": "1959000"
  },
  {
    "text": "consistent go format keeps everything consistent does that actually help with reverse engineering at all you think",
    "start": "1959000",
    "end": "1964360"
  },
  {
    "text": "just the the only one way to do thing and or at the level that you're doing",
    "start": "1964360",
    "end": "1969799"
  },
  {
    "text": "reverse engineering and you think it doesn't matter it's a good question I have to say I don't know that much about",
    "start": "1969799",
    "end": "1975080"
  },
  {
    "text": "the linter itself I have written a bit of C code myself when I was trying to like look at assembly code and write go",
    "start": "1975080",
    "end": "1981480"
  },
  {
    "text": "at the same time that would generate the same thing so this is my extent of the experience with the language and I really noticed something which is that",
    "start": "1981480",
    "end": "1987880"
  },
  {
    "text": "the go language is super strict I have in the past Ed the the expression maybe",
    "start": "1987880",
    "end": "1993080"
  },
  {
    "text": "is going to make you laugh I was saying you know that in go if you don't use the return return values then the program is",
    "start": "1993080",
    "end": "1999000"
  },
  {
    "text": "complaining if you have unused variables and the program complains again right and I was saying that to me go feels a",
    "start": "1999000",
    "end": "2004960"
  },
  {
    "text": "bit like fascist python like it doesn't let you do anything that you want except you know if it's it follows the rules",
    "start": "2004960",
    "end": "2010519"
  },
  {
    "text": "very strictly for us it doesn't matter too much in the sense that those checks",
    "start": "2010519",
    "end": "2016399"
  },
  {
    "text": "are enforced at the compiler level right it's something that if the code is not compliant then you will not get a binary",
    "start": "2016399",
    "end": "2022600"
  },
  {
    "text": "at the end so it does not add additional stuff inside the binary and also if",
    "start": "2022600",
    "end": "2027880"
  },
  {
    "text": "there were some variable that is unused inside the program then as a reverse Engineers we would not care right",
    "start": "2027880",
    "end": "2033320"
  },
  {
    "text": "because we would just consider that you know it's not used anymore or probably the programmer doesn't need it for",
    "start": "2033320",
    "end": "2038919"
  },
  {
    "text": "whatever reason and we would just move on so for us it doesn't really change that much although knowing about those",
    "start": "2038919",
    "end": "2045360"
  },
  {
    "text": "guarantees kind of allows us to make more informed guesses about what is going on in the program like for",
    "start": "2045360",
    "end": "2051079"
  },
  {
    "text": "instance when I do see a function that returns multiple return values then I am not a go developer but still I am always",
    "start": "2051079",
    "end": "2057839"
  },
  {
    "text": "going to assume that the last value returned is going to be the object or the first one I don't recall but I would",
    "start": "2057839",
    "end": "2063200"
  },
  {
    "text": "have to check but I know that since this is the normal way that people supposed to write go code and since I know that",
    "start": "2063200",
    "end": "2068878"
  },
  {
    "text": "the compiler is going to force people to do it even if they don't want to then probably I can base my hypothesis on",
    "start": "2068879",
    "end": "2075398"
  },
  {
    "text": "those conventions which is actually pretty helpful in that regard so would you say that go is a good language to",
    "start": "2075399",
    "end": "2081720"
  },
  {
    "text": "pick up for hacker or for a researcher in security well I'm not really in the",
    "start": "2081720",
    "end": "2087599"
  },
  {
    "text": "business of helping attackers you know being more efficient at writing a offensive tools but if I were to then as",
    "start": "2087599",
    "end": "2093560"
  },
  {
    "text": "I would guess that go is probably a a good language to pick up basically anything that uh is away from the",
    "start": "2093560",
    "end": "2100240"
  },
  {
    "text": "traditional languages is going to be more annoying for us because we are less used to it I think rust is going to be a",
    "start": "2100240",
    "end": "2106160"
  },
  {
    "text": "good choice as well I haven't looked at rust too much myself I have a cooworker that did and also released some videos",
    "start": "2106160",
    "end": "2111720"
  },
  {
    "text": "and from what he's saying it's like a C++ but harder which is a kind of a high",
    "start": "2111720",
    "end": "2117119"
  },
  {
    "text": "standard to beat so yeah just uh go and rust would be my uh my advice there",
    "start": "2117119",
    "end": "2124040"
  },
  {
    "text": "although it's not advice please don't so if those are the kind of the new school ones right go and rust what are like",
    "start": "2124040",
    "end": "2130480"
  },
  {
    "text": "historically what languages has everyone used on the hacking side and on the the research side well historically",
    "start": "2130480",
    "end": "2136800"
  },
  {
    "text": "everything has been used you know Murphy's Law which says that if there is a way to misuse something that it's",
    "start": "2136800",
    "end": "2142119"
  },
  {
    "text": "going to be misused right and programming languages have proven time and again that law the thing is we are",
    "start": "2142119",
    "end": "2149359"
  },
  {
    "text": "recipients of whatever the hackers are doing right we do not get to choose what we are going to work on like hackers are",
    "start": "2149359",
    "end": "2154880"
  },
  {
    "text": "going to write their their tools and they're going to to choose whatever language is familiar for them or whatever language feels comfortable or",
    "start": "2154880",
    "end": "2161040"
  },
  {
    "text": "whatever and this is why we end up sometimes facing the most ridiculous stuff like uh malware written in Auto it",
    "start": "2161040",
    "end": "2167960"
  },
  {
    "text": "I don't know if you know about this it's like a it's some weird scripting language that uh is used for UI testing",
    "start": "2167960",
    "end": "2175720"
  },
  {
    "text": "and it basically allows you to simulate keystrokes and mouse clicks well it turns out people write mware with this",
    "start": "2175720",
    "end": "2181880"
  },
  {
    "text": "as well anything that has ever been available as a programming language has been U one way or the other eventually",
    "start": "2181880",
    "end": "2187960"
  },
  {
    "text": "been used for malware so the thing is this is our Bane as reverse Engineers",
    "start": "2187960",
    "end": "2193079"
  },
  {
    "text": "which is that we do receive malware and whatever it is we have to work on it because at the end of the day our job is",
    "start": "2193079",
    "end": "2198920"
  },
  {
    "text": "to figure out what was going on in that specific incident and so whether it's C or C++ or it's go or Deli or you know",
    "start": "2198920",
    "end": "2205760"
  },
  {
    "text": "Pascal whatever we just have earling maybe no earling I'm pretty sure there's earling malware whatever we receive we",
    "start": "2205760",
    "end": "2212720"
  },
  {
    "text": "have to work on and so we cannot really afford to be picky about what languages",
    "start": "2212720",
    "end": "2217839"
  },
  {
    "text": "we get interested in we just have to be able to adapt to whatever comes because",
    "start": "2217839",
    "end": "2223119"
  },
  {
    "text": "everything will come eventually so you just mentioned right there like you get your researches on whatever like hackers",
    "start": "2223119",
    "end": "2228920"
  },
  {
    "text": "leave behind let that be malware or whatever what what other things do people leave behind is it just the actual binaries or like are you digging",
    "start": "2228920",
    "end": "2236240"
  },
  {
    "text": "into logs and other things yeah so in a typical incident scenario then you would",
    "start": "2236240",
    "end": "2242160"
  },
  {
    "text": "have people that go into what we call forensics mode they will collect all the logs they will collect all the hard",
    "start": "2242160",
    "end": "2248800"
  },
  {
    "text": "drives and try to figure out exactly what happened inside the network they will collect not just machine logs but",
    "start": "2248800",
    "end": "2254160"
  },
  {
    "text": "you know DNS logs they will collect whatever event was generated by the windows machines they will collect you",
    "start": "2254160",
    "end": "2260280"
  },
  {
    "text": "know whatever was saved by the HTTP proxy and so on all the net flow if it's available usually it's not usually not",
    "start": "2260280",
    "end": "2267119"
  },
  {
    "text": "that much information is actually available in case of an incident but you know that's someone else's problem I'm I'm not an incident responder and I have",
    "start": "2267119",
    "end": "2272800"
  },
  {
    "text": "enough stuff to worry about but what I focus on is the actual malware we do",
    "start": "2272800",
    "end": "2279000"
  },
  {
    "text": "have information through the anti virus from kasperski that gives us information",
    "start": "2279000",
    "end": "2284119"
  },
  {
    "text": "about the execution context so we can see that okay this process launch this process Etc so we have this type of",
    "start": "2284119",
    "end": "2289240"
  },
  {
    "text": "information but in a bigger incident context then you would get a much clearer picture about everything that",
    "start": "2289240",
    "end": "2295240"
  },
  {
    "text": "went on on the in the victim's Network and this this whole Trove of information would allow you to reconstruct the whole",
    "start": "2295240",
    "end": "2302000"
  },
  {
    "text": "timeline of the incident so you would see that you know at this time you had some suspicious requests on you know some web front end and then you would",
    "start": "2302000",
    "end": "2308720"
  },
  {
    "text": "see that there is a file created at a later date on the same web server and then you would maybe see some weird",
    "start": "2308720",
    "end": "2314040"
  },
  {
    "text": "suspicious request to the active directory server with some golden ticket with a mimicat or something well those",
    "start": "2314040",
    "end": "2320359"
  },
  {
    "text": "kind of lateral movement methods Etc and at the end of the day somewhere some attacker would have to drop some",
    "start": "2320359",
    "end": "2326760"
  },
  {
    "text": "binaries to help them either persist on the victim machine or get further into",
    "start": "2326760",
    "end": "2332400"
  },
  {
    "text": "the network or deeper because they will try to do whatever they can without deploying anything some very careful attackers will not",
    "start": "2332400",
    "end": "2339119"
  },
  {
    "text": "deploy anything on dis and they will just deploy whatever program that they need inside the memory which is very",
    "start": "2339119",
    "end": "2345160"
  },
  {
    "text": "stealthy but also if the machine happens to reboot then you know everything that was in the memory just goes away and so",
    "start": "2345160",
    "end": "2350400"
  },
  {
    "text": "if you have no way of coming back onto the victim machine then you know all the access that you have deployed is lost some very stealthy attackers will decide",
    "start": "2350400",
    "end": "2357160"
  },
  {
    "text": "that they would rather lose access and leave friends exra on hard drive most of them like 90% 99% of them will feel like",
    "start": "2357160",
    "end": "2364880"
  },
  {
    "text": "they would rather they leave some kind of Trace knowing that most people don't look anyway and then leave stuff for us",
    "start": "2364880",
    "end": "2371839"
  },
  {
    "text": "to analyze later if we figure out that there was an incident and you know someone goes there collects everything",
    "start": "2371839",
    "end": "2378040"
  },
  {
    "text": "and just sends the binaries back to us you said the incident response teams are the ones that collect all that data and",
    "start": "2378040",
    "end": "2383960"
  },
  {
    "text": "all of that yeah exactly so we do have such teams at kasperski but most cyber security companies will have either",
    "start": "2383960",
    "end": "2390079"
  },
  {
    "text": "their internal instant responders or swop a contractor that they know of and",
    "start": "2390079",
    "end": "2395280"
  },
  {
    "text": "that can be called at any hour of the day or the night and that will come and you know just exactly swoop in with the",
    "start": "2395280",
    "end": "2402560"
  },
  {
    "text": "big guns if something weird took place now it doesn't mean that we do not work in direct interaction with those teams",
    "start": "2402560",
    "end": "2408839"
  },
  {
    "text": "it means that you know this is their job and then you know we get we are more back office guys where you know we get",
    "start": "2408839",
    "end": "2414200"
  },
  {
    "text": "escalated some stuff and then we look into it but most of the intelligence",
    "start": "2414200",
    "end": "2419400"
  },
  {
    "text": "that we create doesn't actually come from instance response cases I think it would be a good idea if we were able to",
    "start": "2419400",
    "end": "2425079"
  },
  {
    "text": "gain more information from that source as well I think it's a very valuable one but we work mostly on the Telemetry",
    "start": "2425079",
    "end": "2431160"
  },
  {
    "text": "collected by our antivirus you know all the samples that are suspicious or that are uploaded through the cloud for",
    "start": "2431160",
    "end": "2437119"
  },
  {
    "text": "analysis and then we can also swoop in but you know very much more quietly and look at all this data and see okay this",
    "start": "2437119",
    "end": "2444280"
  },
  {
    "text": "looks interesting because you know we've never seen this before or it looks like some mware that we saw 10 years ago and",
    "start": "2444280",
    "end": "2449839"
  },
  {
    "text": "we haven't seen since and you it has some modifications and then we are interested in what happened since then",
    "start": "2449839",
    "end": "2455040"
  },
  {
    "text": "right but it's not really our work tends to be a bit disconnected from the actual incidents and really more focused on",
    "start": "2455040",
    "end": "2461079"
  },
  {
    "text": "looking at the Big Data Lake that we have and try to understand what is relevant inside of it that's cool thanks",
    "start": "2461079",
    "end": "2467599"
  },
  {
    "text": "for that that Insight from the other side of this equation what are some tips",
    "start": "2467599",
    "end": "2472960"
  },
  {
    "text": "you can give for writing a secure software for people who do go or in",
    "start": "2472960",
    "end": "2478240"
  },
  {
    "text": "general if it's not specific to go it's also useful yeah I think one of the main appeals of go is that you don't really",
    "start": "2478240",
    "end": "2484880"
  },
  {
    "text": "need to think about security as much as with other languages go is a memory safe language unless I'm mistaken and the",
    "start": "2484880",
    "end": "2491800"
  },
  {
    "text": "compiler is never going to let you do stupid stuff like create an array that is too small and then you know write",
    "start": "2491800",
    "end": "2497960"
  },
  {
    "text": "stuff that goes out of it like it's not just not possible so it eliminates a whole lot of bug classes which we call",
    "start": "2497960",
    "end": "2504839"
  },
  {
    "text": "memory Corruptions it's just not going to happen you cannot do this to yourself and go and it means that all the old",
    "start": "2504839",
    "end": "2510640"
  },
  {
    "text": "school buffer overflows that plagued all the C and C++ programs for dozens of",
    "start": "2510640",
    "end": "2515720"
  },
  {
    "text": "years by now just are not going to ever happen in the go language it doesn't mean that the program is going to be",
    "start": "2515720",
    "end": "2522680"
  },
  {
    "text": "like perfectly safe from any security issues but the issues are not going to be related to oh I made a programming",
    "start": "2522680",
    "end": "2529079"
  },
  {
    "text": "mistake and uh there is a bug in my program it's going to be exploited it's going to be more related to design",
    "start": "2529079",
    "end": "2534839"
  },
  {
    "text": "issues like the memory safe language does not help you implement a secure",
    "start": "2534839",
    "end": "2540000"
  },
  {
    "text": "authentication scheme for instance it doesn't help you write a wellth thought out Network protocol I thought that go",
    "start": "2540000",
    "end": "2546680"
  },
  {
    "text": "really helps you with cryptography I noticed that it's very difficult to choose algorithms that are not safe like",
    "start": "2546680",
    "end": "2552319"
  },
  {
    "text": "by default you can only I don't think you can choose the algorithms and go by like I know you can do AES for instance",
    "start": "2552319",
    "end": "2558520"
  },
  {
    "text": "but like the cipher mode or the those kind of stuff tends to be unless I'm mistaken no selected by default for you",
    "start": "2558520",
    "end": "2564960"
  },
  {
    "text": "and the defaults are good so you're not going to be making those mistakes but oh yeah the IV something I was working on",
    "start": "2564960",
    "end": "2571640"
  },
  {
    "text": "some code in go that was uh relying on AES I was looking at trying to figure",
    "start": "2571640",
    "end": "2577040"
  },
  {
    "text": "out exactly how the IV was generated and so on I was saying that nowhere in the developer code and doing some research I",
    "start": "2577040",
    "end": "2583000"
  },
  {
    "text": "noticed that it was actually go that would by itself generate an IV for the",
    "start": "2583000",
    "end": "2588480"
  },
  {
    "text": "encryption this initialization vector and then it would append it to the uh somewhere in the final encrypted buffer",
    "start": "2588480",
    "end": "2595920"
  },
  {
    "text": "and so usually in other languages this is something you would have to do on your own and this is like a big Avenue",
    "start": "2595920",
    "end": "2601880"
  },
  {
    "text": "for making mistakes like if you choose a stupid IV like just Zer or if you do not select one at all then you're going to",
    "start": "2601880",
    "end": "2607599"
  },
  {
    "text": "have encryption problems go would not let you do this so it's very obvious to me that go was created with security in",
    "start": "2607599",
    "end": "2614119"
  },
  {
    "text": "mind not for the developers but by the go creators like they don't want you to shoot yourself in the foot and you know",
    "start": "2614119",
    "end": "2619599"
  },
  {
    "text": "they going to make sure that there's no way for you to do it unless you really really want to even though you do have",
    "start": "2619599",
    "end": "2625040"
  },
  {
    "text": "all those kinds of protections cryptography like can be misused like if you choose a bad key then you know",
    "start": "2625040",
    "end": "2631440"
  },
  {
    "text": "nobody's going to save you from that if your protocol you doesn't work then again you cannot be protected from it",
    "start": "2631440",
    "end": "2637800"
  },
  {
    "text": "either but I think it allows people to focus on design flaws instead of programming flaws and this is already",
    "start": "2637800",
    "end": "2645160"
  },
  {
    "text": "like a a huge burden off the shoulders of developers that is a very interesting Insight that's interesting I see a lot",
    "start": "2645160",
    "end": "2651559"
  },
  {
    "text": "of complaints outside of kind of the go Community just you know like Hacker News about go choosing your defaults for like",
    "start": "2651559",
    "end": "2659359"
  },
  {
    "text": "like TLS or not letting you do certain things but that's one I'm firmly on board with if I don't want to if I don't",
    "start": "2659359",
    "end": "2665640"
  },
  {
    "text": "need to think about it I don't want to and I don't want to make the mistake would you be able to confidently select",
    "start": "2665640",
    "end": "2671440"
  },
  {
    "text": "your defaults for TLS I mean I don't think I would feel comfortable doing this like you have to be like very well",
    "start": "2671440",
    "end": "2676880"
  },
  {
    "text": "versed in cryptography to be able to make those kinds of decisions so it's very good that go is not making you do",
    "start": "2676880",
    "end": "2682240"
  },
  {
    "text": "this I think in my",
    "start": "2682240",
    "end": "2685319"
  },
  {
    "text": "[Music]",
    "start": "2687970",
    "end": "2694300"
  },
  {
    "text": "opinion this episode episode is brought to you by honeycomb find your most perplexing application issues honeycomb",
    "start": "2694520",
    "end": "2701400"
  },
  {
    "text": "is a fast analysis tool that reveals the truth about every aspect of your",
    "start": "2701400",
    "end": "2706440"
  },
  {
    "text": "application in production find out how users experience your code in complex and unpredictable environments find",
    "start": "2706440",
    "end": "2712760"
  },
  {
    "text": "patterns and outliers across billions of rows of data and definitely solve your problems and we use honeycomb here at",
    "start": "2712760",
    "end": "2718920"
  },
  {
    "text": "changel that's why we welcome the opportunity to add them as one of our infrastructure Partners in particular we",
    "start": "2718920",
    "end": "2724319"
  },
  {
    "text": "use honeycomb to track down issues recently which we talked about at length on the Kaizen edition of the shipet",
    "start": "2724319",
    "end": "2730720"
  },
  {
    "text": "podcast so check that out here's the thing teams who don't use honeycom are forced to find the need on the haast",
    "start": "2730720",
    "end": "2735960"
  },
  {
    "text": "stack they scroll through endless dashboards playing whack-a-mole they deal with alert floods trying to guess",
    "start": "2735960",
    "end": "2741720"
  },
  {
    "text": "which one matters and they go from tool to tool to Tool playing sleuth trying to figure out how all the puzzle pieces fit",
    "start": "2741720",
    "end": "2748040"
  },
  {
    "text": "together it's this context switching and Tool sprawl that are slowly killing team's Effectiveness and ultimately",
    "start": "2748040",
    "end": "2754040"
  },
  {
    "text": "hindering their business with honeycomb you get a fast unified and clear",
    "start": "2754040",
    "end": "2759319"
  },
  {
    "text": "understanding of the one thing driving your business production with honeycomb you guess less and you know more join",
    "start": "2759319",
    "end": "2766319"
  },
  {
    "text": "the Swarm and try honeycomb free today at honeycomb.io changelog again",
    "start": "2766319",
    "end": "2773400"
  },
  {
    "text": "honeycomb.io Chang [Music]",
    "start": "2773400",
    "end": "2782489"
  },
  {
    "text": "log",
    "start": "2784800",
    "end": "2787800"
  },
  {
    "text": "[Applause] [Music] another interesting about your interest",
    "start": "2793210",
    "end": "2799280"
  },
  {
    "text": "in go you kind of mentioned that you started using go because malware was thrown at you kind of yeah exactly so I",
    "start": "2799280",
    "end": "2806839"
  },
  {
    "text": "wouldn't say that I've started using go I would say that I was forced to learn go not that I I'm unhappy about it I'm",
    "start": "2806839",
    "end": "2813280"
  },
  {
    "text": "not saying it's a bad thing what I'm saying is that I'm not really writing go code myself what I did was I had",
    "start": "2813280",
    "end": "2819480"
  },
  {
    "text": "assembly that was generated by the go compiler and I was trying to make heads or tails from it so what I did was I",
    "start": "2819480",
    "end": "2825079"
  },
  {
    "text": "looked at the assembly I was like okay this might be the go code that generated this assembly and then I opened my go",
    "start": "2825079",
    "end": "2832440"
  },
  {
    "text": "IDE and I compiled my code and checked if it was the same on both ends also",
    "start": "2832440",
    "end": "2838119"
  },
  {
    "text": "when I start to learn about the language when I want to reverse engineer it I think it's super useful to write some",
    "start": "2838119",
    "end": "2843640"
  },
  {
    "text": "simple programs and just compile it and see how it looks in the assembly level know just create a simple stupid C",
    "start": "2843640",
    "end": "2849280"
  },
  {
    "text": "function not C function but a sum function that you know adds to integers or you know something that will allow",
    "start": "2849280",
    "end": "2855160"
  },
  {
    "text": "you to see what types of function calls the program is using what kind of constructs the language is generating",
    "start": "2855160",
    "end": "2861040"
  },
  {
    "text": "the things that I had to face there was again the go compiler being way too smart for for my users and it tends to",
    "start": "2861040",
    "end": "2867720"
  },
  {
    "text": "inline all the function calls that are too simple what I mean by this is if you have a simple function that does almost",
    "start": "2867720",
    "end": "2873559"
  },
  {
    "text": "nothing and you call that function then the go compiler will be like oh this is not worth a function call what I will do",
    "start": "2873559",
    "end": "2879640"
  },
  {
    "text": "is I will take the code of all this function and put it inside the calling function and you know when you try to look at what a function call looks like",
    "start": "2879640",
    "end": "2886200"
  },
  {
    "text": "in assembly then this is not helping you but the good thing is I was able to find the the good flags and uh for the",
    "start": "2886200",
    "end": "2891839"
  },
  {
    "text": "compiler to disable all optimizations and things that kind of worked out for me you mentioned that Ida and which is",
    "start": "2891839",
    "end": "2897720"
  },
  {
    "text": "the main tool you're using and the other tool are not really supporting go so if",
    "start": "2897720",
    "end": "2903319"
  },
  {
    "text": "anybody wants to try a reverse engineer to get into that but also want to do that with go what would you recommend",
    "start": "2903319",
    "end": "2910680"
  },
  {
    "text": "how to do that so if you going to reverse engineer go programs I still think that you don't have much Choice",
    "start": "2910680",
    "end": "2915960"
  },
  {
    "text": "there so you're still going to be you're still going to have to use either ID Pro or gidra I want to switch to grra",
    "start": "2915960",
    "end": "2922880"
  },
  {
    "text": "eventually but I haven't done so at the moment so I cannot speak too much about its capabilities I'm told that it it's",
    "start": "2922880",
    "end": "2929440"
  },
  {
    "text": "being improved at a very rapid pace so it's probably a good choice but when it comes to to Ida",
    "start": "2929440",
    "end": "2936359"
  },
  {
    "text": "it got better right I think that a few months back maybe a year now you had my",
    "start": "2936359",
    "end": "2941480"
  },
  {
    "text": "good friend Juan Andres gerad from senel one on the podcast and probably told you about the various plugins that he wrote",
    "start": "2941480",
    "end": "2948160"
  },
  {
    "text": "to help people reverse engineer go programs with Ida I also contributed to his repository with some script myself",
    "start": "2948160",
    "end": "2954559"
  },
  {
    "text": "that I find useful but overall even though Ida might not be perfect for the",
    "start": "2954559",
    "end": "2960599"
  },
  {
    "text": "job it's still one of the two only tools that are available for the job so you",
    "start": "2960599",
    "end": "2965640"
  },
  {
    "text": "still have to you know work through it no matter what the thing is I find",
    "start": "2965640",
    "end": "2970799"
  },
  {
    "text": "myself thinking that even though starting with reverse engineering go is kind of difficult it turns out that I",
    "start": "2970799",
    "end": "2977200"
  },
  {
    "text": "find myself liking reverse engineering go programs way more than C++ programs that tend to be extremely complicated",
    "start": "2977200",
    "end": "2983319"
  },
  {
    "text": "with you know virtual function tables and the very complex structures that represent classes and so on because when",
    "start": "2983319",
    "end": "2989040"
  },
  {
    "text": "it comes to the go language turns out that it kind of feels like a scripting language in the sense that everything",
    "start": "2989040",
    "end": "2995559"
  },
  {
    "text": "ends up being a call to an API function a call to some function that comes from the go standard library and so if you",
    "start": "2995559",
    "end": "3001720"
  },
  {
    "text": "are able to take a debugger and you know look at all the arguments after you know how to do that but if you look at all",
    "start": "3001720",
    "end": "3007599"
  },
  {
    "text": "the arguments of the go functions that are documented by the way and look at",
    "start": "3007599",
    "end": "3012760"
  },
  {
    "text": "the return values then actually the meaning of the program tends to manifest itself even though you don't really",
    "start": "3012760",
    "end": "3019240"
  },
  {
    "text": "understand all the instructions that are in the middle and you cannot track you know all the stuff going here and there",
    "start": "3019240",
    "end": "3025000"
  },
  {
    "text": "so overall like my advice for people that would like to get started with Go reverse engineering is okay it's going",
    "start": "3025000",
    "end": "3030520"
  },
  {
    "text": "to be very different from what you are used to but at the end of the day I think you're going to end up liking it",
    "start": "3030520",
    "end": "3035839"
  },
  {
    "text": "more than you would think because it's going to be way easier than it looks how",
    "start": "3035839",
    "end": "3040880"
  },
  {
    "text": "about those listeners that haven't done any reverse engineering that want to get started do you have any good resources out there I know that you personally",
    "start": "3040880",
    "end": "3047200"
  },
  {
    "text": "have made some videos you want to talk about that a little bit and anything else that would be helpful so yeah the",
    "start": "3047200",
    "end": "3052480"
  },
  {
    "text": "videos that I put out are just related to the go language if you're going to get into reverse engineering I would not",
    "start": "3052480",
    "end": "3058160"
  },
  {
    "text": "advise you to start with go not because it's going to be harder or anything but because probably the basics of reverse",
    "start": "3058160",
    "end": "3065280"
  },
  {
    "text": "engineering are going to be related to traditional C code or traditional assembly code generated by C and so this",
    "start": "3065280",
    "end": "3071920"
  },
  {
    "text": "is going to be like your base knowledge of reverse engineering and then one you once you are comfortable with",
    "start": "3071920",
    "end": "3078000"
  },
  {
    "text": "understanding what is going on with the c language and you know all the assembly that you see most places then you can",
    "start": "3078000",
    "end": "3085440"
  },
  {
    "text": "move on to other languages and see how they differ from others or Etc but I",
    "start": "3085440",
    "end": "3091520"
  },
  {
    "text": "think C is always going to be used as a reference for other languages in the sense that when you look at assembly",
    "start": "3091520",
    "end": "3096920"
  },
  {
    "text": "first you try to understand it like you would understand see and then if it's different like you adapt from that but",
    "start": "3096920",
    "end": "3102359"
  },
  {
    "text": "if your Baseline is going to be the go language if the like the the one thing you know is go and then you try to",
    "start": "3102359",
    "end": "3108160"
  },
  {
    "text": "recognize whatever you learned with go with another language then you're going to be into trouble because whatever",
    "start": "3108160",
    "end": "3114319"
  },
  {
    "text": "you're going to see next is not going to look like anything you saw in go so we do have a few courses at kasperski but I",
    "start": "3114319",
    "end": "3120480"
  },
  {
    "text": "mean people can check them out if they want there are a few interesting online courses as well it's something for free",
    "start": "3120480",
    "end": "3127280"
  },
  {
    "text": "which is a beginners. re it's a website it used to be free maybe now it's behind the pay wall I'm not sure but it used to",
    "start": "3127280",
    "end": "3132920"
  },
  {
    "text": "be this big big reverse engineering course written by some guy it was it was amazing you have a book which is called",
    "start": "3132920",
    "end": "3139960"
  },
  {
    "text": "practical malware analysis it's a bit old now but I think it's still very much uh up to date it's from no Stock press I",
    "start": "3139960",
    "end": "3147000"
  },
  {
    "text": "think uh for beginners it's going to be a good way to get into the field because it explains everything that is going on",
    "start": "3147000",
    "end": "3152680"
  },
  {
    "text": "it provides links to the various tools that you might need Etc so a good resource there and finally if you want",
    "start": "3152680",
    "end": "3158839"
  },
  {
    "text": "to approach this from the uh fun angle I can actually recommend extremely good Steam games that allow you to like get a",
    "start": "3158839",
    "end": "3166119"
  },
  {
    "text": "feel for reverse engineering so one of them is called Ching complete and this one is like the pitch of this game is",
    "start": "3166119",
    "end": "3173160"
  },
  {
    "text": "you're going to build your own computer and so you start with they give you logic gate like exor gate and electric",
    "start": "3173160",
    "end": "3180040"
  },
  {
    "text": "cables basically and based on this you have to build a CPU component by component and then you move on with",
    "start": "3180040",
    "end": "3186880"
  },
  {
    "text": "increasing levels of abstraction so it really it's really super helpful to understand how a program works or how a",
    "start": "3186880",
    "end": "3194720"
  },
  {
    "text": "computer works it really it allows you to get this uh high level bird eye view of how a CPU is constructed and how it's",
    "start": "3194720",
    "end": "3201680"
  },
  {
    "text": "supposed to operate and knowing how CPUs work is then very very helpful when you are doing reverse engineering and then",
    "start": "3201680",
    "end": "3208040"
  },
  {
    "text": "you have other games which are from a developer which is called zonics and these are like weird puzzle games that",
    "start": "3208040",
    "end": "3215559"
  },
  {
    "text": "are really related to Computing problems one of them is called T 100 you have another one called hexa punks and they",
    "start": "3215559",
    "end": "3222280"
  },
  {
    "text": "are dubbed the assembly games you didn't know you wanted and it's actually a very apt description because these games have",
    "start": "3222280",
    "end": "3229040"
  },
  {
    "text": "their own weird and limited Assembly Language and you have to solve puzzles with them like you have to program some",
    "start": "3229040",
    "end": "3234200"
  },
  {
    "text": "sort of small machine in order to make it do stuff and you have to do this with assembly and it forces you to use the",
    "start": "3234200",
    "end": "3240319"
  },
  {
    "text": "language which like has the very super good desired side effect of making you learn how CPUs work when or making you",
    "start": "3240319",
    "end": "3247559"
  },
  {
    "text": "more comfortable with handling those uh weird instructions by yourself so these would be my recommendations for people",
    "start": "3247559",
    "end": "3254319"
  },
  {
    "text": "that want to get into it yeah i' not thought about games that sounds I'm going to check those out later actually",
    "start": "3254319",
    "end": "3260440"
  },
  {
    "text": "and actually if you are working from a university or if you are a teacher somewhere Z I think the company maybe",
    "start": "3260440",
    "end": "3266520"
  },
  {
    "text": "closed doors not too long ago I think they they are done making games or they move on to something else but they used",
    "start": "3266520",
    "end": "3272040"
  },
  {
    "text": "to have a uh very extensive education program where if you are a university",
    "start": "3272040",
    "end": "3277079"
  },
  {
    "text": "and you are doing a I don't know some uh computer science degree or something like this you could just send them an",
    "start": "3277079",
    "end": "3282240"
  },
  {
    "text": "email and it would give you access to all their games you know for free basically and you could use them to",
    "start": "3282240",
    "end": "3287480"
  },
  {
    "text": "teach or as teaching AIDS and I think it's uh like amazing of them and also the games are really really really fun I",
    "start": "3287480",
    "end": "3293240"
  },
  {
    "text": "think so they are fun if you like assembly which I think is a pretty biased statement on my end but I I still do",
    "start": "3293240",
    "end": "3299559"
  },
  {
    "text": "recommend them a lot of the things you said are like a cheat sheet for reverse",
    "start": "3299559",
    "end": "3306280"
  },
  {
    "text": "engineering lots of useful information and I have so many more questions about specific things about go and reverse",
    "start": "3306280",
    "end": "3312920"
  },
  {
    "text": "engineering we might have to do another episode about this because we are running out of time sure well I can come back whenever",
    "start": "3312920",
    "end": "3319960"
  },
  {
    "text": "you like we will prepare our questions we'll ask you about things like generics I will have to prepare those question as",
    "start": "3319960",
    "end": "3325480"
  },
  {
    "text": "well I guess but no problem now it's time for an unpopular",
    "start": "3325480",
    "end": "3332490"
  },
  {
    "text": "[Music]",
    "start": "3332490",
    "end": "3337799"
  },
  {
    "text": "opinion I actually think should probably [Music]",
    "start": "3337799",
    "end": "3343320"
  },
  {
    "text": "leave [Music] opinion so Ivan what is your unpopular",
    "start": "3343799",
    "end": "3351000"
  },
  {
    "text": "opinion for us oh my God I totally forgot about that oh it's okay the good thing is I do have many",
    "start": "3351000",
    "end": "3357240"
  },
  {
    "text": "unpopular opinions so I'm going to like give you things on the top of my head and you can tell me what you want to know more about for instance I think",
    "start": "3357240",
    "end": "3364640"
  },
  {
    "text": "that cyberspace is never going to be regulated I think that nfts are a scam I",
    "start": "3364640",
    "end": "3369960"
  },
  {
    "text": "think that there is no political will to limit the sale of cyber offense tools",
    "start": "3369960",
    "end": "3375599"
  },
  {
    "text": "that kind of stuff yeah that's I do have a lot of unpopular political opinions as well but I don't think I want to inflict that onto you you've been very nice to",
    "start": "3375599",
    "end": "3381920"
  },
  {
    "text": "me what what do you think about the European rule about the USBC until",
    "start": "3381920",
    "end": "3387280"
  },
  {
    "text": "standardizing USBS oh I'm very very happy about it I know it's uh some",
    "start": "3387280",
    "end": "3393440"
  },
  {
    "text": "pressure put on some device Constructors but I've been carrying lots of different",
    "start": "3393440",
    "end": "3399079"
  },
  {
    "text": "chargers for years and I'm super annoyed about this and you know knowing that we are going to switch to like a single",
    "start": "3399079",
    "end": "3405440"
  },
  {
    "text": "USBC for every single device makes me extremely extremely happy another unpopular opinion I have which you can",
    "start": "3405440",
    "end": "3412039"
  },
  {
    "text": "add to the list is that I'm not really a big fan of Apple like not at all I don't like their ecosystem and I'm not going",
    "start": "3412039",
    "end": "3417760"
  },
  {
    "text": "to get into this but one of the things I don't like is that people have to pay 40 bucks for like new Chargers and they",
    "start": "3417760",
    "end": "3423000"
  },
  {
    "text": "change Chargers every time they release a new product and I'm very happy that this is going to cut off this Revenue",
    "start": "3423000",
    "end": "3428039"
  },
  {
    "text": "stream for them because I think this should have never existed in the first place what do you think about all the like the Wall Systems you know like the",
    "start": "3428039",
    "end": "3433839"
  },
  {
    "text": "Google Play Store and the Apple Store and the Amazon store like from a security perspective they say it's safer",
    "start": "3433839",
    "end": "3439960"
  },
  {
    "text": "do you agree with that do you yeah this is a very good question I do have very ambiguous feeling about them I do",
    "start": "3439960",
    "end": "3446440"
  },
  {
    "text": "believe that for the security on the security perspective it's kind of a good thing in the sense that yeah it's",
    "start": "3446440",
    "end": "3453119"
  },
  {
    "text": "another one of those safeguards that prevent people from doing stupid stuff with their devices and you know having",
    "start": "3453119",
    "end": "3458920"
  },
  {
    "text": "to go to some friends's places or more specifically friendes of my mom's places",
    "start": "3458920",
    "end": "3464039"
  },
  {
    "text": "to debug computers and you uninstall malware and fix the printers then I'm very happy when you there are",
    "start": "3464039",
    "end": "3469480"
  },
  {
    "text": "protections that prevent them from doing that kind of stuff then again they are not a perfect solution solution either I",
    "start": "3469480",
    "end": "3475680"
  },
  {
    "text": "think the Apple Store in terms of security is uh like pretty good the Google Store the play store has a bad",
    "start": "3475680",
    "end": "3482760"
  },
  {
    "text": "track record when it comes to hosting malware I'm not saying that they're doing a bad job I think it's a very very difficult job but the fact of the matter",
    "start": "3482760",
    "end": "3489599"
  },
  {
    "text": "is there are a number of apps on the Google Play Store that turned out to maybe not be total malware but some of",
    "start": "3489599",
    "end": "3497480"
  },
  {
    "text": "them are but a lot of them are just you know there to collect personal data or or that kind of stuff so I think a",
    "start": "3497480",
    "end": "3504359"
  },
  {
    "text": "better way of securing those devices is not to control the app stores I think",
    "start": "3504359",
    "end": "3509680"
  },
  {
    "text": "created protections on the device level is probably where I would um work so when you look at both IOS and Android",
    "start": "3509680",
    "end": "3516839"
  },
  {
    "text": "they're doing I think a very good job of or have been doing a very good job at least in the past years of making sure",
    "start": "3516839",
    "end": "3522039"
  },
  {
    "text": "that apps will not be able to access anything just because the user clicked okay you know way back when when they",
    "start": "3522039",
    "end": "3527079"
  },
  {
    "text": "installed the app so I think making sure that all those personal information cannot be pulled so easily is going to",
    "start": "3527079",
    "end": "3534880"
  },
  {
    "text": "be like a much better way than you know trying to police all the stores and look",
    "start": "3534880",
    "end": "3540559"
  },
  {
    "text": "at all the thousands of apps that are updated there every day which I do not think that you can realistically ensure",
    "start": "3540559",
    "end": "3546760"
  },
  {
    "text": "that they are always going to be um safe but overall the other issue with qu",
    "start": "3546760",
    "end": "3552400"
  },
  {
    "text": "Gardens which is okay maybe they do provide something with security but also I feel like they take away some agency",
    "start": "3552400",
    "end": "3558520"
  },
  {
    "text": "from me as a user right I really like to own the devices that I use and having",
    "start": "3558520",
    "end": "3563760"
  },
  {
    "text": "some restrictions that me oh you cannot install this app because Google says you can't or you can uninstall this app also",
    "start": "3563760",
    "end": "3569799"
  },
  {
    "text": "because Google says you can't is something that tends to make me extremely extremely angry so you",
    "start": "3569799",
    "end": "3574839"
  },
  {
    "text": "mentioned a lot of unpopular opinions yes the way the Twitter works for our",
    "start": "3574839",
    "end": "3580000"
  },
  {
    "text": "podcast is that we take an unpopular opinion and then we make a vote so",
    "start": "3580000",
    "end": "3585559"
  },
  {
    "text": "there's a poll do people agree with you or not and then there's a hall of fame for unpopular opinions and for popular",
    "start": "3585559",
    "end": "3591039"
  },
  {
    "text": "unpopular opinions so you listed several which one would you like us to vote on",
    "start": "3591039",
    "end": "3596720"
  },
  {
    "text": "so if I wanted to win the contest I guess I would go with the nft one because I know that this is something",
    "start": "3596720",
    "end": "3601880"
  },
  {
    "text": "very divisive and I think that a lot of the audience that you are reaching is going to be probably I'm not going to",
    "start": "3601880",
    "end": "3608000"
  },
  {
    "text": "say that they are necessarily going to be on my side but I think they're going to be on the a side but I think a much more interesting question that I would",
    "start": "3608000",
    "end": "3614400"
  },
  {
    "text": "be actually interested in having the uh the community's opinion about is the one about regulation like I do believe that",
    "start": "3614400",
    "end": "3620880"
  },
  {
    "text": "cyberspace is never going to be regulated and maybe I need to say a bit more about this one right so that people",
    "start": "3620880",
    "end": "3626039"
  },
  {
    "text": "can figure out for themselves my opinion on this is that you know we have a number of high level discussions taking",
    "start": "3626039",
    "end": "3632000"
  },
  {
    "text": "place at the UN about you know acceptable norms for behavior in the cyber space Etc and you have all those",
    "start": "3632000",
    "end": "3637559"
  },
  {
    "text": "discussions between states where they talk with each other and they are like okay what type of offensive operations",
    "start": "3637559",
    "end": "3643359"
  },
  {
    "text": "are legitimate like for instance Espionage is okay but destructive attacks are not okay I mean I'm not saying this is right I'm just saying",
    "start": "3643359",
    "end": "3649760"
  },
  {
    "text": "this is probably the kind of discussions that they're having and you know we may have differing opinions on what types of",
    "start": "3649760",
    "end": "3655799"
  },
  {
    "text": "attacks are okay and what types are not or even if attacks are okay at all it doesn't matter the thing is I do believe",
    "start": "3655799",
    "end": "3662200"
  },
  {
    "text": "that I don't think that we will ever reach an agreement there because well",
    "start": "3662200",
    "end": "3667359"
  },
  {
    "text": "states do not have an incentive to regulate cyber offense I think that they have an interest in having a way or",
    "start": "3667359",
    "end": "3675640"
  },
  {
    "text": "having some kind of framework that allows them to still conduct operations because when they conduct operations",
    "start": "3675640",
    "end": "3680839"
  },
  {
    "text": "they know what they are winning right they have intelligent services that gather data they collect it through",
    "start": "3680839",
    "end": "3686200"
  },
  {
    "text": "cyber means they take it back and so they know that they are able to achieve certain results because they have obtained specific information and they",
    "start": "3686200",
    "end": "3692880"
  },
  {
    "text": "can quantify that on the other end when you look at the cost of cyber offense",
    "start": "3692880",
    "end": "3699599"
  },
  {
    "text": "which means all your companies in your country that have been breached because there are no no such Norms it's",
    "start": "3699599",
    "end": "3704640"
  },
  {
    "text": "something that's super hard to quantify you can never know that you know you lost some contract overseas to sell",
    "start": "3704640",
    "end": "3709720"
  },
  {
    "text": "planes or to sell you know something else because of cyber means because it's very likely that nobody knows that the",
    "start": "3709720",
    "end": "3715319"
  },
  {
    "text": "breach even happened in the first place so the thing is you look at the balance of risk reward for the decision makers",
    "start": "3715319",
    "end": "3722599"
  },
  {
    "text": "and they see this is what we win with cyber offense which is a lot and what they lose is AB it's painless and also",
    "start": "3722599",
    "end": "3729440"
  },
  {
    "text": "they have no idea what it is and so overall I think that all those discussions that are taking place that are saying okay we need to make a safer",
    "start": "3729440",
    "end": "3736520"
  },
  {
    "text": "internet blah blah blah are actually possibly being conducted in bad faith because there is no political will to",
    "start": "3736520",
    "end": "3742359"
  },
  {
    "text": "actually stop doing this kind of stuff this would my unpopular opinion especially in the Diplomatic circles all",
    "start": "3742359",
    "end": "3747760"
  },
  {
    "text": "right you will be tagged and we will be following the results okay no I'm interested to see the results on this",
    "start": "3747760",
    "end": "3753799"
  },
  {
    "text": "one yeah it's an interesting way to think about it yeah I want to know as well cool thank you very much for",
    "start": "3753799",
    "end": "3759279"
  },
  {
    "text": "sharing your knowledge your thoughts and your opinions with us this was really fascinating we will be very happy to",
    "start": "3759279",
    "end": "3765359"
  },
  {
    "text": "have you again thanks a lot Ivan well thank you very much for having me and uh yeah feel free to like call me up",
    "start": "3765359",
    "end": "3771599"
  },
  {
    "text": "anytime I'll be happy to be back thanks Yan for joining fun co-hosting together yeah thanks you guys this was great bye",
    "start": "3771599",
    "end": "3778030"
  },
  {
    "text": "[Music] everyone if you enjoyed listening at the",
    "start": "3778030",
    "end": "3785599"
  },
  {
    "text": "intersection of go and information security stay tuned for part three it's currently scheduled to record live on",
    "start": "3785599",
    "end": "3792359"
  },
  {
    "text": "November 29th and of course go back and listen to part one while you're at it that was episode number 205 here's a",
    "start": "3792359",
    "end": "3799240"
  },
  {
    "text": "sampler the stakes have been ratcheting up it's really easy to kind of look at it that way and and we don't want to",
    "start": "3799240",
    "end": "3805520"
  },
  {
    "text": "make it like too dark or too heady but now this is the playground of also a lot",
    "start": "3805520",
    "end": "3811960"
  },
  {
    "text": "of nation states and a lot of criminals and you know if you're in this in the US it's kind of like the ransom more",
    "start": "3811960",
    "end": "3817200"
  },
  {
    "text": "epidemic is sort of unavoidable right like you you have to talk about it every day and that's where things get less",
    "start": "3817200",
    "end": "3822880"
  },
  {
    "text": "pretty right like if you're at a hospital that can't help folks because all their you know tragically outdated",
    "start": "3822880",
    "end": "3828119"
  },
  {
    "text": "Windows XP systems are in a flat Network and all of them got popped at the same time that's where you go well yeah yeah",
    "start": "3828119",
    "end": "3834480"
  },
  {
    "text": "that code was fun I love the idea of just having these you know kind of hacking superpowers but there's a side",
    "start": "3834480",
    "end": "3841440"
  },
  {
    "text": "to it that isn't quite so cute and I think we're kind of walking that line all the time right where you go oh this",
    "start": "3841440",
    "end": "3847400"
  },
  {
    "text": "is fascinating and you just get wrapped up in the functionality and what someone has been able to accomplish and it's",
    "start": "3847400",
    "end": "3854000"
  },
  {
    "text": "easy to forget like oh well there's this is actually a part of a much much heavier game listen in at go time.",
    "start": "3854000",
    "end": "3862079"
  },
  {
    "text": "fm25 or search hacking with go in your podcast app of choice it should pop right up thanks once again to our",
    "start": "3862079",
    "end": "3868920"
  },
  {
    "text": "partners at fastly and fly.io they help make go time possible into the mysterious break master cylinder go",
    "start": "3868920",
    "end": "3875599"
  },
  {
    "text": "time's beats are dope because BMC makes dope beats it's as simple as that next",
    "start": "3875599",
    "end": "3880680"
  },
  {
    "text": "time on go time Angelica Natalie and Chris welcome Tech lawyer Lis via to the",
    "start": "3880680",
    "end": "3885839"
  },
  {
    "text": "show to answer the age-old question who owns our code stay tuned I think you're",
    "start": "3885839",
    "end": "3891480"
  },
  {
    "text": "going to dig it we'll have that episode ready for you now next",
    "start": "3891480",
    "end": "3896400"
  },
  {
    "text": "week",
    "start": "3905240",
    "end": "3908240"
  }
]