[
  {
    "text": "so much perception around test coverage you know and everyone trying to get to like 100% 100% is certainly useful for",
    "start": "80",
    "end": "7080"
  },
  {
    "text": "sure but you know is it the end all be all does 100% mean no bugs and and this is a trick question of course one thing",
    "start": "7080",
    "end": "13400"
  },
  {
    "text": "I like to bring up is one real strength I see of coverage in relation to the node project is that it tells people",
    "start": "13400",
    "end": "19840"
  },
  {
    "text": "areas where they could contribute easily because you do want to try to have test coverage of most core components of a",
    "start": "19840",
    "end": "25599"
  },
  {
    "text": "large open source project like node so giving people that entry point to tribute I think is amazing to your point",
    "start": "25599",
    "end": "32558"
  },
  {
    "text": "like yeah like 100% coverage is not no bugs in any regard because you might codify your the weird broken",
    "start": "32559",
    "end": "41160"
  },
  {
    "text": "Behavior band withth for change log is provided by fastly learn more at fastly.com our feature flags are powered",
    "start": "41520",
    "end": "48920"
  },
  {
    "text": "by launch darkley check them out at launchdarkly dcom and we're hosted on Lino Cloud servers get $100 in hosting",
    "start": "48920",
    "end": "55520"
  },
  {
    "text": "credit at lin.com changelog what's up party people this episode is brought to you by strappy",
    "start": "55520",
    "end": "62480"
  },
  {
    "text": "strappy is an open- Source headless CMS that front Enders love it's 100% JavaScript fully customizable and",
    "start": "62480",
    "end": "69680"
  },
  {
    "text": "developer first strappy is more than a node framework and more than a headless CMS it saves API development time",
    "start": "69680",
    "end": "76600"
  },
  {
    "text": "through a beautiful admin panel anyone can use it's open source it's agnostic choose your preferred database and API",
    "start": "76600",
    "end": "83600"
  },
  {
    "text": "options using graphql or rest it's self-hosted and gdpr compliant control your data privacy and cost at all time",
    "start": "83600",
    "end": "90799"
  },
  {
    "text": "it's customizable create content structures that Flex to fit your needs customize the admin panel as well as the",
    "start": "90799",
    "end": "96159"
  },
  {
    "text": "API and extend your content management with custom plugins to get started head to the homepage using our special URL",
    "start": "96159",
    "end": "102399"
  },
  {
    "text": "strappy doio GSP party that's St api.js party and click the get started",
    "start": "102399",
    "end": "109560"
  },
  {
    "text": "button for a step-by-step guide to create a sample app using Create strappy app strappy is also Enterprise ready for",
    "start": "109560",
    "end": "115280"
  },
  {
    "text": "those who need to unlock Enterprise features and services email JSP party strappy IO and connect with Maxim the",
    "start": "115280",
    "end": "121600"
  },
  {
    "text": "resident expert on guidance and a special offer for JS party listeners again that's strapp you. i/j",
    "start": "121600",
    "end": "130119"
  },
  {
    "text": "[Music]",
    "start": "130169",
    "end": "133299"
  },
  {
    "text": "party this is JS party your weekly celebration of JavaScript and the web we",
    "start": "136879",
    "end": "144080"
  },
  {
    "text": "record live on Thursdays at 1: p.m. us Eastern and you can be part of the show",
    "start": "144080",
    "end": "149920"
  },
  {
    "text": "come hang with us in our community slack it's totally free head to Chang log.com community and sign up today okay let's",
    "start": "149920",
    "end": "157440"
  },
  {
    "text": "get into it hey it's party time [Music]",
    "start": "157440",
    "end": "163290"
  },
  {
    "text": "[Applause]",
    "start": "163290",
    "end": "168389"
  },
  {
    "text": "y'all hello Party People we're so excited to be back well I guess",
    "start": "172560",
    "end": "178400"
  },
  {
    "text": "technically J's party's been back I'm excited to be back on JS party my first 2021 show joined by Divia hello Divia",
    "start": "178400",
    "end": "186319"
  },
  {
    "text": "hello and a very special guest Benjamin Co or Ben Co welcome Ben hi thanks for",
    "start": "186319",
    "end": "193799"
  },
  {
    "text": "having me I'm excited to be on the show yeah we're we're super excited to have you as well and we're going to be",
    "start": "193799",
    "end": "198879"
  },
  {
    "text": "talking about a super cool topic and by cool I mean you know only cool by the ultimate nerdiest standards you know",
    "start": "198879",
    "end": "206720"
  },
  {
    "text": "watch me as I like you know pushing my glasses up as we speak so we're going to be talking about testing and test",
    "start": "206720",
    "end": "212560"
  },
  {
    "text": "coverage instrumentation and we're really lucky actually because Ben is a founder of Istanbul pretty big I think",
    "start": "212560",
    "end": "219439"
  },
  {
    "text": "kind of the golden standard for in the JavaScript Community for testing coverage instrumentation and so we're",
    "start": "219439",
    "end": "224799"
  },
  {
    "text": "going to be getting into all the nitty-gritty kind of details and the backstory and all of that and we'll talk",
    "start": "224799",
    "end": "231879"
  },
  {
    "text": "about test coverage testing in General open source project arcs lots of stuff",
    "start": "231879",
    "end": "237439"
  },
  {
    "text": "to cover so welcome Ben why don't you tell us a little bit about yourself before we get started yeah so my name is",
    "start": "237439",
    "end": "243319"
  },
  {
    "text": "Ben CO as he said and I was an early engineer at mpm Incorporated where",
    "start": "243319",
    "end": "248840"
  },
  {
    "text": "that's definitely where I got more into open source and more into actually kind of test coverage related stuff while I",
    "start": "248840",
    "end": "255200"
  },
  {
    "text": "was there today I am what's called a developer programs engineer at Google so",
    "start": "255200",
    "end": "260560"
  },
  {
    "text": "basically we're kind of on the cusp between an engineer and like a developer advocacy type of role where we we do",
    "start": "260560",
    "end": "267560"
  },
  {
    "text": "quite a bit of engineering and we do do a certain amount of speaking it's kind of a nice combination of two skills that",
    "start": "267560",
    "end": "273960"
  },
  {
    "text": "I I enjoy doing in my time at mpm and in my time at Google I've gotten involved",
    "start": "273960",
    "end": "279400"
  },
  {
    "text": "in quite a few open source projects so Istanbul as you say Ys I got involved in when when we started using it for quite",
    "start": "279400",
    "end": "285479"
  },
  {
    "text": "a few things at mpm I'm a collaborator on the node.js project and I've contributed a little bit to things like",
    "start": "285479",
    "end": "292600"
  },
  {
    "text": "uh V8 and I guess my other favorite pet thing I've been working on lately is conventional commits which is is how to",
    "start": "292600",
    "end": "299919"
  },
  {
    "text": "write nice commit messages that can be read by machines so that's one of my favorite pet projects right now that",
    "start": "299919",
    "end": "306160"
  },
  {
    "text": "sounds so exciting I feel like that's the ultimate flame War topic you know",
    "start": "306160",
    "end": "311400"
  },
  {
    "text": "like standardizing commits and you know conventions around how developers communicate you know their work in",
    "start": "311400",
    "end": "317960"
  },
  {
    "text": "progress so yeah I'm sure you're having lots of fun with that so you've worked on a few different open source projects",
    "start": "317960",
    "end": "324120"
  },
  {
    "text": "you said Ys this is a huge one tell folks a little bit about Ys yes so basically what was happen was in the",
    "start": "324120",
    "end": "330680"
  },
  {
    "text": "early days of mpm we were rating a lot of command line applications just for like little tiny",
    "start": "330680",
    "end": "336560"
  },
  {
    "text": "little pieces of infrastructure that we needed to run on a server and uh around this time Optimist was really popular",
    "start": "336560",
    "end": "343639"
  },
  {
    "text": "which was the kind of the deao popular argument parser in the node community and unfortunately substa decided he was",
    "start": "343639",
    "end": "351600"
  },
  {
    "text": "sick of writing an argument parser or I think he decided basically that it was a little too overwrought with features and",
    "start": "351600",
    "end": "358479"
  },
  {
    "text": "decided he just wanted to work on minimist and and said Optimist is done this other person decided to Fork",
    "start": "358479",
    "end": "365680"
  },
  {
    "text": "Optimist and give it a Ys theme this was it wasn't actually me it was it was the person immediately before me who did",
    "start": "365680",
    "end": "370800"
  },
  {
    "text": "this and he gave and he made a picture of a pirate and slapped it up on the project and long story short he also",
    "start": "370800",
    "end": "376880"
  },
  {
    "text": "basically only really wanted to land some of the outstanding issues and wasn't too excited to run the project",
    "start": "376880",
    "end": "382240"
  },
  {
    "text": "long term and I just got it was kind of the first open source project I got really kind of started nerding out on",
    "start": "382240",
    "end": "388759"
  },
  {
    "text": "and and got it went really deep on it and have been kind of the the core maintainer of it for the last six years",
    "start": "388759",
    "end": "394560"
  },
  {
    "text": "or so now just trying to keep it with a good feature set and address bugs and",
    "start": "394560",
    "end": "400039"
  },
  {
    "text": "make sure node's up to date so that's the story of yars nice it needs its own sea shanty yeah it",
    "start": "400039",
    "end": "408720"
  },
  {
    "text": "used to be more pirate everything used to be more pirate themed and then I got feedback that it's actually really hard for folks cooky well it's even like if",
    "start": "408720",
    "end": "415879"
  },
  {
    "text": "your English isn't your first language it was making some of the docs just impossible to read so that's fair I love",
    "start": "415879",
    "end": "421560"
  },
  {
    "text": "the pirate theme but we've tried to use it selectively and not over index on it in our docs and and stuff like that yeah",
    "start": "421560",
    "end": "429000"
  },
  {
    "text": "so that makes sense yeah I always wondered you know what the naming conventions of that like you know why",
    "start": "429000",
    "end": "436280"
  },
  {
    "text": "you picked that name I don't know was it like were you at a bar and you were just like Y no I have to give credit to the",
    "start": "436280",
    "end": "442680"
  },
  {
    "text": "engineer who worked on it like immediately before me for a month because it was a stroke of Genius I have",
    "start": "442680",
    "end": "447879"
  },
  {
    "text": "run with that stroke of Genius I think I can share their I'll put their name in notes but I think Chev was their name",
    "start": "447879",
    "end": "453759"
  },
  {
    "text": "maybe oh that that's awesome well kudos to Chev we'll put it in the show notes yeah to and confirm on that so I think",
    "start": "453759",
    "end": "460319"
  },
  {
    "text": "what's really interesting about you Ben is that you've been in the node Community for such a long time that you know I think you've really seen so many",
    "start": "460319",
    "end": "467840"
  },
  {
    "text": "arcs and evolutions and and I think one of the benefits of being involved in a community that's you know about to",
    "start": "467840",
    "end": "474159"
  },
  {
    "text": "hockey stick early on is like you get to kind of really be part of the foundational Tool Set uh story you know",
    "start": "474159",
    "end": "480360"
  },
  {
    "text": "you get to contribute to things like argument parsers that are used by you know thousands of libraries so you know",
    "start": "480360",
    "end": "486319"
  },
  {
    "text": "kind of bringing us to IST can you tell us a little bit about like what is isul and what like motivated you to create it",
    "start": "486319",
    "end": "493400"
  },
  {
    "text": "yes I like this story so basically I came into mpm having a belief in in test",
    "start": "493400",
    "end": "500400"
  },
  {
    "text": "coverage because I I'd seen it used really effectively at the prior company I was at and I'd learned that it was a",
    "start": "500400",
    "end": "506639"
  },
  {
    "text": "tool set that benefited me because I could really start to see the parts of the code base that just really didn't",
    "start": "506639",
    "end": "512320"
  },
  {
    "text": "have any testing written for them and those I definitely found we we'll talk later in this podcast about kind of how",
    "start": "512320",
    "end": "518279"
  },
  {
    "text": "test coverage isn't a a perfect thing but it can certainly tell you can",
    "start": "518279",
    "end": "523760"
  },
  {
    "text": "certainly tell you what parts of your code base aren't very well exercised which is is powerful so I came into mpm",
    "start": "523760",
    "end": "529880"
  },
  {
    "text": "and I was an advocate of this but the way that tests were written for the mpm client because it used a technology",
    "start": "529880",
    "end": "535600"
  },
  {
    "text": "called tap where it creates a a subprocess for every one of the unit tests that run there actually wasn't",
    "start": "535600",
    "end": "541279"
  },
  {
    "text": "really an easy methodology at the time for for getting test coverage so IST",
    "start": "541279",
    "end": "547240"
  },
  {
    "text": "already did exist at this time there was another thing called blanket that existed which was",
    "start": "547240",
    "end": "552839"
  },
  {
    "text": "similar and they would basically work that you instrumented your test Suite like maybe it's a mocha test suite and",
    "start": "552839",
    "end": "558720"
  },
  {
    "text": "it's able to do the real-time instrumentation but they didn't work well with subprocesses so I basically was just",
    "start": "558720",
    "end": "565600"
  },
  {
    "text": "talking with Isaac who was person who wrote mpm originally and Michael was in",
    "start": "565600",
    "end": "571360"
  },
  {
    "text": "the office too the fellow who wrote request we kind of just would hang out with other in the early days it was just",
    "start": "571360",
    "end": "576640"
  },
  {
    "text": "a bunch of JavaScript people who would hang out in the office together basically and I was like could we",
    "start": "576640",
    "end": "582519"
  },
  {
    "text": "collect coverage for these subprocesses somehow and then stitch them all back together again would there be a way to see that the program had gone into a",
    "start": "582519",
    "end": "589480"
  },
  {
    "text": "subprocess and and Isaac was like well I think you could hook it like this and you could you could do this but it",
    "start": "589480",
    "end": "596279"
  },
  {
    "text": "sounds like it'd be really hard and it wouldn't work very well so I kind of just got kind of nerd sniped by this",
    "start": "596279",
    "end": "601839"
  },
  {
    "text": "conversation that we had and went off on the weekend and started work on this thing called NYC and all that NYC was",
    "start": "601839",
    "end": "609279"
  },
  {
    "text": "this kind of wrapper that would detect when a new process was being created and would do a bunch of magic so that um",
    "start": "609279",
    "end": "616640"
  },
  {
    "text": "you'd end up with istable instrumented code that u in that subprocess that ran",
    "start": "616640",
    "end": "623079"
  },
  {
    "text": "so so the tool that I started working on around Istanbul was was NYC it's a it's a play on the term IST because there's",
    "start": "623079",
    "end": "629320"
  },
  {
    "text": "there's a we might be Giant song where it's like you know can't go back to constan stanbul not",
    "start": "629320",
    "end": "635120"
  },
  {
    "text": "Constantinople not constant Nole yeah so we picked NYC which used to be um New",
    "start": "635120",
    "end": "640959"
  },
  {
    "text": "Amsterdam that was the the whole line of reasoning so that was how I started getting involved in Istanbul and it was",
    "start": "640959",
    "end": "647360"
  },
  {
    "text": "kind of a project that already existed NYC was a layer on top of it but NYC",
    "start": "647360",
    "end": "652720"
  },
  {
    "text": "became really popular because it was just it turned out if it works really well for sub process for catching sub processes it just worked really well in",
    "start": "652720",
    "end": "658440"
  },
  {
    "text": "general where you could just toss the word NYC in front of any program and it would just magically start collecting coverage and because of",
    "start": "658440",
    "end": "664920"
  },
  {
    "text": "the way we designed it it worked for most test Runners it worked for whether you're writing subprocesses or not subprocesses it just was kind of really",
    "start": "664920",
    "end": "671639"
  },
  {
    "text": "magical and how it worked then we'd start to find bugs with like Istanbul's",
    "start": "671639",
    "end": "677040"
  },
  {
    "text": "instrumentation and I started pitching in and the main maintainer of Istanbul",
    "start": "677040",
    "end": "682160"
  },
  {
    "text": "was kind of ready to move on a little bit from the project so that they kind of allowed me to to come in and kind of",
    "start": "682160",
    "end": "687279"
  },
  {
    "text": "deal with the stuff that was coming up working on NYC and they were really supportive in contributing to Istanbul",
    "start": "687279",
    "end": "693560"
  },
  {
    "text": "so gradually I created the IST organization on GitHub I refactored how a lot of the stuff worked um and ended",
    "start": "693560",
    "end": "700880"
  },
  {
    "text": "up maintaining it as part of the work around this NYC project Istanbul was",
    "start": "700880",
    "end": "705920"
  },
  {
    "text": "actually as I understand it IST was kind of V2 of something that grew up inside of Yahoo originally so it was kind of",
    "start": "705920",
    "end": "711240"
  },
  {
    "text": "this approach to instrumentation was initially kind of hammered out for Yahoo's testing needs I think that's",
    "start": "711240",
    "end": "717600"
  },
  {
    "text": "just super interesting so this kind of clarifies a lot of misconceptions I had",
    "start": "717600",
    "end": "722680"
  },
  {
    "text": "up until about two minutes ago so I've kind of associated the two projects you know as one and the same many respects I",
    "start": "722680",
    "end": "730000"
  },
  {
    "text": "was like oh NYC seems like the executor binary for Istanbul in many ways it's",
    "start": "730000",
    "end": "735199"
  },
  {
    "text": "like the front loader or whatever so Istanbul was pre-existing via Yahoo and",
    "start": "735199",
    "end": "741199"
  },
  {
    "text": "you came in and helped kind of you know just I would say augmented it seems and now you're maintainer just the way",
    "start": "741199",
    "end": "747680"
  },
  {
    "text": "things go in open source wow exactly that that's like the majority of a lot of my open sources worked like that and",
    "start": "747680",
    "end": "753720"
  },
  {
    "text": "I think that's a valuable lesson for anyone taking part in open source like NYC is one of the few things I wrote",
    "start": "753720",
    "end": "759240"
  },
  {
    "text": "from scratch and was the initial person of like yarai was just one of the second folks who worked on it and gradually",
    "start": "759240",
    "end": "765480"
  },
  {
    "text": "picked it up and that was the same as istable as well like it was kind of just a enthusiastic maintainer and if you're",
    "start": "765480",
    "end": "772199"
  },
  {
    "text": "too enthusiastic eventually you own the puppy if you're not careful yeah that's the truth yeah I could think of dozens",
    "start": "772199",
    "end": "778600"
  },
  {
    "text": "of folks are in that same situation where you know they're maintaining projects that they didn't create um",
    "start": "778600",
    "end": "784079"
  },
  {
    "text": "Babel being I think a really good example of That So Okay so we've got instrumentation as a whole how does",
    "start": "784079",
    "end": "790760"
  },
  {
    "text": "instrumentation work I think I know but how does it really work this is a good question so I gave a talk on this like a",
    "start": "790760",
    "end": "798120"
  },
  {
    "text": "couple years ago and I like went super deep on researching the history and it turns out the first test coverage was",
    "start": "798120",
    "end": "803839"
  },
  {
    "text": "actually developed in like 1962 by the military weirdly enough so are you serious there's like a paper I 100%",
    "start": "803839",
    "end": "809720"
  },
  {
    "text": "serious this is like the government like just inventing everything first and not telling people about it or",
    "start": "809720",
    "end": "816320"
  },
  {
    "text": "something just kidding I think another one of the early approaches was I believe gcov which is the one that c",
    "start": "816320",
    "end": "822440"
  },
  {
    "text": "programs can use and I might be wrong here but I'm pretty sure that these early approaches and like the ones that",
    "start": "822440",
    "end": "829160"
  },
  {
    "text": "you see work more like kind of swapping out the dynamically linked like",
    "start": "829160",
    "end": "834199"
  },
  {
    "text": "compilation you've done and then it's just kind of putting counters up as as you EX that compiled code yeah it's like",
    "start": "834199",
    "end": "841199"
  },
  {
    "text": "a big watch it's like the most minimal way you can Implement a watch of many ways it's like has this code run has",
    "start": "841199",
    "end": "847680"
  },
  {
    "text": "this code been executed yeah and I'm pretty sure in in those cases it's kind of more at the system level but the way",
    "start": "847680",
    "end": "854000"
  },
  {
    "text": "JavaScript code coverages traditionally worked and the way blanket worked and the way Istanbul worked was that um they",
    "start": "854000",
    "end": "860399"
  },
  {
    "text": "used something like a aema which is a JavaScript parser or um IST actually",
    "start": "860399",
    "end": "866680"
  },
  {
    "text": "originally used espra but move to Babel actually you mentioned Babel um and what they actually do is they um very",
    "start": "866680",
    "end": "874600"
  },
  {
    "text": "cleverly take the code you've written and then replace all of the code with",
    "start": "874600",
    "end": "880519"
  },
  {
    "text": "code that would do the same thing but has counters in it so B basically they take every single statement in the",
    "start": "880519",
    "end": "886680"
  },
  {
    "text": "entire code base and someone's actually gone to the trouble of backwards engineering how you would write",
    "start": "886680",
    "end": "892160"
  },
  {
    "text": "identical JavaScript that does the exact same thing but has counters in it and it",
    "start": "892160",
    "end": "897279"
  },
  {
    "text": "turns out that most most using parentheses which allow you to if you",
    "start": "897279",
    "end": "902880"
  },
  {
    "text": "just put parentheses around a random set of statements in JavaScript believe it Returns the same",
    "start": "902880",
    "end": "908880"
  },
  {
    "text": "first thing but executes the second thing or am I backwards it executes the first thing and then Returns the second",
    "start": "908880",
    "end": "914880"
  },
  {
    "text": "thing I either way I might be backwards but the point is it basically puts parentheses around tons of your code and",
    "start": "914880",
    "end": "920920"
  },
  {
    "text": "then these counters are just running as as your code runs normally and then you're then there's basically a global",
    "start": "920920",
    "end": "927639"
  },
  {
    "text": "object keeps track of all those lines of code that were run and then when your thing's done",
    "start": "927639",
    "end": "933120"
  },
  {
    "text": "running that global object gets written somewhere and now you're able to do a test coverage report that's how IST",
    "start": "933120",
    "end": "940279"
  },
  {
    "text": "works that's how NYC works because NYC would run Istanbul and then get that report out the other end the thing I've",
    "start": "940279",
    "end": "947199"
  },
  {
    "text": "been going really deep on for the last couple years is the V8 JavaScript engine",
    "start": "947199",
    "end": "954279"
  },
  {
    "text": "actually has test coverage built into it now and that test coverage Works a",
    "start": "954279",
    "end": "960360"
  },
  {
    "text": "little differently where your JavaScript code doesn't execute like when you when you run code in the web browser or in",
    "start": "960360",
    "end": "966399"
  },
  {
    "text": "node.js your JavaScript code doesn't get turned into a tree and executed directly",
    "start": "966399",
    "end": "972040"
  },
  {
    "text": "it actually gets turned into an intermediate bite code representation if anyone remembers everyone's heard about",
    "start": "972040",
    "end": "978399"
  },
  {
    "text": "the Java jvm where like the Java code you write actually gets turned into kind of virtual machine code that runs in the",
    "start": "978399",
    "end": "986120"
  },
  {
    "text": "jvm JavaScript actually works really similarly and uh V8 now lets you turn on",
    "start": "986120",
    "end": "992040"
  },
  {
    "text": "coverage and then as it rates this bite code that's going to go into actually executing in your web browser to give",
    "start": "992040",
    "end": "998120"
  },
  {
    "text": "you a popup or whatever it puts additional bite code in that also counts how many times those statements were",
    "start": "998120",
    "end": "1004519"
  },
  {
    "text": "called so it happens kind of a layer up from the JavaScript code so I'm really excited about this because it means that",
    "start": "1004519",
    "end": "1011639"
  },
  {
    "text": "you're able to collect coverage without kind of creating this really munged up",
    "start": "1011639",
    "end": "1017120"
  },
  {
    "text": "code that has you know parentheses thrown into it and has a global object that you're using to track stuff yeah you're pushing the responsibility down",
    "start": "1017120",
    "end": "1023680"
  },
  {
    "text": "to the compiler and you're not mucking with the code so there's like no Integrity questions at all you know so",
    "start": "1023680",
    "end": "1031160"
  },
  {
    "text": "that's really interesting because I literally was thinking earlier like while listening to you I was like you know it sounds like this coverage",
    "start": "1031160",
    "end": "1036959"
  },
  {
    "text": "process could actually technically be moved to the compiler because in theory like you know that's maybe the best",
    "start": "1036959",
    "end": "1043038"
  },
  {
    "text": "place to watch this you know it feels a little bit like an afterthought to be injecting things into the code and or",
    "start": "1043039",
    "end": "1048319"
  },
  {
    "text": "like parsing it and rewriting the code in such a way it's pretty fascinating",
    "start": "1048319",
    "end": "1053360"
  },
  {
    "text": "stuff well and I agree and and part of what motivated me on this path to was well two things the first thing Isle",
    "start": "1053360",
    "end": "1060320"
  },
  {
    "text": "would break code pretty regularly because like there's things there's like Edge case features in JavaScript that some programs rely on like if you have a",
    "start": "1060320",
    "end": "1067039"
  },
  {
    "text": "named function some people will look at the functionname property and do something with it so if you're putting parentheses around that function or if",
    "start": "1067039",
    "end": "1073480"
  },
  {
    "text": "you're turning it into a like an anonymous function as part of your coverage step suddenly you're losing that name varable",
    "start": "1073480",
    "end": "1079720"
  },
  {
    "text": "that was a bug we fixed a bunch of times and then the other thing was that we weren't able to handle esm modules",
    "start": "1079720",
    "end": "1086480"
  },
  {
    "text": "basically but the V8 engine was able to instrument uh esm modules so that was",
    "start": "1086480",
    "end": "1093120"
  },
  {
    "text": "another motivation wow that's interesting so I was just thinking this this V8 feature I think that's what's",
    "start": "1093120",
    "end": "1099120"
  },
  {
    "text": "probably powering lines of coverage if you're inspecting or doing some performance testing you can see like how",
    "start": "1099120",
    "end": "1105039"
  },
  {
    "text": "much of your code is being executed on the page and I'm assuming that's what's",
    "start": "1105039",
    "end": "1110159"
  },
  {
    "text": "powering that in Dev tools right I would guess so yeah okay that's interesting yeah because you can turn it on in Dev",
    "start": "1110159",
    "end": "1116159"
  },
  {
    "text": "tools and then node.js is able to turn it on and use the same information very cool so that's like related to the tool",
    "start": "1116159",
    "end": "1123400"
  },
  {
    "text": "that you were mentioning did you mention it earlier about like you're building a native V8 code coverage tool I think it",
    "start": "1123400",
    "end": "1130000"
  },
  {
    "text": "was when you listed the list of Pro open source projects you're working on I just pulled it up I think it's called C8",
    "start": "1130000",
    "end": "1135960"
  },
  {
    "text": "correct can you speak more to like that project and like what the implementation is with regards to that and how that",
    "start": "1135960",
    "end": "1141480"
  },
  {
    "text": "differs with like yeah totally this is like my my pet project that at times",
    "start": "1141480",
    "end": "1147080"
  },
  {
    "text": "I've been ready to throw it at the window but but I I've been working on it for three years now and basically what",
    "start": "1147080",
    "end": "1153600"
  },
  {
    "text": "happened was the node project itself is is a really a really big code base like",
    "start": "1153600",
    "end": "1158919"
  },
  {
    "text": "you know it's quite a few lines of JavaScript compared to a lot of mpm modules people right and the way the",
    "start": "1158919",
    "end": "1165600"
  },
  {
    "text": "node code based worked was it used NYC coverage is important to the nodejs",
    "start": "1165600",
    "end": "1170760"
  },
  {
    "text": "project because it gives new contributors an entry point to contribute it's like what a really easy way to contribute is to look for",
    "start": "1170760",
    "end": "1176799"
  },
  {
    "text": "something that doesn't have a test written for it and write a test for that and I think that's one of the real values of coverage if you're a big open",
    "start": "1176799",
    "end": "1183679"
  },
  {
    "text": "source project so the node project relied on this and we published nightly coverage reports but we were using NYC",
    "start": "1183679",
    "end": "1191000"
  },
  {
    "text": "to instrument NYC does have a performance impact like on your average project",
    "start": "1191000",
    "end": "1196280"
  },
  {
    "text": "that's running it but for most tiny JavaScript projects you know you're not going to notice if your test took 10",
    "start": "1196280",
    "end": "1202000"
  },
  {
    "text": "seconds to run versus 8 seconds to run or something but on the Node code base with this pre-instrumental",
    "start": "1202000",
    "end": "1209880"
  },
  {
    "text": "people didn't really weren't able to do it themselves around the same time esm was starting to get some traction and",
    "start": "1228720",
    "end": "1234039"
  },
  {
    "text": "there was no way to track coverage for ecma script modules so kind of there was",
    "start": "1234039",
    "end": "1239240"
  },
  {
    "text": "twofold motivation I wanted to see if this could speed up the nodejs code base and I wanted to make sure I supported",
    "start": "1239240",
    "end": "1245919"
  },
  {
    "text": "EAS script modules so I started work on the C8 project like pretty years ago like when",
    "start": "1245919",
    "end": "1253360"
  },
  {
    "text": "the V8 coverage was pretty immature in the V8 code base I my script modules",
    "start": "1253360",
    "end": "1259320"
  },
  {
    "text": "were pretty immature I didn't know if the whole project would work basically and I'd never contributed to",
    "start": "1259320",
    "end": "1265080"
  },
  {
    "text": "V8 before like I the first time I started really writing C++ code was when I started this C8 project so basically",
    "start": "1265080",
    "end": "1272520"
  },
  {
    "text": "but it's become really it ended up being really fun so the initial versions of coverage in V8 like had a ton of kind of",
    "start": "1272520",
    "end": "1278279"
  },
  {
    "text": "holes in it it didn't just didn't quite work very well because I've become pretty obsessive about coverage working",
    "start": "1278279",
    "end": "1284840"
  },
  {
    "text": "on istable and NYC for years I kind of knew what the community wanted I knew that they well they need like it was",
    "start": "1284840",
    "end": "1291400"
  },
  {
    "text": "just missing certain things like it couldn't handle say El statements or it couldn't handle turnery operators there",
    "start": "1291400",
    "end": "1297840"
  },
  {
    "text": "was just like random like things that the coverage couldn't do and I knew if I was going to expose this to The Wider",
    "start": "1297840",
    "end": "1303000"
  },
  {
    "text": "community that the first question I would get is why doesn't it support X or why doesn't it support y so anyways",
    "start": "1303000",
    "end": "1309000"
  },
  {
    "text": "started wrote this C8 Library called it really experimental started contributing to V8",
    "start": "1309000",
    "end": "1315000"
  },
  {
    "text": "at the same time where I would like work with the folks in V8 to like a new coverage thing to the compiler gradually",
    "start": "1315000",
    "end": "1321400"
  },
  {
    "text": "it became pretty good so long story short C8 is actually what nodejs itself is using now and it runs about five or",
    "start": "1321400",
    "end": "1327600"
  },
  {
    "text": "six times faster than an NYC ran so so you actually can get run the whole node code base with coverage turned on and it",
    "start": "1327600",
    "end": "1335480"
  },
  {
    "text": "runs at about 80% of the speed as if you weren't running it with coverage it's a little slower but not so much slower",
    "start": "1335480",
    "end": "1342400"
  },
  {
    "text": "that you can't do it and the C8 project really grew out of this kind of close",
    "start": "1342400",
    "end": "1348080"
  },
  {
    "text": "relationship ship with trying to improve nod's own coverage so I like C8 a lot I think because it's grown so slowly",
    "start": "1348080",
    "end": "1354039"
  },
  {
    "text": "people don't know about it as much or it's it's also definitely grown with a specific engineering need which is I",
    "start": "1354039",
    "end": "1359559"
  },
  {
    "text": "wanted to help out the node project so it's like very specific to testing",
    "start": "1359559",
    "end": "1365120"
  },
  {
    "text": "specifically for V8 with the adaptation well with the use case of like testing",
    "start": "1365120",
    "end": "1371120"
  },
  {
    "text": "node faster well yeah I mean you can use it basically in any context that you would use NYC like I use it for pretty",
    "start": "1371120",
    "end": "1378200"
  },
  {
    "text": "much all of my new projects MH funny enough the instrumentation approach that",
    "start": "1378200",
    "end": "1383320"
  },
  {
    "text": "IST uses actually does at this time kind of catch more edge cases that just aren't covered in the compiler",
    "start": "1383320",
    "end": "1389159"
  },
  {
    "text": "yet and every time you need to catch one of those new instances you have to like go rate C++ code maybe make a change to",
    "start": "1389159",
    "end": "1396320"
  },
  {
    "text": "the bite code generator so the turnaround is a little slower in getting the features into C8 than it would be to",
    "start": "1396320",
    "end": "1402279"
  },
  {
    "text": "just yeah that's fair maybe update the Babel",
    "start": "1402279",
    "end": "1406399"
  },
  {
    "text": "Purser",
    "start": "1407440",
    "end": "1410440"
  },
  {
    "text": "[Music]",
    "start": "1413830",
    "end": "1420309"
  },
  {
    "text": "this episode is brought to you by Source graph Source graph is code search for every developer and team easily search",
    "start": "1421440",
    "end": "1427720"
  },
  {
    "text": "across all the code that matters to you in your organization find example code explore and read code debug issues and",
    "start": "1427720",
    "end": "1434559"
  },
  {
    "text": "so much more and I talk with bangl CTO and co-founder of source gram and asked him to share what code search is what",
    "start": "1434559",
    "end": "1441400"
  },
  {
    "text": "developers and teams are missing out on and how Source graph provides code search to every developer in the world",
    "start": "1441400",
    "end": "1447000"
  },
  {
    "text": "if you've worked inside a Google or a Facebook or any one of these really big",
    "start": "1447000",
    "end": "1452159"
  },
  {
    "text": "well-respected technology companies chances are you've used something like code search before and you know the",
    "start": "1452159",
    "end": "1457760"
  },
  {
    "text": "value that it provides to your team you know that almost every single engineer inside these organizations uses it on a",
    "start": "1457760",
    "end": "1464159"
  },
  {
    "text": "a daily basis if you've never had that experience chances are you may not know what you're missing out on you know the",
    "start": "1464159",
    "end": "1470799"
  },
  {
    "text": "term code search sounds a lot like you know grep or the search inside your editor and that's what a lot of people",
    "start": "1470799",
    "end": "1476080"
  },
  {
    "text": "think when they first hear it but it's really about much more than that it's really about connecting you as a developer to the broader Universe of",
    "start": "1476080",
    "end": "1483799"
  },
  {
    "text": "code and code related data that's relevant to you that you need at hand in order to enter that you know magical",
    "start": "1483799",
    "end": "1489399"
  },
  {
    "text": "Flow State of you know being your editor writing code quickly making rapid",
    "start": "1489399",
    "end": "1494600"
  },
  {
    "text": "progress towards that feature bug fix that you're working on it's really about making all that cont information accessible at your fingertips and what",
    "start": "1494600",
    "end": "1501799"
  },
  {
    "text": "that means is think about every single repository every single file and every single language uh every single diff and",
    "start": "1501799",
    "end": "1509200"
  },
  {
    "text": "every single open source dependency or maybe closed Source dependency that's shared across your organization all that",
    "start": "1509200",
    "end": "1515200"
  },
  {
    "text": "is searchable through a single text box and that's really powerful because it means all this friction is eliminated",
    "start": "1515200",
    "end": "1520960"
  },
  {
    "text": "between you and understanding that broader world of code you don't have to clone stuff down to your local machine you don't have to mess around with editor config you don't have to be",
    "start": "1520960",
    "end": "1528320"
  },
  {
    "text": "constantly bugging people on other teams who may not even know who you are in order to teach yourself how all that",
    "start": "1528320",
    "end": "1534520"
  },
  {
    "text": "code Works what sourcc is is really a way for the rest of us the people who",
    "start": "1534520",
    "end": "1540640"
  },
  {
    "text": "don't work inside the Googles the Facebooks to get a tool that gives us access to that sort of information",
    "start": "1540640",
    "end": "1547960"
  },
  {
    "text": "readily and and at our fingertips it's really about bringing this this type of tool that a lot of the larger technology",
    "start": "1547960",
    "end": "1553559"
  },
  {
    "text": "companies have developed and invested hundreds of millions of dollars into making for the productivity their own",
    "start": "1553559",
    "end": "1559080"
  },
  {
    "text": "engineers and making that accessible to every single developer in the world all right if code search powered by Source",
    "start": "1559080",
    "end": "1564720"
  },
  {
    "text": "graph sounds like something you and your team can use head to info. source.com changelog and click the button that says",
    "start": "1564720",
    "end": "1570679"
  },
  {
    "text": "try sourcc now you can install locally deploy it to a server or to a cluster they have a quick start guide that takes",
    "start": "1570679",
    "end": "1576559"
  },
  {
    "text": "less than 5 minutes to install Source graph using Docker so it's too easy to give a try again head to info.",
    "start": "1576559",
    "end": "1582080"
  },
  {
    "text": "source.com [Music]",
    "start": "1582080",
    "end": "1587240"
  },
  {
    "text": "changelog [Music]",
    "start": "1587240",
    "end": "1610529"
  },
  {
    "text": "so Ben that was a super brain dive yeah I'm sorry deep dive is that even a term",
    "start": "1613240",
    "end": "1620399"
  },
  {
    "text": "yeah I got nerd sniped by devia now it is it's a t now now it is right I just made fetch happen isn't that that's also",
    "start": "1620399",
    "end": "1627600"
  },
  {
    "text": "another Library I think make fetch happen um a node fetch implementation or",
    "start": "1627600",
    "end": "1633320"
  },
  {
    "text": "something anyways so how are folks using like testing instrumentation in their",
    "start": "1633320",
    "end": "1639600"
  },
  {
    "text": "project we've seen like this Mass adoption of NYC with the most popular",
    "start": "1639600",
    "end": "1645000"
  },
  {
    "text": "kind of testing lips nowadays it's there kind of powering the cover experience by default in for many libs I",
    "start": "1645000",
    "end": "1651880"
  },
  {
    "text": "think J um Puppeteer was another one that's there by default I think Cyprus",
    "start": "1651880",
    "end": "1656960"
  },
  {
    "text": "is using it as well well it's not there by default for projects like mocha I think it is there for tap and so you",
    "start": "1656960",
    "end": "1663960"
  },
  {
    "text": "know there's a lot of people using this code there's definitely some edge cases like you said some extreme edge cases",
    "start": "1663960",
    "end": "1669720"
  },
  {
    "text": "with JavaScript implementations and things that could break like what's that kind of Arc been like for you as a maintainer like to have that kind of",
    "start": "1669720",
    "end": "1676000"
  },
  {
    "text": "growth yeah it's been really interesting I think for me I will say it's I think the description that comes to mind is",
    "start": "1676000",
    "end": "1682159"
  },
  {
    "text": "exciting because when I worked on NYC initially like I really did think of it as as scratching an edge case that we",
    "start": "1682159",
    "end": "1689000"
  },
  {
    "text": "had for mpm which was to deal with these sub process so we could actually test them and then it was surprising to me to",
    "start": "1689000",
    "end": "1694880"
  },
  {
    "text": "see it become so popular across the whole Community like I think it it",
    "start": "1694880",
    "end": "1700000"
  },
  {
    "text": "really did help drive test coverage in general having these like you say these",
    "start": "1700000",
    "end": "1705360"
  },
  {
    "text": "integrated ways of doing it like having it so easily done just right inside of jest or having it right inside of a",
    "start": "1705360",
    "end": "1711720"
  },
  {
    "text": "technology like tap made it it really drove adoption um I'm thinking what's also been really",
    "start": "1711720",
    "end": "1718760"
  },
  {
    "text": "neat to me is that like I I've worked with the jest folks to help them with any bugs they've bumped into and I've",
    "start": "1718760",
    "end": "1725000"
  },
  {
    "text": "and you know just actually supports this V8 based approach too experimentally so I worked with them to support that",
    "start": "1725000",
    "end": "1732240"
  },
  {
    "text": "alternative way of doing coverage so Jess can do both so for me it's like everything being involved in like you",
    "start": "1732240",
    "end": "1738720"
  },
  {
    "text": "said early on in this conversation like being on this kind of hockey stick shaped thing I I think what I was so",
    "start": "1738720",
    "end": "1744200"
  },
  {
    "text": "surprised about about a lot of things that happened to me in my time at mpm was that so many things were hockey",
    "start": "1744200",
    "end": "1750480"
  },
  {
    "text": "stick shaped like not just adoption of the community in general but you could rate a tool like Ys and suddenly it has",
    "start": "1750480",
    "end": "1757080"
  },
  {
    "text": "a bajillion downloads a month and I was finding that to be true with Istanbul and and all these things they were all",
    "start": "1757080",
    "end": "1763080"
  },
  {
    "text": "kind of growing at these hockey stick rate I guess Pride mixed with a healthy amount of being frightened and and",
    "start": "1763080",
    "end": "1770000"
  },
  {
    "text": "feeling humble as well by the whole situation think would describe it yeah I",
    "start": "1770000",
    "end": "1775279"
  },
  {
    "text": "mean it seems it it's one thing to have your tool be adopted and you know go",
    "start": "1775279",
    "end": "1781200"
  },
  {
    "text": "through this hockey stick growth early on in an ecosystem and it's another thing for that tool to like stay the",
    "start": "1781200",
    "end": "1787039"
  },
  {
    "text": "test of time you know and so I think there there's something to be said for that as well the API design was good",
    "start": "1787039",
    "end": "1792720"
  },
  {
    "text": "enough and the implementation is good enough to kind of survive like through",
    "start": "1792720",
    "end": "1798039"
  },
  {
    "text": "through you know multiple node versions multiple implementations of JavaScript you know blah blah blah blah like I",
    "start": "1798039",
    "end": "1803519"
  },
  {
    "text": "think like there's something to to appreciate there I think so and reliable too it's not just like a flash in the",
    "start": "1803519",
    "end": "1809320"
  },
  {
    "text": "pan which I think we've talked about before that like a lot of Open Source tools not to like you know rain on",
    "start": "1809320",
    "end": "1816080"
  },
  {
    "text": "parades or whatever cuz Trends can be good sometimes but there is something to be said for open source projects that",
    "start": "1816080",
    "end": "1822120"
  },
  {
    "text": "are very intentional and that are true to the test of time I can't think of that phrase but yeah stand the test of",
    "start": "1822120",
    "end": "1829120"
  },
  {
    "text": "time stand the test of time yes yeah yeah I definitely found my approach to",
    "start": "1829120",
    "end": "1834760"
  },
  {
    "text": "like I really I'm methodical and like to kind of garden these projects for a long time so they're not like the most",
    "start": "1834760",
    "end": "1840240"
  },
  {
    "text": "exciting thing in the world but I I found like it works like you can get a really good adoption and it's been",
    "start": "1840240",
    "end": "1848720"
  },
  {
    "text": "really beneficial to my career like it means that when I'm like when I took my job at Google they'd already heard some of my projects which was really great",
    "start": "1848720",
    "end": "1855880"
  },
  {
    "text": "and they're probably using it too I mean did you find anyone at Google use I mean I'm sure some of the open source tools",
    "start": "1855880",
    "end": "1861320"
  },
  {
    "text": "for sure you know but I mean I don't know were folks using it internally at Google I think that's the real like",
    "start": "1861320",
    "end": "1866840"
  },
  {
    "text": "question were yeah they were some folks were using some folks were using Ys actually less than you think but but",
    "start": "1866840",
    "end": "1873440"
  },
  {
    "text": "some people were using yars for some internal projects for sure that's cool that's cool that's awesome so yars was",
    "start": "1873440",
    "end": "1879600"
  },
  {
    "text": "checked into like the Google monoo Source like that's very exciting so",
    "start": "1879600",
    "end": "1884720"
  },
  {
    "text": "congratulations Ben you you made it I think you know no that's really exciting and so so",
    "start": "1884720",
    "end": "1893200"
  },
  {
    "text": "getting back into kind of like Community stuff like people like there there's so",
    "start": "1893200",
    "end": "1898360"
  },
  {
    "text": "much perception around test coverage you know and everyone trying to get to like 100% And like 100% is certainly useful",
    "start": "1898360",
    "end": "1905840"
  },
  {
    "text": "for sure but you know is it the end all be all you know does 100% mean no bugs",
    "start": "1905840",
    "end": "1910960"
  },
  {
    "text": "and and this is a trick question of course one thing I like to bring up like and I brought it up already earlier in this podcast is one real strength I see",
    "start": "1910960",
    "end": "1918399"
  },
  {
    "text": "of coverage in relation to the node project is that it tells people areas of",
    "start": "1918399",
    "end": "1924279"
  },
  {
    "text": "where they could contribute easily because you do want to try to have test coverage of most core components of a",
    "start": "1924279",
    "end": "1930639"
  },
  {
    "text": "large open source project like node so giving people that entry point to contribute I think is amazing to your",
    "start": "1930639",
    "end": "1938080"
  },
  {
    "text": "point like yeah like 100% coverage is not no bugs in any regard because you",
    "start": "1938080",
    "end": "1943159"
  },
  {
    "text": "might codify your the weird broken Behavior right it's certainly I think a metric right and then it's a metric to",
    "start": "1943159",
    "end": "1949559"
  },
  {
    "text": "the health of a code base but coverage doesn't tell you the quality of your it doesn't like doesn't say that these",
    "start": "1949559",
    "end": "1955639"
  },
  {
    "text": "tests are quality tests I mean you could just have a test that runs a high level function and just because it does that",
    "start": "1955639",
    "end": "1962440"
  },
  {
    "text": "you know you all of a sudden have all this coverage but you know your branching isn't there you know or",
    "start": "1962440",
    "end": "1968159"
  },
  {
    "text": "whatever else I feel like there's there's some flaws there with test coverage not you know like being used as",
    "start": "1968159",
    "end": "1974320"
  },
  {
    "text": "this metric for I think a lot of times it's synonymous with quality I think",
    "start": "1974320",
    "end": "1979639"
  },
  {
    "text": "that's a really interesting point uh I'll give you like one really brief story with Ys it had not the best",
    "start": "1979639",
    "end": "1986880"
  },
  {
    "text": "coverage when I took over the project ironic I still would not call it a quality codebase maybe but it's a maybe",
    "start": "1986880",
    "end": "1993080"
  },
  {
    "text": "a better code base in some ways but it's long story short um getting the coverage up to 100% which I did early on in y the",
    "start": "1993080",
    "end": "2000440"
  },
  {
    "text": "Ys project did not make the project good it put me in a position where I could start refactoring the code base and be",
    "start": "2000440",
    "end": "2007200"
  },
  {
    "text": "more confident that moving this function over here to a better named file wasn't breaking 50 things and moving this right",
    "start": "2007200",
    "end": "2014399"
  },
  {
    "text": "file so it kind of gave me a little bit more of a safety net that I could kind of improve the quality of the code base",
    "start": "2014399",
    "end": "2021440"
  },
  {
    "text": "and I think this is one of the real strengths of coverage is going into when you go into a code base that's difficult",
    "start": "2021440",
    "end": "2027559"
  },
  {
    "text": "to work in or is pretty cfty getting the coverage and the testing to the point where okay now I can start moving it",
    "start": "2027559",
    "end": "2034559"
  },
  {
    "text": "towards a design that that I think is better yeah yeah I guess it makes it so that you",
    "start": "2034559",
    "end": "2039960"
  },
  {
    "text": "make sure that when you are migrating stuff you're not breaking anything so you're just like let me test everything",
    "start": "2039960",
    "end": "2046279"
  },
  {
    "text": "and make sure there's good coverage and then when you want to move stuff over from Legacy you are likely not to break",
    "start": "2046279",
    "end": "2053760"
  },
  {
    "text": "things along the way which I think is a really good way of thinking about it there's actually a really interesting",
    "start": "2053760",
    "end": "2059520"
  },
  {
    "text": "talking about a point that Amal brought which is just like kind of Faking code coverage there was a tool that I heard",
    "start": "2059520",
    "end": "2065679"
  },
  {
    "text": "about like a long time ago I think it was in the Ruby Community called covor",
    "start": "2065679",
    "end": "2072040"
  },
  {
    "text": "which like Coraline Ada M wrote which is kind of a joke tool which is just like don't worry about coverage like here's a",
    "start": "2072040",
    "end": "2078398"
  },
  {
    "text": "tool that allows you to like kind of fake 100% test coverage which I think the point she was making is that a lot",
    "start": "2078399",
    "end": "2085480"
  },
  {
    "text": "of the times people aim for this number and you can get the number really easily if you because there's a lot of",
    "start": "2085480",
    "end": "2091679"
  },
  {
    "text": "loopholes that you can jump through in order to get there but it's not going to give you the true meaning of what having",
    "start": "2091679",
    "end": "2097480"
  },
  {
    "text": "a 100% coverage is yeah I'd love to speak to that point so I'll use yars as an example again I inherited yars it had",
    "start": "2097480",
    "end": "2106359"
  },
  {
    "text": "a way broader feature set than someone might guess for argument parser and I didn't even know about some of the",
    "start": "2106359",
    "end": "2112200"
  },
  {
    "text": "features that had snuck into it over the years like there were features that were new to me and so I'd look at so I'd run",
    "start": "2112200",
    "end": "2118359"
  },
  {
    "text": "coverage and I'd see you know these 45 lines of code aren't covered and I'd be",
    "start": "2118359",
    "end": "2123480"
  },
  {
    "text": "what the heck are these 45 lines of code doing so the approach I I always take to",
    "start": "2123480",
    "end": "2128560"
  },
  {
    "text": "improving coverage in a code base that's maybe unfamiliar to me or maybe a little",
    "start": "2128560",
    "end": "2133640"
  },
  {
    "text": "crufty or whatever is like make sure you can really",
    "start": "2133640",
    "end": "2139040"
  },
  {
    "text": "describe the test should kind of describe the functionality like this this feature should behave like this",
    "start": "2139040",
    "end": "2145320"
  },
  {
    "text": "this feature should behave like this this feature should behave like this it shouldn't be hit lines 135 to 167 in",
    "start": "2145320",
    "end": "2153359"
  },
  {
    "text": "file fu. JS right like like if if your test just exercising some lines of code",
    "start": "2153359",
    "end": "2160760"
  },
  {
    "text": "I don't I don't think you're going to have a a stable code base or sorry you're not going to have you know well-written tests I think coverage is a",
    "start": "2160760",
    "end": "2167960"
  },
  {
    "text": "good indicator of shoot we haven't covered these lines of code but it's not a substitute for writing like",
    "start": "2167960",
    "end": "2173880"
  },
  {
    "text": "well-written tests that are descriptive and actually explain what the heck they're testing so that's my two sents",
    "start": "2173880",
    "end": "2180800"
  },
  {
    "text": "yeah because that's actually a really good point because some coverage tools is like these lines have been covered",
    "start": "2180800",
    "end": "2186280"
  },
  {
    "text": "therefore they have been tested which is like probably not the case like you might execute necessarily but it's not",
    "start": "2186280",
    "end": "2191640"
  },
  {
    "text": "testing that it does the thing that it should be doing so yeah yeah yeah so I mean the",
    "start": "2191640",
    "end": "2198040"
  },
  {
    "text": "coverage tools I guess maybe you can clarify that it's making sure it's like it's this line has been executed during",
    "start": "2198040",
    "end": "2204160"
  },
  {
    "text": "this test run right you know if you have a function that's being called that's not being used you know we would still",
    "start": "2204160",
    "end": "2210160"
  },
  {
    "text": "get coverage for that yeah so so the way I think about it honestly is is you're not necessarily trying to wrate test the",
    "start": "2210160",
    "end": "2216280"
  },
  {
    "text": "target every single function in your codebase even you definitely are trying to think of the I think of it I'm a",
    "start": "2216280",
    "end": "2222240"
  },
  {
    "text": "somewhat product oriented mind like and I definitely think of my open source as a a product and like think of how people",
    "start": "2222240",
    "end": "2229640"
  },
  {
    "text": "are actually using your product and what the public interfaces of that are and and that's where you want to drive up",
    "start": "2229640",
    "end": "2235160"
  },
  {
    "text": "the coverage and then that should be exercising your internal helper function",
    "start": "2235160",
    "end": "2241119"
  },
  {
    "text": "you maybe it's not even attractive to test some of your internal functions because they're private or something maybe you're using typescript and you've",
    "start": "2241119",
    "end": "2247040"
  },
  {
    "text": "marked them as now if you do run coverage and you see this hel that's been run zero times",
    "start": "2247040",
    "end": "2253440"
  },
  {
    "text": "maybe you can delete it right M blinds of code can maybe not an indicator you should be writing more tests it could be",
    "start": "2253440",
    "end": "2258720"
  },
  {
    "text": "an indicator that you have something that's stale in the code base too right yeah that's a very interesting way to",
    "start": "2258720",
    "end": "2264760"
  },
  {
    "text": "look at that and yeah I think that there's this this whole argument of you know what to test you know are you testing your implementation or the",
    "start": "2264760",
    "end": "2271160"
  },
  {
    "text": "output and you know and how testing the implementation kind of really creates brittle tests in many ways because you",
    "start": "2271160",
    "end": "2277160"
  },
  {
    "text": "know have to constantly change your tests and you change your code like you know sometimes you want to be able to",
    "start": "2277160",
    "end": "2282319"
  },
  {
    "text": "refactor your code and run your tests and everything should still work you know because you're testing the output not the implementation and so I think",
    "start": "2282319",
    "end": "2289599"
  },
  {
    "text": "that's really challenging with unit tests in particular because I think it's you know it's very hard to draw the line",
    "start": "2289599",
    "end": "2294680"
  },
  {
    "text": "of implementation versus you know output with unit tests because you are testing a unit of work but you're calling a",
    "start": "2294680",
    "end": "2301520"
  },
  {
    "text": "function that calls a bunch of other functions you know it's tough tough distinction to draw what I will say is that I do think",
    "start": "2301520",
    "end": "2308160"
  },
  {
    "text": "having a slight focus on coverage has helped me get better at wrting unit tests because I'm able to see that oh if",
    "start": "2308160",
    "end": "2315000"
  },
  {
    "text": "I if I test the kind of the obvious interface into the program I have good coverage I might even have 100% coverage",
    "start": "2315000",
    "end": "2320920"
  },
  {
    "text": "whereas I think before I thought about coverage your brain is more like oh I better test Fu internal function XYZ and",
    "start": "2320920",
    "end": "2327680"
  },
  {
    "text": "make sure that it works for all of its inputs even though you're going to exercised that function for all of its inputs when",
    "start": "2327680",
    "end": "2334440"
  },
  {
    "text": "you're using the kind of the actual public method that is the interface into it right right yeah and I think that's",
    "start": "2334440",
    "end": "2341800"
  },
  {
    "text": "where the whole branching comes into play right because I think branching like looking at the branching metrics for coverage help you kind of sus that",
    "start": "2341800",
    "end": "2348319"
  },
  {
    "text": "out right they help kind of surface logic branches that you may be missing so definitely yeah all the else cases",
    "start": "2348319",
    "end": "2356040"
  },
  {
    "text": "you know or the if cases [Music]",
    "start": "2356040",
    "end": "2365559"
  },
  {
    "text": "sometimes [Music]",
    "start": "2366359",
    "end": "2372160"
  },
  {
    "text": "what's up JS party people have you ever wondered if you could be offering a faster less buggy experience for your",
    "start": "2372160",
    "end": "2377839"
  },
  {
    "text": "customers well with Ray Gun error and performance monitoring you have all the information you need at your fingertips",
    "start": "2377839",
    "end": "2384119"
  },
  {
    "text": "to quickly find and fix errors and performance issues across your Tex Stack Down to the line of code ray gun makes",
    "start": "2384119",
    "end": "2390200"
  },
  {
    "text": "it easy to monitor the impact of your performance improvements quickly identify issues across web and mobile apps and see how your code performs in",
    "start": "2390200",
    "end": "2397160"
  },
  {
    "text": "the hands of your customers this saves you time this saves you money and this saves your sanity head to Ray gun.com to",
    "start": "2397160",
    "end": "2403680"
  },
  {
    "text": "join thousands of customers and software teams who use ray gun every single day again Ray gun.com to give them a try",
    "start": "2403680",
    "end": "2409800"
  },
  {
    "text": "with a free 14-day [Music]",
    "start": "2409800",
    "end": "2423039"
  },
  {
    "text": "trial [Music]",
    "start": "2426319",
    "end": "2438119"
  },
  {
    "text": "I'd love to talk to you a little bit about what you see as I think the future of testing coverage and just testing",
    "start": "2438160",
    "end": "2444480"
  },
  {
    "text": "maybe in general more broadly in the in the JavaScript Community um I know you know you're very humble and you're like",
    "start": "2444480",
    "end": "2449880"
  },
  {
    "text": "I'm not a testing Authority but you like kind of are and so where are things heading yeah I've actually been less",
    "start": "2449880",
    "end": "2456760"
  },
  {
    "text": "involved in IST in last couple years because I do believe in this integration",
    "start": "2456760",
    "end": "2462880"
  },
  {
    "text": "with the engine itself like I do think I think it's a better design like and so I'm kind of hopeful some of that stuff",
    "start": "2462880",
    "end": "2468359"
  },
  {
    "text": "can be pushed into the engine I think coverage is an important part of the of testing in general and I think having it",
    "start": "2468359",
    "end": "2474800"
  },
  {
    "text": "be like built right into the platform is the right place for it similarly you definitely do see like you see the",
    "start": "2474800",
    "end": "2480880"
  },
  {
    "text": "popularity of just like and just gives you coverage it gives you good assertion Frameworks it gives you a lot of the",
    "start": "2480880",
    "end": "2488680"
  },
  {
    "text": "things that you used to have to kind of add alak cart to your testing setup I",
    "start": "2488680",
    "end": "2493920"
  },
  {
    "text": "definitely do feel like these kind of integrated things like just are probably going to continue to be really popular",
    "start": "2493920",
    "end": "2500079"
  },
  {
    "text": "in the community and this maybe speaks to the like a m a community maturing in a certain way like there's not",
    "start": "2500079",
    "end": "2505560"
  },
  {
    "text": "necessarily the same tinkerers early on who were who kind of were really excited to figure out their own custom setup",
    "start": "2505560",
    "end": "2512680"
  },
  {
    "text": "with their own assertion library and their own coverage library and their own mix and match everything together I",
    "start": "2512680",
    "end": "2519000"
  },
  {
    "text": "think people are less excited about that similarly I'm excited to push more of the stuff into into node itself like",
    "start": "2519000",
    "end": "2524240"
  },
  {
    "text": "I've been working on the coverage and node so you can just turn on coverage in node but I've also been working on pretty stack traces in node so that it",
    "start": "2524240",
    "end": "2531119"
  },
  {
    "text": "understands Source maps and can give you a stack trace of your typescript code base without you having to install a",
    "start": "2531119",
    "end": "2537040"
  },
  {
    "text": "tool to do that like just trying to trying to get you more batteries included stuff I think is is really",
    "start": "2537040",
    "end": "2542520"
  },
  {
    "text": "exciting yeah that's that's awesome I mean the more we can abstract into the platform form or the tooling as a",
    "start": "2542520",
    "end": "2549559"
  },
  {
    "text": "default that's just more stuff we can do with the time saved you know what I mean that's awesome also I'm curious well the",
    "start": "2549559",
    "end": "2556040"
  },
  {
    "text": "way that code is written at least in the tiny subset of the industry that I'm in",
    "start": "2556040",
    "end": "2562720"
  },
  {
    "text": "which is Jam stack everything is serverless and you write a bunch of serverless functions which means a lot",
    "start": "2562720",
    "end": "2568839"
  },
  {
    "text": "of things are kind of isolated what do you think test coverage looks like in those kinds of environments because",
    "start": "2568839",
    "end": "2574800"
  },
  {
    "text": "those are the idea being that serverless functions so to speak run in isolation",
    "start": "2574800",
    "end": "2581880"
  },
  {
    "text": "from like the rest of your project so let's say you have like a node project and then this is like a serverless thing and then it goes and calls a database",
    "start": "2581880",
    "end": "2588119"
  },
  {
    "text": "and there's lots of things that happen kind of outside of your control so like what is that mean for test coverage",
    "start": "2588119",
    "end": "2594960"
  },
  {
    "text": "because now like a lot of the logic no longer lives in your main code base so to speak it kind of lives in the cloud",
    "start": "2594960",
    "end": "2602559"
  },
  {
    "text": "that's a good question well first off I I do think like I haven't seen this done too widely yet but I think people are",
    "start": "2602559",
    "end": "2610920"
  },
  {
    "text": "going to start doing more coverage instrumentation of actual running applications there's advantages to doing",
    "start": "2610920",
    "end": "2616079"
  },
  {
    "text": "so it can give you ideas of hot spots in your application where you're calling the same line of code a million times when you serve users throughout the day",
    "start": "2616079",
    "end": "2622839"
  },
  {
    "text": "and and that kind of gives you an idea of where you should optimize your code so I think one approach people might",
    "start": "2622839",
    "end": "2628280"
  },
  {
    "text": "start taking is instrumenting you know kind of like a canary application where you have a canary application that runs the next",
    "start": "2628280",
    "end": "2635400"
  },
  {
    "text": "version of your codebase to make sure that it's healthy maybe people are running a canary version with",
    "start": "2635400",
    "end": "2640599"
  },
  {
    "text": "instrumentation like coverage and maybe Telemetry data for the for the first six",
    "start": "2640599",
    "end": "2647760"
  },
  {
    "text": "hours after deployment and kind of starting to collect data that way uh and I think that's one of the",
    "start": "2647760",
    "end": "2653119"
  },
  {
    "text": "really exciting things about pushing this stuff towards the actual engines like V8 is is that you can actually get",
    "start": "2653119",
    "end": "2659359"
  },
  {
    "text": "it so you can have that instrumentation and still run at a fairly fast rate such you're not impacting customers too much",
    "start": "2659359",
    "end": "2665839"
  },
  {
    "text": "I think everyone else absolutely ated at at mpm I use this one Library called knock to try to test the HTTP layer M so",
    "start": "2665839",
    "end": "2674760"
  },
  {
    "text": "you kind of test your program up to the point when you have that external dependency like the external function",
    "start": "2674760",
    "end": "2680920"
  },
  {
    "text": "you're going to invoke and one approach if it's say an HTTP API you're",
    "start": "2680920",
    "end": "2685960"
  },
  {
    "text": "interacting with knock's actually a really nice tool for testing rate up to that point another great approach is is",
    "start": "2685960",
    "end": "2692359"
  },
  {
    "text": "using something like sign in to actually do a mock of the method call you're actually going to call in your codebase that's going to cause that external",
    "start": "2692359",
    "end": "2698280"
  },
  {
    "text": "Behavior MH so I think those approaches can work the thing with mocking and with",
    "start": "2698280",
    "end": "2704400"
  },
  {
    "text": "anything like that is you're testing your vision of how the external thing is going to work it's not necessarily",
    "start": "2704400",
    "end": "2710000"
  },
  {
    "text": "reality so I mean it's like all things it's rot with Peril that is true yeah I",
    "start": "2710000",
    "end": "2715200"
  },
  {
    "text": "often actually find that again like in projects that I've worked on there is zero testing for any of the seress",
    "start": "2715200",
    "end": "2721440"
  },
  {
    "text": "things we write it's just the assumption that it works and then maybe locally whatever calls that particular",
    "start": "2721440",
    "end": "2726960"
  },
  {
    "text": "particular function we just marck it out so it's not actually the function",
    "start": "2726960",
    "end": "2732000"
  },
  {
    "text": "execution that's checked at all we just assume that that particular external logic works and then we just test that",
    "start": "2732000",
    "end": "2739000"
  },
  {
    "text": "it gets the data appropriately which then like gets into issues for instance like when we aren't handling certain",
    "start": "2739000",
    "end": "2746040"
  },
  {
    "text": "statuses properly like we're giving a user 503 when the service it's not that the service is unavailable it's just",
    "start": "2746040",
    "end": "2752359"
  },
  {
    "text": "that they haven't logged in properly or their login is incorrect or their token is correct or expired and so then that",
    "start": "2752359",
    "end": "2760400"
  },
  {
    "text": "that's an issue with regards to how we've written that particular like service we can't check for that because",
    "start": "2760400",
    "end": "2765480"
  },
  {
    "text": "then users will like hit an error that is unexpected and the test coverage doesn't speak to that at",
    "start": "2765480",
    "end": "2771400"
  },
  {
    "text": "all but yeah yeah I think these boundary points are almost always where bugs happen yeah exactly and this is",
    "start": "2771400",
    "end": "2777599"
  },
  {
    "text": "definitely a challenge for engineering yeah yeah I think this is where you just need a robot you just need to write a bot that runs your code end to end I",
    "start": "2777599",
    "end": "2784680"
  },
  {
    "text": "mean I wish end to end tests were so expensive you know they're expensive to run expensive to write expensive to",
    "start": "2784680",
    "end": "2790000"
  },
  {
    "text": "maintain so you know it's just very challenging but anyways well Ben I mean",
    "start": "2790000",
    "end": "2795440"
  },
  {
    "text": "this has been a really fascinating discussion I'd love to kind of close this note out with project",
    "start": "2795440",
    "end": "2801040"
  },
  {
    "text": "sustainability clearly you've been a maintainer for some pretty key projects for quite a number of years our",
    "start": "2801040",
    "end": "2807720"
  },
  {
    "text": "foundation's kind of the next step for these really important projects you know do you do you see that as a path forward",
    "start": "2807720",
    "end": "2815200"
  },
  {
    "text": "and and just in general like are you looking for help with maintenance you know what's this kind of sustainability",
    "start": "2815200",
    "end": "2821720"
  },
  {
    "text": "story for the projects that you're overseeing yeah so I mean I've explored foundations like I've definitely",
    "start": "2821720",
    "end": "2827400"
  },
  {
    "text": "discussed with other projects that are in foundations you know how they found the experience and it's something I'm",
    "start": "2827400",
    "end": "2833400"
  },
  {
    "text": "very open to with any of the work I've contributed to like like Ys or Istanbul",
    "start": "2833400",
    "end": "2839280"
  },
  {
    "text": "I think where of being in a foundation would interest me would probably be more in like the the legal advice you can get",
    "start": "2839280",
    "end": "2845760"
  },
  {
    "text": "and the you know having more structure around potentially reaching your community around the project and like",
    "start": "2845760",
    "end": "2852200"
  },
  {
    "text": "you say sustainability like making sure that there's like a long-term plan for this thing that a lot of folks rely on",
    "start": "2852200",
    "end": "2857319"
  },
  {
    "text": "perfect example how we approach security what I have been told is you don't magically get a ton of maintainers because you joined a foundation oh",
    "start": "2857319",
    "end": "2864160"
  },
  {
    "text": "here's our pool of Ys maintainers that we're just waiting to to write command line parsers kind of having a a core of",
    "start": "2864160",
    "end": "2870640"
  },
  {
    "text": "maintainers I think is always one of the most difficult parts of an open source project and I've found throughout the",
    "start": "2870640",
    "end": "2876480"
  },
  {
    "text": "years sometimes I'll have a pool of two or three folks who are doing incredible work on a project and it's almost always",
    "start": "2876480",
    "end": "2882119"
  },
  {
    "text": "that it's a specific task they had for work so they wanted to get it built and I very much encourage those types of",
    "start": "2882119",
    "end": "2889000"
  },
  {
    "text": "contributions and appreciate them but definitely like it es and flows the number of folks who are working on like",
    "start": "2889000",
    "end": "2894119"
  },
  {
    "text": "Ys or Istanbul or any of these projects and so so I think this the story for",
    "start": "2894119",
    "end": "2899800"
  },
  {
    "text": "sustainability does have to be that that as a maintainer you just need to not be",
    "start": "2899800",
    "end": "2905440"
  },
  {
    "text": "too stressed out if you're issues are counting up a little bit and the issues that I try to put the most attention to",
    "start": "2905440",
    "end": "2912000"
  },
  {
    "text": "are if we have a major for instance security issue like I do treat that as a",
    "start": "2912000",
    "end": "2917119"
  },
  {
    "text": "p0o and I will because of my role at Google where I know some googlers are using some of the libraries and uh like",
    "start": "2917119",
    "end": "2925640"
  },
  {
    "text": "they are key like I don't feel too bad spending a couple hours out of my work week if we were to have a p0o security",
    "start": "2925640",
    "end": "2931000"
  },
  {
    "text": "issue I had to address yeah so I've had to learn like I do not code as much as I did eight years ago on like I'm not",
    "start": "2931000",
    "end": "2937160"
  },
  {
    "text": "spending my entire weekend working on Ys I just can't anymore and then feel happy and healthy when I go in on a Monday to",
    "start": "2937160",
    "end": "2943880"
  },
  {
    "text": "my work week so I'm just learning to choose selectively the type of work I work on make sure I do the things that",
    "start": "2943880",
    "end": "2950160"
  },
  {
    "text": "are going to be most important to the community like making sure that pzero bugs are fixed and pz security issues",
    "start": "2950160",
    "end": "2956520"
  },
  {
    "text": "are fixed yeah I actually like that because it's more sustainable that way for yourself and for the project as well",
    "start": "2956520",
    "end": "2962240"
  },
  {
    "text": "because I've seen a lot of people like just burn out completely cuz you start like obviously at the start of a project",
    "start": "2962240",
    "end": "2967799"
  },
  {
    "text": "or at the beginning stages you're like super excited about it and you're trying to get it off the ground and then users",
    "start": "2967799",
    "end": "2973280"
  },
  {
    "text": "are climbing downloads Are Climbing um and then you're like working on it all the time to the point where you just",
    "start": "2973280",
    "end": "2980160"
  },
  {
    "text": "completely burn out and that really sucks I've seen projects do that where there's a lot of potential and people",
    "start": "2980160",
    "end": "2986160"
  },
  {
    "text": "use it and then there's like a drop off point because like the maintainer just was like I can't do this anymore and",
    "start": "2986160",
    "end": "2992920"
  },
  {
    "text": "like it's it's either because they burnt themselves out or the Community asked so",
    "start": "2992920",
    "end": "2997960"
  },
  {
    "text": "much and like the climbing number of issues totally got to them and they were like I can't handle it yeah I think like",
    "start": "2997960",
    "end": "3003559"
  },
  {
    "text": "I'm going on six or seven years working on some of these projects it it just truly has to be seen as a marathon not",
    "start": "3003559",
    "end": "3009559"
  },
  {
    "text": "as in a Sprint if you're interested in building these things that the community is going to use for a long period of",
    "start": "3009559",
    "end": "3015319"
  },
  {
    "text": "time and I think it's just important to tell yourself like you cannot spend you",
    "start": "3015319",
    "end": "3020720"
  },
  {
    "text": "can't work a c a second work day every night working on open source for seven years you're going to burn yourself out",
    "start": "3020720",
    "end": "3025760"
  },
  {
    "text": "because you're going to be spending 80 hours a week working each week right so yeah yeah and this is where I see",
    "start": "3025760",
    "end": "3031559"
  },
  {
    "text": "foundations attractive too because I think foundations definitely have their mind on some of the same things which is how we can keep something sustainable",
    "start": "3031559",
    "end": "3038200"
  },
  {
    "text": "for yes an extended period of time right yeah I think there's pros and cons like",
    "start": "3038200",
    "end": "3043240"
  },
  {
    "text": "the pro is like you at least have you're within a foundation so there's a lot more process there's also like within",
    "start": "3043240",
    "end": "3048599"
  },
  {
    "text": "the node Foundation there like process around how to manage the community so there's not a lot of like people yelling",
    "start": "3048599",
    "end": "3055160"
  },
  {
    "text": "at contributors or or back and forth between like the maintainers and contributors is more of a balance but",
    "start": "3055160",
    "end": "3061400"
  },
  {
    "text": "the downside to that also is that foundations sometimes move very slowly and that's sometimes what I've heard a",
    "start": "3061400",
    "end": "3066839"
  },
  {
    "text": "lot of people where they're like they don't want to join the node foundation for example because there's a lot of process which means that they can't move",
    "start": "3066839",
    "end": "3071960"
  },
  {
    "text": "as quickly or iterate and have as much control anymore again it's a trade-off that you have to make for yourself in",
    "start": "3071960",
    "end": "3078640"
  },
  {
    "text": "your project yeah for sure yeah I mean I don't know I think that the the open",
    "start": "3078640",
    "end": "3083880"
  },
  {
    "text": "source sustainability problem is one that's I I know if the Sun is ever going to set on that you know but it is",
    "start": "3083880",
    "end": "3089119"
  },
  {
    "text": "interesting to hear how different maintainers tackle yeah so it's interesting we talked about this before",
    "start": "3089119",
    "end": "3094319"
  },
  {
    "text": "but there's two ways in which open source sustainability has been managed like a lot of people are like I can do it by myself and I'm a sole like",
    "start": "3094319",
    "end": "3101079"
  },
  {
    "text": "maintainer and I manage all of my projects by myself and contributors and that model I've not seen work very",
    "start": "3101079",
    "end": "3109599"
  },
  {
    "text": "successfully the ones I've seen that are most successful is the foundation model or a company adopts all these projects",
    "start": "3109599",
    "end": "3116880"
  },
  {
    "text": "and they run with it model and those are the two that I see more longterm with",
    "start": "3116880",
    "end": "3122079"
  },
  {
    "text": "obviously one is like slightly more capitalistic than the other depends on who you ask wait what's capitalism diaa",
    "start": "3122079",
    "end": "3129200"
  },
  {
    "text": "just just kidding well just open a t research",
    "start": "3129200",
    "end": "3134520"
  },
  {
    "text": "gamestock oh yes yes that I think it more more as patronage in the like the",
    "start": "3134520",
    "end": "3141440"
  },
  {
    "text": "vidichi or the vidichi kind of sense yeah exactly yeah yeah the whole free",
    "start": "3141440",
    "end": "3148200"
  },
  {
    "text": "and open software story and you know how companies make so much money off of it and don't contribute back in the way",
    "start": "3148200",
    "end": "3154720"
  },
  {
    "text": "that they should I mean it's I don't know it's just there's something's got to give at some point like it's just not",
    "start": "3154720",
    "end": "3159960"
  },
  {
    "text": "not sustain I don't know it doesn't feel very sustainable to me in the long term you know given software trajectories and",
    "start": "3159960",
    "end": "3166559"
  },
  {
    "text": "I don't want to live in a world full of company Fang company sponsored software you know what I mean like everybody's",
    "start": "3166559",
    "end": "3172520"
  },
  {
    "text": "using a tool that's made by Netflix Google Microsoft like that's no fun you",
    "start": "3172520",
    "end": "3177880"
  },
  {
    "text": "know so I definitely loved the Early times in node when you had these these",
    "start": "3177880",
    "end": "3183160"
  },
  {
    "text": "interesting characters like substack and and Isaac and it's kind of being able to",
    "start": "3183160",
    "end": "3188960"
  },
  {
    "text": "keep that but be able to keep that on a 20e scale like like I don't think any I don't think anyone's answered that",
    "start": "3188960",
    "end": "3194200"
  },
  {
    "text": "question yeah no well that said it's been a pleasure talking with you Ben",
    "start": "3194200",
    "end": "3199520"
  },
  {
    "text": "thank you so much for you know I think like the Innovative contributions that you have but also you're pushing things",
    "start": "3199520",
    "end": "3206200"
  },
  {
    "text": "forward forward but also maintaining a sense of continuity I think for key",
    "start": "3206200",
    "end": "3211240"
  },
  {
    "text": "projects within the ecosystem like thank you for everything that you do and we'll",
    "start": "3211240",
    "end": "3216760"
  },
  {
    "text": "catch you I don't know we'll have to come back and talk more about all of the nerd topics that we weren't able to like",
    "start": "3216760",
    "end": "3221920"
  },
  {
    "text": "heavy click into yeah I think you're super lowkey awesome like I was talking to someone about this where I was just",
    "start": "3221920",
    "end": "3228400"
  },
  {
    "text": "like Ben is like lowkey very instrumental in the community and like",
    "start": "3228400",
    "end": "3233440"
  },
  {
    "text": "is also very down to like you you don't talk about yourself a lot and so people",
    "start": "3233440",
    "end": "3239240"
  },
  {
    "text": "don't know who you are but I'm just like if you go through repos and you look at like history of node like JavaScript you",
    "start": "3239240",
    "end": "3245359"
  },
  {
    "text": "pop up a lot yeah pry instent blushing I'm blushing now but yeah and then oh we",
    "start": "3245359",
    "end": "3250680"
  },
  {
    "text": "didn't even get to talk about wombat dressing room which is like this really cool project that you worked on a couple",
    "start": "3250680",
    "end": "3256400"
  },
  {
    "text": "years ago or I don't know maybe a year and a half or something ago well I mean it it was publicly released at that",
    "start": "3256400",
    "end": "3261839"
  },
  {
    "text": "point like it's uh this whole staging process for npm packages so that Google helped open source and and Ben was like",
    "start": "3261839",
    "end": "3268480"
  },
  {
    "text": "a key part of that project and I'm sure also the initiative to open source it so",
    "start": "3268480",
    "end": "3273680"
  },
  {
    "text": "it's very very exciting you should check it out we'll put it in the show notes but thank you Ben we're we're like",
    "start": "3273680",
    "end": "3280119"
  },
  {
    "text": "bowing thank you Sensei Ben I really appreciate being on the show like it's been I haven't done much talking",
    "start": "3280119",
    "end": "3285880"
  },
  {
    "text": "recently and so it's really fun so thanks for thinking of me and having me thank you sense amen thank",
    "start": "3285880",
    "end": "3293920"
  },
  {
    "text": "you we have some great episodes coming down the pipeline next week yep no",
    "start": "3295319",
    "end": "3301040"
  },
  {
    "text": "returns that's our debate format Divia and fos face off with Amel and Nick the",
    "start": "3301040",
    "end": "3306359"
  },
  {
    "text": "premise is web apps and websites are fundamentally different after that we",
    "start": "3306359",
    "end": "3311440"
  },
  {
    "text": "have shows on functional programming six accessibility mistakes to avoid and a very special return of JS danger I don't",
    "start": "3311440",
    "end": "3318440"
  },
  {
    "text": "want to reveal too much but let's just say we have some special Tricks Up Our Sleeve this episode was hosted by AML",
    "start": "3318440",
    "end": "3324160"
  },
  {
    "text": "Hussein and produced by Jared Santo with with music by The Mysterious breakmaster cylinder shout out to all of our",
    "start": "3324160",
    "end": "3329680"
  },
  {
    "text": "sponsors thank you to fley launch darkley and of course LOD that's all for now we'll talk to you again next",
    "start": "3329680",
    "end": "3338200"
  },
  {
    "text": "[Music]",
    "start": "3338730",
    "end": "3353440"
  },
  {
    "text": "week everyone JavaScript is so cool have you",
    "start": "3353440",
    "end": "3358830"
  },
  {
    "text": "[Music] heard",
    "start": "3358830",
    "end": "3366039"
  }
]