[
  {
    "text": "debugging is a very associative process if things get very very very messy you can start doing a more standardized",
    "start": "199",
    "end": "7599"
  },
  {
    "text": "process but early on in the process I found that associative thinking leads to",
    "start": "7599",
    "end": "13559"
  },
  {
    "text": "faster results in most of the cases and that's another reason to look at the code because once you kind of get the",
    "start": "13559",
    "end": "20000"
  },
  {
    "text": "look of the code get a sense of delay of the land then you are better position to",
    "start": "20000",
    "end": "25599"
  },
  {
    "text": "look at additional data whether it's logs or metrics you've discussed or the bug report itself or anything else to",
    "start": "25599",
    "end": "33079"
  },
  {
    "text": "kind of see things in context rather than just trying to piece everything together from",
    "start": "33079",
    "end": "40079"
  },
  {
    "text": "scratch what's up friends this episode is brought to you by Source graph with the release of source graph 4.0 and the",
    "start": "42559",
    "end": "50320"
  },
  {
    "text": "Starship event just a few weeks behind us is super clear that Source graph is becoming not just code search but a",
    "start": "50320",
    "end": "56399"
  },
  {
    "text": "full-on code intelligence platform and I'm here with Joe kler product manager of code insights for Source graph Joel",
    "start": "56399",
    "end": "62960"
  },
  {
    "text": "this move from code search to code intelligence is a really big deal how would you explain this feature code",
    "start": "62960",
    "end": "69759"
  },
  {
    "text": "insights if you're just talking to folks in the hallway track of your favorite conference um I would really start with",
    "start": "69759",
    "end": "75720"
  },
  {
    "text": "a technical because before I was a product manager I used to be an engineer as well and it's really cool and exciting just to be able to say we're",
    "start": "75720",
    "end": "81720"
  },
  {
    "text": "going to turn your codebase into a database and the structured language that you need to interact is just the",
    "start": "81720",
    "end": "87200"
  },
  {
    "text": "ability to write a code search you know literal search that's totally fine regular expression you know that'll give",
    "start": "87200",
    "end": "92360"
  },
  {
    "text": "you a few more advanced options even a structural search but the number of longtail possibilities that unlocks",
    "start": "92360",
    "end": "97920"
  },
  {
    "text": "truly the Journey of building this product was just saying well we've just unlocked you know an infinite number of",
    "start": "97920",
    "end": "103920"
  },
  {
    "text": "possibilities we got to figure out some immediate use cases so we can start to you know invest in this product build it",
    "start": "103920",
    "end": "109000"
  },
  {
    "text": "and sell it but we're only getting started in terms of the number of uses that we're uncovering for it the story I",
    "start": "109000",
    "end": "115159"
  },
  {
    "text": "told you about discovering like version tracking turned out to be a really important use case that wasn't even on a road map months prior to discovering",
    "start": "115159",
    "end": "121439"
  },
  {
    "text": "that as we were already planning to launch this product until we talked to enough folks realized this was a problem and then found well oh that's like a",
    "start": "121439",
    "end": "127079"
  },
  {
    "text": "simple regular expression capture group that you can just plug right in because we really built this system to not limit",
    "start": "127079",
    "end": "132280"
  },
  {
    "text": "the power of what we built we don't want to give you like three out of the box templates and you can only change like one character or something it's truly",
    "start": "132280",
    "end": "138440"
  },
  {
    "text": "like the templates are there to hold your hand and get you started but if you can come up with anything you want track in your code base you can do that with",
    "start": "138440",
    "end": "144160"
  },
  {
    "text": "code insights I love it thank you Joel so right now there is a treasure Trove of insights just waiting for you living",
    "start": "144160",
    "end": "151480"
  },
  {
    "text": "inside your codebase your codebase is now a quable database thanks to Source graph this opens up a world of",
    "start": "151480",
    "end": "158480"
  },
  {
    "text": "possibilities for your code and the intelligence you can gain from it a good next step is to go to about. source.com",
    "start": "158480",
    "end": "165120"
  },
  {
    "text": "code insights the link will be in the show notes see how the teams are using",
    "start": "165120",
    "end": "170239"
  },
  {
    "text": "this awesome feature again about. sourcegraph decom SLC code D insights",
    "start": "170239",
    "end": "176599"
  },
  {
    "text": "again this link is in the show notes",
    "start": "176599",
    "end": "181760"
  },
  {
    "text": "[Music]",
    "start": "183590",
    "end": "187430"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "194120",
    "end": "200720"
  },
  {
    "text": "from all around the go Community we record live each and every Tuesday at 3 p.m. us Eastern subscribe at",
    "start": "200720",
    "end": "207239"
  },
  {
    "text": "youtube.com/ changelog to be notified and join the go time FM channel of go for slack to chat along with us special",
    "start": "207239",
    "end": "214080"
  },
  {
    "text": "thanks to our partners at fastly for delivering go time super fast all around the world and to fly.io deploy your app",
    "start": "214080",
    "end": "220799"
  },
  {
    "text": "servers close to your users learn more at fly.io okay here we",
    "start": "220799",
    "end": "227920"
  },
  {
    "text": "go so today we are talking about debugging go and I have to share that",
    "start": "227920",
    "end": "234200"
  },
  {
    "text": "this is actually a re-recording of the episode because as much as we did our best to have redundancy and and the",
    "start": "234200",
    "end": "240159"
  },
  {
    "text": "double local recording and saving and whatnot the internet was bad the audio was bad everything was bad so we are",
    "start": "240159",
    "end": "246040"
  },
  {
    "text": "re-recording and we hope that this time there will be no black boxes for us to",
    "start": "246040",
    "end": "251239"
  },
  {
    "text": "poke I am joined by my co-host Ian hey Ian how are you doing I'm doing well uh",
    "start": "251239",
    "end": "257120"
  },
  {
    "text": "this one's going to be interesting for me because I'm definitely still one of those print people so we'll see see if I",
    "start": "257120",
    "end": "263400"
  },
  {
    "text": "learn anything we're also joined by Lan haimovic and by Thiago K and gentlemen",
    "start": "263400",
    "end": "272880"
  },
  {
    "text": "would you like to introduce yourself you are joining us from 1 hour in the future",
    "start": "272880",
    "end": "278520"
  },
  {
    "text": "you're joining us one hour away from Berlin you are in Tel Aviv yeah so I can definitely relate print has its",
    "start": "278520",
    "end": "285600"
  },
  {
    "text": "privileges because the bugers can be so cumbersome and often hard to use in so",
    "start": "285600",
    "end": "292639"
  },
  {
    "text": "many cases and so much easier to just say I want to know what's happening on this line let me add a line recompile",
    "start": "292639",
    "end": "300680"
  },
  {
    "text": "rebuild ship it and get to know whatever is happening there however rebuilding",
    "start": "300680",
    "end": "306440"
  },
  {
    "text": "the software and shipping it isn't always that easy which is kind of for rookout coming in so my name is lovic I",
    "start": "306440",
    "end": "313479"
  },
  {
    "text": "the C of rookout spent about a decade doing cyber security and I for the past",
    "start": "313479",
    "end": "320280"
  },
  {
    "text": "wow is it six years now I've been focusing mostly on observability and how to use a dynamic",
    "start": "320280",
    "end": "327639"
  },
  {
    "text": "instrumentations and other Concepts from cyber security to make observability",
    "start": "327639",
    "end": "333400"
  },
  {
    "text": "debugging more agile and easier to use in production environments thank you for",
    "start": "333400",
    "end": "338600"
  },
  {
    "text": "joining us Thiago you are also here in Berlin yes hi everybody I'm Thiago yeah",
    "start": "338600",
    "end": "344600"
  },
  {
    "text": "I live here in Berlin I'm originary Brazilian yeah so I'm a soft engineer I've been working mainly like almost",
    "start": "344600",
    "end": "351919"
  },
  {
    "text": "exclusively with Co for like more than 5 years now currently I work for elastic",
    "start": "351919",
    "end": "357039"
  },
  {
    "text": "on the elastic agent and B so yeah it's interesting because lots of",
    "start": "357039",
    "end": "362800"
  },
  {
    "text": "our debugging there is basically logs because we basically build binary ship",
    "start": "362800",
    "end": "368280"
  },
  {
    "text": "people run it they sometimes run into issues because well the software is perfect so actually log statements and",
    "start": "368280",
    "end": "376400"
  },
  {
    "text": "print the bags is still one of the main ways to discover what's happening especially when the issues are not on",
    "start": "376400",
    "end": "382240"
  },
  {
    "text": "our machines yeah and most of my work experience before elastic was with",
    "start": "382240",
    "end": "388240"
  },
  {
    "text": "startups and microser Services also worked a lot in the sense of like bringing observability into some places",
    "start": "388240",
    "end": "395599"
  },
  {
    "text": "and was always like advocating for better observability in the bugging tools so yeah that's a a topic that I",
    "start": "395599",
    "end": "403360"
  },
  {
    "text": "enjoy a lot and try to always bring more let's say Awareness on my workplaces you",
    "start": "403360",
    "end": "408680"
  },
  {
    "text": "know I need to make things observable and easier to understand when they break so they should almost tell us hey I",
    "start": "408680",
    "end": "414919"
  },
  {
    "text": "broke because of that the AI the AI will be telling you you broke it because of that yeah so",
    "start": "414919",
    "end": "421479"
  },
  {
    "text": "let's talk about some practices that we have today without the AI what are some",
    "start": "421479",
    "end": "426759"
  },
  {
    "text": "good and bad practices in debugging that are maybe specific to go I think definitely the it's a good practice it's",
    "start": "426759",
    "end": "434000"
  },
  {
    "text": "always have logs on your application like make sure you write your application and you have proper log",
    "start": "434000",
    "end": "441680"
  },
  {
    "text": "statements which is a very broad concept like what is like proper enough right",
    "start": "441680",
    "end": "447120"
  },
  {
    "text": "and something that you basically learn by doing by seeing all applications but",
    "start": "447120",
    "end": "452160"
  },
  {
    "text": "definitely you should have enough logs for things especially for like if you write a web server right ideally as soon",
    "start": "452160",
    "end": "458479"
  },
  {
    "text": "as the HP server is running should say hey I'm running on this port on this host should show you some information of",
    "start": "458479",
    "end": "465560"
  },
  {
    "text": "how it's starting what it's doing printing some configuration that might change for environments and might be",
    "start": "465560",
    "end": "472159"
  },
  {
    "text": "very critical to solve some issues so like I think best example like sometimes",
    "start": "472159",
    "end": "477879"
  },
  {
    "text": "you run something on staging on a port and then production another one but then if you don't set the configuration right",
    "start": "477879",
    "end": "483879"
  },
  {
    "text": "things just don't work and then if you don't have any log statement anything telling hey I'm actually starting my web",
    "start": "483879",
    "end": "489639"
  },
  {
    "text": "server on Port 3,000 not 8,000 you might spend a few hours debugging so",
    "start": "489639",
    "end": "495680"
  },
  {
    "text": "definitely really think when the application is running or starting what",
    "start": "495680",
    "end": "501280"
  },
  {
    "text": "a engineer or even a user right that's using your application might need to know if something goes wrong or just to",
    "start": "501280",
    "end": "509639"
  },
  {
    "text": "know about the current state of the application so the tricky thing about debugging any language I would say is",
    "start": "509639",
    "end": "517680"
  },
  {
    "text": "that you're probably debugging the unpredictable because if something is",
    "start": "517680",
    "end": "523279"
  },
  {
    "text": "predictably broken then you're probably going to have a log line somewhere saying the system is essentially saying",
    "start": "523279",
    "end": "530440"
  },
  {
    "text": "I'm broke this is why just go ahead and fix it and maybe the system is writing",
    "start": "530440",
    "end": "535839"
  },
  {
    "text": "it out very clearly or maybe you're just knowledgeable enough in the domain in the application in whatever to just get",
    "start": "535839",
    "end": "542600"
  },
  {
    "text": "a sense of what's going on and quickly pick up the breadcrumbs and know what is",
    "start": "542600",
    "end": "548160"
  },
  {
    "text": "what if you're are bothering to debug something then it's unpredictable to you",
    "start": "548160",
    "end": "554720"
  },
  {
    "text": "in some way maybe because the bug is super complex maybe because it has many dependencies maybe because you're not",
    "start": "554720",
    "end": "561360"
  },
  {
    "text": "that much of an expert in go or in the application itself and that's perfectly",
    "start": "561360",
    "end": "566399"
  },
  {
    "text": "fine nobody's perfect and we all have our knowledge gaps but whatever it is",
    "start": "566399",
    "end": "572240"
  },
  {
    "text": "you kind of have to keep in mind that something is challenging it's unpredictable in in some ways and you",
    "start": "572240",
    "end": "579320"
  },
  {
    "text": "have to think about how do you address that unpredictability whether it's about",
    "start": "579320",
    "end": "585440"
  },
  {
    "text": "by pushing those print statements to kind of get a better sense whether it's about using a debugger or live debugger",
    "start": "585440",
    "end": "592760"
  },
  {
    "text": "or looking at other observability data whatever it is you kind of have to address the unpredictability to",
    "start": "592760",
    "end": "599640"
  },
  {
    "text": "get a sense of what is known and build from that and speaking of go in particular one thing I found that often",
    "start": "599640",
    "end": "606880"
  },
  {
    "text": "confounds people it let go is not supposed to have exceptions and yet it somehow kind of does now I'm not trying",
    "start": "606880",
    "end": "613519"
  },
  {
    "text": "to argue with anyone about anything but panics and defers act very similar to",
    "start": "613519",
    "end": "620000"
  },
  {
    "text": "exception throwing and and catching them and if you are a new to go or maybe",
    "start": "620000",
    "end": "626000"
  },
  {
    "text": "you're not very familiar with the code base panic are often overlooked and some",
    "start": "626000",
    "end": "631320"
  },
  {
    "text": "libraries actually even use intentionally panics as a form of exceptions to unwind the stacks if the",
    "start": "631320",
    "end": "638680"
  },
  {
    "text": "stack is very deep but either way if you're looking at an error flow if you're looking at unpredictable outcome",
    "start": "638680",
    "end": "645360"
  },
  {
    "text": "it's always good to think about is there any chance something is panicking here",
    "start": "645360",
    "end": "651120"
  },
  {
    "text": "and if it is how can I test it or how can I make sure nothing is panicking",
    "start": "651120",
    "end": "656839"
  },
  {
    "text": "because you'll often find that whether intent inally or unintentionally there could be panics in there somewhere",
    "start": "656839",
    "end": "663240"
  },
  {
    "text": "that's throwing your code into some unpredictable flow that's causing you a headache so what would you say is a",
    "start": "663240",
    "end": "670760"
  },
  {
    "text": "difference between debugging locally versus debugging in the cloud I think",
    "start": "670760",
    "end": "677000"
  },
  {
    "text": "the main difference is debugging locally you can run the the bug in slow motion",
    "start": "677000",
    "end": "683200"
  },
  {
    "text": "so actually I was at Cofer Con in a workshop from bu Kennedy and he had told",
    "start": "683200",
    "end": "688839"
  },
  {
    "text": "this that was very interesting like the function of the debugger is to run your bug in slow motion basically that's the",
    "start": "688839",
    "end": "694399"
  },
  {
    "text": "only thing it does yeah right but it's actually very interesting and in the end of the day that's it right when you",
    "start": "694399",
    "end": "701240"
  },
  {
    "text": "attach the bucker to an application that usually you only do it locally you can literally run the code in slow motion",
    "start": "701240",
    "end": "707920"
  },
  {
    "text": "stop and introspect things right I find it extremely useful to have the buggers",
    "start": "707920",
    "end": "713079"
  },
  {
    "text": "when you do not fully understand the workflow of the program or like the codee paths or they toen Dynamic things",
    "start": "713079",
    "end": "719639"
  },
  {
    "text": "happening if I really understand the program usually I just always go for print statements yeah because then like",
    "start": "719639",
    "end": "725839"
  },
  {
    "text": "okay I pass it through here that's the value of that variable usually have a hint what's happening right when I have",
    "start": "725839",
    "end": "731760"
  },
  {
    "text": "no clue usually the debug okay I know that it's probably get into this function and I think that's one of the",
    "start": "731760",
    "end": "738240"
  },
  {
    "text": "main difference from from the cloud you can actually attach a the buer you can run things in slow motion right because",
    "start": "738240",
    "end": "744320"
  },
  {
    "text": "if you're in a cloud even like it's a kubernets deployment on your staging environment or something usually there",
    "start": "744320",
    "end": "750079"
  },
  {
    "text": "are some proxy some things in front of your application that might have some timeout and things like that and once you put at the bug and say like hey stop",
    "start": "750079",
    "end": "757399"
  },
  {
    "text": "my HTP request for I don't know 5 minutes while I think or maybe 30 seconds then time out you know you step",
    "start": "757399",
    "end": "764880"
  },
  {
    "text": "specially go you go to some point and hey context that line cancel the request of this the context of this request time",
    "start": "764880",
    "end": "771880"
  },
  {
    "text": "it out so I think that's the that would the main difference yeah so debugging",
    "start": "771880",
    "end": "777920"
  },
  {
    "text": "the cloud sucks it really sucks because the two techniques we're used to working with",
    "start": "777920",
    "end": "783760"
  },
  {
    "text": "for debugging just don't work as well 99% of the times you can't attach a",
    "start": "783760",
    "end": "789880"
  },
  {
    "text": "debugger when you're running in the cloud you can't attach a traditional debugger whether it's because you don't have the exess for it whether because",
    "start": "789880",
    "end": "797120"
  },
  {
    "text": "the debugger itself is going to be holding the process as dieo mentioned but that's going to kill any health",
    "start": "797120",
    "end": "802399"
  },
  {
    "text": "probs the process is getting and get you remove you from any load balancer it's going to get AWS or kuber or whoever is",
    "start": "802399",
    "end": "809720"
  },
  {
    "text": "orchestrating the application to terminate your process and then spawn a new one without your debugger attached",
    "start": "809720",
    "end": "816600"
  },
  {
    "text": "and there are other slow of technical problems but 99% of the time you're not going to be able to attach that debugger",
    "start": "816600",
    "end": "822760"
  },
  {
    "text": "to have the beauty of watching your code move in slow motion so you can actually spot the bug as it's moving at lightning",
    "start": "822760",
    "end": "829320"
  },
  {
    "text": "speed through your code and also logs which are nice they're definitely better",
    "start": "829320",
    "end": "835519"
  },
  {
    "text": "than debuggers which you can't use at all but again when you go to the realm of",
    "start": "835519",
    "end": "840600"
  },
  {
    "text": "unpredictability logs are more often than not I wouldn't say enough or not",
    "start": "840600",
    "end": "845920"
  },
  {
    "text": "enough because that's a harsh statement but they can be challenging to read they can be challenging to see through and",
    "start": "845920",
    "end": "853519"
  },
  {
    "text": "grasp the bigger picture and find essentially the needle in the Hast stack and it's not just about how many logs",
    "start": "853519",
    "end": "860040"
  },
  {
    "text": "you have it's also about where are they positioned compared to the bag and how much information do they actually reveal",
    "start": "860040",
    "end": "867160"
  },
  {
    "text": "about the inner workings of the software and now what as Ian literally started",
    "start": "867160",
    "end": "873120"
  },
  {
    "text": "the call with is about I like to add prints to get a better sense of things",
    "start": "873120",
    "end": "878759"
  },
  {
    "text": "and adding prints when your code is running in the cloud that takes a while you have to add a code whether then you",
    "start": "878759",
    "end": "885480"
  },
  {
    "text": "have to either build it locally or push it to the remote and then you have that has to build go to cicd deploy somehow",
    "start": "885480",
    "end": "893600"
  },
  {
    "text": "it can easily take you 20 minutes if it's a personal environment to add that",
    "start": "893600",
    "end": "899360"
  },
  {
    "text": "log line or it can take you hours or days if it's a shared environment or even production environment so you can",
    "start": "899360",
    "end": "905639"
  },
  {
    "text": "still debug with prints but changing them becomes very very painful and slow",
    "start": "905639",
    "end": "911360"
  },
  {
    "text": "which is part of the reason that the new form of debuggers the live debuggers have kind of Spun up which are Super",
    "start": "911360",
    "end": "917639"
  },
  {
    "text": "useful and we actually released go support last year and I think that's",
    "start": "917639",
    "end": "923480"
  },
  {
    "text": "something that makes cloudy bugging so much easier when you can get that traditional sense of setting breakpoints",
    "start": "923480",
    "end": "929880"
  },
  {
    "text": "and seeing the data while still working with load balancers and API gateways and",
    "start": "929880",
    "end": "935240"
  },
  {
    "text": "kubernetes and all that magic yeah I want to hear more about that cloud debugging like I've not heard of that",
    "start": "935240",
    "end": "942959"
  },
  {
    "text": "it's kind of blowing my mind um can you just elaborate a little bit sure so at",
    "start": "942959",
    "end": "948800"
  },
  {
    "text": "rot what we aim to do is provide you with developer observability in general",
    "start": "948800",
    "end": "954199"
  },
  {
    "text": "but first and foremost a debugger like experience with without any debugger",
    "start": "954199",
    "end": "959759"
  },
  {
    "text": "involved essentially what we ask you to do is install our agent or sdks for go",
    "start": "959759",
    "end": "965800"
  },
  {
    "text": "it's just a go package go module and that go module",
    "start": "965800",
    "end": "971519"
  },
  {
    "text": "essentially connects to an orchestration service we run and then we kind of",
    "start": "971519",
    "end": "977040"
  },
  {
    "text": "provide you with what would happen if I plac the breakpoint here so you go into our platform you place a breakpoint or a",
    "start": "977040",
    "end": "983959"
  },
  {
    "text": "non-breaking breakpoint on that line of code and the next time this line is exec uted it can be once it can be 100 times",
    "start": "983959",
    "end": "990639"
  },
  {
    "text": "it can be more we collect snapshots and those snapshots looks exactly like a",
    "start": "990639",
    "end": "996680"
  },
  {
    "text": "breakpoint would show what a debugger would show if a breakpoint was hit so you would get a stack Trace you would get the local variable values everything",
    "start": "996680",
    "end": "1004120"
  },
  {
    "text": "except those snapshots are asynchronous so the the application doesn't stop it doesn't wait for you to read through the",
    "start": "1004120",
    "end": "1011040"
  },
  {
    "text": "slow motion of debugging we slow the application for a millisecond or two when we capture that snapshot and then",
    "start": "1011040",
    "end": "1017880"
  },
  {
    "text": "you can read it take a look at it offline at your leisure you can go back and forth between different snapshots so",
    "start": "1017880",
    "end": "1024199"
  },
  {
    "text": "you can see how the code is running supposedly in slow motion except the code run really fast as it was",
    "start": "1024199",
    "end": "1032689"
  },
  {
    "text": "[Music]",
    "start": "1032690",
    "end": "1035778"
  },
  {
    "text": "executing this episode is brought to you by honeycomb find your most perplexing application issues honeycomb is a fast",
    "start": "1044919",
    "end": "1053000"
  },
  {
    "text": "analysis tool that reveals the truth about every aspect of your application in production find out how users",
    "start": "1053000",
    "end": "1059160"
  },
  {
    "text": "experience your code in complex and unpredictable environments find patterns and outliers across billions of rows of",
    "start": "1059160",
    "end": "1065880"
  },
  {
    "text": "data and definiely solve your problems and we use honeycomb here at changel that's why we welcome the opportunity to",
    "start": "1065880",
    "end": "1071120"
  },
  {
    "text": "add them as one of our infrastructure Partners in particular we use honeycomb to track down CDN issues recently which",
    "start": "1071120",
    "end": "1077559"
  },
  {
    "text": "we talked about at at length on the Kaizen edition of the ship podcast so check that out here's the thing teams",
    "start": "1077559",
    "end": "1083400"
  },
  {
    "text": "who don't use honeycomb are forced to find the needle and the haast stack they scroll through endless dashboards",
    "start": "1083400",
    "end": "1088720"
  },
  {
    "text": "playing whack-a-mole they deal with alert floods try to guess which one matters and they go from tool to tool to",
    "start": "1088720",
    "end": "1094919"
  },
  {
    "text": "Tool playing sleuth trying to figure out how all the puzzle pieces fit together it's this context switching and Tool",
    "start": "1094919",
    "end": "1100720"
  },
  {
    "text": "sprawl that are slowly killing team's Effectiveness and ultimately hindering their business with honeycomb you get a",
    "start": "1100720",
    "end": "1106799"
  },
  {
    "text": "fast Unified and clear understanding of the one thing driving your business",
    "start": "1106799",
    "end": "1112679"
  },
  {
    "text": "production with honeycomb you guess less and you know more join the Swarm and try honeycomb free today at",
    "start": "1112679",
    "end": "1120039"
  },
  {
    "text": "honeycomb.io changelog again honeycomb.io change",
    "start": "1120039",
    "end": "1125480"
  },
  {
    "text": "[Music]",
    "start": "1125480",
    "end": "1137320"
  },
  {
    "text": "log so you mentioned that you can do this Cloud debugging in with a snapshots",
    "start": "1137320",
    "end": "1143240"
  },
  {
    "text": "of the of how things are with when you place those um break points is a way of",
    "start": "1143240",
    "end": "1148799"
  },
  {
    "text": "doing that in the cloud that is quite easy or easier mhm what general some",
    "start": "1148799",
    "end": "1154559"
  },
  {
    "text": "good practices that you have to make debugging easier so what can you do to",
    "start": "1154559",
    "end": "1159760"
  },
  {
    "text": "help yourself your future self your colleagues when you do debugging generally what are those practices that",
    "start": "1159760",
    "end": "1165559"
  },
  {
    "text": "you're following so obviously logging as tho mentioned logs are awesome you",
    "start": "1165559",
    "end": "1171600"
  },
  {
    "text": "shouldn't skimp for longing you should also keep in mind that there is such a thing as too much logs especially when",
    "start": "1171600",
    "end": "1177360"
  },
  {
    "text": "you get your bill from your log aggregator so do watch out for that but",
    "start": "1177360",
    "end": "1182720"
  },
  {
    "text": "that's the entire topic about optimizing the cost and volume of logs I'm not going to dive into that for my",
    "start": "1182720",
    "end": "1189559"
  },
  {
    "text": "experience most people are on the side of too few logs especially early on the",
    "start": "1189559",
    "end": "1194919"
  },
  {
    "text": "other thing which kind of touches back to the point I've mentioned is when when you're writing code focus on the error",
    "start": "1194919",
    "end": "1201000"
  },
  {
    "text": "conditions I think I read somewhere that when you write code about 20% of your",
    "start": "1201000",
    "end": "1206400"
  },
  {
    "text": "code deals with the happy flow deals with what should happen and then 80% of",
    "start": "1206400",
    "end": "1212159"
  },
  {
    "text": "your code deals with what shouldn't happen with validating inputs with",
    "start": "1212159",
    "end": "1217280"
  },
  {
    "text": "responding to errors with network disconnections with database errors with",
    "start": "1217280",
    "end": "1222440"
  },
  {
    "text": "God knows what and that's where 80% of your code is going to lie and complexity",
    "start": "1222440",
    "end": "1227960"
  },
  {
    "text": "wise way more than 80% of your code is going to be there and try to focus as much as",
    "start": "1227960",
    "end": "1234440"
  },
  {
    "text": "you can on thinking through those errors as you're writing the code while it's",
    "start": "1234440",
    "end": "1239640"
  },
  {
    "text": "definitely useful to write a log line saying you've entered the function maybe",
    "start": "1239640",
    "end": "1245120"
  },
  {
    "text": "it's an important function maybe it's going to be useful someday that log line is far more likely to be nois and far",
    "start": "1245120",
    "end": "1251679"
  },
  {
    "text": "more likely to end up in the in the bin of those logs are costing me way too much money and it's time to turn them",
    "start": "1251679",
    "end": "1257240"
  },
  {
    "text": "off on on the other hand adding logs for error States those are way more useful",
    "start": "1257240",
    "end": "1262960"
  },
  {
    "text": "something went wrong make sure you write a log line about it I think one of our",
    "start": "1262960",
    "end": "1269320"
  },
  {
    "text": "first customers at rookout actually used rookout at the time it was node a node application to De buug a bug they've",
    "start": "1269320",
    "end": "1276559"
  },
  {
    "text": "been chasing for over 6 months it was a super complex bugs and they had a they",
    "start": "1276559",
    "end": "1282640"
  },
  {
    "text": "were doing all three sided authentications and they got a cookie",
    "start": "1282640",
    "end": "1287679"
  },
  {
    "text": "and actually had this error validation code that assumed that if the cookie was too big they going to trate it now the",
    "start": "1287679",
    "end": "1294880"
  },
  {
    "text": "cookie held a JWT token obviously it's a signed artifact if you trate a signed",
    "start": "1294880",
    "end": "1300760"
  },
  {
    "text": "artifact the signature is not going to be valid send you done all through kinds of pain and they literally had a comment",
    "start": "1300760",
    "end": "1308600"
  },
  {
    "text": "on that if statement add a log line here and to do comment to add a log line it",
    "start": "1308600",
    "end": "1315279"
  },
  {
    "text": "literally said this should never happen at the log line and they didn't add the",
    "start": "1315279",
    "end": "1320440"
  },
  {
    "text": "log line and they've spent over six months trying to figure out what was",
    "start": "1320440",
    "end": "1325720"
  },
  {
    "text": "going wrong and why some users couldn't log into the system and that was because",
    "start": "1325720",
    "end": "1331360"
  },
  {
    "text": "their cookies were too large because of VAR settings somewhere else across the",
    "start": "1331360",
    "end": "1337320"
  },
  {
    "text": "world yeah definitely watching out for your aror logs I think that's like one",
    "start": "1337320",
    "end": "1342840"
  },
  {
    "text": "of the most helpful thing but not not just the logs themselves but like craft",
    "start": "1342840",
    "end": "1348679"
  },
  {
    "text": "good error message you know don't just say hey I broke or like I don't know error inserting on the database try to",
    "start": "1348679",
    "end": "1356240"
  },
  {
    "text": "to give a context of why that thing failed you know like no fail inserting",
    "start": "1356240",
    "end": "1361919"
  },
  {
    "text": "like for simple thing like for example it's an insert at least print the name of the table maybe you cannot print the whole SQL statement but you can print",
    "start": "1361919",
    "end": "1369600"
  },
  {
    "text": "the table or maybe say failure inserting a user or doing something so like try to",
    "start": "1369600",
    "end": "1376159"
  },
  {
    "text": "explain it given context why you in that error path right like L said",
    "start": "1376159",
    "end": "1381880"
  },
  {
    "text": "watch out for those error handling code that's usually where lots of bugs and issues are going to happen errors are",
    "start": "1381880",
    "end": "1388240"
  },
  {
    "text": "not well handled or even worse like they're handled but like they're just hidden and then M you when run",
    "start": "1388240",
    "end": "1395000"
  },
  {
    "text": "application on your logs and things like that you don't see that there was an error or maybe the application exits",
    "start": "1395000",
    "end": "1401080"
  },
  {
    "text": "from like a error handling path but it doesn't tell you why or there's an",
    "start": "1401080",
    "end": "1407000"
  },
  {
    "text": "arrrow and but doesn't tell you why for examp I actually have a good example like recently we had some PRS on our",
    "start": "1407000",
    "end": "1414840"
  },
  {
    "text": "applications like adding more logs adding more context to this error log because something like oh I cannot start",
    "start": "1414840",
    "end": "1421520"
  },
  {
    "text": "because the loog file already exists right so maybe there's another instance but it didn't tell where the lock file",
    "start": "1421520",
    "end": "1427360"
  },
  {
    "text": "is located just says the lock file it's there but like okay where is the file how do I find it to find which process",
    "start": "1427360",
    "end": "1433320"
  },
  {
    "text": "is holding that file and then maybe if you go through lots and lots of log at the very beginning of the application it",
    "start": "1433320",
    "end": "1439880"
  },
  {
    "text": "says oh my configuration path here and then you have to know that you need to join that with something else to find",
    "start": "1439880",
    "end": "1445559"
  },
  {
    "text": "the lock file right but why not just print together you know like hey lock file here's the whole full path already",
    "start": "1445559",
    "end": "1453000"
  },
  {
    "text": "exists I cannot start so sometimes simple things like that can make a whole difference so maybe found a in recover",
    "start": "1453000",
    "end": "1460440"
  },
  {
    "text": "error I have to shut down but here's the error here's the situation like try to show the code path that led to the error",
    "start": "1460440",
    "end": "1467880"
  },
  {
    "text": "error handling and give as much context on your error message as possible so",
    "start": "1467880",
    "end": "1473840"
  },
  {
    "text": "someone reading the log or even reading the error in whatever observability to you have the person reading can better",
    "start": "1473840",
    "end": "1481760"
  },
  {
    "text": "understand why that happened so we've talked a lot about logging and it sounds",
    "start": "1481760",
    "end": "1487240"
  },
  {
    "text": "like for errors logging is the way to go where do you think the place of like stats are like counts and you know",
    "start": "1487240",
    "end": "1493000"
  },
  {
    "text": "histograms of latencies and where does that sit in the debugging landscape that's tricky question metrics are well",
    "start": "1493000",
    "end": "1502399"
  },
  {
    "text": "they are one of the most complex and Powerful ways to monitor software you",
    "start": "1502399",
    "end": "1507679"
  },
  {
    "text": "can get a lot done especially if you're looking at Large Scale systems production systems and those sort of",
    "start": "1507679",
    "end": "1514640"
  },
  {
    "text": "things but you also need to have some basic understanding of how metrix works",
    "start": "1514640",
    "end": "1520720"
  },
  {
    "text": "and how to approach them you also need some real world experience with your",
    "start": "1520720",
    "end": "1526640"
  },
  {
    "text": "specific application because numbers that can be awesome for one application can be terrible for",
    "start": "1526640",
    "end": "1532679"
  },
  {
    "text": "another and some of this Alles in the business context in in the domain you are operating in and some of it just",
    "start": "1532679",
    "end": "1539480"
  },
  {
    "text": "lies with the characteristics of your applications and various decisions you've made along the way obviously",
    "start": "1539480",
    "end": "1546320"
  },
  {
    "text": "there are a few great places to start that are always good looking at your request per second looking at your",
    "start": "1546320",
    "end": "1553240"
  },
  {
    "text": "essentially how many requests your application is processing per second and looking at your latency how long does it",
    "start": "1553240",
    "end": "1559799"
  },
  {
    "text": "take you to process a request looking at your error rates how many requests are",
    "start": "1559799",
    "end": "1565240"
  },
  {
    "text": "successful versus how many or not but then there are all sorts of fancy ways to look at the data which change do I",
    "start": "1565240",
    "end": "1572960"
  },
  {
    "text": "look at the median the average the P90 the P95 the",
    "start": "1572960",
    "end": "1578320"
  },
  {
    "text": "P99 and depends on the context some applications might make perfect sense to",
    "start": "1578320",
    "end": "1583840"
  },
  {
    "text": "look at P95 While others might have to look at P9 99.9 while other still might look at the",
    "start": "1583840",
    "end": "1590960"
  },
  {
    "text": "average also what dimensions do you look at those metrics how do you break them",
    "start": "1590960",
    "end": "1596520"
  },
  {
    "text": "down do you have multiple regions do you want to monitor it per regions do you",
    "start": "1596520",
    "end": "1601720"
  },
  {
    "text": "have multiple end points do you want to monitor it per endpoint do different end",
    "start": "1601720",
    "end": "1607159"
  },
  {
    "text": "points have different tolerance for latency or for errors and the list goes",
    "start": "1607159",
    "end": "1612520"
  },
  {
    "text": "on and on and on so on the one hand if you're looking to monitor for an",
    "start": "1612520",
    "end": "1618039"
  },
  {
    "text": "application in production getting some metrics in there is a great start but",
    "start": "1618039",
    "end": "1624480"
  },
  {
    "text": "it's also a dual learning curve both on learning how to use metrics in general",
    "start": "1624480",
    "end": "1630520"
  },
  {
    "text": "but also about learning what's normal and what's good versus what's bad for",
    "start": "1630520",
    "end": "1635799"
  },
  {
    "text": "your specific application yeah like I think metrics are not I wouldn't call them like",
    "start": "1635799",
    "end": "1642399"
  },
  {
    "text": "exactly a debugging tool they're more like to understand because m are",
    "start": "1642399",
    "end": "1647960"
  },
  {
    "text": "aggregations right usually you get like average request per second average",
    "start": "1647960",
    "end": "1653279"
  },
  {
    "text": "things like given a number of request of instructions of executions in a given time those are like metrics of like",
    "start": "1653279",
    "end": "1660960"
  },
  {
    "text": "usually for request latency through put maybe database connections so usually",
    "start": "1660960",
    "end": "1666760"
  },
  {
    "text": "you cannot pinpoint like one thing or get one transaction and then get the",
    "start": "1666760",
    "end": "1672399"
  },
  {
    "text": "metric and use those aggregations but they also help you to maybe understand",
    "start": "1672399",
    "end": "1677679"
  },
  {
    "text": "another thing like which bugs are actually like let's say worth fighting right now right so if you have metrics",
    "start": "1677679",
    "end": "1685200"
  },
  {
    "text": "like error rates right and you have like 50% of your requests are always failing so definitely you have a big issue there",
    "start": "1685200",
    "end": "1692120"
  },
  {
    "text": "right lots of people are being affected by this bug but if 0.1% of your requests",
    "start": "1692120",
    "end": "1698360"
  },
  {
    "text": "are failing or are too slow and that's basically meaningless in the number of",
    "start": "1698360",
    "end": "1703720"
  },
  {
    "text": "users maybe they're actually all the bigger bugs know that's going to have a",
    "start": "1703720",
    "end": "1709000"
  },
  {
    "text": "better impact for your users to solve so definitely I think matrics can help to",
    "start": "1709000",
    "end": "1714720"
  },
  {
    "text": "prioritize and definitely performance issues right so if you want to improve",
    "start": "1714720",
    "end": "1720559"
  },
  {
    "text": "performance so you actually have performance issues then those metrics should be there even though you can",
    "start": "1720559",
    "end": "1725799"
  },
  {
    "text": "handle performance issues as bugs when someone talks me oh there's a bug let's debug something usually I think more",
    "start": "1725799",
    "end": "1731840"
  },
  {
    "text": "like a code level a weird behavior of the one specific application",
    "start": "1731840",
    "end": "1738080"
  },
  {
    "text": "rather than let's say every time I have too many requests the database dies",
    "start": "1738080",
    "end": "1743320"
  },
  {
    "text": "right usually I don't think that is a bug it could be a bug in the code that you're making too many too many requests",
    "start": "1743320",
    "end": "1749000"
  },
  {
    "text": "to the database or no optimiz it SQL queries could be but at least that's how",
    "start": "1749000",
    "end": "1754760"
  },
  {
    "text": "my my mind works when I hear the word bug or the bugging we talked about good and bad practices of debugging we talked",
    "start": "1754760",
    "end": "1762320"
  },
  {
    "text": "about debugging in the cloud versus on premise we talked about stats versus",
    "start": "1762320",
    "end": "1767679"
  },
  {
    "text": "erors or logs let's talk about debugging in production versus not are you",
    "start": "1767679",
    "end": "1774399"
  },
  {
    "text": "debugging in production if yes how yeah I think in the case of like working with",
    "start": "1774399",
    "end": "1780799"
  },
  {
    "text": "elastic it's a very interesting case of the bugging production because well we don't have access to the users",
    "start": "1780799",
    "end": "1786080"
  },
  {
    "text": "environment right so basically we only rely on logs and asking people hey what",
    "start": "1786080",
    "end": "1791279"
  },
  {
    "text": "to have you done so that's where you actually see two things the power power",
    "start": "1791279",
    "end": "1797720"
  },
  {
    "text": "of actually having good logs and also you see the other side logs can be two",
    "start": "1797720",
    "end": "1802799"
  },
  {
    "text": "verbos as well like you have some applications if you enable log debugging",
    "start": "1802799",
    "end": "1807880"
  },
  {
    "text": "and it has a very high throughput then sometimes you get like 100 megabytes of logs it's like 3 seconds of execution",
    "start": "1807880",
    "end": "1814240"
  },
  {
    "text": "because it's just two veros for some stuff so I think that definitely the",
    "start": "1814240",
    "end": "1819559"
  },
  {
    "text": "bugging production has this facet of sometimes you actually don't have access to environment and say more often than",
    "start": "1819559",
    "end": "1826840"
  },
  {
    "text": "not you mostly relying on logs and metrics and that's all you have so you",
    "start": "1826840",
    "end": "1832960"
  },
  {
    "text": "basically let's say looking to to the Past okay something happened like I have",
    "start": "1832960",
    "end": "1838240"
  },
  {
    "text": "things that point me what happened in the past not right now that's different from the bugging or even locally or even",
    "start": "1838240",
    "end": "1844760"
  },
  {
    "text": "on usually on station that you have more control of the the environment and you",
    "start": "1844760",
    "end": "1850240"
  },
  {
    "text": "can't really reproduce What the person who reported this has because it's not like send me your code and I'll try to",
    "start": "1850240",
    "end": "1855840"
  },
  {
    "text": "run this see how that that works yeah sometimes you just can't or sometimes you do your best to get as close as",
    "start": "1855840",
    "end": "1862360"
  },
  {
    "text": "possible but yeah that's the thing that uh reminds me something yeah sometimes you can't have access to production or",
    "start": "1862360",
    "end": "1869240"
  },
  {
    "text": "to the actual environment but you can reproduce a close enough enough experiment if you have enough",
    "start": "1869240",
    "end": "1874480"
  },
  {
    "text": "information okay every time those situation happens then there's a bug then you go to your development staging",
    "start": "1874480",
    "end": "1880840"
  },
  {
    "text": "environment and you reproduce as close as possible and then you can actually debug run your debuger run your two",
    "start": "1880840",
    "end": "1888039"
  },
  {
    "text": "one of the fun things about being the city of rout is I not only get to see how our Engineers debugging production",
    "start": "1888039",
    "end": "1894600"
  },
  {
    "text": "but I get to walk with many of our customers while debugging in production",
    "start": "1894600",
    "end": "1899720"
  },
  {
    "text": "and many of our customers have I wouldn't say given up but come to",
    "start": "1899720",
    "end": "1904919"
  },
  {
    "text": "realize that they need a better solution than the traditional approach for debugging monitoring tools were not",
    "start": "1904919",
    "end": "1912799"
  },
  {
    "text": "meant for debugging monitoring tools are meant to show you something is wrong",
    "start": "1912799",
    "end": "1918320"
  },
  {
    "text": "your application is down you're having some issues with some of your endpoints some of your users are not getting the",
    "start": "1918320",
    "end": "1923880"
  },
  {
    "text": "best service but they were never designed to pinpoint exactly what's",
    "start": "1923880",
    "end": "1929240"
  },
  {
    "text": "going wrong and especially many of those issues are code related issues today",
    "start": "1929240",
    "end": "1934799"
  },
  {
    "text": "with you know Cloud native applications when you're essentially moving away so much of the infrastructure to somebody",
    "start": "1934799",
    "end": "1941639"
  },
  {
    "text": "else your AWS or Google cloud or aure whatever you're picking I don't know",
    "start": "1941639",
    "end": "1947120"
  },
  {
    "text": "most of your bugs most of your issues are somewhere in the code and you need a lot of grity and many of our customers",
    "start": "1947120",
    "end": "1953440"
  },
  {
    "text": "have figured out that whether they try to make their Engineers more productive or solve customer issues faster or both",
    "start": "1953440",
    "end": "1960760"
  },
  {
    "text": "they prefers to be able to truly debug in production and we see a few",
    "start": "1960760",
    "end": "1966360"
  },
  {
    "text": "considerations and hurdles and how you approach that I mean security is a big",
    "start": "1966360",
    "end": "1972200"
  },
  {
    "text": "thing you have to make sure that whatever tool you're using you know who",
    "start": "1972200",
    "end": "1977240"
  },
  {
    "text": "can access the system you know how it is being accessed that everything is secured and there are lot of privacy",
    "start": "1977240",
    "end": "1983279"
  },
  {
    "text": "regulations across the world in general in Europe in particular so you have to",
    "start": "1983279",
    "end": "1988320"
  },
  {
    "text": "think through that you have to know that what private data is being collected is it being removed through the process is",
    "start": "1988320",
    "end": "1995320"
  },
  {
    "text": "it being installed who is storing it and obviously you have to think about",
    "start": "1995320",
    "end": "2000799"
  },
  {
    "text": "performance and availability will the access and the tools I provide my Engineers somehow impact the stability",
    "start": "2000799",
    "end": "2008320"
  },
  {
    "text": "of my application will it impact the performance of my applications and whenever you're thinking about debugging",
    "start": "2008320",
    "end": "2015960"
  },
  {
    "text": "production and it doesn't matter if you're giving them some fancy tools such as rookout or providing them with SSH",
    "start": "2015960",
    "end": "2021679"
  },
  {
    "text": "access to go do their thing you need to think about the implications in those elements and",
    "start": "2021679",
    "end": "2029120"
  },
  {
    "text": "especially how the non-functional requirements of your system which can be VAR greatly between domains between",
    "start": "2029120",
    "end": "2035720"
  },
  {
    "text": "companies even between application within the same company you have to think about that and how you address",
    "start": "2035720",
    "end": "2041840"
  },
  {
    "text": "them but other than that other the than the extra risks and significant extra",
    "start": "2041840",
    "end": "2047799"
  },
  {
    "text": "risk involves you still go back to the same fundamentals of the bugging we've",
    "start": "2047799",
    "end": "2053158"
  },
  {
    "text": "discussed through this call and once in a full moon I actually meet somebody who decides to attach traditional debugger",
    "start": "2053159",
    "end": "2060280"
  },
  {
    "text": "to production because either the issue is bad enough that they have no choice",
    "start": "2060280",
    "end": "2065760"
  },
  {
    "text": "and that's all they have to do all because for some peculiar reason it doesn't disrupt their system all that",
    "start": "2065760",
    "end": "2073158"
  },
  {
    "text": "bad for some reason and they can afford to but at the other day you end up with",
    "start": "2073159",
    "end": "2078800"
  },
  {
    "text": "the same techniques just a different risk AV version scale so I want to go",
    "start": "2078800",
    "end": "2084398"
  },
  {
    "text": "back to logging just a little bit I know we've talked about it a ton but we mentioned earlier that sometimes there's",
    "start": "2084399",
    "end": "2090358"
  },
  {
    "text": "not enough log sometimes there's way too many do you think log levels play a lot like a role in that is there something",
    "start": "2090359",
    "end": "2097040"
  },
  {
    "text": "that we should use in the go Community there's a lot of kind of argument that H just a single log is enough and other",
    "start": "2097040",
    "end": "2103000"
  },
  {
    "text": "people like the levels what are your y thoughts yeah I would say it depends",
    "start": "2103000",
    "end": "2109280"
  },
  {
    "text": "I've gravitated towards different opinions of like we should only have one level or should have multiple ones and I",
    "start": "2109280",
    "end": "2115839"
  },
  {
    "text": "think it depends on the definitely depends like what kind of applications you are developing right if you like",
    "start": "2115839",
    "end": "2122960"
  },
  {
    "text": "deploy your own microservices on your infrastructure then you have way more control so maybe you can get that way",
    "start": "2122960",
    "end": "2131359"
  },
  {
    "text": "with like less log levels and really craft good log message but if you're",
    "start": "2131359",
    "end": "2137680"
  },
  {
    "text": "actually deploy like providing binaries that people are going to download and run then uh at least at the bug level",
    "start": "2137680",
    "end": "2145320"
  },
  {
    "text": "would help because then you can say okay those are things that most of people don't need just going to waste dis space",
    "start": "2145320",
    "end": "2151920"
  },
  {
    "text": "and things like that or like sto log storage if they're shipping there somewhere so 99% of the time we're never",
    "start": "2151920",
    "end": "2158800"
  },
  {
    "text": "going to need it but then when there there's an issue then we actually need to see that and in some of the",
    "start": "2158800",
    "end": "2164960"
  },
  {
    "text": "applications that we have at elastic we actually have uh even a different approach we do have the log levels but",
    "start": "2164960",
    "end": "2172319"
  },
  {
    "text": "also we can filter specific loggers so different parts of the application they in set the log like he hey I'm I don't",
    "start": "2172319",
    "end": "2179200"
  },
  {
    "text": "know I'm a harer I'm an input so you can say oh I want log the bugs from our",
    "start": "2179200",
    "end": "2184440"
  },
  {
    "text": "inputs or from our parsers or from something like that or from the output it's almost like setting different log",
    "start": "2184440",
    "end": "2190880"
  },
  {
    "text": "levels for different uh components of the application so that's also an approach that I find quite interesting",
    "start": "2190880",
    "end": "2197480"
  },
  {
    "text": "can be quite useful especially when you have this situation of like logs are",
    "start": "2197480",
    "end": "2202800"
  },
  {
    "text": "probably going to be two verbos some of them but then you can filter out the verbos on not like even generate them",
    "start": "2202800",
    "end": "2209280"
  },
  {
    "text": "and then you focus on the things you actually actually need so log levels are",
    "start": "2209280",
    "end": "2214560"
  },
  {
    "text": "super important you can can't do without them at least if not if your system is",
    "start": "2214560",
    "end": "2220319"
  },
  {
    "text": "any scale especially where it comes to how much traffic it's handling because",
    "start": "2220319",
    "end": "2225640"
  },
  {
    "text": "you're going to have to cut logs somehow and verbosity levels is the easiest way",
    "start": "2225640",
    "end": "2230880"
  },
  {
    "text": "to get started with obviously you can get fancy later on as Thiago has mentioned but when thinking of log LS",
    "start": "2230880",
    "end": "2237800"
  },
  {
    "text": "there is one thing you have to keep in mind when you looking at most sauce operations today when the same team both",
    "start": "2237800",
    "end": "2245200"
  },
  {
    "text": "builds and operate the sauce software log levels especially in the long terms tend to be gained now take an example",
    "start": "2245200",
    "end": "2253440"
  },
  {
    "text": "let's say you're running the application for the first time you're probably spewing debug logs you have zero traffic",
    "start": "2253440",
    "end": "2259280"
  },
  {
    "text": "you're printing everything you're just dying for somebody to bother to go to your website or what not so why not just",
    "start": "2259280",
    "end": "2266280"
  },
  {
    "text": "print everything then later on the application grows you get more traffic you move to info still no biggie but",
    "start": "2266280",
    "end": "2273359"
  },
  {
    "text": "then at some point your application explode you have tons of of users you're paying way too much traffic way too much",
    "start": "2273359",
    "end": "2280240"
  },
  {
    "text": "money for some log aggregator somewhere and all of the sudden some Ops guy come",
    "start": "2280240",
    "end": "2285640"
  },
  {
    "text": "and say or girl for that matter comes and say let's cut back we need to move",
    "start": "2285640",
    "end": "2291640"
  },
  {
    "text": "to warning level verbosity and above because we're just wasting so much money and nobody's looking at those logs",
    "start": "2291640",
    "end": "2298240"
  },
  {
    "text": "anyway now you might have a pretty well defined verbosity levels you might not",
    "start": "2298240",
    "end": "2305280"
  },
  {
    "text": "have those well Define verbosity levels but the next time some software engineer",
    "start": "2305280",
    "end": "2310960"
  },
  {
    "text": "is going to need some piece of log to troubleshoot something or get their job done I can assure you the level of logs",
    "start": "2310960",
    "end": "2318040"
  },
  {
    "text": "they're going to use is going to be warning and not in for thebug regardless",
    "start": "2318040",
    "end": "2323400"
  },
  {
    "text": "of how important that log is because it's people they gain the system if they",
    "start": "2323400",
    "end": "2328800"
  },
  {
    "text": "need the log line then they're going to do whatever it takes to add that log line and get their job done now in the",
    "start": "2328800",
    "end": "2337400"
  },
  {
    "text": "long term that means that every time you increase the minimum verbosity of the",
    "start": "2337400",
    "end": "2342480"
  },
  {
    "text": "log levels you're going to be dropping some logs but new logs are going to be added and a lot of the other logs are",
    "start": "2342480",
    "end": "2349040"
  },
  {
    "text": "going to get moved refactored into the newer level and that's not necessarily",
    "start": "2349040",
    "end": "2355160"
  },
  {
    "text": "based on importance it's based on what was most recently used by your engineers",
    "start": "2355160",
    "end": "2362359"
  },
  {
    "text": "which doesn't necessarily provide a good feedback on what's truly important not to mention that some Engineers might be",
    "start": "2362359",
    "end": "2369880"
  },
  {
    "text": "more Straight Shooters than others in which case things can get even worse because some Engineers are going to gain",
    "start": "2369880",
    "end": "2375960"
  },
  {
    "text": "the systems and others won't long story short log levels are not going to fix",
    "start": "2375960",
    "end": "2381079"
  },
  {
    "text": "everything for you but they can definitely help to a certain degree I love that point about gaming the system",
    "start": "2381079",
    "end": "2387800"
  },
  {
    "text": "cuz I have definitely done that without a doubt we're recording this you know oh yeah we'll make this error because I",
    "start": "2387800",
    "end": "2393640"
  },
  {
    "text": "need to see it yeah oh I'll admit it I'll day it's all good I totally agree",
    "start": "2393640",
    "end": "2399280"
  },
  {
    "text": "with that as well I think yeah there's some logs I'm like no that's info because if something goes wrong I need",
    "start": "2399280",
    "end": "2405520"
  },
  {
    "text": "to know that happen so I cannot I won't put that as the bug I know some people would call it the bug I'm calling it in",
    "start": "2405520",
    "end": "2411680"
  },
  {
    "text": "because I want this log line there no matter what and I know you're running log info right that's the thing I know",
    "start": "2411680",
    "end": "2417400"
  },
  {
    "text": "you're running level info so I'm putting the level that we running yeah so I prob guil as well of the same thing but I",
    "start": "2417400",
    "end": "2425200"
  },
  {
    "text": "think that's definitely I thing and I think it circles back to the thing you really need to be careful especially O",
    "start": "2425200",
    "end": "2434119"
  },
  {
    "text": "scale I think like we had a great point there as we scale more and more and more then the amount of logs become more of a",
    "start": "2434119",
    "end": "2440839"
  },
  {
    "text": "thing and then that's when you need to really think about what are you logging and how are you logging so to make sure",
    "start": "2440839",
    "end": "2447960"
  },
  {
    "text": "you always have the logs you need because logs are the kind of things you usually never look at them unless you",
    "start": "2447960",
    "end": "2453839"
  },
  {
    "text": "have an issue and then if you have an issue and then you don't have the logs then you're basically going to make a PR",
    "start": "2453839",
    "end": "2459960"
  },
  {
    "text": "to put the log to deploy 20 minutes if you're very luck it might take a few weeks if you provide an",
    "start": "2459960",
    "end": "2467880"
  },
  {
    "text": "application for people to download install and yeah so definitely need to be very very careful with the with the",
    "start": "2467880",
    "end": "2474880"
  },
  {
    "text": "logs you right not to on the speed Falls last question and then we jump through",
    "start": "2474880",
    "end": "2480079"
  },
  {
    "text": "the fun part of the unpopular opinion when you have to debug something how do",
    "start": "2480079",
    "end": "2485880"
  },
  {
    "text": "you start so I always start by trying to reproduce",
    "start": "2485880",
    "end": "2491119"
  },
  {
    "text": "the as close as possible the the situation where the bug happened right so us at okay that thing is failing on",
    "start": "2491119",
    "end": "2499240"
  },
  {
    "text": "yeah I try to reproduce it it depends a lot on the the situation but yeah I try to make the bug happen on my machine if",
    "start": "2499240",
    "end": "2506599"
  },
  {
    "text": "the logs that I have are not right enough to make me understand what's happening sometimes it is and then job's",
    "start": "2506599",
    "end": "2512960"
  },
  {
    "text": "done just okay here your error message that's your issue usually that's not that simple so yeah usually it's set up",
    "start": "2512960",
    "end": "2520599"
  },
  {
    "text": "let's say it's more experiment so I can reproduce the bug as like in a very easy way so I can run it over and over until",
    "start": "2520599",
    "end": "2527359"
  },
  {
    "text": "I understand what is causing it and then there is where I would say the art of",
    "start": "2527359",
    "end": "2532560"
  },
  {
    "text": "the bugging starts once you can reproduce it then okay why it's happening right then you go print",
    "start": "2532560",
    "end": "2538920"
  },
  {
    "text": "statements log statements the buger changing your environment changing the",
    "start": "2538920",
    "end": "2545640"
  },
  {
    "text": "state of the application to understand why it's actually the thing is happening I think what I most often do is look at",
    "start": "2545640",
    "end": "2553319"
  },
  {
    "text": "the code especially if I have a descriptive bug report that kind of",
    "start": "2553319",
    "end": "2559400"
  },
  {
    "text": "points me in the right direction quite often if you look at a code with fresh",
    "start": "2559400",
    "end": "2564680"
  },
  {
    "text": "set of eyes whether it's your code or somebody else's code see you have a good familiarity with the application as a",
    "start": "2564680",
    "end": "2571240"
  },
  {
    "text": "whole and you're looking at the suspected piece of code where bug might reside with a new Fresh of eyes and with",
    "start": "2571240",
    "end": "2579880"
  },
  {
    "text": "some description of what's going wrong you'll often see the bug it can be off by one bug it can be a comparison and",
    "start": "2579880",
    "end": "2587720"
  },
  {
    "text": "that's looking at the wrong attribute which I just had that bug a couple of days ago you might have other issues you",
    "start": "2587720",
    "end": "2594319"
  },
  {
    "text": "might have a call missing or an extra call but if you have some experience and",
    "start": "2594319",
    "end": "2599520"
  },
  {
    "text": "you have some you know what you're looking for you can quite often just stare at the code and say hey this looks",
    "start": "2599520",
    "end": "2605359"
  },
  {
    "text": "wrong kind of all of the sudden understand what's going wrong other than",
    "start": "2605359",
    "end": "2611079"
  },
  {
    "text": "that debugging is a very associative process I mean if things get very very",
    "start": "2611079",
    "end": "2616800"
  },
  {
    "text": "very messy you can start doing a more standardized process writing down",
    "start": "2616800",
    "end": "2622359"
  },
  {
    "text": "everything you know writing various hypotheses about what could possibly grow wrong and then starting to discuss",
    "start": "2622359",
    "end": "2628400"
  },
  {
    "text": "how you can collect that extra data you need to validate or remove those hypothesis potentially by adding tons of",
    "start": "2628400",
    "end": "2635079"
  },
  {
    "text": "prints that's how it usually works but early on in the process I found that",
    "start": "2635079",
    "end": "2640559"
  },
  {
    "text": "associative thinking leads to faster results in most of the cases and that's",
    "start": "2640559",
    "end": "2646200"
  },
  {
    "text": "another reason to look at the code because once you kind of get a look of the code get a sense of delay of the",
    "start": "2646200",
    "end": "2651440"
  },
  {
    "text": "land then you are better positioned to look at additional data whether it's",
    "start": "2651440",
    "end": "2657200"
  },
  {
    "text": "logs or metrics you've discussed or the bug report itself or anything else to",
    "start": "2657200",
    "end": "2663119"
  },
  {
    "text": "kind of see things in context where than just trying to piece everything together",
    "start": "2663119",
    "end": "2668520"
  },
  {
    "text": "from scratch great all right the next part of the show I think is everyone's favorite on popular opinions hope you",
    "start": "2668520",
    "end": "2675240"
  },
  {
    "text": "guys came with [Music] one",
    "start": "2675240",
    "end": "2681440"
  },
  {
    "text": "opinion I actually think should probably [Music]",
    "start": "2681440",
    "end": "2693520"
  },
  {
    "text": "leave all right who wants to go first I go my unpopular opinion is about open",
    "start": "2693520",
    "end": "2700359"
  },
  {
    "text": "Telemetry I know open Telemetry is being touted as the want to Vanquish them all",
    "start": "2700359",
    "end": "2708200"
  },
  {
    "text": "but I find it to be over presumptious in many cases way too complex and hardly",
    "start": "2708200",
    "end": "2716800"
  },
  {
    "text": "that much of a benefit over structured logging in most cases obviously there are exception there are super fancy",
    "start": "2716800",
    "end": "2724000"
  },
  {
    "text": "super complex cases where you have 2,000 microservices like uber head until they figure out it was the wrong approach in",
    "start": "2724000",
    "end": "2730920"
  },
  {
    "text": "which case you desperately need distributed tracing and open Telemetry and good for you for inventing that the",
    "start": "2730920",
    "end": "2737800"
  },
  {
    "text": "rest of us M Mortals are better off not over complicating your systems and not over complicating our observability",
    "start": "2737800",
    "end": "2744680"
  },
  {
    "text": "Solutions simple is always better in Engineering in general in software",
    "start": "2744680",
    "end": "2749920"
  },
  {
    "text": "engineering in particular logs are awesome they've been with us since the dawn of computer engineering metrics are",
    "start": "2749920",
    "end": "2757559"
  },
  {
    "text": "pretty sweet as well if you want to get extra fancy structure logs are truly",
    "start": "2757559",
    "end": "2763480"
  },
  {
    "text": "great and they can be very simple they can have literally couple of lines of configuration on any piece of of log of",
    "start": "2763480",
    "end": "2772480"
  },
  {
    "text": "the logo itself and you configure it and on top of that open Telemetry in go is a",
    "start": "2772480",
    "end": "2778680"
  },
  {
    "text": "lot of boiler plate a lot of configuration you have to set up all the middle worlds",
    "start": "2778680",
    "end": "2783920"
  },
  {
    "text": "yourself so don't hold high hopes for us you're",
    "start": "2783920",
    "end": "2789079"
  },
  {
    "text": "picking a very complex a very expensive Solution that's going to have",
    "start": "2789079",
    "end": "2795680"
  },
  {
    "text": "in most cases it's going to have less value in some rare cases you might never meet it can have more value than what",
    "start": "2795680",
    "end": "2801720"
  },
  {
    "text": "you're the more traditional approaches I definitely resonate with it being a lot",
    "start": "2801720",
    "end": "2807200"
  },
  {
    "text": "of boilerplate and overly complicated we made a move to move to that and abandoned it because it's a",
    "start": "2807200",
    "end": "2813480"
  },
  {
    "text": "lot sounds like the unpopular opinion is is popular yeah I also agree I never",
    "start": "2813480",
    "end": "2818599"
  },
  {
    "text": "worked much with open themetry but other solutions that basically are observability in",
    "start": "2818599",
    "end": "2824559"
  },
  {
    "text": "metrix and yeah you can go a very long way of just while structured logs even",
    "start": "2824559",
    "end": "2830480"
  },
  {
    "text": "almost having distributed Trace just Bas on logs and super simple because you can just well parse them or put them on last",
    "start": "2830480",
    "end": "2837599"
  },
  {
    "text": "search something like that and then you can just see the logs together aggregate them and yeah it can go a long long long",
    "start": "2837599",
    "end": "2844599"
  },
  {
    "text": "way without over complic so my unpopular opinion I still believe that the testing",
    "start": "2844599",
    "end": "2850960"
  },
  {
    "text": "package from the standard library is the best testing framework that you need",
    "start": "2850960",
    "end": "2856960"
  },
  {
    "text": "like the best out there it's very simple it's very powerful now especially now that fuzzing spting to the language and",
    "start": "2856960",
    "end": "2863920"
  },
  {
    "text": "everything and because it doesn't introduce new Concepts so basically you still have to do your if statement if",
    "start": "2863920",
    "end": "2870920"
  },
  {
    "text": "that thing happen then I call a method on my T object right or might be for",
    "start": "2870920",
    "end": "2876640"
  },
  {
    "text": "benchmarks and things like that it makes the developer the engineer right in the code think more about what they doing",
    "start": "2876640",
    "end": "2883440"
  },
  {
    "text": "and probably also craft better testing failure messages so instead of just say",
    "start": "2883440",
    "end": "2889040"
  },
  {
    "text": "like a is different than b is like no hey I was trying to do that and that failure because of that you know you can",
    "start": "2889040",
    "end": "2894440"
  },
  {
    "text": "still fall in the pitfall just say a is not B but I think it's less I think there are some Library there have like a",
    "start": "2894440",
    "end": "2900599"
  },
  {
    "text": "gigantic public API for testing that just gets hard to use and if some very",
    "start": "2900599",
    "end": "2906160"
  },
  {
    "text": "small nuances here and there I've seen a few examples of they just like misplaced",
    "start": "2906160",
    "end": "2911520"
  },
  {
    "text": "it like would be the arrow message if the actual error that was being compared then luckily the test was not very wrong",
    "start": "2911520",
    "end": "2919599"
  },
  {
    "text": "but that happens and if the testing package like that's just not going to happen right you can only basically",
    "start": "2919599",
    "end": "2926000"
  },
  {
    "text": "print the message say like okay the test you can fail the test and then you can write mes explaining why and well of",
    "start": "2926000",
    "end": "2933200"
  },
  {
    "text": "course like building language is very different and building other kind of applications but as far as I know in go",
    "start": "2933200",
    "end": "2940520"
  },
  {
    "text": "like right C they only use the testing packages so it's powerful enough to write goal so should also fit say most",
    "start": "2940520",
    "end": "2948240"
  },
  {
    "text": "if not all user cases and you can always write your helper function if you need specific things and the t. helper it's",
    "start": "2948240",
    "end": "2955640"
  },
  {
    "text": "also a great helper oh I'm worried that one's going to be popular as well yeah I brought an",
    "start": "2955640",
    "end": "2962920"
  },
  {
    "text": "unpopular opinion as well oh wow okay I think that as a manager be a team lead",
    "start": "2962920",
    "end": "2969599"
  },
  {
    "text": "or a product manager or whatever making a round of messages on your tracking",
    "start": "2969599",
    "end": "2974720"
  },
  {
    "text": "system like be jir trell whatever what's the status here what's the status here what's the status here and then your",
    "start": "2974720",
    "end": "2981240"
  },
  {
    "text": "developers arrive the next day to like 10 messages that all look the same what's the status here is one of the",
    "start": "2981240",
    "end": "2987559"
  },
  {
    "text": "worst things you can do definitely no it's supposed to be unpopular don't say that the Elon mask is much much better",
    "start": "2987559",
    "end": "2994079"
  },
  {
    "text": "tell everybody they're fired next week if they don't deliver what you've came up",
    "start": "2994079",
    "end": "2999400"
  },
  {
    "text": "overnight now that's an unpopular opinion now all those status messages",
    "start": "2999400",
    "end": "3006240"
  },
  {
    "text": "never fail to give me anxiety it's like wait was I supposed to get all of these done uh even if yes there's better ways",
    "start": "3006240",
    "end": "3013000"
  },
  {
    "text": "of doing that than 10 messages of what's the status here yeah definitely maybe you have an agreement that you should",
    "start": "3013000",
    "end": "3018599"
  },
  {
    "text": "update at the end of the every day every week every other day I don't know if you don't have such an agreement you should",
    "start": "3018599",
    "end": "3024400"
  },
  {
    "text": "set that up if the team is not happy with this agreement you need to find something else but just around like",
    "start": "3024400",
    "end": "3030280"
  },
  {
    "text": "opening your inbox to 10 of those messages is just like I'm going to close the computer bye yeah yeah I agree if",
    "start": "3030280",
    "end": "3038319"
  },
  {
    "text": "you expect people to spend the time to write down the answers you should spend the time at least to write down",
    "start": "3038319",
    "end": "3044559"
  },
  {
    "text": "questions that prove you know what each task is about and be more focused about",
    "start": "3044559",
    "end": "3050200"
  },
  {
    "text": "what you're asking rather than generic what's your status because I might as well answer it's progressing perfect oh",
    "start": "3050200",
    "end": "3057880"
  },
  {
    "text": "my God adopting I think I would even say like some of those starts update message are",
    "start": "3057880",
    "end": "3063839"
  },
  {
    "text": "like the bug logs they just say like yeah it's moving it's happening you know but most of the time it's not what you",
    "start": "3063839",
    "end": "3069799"
  },
  {
    "text": "need to see not what you need to here true it is like a like info level",
    "start": "3069799",
    "end": "3075520"
  },
  {
    "text": "messages yeah I even say the bug what you need is the arrow level like hey that's delayed because of that or like",
    "start": "3075520",
    "end": "3081319"
  },
  {
    "text": "hey I had a problem and block it here so task X Y or Z not moving or even moving",
    "start": "3081319",
    "end": "3086920"
  },
  {
    "text": "backwards I think we're on to something here yeah we also have a lot of questions that we wanted to talk about",
    "start": "3086920",
    "end": "3093640"
  },
  {
    "text": "and lots of topics we wanted to talk about and looks like there's no other choice but to have a follow-up episode",
    "start": "3093640",
    "end": "3099680"
  },
  {
    "text": "and I want to say thank you both for joining I hope you will join to our next topic on and next episode on debugging",
    "start": "3099680",
    "end": "3107480"
  },
  {
    "text": "and I want to wish everybody and good rest of your day wherever you are whatever your time zone is bye",
    "start": "3107480",
    "end": "3114359"
  },
  {
    "text": "everyone",
    "start": "3114359",
    "end": "3117359"
  },
  {
    "text": "all right that is the show for this week thanks for hanging with us if this is your first time listening subscribe to",
    "start": "3120040",
    "end": "3126680"
  },
  {
    "text": "the Pod at go time. FM and if you're a longtime gotimer do us a solid by sharing the show with your friends help",
    "start": "3126680",
    "end": "3133480"
  },
  {
    "text": "us help more people with weekly go related goodness thanks once again to fastly and fly.io for partnering with us",
    "start": "3133480",
    "end": "3141000"
  },
  {
    "text": "check out what they're up to at fastly.com and at fly.io and of course",
    "start": "3141000",
    "end": "3146079"
  },
  {
    "text": "thank you to our beat freaking residents break master cylinder our beats are banging because BMC bangs out dope beats",
    "start": "3146079",
    "end": "3152200"
  },
  {
    "text": "that's how it works next time on go time John Calhoun returns and he's teaming up",
    "start": "3152200",
    "end": "3157319"
  },
  {
    "text": "with Johnny borico to discuss grpc and protocol buffers with guest OE Shaw stay",
    "start": "3157319",
    "end": "3164040"
  },
  {
    "text": "tuned for that we'll be dropping it into your podcast app next [Music]",
    "start": "3164040",
    "end": "3171328"
  },
  {
    "text": "week k",
    "start": "3174240",
    "end": "3180079"
  }
]