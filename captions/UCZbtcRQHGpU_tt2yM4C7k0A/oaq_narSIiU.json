[
  {
    "text": "I think the distinction between micros service and monoliths is something that's kind of overblown to a certain aspect like you can definitely take a",
    "start": "0",
    "end": "6960"
  },
  {
    "text": "lot of the deployment aspects you're referring to and apply them to microservices you know when we do a production deploy of I don't know for",
    "start": "6960",
    "end": "13280"
  },
  {
    "text": "one of a better term a macr service we tend to update all the microservices to the same Gar so we know they all work",
    "start": "13280",
    "end": "19920"
  },
  {
    "text": "together but the nice thing about the microservice approach is that in between those big deploys you know we maybe do",
    "start": "19920",
    "end": "25359"
  },
  {
    "text": "these big deploys once a day or once every few days in between these big deploys you can tune indiv idual Services you can maybe deploy a bug fix",
    "start": "25359",
    "end": "32599"
  },
  {
    "text": "that only touches one service you know in a kind of case-by case basis which is flexibility you don't really have with",
    "start": "32599",
    "end": "38480"
  },
  {
    "text": "monoliths but then just to like throw a spanner in the works like you used to be able to do this with llang right erlang",
    "start": "38480",
    "end": "43680"
  },
  {
    "text": "arguably was a monolith you know a monolithic architecture but you could easily just hot fix in a single function right could you I don't know could you",
    "start": "43680",
    "end": "49440"
  },
  {
    "text": "do you could yeah yeah this is when when languages were powerful and let you do things like that yeah B with for change",
    "start": "49440",
    "end": "55440"
  },
  {
    "text": "log is provided by fastly learn more at fastly.com we move fast and fix things",
    "start": "55440",
    "end": "61199"
  },
  {
    "text": "here at change law because of rbar check them out at rar.com and we're hosted on Leno Cloud servers head to lin.com",
    "start": "61199",
    "end": "70159"
  },
  {
    "text": "changelog this episode is brought to you by digital ocean digital oceans developer cloud makes it simple to",
    "start": "71520",
    "end": "77200"
  },
  {
    "text": "launch in the cloud and scale up as you grow they have an intuitive control panel predictable pricing team accounts",
    "start": "77200",
    "end": "83920"
  },
  {
    "text": "worldwide availability with a 99.99 uptime SLA and 247 365 world class",
    "start": "83920",
    "end": "90320"
  },
  {
    "text": "support to back that up digital ocean makes it easy to deploy scale store secure and monitor your Cloud",
    "start": "90320",
    "end": "96600"
  },
  {
    "text": "environments head to do. changelog to get started with a $100 credit again do.",
    "start": "96600",
    "end": "104960"
  },
  {
    "text": "changelog let's do it it's go time welcome to go time your source for",
    "start": "115159",
    "end": "121640"
  },
  {
    "text": "diverse discussions from around the go Community we have episodes on web RTC",
    "start": "121640",
    "end": "126799"
  },
  {
    "text": "immediate mode goys and black hat go coming down the pipeline so be sure to subscribe if you haven't at Chang",
    "start": "126799",
    "end": "132920"
  },
  {
    "text": "log.com gotime or just search for go time in your favorite podcast app you'll find us okay here we",
    "start": "132920",
    "end": "141640"
  },
  {
    "text": "[Music]",
    "start": "141870",
    "end": "148129"
  },
  {
    "text": "go hello and welcome to go time I'm Matt",
    "start": "148760",
    "end": "153879"
  },
  {
    "text": "Rya today we're talking microservices versus monoliths uh my co-host today",
    "start": "153879",
    "end": "160239"
  },
  {
    "text": "it's Yana Bogan welcome back Yana hey how are you good how's it going good",
    "start": "160239",
    "end": "166239"
  },
  {
    "text": "just self-isolating what about you yes same same just um self-isolating and",
    "start": "166239",
    "end": "172000"
  },
  {
    "text": "practicing I've been practicing for few years now so I'm really kind of getting good at it you know this subject",
    "start": "172000",
    "end": "178959"
  },
  {
    "text": "microservices and and monoliths often generates a lot of heat but not today",
    "start": "178959",
    "end": "184040"
  },
  {
    "text": "not on this show because Y and I have sourced two extremely cordial and polite young men the first is Matt Heath from",
    "start": "184040",
    "end": "191480"
  },
  {
    "text": "monzo Matt's a senior staff engineer at monzo which is a bank here in the UK where he works on monzo's microservices",
    "start": "191480",
    "end": "198400"
  },
  {
    "text": "platform hello Matt hello thanks for having me well thanks for coming I really appreciate it don't worry though",
    "start": "198400",
    "end": "204599"
  },
  {
    "text": "you're not on your you're not on your own uh we're also joined by Tom Wilkey from graph Labs Tom's one of the",
    "start": "204599",
    "end": "211360"
  },
  {
    "text": "Prometheus maintainers and author of The cortex and Loki projects in his spare",
    "start": "211360",
    "end": "216720"
  },
  {
    "text": "time he brw beer and Tinkers with his 3D printer hello Tom hello Matt how are you",
    "start": "216720",
    "end": "222959"
  },
  {
    "text": "did you like my sort of local radio intro it didn't sound scripted at all it's not at all no what sort of",
    "start": "222959",
    "end": "229400"
  },
  {
    "text": "tinkering did you do on your printer on your 3D printer well for your listeners I can actually switch the camera over",
    "start": "229400",
    "end": "235799"
  },
  {
    "text": "and and show you right now what's printing great yeah the listeners are going to be loving this they're going to",
    "start": "235799",
    "end": "241560"
  },
  {
    "text": "really they're going to really enjoy the video of uh I'm not quite sure what it is yet the video doesn't go out Tom so this is just is it's just for me is it",
    "start": "241560",
    "end": "248760"
  },
  {
    "text": "yeah the video doesn't get broadcast okay I'll uh put it back to my face then no don't",
    "start": "248760",
    "end": "254640"
  },
  {
    "text": "worry more I don't know how much you know about 3D printing but mostly my 3D printer prints more 3D printers oh",
    "start": "254640",
    "end": "261160"
  },
  {
    "text": "really that's asking for trouble I'm sure that's how ter sounds dangerous uh I've got a uh a 2d printer",
    "start": "261160",
    "end": "268560"
  },
  {
    "text": "and I was looking at the other today and thinking you know what there just aren't enough D's yeah so I I mean I'd love to",
    "start": "268560",
    "end": "274680"
  },
  {
    "text": "have a 3D printer mate I could print you one I love the idea you can just print",
    "start": "274680",
    "end": "279880"
  },
  {
    "text": "them um so let's you know I know you uh both both of our guests uh Yana does too",
    "start": "279880",
    "end": "287039"
  },
  {
    "text": "and some people probably seen you doing the circuits in conferences and on uh online on videos and doing talks and",
    "start": "287039",
    "end": "293880"
  },
  {
    "text": "that uh but for anyone that hasn't come across you yet why don't we kick things off get to know each other does anyone have any work working from home tips a",
    "start": "293880",
    "end": "301160"
  },
  {
    "text": "lot of us are finding ourselves working at home these days has anyone got any tips for it I think mine are they're",
    "start": "301160",
    "end": "308120"
  },
  {
    "text": "kind of fairly simple ones I've heard a few people say recently turn slack notifications off like strongly off but",
    "start": "308120",
    "end": "316000"
  },
  {
    "text": "I can't describe how much more relaxed I feel now there's not a red bubble on my dock on on my Mac uh and I can still",
    "start": "316000",
    "end": "324319"
  },
  {
    "text": "check in and I can still do all the stuff but I'm just a lot more relaxed I was really surprised by how much of a",
    "start": "324319",
    "end": "330440"
  },
  {
    "text": "difference that made that and just having like a nice place to work get a plant that kind of",
    "start": "330440",
    "end": "338360"
  },
  {
    "text": "thing yeah that's nice um I actually think you could go a step further since we're not going to have any guests for a",
    "start": "338360",
    "end": "345039"
  },
  {
    "text": "while any of us just do whatever you want with your furniture just cuz don't have to follow any of the simple normal",
    "start": "345039",
    "end": "350840"
  },
  {
    "text": "rules I think just do what do you have in mind I mean literally like move the bath into the living room cuz it's",
    "start": "350840",
    "end": "358240"
  },
  {
    "text": "imagine that just watch tell you while you're having a bath for example um but like where you put your desk where you",
    "start": "358240",
    "end": "363919"
  },
  {
    "text": "work you could like carve out a new little corner you know sometimes it you have to get creative with the space you've got especially if you're living",
    "start": "363919",
    "end": "369880"
  },
  {
    "text": "in the cities so I think that yeah like you're not going to have any guests for a while turn yourself around if that",
    "start": "369880",
    "end": "375520"
  },
  {
    "text": "helps I don't know if that helps but face the wall well yeah maybe but you can just do what you want can't you kind",
    "start": "375520",
    "end": "381840"
  },
  {
    "text": "of free I mean there's there's not much happening outside the windows these days so yeah yeah that's true so Tom Tom do",
    "start": "381840",
    "end": "390360"
  },
  {
    "text": "you have a working from home tip I do yeah but it doesn't work anymore oh really yeah so I've been working from",
    "start": "390360",
    "end": "397199"
  },
  {
    "text": "home for I don't know 3 or four years now and uh the trick was making it look like you weren't at home otherwise you",
    "start": "397199",
    "end": "403039"
  },
  {
    "text": "took the parcel deliveries for the entire Street oh but now everyone's at home it doesn't work well you don't need",
    "start": "403039",
    "end": "410039"
  },
  {
    "text": "also that service anyway because everyone's in they can just get their own pass exactly that's that's kind of what I mean I'm glad you understood",
    "start": "410039",
    "end": "416560"
  },
  {
    "text": "that okay great so Mel Services versus monoliths then let's let's get into that",
    "start": "416560",
    "end": "423240"
  },
  {
    "text": "what do you want to say about it I mean for anyone that doesn't know what these two things are does anyone want to give a kind of broad overview and highlight",
    "start": "423240",
    "end": "431080"
  },
  {
    "text": "of what what we're talking about here yeah I can well give a brief Ino I'm",
    "start": "431080",
    "end": "436599"
  },
  {
    "text": "sure you can all correct me the way I see it is a long time ago when I I started writing software I'd write",
    "start": "436599",
    "end": "443720"
  },
  {
    "text": "fairly straightforward web applications and I'd have one one application one code base and I deploy it in one go and",
    "start": "443720",
    "end": "452440"
  },
  {
    "text": "that was really quite nice and simple and you have one component and that has lots of pros and lots of cons and I",
    "start": "452440",
    "end": "461039"
  },
  {
    "text": "think as certainly my experience as the applications have got larger and larger sometimes you want to break those things",
    "start": "461039",
    "end": "467159"
  },
  {
    "text": "into smaller components and you could do that through classes or various other approaches uh depending on the language",
    "start": "467159",
    "end": "473560"
  },
  {
    "text": "modules obviously and go and then I think the real difference is if",
    "start": "473560",
    "end": "479000"
  },
  {
    "text": "you want to deploy them independently so that's certainly the approach that I've seen quite a lot where you have a number",
    "start": "479000",
    "end": "485360"
  },
  {
    "text": "of applications that are either relatively simple servers but you can have many of them and they all talk to",
    "start": "485360",
    "end": "492039"
  },
  {
    "text": "each other through HTTP or some other mechanism you might have a small number",
    "start": "492039",
    "end": "498759"
  },
  {
    "text": "or you might have a very large number of them that will depend yeah I think size is is going to",
    "start": "498759",
    "end": "506440"
  },
  {
    "text": "be a recurring theme on this show because have a similar thing to you Matt I started off I would just build little",
    "start": "506440",
    "end": "513599"
  },
  {
    "text": "monoliths really because and in fact sometimes that's kind of where I start everything actually you know I start",
    "start": "513599",
    "end": "519320"
  },
  {
    "text": "with just keep it really simple and then at some point you kind of can start to",
    "start": "519320",
    "end": "524440"
  },
  {
    "text": "feel some pain can't you and and you can see now that you can see kind of how how",
    "start": "524440",
    "end": "529519"
  },
  {
    "text": "microservices came to address that what sort of pain points does it actually help with I think from a microservice",
    "start": "529519",
    "end": "536680"
  },
  {
    "text": "perspective there's really a couple of key key things that make it attractive for someone like myself one is isolation",
    "start": "536680",
    "end": "543399"
  },
  {
    "text": "you know in the services that we run it's very useful to kind of isolate let's say the read path and the right",
    "start": "543399",
    "end": "549760"
  },
  {
    "text": "path you know in we run like hosted monitoring Services right so being able to put the right path which is super",
    "start": "549760",
    "end": "555200"
  },
  {
    "text": "predictable which is very you know steady and stable and kind of stateful so uh so pretty critical being able to",
    "start": "555200",
    "end": "562079"
  },
  {
    "text": "put that in one set of components one set of services for one of a better term and then put the query path which can be",
    "start": "562079",
    "end": "568000"
  },
  {
    "text": "kind of maybe dynamically scaled can you know be a bit more risky a bit more stateless putting that somewhere else",
    "start": "568000",
    "end": "574000"
  },
  {
    "text": "like allows you to kind of separate out you know the blast radius of bugs for instance Matt so you mentioned several",
    "start": "574000",
    "end": "581320"
  },
  {
    "text": "pain points and I'm seeing like there are like two different strategies you know some organizations or teams",
    "start": "581320",
    "end": "586839"
  },
  {
    "text": "actually like try to start thinking about microservices at the design time whereas like others start to introduce",
    "start": "586839",
    "end": "593920"
  },
  {
    "text": "them as they see pain points do you have any experience in terms of like when did you you know start seeing microservices",
    "start": "593920",
    "end": "600399"
  },
  {
    "text": "coming around when you're just you know bootstrapping a new project yeah so I think starting with microservices at the",
    "start": "600399",
    "end": "608040"
  },
  {
    "text": "beginning of a new project is probably quite a risky strategy and that's actually what we did at monzo we started",
    "start": "608040",
    "end": "614760"
  },
  {
    "text": "by rather than building one monolith we started by trying to break the problem apart into lots of areas and Building",
    "start": "614760",
    "end": "620560"
  },
  {
    "text": "Services from that and that meant that we avoided hopefully many of the problems",
    "start": "620560",
    "end": "626600"
  },
  {
    "text": "that we'd seen at other companies around scalability both from like the organizational perspective and also the",
    "start": "626600",
    "end": "632959"
  },
  {
    "text": "the technology but it means that it is quite hard to do if you're attacking a new problem domain and you don't have",
    "start": "632959",
    "end": "639480"
  },
  {
    "text": "like a really deep understanding of it it's quite hard to draw those boundaries in comparison the the previous place I",
    "start": "639480",
    "end": "645800"
  },
  {
    "text": "worked which was uh Halo we went through a monolith to microservice migration so",
    "start": "645800",
    "end": "651360"
  },
  {
    "text": "we we hit loads of the kind of scaling problems and microservices was an",
    "start": "651360",
    "end": "657320"
  },
  {
    "text": "approach to to getting out of some of those problems yeah it seems like there are two you know main concerns like",
    "start": "657320",
    "end": "663880"
  },
  {
    "text": "scalability and organization scalability and like those are like the two you know critical times that people start",
    "start": "663880",
    "end": "669839"
  },
  {
    "text": "thinking about microservices yeah I think so we certainly when I was working on a monolith the the main problems we had",
    "start": "669839",
    "end": "677440"
  },
  {
    "text": "were many different teams working on the same codebase and quite often not even",
    "start": "677440",
    "end": "683399"
  },
  {
    "text": "isolated sections of the co-base but working as a cross functional team on an",
    "start": "683399",
    "end": "688480"
  },
  {
    "text": "area of the product and that required you to change lots of different bits and",
    "start": "688480",
    "end": "693560"
  },
  {
    "text": "you kind of ended up changing the same bits as other teams and that that really ground our development to a halt in in",
    "start": "693560",
    "end": "700519"
  },
  {
    "text": "some areas but does microservices solve that or does it just move that problem",
    "start": "700519",
    "end": "706000"
  },
  {
    "text": "somewhere else because if you do have a component and it's you know you need to add some capability to a",
    "start": "706000",
    "end": "712000"
  },
  {
    "text": "dependency you kind of need to do that anyway even if it's a microservice or if it's in a monolith of course if it's in",
    "start": "712000",
    "end": "718639"
  },
  {
    "text": "a little monolith then you can get things like type safety you know we can we can describe our boundaries with",
    "start": "718639",
    "end": "724399"
  },
  {
    "text": "interfaces and things in go for example and uh and it's very clean but when we deploy it or if we build that as a kind",
    "start": "724399",
    "end": "730639"
  },
  {
    "text": "of uh big sort of microservice architecture does it really solve these problems or does it sort of just change",
    "start": "730639",
    "end": "736959"
  },
  {
    "text": "them I mean there's a strong argument that changing things in a monolith is actually somewhat easier you know it's",
    "start": "736959",
    "end": "743760"
  },
  {
    "text": "deployed automically you deploy the whole thing at once so interdependencies between the services are not something",
    "start": "743760",
    "end": "749480"
  },
  {
    "text": "you really have to worry about and you've got kind of control over the whole code base at any one point you can",
    "start": "749480",
    "end": "755240"
  },
  {
    "text": "kind of atomically snapshot this is the code at this point in time this is what I'm going to deploy so there's an",
    "start": "755240",
    "end": "760800"
  },
  {
    "text": "argument especially with kind of simple small teams and Mon and you know simple development processes that that",
    "start": "760800",
    "end": "766320"
  },
  {
    "text": "monoliths will allow you to move quicker yeah I don't want to be the one fighting the corner for monoliths we also run",
    "start": "766320",
    "end": "772120"
  },
  {
    "text": "microservices but but I feel like they get a bad R sometimes yeah I definitely agree with that if you have an interface",
    "start": "772120",
    "end": "779000"
  },
  {
    "text": "that you want to refactor it's much easier if you have one code base one application and you can change both the",
    "start": "779000",
    "end": "786000"
  },
  {
    "text": "implementation of that interface and also all the places that use it in one go and that's much harder to do with uh",
    "start": "786000",
    "end": "793639"
  },
  {
    "text": "with microservices unless you take very specific approaches uh I think that's quite hard to",
    "start": "793639",
    "end": "799600"
  },
  {
    "text": "do so you mean roll your own tooling or some other whether it's code generation",
    "start": "799600",
    "end": "805279"
  },
  {
    "text": "or some other mechanism that allows you to uh solve those kind of common problems is that sort of thing yeah so I",
    "start": "805279",
    "end": "813079"
  },
  {
    "text": "think there's two aspects to it one if you have a monolith you generally have one git repository and it's or some",
    "start": "813079",
    "end": "820279"
  },
  {
    "text": "repository of code and all the code's in one place so it's easy to change and I definitely seen lots of places who where",
    "start": "820279",
    "end": "827440"
  },
  {
    "text": "people use microservices where they have a different repository for every single Service uh we don't do that at monzo we",
    "start": "827440",
    "end": "833800"
  },
  {
    "text": "have one gigantic mono repo right and that means that because it's in one",
    "start": "833800",
    "end": "839040"
  },
  {
    "text": "repository we can have a single pull request that does that same kind of change that you would normally do in in",
    "start": "839040",
    "end": "845120"
  },
  {
    "text": "a monolith but we can do across 1,600 microservices so the monor repo gives you that anyway yeah who had 10 minutes",
    "start": "845120",
    "end": "852639"
  },
  {
    "text": "before we started talking about monor repos yeah it's on the buzz word Bingo",
    "start": "852639",
    "end": "860000"
  },
  {
    "text": "right and I think it gives you the type safety aspect as well um so if you're",
    "start": "860000",
    "end": "865920"
  },
  {
    "text": "just implementing services with http you're not going to get that type safety but a monolith does give you that",
    "start": "865920",
    "end": "871600"
  },
  {
    "text": "potentially and you have to put extra effort into to get that with a microservice architecture yeah Kelsey",
    "start": "871600",
    "end": "877079"
  },
  {
    "text": "Hightower was on the show and his unpopular opinion was actually that he prefers monoliths and he was talking",
    "start": "877079",
    "end": "883600"
  },
  {
    "text": "about CU Tom you mentioned it's deployed as a monolith and he was talking about actually that is another choice you get",
    "start": "883600",
    "end": "889680"
  },
  {
    "text": "to make it is possible to through you could imagine even if you've never done it some simple kind of techniques you",
    "start": "889680",
    "end": "897000"
  },
  {
    "text": "could deploy it is the same thing potentially getting deployed but with different parts of it switched on or",
    "start": "897000",
    "end": "902880"
  },
  {
    "text": "whatever and so I suppose it ends up doing you end up doing things like that if you don't want to incur the the cost",
    "start": "902880",
    "end": "909600"
  },
  {
    "text": "or every time of setting everything up if this thing is only going to be used in one context things like that I think",
    "start": "909600",
    "end": "915399"
  },
  {
    "text": "the the distinction between micros service and monolith is is something that's kind of overblown to a certain as",
    "start": "915399",
    "end": "922120"
  },
  {
    "text": "like you can definitely take a lot of the deployment aspects you're referring to and and apply them to microservices",
    "start": "922120",
    "end": "928279"
  },
  {
    "text": "you know when we do a production deploy of I don't know for one of a better term a macros service like we tend to update",
    "start": "928279",
    "end": "934920"
  },
  {
    "text": "all the microservices to the same like gar right so so we know they all work",
    "start": "934920",
    "end": "940440"
  },
  {
    "text": "together but the the nice thing about the microservice approach is that in between those big deploys you know we",
    "start": "940440",
    "end": "946680"
  },
  {
    "text": "maybe do these big deploys once a day or once every few days in between these big deploys you can tune Individual Services",
    "start": "946680",
    "end": "953440"
  },
  {
    "text": "you can maybe deploy a bug fix that only touches one service you know in a kind of case-by case basis which which is",
    "start": "953440",
    "end": "959279"
  },
  {
    "text": "flexibility you don't really have with monoliths but then just to like throw a spanner in the works like you used to be",
    "start": "959279",
    "end": "965160"
  },
  {
    "text": "able to do this with llang right erlang arguably was a monolith you know a monolithic architecture but you could easily just hot fix in a single function",
    "start": "965160",
    "end": "972120"
  },
  {
    "text": "right could you I don't know could you you could yeah yeah this is when when languages were powerful and let you do",
    "start": "972120",
    "end": "977519"
  },
  {
    "text": "things like that yeah well Ruby lets you call any method you like if that's if that's power that's where you want to go",
    "start": "977519",
    "end": "984519"
  },
  {
    "text": "ultimate power yeah just has a catchall method that gets called yeah what's wrong with that yeah so you",
    "start": "984519",
    "end": "991279"
  },
  {
    "text": "mentioned like tuning and stuff and I think there's a lot of this as well we think of uh microservices because you do",
    "start": "991279",
    "end": "997079"
  },
  {
    "text": "have a lot more control over the deployment and the situation that they run in and even if it's just kind of",
    "start": "997079",
    "end": "1002800"
  },
  {
    "text": "simple configuration changes if you have an or service that's constantly getting hit uh every time you might choose to",
    "start": "1002800",
    "end": "1010319"
  },
  {
    "text": "have some of those constantly running where you might have some profile picture services that don't really get",
    "start": "1010319",
    "end": "1017079"
  },
  {
    "text": "hit that often and they can spin up and down as needed so you get to make those sorts of different decisions as well don't you I think at the end of the day",
    "start": "1017079",
    "end": "1023759"
  },
  {
    "text": "if you think about like the stream of instructions flowing through the processor like there's you know the",
    "start": "1023759",
    "end": "1028959"
  },
  {
    "text": "processor doesn't really know the difference between whether you're running like isolated microservices or",
    "start": "1028959",
    "end": "1034280"
  },
  {
    "text": "or one big monolith right you know maybe there's a bit of extra RPC overhead and a few more context switches but",
    "start": "1034280",
    "end": "1040079"
  },
  {
    "text": "realistically you know this is all going to be one big one big system that we're thinking about right so I like to see it",
    "start": "1040079",
    "end": "1047120"
  },
  {
    "text": "more as a spectrum like that's a bit of a cop out um you know you can even think of like functions as a service as like",
    "start": "1047120",
    "end": "1053080"
  },
  {
    "text": "the ultimate like take every single function and wrap it in its own service and deploy it you know in an autoscaling",
    "start": "1053080",
    "end": "1059039"
  },
  {
    "text": "fashion and only run them on demand and so on you can think of that as a as like one far end of the spectrum but I think",
    "start": "1059039",
    "end": "1065120"
  },
  {
    "text": "it's more about the different techniques and workflows that these enable and even like how you can apply some of these",
    "start": "1065120",
    "end": "1071240"
  },
  {
    "text": "techniques to you know to places that kind of seem a bit weird so like to give you an example one of the projects you",
    "start": "1071240",
    "end": "1077919"
  },
  {
    "text": "um you mentioned mentioned at the beginning uh cortex which is this like horizontally scalable version of Prometheus we've built so we started off",
    "start": "1077919",
    "end": "1084600"
  },
  {
    "text": "as a set of microservices there's like 15 20 microservices and it's fine we run on kubernetes you know the marginal cost of",
    "start": "1084600",
    "end": "1091720"
  },
  {
    "text": "another service is Trivial like it doesn't matter it's easy to add more services but as we saw more and more",
    "start": "1091720",
    "end": "1097320"
  },
  {
    "text": "people try and deploy this thing you know it's an open source project you can go and download it and deploy it yourself and it's just about to go 1 in",
    "start": "1097320",
    "end": "1103760"
  },
  {
    "text": "fact in in a few days time oh congrats thank you uh it's just a number but um",
    "start": "1103760",
    "end": "1109400"
  },
  {
    "text": "but yeah as as we saw more people use it we realized actually a huge barrier to entry to like have to deploy 15 20",
    "start": "1109400",
    "end": "1115559"
  },
  {
    "text": "different services to run this thing so what we ended up doing was compiling all of the different Services into a single",
    "start": "1115559",
    "end": "1120600"
  },
  {
    "text": "binary and uh having a little way in which they kind of could run in a a single process mode and wire them all",
    "start": "1120600",
    "end": "1126760"
  },
  {
    "text": "together you know with some internal RPC actually it's just they still just use grpc to Local Host and now you can",
    "start": "1126760",
    "end": "1132200"
  },
  {
    "text": "actually like a single binary a single process a single command run a cortex node and it's still horizontally scalable and it's easy to deploy and of",
    "start": "1132200",
    "end": "1139480"
  },
  {
    "text": "course we still run it as a microservice internally because that gives us the control knobs and the flexibility and",
    "start": "1139480",
    "end": "1145080"
  },
  {
    "text": "the ability to go in and and set flags on this and and and roll patches out to that and so on but I don't think like",
    "start": "1145080",
    "end": "1151320"
  },
  {
    "text": "you have to start from a point of view of like I'm going to just do markers or I'm going to just do monoliths I",
    "start": "1151320",
    "end": "1156520"
  },
  {
    "text": "actually think like it's way more new want than that and you get the kind of Best of Both words isn't this also like",
    "start": "1156520",
    "end": "1162080"
  },
  {
    "text": "uh super useful for development time lots of people like having trouble just running things like locally or in a",
    "start": "1162080",
    "end": "1167600"
  },
  {
    "text": "staging again M so maybe uh we can like provide several ways of deploying things for people who wants like all the",
    "start": "1167600",
    "end": "1173760"
  },
  {
    "text": "flexibility they can maybe go and like deploy microservices individually exactly but at least there should be",
    "start": "1173760",
    "end": "1180320"
  },
  {
    "text": "like a simple like more like a monolith way of deploying things at least for",
    "start": "1180320",
    "end": "1185400"
  },
  {
    "text": "people who doesn't need that flexibility and simplicity yeah 100% agree we we call it airplane mode it's the you know",
    "start": "1185400",
    "end": "1192440"
  },
  {
    "text": "you're flying transatlantic you don't have a you don't have a Wi-Fi connection you need to run it on your laptop like we call it airplane mode yeah that's a",
    "start": "1192440",
    "end": "1198799"
  },
  {
    "text": "cool name yeah it's a shame it's already taken I like it yeah well you like to think different don't you",
    "start": "1198799",
    "end": "1206679"
  },
  {
    "text": "oh I think we're definitely seeing that with other projects as well so sto for example uh I think version 1.5 is",
    "start": "1206679",
    "end": "1214080"
  },
  {
    "text": "combining the various Services into a single Deployable binary and that just makes it much simpler for people who are",
    "start": "1214080",
    "end": "1219679"
  },
  {
    "text": "going to operate that but they still have the separation of those components yeah and how many builds of kubes are",
    "start": "1219679",
    "end": "1224840"
  },
  {
    "text": "there that deploy as a single process right like is 3s is that one you know mini Cube that was you know there's just",
    "start": "1224840",
    "end": "1231320"
  },
  {
    "text": "so many where oh we'll just embed at CD in and we'll you know I think the other thing that occurred to me is like name a",
    "start": "1231320",
    "end": "1237799"
  },
  {
    "text": "successful widely deployed open source project that's microservices oriented kubernetes doesn't count yeah I think",
    "start": "1237799",
    "end": "1244320"
  },
  {
    "text": "that's fair I think the overhead to deploying those kind of systems is just quite High yeah so it it requires quite",
    "start": "1244320",
    "end": "1251080"
  },
  {
    "text": "a lot of investment into that ecosystem for you to want to go like get past that",
    "start": "1251080",
    "end": "1256440"
  },
  {
    "text": "hump to benefit from it and even if you want to then try it out locally I mean",
    "start": "1256440",
    "end": "1262559"
  },
  {
    "text": "this is a problem that we we have experienced at monzo with with local development we have, 1600 and something",
    "start": "1262559",
    "end": "1269039"
  },
  {
    "text": "Services right now five or 600 of them connect to Cassandra turns out a single",
    "start": "1269039",
    "end": "1274200"
  },
  {
    "text": "Cassandra Docker container does not like 500 or 600 binaries connecting to it at the same",
    "start": "1274200",
    "end": "1280320"
  },
  {
    "text": "time so that requires you to optimize those things a bit better locally yeah",
    "start": "1280320",
    "end": "1286640"
  },
  {
    "text": "it's it's not something that's easy to run on a single local machine so 1,600",
    "start": "1286640",
    "end": "1292400"
  },
  {
    "text": "Services what are some examples of those Services when you say 1600 services like",
    "start": "1292400",
    "end": "1298200"
  },
  {
    "text": "what are you measuring there so I think that's yeah it's actually a lot simpler",
    "start": "1298200",
    "end": "1303480"
  },
  {
    "text": "than I think people might imagine there's the thing that I've noticed is there's a lot of sticker shock",
    "start": "1303480",
    "end": "1310279"
  },
  {
    "text": "um whereas if if you described any complex application being made up of 1,",
    "start": "1310279",
    "end": "1317039"
  },
  {
    "text": "1600 class is people be like oh yeah of course that's software right yeah um so",
    "start": "1317039",
    "end": "1323840"
  },
  {
    "text": "they vary quite a lot um but there's generally we we when we",
    "start": "1323840",
    "end": "1329279"
  },
  {
    "text": "say Services we mean each one of those is an independent go HTTP server that",
    "start": "1329279",
    "end": "1334919"
  },
  {
    "text": "has a number of functions handlers uh that it will respond to many of them",
    "start": "1334919",
    "end": "1340080"
  },
  {
    "text": "connect to a database they will have their own databases when they do but they range quite a lot in size I think",
    "start": "1340080",
    "end": "1345919"
  },
  {
    "text": "the difference is we have lots of quite like quite a lot of high level systems",
    "start": "1345919",
    "end": "1351520"
  },
  {
    "text": "which you could probably model as a much smaller number of monoliths but it would still be many monoliths and within those",
    "start": "1351520",
    "end": "1359240"
  },
  {
    "text": "we've just divided them up quite granly so as an example we've built our own",
    "start": "1359240",
    "end": "1364919"
  },
  {
    "text": "MasterCard processor uh so monzo is both an issuer of cards many services that",
    "start": "1364919",
    "end": "1371080"
  },
  {
    "text": "make that happen but also a processor directly connected to the MasterCard Network there will be one service",
    "start": "1371080",
    "end": "1377960"
  },
  {
    "text": "somewhere that probably validates the signature of a CVV 3 on uh like a Google",
    "start": "1377960",
    "end": "1385960"
  },
  {
    "text": "or raple pay transaction and that's relatively complicated so having it as an isolated chunk of code is a useful",
    "start": "1385960",
    "end": "1393720"
  },
  {
    "text": "thing so I think there's about a 100 or so MasterCard services that make up a",
    "start": "1393720",
    "end": "1398919"
  },
  {
    "text": "MasterCard processor and then you can repeat that until you get to the number that we're talking about sure yeah are you talking",
    "start": "1398919",
    "end": "1405919"
  },
  {
    "text": "about like 100 containers pods or like 100 deployments 100 stateful sets so in",
    "start": "1405919",
    "end": "1412520"
  },
  {
    "text": "kubernetes that would be 100 deployments uh each one of those will be independently scaled with a number of",
    "start": "1412520",
    "end": "1418159"
  },
  {
    "text": "Pods at least three some will have probably not in the master car flow but some will have 100 plus pods um spread",
    "start": "1418159",
    "end": "1425840"
  },
  {
    "text": "across different availability zones but yeah so there will be 1,600 plus",
    "start": "1425840",
    "end": "1431120"
  },
  {
    "text": "deployments I think 6 or 7,000 pods something like that and yeah some of them only have three because they're",
    "start": "1431120",
    "end": "1437279"
  },
  {
    "text": "really straightforward some will handle Emoji so they're a bit less critical or maybe more critical who",
    "start": "1437279",
    "end": "1443799"
  },
  {
    "text": "knows but they vary in in like size and like importance basically do you run",
    "start": "1443799",
    "end": "1451200"
  },
  {
    "text": "regionally within monzo um and do would you like count the same service in two regions as two different services so",
    "start": "1451200",
    "end": "1457600"
  },
  {
    "text": "currently we run across three availability zones and some physical locations for a variety of",
    "start": "1457600",
    "end": "1465240"
  },
  {
    "text": "reasons and those would still will be we treat that as like a deployment I think",
    "start": "1465240",
    "end": "1471000"
  },
  {
    "text": "as we move into having many many kubernetes clusters that deployment that",
    "start": "1471000",
    "end": "1476919"
  },
  {
    "text": "many of our Engineers will see May translate to many kubernetes deployments",
    "start": "1476919",
    "end": "1482279"
  },
  {
    "text": "but we would still see that as kind of one deployment of a service just running in different geographic regions but yeah",
    "start": "1482279",
    "end": "1489080"
  },
  {
    "text": "I think like the thing that we're trying to do is provide isolation which we kind of talked about and the ability to",
    "start": "1489080",
    "end": "1495080"
  },
  {
    "text": "independently tune them but also so reducing that the the blast",
    "start": "1495080",
    "end": "1500960"
  },
  {
    "text": "radius so as an example we don't really have one API if we built many services",
    "start": "1500960",
    "end": "1506320"
  },
  {
    "text": "that broke up our domain logic we would have just ended up with one huge application that was an API that provided that to uh our apps",
    "start": "1506320",
    "end": "1514480"
  },
  {
    "text": "and various other parties so instead we kind of follow a similar pattern to Netflix where we have uh like a a",
    "start": "1514480",
    "end": "1520559"
  },
  {
    "text": "Gateway a bit like Zool and then behind that there's 200 or so apis so every",
    "start": "1520559",
    "end": "1526200"
  },
  {
    "text": "path is a different B which is a different deployment so lots lots of moving Parts yeah if if that was a",
    "start": "1526200",
    "end": "1532799"
  },
  {
    "text": "monolith then calling a function to say validate that that number that CCV Number CVV number whatever it is that",
    "start": "1532799",
    "end": "1540640"
  },
  {
    "text": "it's kind of obvious what you would pass into a function because it would be in the arguments and it's kind of obvious",
    "start": "1540640",
    "end": "1545960"
  },
  {
    "text": "what you get back how do you describe those ins and outs of each service do you have a consistent or sort of",
    "start": "1545960",
    "end": "1552440"
  },
  {
    "text": "standard way of doing that by now yeah I think you you need those kind of consistent approaches if you're going to",
    "start": "1552440",
    "end": "1559240"
  },
  {
    "text": "have a lot of microservices I think you need a lot of consistency so we use protocol buffers and that allows us to",
    "start": "1559240",
    "end": "1564760"
  },
  {
    "text": "Define an API in very concrete terms for each one of the services similar to grpc",
    "start": "1564760",
    "end": "1571279"
  },
  {
    "text": "allows you to define a service that has many end points within that definition uh and each one takes a very concrete",
    "start": "1571279",
    "end": "1578360"
  },
  {
    "text": "request and response type so you get some type safety unfortunately without extensions to the protocol buffers you",
    "start": "1578360",
    "end": "1585000"
  },
  {
    "text": "doesn't support the kind of the breadth of types that you would get if you had one application but in",
    "start": "1585000",
    "end": "1592080"
  },
  {
    "text": "many cases we we can support that because we control the whole codebase I think one example of that would be like",
    "start": "1592080",
    "end": "1597919"
  },
  {
    "text": "a money type if you're ever using money in an application please don't use 64-bit integers to store pennies or",
    "start": "1597919",
    "end": "1605080"
  },
  {
    "text": "cents uh yeah it turns out some numbers can get really really big and some",
    "start": "1605080",
    "end": "1611080"
  },
  {
    "text": "numbers you need a lot more granularity than two decimal places um so we have an",
    "start": "1611080",
    "end": "1617799"
  },
  {
    "text": "internal money type that's very well tested and we can provide we can pass that across the boundaries by",
    "start": "1617799",
    "end": "1624600"
  },
  {
    "text": "unmarshalling and marshalling what is it like a string then how have you done it we pass it on the wire as a",
    "start": "1624600",
    "end": "1631279"
  },
  {
    "text": "string and then it so it's passed as a as a decimal format but then that's converted into a a type A special type",
    "start": "1631279",
    "end": "1637880"
  },
  {
    "text": "with yeah",
    "start": "1637880",
    "end": "1641320"
  },
  {
    "text": "yeah what up nerds I got some pretty awesome news to share with you plural site is totally free for the entire",
    "start": "1644120",
    "end": "1650679"
  },
  {
    "text": "month of April I'm not kidding seriously head to pluralsight.com changelog and skill up while you stay at home for the",
    "start": "1650679",
    "end": "1657039"
  },
  {
    "text": "entire month of April you'll get access to over 7,000 courses from experts in software development security cloud and",
    "start": "1657039",
    "end": "1663960"
  },
  {
    "text": "data there's never been a better time to skill up head to pluralsight.com changelog again pluralsight.com",
    "start": "1663960",
    "end": "1671600"
  },
  {
    "text": "changelog",
    "start": "1676519",
    "end": "1679519"
  },
  {
    "text": "yeah so we talk a lot about teamwork and microservices helping kind of larger",
    "start": "1685399",
    "end": "1691320"
  },
  {
    "text": "teams and I suppose the the argument goes that essentially you can have teams",
    "start": "1691320",
    "end": "1696840"
  },
  {
    "text": "that are somewhat isolated and they sort of map neatly to the services hopefully that they're providing and they kind of",
    "start": "1696840",
    "end": "1703440"
  },
  {
    "text": "don't need to worry too much about other parts of the system they can get to focus in their little boundary I've",
    "start": "1703440",
    "end": "1709720"
  },
  {
    "text": "heard that said as a as an argument are there teamworking advantages to",
    "start": "1709720",
    "end": "1715000"
  },
  {
    "text": "microservices or can you get the same thing with monoliths I think that's really the big advantage of microservices is the the",
    "start": "1715000",
    "end": "1722519"
  },
  {
    "text": "isolation extends all the way down to the development process my experience tends to be that teams look after sets",
    "start": "1722519",
    "end": "1728919"
  },
  {
    "text": "of microservices and not just Individual Services and that they tend to you know I mean I always normally find that that",
    "start": "1728919",
    "end": "1735640"
  },
  {
    "text": "set of micros servic could easily have just been micr monolith or microlith or whatever you know catchy phrase you want",
    "start": "1735640",
    "end": "1741320"
  },
  {
    "text": "to use for it today but but I still think you know dividing code up on along team boundaries you know Conway's law is",
    "start": "1741320",
    "end": "1748399"
  },
  {
    "text": "uh is super important like it's uh both a kind of necessary evil like you have",
    "start": "1748399",
    "end": "1754039"
  },
  {
    "text": "to do it otherwise people's productivity is terrible um and it's also kind of like it's it's really detrimental when",
    "start": "1754039",
    "end": "1760880"
  },
  {
    "text": "you want to actually get like cross-service flows in place when you want to do something that's going to end",
    "start": "1760880",
    "end": "1766880"
  },
  {
    "text": "up touching tens or hundreds of services you have to talk to tens or hundreds of people you mentioned that there's always an",
    "start": "1766880",
    "end": "1772760"
  },
  {
    "text": "affilation uh between the team and the service services or like a service group I'm seeing like some common Services end",
    "start": "1772760",
    "end": "1779200"
  },
  {
    "text": "up being in a bad spot in terms of lots of people are trying to you know contribute like small fixes and so on",
    "start": "1779200",
    "end": "1785799"
  },
  {
    "text": "especially like in organizations where there's a single monor repo and it's so easy to just you know push",
    "start": "1785799",
    "end": "1791799"
  },
  {
    "text": "things what do you think about that like I'm seeing it like maybe it's not a super critical thing but I'm seeing",
    "start": "1791799",
    "end": "1797919"
  },
  {
    "text": "some organizations tend to just you know enable that culture which might be good or you know might be bothersome I think",
    "start": "1797919",
    "end": "1804559"
  },
  {
    "text": "ownership is definitely very very important I think the best way to enforce that is every service needs to",
    "start": "1804559",
    "end": "1810279"
  },
  {
    "text": "have a clearly defined owner and we use get hub for code review which means we can use uh code owners within the",
    "start": "1810279",
    "end": "1816840"
  },
  {
    "text": "repository so it means each service can have a defined owner I think anyone any engineers in the company can propose a",
    "start": "1816840",
    "end": "1823840"
  },
  {
    "text": "change uh but the code owner has to approve the change I think that's really important it gives people the",
    "start": "1823840",
    "end": "1829840"
  },
  {
    "text": "flexibility to fix problems that they experience rather than the problems being hidden behind this API that they",
    "start": "1829840",
    "end": "1837120"
  },
  {
    "text": "find frustrating you can see what the problem is you can potentially fix it that means people are really happy",
    "start": "1837120",
    "end": "1842440"
  },
  {
    "text": "because you fix bugs for them but the flip side of that is you still have the safety and control where people who have",
    "start": "1842440",
    "end": "1849080"
  },
  {
    "text": "the expertise and deep understanding of how those systems work can review and",
    "start": "1849080",
    "end": "1854200"
  },
  {
    "text": "approve the changes and also make sure that it fits in with like the longer term direction of how that system is",
    "start": "1854200",
    "end": "1859919"
  },
  {
    "text": "going to evolve I think this might be as uh advantage of microservices compared to monolith because if there's a",
    "start": "1859919",
    "end": "1866720"
  },
  {
    "text": "monolith people just like are all over the place because there's no like one person who can control the deployment or",
    "start": "1866720",
    "end": "1872919"
  },
  {
    "text": "like has an authority say to say no in some cases you can have the like same s sort of like ownership in a monolith but",
    "start": "1872919",
    "end": "1879720"
  },
  {
    "text": "I think with microservices you have like more Authority because you know the deployment it is really dependent on a",
    "start": "1879720",
    "end": "1885080"
  },
  {
    "text": "particular team so they can just say no and like they don't have to accept the you know the change or they have like",
    "start": "1885080",
    "end": "1890960"
  },
  {
    "text": "more like power to like not to push things right but that could be super frustrating right when when something",
    "start": "1890960",
    "end": "1897600"
  },
  {
    "text": "that's really important to you is not important to them yeah yeah you know like when they just refuse to oh you",
    "start": "1897600",
    "end": "1903720"
  },
  {
    "text": "know that that feature doesn't belong here or you know I found in in organizations that have adopted monoliths like sometimes you can get",
    "start": "1903720",
    "end": "1910320"
  },
  {
    "text": "that kind sorry microservices sometimes you can get that kind of you know a bit",
    "start": "1910320",
    "end": "1915519"
  },
  {
    "text": "territorial um this is my mic Services it's done in my style it's done with you know what I think should be the right",
    "start": "1915519",
    "end": "1921480"
  },
  {
    "text": "way of doing it I think what I've always found works very well to diffuse that and it it works in open source similarly",
    "start": "1921480",
    "end": "1926960"
  },
  {
    "text": "is like you've always got to have the the big hammer of like I'm just going to Fork your service if you don't want to do it the way yeah you know then I'm",
    "start": "1926960",
    "end": "1933679"
  },
  {
    "text": "just going to run my own completely I'm seeing lots of people are also like proxying things that's also a really",
    "start": "1933679",
    "end": "1939080"
  },
  {
    "text": "good way because you can just like slightly tweak uh the behavior and then like can fall back to the other service",
    "start": "1939080",
    "end": "1944960"
  },
  {
    "text": "to do the the real thing so yeah there's like all these like different cases that microservices actually enable yeah I",
    "start": "1944960",
    "end": "1952159"
  },
  {
    "text": "mean as you said like you can already you can always do code owners in a monolith like the flip side of drive by",
    "start": "1952159",
    "end": "1957320"
  },
  {
    "text": "commits in microservices is oh I've got to go and redeploy that oh I've got to go and test it and drive it through staging and and so on so you know I",
    "start": "1957320",
    "end": "1964120"
  },
  {
    "text": "think we could all agree that microservices mean you got to invest a lot more in tooling a lot more in automation to kind of get rid of some of",
    "start": "1964120",
    "end": "1971159"
  },
  {
    "text": "that toil around like the deployment and the CI and the CD and this kind of stuff do you think that differs from a",
    "start": "1971159",
    "end": "1977679"
  },
  {
    "text": "monolith or do you think at a certain point you just need a lot of tooling when a development team hits a certain",
    "start": "1977679",
    "end": "1984679"
  },
  {
    "text": "size I I mean it's a fair point right I think in the monolith world it's much easier for an organization to invest in",
    "start": "1984679",
    "end": "1992200"
  },
  {
    "text": "uh release engineering because it's like I'm going to have a person whose job it is to push out the release every",
    "start": "1992200",
    "end": "1999279"
  },
  {
    "text": "whatever every day every week every you know in a microservices okay now I've got 100 teams that all need a little bit",
    "start": "1999279",
    "end": "2004960"
  },
  {
    "text": "of release engineering but none of them quite have enough of a problem to to Really justify it but you know you can",
    "start": "2004960",
    "end": "2011519"
  },
  {
    "text": "make the argument in both directions for sure like it's not a it's not clearcut I would like to change the subject though",
    "start": "2011519",
    "end": "2017360"
  },
  {
    "text": "because mainly so I want to make one observation like one thing that hopefully we can all agree on is like",
    "start": "2017360",
    "end": "2023519"
  },
  {
    "text": "figuring out what's going on in a microservice is much harder really why",
    "start": "2023519",
    "end": "2029120"
  },
  {
    "text": "in a in a microservice in a microservice environment my my request is going to Ping between let's say hundreds of",
    "start": "2029120",
    "end": "2036360"
  },
  {
    "text": "processes on hundreds of different machines like figuring out why it's slow right you know Matt Matt you're sorry",
    "start": "2036360",
    "end": "2043120"
  },
  {
    "text": "Matt with two's you're smiling because I think you know exactly where I'm going with this right i' say yes or no I think",
    "start": "2043120",
    "end": "2049200"
  },
  {
    "text": "it just depends on the tools that you have if you have a monolith then we have",
    "start": "2049200",
    "end": "2055118"
  },
  {
    "text": "pretty good tools right and you can run them on your computer you can run debuggers you can like we have a tool",
    "start": "2055119",
    "end": "2061520"
  },
  {
    "text": "set that's evolved and is quite easy to access right whereas to get that same",
    "start": "2061520",
    "end": "2069320"
  },
  {
    "text": "level of tooling and insight you have to deploy a lot of stuff potentially and",
    "start": "2069320",
    "end": "2075320"
  },
  {
    "text": "those tools exist now and I think getting like really good metrics and",
    "start": "2075320",
    "end": "2080720"
  },
  {
    "text": "understanding of like how things are performing and then using like tracing and various other systems can give you",
    "start": "2080720",
    "end": "2087079"
  },
  {
    "text": "that Insight but it's harder I think that's that's fair and that because it",
    "start": "2087079",
    "end": "2093320"
  },
  {
    "text": "is harder I think it's a trade-off of is that the most effective use of our time",
    "start": "2093320",
    "end": "2098400"
  },
  {
    "text": "um or would it be easier if we just had a smaller number of bigger",
    "start": "2098400",
    "end": "2103880"
  },
  {
    "text": "applications and I think in my case like my personal experience has been with tracing and relatively simple metrics if",
    "start": "2103880",
    "end": "2110880"
  },
  {
    "text": "every server has metrics on its request response times and the clients that are sending requests to those servers have",
    "start": "2110880",
    "end": "2117920"
  },
  {
    "text": "request response times instrumentation on like your databases and that kind of",
    "start": "2117920",
    "end": "2123160"
  },
  {
    "text": "thing I think I find it quite easy to pinpoint which service has a problem and",
    "start": "2123160",
    "end": "2130520"
  },
  {
    "text": "at that point then you're into profiling and various other problems but there's a whole class of problems that",
    "start": "2130520",
    "end": "2136960"
  },
  {
    "text": "exist independent of a single service right there a whole class of problems that extend from the composition of tens",
    "start": "2136960",
    "end": "2144359"
  },
  {
    "text": "or hundreds of services and you've put the network between all of them as well right exactly yeah compared to like a",
    "start": "2144359",
    "end": "2150520"
  },
  {
    "text": "function you know by very fundamentally speaking having microservices has a lot of layers to go through and you know",
    "start": "2150520",
    "end": "2159359"
  },
  {
    "text": "being able to pinpoint like a single call or like single service pla call",
    "start": "2159359",
    "end": "2164839"
  },
  {
    "text": "especially as soon as you layer that on top of an orchestration platform and if",
    "start": "2164839",
    "end": "2169920"
  },
  {
    "text": "you have like an overlay Network maybe that's like moving things around if you",
    "start": "2169920",
    "end": "2175520"
  },
  {
    "text": "actually want to trace where a packet's gone between your function calls essentially that that's quite hard",
    "start": "2175520",
    "end": "2180599"
  },
  {
    "text": "sometimes I think the O the thing that makes that okay is you have a lot of layers of abstraction and",
    "start": "2180599",
    "end": "2187240"
  },
  {
    "text": "most of the time those abstractions are pretty good so the majority of cases you",
    "start": "2187240",
    "end": "2192760"
  },
  {
    "text": "don't need to dive too deep into how those abstractions work that's not to say that we've not had problems where",
    "start": "2192760",
    "end": "2198480"
  },
  {
    "text": "we've had to go really deep on like particular network problems I think we upgraded our overlay Network at one",
    "start": "2198480",
    "end": "2204359"
  },
  {
    "text": "point and the mtus were subtly different and yeah that caused some problems that",
    "start": "2204359",
    "end": "2209800"
  },
  {
    "text": "we weren't expecting and it it took a long time to find what they were but yeah having the right tooling I think is",
    "start": "2209800",
    "end": "2215359"
  },
  {
    "text": "essential yeah as as a cloud provider our main job is I feel sometimes feel like it's like really navigating all",
    "start": "2215359",
    "end": "2222040"
  },
  {
    "text": "these problems and like trying to figure out like who's problem actually is because you know from the customers",
    "start": "2222040",
    "end": "2228200"
  },
  {
    "text": "perspective it could be anything it could be their problem they sometimes don't know if they that's their problem so all those like problems are leaking",
    "start": "2228200",
    "end": "2234760"
  },
  {
    "text": "to us and we have to have to like the right tools and the capabilities to be able to like navigate uh the problem and",
    "start": "2234760",
    "end": "2241560"
  },
  {
    "text": "like be able to pinpoint to certain things yeah well m mentioned these",
    "start": "2241560",
    "end": "2247119"
  },
  {
    "text": "abstractions common Services can be little abstractions of their own and",
    "start": "2247119",
    "end": "2252160"
  },
  {
    "text": "sometimes in monoliths or anytime you you have common services or common",
    "start": "2252160",
    "end": "2257480"
  },
  {
    "text": "functionality sometimes it doesn't quite serve all of its Masters very well so",
    "start": "2257480",
    "end": "2262880"
  },
  {
    "text": "you end up with a kind of Frankenstein Service uh how do you fight against",
    "start": "2262880",
    "end": "2268000"
  },
  {
    "text": "things like that happening and what do you have any particular kind of strategies for it if if there's a",
    "start": "2268000",
    "end": "2273040"
  },
  {
    "text": "service that does almost what I want do you do do that thing that Yana was talking about where you could",
    "start": "2273040",
    "end": "2278839"
  },
  {
    "text": "potentially proxy and almost that's almost like a subclass kind of thing but then how do you keep track of where",
    "start": "2278839",
    "end": "2285079"
  },
  {
    "text": "that's happened I think in general we try and avoid abstraction where we can because most of the times we've seen a",
    "start": "2285079",
    "end": "2291920"
  },
  {
    "text": "problem and thought that it was some subcase of a much larger problem uh we've actually been wrong and we've not",
    "start": "2291920",
    "end": "2298599"
  },
  {
    "text": "been able to predict the future and so when we've added those abstractions uh",
    "start": "2298599",
    "end": "2305520"
  },
  {
    "text": "prematurely we we've just added complexity and those things have made it harder so the tradeoff there is",
    "start": "2305520",
    "end": "2314079"
  },
  {
    "text": "effectively efficiency and what I mean by that is I think something uh I was I",
    "start": "2314079",
    "end": "2321359"
  },
  {
    "text": "was talking to someone from from Amazon you could potentially end up with many teams that have essentially built something that's very similar and that",
    "start": "2321359",
    "end": "2328520"
  },
  {
    "text": "feels like a really bad trade-off of time except what we often don't factor in is",
    "start": "2328520",
    "end": "2335000"
  },
  {
    "text": "the trade-off of to walking between all these teams and the communication overhead and actually trying to build",
    "start": "2335000",
    "end": "2341800"
  },
  {
    "text": "one universal product that solves all of those use cases whereas actually it",
    "start": "2341800",
    "end": "2346920"
  },
  {
    "text": "might be better to just have a couple of similar kind of things but they're are very tuned their their specific case so",
    "start": "2346920",
    "end": "2353000"
  },
  {
    "text": "yeah we have many core services that kind of provide common functionality",
    "start": "2353000",
    "end": "2358040"
  },
  {
    "text": "those evolve over time uh so we refact them occasionally and we change some of those models effectively but yeah we try",
    "start": "2358040",
    "end": "2365680"
  },
  {
    "text": "not to prematurely optimize those cuz there's quite a high cost to it we definitely do have some of the proxy",
    "start": "2365680",
    "end": "2371960"
  },
  {
    "text": "things we just we talked about earlier I'm also seeing uh proxying is a good way to sometimes debug things like",
    "start": "2371960",
    "end": "2378000"
  },
  {
    "text": "people just proxy to be able to you know collect more data over the thing yeah so",
    "start": "2378000",
    "end": "2383359"
  },
  {
    "text": "that's also a legit case which is a separate topic but you know I just wanted to interrupt the",
    "start": "2383359",
    "end": "2389560"
  },
  {
    "text": "discussion that's the whole service mesh uh service mesh idea isn't it yeah proxy",
    "start": "2389560",
    "end": "2394880"
  },
  {
    "text": "everything too yeah definitely seen that with service messages yeah you could do that with uh we used to use linked and",
    "start": "2394880",
    "end": "2403079"
  },
  {
    "text": "uh one of the things famously yeah and one of the cool things with link was you could use uh dtab to as like routing",
    "start": "2403079",
    "end": "2409200"
  },
  {
    "text": "rules that could decide based on certain parameters where your request would go and a common use of that which isn't",
    "start": "2409200",
    "end": "2415720"
  },
  {
    "text": "something that we used was to rout very specific requests say for a particular user into a proxy so that you could",
    "start": "2415720",
    "end": "2423400"
  },
  {
    "text": "debug log the the stuff between services I mean it adds extra Hops and complexity but yeah from the sounds of it uh people",
    "start": "2423400",
    "end": "2430880"
  },
  {
    "text": "who use it it was super useful that is a cool idea and you can deploy that service live and get an Insight live",
    "start": "2430880",
    "end": "2438480"
  },
  {
    "text": "can't you so struggle to do things like that with monoliths without deploying",
    "start": "2438480",
    "end": "2443680"
  },
  {
    "text": "the whole thing probably yeah I think if you're turning on like CPU profiling do",
    "start": "2443680",
    "end": "2449319"
  },
  {
    "text": "you turn it on for a particular code path like for the whole application or",
    "start": "2449319",
    "end": "2454920"
  },
  {
    "text": "you can just turn it on for one appli appliation because it subdivided so much that you're only affecting a small",
    "start": "2454920",
    "end": "2460920"
  },
  {
    "text": "percentage of of your overall application cool yeah so what about like Tom when you think about uh monitoring",
    "start": "2460920",
    "end": "2467760"
  },
  {
    "text": "and things like this does anything change when you have microservices versus months or do your needs",
    "start": "2467760",
    "end": "2473880"
  },
  {
    "text": "essentially stay the same no I mean loads of stuff changes the simple like you know first order stuff is just the",
    "start": "2473880",
    "end": "2479599"
  },
  {
    "text": "sh volume of moving Parts you know you've gone from effectively having a single major process per machine to to",
    "start": "2479599",
    "end": "2486640"
  },
  {
    "text": "hundreds right and each one is going to export his own set of metrics so this year volume just from a metrics",
    "start": "2486640",
    "end": "2492880"
  },
  {
    "text": "perspective but we already talked like the level of complexity you really necessarily need to debug performance",
    "start": "2492880",
    "end": "2500000"
  },
  {
    "text": "issues in large microservices architectures like tracing right like this is necessary you have to have this",
    "start": "2500000",
    "end": "2506920"
  },
  {
    "text": "you say that we got a really long way at monzo without a good tracing",
    "start": "2506920",
    "end": "2512760"
  },
  {
    "text": "system I mean I didn't say you had to have a good one we had quite a bad tracing system that time ago is it just",
    "start": "2512760",
    "end": "2519640"
  },
  {
    "text": "you running around probably about as good I mean",
    "start": "2519640",
    "end": "2524920"
  },
  {
    "text": "most people's tracing systems is grepping a unique identifier through a log right which is actually kind of gets",
    "start": "2524920",
    "end": "2530680"
  },
  {
    "text": "you most of the way there you don't need fancy visualization you don't need a lot of things but that's still tracing you",
    "start": "2530680",
    "end": "2536920"
  },
  {
    "text": "know in my opinion at least like and yeah you get a long way there but you still need that like it's the first thing people introduce in my opinion and",
    "start": "2536920",
    "end": "2543440"
  },
  {
    "text": "it's you know especially there's a big difference I think between like latencies effectively like if your",
    "start": "2543440",
    "end": "2548960"
  },
  {
    "text": "latency class is like a couple hundred milliseconds then you can get away with a lot of kind of brute force and",
    "start": "2548960",
    "end": "2554400"
  },
  {
    "text": "ignorance but if you are doing high volume if you're doing trading if you're",
    "start": "2554400",
    "end": "2559599"
  },
  {
    "text": "doing anything where you're expecting to handle a huge amount of small things you",
    "start": "2559599",
    "end": "2564640"
  },
  {
    "text": "know low latency applications and so on tracing is just 100% necessary and then you know the sheer volume we've talked",
    "start": "2564640",
    "end": "2570640"
  },
  {
    "text": "about volume is one of the main things but also you have this extra kind of dimensionality to your data",
    "start": "2570640",
    "end": "2576720"
  },
  {
    "text": "you tend to um you know we've already kind of mentioned kubernetes right but no one really does microservices without",
    "start": "2576720",
    "end": "2582240"
  },
  {
    "text": "some kind of orchestration system and that orchestration system has information about the things that are",
    "start": "2582240",
    "end": "2587960"
  },
  {
    "text": "running so this is you know any kind of observability system whereas previously you know I'll you know I remember the",
    "start": "2587960",
    "end": "2594599"
  },
  {
    "text": "billing system is on a server called John I'll just go and look at that server you know you don't necessarily know that anymore when you're in a",
    "start": "2594599",
    "end": "2600960"
  },
  {
    "text": "microservices architecture with some kind of orchestrator so you have to have a way in your or in your observability",
    "start": "2600960",
    "end": "2607839"
  },
  {
    "text": "stack right of incorporating a lot of this metadata and this extra dimensionality and this is why like you",
    "start": "2607839",
    "end": "2613000"
  },
  {
    "text": "know I think this is why we've seen the rise of systems like Prometheus because they support this multi-dimensional data",
    "start": "2613000",
    "end": "2619920"
  },
  {
    "text": "um and they support like very rich Integrations with things like kubernetes and I think that's the one of the really",
    "start": "2619920",
    "end": "2625480"
  },
  {
    "text": "one of the drivers behind the the demise or or the lack of popularity around things like graphite yeah I think those",
    "start": "2625480",
    "end": "2631760"
  },
  {
    "text": "things have been really essential for us both being able to just pump a lot of metrics into a system and then go and",
    "start": "2631760",
    "end": "2639680"
  },
  {
    "text": "introspect it later and both to use that for kind of Investigations later but also monitoring in real time and then",
    "start": "2639680",
    "end": "2647040"
  },
  {
    "text": "yeah the tracing mechanism we use Jager now and for a while we had yeah that's too here we had a system which uh would",
    "start": "2647040",
    "end": "2653920"
  },
  {
    "text": "yeah use structured logging to propagate a TR a request ID so you could look at",
    "start": "2653920",
    "end": "2659800"
  },
  {
    "text": "all the log lines across a 100 different servers to just pick that needle out of",
    "start": "2659800",
    "end": "2665559"
  },
  {
    "text": "that h stack and combine them all together and I think those were the only real ways we could understand those kind",
    "start": "2665559",
    "end": "2672680"
  },
  {
    "text": "of things but with those tools in place I think it's it's quite useful or really beneficial one of the questions I was",
    "start": "2672680",
    "end": "2678359"
  },
  {
    "text": "going to ask actually I think one of the things you get for free if you have that approach is we have many many services",
    "start": "2678359",
    "end": "2686640"
  },
  {
    "text": "and a call graph crosses many of these service boundaries and each one of these boundaries has all these automated like",
    "start": "2686640",
    "end": "2693640"
  },
  {
    "text": "break points effectively that are instrumented so every call between a service has the",
    "start": "2693640",
    "end": "2700040"
  },
  {
    "text": "perceived time from the caller and the server so you have all these like",
    "start": "2700040",
    "end": "2705720"
  },
  {
    "text": "checkpoints all the way down your call graph where you can see the performance of different things which Engineers",
    "start": "2705720",
    "end": "2711599"
  },
  {
    "text": "don't need to think about they they just get for free because the client that we use adds them how would you do that if",
    "start": "2711599",
    "end": "2717880"
  },
  {
    "text": "you were building a monolith cuz you'd have to remember to add them presumably at",
    "start": "2717880",
    "end": "2723839"
  },
  {
    "text": "all these different places and then that depends on the team or is there a common",
    "start": "2723839",
    "end": "2729280"
  },
  {
    "text": "approach I think we're building this we're building something I'm building something we're a tiny team and I think",
    "start": "2729280",
    "end": "2734640"
  },
  {
    "text": "team size definitely plays a big part in this decision making process for around",
    "start": "2734640",
    "end": "2739920"
  },
  {
    "text": "this subject uh so we're a tiny little team there's just two of us building a thing and we still have a kind of",
    "start": "2739920",
    "end": "2746440"
  },
  {
    "text": "service abstraction a little bit where because we have front end front end client that's being uh through apis is",
    "start": "2746440",
    "end": "2753520"
  },
  {
    "text": "interacting with the back end so from the way that we've done that we've used go interfaces actually to describe our",
    "start": "2753520",
    "end": "2760400"
  },
  {
    "text": "interfaces and then we've used the reflection tools in the standard library to look at those interfaces and then",
    "start": "2760400",
    "end": "2766680"
  },
  {
    "text": "generate everything we need from that so we do have an opportunity from that tooling to generate middleware you know",
    "start": "2766680",
    "end": "2773599"
  },
  {
    "text": "that matches even it could be strongly typed too because it's generated dynamically from these templates but I",
    "start": "2773599",
    "end": "2779880"
  },
  {
    "text": "think you'd end up with something like that otherwise yeah it's a case of just a bit like we do with eror in go where",
    "start": "2779880",
    "end": "2786559"
  },
  {
    "text": "you just have to remember to do it every time you have to do it I mean other languages exist right and other",
    "start": "2786559",
    "end": "2792280"
  },
  {
    "text": "languages have more elegant solutions to this what do you mean other languages exist not on this podcast baby and I",
    "start": "2792280",
    "end": "2798599"
  },
  {
    "text": "allowed to use the JW here yes please of course everyone's welcome Tom you just",
    "start": "2798599",
    "end": "2803680"
  },
  {
    "text": "won't necessarily be asked back are you going to edit this bit out are you now man it gets bleeped out automatically if",
    "start": "2803680",
    "end": "2808720"
  },
  {
    "text": "you say that word you were railing on Ruby for having like an accept all method when you call",
    "start": "2808720",
    "end": "2814040"
  },
  {
    "text": "it on a class but that pattern is super useful for building this kind of middleware you're describing right",
    "start": "2814040",
    "end": "2819440"
  },
  {
    "text": "suddenly I don't have to run a code generator I don't have to interface everything out I can just add a proxy",
    "start": "2819440",
    "end": "2824880"
  },
  {
    "text": "class in it intercepts all messages and instruments them and this is how people did it in monoliths for a very long time",
    "start": "2824880",
    "end": "2831440"
  },
  {
    "text": "Austin uh Clemens is an idea to like automatically maybe intercept things for",
    "start": "2831440",
    "end": "2837079"
  },
  {
    "text": "like um you know instrumentation purposes so this may well this has been like this idea has been around for a",
    "start": "2837079",
    "end": "2843400"
  },
  {
    "text": "long time but you know nobody actually did anything thing yet for go so what is it Yana um so we want to be able to like",
    "start": "2843400",
    "end": "2851280"
  },
  {
    "text": "just arbitrarily intercept all the function calls in order to like collect some data so we can see all the like you",
    "start": "2851280",
    "end": "2856760"
  },
  {
    "text": "know execution execution trees and like uh you know potentially generate some",
    "start": "2856760",
    "end": "2862720"
  },
  {
    "text": "sort of like visualization or like run some analysis to see you know where are like some of the hot P pads and so on um",
    "start": "2862720",
    "end": "2870359"
  },
  {
    "text": "so he he was interested doing some work around this but you know there's a lot of other things going on so this hasn't",
    "start": "2870359",
    "end": "2876200"
  },
  {
    "text": "been a high priority for a while and you can always do this with profilers right",
    "start": "2876200",
    "end": "2881319"
  },
  {
    "text": "like profilers you know pause a thread sampl it stack done yeah so the te",
    "start": "2881319",
    "end": "2886480"
  },
  {
    "text": "techniques to do this you could actually argue right that the technique of automatically instrumenting um you know RPC boundaries",
    "start": "2886480",
    "end": "2893960"
  },
  {
    "text": "is the newer one right it's a profile yeah yeah anyway if you were wondering what is 3D printing it's it's a clamp",
    "start": "2893960",
    "end": "2901480"
  },
  {
    "text": "what's that for nice it's for monzo card ah it's yeah cuz I'm just",
    "start": "2901480",
    "end": "2908280"
  },
  {
    "text": "such a big fan of monzo mat yeah yeah yeah it's a clamp PL yeah yeah but it's",
    "start": "2908280",
    "end": "2913640"
  },
  {
    "text": "a podcast mate so you've got to describe it what do you mean a clamp that's not going to make any imagine someone listening to this on a podcast how do",
    "start": "2913640",
    "end": "2919839"
  },
  {
    "text": "you describe a clamp it's a thing that you use to clamp things with fine but why",
    "start": "2919839",
    "end": "2926079"
  },
  {
    "text": "it's I'm Matt you clearly don't understand 3D printing if you're asking why okay fair enough no that's a good",
    "start": "2926079",
    "end": "2931920"
  },
  {
    "text": "[Laughter] point [Music]",
    "start": "2931920",
    "end": "2942240"
  },
  {
    "text": "hi there this is John Calhoun one of your go time panelists when I'm not working on go time I create programming",
    "start": "2942240",
    "end": "2948280"
  },
  {
    "text": "courses that help developers level up their go skills and one of my more recent courses algorithms with go is",
    "start": "2948280",
    "end": "2953960"
  },
  {
    "text": "live and I wanted to invite you to check it out so it's completely free and in it we explore how algorithms and data",
    "start": "2953960",
    "end": "2959760"
  },
  {
    "text": "structures work as well as how to actually Implement them in go code so if you've ever had an interest in learning",
    "start": "2959760",
    "end": "2964839"
  },
  {
    "text": "about algorithms or data structures or if you felt like you understand them conceptually but just couldn't nail down",
    "start": "2964839",
    "end": "2970559"
  },
  {
    "text": "that coding part this course is going to be great for you we actually dive into coding everything we work on practice",
    "start": "2970559",
    "end": "2975839"
  },
  {
    "text": "problems and it's a lot of fun you can sign up completely free at algorithms withg go.com gotime again that's",
    "start": "2975839",
    "end": "2982599"
  },
  {
    "text": "algorithms withg go.com gotime and don't forget that last /go time bit it helps",
    "start": "2982599",
    "end": "2987680"
  },
  {
    "text": "me keep track of how you found out about the course so that go time gets credit for referring you thanks for",
    "start": "2987680",
    "end": "2994240"
  },
  {
    "text": "listening [Music]",
    "start": "2994520",
    "end": "3010289"
  },
  {
    "text": "so testing is another area that I think gets quite interesting one of the things that appeals to me with the microservices is this idea that you",
    "start": "3012480",
    "end": "3019960"
  },
  {
    "text": "could really well test it you could test that service almost every possible input",
    "start": "3019960",
    "end": "3025760"
  },
  {
    "text": "and output you could test it that much if you if you were so inclined um and",
    "start": "3025760",
    "end": "3030880"
  },
  {
    "text": "and because it's so focused then you know hopefully it's you create good tests as well are there other things to",
    "start": "3030880",
    "end": "3038000"
  },
  {
    "text": "consider when it comes to testing does it get easier or harder of you found controversial opinion perhaps is that",
    "start": "3038000",
    "end": "3045079"
  },
  {
    "text": "testing always useful right that's actually a fair question oh yeah so it",
    "start": "3045079",
    "end": "3050559"
  },
  {
    "text": "definitely is I should like probably clarify that and testing any individual",
    "start": "3050559",
    "end": "3055880"
  },
  {
    "text": "service gives you really good insight into how it works and how how that chunk",
    "start": "3055880",
    "end": "3061200"
  },
  {
    "text": "of domain logic works and you can test it to infinity and that's really good unless",
    "start": "3061200",
    "end": "3068480"
  },
  {
    "text": "it's actually the boundaries between your services that the problems occur at which from my experience is usually the",
    "start": "3068480",
    "end": "3074400"
  },
  {
    "text": "case and testing across those boundaries that's quite hard I don't think I've seen like a",
    "start": "3074400",
    "end": "3081440"
  },
  {
    "text": "silver bullet there really but and honestly like how is like like isolated service testing any different from unit",
    "start": "3081440",
    "end": "3087960"
  },
  {
    "text": "testing it yeah it is just unit testing right so like we already know how to test stuff in monoliths it's called",
    "start": "3087960",
    "end": "3093720"
  },
  {
    "text": "design your code properly in well isolated chunks and unit test it like so the nice thing about microservices right",
    "start": "3093720",
    "end": "3100599"
  },
  {
    "text": "is it kind of forces you to do that you know you can't just call random methods in a microservice unless they're exposed",
    "start": "3100599",
    "end": "3106040"
  },
  {
    "text": "that's a nice thing but it's just enforced like boundaries that's all yeah you could just do that doesn't you could",
    "start": "3106040",
    "end": "3111880"
  },
  {
    "text": "do that yourself too even in a monolith and actually should be similarly then the integration tests which are quite",
    "start": "3111880",
    "end": "3118200"
  },
  {
    "text": "they're quite difficult to do in microservice world they're also quite difficult to get right in a monolith too I mean sure yeah I mean the only",
    "start": "3118200",
    "end": "3124839"
  },
  {
    "text": "argument I would make in a monolith is actually orchestrating a set of let's call them services within a monolith is",
    "start": "3124839",
    "end": "3131599"
  },
  {
    "text": "easier than within you know microservices where potentially they live in separate repos built in separate languages you know at least within a",
    "start": "3131599",
    "end": "3138160"
  },
  {
    "text": "monolith you can wire them together in process potentially yeah I think that that integration testing is where a lot",
    "start": "3138160",
    "end": "3145160"
  },
  {
    "text": "of the value lives and some of the problems that I've seen with the unit testing is if you have well- defined",
    "start": "3145160",
    "end": "3150599"
  },
  {
    "text": "interfaces within your service that's great but as soon as you're kind of testing the API part between them one of",
    "start": "3150599",
    "end": "3157799"
  },
  {
    "text": "the kind of things that the patterns I've seen is where we we might stub the",
    "start": "3157799",
    "end": "3164119"
  },
  {
    "text": "API response from another service and in order to do a test you actually have to stub many services yeah the entire thing",
    "start": "3164119",
    "end": "3172240"
  },
  {
    "text": "do you think that so I'm seeing a pattern that uh lots of service owners are also providing their stops or like",
    "start": "3172240",
    "end": "3178599"
  },
  {
    "text": "mocks and so on do you follow a similar strategy like how do you deal if you want to test some service that depends",
    "start": "3178599",
    "end": "3185839"
  },
  {
    "text": "on another one and like are you just you know generating so those payloads",
    "start": "3185839",
    "end": "3191720"
  },
  {
    "text": "yourself as a developer on a different team or are you just taking someone else's um mock or anything that is",
    "start": "3191720",
    "end": "3199240"
  },
  {
    "text": "already available I think in an Ideal World we would teams the own Services",
    "start": "3199240",
    "end": "3204440"
  },
  {
    "text": "would provide more box which other teams could use I don't think at monzo we have many examples of that which means we we",
    "start": "3204440",
    "end": "3212200"
  },
  {
    "text": "have uh request response types that are defined in the protocol buffers so we can define those but you have to",
    "start": "3212200",
    "end": "3218839"
  },
  {
    "text": "effectively stub the the response yourself and that gives you some protection because if the interface",
    "start": "3218839",
    "end": "3224799"
  },
  {
    "text": "changes it won't compile anymore but it doesn't give you all of the protection we would really want them uh and that's",
    "start": "3224799",
    "end": "3230839"
  },
  {
    "text": "where you then have to fall back another level to like full stack integ ation tests where you're testing many many",
    "start": "3230839",
    "end": "3238200"
  },
  {
    "text": "different permutations of of a request all the way down the",
    "start": "3238200",
    "end": "3243839"
  },
  {
    "text": "stack it's so complicated especially like given the orchestrators and so on I'm seeing a huge Trend people just want",
    "start": "3243839",
    "end": "3249880"
  },
  {
    "text": "to push things to production like or to Canary to you know that's like their primary almost testing environment",
    "start": "3249880",
    "end": "3257480"
  },
  {
    "text": "sometimes uh that's that's a bit sad but like that also like captures the complexity of the reality especially",
    "start": "3257480",
    "end": "3263839"
  },
  {
    "text": "when you have kubernetes like different like you know deployment problems as well as like um replication problems and",
    "start": "3263839",
    "end": "3270520"
  },
  {
    "text": "that sort of things I think like in the end you just end up having the like one",
    "start": "3270520",
    "end": "3275880"
  },
  {
    "text": "final test in production by pushing a canary yeah that's the kind of thing",
    "start": "3275880",
    "end": "3281319"
  },
  {
    "text": "that we're looking at now yeah I mean I would take a i' take a cont view there right like to what extent is monitoring",
    "start": "3281319",
    "end": "3288079"
  },
  {
    "text": "just extended integration testing like to what extent like if you know and you should be running any sufficiently",
    "start": "3288079",
    "end": "3294520"
  },
  {
    "text": "complicated system you should be injecting kind of artificial load in your system and measuring Its Behavior",
    "start": "3294520",
    "end": "3299839"
  },
  {
    "text": "right so like why not just call your integration test actually it's just a staging environment and we're just going",
    "start": "3299839",
    "end": "3305520"
  },
  {
    "text": "to Pummel it with artificial load and use the same production alerts the same",
    "start": "3305520",
    "end": "3311280"
  },
  {
    "text": "you know monitoring and Playbook and everything we use on prod we're just going to use it on integration or yeah",
    "start": "3311280",
    "end": "3317160"
  },
  {
    "text": "that's true it's also like common to actually mirror the incoming traffic you know set up a staging environment or",
    "start": "3317160",
    "end": "3322640"
  },
  {
    "text": "like a testing environment and like use the same load with similar payloads that's also very common that's something",
    "start": "3322640",
    "end": "3328200"
  },
  {
    "text": "that we're building at the moment mhm that's a better quality test than any kind of artificial contrived definit um",
    "start": "3328200",
    "end": "3334720"
  },
  {
    "text": "integration test you know it does again come back to that point of you need better tooling right because the only way that's ever going to work is like",
    "start": "3334720",
    "end": "3341119"
  },
  {
    "text": "continuous deployment is you know techniques config management like ways",
    "start": "3341119",
    "end": "3346160"
  },
  {
    "text": "in which you can ensure your your staging environment is incredibly similar to production yeah and either ways to do it",
    "start": "3346160",
    "end": "3353039"
  },
  {
    "text": "in production where you have guarantees it won't affect your like customer data",
    "start": "3353039",
    "end": "3358799"
  },
  {
    "text": "or various kpis that you have you mean test equals",
    "start": "3358799",
    "end": "3364200"
  },
  {
    "text": "true there is like a lot of people will argue for uh testing in production and I'm not one of them but but they've got",
    "start": "3364200",
    "end": "3370960"
  },
  {
    "text": "some very good points like if you can arrange a system you know I've never been a huge fan of service measures but",
    "start": "3370960",
    "end": "3377200"
  },
  {
    "text": "this is one of the things they can do which is really kind of nice is is partition off you know a separate area",
    "start": "3377200",
    "end": "3383400"
  },
  {
    "text": "of effectively production that you can use for testing and that's that that is kind of a nice nice system yeah those so",
    "start": "3383400",
    "end": "3389559"
  },
  {
    "text": "there's kind of two main areas that we're looking at at the moment so one of them we ran our last crowdfunding",
    "start": "3389559",
    "end": "3395640"
  },
  {
    "text": "through the same platform which at face value might sound insane but it allowed",
    "start": "3395640",
    "end": "3401200"
  },
  {
    "text": "us to use many of the same systems to make things reliable but it requires you to load test lots of things uh so we",
    "start": "3401200",
    "end": "3407839"
  },
  {
    "text": "built a a shadow traffic system there where we can multiply traffic at our",
    "start": "3407839",
    "end": "3413480"
  },
  {
    "text": "Edge and we can can Replay that traffic through the production infrastructure so that we can effectively get the same",
    "start": "3413480",
    "end": "3419960"
  },
  {
    "text": "usage patterns but just dramatically scaled up uh and we use that as one kind of uh load testing system we run that uh",
    "start": "3419960",
    "end": "3427200"
  },
  {
    "text": "periodically and then the other aspect yeah is the the service match approach uh that you mentioned Tom so one of the",
    "start": "3427200",
    "end": "3434400"
  },
  {
    "text": "things that we've we've added recently is uh if you're propagating uh a context all the way",
    "start": "3434400",
    "end": "3440280"
  },
  {
    "text": "through your requests which allows you to pass Trace IDs and various other useful stuff we propagate the",
    "start": "3440280",
    "end": "3445640"
  },
  {
    "text": "environment through that as well uh and we have mechanisms to make sure they're not modified but that allows us to yeah",
    "start": "3445640",
    "end": "3451440"
  },
  {
    "text": "mirror production traffic into uh another environment or mirror staging traffic into another environment those",
    "start": "3451440",
    "end": "3458039"
  },
  {
    "text": "are the things we're kind of like looking at at the moment so nor production yet but yeah we've got kind of prototypes of those running in our",
    "start": "3458039",
    "end": "3464680"
  },
  {
    "text": "staging environments at the moment for testing and isolation between different teams to be honest which is a a big",
    "start": "3464680",
    "end": "3471400"
  },
  {
    "text": "benefit there oh that's so cool well actually actually it's time for our very",
    "start": "3471400",
    "end": "3477119"
  },
  {
    "text": "regular part of the show it's time for unpopular [Music]",
    "start": "3477119",
    "end": "3483960"
  },
  {
    "text": "opinions unop opinion I actually think you should probably",
    "start": "3483960",
    "end": "3491039"
  },
  {
    "text": "leave",
    "start": "3492760",
    "end": "3495760"
  },
  {
    "text": "opinion so anybody's free to shout out do you happen to have a unpopular",
    "start": "3498400",
    "end": "3503960"
  },
  {
    "text": "opinion it doesn't have to to be Tech related I think our first one was Julie Q saying she liked taxes in New York so",
    "start": "3503960",
    "end": "3511000"
  },
  {
    "text": "there you go so what yeah yeah she loves them absolutely loves them who doesn't",
    "start": "3511000",
    "end": "3516160"
  },
  {
    "text": "have to be Tech related you didn't tell me that well if you've got a tech one then that's all right mate do you have any popular opinions",
    "start": "3516160",
    "end": "3524000"
  },
  {
    "text": "Tom uh no okay well then do you want to do an unpopular one I think I'll choose",
    "start": "3524000",
    "end": "3529119"
  },
  {
    "text": "configuration management so I'm going to say like you know obviously no one loves yo that's not an unpopular opinion",
    "start": "3529119",
    "end": "3535559"
  },
  {
    "text": "but I really despise Helm and for good reason right I don't want to belittle the work that the engineers have done",
    "start": "3535559",
    "end": "3541839"
  },
  {
    "text": "and and it's incredibly popular so clearly they're on to something but the the level of like boilerplate",
    "start": "3541839",
    "end": "3549079"
  },
  {
    "text": "templating and repetition that's been encouraged by Helm is is something that really grinds my gears and I so we are graffan labs",
    "start": "3549079",
    "end": "3557400"
  },
  {
    "text": "and and we've been encouraging like anyone who will Who will listen to use something called jsonic so jsonic is",
    "start": "3557400",
    "end": "3562799"
  },
  {
    "text": "this config language that like extends Jason with functions and comprehensions and and all the jats right and from",
    "start": "3562799",
    "end": "3570359"
  },
  {
    "text": "there you know it has this really nice operator that allows you to compose together two dictionaries like but merge",
    "start": "3570359",
    "end": "3575640"
  },
  {
    "text": "together two dictionaries and so I one my unpopular opinion is like Json is awesome and is the future and I know and",
    "start": "3575640",
    "end": "3582520"
  },
  {
    "text": "this is a call out to bch I saw your thread on Twitter at the weekend I think Json is awesome and and we use it for",
    "start": "3582520",
    "end": "3589039"
  },
  {
    "text": "all of our kubernetes config management through it used to be a project called Cas on it and now it's tanker and we use",
    "start": "3589039",
    "end": "3594359"
  },
  {
    "text": "it to to distribute all of our alerts our dashboards anything like the Prometheus mix in the you know ETD",
    "start": "3594359",
    "end": "3601160"
  },
  {
    "text": "mixing these are all written in jonic and I think this is super powerful and uh yeah so my unpopular opinion is that",
    "start": "3601160",
    "end": "3608119"
  },
  {
    "text": "jonic rocks and that we should all use that great and we'll put the link to that in the show notes Mr Heath do you",
    "start": "3608119",
    "end": "3615480"
  },
  {
    "text": "have an unpopular opinion mate yeah I think the microservices one is quite unpopular to be",
    "start": "3615480",
    "end": "3622680"
  },
  {
    "text": "honest judging by the reaction on the internet most of the time um yeah I don't want to like I",
    "start": "3622680",
    "end": "3630920"
  },
  {
    "text": "don't know it feels a bit of a cheat to kind of continue the conversation we've had no not at all I think like the",
    "start": "3630920",
    "end": "3636960"
  },
  {
    "text": "unpopular part is when people see a number that describes something that you",
    "start": "3636960",
    "end": "3643200"
  },
  {
    "text": "don't have context for it it feels at face value like rather than finding out",
    "start": "3643200",
    "end": "3649319"
  },
  {
    "text": "more information usually the the kind of sticker shock value is the thing that",
    "start": "3649319",
    "end": "3654760"
  },
  {
    "text": "feels quite unpopular yeah and I think the part of that there is really what",
    "start": "3654760",
    "end": "3660480"
  },
  {
    "text": "even is complexity I think it's really easy to look at a system that has many",
    "start": "3660480",
    "end": "3665760"
  },
  {
    "text": "many components and see it as being very very complex but if you don't actually",
    "start": "3665760",
    "end": "3671280"
  },
  {
    "text": "get exposed to all of the complexity all of the time you only deal with a small",
    "start": "3671280",
    "end": "3676440"
  },
  {
    "text": "subsection of it and by breaking apart systems into many smaller components",
    "start": "3676440",
    "end": "3683440"
  },
  {
    "text": "Each of which is very simple I think like actually that complexity aspect can kind of go away also just different",
    "start": "3683440",
    "end": "3689880"
  },
  {
    "text": "teams can work on the comp the different aspects of the complexity so yeah that feels quite unpopular uh whenever we",
    "start": "3689880",
    "end": "3697119"
  },
  {
    "text": "discuss it I think yeah the microservices thing works really well for some organizations but it doesn't",
    "start": "3697119",
    "end": "3703000"
  },
  {
    "text": "work for everybody it it depends on the problem really that's a great one I think that's fine yeah I think about",
    "start": "3703000",
    "end": "3709760"
  },
  {
    "text": "beginners with this cuz as we've kind of started we've sort of said that it when you're starting in out or if it's a",
    "start": "3709760",
    "end": "3715319"
  },
  {
    "text": "small project you don't need necessarily to build M the investment needed to",
    "start": "3715319",
    "end": "3720480"
  },
  {
    "text": "build out the big microservices thing and that might leave some people in a situation where they only work on small",
    "start": "3720480",
    "end": "3725960"
  },
  {
    "text": "teams and don't ever get exposed to any of this kinds of ways of working are",
    "start": "3725960",
    "end": "3731119"
  },
  {
    "text": "there are there any things that beginners can do to sort of get a bit of exposure to microservices or is the",
    "start": "3731119",
    "end": "3737559"
  },
  {
    "text": "answer to that you sort of have to be on a big team because that's really when things get hard anyway I think a little",
    "start": "3737559",
    "end": "3743559"
  },
  {
    "text": "bit I think if you're building a product then scaling or the need to scale is a",
    "start": "3743559",
    "end": "3748640"
  },
  {
    "text": "problem you only have if if the product's successful right you only have to scale things if people like your",
    "start": "3748640",
    "end": "3754039"
  },
  {
    "text": "product and and they want to use it but yeah the scaling part has lots of challenges so yeah I it depends really",
    "start": "3754039",
    "end": "3762720"
  },
  {
    "text": "but we we started right from the beginning with microservices and we based that on prior experience having",
    "start": "3762720",
    "end": "3768400"
  },
  {
    "text": "worked on those kind of systems before and it definitely slowed us down at the beginning uh I wouldn't recommend like",
    "start": "3768400",
    "end": "3774400"
  },
  {
    "text": "like diving straight in on a new project with that kind of approach so I think there's like a",
    "start": "3774400",
    "end": "3780799"
  },
  {
    "text": "natural transition point where a project or product goes through that bit and",
    "start": "3780799",
    "end": "3785960"
  },
  {
    "text": "it's probably a better way to do it because it's more obvious isn't it when you are feeling the pain that your",
    "start": "3785960",
    "end": "3791720"
  },
  {
    "text": "monolith is sort of not doing what you want it to do and you're feeling that pain you're in a much better position to",
    "start": "3791720",
    "end": "3797960"
  },
  {
    "text": "design a solution that's going to work if you try and do that in advance some things I think are obvious and they seem",
    "start": "3797960",
    "end": "3803960"
  },
  {
    "text": "obvious but you can't really beat actually building it and living with it and seeing this thing in the wild to",
    "start": "3803960",
    "end": "3810119"
  },
  {
    "text": "then get a better sense of what how it behaves yeah and understanding the the",
    "start": "3810119",
    "end": "3815480"
  },
  {
    "text": "problem space so for example we we have a a transaction service that represents what a you know money transaction looks",
    "start": "3815480",
    "end": "3822680"
  },
  {
    "text": "like and it it's not the the accounting concept it's like the visual kind of representation to a customer we built",
    "start": "3822680",
    "end": "3829400"
  },
  {
    "text": "the core part of that that product before we released prepaid cards oh wow our first first prototype was P2P like",
    "start": "3829400",
    "end": "3836720"
  },
  {
    "text": "venmo or something and we built a transaction Service as a part of that now we've evolved it a bit since but",
    "start": "3836720",
    "end": "3843240"
  },
  {
    "text": "clearly we made like I made a load of assumptions 5 years ago based on very little knowledge of of how that might",
    "start": "3843240",
    "end": "3849240"
  },
  {
    "text": "work some of them have stood the test of time by the sounds of it I mean some of",
    "start": "3849240",
    "end": "3854400"
  },
  {
    "text": "them but not a lot um yeah so I think like you learn",
    "start": "3854400",
    "end": "3861039"
  },
  {
    "text": "stuff as you go along and being able to change stuff rapidly is probably the most important bit Yeah Yana did you",
    "start": "3861039",
    "end": "3867119"
  },
  {
    "text": "actually have an unpopular opinion I don't know if you've said one in a while sure uh I I actually have an unpopular",
    "start": "3867119",
    "end": "3875359"
  },
  {
    "text": "opinion about microservices even if you're working for a small company it's a microservices environments even if you",
    "start": "3875359",
    "end": "3881799"
  },
  {
    "text": "have a monolith like you still have like some external dependencies or it's just like really",
    "start": "3881799",
    "end": "3887799"
  },
  {
    "text": "being you are not exposed a lot of like scale related issues but um just being",
    "start": "3887799",
    "end": "3894400"
  },
  {
    "text": "in a large organization working on a single service is not quite different than working for a monolith like it's",
    "start": "3894400",
    "end": "3902400"
  },
  {
    "text": "it's it's you know you're just very focused that's the main reason microservices exist as a way to scale",
    "start": "3902400",
    "end": "3907599"
  },
  {
    "text": "the organizational problems you're most of your time is just really isolated and",
    "start": "3907599",
    "end": "3913400"
  },
  {
    "text": "focused on a single service and yes you have some external dependencies and so on um and at a small company you're",
    "start": "3913400",
    "end": "3920039"
  },
  {
    "text": "likely to have an external service from a different provider probably so you can still put some of these like practices",
    "start": "3920039",
    "end": "3926720"
  },
  {
    "text": "in your daily routine you know like the stuff that we talked about monitoring and debugging things maybe you won't be",
    "start": "3926720",
    "end": "3933279"
  },
  {
    "text": "able to you know touch all the specs in terms of building this internal tooling that like works very consistently or",
    "start": "3933279",
    "end": "3939920"
  },
  {
    "text": "like having like some core Services whatever but you can still you know get a good feeling of what it feels to work",
    "start": "3939920",
    "end": "3946960"
  },
  {
    "text": "in a microservices like primarily microservices environment I mean everything is a microservice in the end",
    "start": "3946960",
    "end": "3953000"
  },
  {
    "text": "of the day when they they get bigger we just split them more that's great yeah and I think that",
    "start": "3953000",
    "end": "3960319"
  },
  {
    "text": "that reinforces the idea that even when building a monolith you should think about how you may separate it out in the",
    "start": "3960319",
    "end": "3966119"
  },
  {
    "text": "future and that's just good engineering right build you know nice interfaces internally because they might become",
    "start": "3966119",
    "end": "3972279"
  },
  {
    "text": "external interfaces you know in a month or a year that's great yeah well this has",
    "start": "3972279",
    "end": "3977720"
  },
  {
    "text": "been awesome I've learned a lot I really hope I'm sure that our listeners have too that's all the time we have today so",
    "start": "3977720",
    "end": "3984839"
  },
  {
    "text": "thank you very much to our guests I know it's sad isn't it you have to come back and join us another time Tom are you going to you going to do that yeah am I",
    "start": "3984839",
    "end": "3990920"
  },
  {
    "text": "going to be invited yeah I don't know I need you 3D print something again yeah not a clamp what can I 3D print next",
    "start": "3990920",
    "end": "3997359"
  },
  {
    "text": "time not a clamp oh what's wrong with my clamp my clamp's Lov more boring yeah is is lovely I'm not I don't",
    "start": "3997359",
    "end": "4004640"
  },
  {
    "text": "want to I mean can we take a picture of it for Twitter I think lovely lovely is the right word right to describe this",
    "start": "4004640",
    "end": "4009760"
  },
  {
    "text": "clamp yeah let me just screenshot I didn't design it by the way you just download that I got it thanks yeah you would you wouldn't download a clamp",
    "start": "4009760",
    "end": "4015680"
  },
  {
    "text": "would you no I probably wouldn't okay well uh yeah so as I was",
    "start": "4015680",
    "end": "4022160"
  },
  {
    "text": "saying Matt Heath thank you very much sir you Tom wiy Matt if people want to find your your videos on on the internet",
    "start": "4022160",
    "end": "4029680"
  },
  {
    "text": "what would they type in your name probably right uh yeah I think so although like I'm now terrified of",
    "start": "4029680",
    "end": "4038119"
  },
  {
    "text": "what comes up you should have checked that mate you should definitely be checking that I Che",
    "start": "4038119",
    "end": "4044240"
  },
  {
    "text": "that every day not really I can believe that I don't really mate uh okay well",
    "start": "4044240",
    "end": "4050960"
  },
  {
    "text": "that say it I tried to do a good ending of the show but instead this happened see you next time thank",
    "start": "4050960",
    "end": "4058160"
  },
  {
    "text": "you thank you for listening to this episode of go time there are a couple awesome community events upcoming that",
    "start": "4058880",
    "end": "4065760"
  },
  {
    "text": "we like to shout out go remotest is on April 26th that's a Sunday check it out",
    "start": "4065760",
    "end": "4071000"
  },
  {
    "text": "at G remote fest.com also so the goget community conference is happening on May",
    "start": "4071000",
    "end": "4076640"
  },
  {
    "text": "19th and 20th the cfp is open and you can learn more at goget community.com",
    "start": "4076640",
    "end": "4082799"
  },
  {
    "text": "I'll add those two URLs to the show notes for easy clickin this episode was",
    "start": "4082799",
    "end": "4088160"
  },
  {
    "text": "hosted by Matt ryer and Jana dogen with special guests Matt Heath from monzo and",
    "start": "4088160",
    "end": "4093480"
  },
  {
    "text": "Tom wilky from graphon Labs it was produced by me Jared Santo and our music is by the mysterious breakmaster",
    "start": "4093480",
    "end": "4099880"
  },
  {
    "text": "cylinder thanks again to our sponsors fley Leno and roll bar that's all for",
    "start": "4099880",
    "end": "4105480"
  },
  {
    "text": "now we'll talk to you next [Music]",
    "start": "4105480",
    "end": "4132798"
  },
  {
    "text": "time",
    "start": "4132799",
    "end": "4135798"
  },
  {
    "text": "[Music]",
    "start": "4138090",
    "end": "4162719"
  },
  {
    "text": "TR",
    "start": "4162719",
    "end": "4165719"
  }
]