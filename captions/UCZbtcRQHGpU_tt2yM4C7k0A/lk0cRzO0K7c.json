[
  {
    "text": "[Music] you're listening to JS party a weekly",
    "start": "3930",
    "end": "9880"
  },
  {
    "text": "celebration of JavaScript and the web find us on the web at JSP party. FM on",
    "start": "9880",
    "end": "16680"
  },
  {
    "text": "the fediverse at JS party at Chang log. social and of course wherever you get",
    "start": "16680",
    "end": "22199"
  },
  {
    "text": "your podcasts just search for JS party you'll find us thanks to our partners at fly launch your app near your users for",
    "start": "22199",
    "end": "30080"
  },
  {
    "text": "Peak Performance fly makes it easy learn more at fly.io okay hey it's party time",
    "start": "30080",
    "end": "37900"
  },
  {
    "text": "[Music] [Applause]",
    "start": "37900",
    "end": "43380"
  },
  {
    "text": "[Applause] [Music] [Applause]",
    "start": "48010",
    "end": "53070"
  },
  {
    "text": "y'all hello JS party people and welcome to another episode of JS party your",
    "start": "54879",
    "end": "61399"
  },
  {
    "text": "favorite my favorite show about JavaScript in the web I kall I'm your host and MC today and I am joined by",
    "start": "61399",
    "end": "68960"
  },
  {
    "text": "three representatives of the emberjs core team we're going to get their take on all the hottest stuff in JavaScript",
    "start": "68960",
    "end": "76400"
  },
  {
    "text": "how is Ember approaching this uh let me introduce first off Chris Manson Chris thanks for joining us hey yeah great to",
    "start": "76400",
    "end": "83720"
  },
  {
    "text": "be here excited to have you on the show uh also another Chris Chris throbb bur hello how are you",
    "start": "83720",
    "end": "90600"
  },
  {
    "text": "yes doing well and finally Ed fauler yes hello glad to be here cool so let's",
    "start": "90600",
    "end": "96600"
  },
  {
    "text": "maybe start um do you guys want to introduce yourselves we can go in the order that I introduced you share a",
    "start": "96600",
    "end": "102759"
  },
  {
    "text": "little bit about your backgrounds and your role on the Ember core team yeah sounds good I have been doing Ember for",
    "start": "102759",
    "end": "110119"
  },
  {
    "text": "essentially is it 12 years now I started in 2011 so that's a long time to be",
    "start": "110119",
    "end": "115560"
  },
  {
    "text": "doing a single fairy Mark I haven't been on the core team for all that time it was uh I think four years ago I joined",
    "start": "115560",
    "end": "122719"
  },
  {
    "text": "the learning team and now I'm on the tooling team helping uh build a thing",
    "start": "122719",
    "end": "128039"
  },
  {
    "text": "called embroider which is the ultimate goal to get ember building with vit but",
    "start": "128039",
    "end": "133560"
  },
  {
    "text": "maybe we'll talk about that a bit later uh I'm Chris and I've been working with Ember I think since 2012",
    "start": "133560",
    "end": "141599"
  },
  {
    "text": "2013 uh roughly around then I got my start just liked it as a a framework",
    "start": "141599",
    "end": "147560"
  },
  {
    "text": "compared to the other options at the time and I was trying to build a bunch of mobile apps and I think a lot of my",
    "start": "147560",
    "end": "153120"
  },
  {
    "text": "early contributions were all in that space of building things optimized for mobile and then over time somehow got",
    "start": "153120",
    "end": "159640"
  },
  {
    "text": "snookered into joining the data team and now I've been on the data team for seven",
    "start": "159640",
    "end": "164879"
  },
  {
    "text": "eight years something like that yeah and hi I'm Ed um I've been like these guys around a long time you we're a community",
    "start": "164879",
    "end": "171200"
  },
  {
    "text": "with a lot of longevity which is part of what's unique and fun about it there's a lot of it's something I've enjoyed a lot",
    "start": "171200",
    "end": "176720"
  },
  {
    "text": "is um as many of us have like gone through multiple M rounds of jobs over the course of that long we're all still",
    "start": "176720",
    "end": "182879"
  },
  {
    "text": "teams working together even though people's day jobs change we've had this like several groups of people that we've",
    "start": "182879",
    "end": "188200"
  },
  {
    "text": "worked with a long time which is really nice to have that continuity in a project I got started because um I was",
    "start": "188200",
    "end": "194400"
  },
  {
    "text": "running a startup I was the only technical person and um building a very ambitious app in the medical record",
    "start": "194400",
    "end": "200720"
  },
  {
    "text": "space and um this is around yeah like 2010 2011 and uh found I you know I",
    "start": "200720",
    "end": "208000"
  },
  {
    "text": "could see as I was trying to build out a pretty complicated app in browsers that I was you know firstly noticing I needed",
    "start": "208000",
    "end": "215799"
  },
  {
    "text": "to build framework kind of things for myself and uh was beginning to grow a framework out of my app and realized",
    "start": "215799",
    "end": "223159"
  },
  {
    "text": "like and nothing out there really did what I wanted it to do at that point which is why I was growing one but",
    "start": "223159",
    "end": "228879"
  },
  {
    "text": "growing your own is really I could tell it was a bad idea right especially as a single technical co-founder so that was",
    "start": "228879",
    "end": "234959"
  },
  {
    "text": "when uh that was around the time emberz project was getting off the ground and uh it was still very new and rough and",
    "start": "234959",
    "end": "241360"
  },
  {
    "text": "full of bugs and stuff because it was brand new but I could I could see that they were trying to build the same thing",
    "start": "241360",
    "end": "246920"
  },
  {
    "text": "I was trying to build so that's how I got involved at first really just as a user but um getting at that at that ARA",
    "start": "246920",
    "end": "253519"
  },
  {
    "text": "of a project just to be a user you become a contributor because you're you're finding bugs you're fixing bugs I",
    "start": "253519",
    "end": "258880"
  },
  {
    "text": "would I would kind of go work on my project for several months and then I would decide to go take an upgrade of",
    "start": "258880",
    "end": "265360"
  },
  {
    "text": "the of Ember and um find a ton of things that broke right cuz it was new and bleeding edge and so I'd go fix a bunch",
    "start": "265360",
    "end": "271840"
  },
  {
    "text": "of things send a bunch of PRS in and then go head down on my app again for six months and so like I I eventually",
    "start": "271840",
    "end": "276960"
  },
  {
    "text": "went to a conference like the first Ember Ember camp San Francisco and I",
    "start": "276960",
    "end": "282840"
  },
  {
    "text": "kind of talked to some people and they're like wait a second you're that guy who like every few months sends us flurry of PRS which we really appreciate",
    "start": "282840",
    "end": "290000"
  },
  {
    "text": "they're great and then you disappear like we found you like you got to come join us and I was like no no way I have",
    "start": "290000",
    "end": "295160"
  },
  {
    "text": "time for that I'm not doing open source I'm trying to run a startup but after a couple iterations of that I realized I was kind of doing that work anyway and",
    "start": "295160",
    "end": "302440"
  },
  {
    "text": "did get sucked in so that's that's the start of it that's fun I think this longevity thing is maybe an interesting",
    "start": "302440",
    "end": "309400"
  },
  {
    "text": "thing to talk about briefly so you mentioned Ember was one of the first of",
    "start": "309400",
    "end": "315199"
  },
  {
    "text": "the sort of modern generation of spa Frameworks if I recall correctly what do",
    "start": "315199",
    "end": "320479"
  },
  {
    "text": "you think has led to it sticking around I think it's what w cat said at the beginning it's stability without",
    "start": "320479",
    "end": "326120"
  },
  {
    "text": "stagnation I think we've had that philosophy all along something times that means that we might take a little",
    "start": "326120",
    "end": "331280"
  },
  {
    "text": "bit longer to adopt something but we are going to constantly evolve constantly adopt what we see as good patterns or go",
    "start": "331280",
    "end": "338000"
  },
  {
    "text": "try to build good patterns if we don't see a pattern existing yeah I you know I",
    "start": "338000",
    "end": "343080"
  },
  {
    "text": "think it comes down to uh part of why I like being in the community is that we found a bunch of people who kind of",
    "start": "343080",
    "end": "348639"
  },
  {
    "text": "agree about the agree about high level Vision about how you should think about software how you should think about",
    "start": "348639",
    "end": "354360"
  },
  {
    "text": "software teams and all of that stuff that meta level stuff about what about",
    "start": "354360",
    "end": "360319"
  },
  {
    "text": "process about philosophy if you agree on that stuff it matters way more than what your exact lines of code say at any",
    "start": "360319",
    "end": "367160"
  },
  {
    "text": "point in time because your exact lines of code like the exact technology at One Moment In Time is a snapshot and like",
    "start": "367160",
    "end": "374479"
  },
  {
    "text": "it's it's all going to be different if you're if you're healthy it's all going to be different two three years down the",
    "start": "374479",
    "end": "380080"
  },
  {
    "text": "the line and it's different than it was two years before so what the constant is actually like it's not the specifics of",
    "start": "380080",
    "end": "386880"
  },
  {
    "text": "the code or the technology it's the it's the philosophy of the people doing it like how do they think about software do they agree do they have the same goals",
    "start": "386880",
    "end": "392919"
  },
  {
    "text": "as you do they make the same tradeoffs right do do you think about it the same so to me I that's like that kind of",
    "start": "392919",
    "end": "399319"
  },
  {
    "text": "durable consensus is a valuable thing when you find it and uh I think I that's what I attribute a lot of the longevity",
    "start": "399319",
    "end": "405160"
  },
  {
    "text": "to I I also think there's a a bit on the technical side where from the beginning",
    "start": "405160",
    "end": "411479"
  },
  {
    "text": "even when it had was extra ugly and extra warts the philosophy has been to",
    "start": "411479",
    "end": "417240"
  },
  {
    "text": "kind of build into where we would like to see the language and ecosystem go and make go make the platform and language",
    "start": "417240",
    "end": "423440"
  },
  {
    "text": "level Investments to improve it over time so you know early class system and Ember get classes in you know early",
    "start": "423440",
    "end": "431680"
  },
  {
    "text": "reactivity system and Ember get signals in I think these are actually you know Common threads that we've repeated over",
    "start": "431680",
    "end": "438720"
  },
  {
    "text": "and over again over the course of of the framework's life yeah well and I feel like y all have often been on The",
    "start": "438720",
    "end": "446319"
  },
  {
    "text": "Cutting Edge of stuff that then gets adopted later so like that stability without stagnation reminds me of where",
    "start": "446319",
    "end": "452800"
  },
  {
    "text": "angular has now ended up down the road after they made some stability missteps and they learned from",
    "start": "452800",
    "end": "458680"
  },
  {
    "text": "it but then they also had that model and can go with it for sure yeah I and no none of us will claim we've never made a",
    "start": "458680",
    "end": "464080"
  },
  {
    "text": "stability misstep either right it's a hard problem and we've gotten a lot better at it over the years but uh for",
    "start": "464080",
    "end": "469720"
  },
  {
    "text": "sure I think there's an interesting point though to add to something that Ed said you know if we if you generate an",
    "start": "469720",
    "end": "475720"
  },
  {
    "text": "ember app and even that you know we have generators it's something that we've always had if you generate an ember app",
    "start": "475720",
    "end": "481680"
  },
  {
    "text": "now look at one two years ago it's very different like how you generate",
    "start": "481680",
    "end": "487479"
  },
  {
    "text": "components how things look it's actually quite different but even though we have these snapshots we don't leave people",
    "start": "487479",
    "end": "494280"
  },
  {
    "text": "behind we put a lot of thought into upgrading Concepts upgrading the way to",
    "start": "494280",
    "end": "500199"
  },
  {
    "text": "think about a Ember app and we also put a lot of work into code mods and",
    "start": "500199",
    "end": "505360"
  },
  {
    "text": "deprecations and linting rules and all these sort of things to kind of know the community as a whole forward and this",
    "start": "505360",
    "end": "513360"
  },
  {
    "text": "concept of not leaving people behind is particularly evident in the embroider",
    "start": "513360",
    "end": "519279"
  },
  {
    "text": "stuff that I was mentioning before we have a very very long support Matrix",
    "start": "519279",
    "end": "525320"
  },
  {
    "text": "like we go back lots of LTS versions again another concept to help with",
    "start": "525320",
    "end": "530640"
  },
  {
    "text": "stability to versions that were released when was 328 released 3 years ago like",
    "start": "530640",
    "end": "537920"
  },
  {
    "text": "it was a long time ago that's an error in JavaScript exactly like you could",
    "start": "537920",
    "end": "543440"
  },
  {
    "text": "rewrite your app twice with something like that but we still support that because we know we want people who built",
    "start": "543440",
    "end": "550839"
  },
  {
    "text": "their app got stuck on 328 for whatever reason they we want them to use the new",
    "start": "550839",
    "end": "555959"
  },
  {
    "text": "stuff and get off the old way of doing things and start using modern tooling and not have to do what Ed did of write",
    "start": "555959",
    "end": "562640"
  },
  {
    "text": "a whole bunch of poll request to make it work yeah exactly that was all pre1 stuff yeah for sure yeah well let's dive",
    "start": "562640",
    "end": "568760"
  },
  {
    "text": "into some of the specifics then maybe so one thing that you all mentioned was reactivity and I",
    "start": "568760",
    "end": "575320"
  },
  {
    "text": "you sort of mentioned that you were looking where you wanted things to go and now things are going can you share a",
    "start": "575320",
    "end": "580600"
  },
  {
    "text": "little bit about ember's take on reactivity what does that look like and how does it compare to what's what else",
    "start": "580600",
    "end": "586040"
  },
  {
    "text": "is out there in the ecosystem sure yeah um so like as a at a very high level",
    "start": "586040",
    "end": "591720"
  },
  {
    "text": "right now I I would guess I would describe ember's reactivity system as a kind of it prioritizes allowing you to",
    "start": "591720",
    "end": "599680"
  },
  {
    "text": "do all like normal idiomatic JavaScript paradigms for your data reading and writing so like as an example try to say",
    "start": "599680",
    "end": "607360"
  },
  {
    "text": "there's any piece of state that the reactivity system is going to react to so if it's changed it's going to necessarily schedule the right kind of",
    "start": "607360",
    "end": "612800"
  },
  {
    "text": "revalidations re renders down the timeline and um track state is just like all normal JavaScript State you don't",
    "start": "612800",
    "end": "618560"
  },
  {
    "text": "have to go through a special API to read it or write it it's a regular piece of State in JavaScript is a regular",
    "start": "618560",
    "end": "624279"
  },
  {
    "text": "property and an object and all you've done is annotate it with the decorator to say this needs to be tracked and it's",
    "start": "624279",
    "end": "629560"
  },
  {
    "text": "supposed to behave exactly 100% the same API whether it was tracked or not the track is just put opposite into being",
    "start": "629560",
    "end": "635279"
  },
  {
    "text": "observed right so that is on that is a really nice that's a nice property of the system there's different trade-offs",
    "start": "635279",
    "end": "641440"
  },
  {
    "text": "you can make with that kind of choice but with that with that trade-off made it means you are writing idiomatic",
    "start": "641440",
    "end": "647839"
  },
  {
    "text": "JavaScript for how you read and write the state and the implementation is doing so the the the burden on the",
    "start": "647839",
    "end": "653360"
  },
  {
    "text": "programmer is is to know what the roots of state are like where do you actually store the roots of State as opposed to",
    "start": "653360",
    "end": "658399"
  },
  {
    "text": "the derived state right because you want to annotate those things so that when this thing changes that's what causes all the changes Downstream and your",
    "start": "658399",
    "end": "665480"
  },
  {
    "text": "derive stay all Downstream and that doesn't have to know anything about tracking right all no matter how deep your stack is when you call some",
    "start": "665480",
    "end": "672639"
  },
  {
    "text": "function that calls some function that accesses a getter that calls another function that eventually hits track state everything down the line is still",
    "start": "672639",
    "end": "678920"
  },
  {
    "text": "going to be fine right it all composes out with JavaScript so that's a high level description of what it is and how",
    "start": "678920",
    "end": "684120"
  },
  {
    "text": "it works now and so like that's the set of affordances we have U the the relation to signals is just like like",
    "start": "684120",
    "end": "690639"
  },
  {
    "text": "signals signals is nice because it's trying to codify patterns that I think Ember but also many other Frameworks",
    "start": "690639",
    "end": "696720"
  },
  {
    "text": "have have begun to coales around and you know it particularly helps with the interoperability issues which I really",
    "start": "696720",
    "end": "703000"
  },
  {
    "text": "think reactivity is the hard piece of interoperability with all of the all of those across the JS ecosystem things",
    "start": "703000",
    "end": "709720"
  },
  {
    "text": "rendering system interoperability is not that hard like you can usually throw it together in a basic version very easily",
    "start": "709720",
    "end": "715920"
  },
  {
    "text": "to render a component from you know spelt and Ember or reac in view or whatever like getting the render to",
    "start": "715920",
    "end": "721600"
  },
  {
    "text": "happen is not that hard getting the reactivity to actually run in a way that's optimal and like keeps a whole app running is the harder piece so um",
    "start": "721600",
    "end": "729639"
  },
  {
    "text": "like signals is is cool for that reason and so like it doesn't it wouldn't affect anything about um like what an",
    "start": "729639",
    "end": "736199"
  },
  {
    "text": "ember developer or a view developer would say in their code but the framework authors would be using signals",
    "start": "736199",
    "end": "741880"
  },
  {
    "text": "underneath to make sure they interoperate yeah I I I think to put it in some terms that you know broader ecosystem will probably identify a bit",
    "start": "741880",
    "end": "749519"
  },
  {
    "text": "tract is signals for all intensive purposes like from a from a conceptual Paradigm it it tract and signals are",
    "start": "749519",
    "end": "755760"
  },
  {
    "text": "roughly the same from the ergonomics perspective uh our approach to it has",
    "start": "755760",
    "end": "762000"
  },
  {
    "text": "under the hood been very similar to how you see the implementations work in in in other ecosystems but the DX of how",
    "start": "762000",
    "end": "769880"
  },
  {
    "text": "the average app developer uses it is is different and that's because if you're",
    "start": "769880",
    "end": "775199"
  },
  {
    "text": "using signals outside of the Ember ecosystem you need something to store",
    "start": "775199",
    "end": "780760"
  },
  {
    "text": "the signal that you interact with that has is that little box that you peek into and pull out of to get the value",
    "start": "780760",
    "end": "786760"
  },
  {
    "text": "right that little reactivity wrapper well in Ember we didn't decide that",
    "start": "786760",
    "end": "792720"
  },
  {
    "text": "classes were bad in fact we still quite strongly feel that classes are good but they need to be used appropriately like",
    "start": "792720",
    "end": "798720"
  },
  {
    "text": "you don't want to see a lot of inheritance you don't want to see a lot of subclassing you know we don't really",
    "start": "798720",
    "end": "803920"
  },
  {
    "text": "like mixing patterns and we're trying to push people away from all those but fundamentally class is still just a",
    "start": "803920",
    "end": "810160"
  },
  {
    "text": "state container it's a very useful State container and when you have that state container it's very easy to go and say",
    "start": "810160",
    "end": "816480"
  },
  {
    "text": "well I have a couple of fields on this on this state container and and now I want those particular fields to be",
    "start": "816480",
    "end": "821959"
  },
  {
    "text": "reactive I'm just going to put a decorator right here just is this is a reactive field now so that's what tra is",
    "start": "821959",
    "end": "827279"
  },
  {
    "text": "tra is a decorator um just goes on any field and says you're reactive I think that actually offers really elegant DX",
    "start": "827279",
    "end": "835240"
  },
  {
    "text": "because to Ed's point of it just being normal idiomatic JavaScript it doesn't feel like you're changing the way that",
    "start": "835240",
    "end": "841240"
  },
  {
    "text": "you write your code you wrote your code the same way and then you decided something need to be reactive and you",
    "start": "841240",
    "end": "846560"
  },
  {
    "text": "just say Okay this second is reactive now right and you have a place to stash all that state which is your class and",
    "start": "846560",
    "end": "852720"
  },
  {
    "text": "you can just use observers on the properties to do the hooks or how does that end up working yeah get you mean",
    "start": "852720",
    "end": "859199"
  },
  {
    "text": "Getters right but yes yeah like under the hood yes so you would see you know Ely a uh like if you're familiar with",
    "start": "859199",
    "end": "865959"
  },
  {
    "text": "the accessor decorator part of the spec that is now in stage three it's a good",
    "start": "865959",
    "end": "871000"
  },
  {
    "text": "example of the the space of things you need at the low level to implement tract yes just to give you a bit of History uh",
    "start": "871000",
    "end": "877279"
  },
  {
    "text": "kall the reason why you saw everybody in the room winz when you said Observer is because we've been in this for so long",
    "start": "877279",
    "end": "883560"
  },
  {
    "text": "there was an ember Concept in the old class thing called observers where no",
    "start": "883560",
    "end": "889519"
  },
  {
    "text": "nobody would be getting that value they'd just be doing work in response to",
    "start": "889519",
    "end": "894959"
  },
  {
    "text": "tract behavior and it was very hairy and it made really awful like spaghetti code",
    "start": "894959",
    "end": "902839"
  },
  {
    "text": "and we've moved away from it and it's a concept that grew in Ember and then has",
    "start": "902839",
    "end": "909000"
  },
  {
    "text": "had time to die away and we've got other things replacing it but it's it's essentially a bad word in an ember yeah",
    "start": "909000",
    "end": "915920"
  },
  {
    "text": "well I I misspoke because it wasn't precise either but yeah I managed to to step into into that pile you you did but",
    "start": "915920",
    "end": "924800"
  },
  {
    "text": "I think there's an interesting point there around where a lot of folks in or ential still to the Ember ecosystem have",
    "start": "924800",
    "end": "932120"
  },
  {
    "text": "a difference of philosophy when it comes to the tc39 signals proposal and what's",
    "start": "932120",
    "end": "937240"
  },
  {
    "text": "needed of it than many of the other ecosystems do like you see some push from other ecosystems to add effects",
    "start": "937240",
    "end": "943440"
  },
  {
    "text": "into the proposal for instance most of the people in the Ember ecosystem have zero interest in adding",
    "start": "943440",
    "end": "950560"
  },
  {
    "text": "effects to the ecosystem because they're roughly speaking observers and we don't",
    "start": "950560",
    "end": "956040"
  },
  {
    "text": "really want to go back that way I think that it opens up a really interesting set of conversations I've had some",
    "start": "956040",
    "end": "962319"
  },
  {
    "text": "really great conversations with folks who do want effects around you know thirdparty interop and and and syncing",
    "start": "962319",
    "end": "968880"
  },
  {
    "text": "data into external uh sources that are non-reactive using using effects but",
    "start": "968880",
    "end": "974759"
  },
  {
    "text": "when it comes down to the general rendering Paradigm we have a heavy",
    "start": "974759",
    "end": "979920"
  },
  {
    "text": "preference for everything being derived uh and so you don't need when you're in this derived Paradigm you just don't",
    "start": "979920",
    "end": "985680"
  },
  {
    "text": "don't need effects so I think I think that's if you want to dive in more there we can well it gets a little bit to so",
    "start": "985680",
    "end": "993720"
  },
  {
    "text": "when you have everything being derived it lets you in some ways think about things more declaratively and you just",
    "start": "993720",
    "end": "999920"
  },
  {
    "text": "kind of like lay these things out over time whereas effects are fundamentally an imperative idea of like go and do",
    "start": "999920",
    "end": "1006399"
  },
  {
    "text": "this thing now exactly and that that is really one of the like it's a really key skill in all all programming but it",
    "start": "1006399",
    "end": "1012240"
  },
  {
    "text": "comes up a lot in JavaScript and rendering Frameworks people very often instinctively want when you're looking",
    "start": "1012240",
    "end": "1019720"
  },
  {
    "text": "at one thing in isolation and you're just like when that changes I want this thing to happen you're thinking imperatively and so people reach for an",
    "start": "1019720",
    "end": "1025798"
  },
  {
    "text": "imperative tool and ask for an imperative tool but that has bad bad scaling properties when apps get big and",
    "start": "1025799",
    "end": "1032000"
  },
  {
    "text": "teams get big right and so that's where it's you have to really sometimes there's there's a learning process where",
    "start": "1032000",
    "end": "1037640"
  },
  {
    "text": "you want to help people help help newer teammates or help new people in in a framework you system like pause and ask",
    "start": "1037640",
    "end": "1044600"
  },
  {
    "text": "yourself why you want and it is natural to reach for an imperative tool but a lot of times you shouldn't right and there's a few places where you need it",
    "start": "1044600",
    "end": "1051039"
  },
  {
    "text": "but you often don't and um and that this is a perfect example of that right so you know at a at a global scale I think",
    "start": "1051039",
    "end": "1057320"
  },
  {
    "text": "there's a really clear way to see why imperative patterns have problems it's basically like you really want to be",
    "start": "1057320",
    "end": "1064400"
  },
  {
    "text": "able to work in the local right you're working on one feature you want to think about your one feature you don't want to have to know about all the possible",
    "start": "1064400",
    "end": "1070760"
  },
  {
    "text": "Paths of data flow going in and out of that around the entire application which could be really big and um you know by",
    "start": "1070760",
    "end": "1077200"
  },
  {
    "text": "splitting like effects or like observability and derive things eventally splitting what what is my data",
    "start": "1077200",
    "end": "1083320"
  },
  {
    "text": "that I get in and what are my actions that go out if you kind of can BCT that whole space into two kinds of things",
    "start": "1083320",
    "end": "1090159"
  },
  {
    "text": "like in Ember we would talk about data coming down to your component and actions going up out of your",
    "start": "1090159",
    "end": "1095400"
  },
  {
    "text": "component like to the computer those are kind of the same it doesn't really matter right whether you're observing a",
    "start": "1095400",
    "end": "1101360"
  },
  {
    "text": "change or you're running a function but in our heads as programmers as long as we have two categories of thing we can",
    "start": "1101360",
    "end": "1107919"
  },
  {
    "text": "have rules now like local rules as long as data changes never cause actions and action but actions can cause data",
    "start": "1107919",
    "end": "1113520"
  },
  {
    "text": "changes they can't Loop anymore you you kill the cycle possibility right you can like write a little mathematical proof",
    "start": "1113520",
    "end": "1119000"
  },
  {
    "text": "that you can't accidentally make a global cycle as long as if if if you cut off one of those possibilities right an",
    "start": "1119000",
    "end": "1125679"
  },
  {
    "text": "action can change data but data changing never fires an action so therefore you will never Loop right and uh that like",
    "start": "1125679",
    "end": "1132440"
  },
  {
    "text": "that kind of thinking in the small and making sure that the global thing actually works out good is something",
    "start": "1132440",
    "end": "1137799"
  },
  {
    "text": "that like an aptive developer should almost never have to reason about if if the Frameworks have done it well but",
    "start": "1137799",
    "end": "1143520"
  },
  {
    "text": "it's the stuff we have to stress about as like language contributors or framework authors yeah so an idea uh not",
    "start": "1143520",
    "end": "1150360"
  },
  {
    "text": "to like reer us but maybe to throw on your pile we were talk when we when uh Chris brought up well Chris thurn",
    "start": "1150360",
    "end": "1156960"
  },
  {
    "text": "brought up for um one of our longevity things about standardizing things into the language I think there's something",
    "start": "1156960",
    "end": "1162360"
  },
  {
    "text": "to that it gets back to what I said about having the same kind of philosophy about what a framework is for because we",
    "start": "1162360",
    "end": "1168120"
  },
  {
    "text": "really see see what we're doing as framework authors as language extension as building a language and you like",
    "start": "1168120",
    "end": "1176880"
  },
  {
    "text": "everything you're doing when you're making a framework or even like a very sophisticated Library you are really",
    "start": "1176880",
    "end": "1183360"
  },
  {
    "text": "crafting a new language right or at least a new dialect of a language and if you think like a language designer you're going to make different choices",
    "start": "1183360",
    "end": "1189600"
  },
  {
    "text": "than somebody who's just thinking as an implementor of like I want this subsystem of my app to be shared with other people",
    "start": "1189600",
    "end": "1195980"
  },
  {
    "text": "[Music]",
    "start": "1195980",
    "end": "1203159"
  },
  {
    "text": "well friends I have something special for you because I made a new friend Tamar Ben Shar senior engineer manager",
    "start": "1203159",
    "end": "1211720"
  },
  {
    "text": "over at reto okay so our sponsor for this episode is neon and as you know we",
    "start": "1211720",
    "end": "1218720"
  },
  {
    "text": "use neon but we don't use neon like retool uses neon retool needed to stand",
    "start": "1218720",
    "end": "1225720"
  },
  {
    "text": "up a service called retool DB Tark explain it better in this conversation",
    "start": "1225720",
    "end": "1231400"
  },
  {
    "text": "but retool DB is powered by Neon okay they have a service called fleets it is",
    "start": "1231400",
    "end": "1239080"
  },
  {
    "text": "a service that manages Enterprise level fleets of postgress serverless managed",
    "start": "1239080",
    "end": "1246679"
  },
  {
    "text": "fleets of postgress and retool DB by retool is powered by Neon fleets okay",
    "start": "1246679",
    "end": "1254600"
  },
  {
    "text": "Tamar take us into how retool is using neon for retool DB at large so one big",
    "start": "1254600",
    "end": "1261400"
  },
  {
    "text": "problem we had with retool we wanted users to have value production value as soon as possible and connecting to a",
    "start": "1261400",
    "end": "1266919"
  },
  {
    "text": "prod DB and a new tool is not something that people will do lightly but they're much more likely to then dump a CSV into",
    "start": "1266919",
    "end": "1272960"
  },
  {
    "text": "rle and so because of that we said okay well what if we just you know host databases on behalf of users and then",
    "start": "1272960",
    "end": "1278640"
  },
  {
    "text": "they can get spin up really fast and we really saw that take off problem we had is we didn't have a big team we couldn't",
    "start": "1278640",
    "end": "1284120"
  },
  {
    "text": "spit up a new team to support this feature so what do we do and so we were looking okay what are the options out there and you know we found neon neon is",
    "start": "1284120",
    "end": "1290600"
  },
  {
    "text": "you know cist platform manages po CBS and so like okay that's interesting let's kind of look in further what's",
    "start": "1290600",
    "end": "1296440"
  },
  {
    "text": "kind of really unique about them is you really only pay for what you use which is super exactly the use case that we",
    "start": "1296440",
    "end": "1301760"
  },
  {
    "text": "have right because we want to provide this to everybody not everyone uses it not everyone uses it all the time and so like if we had to like you know us",
    "start": "1301760",
    "end": "1307880"
  },
  {
    "text": "manage a bunch of you know Rd Essences for example right like basically when we",
    "start": "1307880",
    "end": "1312960"
  },
  {
    "text": "you know whole infer team you know to support like figure out okay when are they on how do we do uh try to have some kind of Grey algorithm to get all theas",
    "start": "1312960",
    "end": "1320880"
  },
  {
    "text": "in in the fewest amendments as possible Right This is now a hard problem that's not kind of a core value right a core",
    "start": "1320880",
    "end": "1326360"
  },
  {
    "text": "value is kind of providing that database and we don't want kind of going to we you know we're not like an INF team we",
    "start": "1326360",
    "end": "1331760"
  },
  {
    "text": "don't want to kind of get get in that game I think what's really great is that okay well well one big kind of risk when you think of going in third party is is",
    "start": "1331760",
    "end": "1338440"
  },
  {
    "text": "a the cost we G this free to all users we have 300,000 you know databases right now right like we can't especially",
    "start": "1338440",
    "end": "1345679"
  },
  {
    "text": "especially as we were um rolling this out to begin with with right we like didn't know for sure how we would how",
    "start": "1345679",
    "end": "1351600"
  },
  {
    "text": "people would respond right and you know we can't all of a sudden have like you know a couple couple million dollars you",
    "start": "1351600",
    "end": "1356840"
  },
  {
    "text": "know the bank um for this without kind of see kind of the the the activation that it has on it users so it's kind of",
    "start": "1356840",
    "end": "1363200"
  },
  {
    "text": "obvious but what was the appeal of neon what was really appealing to Neon it spins out to zero and so because of that",
    "start": "1363200",
    "end": "1369799"
  },
  {
    "text": "right it really kind of reduces the cost and so really it's really exactly only what we spend and there's really actually another a way to actually spend",
    "start": "1369799",
    "end": "1376039"
  },
  {
    "text": "less money even if we hosing it ourselves you like removing all like the people cost right because let's say we",
    "start": "1376039",
    "end": "1382240"
  },
  {
    "text": "like an you know RDS we have to know figure out ourselves right basically what NE is doing right how to bucket all their inces together Hadad bu they they",
    "start": "1382240",
    "end": "1388200"
  },
  {
    "text": "used to just to to to have as few Ines as possible Right to to to scale up and down depending on you know what's going",
    "start": "1388200",
    "end": "1394679"
  },
  {
    "text": "on and now we sort of don't have to worry about any of that part but like kind of the cost benefit and so really kind of was out you know it's a win-win",
    "start": "1394679",
    "end": "1401080"
  },
  {
    "text": "okay win-win always a good thing I like win-win wins but okay fine win-win if it",
    "start": "1401080",
    "end": "1406559"
  },
  {
    "text": "were not for neon and they offering of fleets of postgress and how they're essentially your serverless postgress",
    "start": "1406559",
    "end": "1413440"
  },
  {
    "text": "platform where would rol be at with reto DB without neon oh I mean we would have",
    "start": "1413440",
    "end": "1420279"
  },
  {
    "text": "to have a you know at least a poly staff team Theon CER and would be a challenge you know we think we have to spend a lot",
    "start": "1420279",
    "end": "1425760"
  },
  {
    "text": "of time on you know making it sustainable and that's you know a whole you know other sets of concerns that are",
    "start": "1425760",
    "end": "1431080"
  },
  {
    "text": "we we don't ever think about first of all like you know it's a team of Engineers right which not free so everyone salaries right so let's say",
    "start": "1431080",
    "end": "1437559"
  },
  {
    "text": "probably a team that's say you know eight to 10 people you know easily only focus on this and then saying okay well like does the revenue of Ral DB offset",
    "start": "1437559",
    "end": "1444360"
  },
  {
    "text": "that the cost even of just the engineers you know that's step one but I think even before then right like you'd have to set up this team before you even had",
    "start": "1444360",
    "end": "1451440"
  },
  {
    "text": "the product you know databases and you know having them the way the nean has them right like suspend to zero having",
    "start": "1451440",
    "end": "1456840"
  },
  {
    "text": "you know warm spares that they're you know ready um instantaneously when you like log on to retool those things are",
    "start": "1456840",
    "end": "1462279"
  },
  {
    "text": "un free and even if we tried to do like okay like at MVP right there kind of basic functionality that needs to exist",
    "start": "1462279",
    "end": "1468399"
  },
  {
    "text": "that we all have to start from scratch and that would be a huge commitment to this and I think we would have completely it would it would come out",
    "start": "1468399",
    "end": "1473919"
  },
  {
    "text": "like a year later because we'd have to do a lot more validation to know that it would have been worth it right before we started here we were able to get quickly",
    "start": "1473919",
    "end": "1480200"
  },
  {
    "text": "try it out see that it was effective and then grow it from there because the cost was very low and that really gave us a",
    "start": "1480200",
    "end": "1485840"
  },
  {
    "text": "lot of flexibility of also testing out different different features and different flavors of it okay so retto DB",
    "start": "1485840",
    "end": "1491080"
  },
  {
    "text": "is fully powered by backed by managed by neon neon fleets neon te SL Enterprise",
    "start": "1491080",
    "end": "1499880"
  },
  {
    "text": "learn more we love neon here at change law we use neon for a postest database",
    "start": "1499880",
    "end": "1506520"
  },
  {
    "text": "we enjoy every single feature that Tamar mentioned for retto DB but we use it at",
    "start": "1506520",
    "end": "1512480"
  },
  {
    "text": "a small scale a single database for our application they use it at scale one",
    "start": "1512480",
    "end": "1520440"
  },
  {
    "text": "single engineer propped it up manages it that's insane they would have never been",
    "start": "1520440",
    "end": "1525480"
  },
  {
    "text": "able to do this without neon retool DB would have cost more and may not exist",
    "start": "1525480",
    "end": "1532000"
  },
  {
    "text": "without neon okay go to neon.pdf",
    "start": "1532000",
    "end": "1537080"
  },
  {
    "text": "[Music]",
    "start": "1541960",
    "end": "1547619"
  },
  {
    "text": "[Music] something that I think Chris Manson is in your domain around embroider because",
    "start": "1556320",
    "end": "1561960"
  },
  {
    "text": "I think one of the powerful things about owning your own build system and your",
    "start": "1561960",
    "end": "1568240"
  },
  {
    "text": "build step is that you can create parts of that language that maybe are not",
    "start": "1568240",
    "end": "1575240"
  },
  {
    "text": "don't exist in the underlying language um and a very common example people are",
    "start": "1575240",
    "end": "1580360"
  },
  {
    "text": "very familiar with right now is jsx jsx is a domain specific language for creating HTML from JavaScript and it was",
    "start": "1580360",
    "end": "1588880"
  },
  {
    "text": "it is not in and of itself JavaScript it is syntactic sugar they love to say oh",
    "start": "1588880",
    "end": "1594679"
  },
  {
    "text": "it's really just pure JavaScript underneath it it is semantically Javascript but token wise it is not",
    "start": "1594679",
    "end": "1599840"
  },
  {
    "text": "JavaScript and that's fine because we have access to a build step we can say okay like have a compilation step that",
    "start": "1599840",
    "end": "1605159"
  },
  {
    "text": "compiles this to JavaScript are yall is that part of what you do with embroider",
    "start": "1605159",
    "end": "1610240"
  },
  {
    "text": "like are you extending the JavaScript language to have Ember specific pieces and how does that end up working so I I",
    "start": "1610240",
    "end": "1618960"
  },
  {
    "text": "want to just correct the record on one particular thing yes okay I'm only really here to talk about embroider",
    "start": "1618960",
    "end": "1625360"
  },
  {
    "text": "stuff but Ed actually invented embroider so he knows more about embroider than I",
    "start": "1625360",
    "end": "1630760"
  },
  {
    "text": "do it just happens to be my day job at the moment cuz I'm have the very fortunate opportunity to work on a thing",
    "start": "1630760",
    "end": "1638399"
  },
  {
    "text": "called the embroider initiative so I get to do it all day long every day which is very cool and I have thoughts but I",
    "start": "1638399",
    "end": "1644200"
  },
  {
    "text": "don't work on embroidery well this is not close to anyone but I did want to throw it to Chris because that was his",
    "start": "1644200",
    "end": "1650080"
  },
  {
    "text": "sort of day job specialty right now I'll I'll give you my perspective and then Ed can correct the record once I get",
    "start": "1650080",
    "end": "1655200"
  },
  {
    "text": "something wrong but the way that I see embroider is that actually we're not",
    "start": "1655200",
    "end": "1660399"
  },
  {
    "text": "necessarily owning our own build step here like the the main thrust of everything that we've been doing",
    "start": "1660399",
    "end": "1665760"
  },
  {
    "text": "recently is to try and get ember working with vit cuz vit is the new hotness",
    "start": "1665760",
    "end": "1671399"
  },
  {
    "text": "everything has to work with v and it gives you a certain amount of hype to be able to say oh look Ember works with vet",
    "start": "1671399",
    "end": "1677880"
  },
  {
    "text": "now but the work that we're doing in embroider is not going from you know",
    "start": "1677880",
    "end": "1684159"
  },
  {
    "text": "characters in your editor all the way to the browser it's converting what we call",
    "start": "1684159",
    "end": "1690080"
  },
  {
    "text": "Ember isms so the things that are only exist in the Ember ecosystem to",
    "start": "1690080",
    "end": "1696039"
  },
  {
    "text": "essentially standards but we only need to go as far as what V can understand so",
    "start": "1696039",
    "end": "1703279"
  },
  {
    "text": "the best example and you're talking about jsx we have a template format in m",
    "start": "1703279",
    "end": "1708440"
  },
  {
    "text": "the best example recently has been Ed's work on a thing called content tag so we",
    "start": "1708440",
    "end": "1715559"
  },
  {
    "text": "have an RFC process in Ember and we Ed wrote this RFC that describes how",
    "start": "1715559",
    "end": "1722519"
  },
  {
    "text": "to essentially just put what looks like HTML inside somewhere in JavaScript but",
    "start": "1722519",
    "end": "1730360"
  },
  {
    "text": "the thing I like the most about it is it wasn't specifically worded for Ember it",
    "start": "1730360",
    "end": "1735600"
  },
  {
    "text": "was worded as if that RFC could be copy and pasted and sent straight to",
    "start": "1735600",
    "end": "1741440"
  },
  {
    "text": "tc39 because and that's why it's called content tag and not template tag We call we use the template version of it which",
    "start": "1741440",
    "end": "1748720"
  },
  {
    "text": "is the specific implementation of the generic idea that you can convert a bit",
    "start": "1748720",
    "end": "1755600"
  },
  {
    "text": "of domain specific language into something else that works inside the context of a",
    "start": "1755600",
    "end": "1762279"
  },
  {
    "text": "JavaScript class or otherwise yeah it is one of the things I'm really excited about where I'm like is again Ember",
    "start": "1762279",
    "end": "1769360"
  },
  {
    "text": "coming in with an idea that I would love love to see brought into the ecosystem",
    "start": "1769360",
    "end": "1774519"
  },
  {
    "text": "into really into the language as a whole I've started a few conversations with different players around that because I",
    "start": "1774519",
    "end": "1781519"
  },
  {
    "text": "I think there's a ton of utility there and my love for it is actually not even from the uh Ember side of things it's",
    "start": "1781519",
    "end": "1788320"
  },
  {
    "text": "from the data side of things I think you know graphql tooling showed us that hey",
    "start": "1788320",
    "end": "1794039"
  },
  {
    "text": "having nice syntactical language Ed embedded straight into your code with",
    "start": "1794039",
    "end": "1800039"
  },
  {
    "text": "you know syntax highlighting autocomplete linting all that is nice how do you actually get that language",
    "start": "1800039",
    "end": "1806600"
  },
  {
    "text": "into your JavaScript in a fully supported way I think content tag is actually a nicer approach to that than",
    "start": "1806600",
    "end": "1812760"
  },
  {
    "text": "some of the uh back tick approaches we've we've used uh to this point and",
    "start": "1812760",
    "end": "1818960"
  },
  {
    "text": "I've been developing a proposal within warp drive which for this conversation",
    "start": "1818960",
    "end": "1824640"
  },
  {
    "text": "maybe it's easier to keep it as Ember data but we're rebranding to warp drive as we go Universal for for all",
    "start": "1824640",
    "end": "1831840"
  },
  {
    "text": "Frameworks uh but for I have a proposal I've been drafting for that that essentially is content tag but specific",
    "start": "1831840",
    "end": "1839360"
  },
  {
    "text": "for how do you write a query against an arbitrary rest endpoint in a way that's",
    "start": "1839360",
    "end": "1845440"
  },
  {
    "text": "expressive where if we had a spec for your endpoint we could validate it against that to give you that type end",
    "start": "1845440",
    "end": "1851640"
  },
  {
    "text": "to end type completion and end to-end robustness that we like out of ideas like trpc and we like out of ideas like",
    "start": "1851640",
    "end": "1859240"
  },
  {
    "text": "cql but for the rest of us for everybody else that just has an arbitrary rest API they want to hit yeah I can give like a",
    "start": "1859240",
    "end": "1866279"
  },
  {
    "text": "little more a little more filling in a little more what people are describing for Content tag right think of it as like would it would be it's essentially",
    "start": "1866279",
    "end": "1872679"
  },
  {
    "text": "The Proposal that what if JavaScript had the ability to have you know little little blocks of other arbitary",
    "start": "1872679",
    "end": "1878519"
  },
  {
    "text": "languages embedded in a nice way where you have nice tooling around it and nice um a nice place for whatever whatever",
    "start": "1878519",
    "end": "1885480"
  },
  {
    "text": "DSL you're embedding that could be you're putting that could just be a nice place to put some CSS in your JavaScript it could be a nice place to put a",
    "start": "1885480",
    "end": "1891440"
  },
  {
    "text": "templating language it could be a graphql query you know whichever those are it is at like at a very first glance",
    "start": "1891440",
    "end": "1898480"
  },
  {
    "text": "you might look at it and say like smells jss is but it's a very different semantics it's not um it's not",
    "start": "1898480",
    "end": "1904440"
  },
  {
    "text": "everywhere in the language there's certain places and there's and it's deliberately keeping um like your inner",
    "start": "1904440",
    "end": "1910240"
  },
  {
    "text": "language and the the JavaScript having a try to have a firm boundary between them they're not just like it's it's not",
    "start": "1910240",
    "end": "1916679"
  },
  {
    "text": "arbitrary control flow in these places the same way the jsx would be so it's basically trying to give you um a sweet",
    "start": "1916679",
    "end": "1922919"
  },
  {
    "text": "spot that we don't get without it and we did we did um debate heavily within",
    "start": "1922919",
    "end": "1928360"
  },
  {
    "text": "within the design process and within the community about the the value of like you it's a big step to decide to go and",
    "start": "1928360",
    "end": "1934440"
  },
  {
    "text": "and do a syntactic extension right it's there's a lot of tooling required you know you have you had to go on a quest",
    "start": "1934440",
    "end": "1940000"
  },
  {
    "text": "to get enough projects using the extension that GitHub would have a high enough count so that we could get the syntax highlighter into GitHub for the",
    "start": "1940000",
    "end": "1946240"
  },
  {
    "text": "new file EXT right like there's a lot of steps when you go and extend the syntax so it's not something to do lightly it",
    "start": "1946240",
    "end": "1951639"
  },
  {
    "text": "is something to do thinking like a language designer hoping to get it into the language or at least make it popular",
    "start": "1951639",
    "end": "1956760"
  },
  {
    "text": "enough like a jsx which you know again not in the language but popular enough that tools feel like they have to support it so like we just we struggled",
    "start": "1956760",
    "end": "1963919"
  },
  {
    "text": "hard whether we wanted it but the the trade-off of what you get for it is like a sweet spot where you really can use it",
    "start": "1963919",
    "end": "1971320"
  },
  {
    "text": "as arbitrary you know arbitrary Expressions composing all throughout your JavaScript you get the niceties of",
    "start": "1971320",
    "end": "1977279"
  },
  {
    "text": "like a single file component format but then you can still put it wherever right you can still have many of them in a file you can um you have the niceties of",
    "start": "1977279",
    "end": "1984600"
  },
  {
    "text": "single file components in that like you've got a templating language that's fine-tuned for your rendering alongside",
    "start": "1984600",
    "end": "1990639"
  },
  {
    "text": "your JavaScript in a very tight bundle but it's still embeddable in arbitary JavaScript that's the that's really why",
    "start": "1990639",
    "end": "1995679"
  },
  {
    "text": "we thought it was worth doing that syntactic extension so like that's an answer part an answer to your question about what are we getting for extending",
    "start": "1995679",
    "end": "2001480"
  },
  {
    "text": "the language and you you brought it up in the context of owning your own build system so that's where there's that's",
    "start": "2001480",
    "end": "2007000"
  },
  {
    "text": "where we can kind of set set the description of what is embroider and what are we what is embro trying to do with our build system because the",
    "start": "2007000",
    "end": "2013159"
  },
  {
    "text": "question question that came up in our intros before we U when you were sending questions before the call was like why",
    "start": "2013159",
    "end": "2018760"
  },
  {
    "text": "have a your own build system the answer is really we we have one because it was a radical the thing to do to have a",
    "start": "2018760",
    "end": "2024600"
  },
  {
    "text": "build system when we made ours people thought the idea of a build system was absurd and um we said no like we have we",
    "start": "2024600",
    "end": "2032720"
  },
  {
    "text": "can do this it's going to give you a lot of power you didn't otherwise have and we did it and like it was quite radical",
    "start": "2032720",
    "end": "2038399"
  },
  {
    "text": "to as a community to say like even for us there was a time when it was like an optional thing to you have the build",
    "start": "2038399",
    "end": "2044120"
  },
  {
    "text": "system but eventually you said like look no there's just too many features that need it it is now mandatory everybody's got a build system and um that served us",
    "start": "2044120",
    "end": "2051560"
  },
  {
    "text": "well for a long long time and to some extent that build system is the victim of its own success because it it was",
    "start": "2051560",
    "end": "2057960"
  },
  {
    "text": "early and it was heavily it's been heavily used and it is extremely it has extremely powerful affordances for",
    "start": "2057960",
    "end": "2064440"
  },
  {
    "text": "thirdparty packages to come in and do sophisticated things for your app so people really loved that you could write",
    "start": "2064440",
    "end": "2070679"
  },
  {
    "text": "Ember add-ons that would like with with a single like install the package and it sets up everything for you and it's all",
    "start": "2070679",
    "end": "2076679"
  },
  {
    "text": "built into the build system right and um that was all very nice but because it was so um had such a lot of such",
    "start": "2076679",
    "end": "2083679"
  },
  {
    "text": "powerful affordances for third party code now you're very locked into that build system right and it and it is a build system that is older than es",
    "start": "2083679",
    "end": "2090638"
  },
  {
    "text": "modules as a spec right has a lot of Cru in it and so embroider exist as a",
    "start": "2090639",
    "end": "2096358"
  },
  {
    "text": "project to create a ation path to get that whole ecosystem moving together",
    "start": "2096359",
    "end": "2101440"
  },
  {
    "text": "onto more standardized build tooling that has emerged since then so we don't want to necessarily o worry about owning",
    "start": "2101440",
    "end": "2109200"
  },
  {
    "text": "the whole build pipeline that is not a thing that's not that's not the unique selling proposition for Ember right we want to have a great DX for developers",
    "start": "2109200",
    "end": "2116280"
  },
  {
    "text": "we want to have a strong community of people thinking the same way about building ambitious applications like how",
    "start": "2116280",
    "end": "2121960"
  },
  {
    "text": "do you ship your JavaScript modules and split them is a thing that shouldn't be unique I don't think it has to be unique",
    "start": "2121960",
    "end": "2128119"
  },
  {
    "text": "for Ember apps and so we would love to be on standardized tooling for that and have a much thinner layer of the custom stuff so the things we talked about with",
    "start": "2128119",
    "end": "2134040"
  },
  {
    "text": "content tag and template tag like that should be a a nicely documented pretty thin plugin that you could drop into V",
    "start": "2134040",
    "end": "2140720"
  },
  {
    "text": "or drop into es build or whatever and not have to own the whole thing so when we talk about embroider we're mostly",
    "start": "2140720",
    "end": "2146880"
  },
  {
    "text": "talking about the process of moving the whole moving a very large community of of add-ons and apps over that hump and",
    "start": "2146880",
    "end": "2153560"
  },
  {
    "text": "getting getting them off the older customized thing yeah that makes sense well it's interesting because the rise",
    "start": "2153560",
    "end": "2160000"
  },
  {
    "text": "of that tooling layer of things like v um and before that web pack and rollup",
    "start": "2160000",
    "end": "2165119"
  },
  {
    "text": "and parcel and there is a whole ecosystem around this now in my mind",
    "start": "2165119",
    "end": "2170160"
  },
  {
    "text": "would should be pushing people to more of this like okay we have all this tools",
    "start": "2170160",
    "end": "2175400"
  },
  {
    "text": "can we what can we build on top of it that's actually useful right and we see some interesting innovation in",
    "start": "2175400",
    "end": "2180760"
  },
  {
    "text": "Frameworks like quick where they say hey you know what we're GNA build a language extension which allows us to",
    "start": "2180760",
    "end": "2188200"
  },
  {
    "text": "infer where the boundary is between server side and client side and hand things off more nicely because you opt",
    "start": "2188200",
    "end": "2194640"
  },
  {
    "text": "into a little bit more constraint you tell us something explicit and because we have control of the build system",
    "start": "2194640",
    "end": "2200079"
  },
  {
    "text": "built on top of I believe V we can do some Transformations and make that just work I I'd say embroider is kind of two",
    "start": "2200079",
    "end": "2207480"
  },
  {
    "text": "things right now which is I'd really actually I like us to actually Rebrand embroider in the next like year or two",
    "start": "2207480",
    "end": "2213920"
  },
  {
    "text": "because like I I think people are going to end up conflating with the migration instead of embroider with the end goal",
    "start": "2213920",
    "end": "2220480"
  },
  {
    "text": "and once we get closer to that end goal it probably honestly just be called Ember oh yeah those two competing things",
    "start": "2220480",
    "end": "2227920"
  },
  {
    "text": "are in the early days like Ed was mentioning we had to convince people they needed to build tool we had to convince people that this was a build",
    "start": "2227920",
    "end": "2235280"
  },
  {
    "text": "tool to even use and we had to build the build tool build tools now exist we don't need to build the build tool",
    "start": "2235280",
    "end": "2241240"
  },
  {
    "text": "everybody kind of understands what where the value of build tools are we don't need to convince them that there's value in a build tool now so I really look at",
    "start": "2241240",
    "end": "2248079"
  },
  {
    "text": "embroider as taking us pivoting towards almost the remix approach we're just a build plugin it doesn't matter anymore",
    "start": "2248079",
    "end": "2254839"
  },
  {
    "text": "if it's arpac or webpack or V we're just a build plugin that you put over the top that handles all the framework specific",
    "start": "2254839",
    "end": "2261160"
  },
  {
    "text": "concerns and I think that that's a really powerful Paradigm because not only does it mean there's a lot less work on the tooling front for us as a",
    "start": "2261160",
    "end": "2267880"
  },
  {
    "text": "team to have to care about because we would like to focus on great DX in the framework but it also means that it's",
    "start": "2267880",
    "end": "2273960"
  },
  {
    "text": "easier for us to just be a part of the broader ecosystem be a the broader platform and allow things that have",
    "start": "2273960",
    "end": "2280800"
  },
  {
    "text": "become good conventions to just be good conventions and there's a really interesting idea here as well if you",
    "start": "2280800",
    "end": "2286880"
  },
  {
    "text": "think of embroider as just a migration path there was a a member of the community the amember community that",
    "start": "2286880",
    "end": "2293119"
  },
  {
    "text": "created Ember for vit it must have been like two years ago now I can't remember",
    "start": "2293119",
    "end": "2298920"
  },
  {
    "text": "but it was it was essentially having Ember building with vat and it was great",
    "start": "2298920",
    "end": "2304520"
  },
  {
    "text": "it was you know it worked but no add-on worked so no app could ever use this cuz",
    "start": "2304520",
    "end": "2311040"
  },
  {
    "text": "it was essentially handwriting everything so it was just JavaScript and a few plugins and stuff but that's not",
    "start": "2311040",
    "end": "2317319"
  },
  {
    "text": "good enough for the Amber Community the whole point is that you can upgrade your app from like there are legitimately",
    "start": "2317319",
    "end": "2325160"
  },
  {
    "text": "people that I've been working with in the embroider initiative that have an ember app that has served them for 10",
    "start": "2325160",
    "end": "2331680"
  },
  {
    "text": "years and they are a billion dooll company you know and that is that is the truth that's what we have and we don't",
    "start": "2331680",
    "end": "2338040"
  },
  {
    "text": "want them to say oh by the way you now have to rewrite your app from scratch in Ember again but with this new V build",
    "start": "2338040",
    "end": "2345680"
  },
  {
    "text": "tool and if we wanted to say that we could have had V 2 years ago but it wasn't good enough so when we've been",
    "start": "2345680",
    "end": "2353440"
  },
  {
    "text": "designing this a lot of the pieces that look at your app and convert emisims",
    "start": "2353440",
    "end": "2359640"
  },
  {
    "text": "into newer things are like virtual Imports or pieces that you could in the",
    "start": "2359640",
    "end": "2368440"
  },
  {
    "text": "future when they're not needed technically just delete that line and then as you have less and less of the",
    "start": "2368440",
    "end": "2374720"
  },
  {
    "text": "old stuff you could just look forward and it looks like a normal Javascript app with oh look there's a bit of",
    "start": "2374720",
    "end": "2381280"
  },
  {
    "text": "content tag that's the little piece that's interesting yeah if we want I can",
    "start": "2381280",
    "end": "2386400"
  },
  {
    "text": "get into spe some like specific technical things that could be interesting about builds but um you know",
    "start": "2386400",
    "end": "2391720"
  },
  {
    "text": "just like to to throw one out if and see if that's something we want to go into if we want this level of depth I",
    "start": "2391720",
    "end": "2396800"
  },
  {
    "text": "mentioned how add-ons were very very powerful in the early in our original build system Paradigm too much so in the",
    "start": "2396800",
    "end": "2403599"
  },
  {
    "text": "sense that they could just like drop an arbitary file as if it existed in your app anywhere they wanted and so when you",
    "start": "2403599",
    "end": "2409920"
  },
  {
    "text": "think about what that means to get something to build we have you know we have a resolver plugin that's got to go into a something like vit we have it we",
    "start": "2409920",
    "end": "2417040"
  },
  {
    "text": "have it for V we have it for rollup we have it for webpack but when you encounter some import for like/ my",
    "start": "2417040",
    "end": "2422680"
  },
  {
    "text": "component that doesn't just mean that file it means like go like look at the database of all the add-ons who might",
    "start": "2422680",
    "end": "2428800"
  },
  {
    "text": "have dropped a file there right and it's a very weird thing to do and so when you look at something like V dep dep scan",
    "start": "2428800",
    "end": "2434680"
  },
  {
    "text": "it's like never it's never going to think that might be coming from some add-on right it's clearly appcode it starts with a DOT like move on and",
    "start": "2434680",
    "end": "2441520"
  },
  {
    "text": "that's that doesn't work right so like that's the kind of what I mean when I say like we had an had an overly",
    "start": "2441520",
    "end": "2447119"
  },
  {
    "text": "powerful bunch of capabilities in the add-on ecosystem before this that makes makes us that's why we have to build",
    "start": "2447119",
    "end": "2452960"
  },
  {
    "text": "tooling to help people with this process so we're going to give you tools to solve the solve all that in a programmatic way so you can get an app",
    "start": "2452960",
    "end": "2459200"
  },
  {
    "text": "across this without having to like hand rewrite the world I I think the interesting thing there is there is a",
    "start": "2459200",
    "end": "2466480"
  },
  {
    "text": "subset of those capabilities that add-ons then had around oh I'm going to get built by the consuming application",
    "start": "2466480",
    "end": "2474240"
  },
  {
    "text": "that means I can utilize configuration from the consuming app to affect how I get built that was both really powerful",
    "start": "2474240",
    "end": "2482280"
  },
  {
    "text": "and something that the broader ecosystem took forever to figure out they even wanted so we call these macros broader",
    "start": "2482280",
    "end": "2488400"
  },
  {
    "text": "ecosystem also now is starting to bring in macros in in lots of different Frameworks most of the macros today are",
    "start": "2488400",
    "end": "2494520"
  },
  {
    "text": "just like am I the production m versus the devm and we go quite a lot deeper",
    "start": "2494520",
    "end": "2500160"
  },
  {
    "text": "than that into um you know what can be allowed there and the really awesome thing that Ed did really close to the",
    "start": "2500160",
    "end": "2507480"
  },
  {
    "text": "start of the embroider initiative was going say okay we need to formalize the kinds of things that a library that's",
    "start": "2507480",
    "end": "2514680"
  },
  {
    "text": "getting consumed might want to do based on configuration from a consuming app and",
    "start": "2514680",
    "end": "2521839"
  },
  {
    "text": "find a way that that's actually going to work well and so now it's just a b plugin it's like bable plugin that we",
    "start": "2521839",
    "end": "2527520"
  },
  {
    "text": "could like there's a little bit of entangle and Stu but probably we're pretty close to being able to use that even without a Ember ecosystem just add",
    "start": "2527520",
    "end": "2534280"
  },
  {
    "text": "this Babble plugin while you're compiling the the set of assets give it to config that you need to give it and",
    "start": "2534280",
    "end": "2540119"
  },
  {
    "text": "that that concept of macros that was one of the challenging things for us in Ember data in warp drive because we did",
    "start": "2540119",
    "end": "2546000"
  },
  {
    "text": "a ton of stuff during build based on user config we will strip all the deprecated code out if you Market as",
    "start": "2546000",
    "end": "2552559"
  },
  {
    "text": "resolved if you're in production we remove a whole lot of nice helpful developer asserts that tell you you know",
    "start": "2552559",
    "end": "2558559"
  },
  {
    "text": "oh you did this wrong or you did that wrong we we've got optional feature flags that are managed this way we for a",
    "start": "2558559",
    "end": "2564880"
  },
  {
    "text": "while we got we got away from this but for a while we were managing oh our peer dependencies uh if you have this peer",
    "start": "2564880",
    "end": "2570359"
  },
  {
    "text": "present that's an optional appearer then we'll automatically wire this in for you we've steered a little bit away from",
    "start": "2570359",
    "end": "2575640"
  },
  {
    "text": "that in favor of explicit wiring but really you know kind of powerful",
    "start": "2575640",
    "end": "2581040"
  },
  {
    "text": "expressive ways of changing the output to give you the most optimal Library code that you can get based on how your",
    "start": "2581040",
    "end": "2588000"
  },
  {
    "text": "app was actually going to use it so that project that se of separating out macros is you know one was just huge and I",
    "start": "2588000",
    "end": "2595359"
  },
  {
    "text": "think still we need to do some work to to socialize what all is needed there in the broader ecosystem because I think it",
    "start": "2595359",
    "end": "2600839"
  },
  {
    "text": "it has value and two that's honestly the reason that we've been able to take warp drive and say actually we are going to",
    "start": "2600839",
    "end": "2606359"
  },
  {
    "text": "go Universal because since it's just a babble plugin at this point we're no longer doing anything particularly crazy",
    "start": "2606359",
    "end": "2613240"
  },
  {
    "text": "uh you know it's now it's I I can come in and say okay well if you want to install warp drive into your project uh",
    "start": "2613240",
    "end": "2619000"
  },
  {
    "text": "then you're going to need to in your build pipeline you just need to configure you know call set config with",
    "start": "2619000",
    "end": "2624119"
  },
  {
    "text": "this with with with a base configuration here and and make sure you have this pabble plugin installed I love it",
    "start": "2624119",
    "end": "2632318"
  },
  {
    "text": "[Music] what's going on Party People hey I'm",
    "start": "2637880",
    "end": "2643000"
  },
  {
    "text": "here with a good friend of mine and you know him faras abuka DJ you know faras as a previous panelist here on JS party",
    "start": "2643000",
    "end": "2650480"
  },
  {
    "text": "and frequent guest but now faras is the founder and CEO of socket socket helps",
    "start": "2650480",
    "end": "2656280"
  },
  {
    "text": "to protect some of the best engineering teams out there with their developer First Security platform they protect",
    "start": "2656280",
    "end": "2662000"
  },
  {
    "text": "your code from both vulnerable and malicious dependencies so we've known each other for a while now for Ross well",
    "start": "2662000",
    "end": "2668760"
  },
  {
    "text": "let's imagine somehow I've landed myself a verel and because I'm a big fan of you",
    "start": "2668760",
    "end": "2674240"
  },
  {
    "text": "I understand what socket is but I don't know how to explain it to anybody else there I've I've brought you into a meeting we're considering socket because",
    "start": "2674240",
    "end": "2680200"
  },
  {
    "text": "we want to secure independencies we want to ship faster we want everything that you promis from socket how do you",
    "start": "2680200",
    "end": "2686359"
  },
  {
    "text": "explain socket to my team of so yeah socket is a developer First Security",
    "start": "2686359",
    "end": "2691440"
  },
  {
    "text": "platform that stops vulnerable and malicious open source dependencies from",
    "start": "2691440",
    "end": "2696559"
  },
  {
    "text": "infiltrating trading your most critical apps so we do that by focusing on real threats and keeping out all the types of",
    "start": "2696559",
    "end": "2703800"
  },
  {
    "text": "risks that are out there in open source dependencies everything from malicious dependencies typo squat attacks back",
    "start": "2703800",
    "end": "2710240"
  },
  {
    "text": "doors risky dependencies dependencies with hidden Behavior there's all kinds of risks out there a lot of reasons why",
    "start": "2710240",
    "end": "2716839"
  },
  {
    "text": "a dependency might be bad news and socket can help you as a developer just",
    "start": "2716839",
    "end": "2721920"
  },
  {
    "text": "keep all that out of your app and keep things nice and clean and pristine amongst your dependencies I saw",
    "start": "2721920",
    "end": "2727559"
  },
  {
    "text": "recently Dracula I'm a fan of Dracula I don't know about you but I love that theme big fan of zenoa and I saw there",
    "start": "2727559",
    "end": "2734280"
  },
  {
    "text": "was like a misspelling there and so because Dracula is installed on vs code and lots of different places I saw there",
    "start": "2734280",
    "end": "2740920"
  },
  {
    "text": "was a typo squat sitting there that had different intentions than obviously Dracula did is that an example of what",
    "start": "2740920",
    "end": "2748040"
  },
  {
    "text": "you mean absolutely yeah Dracula that's a perfect example it's super common these days to see that type of an attack",
    "start": "2748040",
    "end": "2754760"
  },
  {
    "text": "where you see a common dependency that you have an attacker just pretending to be that dependency typoing the name of",
    "start": "2754760",
    "end": "2760960"
  },
  {
    "text": "it by one letter and then trying to get unsuspecting developers to install it unfortunately we're seeing more and more",
    "start": "2760960",
    "end": "2766400"
  },
  {
    "text": "of these types of attacks in the community and they're taking advantage of the Trust In open source as developers we need to be more aware of",
    "start": "2766400",
    "end": "2772400"
  },
  {
    "text": "the dependencies we're using and make sure that we're not pulling in anything that could risk the data of our users or",
    "start": "2772400",
    "end": "2778839"
  },
  {
    "text": "cause you know a big breach at our companies and so part of that is obviously being more careful and asking",
    "start": "2778839",
    "end": "2784520"
  },
  {
    "text": "questions and looking more carefully at the dependencies we use but also part of that is tooling it's it's really a hard problem to to solve just on your own as",
    "start": "2784520",
    "end": "2791359"
  },
  {
    "text": "a single developer and so bringing in a tool like socket can really help automate a lot of that work for you it",
    "start": "2791359",
    "end": "2796480"
  },
  {
    "text": "just sort of sits there in the background it's really really quiet it doesn't create a lot of noise but if you",
    "start": "2796480",
    "end": "2801559"
  },
  {
    "text": "were to pull in something that was back doored or compromised in some way we",
    "start": "2801559",
    "end": "2806680"
  },
  {
    "text": "would jump into action right in the pr or right in the in your editor or even as early as as you browse the web we",
    "start": "2806680",
    "end": "2812800"
  },
  {
    "text": "have a a web extension that can actually give you information if you're looking at a package uh that that's dangerous or",
    "start": "2812800",
    "end": "2818680"
  },
  {
    "text": "if you're browsing you know stack Overflow and you see somebody saying hey just install this dependency to uh solve",
    "start": "2818680",
    "end": "2825079"
  },
  {
    "text": "your problems a lot of times even that can be a way to get the attacker's code onto your machine so socket jumps in at",
    "start": "2825079",
    "end": "2830800"
  },
  {
    "text": "all those different places and can tell you if if something is dangerous and stop you from from owning yourself yes",
    "start": "2830800",
    "end": "2836839"
  },
  {
    "text": "don't get yourself owned use socket check them out socket dodev big fan of",
    "start": "2836839",
    "end": "2842319"
  },
  {
    "text": "you foros big fan of what you're doing with socket proactive versus reative Ive to me is the ultimate shift left for",
    "start": "2842319",
    "end": "2849720"
  },
  {
    "text": "developers it is totally developer first check it out socket. deev install the",
    "start": "2849720",
    "end": "2855040"
  },
  {
    "text": "GitHub app too easy or book a demo once again socket. deev",
    "start": "2855040",
    "end": "2860359"
  },
  {
    "text": "that's",
    "start": "2860359",
    "end": "2863359"
  },
  {
    "text": "kdev there's something interesting here and what you're talking about in terms of allowing libraries to change the way",
    "start": "2867720",
    "end": "2875119"
  },
  {
    "text": "that they are built based on on configuration in the consuming project in some ways that that it's another take",
    "start": "2875119",
    "end": "2881680"
  },
  {
    "text": "on this like what are the ways that data flows except now it's looking at your build project or your build part as part",
    "start": "2881680",
    "end": "2888800"
  },
  {
    "text": "of your application which is a nice brain shift a little bit I do wonder I",
    "start": "2888800",
    "end": "2894760"
  },
  {
    "text": "mean this it reminds me a little bit of like the whole like shark fin of getting",
    "start": "2894760",
    "end": "2900359"
  },
  {
    "text": "excited about meta programming right like you get so excited about the power and then at some point you get to a place where you're like oh sh shoot this",
    "start": "2900359",
    "end": "2907559"
  },
  {
    "text": "is like impossible to reason about because it's too general purpose I got to drop way back down and then only use",
    "start": "2907559",
    "end": "2914800"
  },
  {
    "text": "this in very tightly constrained places or ways oh yeah oh yeah I like that the",
    "start": "2914800",
    "end": "2920160"
  },
  {
    "text": "sharkin description of that I've always thought of that as like the most dangerous programmers are the intermediate skill programmers like the",
    "start": "2920160",
    "end": "2926960"
  },
  {
    "text": "beginners don't have don't know enough they make simple mistakes that aren't so costly and the the pros know have like",
    "start": "2926960",
    "end": "2932440"
  },
  {
    "text": "they've burned they've been burned and they've learned but it's that intermediate level where you're just starting to get the power and you're he",
    "start": "2932440",
    "end": "2938200"
  },
  {
    "text": "you're like ghost to your head absolutely what you're saying about build systems and and like bringing them",
    "start": "2938200",
    "end": "2944079"
  },
  {
    "text": "in as and think changing your thinking about them you know it relates to something else I I've thought about this which is that like we talked about",
    "start": "2944079",
    "end": "2949760"
  },
  {
    "text": "reactivity like build systems are also purely like they're very much a reactivity system problem and when you",
    "start": "2949760",
    "end": "2956000"
  },
  {
    "text": "look at what's required to make a nice uh developer experience around build systems it actually is very similar to",
    "start": "2956000",
    "end": "2963400"
  },
  {
    "text": "the problem of Frameworks and their rendering right like the build system is rendering an app and wants to like do",
    "start": "2963400",
    "end": "2969000"
  },
  {
    "text": "fine grain inv validation of just enough stuff they're actually the same kind of Paradigm and you find the same patterns",
    "start": "2969000",
    "end": "2974760"
  },
  {
    "text": "repeating over and over again like it would not surprise me if signals lands in tc39 and like node implements signals",
    "start": "2974760",
    "end": "2981079"
  },
  {
    "text": "that you could actually make a really nice cleanup of build tooling that's implemented on node by like using",
    "start": "2981079",
    "end": "2987720"
  },
  {
    "text": "signals to inform when like this piece of this thing depended on that which depended on that which depended on that",
    "start": "2987720",
    "end": "2993440"
  },
  {
    "text": "the signal will tell me that that has now that cache is invalid right but do things like macros invalidate that",
    "start": "2993440",
    "end": "2999280"
  },
  {
    "text": "unidirectional flow because now you have things coming back from your application configuration into different libraries",
    "start": "2999280",
    "end": "3007040"
  },
  {
    "text": "and then out again I mean I don't think it creates a cycle necessarily it does",
    "start": "3007040",
    "end": "3012119"
  },
  {
    "text": "mean you have to design it well like the thing is with signal signals would be the nice primitive to do that right like if if the whole build system like say a",
    "start": "3012119",
    "end": "3018760"
  },
  {
    "text": "new version of I don't know rollup was built on signals for incremental rebuilds and you and you wanted to make",
    "start": "3018760",
    "end": "3025599"
  },
  {
    "text": "your your Macros work in rollup right as long as your macro plugin sent a signal",
    "start": "3025599",
    "end": "3031480"
  },
  {
    "text": "about a thing changing like the rest of rollup would know that it changed right like if the values come like think about",
    "start": "3031480",
    "end": "3036640"
  },
  {
    "text": "it this way if the value coming out of your plugin is a reactive value and it's following a standard for what reactive",
    "start": "3036640",
    "end": "3043119"
  },
  {
    "text": "means right you now like now rebuilds will be efficient without you having to",
    "start": "3043119",
    "end": "3048200"
  },
  {
    "text": "go and learn some special API about your build of like oh remember to add a watch file here but you can only do it in this",
    "start": "3048200",
    "end": "3054520"
  },
  {
    "text": "phase right like there's a lot of very handcrafted reactivity stuff that keeps",
    "start": "3054520",
    "end": "3059880"
  },
  {
    "text": "incremental rebuilds working and if you had a way to like if your plugin actually just produced a value but the",
    "start": "3059880",
    "end": "3065400"
  },
  {
    "text": "value is reactive via a standard now you don't need all that stuff right yes oh",
    "start": "3065400",
    "end": "3070760"
  },
  {
    "text": "it's it's really interesting saying that because it's reminding me I'm like drawing the connection between these watch file systems and like angular's",
    "start": "3070760",
    "end": "3078359"
  },
  {
    "text": "old system which was just basically a watch file system for how it was doing rendering and then yeah that's",
    "start": "3078359",
    "end": "3083520"
  },
  {
    "text": "fascinating I I really do help node um Alexa bring signals in maybe even before",
    "start": "3083520",
    "end": "3089640"
  },
  {
    "text": "V8 has them exposed if it gets into the language there's been a lot of discussion from folks working on that",
    "start": "3089640",
    "end": "3096079"
  },
  {
    "text": "spec of does this have value outside of the browser Paradigm or not and my",
    "start": "3096079",
    "end": "3101880"
  },
  {
    "text": "argument has been it does for build systems but I also think it does for ORS I've seen so much bad JavaScript serers",
    "start": "3101880",
    "end": "3109680"
  },
  {
    "text": "side code around memorization and D duping of work that I",
    "start": "3109680",
    "end": "3115200"
  },
  {
    "text": "think signals and using signals in computed really would clean up quite a lot people don't necessarily think of an",
    "start": "3115200",
    "end": "3123160"
  },
  {
    "text": "API being a reactive framework but the reality is your render is the Json that",
    "start": "3123160",
    "end": "3128359"
  },
  {
    "text": "you return and a lot of the times to get to that settled State you're going to",
    "start": "3128359",
    "end": "3133520"
  },
  {
    "text": "run computations on complex cyclical graphs which means that you need to know",
    "start": "3133520",
    "end": "3139079"
  },
  {
    "text": "which portions of that graph have invalidated and if you're authoring how you build up that payload in an highly",
    "start": "3139079",
    "end": "3146000"
  },
  {
    "text": "asynch Rous environment where you maybe took multiple round trips to your",
    "start": "3146000",
    "end": "3151319"
  },
  {
    "text": "database to assemble the data calls out to multiple other microservices to assemble the data that's all getting",
    "start": "3151319",
    "end": "3157799"
  },
  {
    "text": "merged together to get you into that final payload you actually need something that kind of colors that graph",
    "start": "3157799",
    "end": "3162880"
  },
  {
    "text": "for you and tells you which parts have changed and which parts haven't and what's invalid I I actually think there's a",
    "start": "3162880",
    "end": "3168960"
  },
  {
    "text": "whole Space to explore there that's really neat that people have not really started to to consider yet and I've",
    "start": "3168960",
    "end": "3176599"
  },
  {
    "text": "jokingly been thinking um I need to start TR trolling drizzle on on Twitter",
    "start": "3176599",
    "end": "3181720"
  },
  {
    "text": "repeatedly and until they make it a make an attempt at it just just to say they",
    "start": "3181720",
    "end": "3187319"
  },
  {
    "text": "did so I'm gonna guess some of this is informed by what you've been doing with Ember data because you're talking about",
    "start": "3187319",
    "end": "3193119"
  },
  {
    "text": "kind of bringing reactivity and change tracking and all of that into managing your data layer so let's maybe talk",
    "start": "3193119",
    "end": "3199240"
  },
  {
    "text": "about that a little bit can you share about what is Ember dataw Drive and how",
    "start": "3199240",
    "end": "3205359"
  },
  {
    "text": "does it work and and how does uh how does this reactive Paradigm play out there Chris did you want to interject",
    "start": "3205359",
    "end": "3212119"
  },
  {
    "text": "first or no I just wanted to add one quick thing about what you said about the uh reactivity on the server side",
    "start": "3212119",
    "end": "3218319"
  },
  {
    "text": "like there was just all the things that you were saying about microservices is totally true but when you're just considering it in terms of a single Json",
    "start": "3218319",
    "end": "3225440"
  },
  {
    "text": "that's then ultimately responded it's complicated enough what if you add web",
    "start": "3225440",
    "end": "3231319"
  },
  {
    "text": "services into that so that the client was subscribing to that you now have",
    "start": "3231319",
    "end": "3236520"
  },
  {
    "text": "have to keep the colored graph somewhere on the server and then if something did",
    "start": "3236520",
    "end": "3241720"
  },
  {
    "text": "change you would send a diff somehow across a web service like obviously this is pseudo code thinking but imagine",
    "start": "3241720",
    "end": "3250119"
  },
  {
    "text": "having to recompute that really complex uh Json and then have to update it",
    "start": "3250119",
    "end": "3257160"
  },
  {
    "text": "without having something signal based like I'm sure plenty of Engineers have",
    "start": "3257160",
    "end": "3262280"
  },
  {
    "text": "attempted something similar in the past and have tied themselves in knots trying to do it I I just see a lot of really",
    "start": "3262280",
    "end": "3268440"
  },
  {
    "text": "brittle memorization that's that's how most people seem to solve it well but it gets back to what Kevin was talking",
    "start": "3268440",
    "end": "3274119"
  },
  {
    "text": "about too with you know the possibility of systems that seem that on their own decide when to span the server and the",
    "start": "3274119",
    "end": "3281000"
  },
  {
    "text": "client right like it's that kind of problem if you had if you decide if you had one coherent way to express change",
    "start": "3281000",
    "end": "3288880"
  },
  {
    "text": "across those you could your build tool or your framework could in fact decide to split that work on its own right and",
    "start": "3288880",
    "end": "3295480"
  },
  {
    "text": "that that has been a it's been a dream for a long time to just have like there's been a lot of different names",
    "start": "3295480",
    "end": "3300559"
  },
  {
    "text": "for that Paradigm grid Computing or you know um I'm trying to think there's been",
    "start": "3300559",
    "end": "3305760"
  },
  {
    "text": "like many generations of the thought that you write a bunch of code and you don't know where it runs and that's okay and the system figures it out for you um",
    "start": "3305760",
    "end": "3312480"
  },
  {
    "text": "I've never seen it done at like big scale successfully in JavaScript but that doesn't mean we can't yet do it",
    "start": "3312480",
    "end": "3317960"
  },
  {
    "text": "maybe having the language stabilize more of this stuff would make make it plausible finally yeah I mean I think",
    "start": "3317960",
    "end": "3323440"
  },
  {
    "text": "some of the stuff that quick is doing with resum ability and and Astro with their islands and stuff where you have",
    "start": "3323440",
    "end": "3330160"
  },
  {
    "text": "kind of things that are rendered server side but then load the right JavaScript when it's needed on the other side and",
    "start": "3330160",
    "end": "3335960"
  },
  {
    "text": "can pick things up is is as close as I've seen to somebody doing it well yes yeah exactly exactly but what is what is",
    "start": "3335960",
    "end": "3343440"
  },
  {
    "text": "Ember dat or what is warp drive I think that's a loaded question but I'll try to unpack it I think it you know it helps",
    "start": "3343440",
    "end": "3350640"
  },
  {
    "text": "understand I think ember's birthday is Sprout cor's birthday and we don't",
    "start": "3350640",
    "end": "3356400"
  },
  {
    "text": "actually know when that is but it's sometime in 2006 the the very first commit to sprout core in the git history",
    "start": "3356400",
    "end": "3363160"
  },
  {
    "text": "is a port from its SVN or from a subversion repository and in that commit",
    "start": "3363160",
    "end": "3368520"
  },
  {
    "text": "you have models records record arrays array proxies like the everything that",
    "start": "3368520",
    "end": "3374359"
  },
  {
    "text": "formed the core of the early Ember data experience in a way to go load these things and my understanding is that a",
    "start": "3374359",
    "end": "3382200"
  },
  {
    "text": "lot of the way that that was built and designed at the time was as an to bring the idea of core data for iOS which was",
    "start": "3382200",
    "end": "3390119"
  },
  {
    "text": "also getting built out at that point in time into JavaScript so that Sprout core and the the core data apis would be very",
    "start": "3390119",
    "end": "3397240"
  },
  {
    "text": "similar for how they were building applications so that's where we started all right like a client side omm that is",
    "start": "3397240",
    "end": "3403599"
  },
  {
    "text": "assuming persisted State except it didn't have persistent State assuming availability to all the data you would",
    "start": "3403599",
    "end": "3409640"
  },
  {
    "text": "care about except didn't actually have access to all the data you cared about that would just kind of magically sink",
    "start": "3409640",
    "end": "3415039"
  },
  {
    "text": "in the background even though there's you're in a low availability High interruptibility Paradigm when you're in",
    "start": "3415039",
    "end": "3421640"
  },
  {
    "text": "a browser and so out of that as Ember formed out of sprout core I think you",
    "start": "3421640",
    "end": "3428240"
  },
  {
    "text": "got this idea well let's separate that portion out into its own Library which is where Ember data came from it just",
    "start": "3428240",
    "end": "3433480"
  },
  {
    "text": "got ported out of that code base at that point in time split off uh and let's see if we can build a kind of a a general",
    "start": "3433480",
    "end": "3441400"
  },
  {
    "text": "purpose client side om with a bit of a nicer abstraction around the network",
    "start": "3441400",
    "end": "3446760"
  },
  {
    "text": "layer for applications that's an incredibly hard problem even if you don't consider the fact that that you",
    "start": "3446760",
    "end": "3452480"
  },
  {
    "text": "are now effectively in a remote remotely distributed uh replica that is highly",
    "start": "3452480",
    "end": "3458440"
  },
  {
    "text": "unavailable and high latency and always in a partial State always in an",
    "start": "3458440",
    "end": "3463640"
  },
  {
    "text": "incorrect state that was crazy challenge to try to take on and I think a lot of",
    "start": "3463640",
    "end": "3469880"
  },
  {
    "text": "folks in the early era you know hit their head against some of the challenges that come with that and and",
    "start": "3469880",
    "end": "3476160"
  },
  {
    "text": "split off just decid we're not going to use this and I was one of those people uh I very early on said this is crazy",
    "start": "3476160",
    "end": "3481839"
  },
  {
    "text": "town I'm not going to use this library and I started working on all my own stuff which I never loved because trying",
    "start": "3481839",
    "end": "3487799"
  },
  {
    "text": "to build your own fetch abstraction especially before fetch it's it's a hard problem uh but you could Custom Tailor",
    "start": "3487799",
    "end": "3494799"
  },
  {
    "text": "the difficulty to your app you know what is what are my app's requirements uh so figure out which portions of that hard",
    "start": "3494799",
    "end": "3501480"
  },
  {
    "text": "problem you need to solve for you that was enough move on and then I uh joined",
    "start": "3501480",
    "end": "3507640"
  },
  {
    "text": "LinkedIn this is like eight years ago now and they were using Ember data and they were like we have a lot of problems",
    "start": "3507640",
    "end": "3513520"
  },
  {
    "text": "with it and so I got to work on the library trying to address some of those problems and here I am eight years later",
    "start": "3513520",
    "end": "3520440"
  },
  {
    "text": "still working on this Library which is which it's been fun but the way that I think about it now is very different",
    "start": "3520440",
    "end": "3528640"
  },
  {
    "text": "from I think its origin and that really ties into why the Rebrand from Ember",
    "start": "3528640",
    "end": "3534039"
  },
  {
    "text": "data to warp drive because I think it's time for a clean cognitive break for a",
    "start": "3534039",
    "end": "3540680"
  },
  {
    "text": "lot of folks who felt the patterns that it had and knew the patterns that it had",
    "start": "3540680",
    "end": "3545839"
  },
  {
    "text": "and either loved or hated those patterns what it is today is its lowest level",
    "start": "3545839",
    "end": "3553119"
  },
  {
    "text": "it's managed Fetch and for managed fetch it basically has the premise that",
    "start": "3553119",
    "end": "3559119"
  },
  {
    "text": "everybody needs managed fetch for various reasons whether it's better at handling of error States or just uh",
    "start": "3559119",
    "end": "3565240"
  },
  {
    "text": "Authentication or um just a little bit of data normalization or a little little bit of",
    "start": "3565240",
    "end": "3571079"
  },
  {
    "text": "header manipulation um some caching concerns whatnot everybody needs that pipeline but it's hard to actually go",
    "start": "3571079",
    "end": "3579160"
  },
  {
    "text": "find a library that handles that pipeline well and a lot of the Alternatives out there today that end up",
    "start": "3579160",
    "end": "3585280"
  },
  {
    "text": "getting used end up being very specific to Frameworks that they're in or very like you can argue tanat query is",
    "start": "3585280",
    "end": "3592720"
  },
  {
    "text": "general purpose but it's really difficult to use that if you don't have have effects uh you could argue that",
    "start": "3592720",
    "end": "3598880"
  },
  {
    "text": "Apollo is general purpose but now you're tied into a very specific backend you",
    "start": "3598880",
    "end": "3604000"
  },
  {
    "text": "you could there's lots of small managed fetch libraries but most of them are telling you hey every time you make a",
    "start": "3604000",
    "end": "3609839"
  },
  {
    "text": "request you're going to do a whole lot of work wherever you're making that request to add what handlers you want to",
    "start": "3609839",
    "end": "3615799"
  },
  {
    "text": "for that one specific request and that's it whereas warp D premise is you set up a pipeline when you're creating your app",
    "start": "3615799",
    "end": "3623000"
  },
  {
    "text": "and you say this is the chain of responsibility for how requests get handled it is a very light decoration",
    "start": "3623000",
    "end": "3630520"
  },
  {
    "text": "over top of the fetch API but now you call the you know request instead of",
    "start": "3630520",
    "end": "3636599"
  },
  {
    "text": "Fetch and you pass in what are fetch options plus a little bit of extra",
    "start": "3636599",
    "end": "3642000"
  },
  {
    "text": "properties that have can do some special things but you pass in what are fetch options and it just passes it down the",
    "start": "3642000",
    "end": "3647160"
  },
  {
    "text": "pipeline and so now instead of every time that you make a request each place in your application you need to go and wire all these things together you just",
    "start": "3647160",
    "end": "3653760"
  },
  {
    "text": "have a thing that's already wired together does it so managed fetch it's",
    "start": "3653760",
    "end": "3659039"
  },
  {
    "text": "core that's what it is and that's non-reactive there's no cach involved by default like it's just managed fetch but",
    "start": "3659039",
    "end": "3666839"
  },
  {
    "text": "then you start going well actually my application needs a cash we can come in",
    "start": "3666839",
    "end": "3673599"
  },
  {
    "text": "with you know okay well here is how you plug in a cash Handler and here's the spec for what a cash needs to implement",
    "start": "3673599",
    "end": "3680599"
  },
  {
    "text": "and this is where the value proposition of warp drive really diver verges from",
    "start": "3680599",
    "end": "3686440"
  },
  {
    "text": "the rest of the of what's out there right now we don't look at how we cache",
    "start": "3686440",
    "end": "3691480"
  },
  {
    "text": "data as a simple HTTP level request kind of cache we look at it as we're going to",
    "start": "3691480",
    "end": "3698079"
  },
  {
    "text": "try to semantically parse your documents into constituent components so that if",
    "start": "3698079",
    "end": "3704119"
  },
  {
    "text": "multiple requests have responses that have overlapping portions of their data",
    "start": "3704119",
    "end": "3709640"
  },
  {
    "text": "in the response we understand how to intelligently move those together that comes with a whole bunch of nice things",
    "start": "3709640",
    "end": "3715559"
  },
  {
    "text": "because now let's say that you want to replay requests in a different order doesn't matter if a later request",
    "start": "3715559",
    "end": "3722400"
  },
  {
    "text": "updated the state of one of the associated things it's automatically going to be in its latest state that",
    "start": "3722400",
    "end": "3727960"
  },
  {
    "text": "reminds me a lot of how Apollo's caching works but it's no no longer just specific to graphql yeah it it is very",
    "start": "3727960",
    "end": "3735400"
  },
  {
    "text": "similar um the really big difference between Apollo's caching and warp D caching is that we're far more efficient",
    "start": "3735400",
    "end": "3742319"
  },
  {
    "text": "at this like I was building uh yesterday I spent my day trying to see how far can I go into the V world with a specific",
    "start": "3742319",
    "end": "3748880"
  },
  {
    "text": "set of add-ons and and and what's working what's not and one of my",
    "start": "3748880",
    "end": "3754160"
  },
  {
    "text": "Curiosities was to see if I drop down warp drive to just the what I want the core experience to be in a year what's",
    "start": "3754160",
    "end": "3761480"
  },
  {
    "text": "my current size at because the project as a whole is a whole bunch of packages and the default configuration is much",
    "start": "3761480",
    "end": "3767279"
  },
  {
    "text": "larger than than what I would actually recommend something to do if you were kind of wiring it together yourself in the way that we're trying to propose",
    "start": "3767279",
    "end": "3774400"
  },
  {
    "text": "people do in in the next year and uh my my napkin math had been we should be",
    "start": "3774400",
    "end": "3780000"
  },
  {
    "text": "around 18 kilobytes 18 kilobytes were something that has every feature of Apollo every feature of tanack query and",
    "start": "3780000",
    "end": "3786599"
  },
  {
    "text": "more which is a third of the size of either of those libraries it weighed in at 28 granted that was gzip not Bradway",
    "start": "3786599",
    "end": "3793400"
  },
  {
    "text": "but it weighed in at 28 and so like I I'm like hm uh maybe this is in my migration support there's like a little",
    "start": "3793400",
    "end": "3799119"
  },
  {
    "text": "bit more weight here than I was expecting I need to go figure out where this 10 kilobytes came from so I'll probably be doing some optimization but",
    "start": "3799119",
    "end": "3805119"
  },
  {
    "text": "I I really feel that somewhere around 18 20 kilobytes is going to be the final size for something that handles all of",
    "start": "3805119",
    "end": "3810440"
  },
  {
    "text": "that but is general purpose but yeah so um one of the big differences between apoll caching strategy and WordPress",
    "start": "3810440",
    "end": "3816720"
  },
  {
    "text": "caching strategy is that the way that we approach how we handle the identity of",
    "start": "3816720",
    "end": "3823279"
  },
  {
    "text": "data allows us to far more efficiently Traverse the graph and update it which means that you see a lot of folks eject",
    "start": "3823279",
    "end": "3830960"
  },
  {
    "text": "from the normalized cach in Apollo because it becomes the performance bottleneck",
    "start": "3830960",
    "end": "3836000"
  },
  {
    "text": "I think that is going to be exceedingly rare for you to ever choose to eject from the cache using warp drive because",
    "start": "3836000",
    "end": "3843039"
  },
  {
    "text": "the efficiency is just much nicer and it comes within a more robust data set like",
    "start": "3843039",
    "end": "3849000"
  },
  {
    "text": "you can't really do cyclical relationships very well in graphql because the concept of identity deep",
    "start": "3849000",
    "end": "3855839"
  },
  {
    "text": "into the graphs is just not really there in the spec we're set up for cyclical",
    "start": "3855839",
    "end": "3860920"
  },
  {
    "text": "relationships deep into the graph no matter how deep you want to go um out of the box",
    "start": "3860920",
    "end": "3866319"
  },
  {
    "text": "so really powerful cache uh really performant cache the default",
    "start": "3866319",
    "end": "3871680"
  },
  {
    "text": "implementation is just on API as a spec but it is there is a cash spec that you can Implement so you think that it's too",
    "start": "3871680",
    "end": "3879799"
  },
  {
    "text": "expensive for you to either migrate your API or do some transformation on the front end to get into the Json API format there's a a way for you to",
    "start": "3879799",
    "end": "3886760"
  },
  {
    "text": "implement a cache that can handle all the neat things it needs to handle that um more specific to your format so nice",
    "start": "3886760",
    "end": "3894240"
  },
  {
    "text": "plug-and play there still completely non-reactive we're still just in I'm",
    "start": "3894240",
    "end": "3899599"
  },
  {
    "text": "plain old JavaScript land no framework specific no reactivity what we realized",
    "start": "3899599",
    "end": "3906359"
  },
  {
    "text": "about four or five years ago in warp drive the a key Insight was we didn't want to be tied to ember's reactivity",
    "start": "3906359",
    "end": "3912760"
  },
  {
    "text": "system and we realized that because Ember was itself going through a change in its own reactivity system you know",
    "start": "3912760",
    "end": "3919559"
  },
  {
    "text": "you had the kind of the classic Ember object computed Observer Paradigm going",
    "start": "3919559",
    "end": "3925359"
  },
  {
    "text": "way back back with kind of a couple of variations even within that Paradigm to be",
    "start": "3925359",
    "end": "3930559"
  },
  {
    "text": "honest and then we were introducing track you know the more signals based reactivity approach you have one that's",
    "start": "3930559",
    "end": "3937279"
  },
  {
    "text": "Observer based one that one that's push State based one that's pull based I have",
    "start": "3937279",
    "end": "3942720"
  },
  {
    "text": "I'm trying to write a data library that is supposed to work with both of these things good luck so we realize that we",
    "start": "3942720",
    "end": "3949480"
  },
  {
    "text": "need to have really tight coordination around the timing and the granularity of updates and how those uh updates would",
    "start": "3949480",
    "end": "3956039"
  },
  {
    "text": "broadcast into an Associated reactivity system so I looked at this and I I kind of digested you know what what's needed",
    "start": "3956039",
    "end": "3962599"
  },
  {
    "text": "and I realized well we've got data coming in from remote sources like your API that is potentially being pushed in",
    "start": "3962599",
    "end": "3968720"
  },
  {
    "text": "by even websocket we've got changes coming in from your application where you're updating things and none of these",
    "start": "3968720",
    "end": "3976359"
  },
  {
    "text": "actually play well in a pole-based reactivity system because anytime that you bring in new data you actually do",
    "start": "3976359",
    "end": "3982039"
  },
  {
    "text": "have to do work right away you have to do work right away to figure out what did in fact invalidate to then go tell",
    "start": "3982039",
    "end": "3988359"
  },
  {
    "text": "the reactivity system you're invalid so with that in mind I realized that the paradig is actually push push pull is",
    "start": "3988359",
    "end": "3996039"
  },
  {
    "text": "how I describe it so we push data into our cache and do work on that first push",
    "start": "3996039",
    "end": "4002319"
  },
  {
    "text": "we try to avoid doing work that can be done later so it's like we're going to do the minimum amount of work in that",
    "start": "4002319",
    "end": "4008160"
  },
  {
    "text": "first push to update put the values in the right places merge them together and then update the react a list of needs to",
    "start": "4008160",
    "end": "4015960"
  },
  {
    "text": "be notified the second push is now let's go actually notify the reactivity system so that's the a push out to the",
    "start": "4015960",
    "end": "4021279"
  },
  {
    "text": "reactivity system to say these things are now invalidated and then the poll is",
    "start": "4021279",
    "end": "4026720"
  },
  {
    "text": "whenever that reactivity system decides to say say okay I'm recomputing I'm going to pull on some State and we have",
    "start": "4026720",
    "end": "4031839"
  },
  {
    "text": "intelligent ways of deferring some of the work until the poll when it's just not required that we do it up front but",
    "start": "4031839",
    "end": "4037359"
  },
  {
    "text": "uh overall that's how we solve that problem which incidentally is why when it comes to tc39 signals proposal I'm",
    "start": "4037359",
    "end": "4043839"
  },
  {
    "text": "sitting here going like I don't think I need need effects I have built one of the most advanced data libraries out",
    "start": "4043839",
    "end": "4050640"
  },
  {
    "text": "there that's reactive and we don't actually have a place in here where we need effects for this to work because we",
    "start": "4050640",
    "end": "4057480"
  },
  {
    "text": "figured out that hey actually we need even with signals we needed to go and",
    "start": "4057480",
    "end": "4063880"
  },
  {
    "text": "manage a little bit of bookkeeping still ourselves and then integrate with the reactivity layer it we don't actually",
    "start": "4063880",
    "end": "4070039"
  },
  {
    "text": "want to build that fully over just reactivity peritas for lots of different reasons and so I think it'll be very",
    "start": "4070039",
    "end": "4076440"
  },
  {
    "text": "interesting as as that proposal evolves and as more people start trying to build new libraries over it who kind of has",
    "start": "4076440",
    "end": "4084400"
  },
  {
    "text": "this realization of where it's good versus where it's bad to integrate it but I I think because I had to juggle",
    "start": "4084400",
    "end": "4092520"
  },
  {
    "text": "all these different reactivity paradigms and Ember we had already do a lot of this thinking and and figure out how to",
    "start": "4092520",
    "end": "4097838"
  },
  {
    "text": "do these all these Integrations which is also why we're able to go Universal so easily because now that reactivity",
    "start": "4097839",
    "end": "4104040"
  },
  {
    "text": "integration is already just a very one small file off in the corner of the thing I need to go into and either make",
    "start": "4104040",
    "end": "4109960"
  },
  {
    "text": "it a couple of hooks so I can plug in a different reactivity system or just change it over to using the tc39",
    "start": "4109960",
    "end": "4115880"
  },
  {
    "text": "proposal directly uh so really um you know it's some nice factoring there and",
    "start": "4115880",
    "end": "4121719"
  },
  {
    "text": "that leads me to the last piece where is it actually reactive well after you've set up your cach if you then decide that",
    "start": "4121719",
    "end": "4127359"
  },
  {
    "text": "hey I want to have a a presentation layer in front of that cache because a",
    "start": "4127359",
    "end": "4132440"
  },
  {
    "text": "lot of times the data you get back from your API isn't quite in the right format for what how you actually want to use it in your application we uh have a hook",
    "start": "4132440",
    "end": "4139640"
  },
  {
    "text": "where you can Implement a thing to instantiate a class that default is going to be a schema driven those schemas can come from anywhere including",
    "start": "4139640",
    "end": "4145719"
  },
  {
    "text": "from your API it uses that schema to figure out okay how do I take data from the cache and how what am I supposed to",
    "start": "4145719",
    "end": "4151278"
  },
  {
    "text": "transform it into for you it has affordances for derivations so you can have properties on these record",
    "start": "4151279",
    "end": "4157359"
  },
  {
    "text": "instances that don't exist in your cache data they just derve new values out of",
    "start": "4157359",
    "end": "4162560"
  },
  {
    "text": "the cache data all sorts of interesting things like that but it then becomes it's a it's a proxy and it becomes this",
    "start": "4162560",
    "end": "4168640"
  },
  {
    "text": "intermediate Transformer where when you access the property on it it gives you the nice hydrated thing that you wanted",
    "start": "4168640",
    "end": "4175040"
  },
  {
    "text": "to work with in your app like let's say for instance axan date instance and then when you set it to a new value it's",
    "start": "4175040",
    "end": "4181440"
  },
  {
    "text": "going to automatically transform that back into the cache value so back into a Ser more serialized State like it would",
    "start": "4181440",
    "end": "4187758"
  },
  {
    "text": "be for your API this makes it really easy for us to do diffing of values to give you oh here's the patch you need to",
    "start": "4187759",
    "end": "4194440"
  },
  {
    "text": "make to go save a request to your API it also means that it's really trivial for us to take that and serialize it into",
    "start": "4194440",
    "end": "4201120"
  },
  {
    "text": "something like index DB so the near future this the the where I've been putting a lot of work in my my free time",
    "start": "4201120",
    "end": "4207800"
  },
  {
    "text": "the last month is out of the the out of the box experience would be that your your cache is persisted cross tab syns",
    "start": "4207800",
    "end": "4216640"
  },
  {
    "text": "cross tab will use a web worker in the background to make all of the of the actual fetch requests for you so we'll",
    "start": "4216640",
    "end": "4222440"
  },
  {
    "text": "take the work of doing fetch off the main thread for for all apps and we'll may take the work of updating the cache",
    "start": "4222440",
    "end": "4227840"
  },
  {
    "text": "off Main thread for all of the apps we'll automatically sync across all your tabs so you're in the same state we'll",
    "start": "4227840",
    "end": "4232880"
  },
  {
    "text": "DD requests across all the tabs so you don't end up with Thundering Herd scenarios if you have a whole lot of tabs open and we'll replay out of that",
    "start": "4232880",
    "end": "4241040"
  },
  {
    "text": "cash based on your cash policy so if you were to open up a new tab you just automatically replay out of indexdb and",
    "start": "4241040",
    "end": "4246960"
  },
  {
    "text": "get into the correct State uh for whatever request you make quick question about so in my head what I'm hearing is",
    "start": "4246960",
    "end": "4253159"
  },
  {
    "text": "like you you essentially have a view layer or a you computed models in front",
    "start": "4253159",
    "end": "4258400"
  },
  {
    "text": "of your raw back end which is communicating with the back end does that view layer like can it compose",
    "start": "4258400",
    "end": "4265480"
  },
  {
    "text": "multiple elements from your cache so you might have like a few different things but that's not how you want to present it to your application yes that's",
    "start": "4265480",
    "end": "4273120"
  },
  {
    "text": "fascinating do you know what just to add a little bit of color here because I",
    "start": "4273120",
    "end": "4278199"
  },
  {
    "text": "always have this feeling when I listen to uh Chris talking about emper data it's all very complicated and in way",
    "start": "4278199",
    "end": "4285560"
  },
  {
    "text": "that I don't really understand but the best thing about being an EMP developer is that I don't need to understand the",
    "start": "4285560",
    "end": "4291760"
  },
  {
    "text": "layer that Chris is working at I never have to worry about all this cache stuff I get this batteries included app",
    "start": "4291760",
    "end": "4299280"
  },
  {
    "text": "generated that you know I follow the amember guides it tells me how to interact with the default setup and",
    "start": "4299280",
    "end": "4305800"
  },
  {
    "text": "there's going to I assume there'll be some default uh warp drive setup when you generate a new app and it I don't",
    "start": "4305800",
    "end": "4312760"
  },
  {
    "text": "have to think at that layer and it's back to a question that a point that you made earlier as well Chris that um you",
    "start": "4312760",
    "end": "4320320"
  },
  {
    "text": "know if you're making this managed fetch thing you can make it as small or as big",
    "start": "4320320",
    "end": "4325440"
  },
  {
    "text": "as your app needs but the thing I like about Ember is that you don't know how big your manage fetch needs to be when",
    "start": "4325440",
    "end": "4331639"
  },
  {
    "text": "you generate the app the first time like when you generate it you've got zero users of course you don't need something",
    "start": "4331639",
    "end": "4337320"
  },
  {
    "text": "really complicated and if you blow up in 3 months 4 months 2 years you might need",
    "start": "4337320",
    "end": "4344080"
  },
  {
    "text": "something really complicated but if you can use the same tools but I think this goes all the way back to the",
    "start": "4344080",
    "end": "4350120"
  },
  {
    "text": "opening of the podcast and and what Kevin said you know like the time scale here of stability and Longevity is a",
    "start": "4350120",
    "end": "4357360"
  },
  {
    "text": "really interesting story a lot of the apps that I've ended up working on are a decade old I work at audit board right",
    "start": "4357360",
    "end": "4364840"
  },
  {
    "text": "now we just sold for three billion we've been around for about a decade maybe 11",
    "start": "4364840",
    "end": "4370600"
  },
  {
    "text": "years now all on one Ember Cod base and I I think that that's actually a huge",
    "start": "4370600",
    "end": "4376600"
  },
  {
    "text": "secret to the success of a lot of the nice exits that we've seen uh from these kind of software as a service companies",
    "start": "4376600",
    "end": "4382880"
  },
  {
    "text": "building with Ember is that they were able to focus on building and shipping product for extremely long time scales",
    "start": "4382880",
    "end": "4389600"
  },
  {
    "text": "without getting caught up in design Choice debates and and and and rewrites",
    "start": "4389600",
    "end": "4394880"
  },
  {
    "text": "and so a lot of the philosophy for me that's gone into how do I evolve Ember data into warp drive is how do I set us",
    "start": "4394880",
    "end": "4402199"
  },
  {
    "text": "up for the next 10 years how do I set set you up to fall into the pit of success in a way that you can start",
    "start": "4402199",
    "end": "4409840"
  },
  {
    "text": "small start with what you need and continue to scale whether it's scale the amount of data you're using scale the",
    "start": "4409840",
    "end": "4416000"
  },
  {
    "text": "size of the team you have scale the size of your application code base how do you scale across all these different factors",
    "start": "4416000",
    "end": "4422520"
  },
  {
    "text": "for a decade so you can get to that point so much of the design goes into that and that leads to some really",
    "start": "4422520",
    "end": "4428760"
  },
  {
    "text": "interesting tradeoffs because sometimes it means that the ergonomics of the simplest fetch case seem a little bit",
    "start": "4428760",
    "end": "4435480"
  },
  {
    "text": "overbearing you're like well why did you do it this way Chris like this seems a little bit more verbose than it needed to be and it's like well it is slightly",
    "start": "4435480",
    "end": "4442880"
  },
  {
    "text": "more verbose up front but when you start bringing in all the other pieces and you",
    "start": "4442880",
    "end": "4448000"
  },
  {
    "text": "start going a lot now my app needs this and now my app needs this and now my app needs this they will very naturally",
    "start": "4448000",
    "end": "4453840"
  },
  {
    "text": "extend into this and instead of you getting into the problem where like oh",
    "start": "4453840",
    "end": "4459920"
  },
  {
    "text": "now I need to go redesign everything because it turns out that this API wasn't sufficient enough for all these other use cases I'm now thinking of it",
    "start": "4459920",
    "end": "4466239"
  },
  {
    "text": "just kind of naturally scales and works yeah that that that kind of thing has always been and not just on the Ember dat side but that has always been um",
    "start": "4466239",
    "end": "4473440"
  },
  {
    "text": "part of the struggle of both the good and the bad of the JavaScript ecosystem right part of the good is that like it",
    "start": "4473440",
    "end": "4480800"
  },
  {
    "text": "continues to expand there's like always it's always dominated by new developers because it's like doubling every so",
    "start": "4480800",
    "end": "4486880"
  },
  {
    "text": "often and so like stick around long enough and you will be in the minority of people who've been around a long time",
    "start": "4486880",
    "end": "4491920"
  },
  {
    "text": "right like there's a constant influx of new people who don't have all the history that's great it's there because",
    "start": "4491920",
    "end": "4498000"
  },
  {
    "text": "it's like one of the most accessible programming communities that people get started and launch their careers in and like I'm fully on board with that it's",
    "start": "4498000",
    "end": "4504520"
  },
  {
    "text": "why we also care a lot about trying to like have good learning materials and be a community that is tools for every",
    "start": "4504520",
    "end": "4510400"
  },
  {
    "text": "developers along the whole Continuum of their career um but at the same time it does mean that like people don't know",
    "start": "4510400",
    "end": "4517120"
  },
  {
    "text": "what they need yet right when they're just getting started on an application and you know when when you you know that",
    "start": "4517120",
    "end": "4524280"
  },
  {
    "text": "like if you're if you're actually successful with this app and people are still working on it two years from now",
    "start": "4524280",
    "end": "4529400"
  },
  {
    "text": "there's things you're going to wish you did right right but those things are not obvious in the beginning and so it",
    "start": "4529400",
    "end": "4535719"
  },
  {
    "text": "doesn't really work as a marketing strategy to tell people you got to just eat your veggies like do the right thing from the beginning right you have to try",
    "start": "4535719",
    "end": "4541000"
  },
  {
    "text": "to find really clever ways to bend the curve where you can like scale gradually",
    "start": "4541000",
    "end": "4546280"
  },
  {
    "text": "with them but it's hard to um it's it's a hard pitch to make at day one or like when people are comparing toy examples",
    "start": "4546280",
    "end": "4553120"
  },
  {
    "text": "of Frameworks right it's it's very easy to come up with to come out with misleading conclusions right because",
    "start": "4553120",
    "end": "4560560"
  },
  {
    "text": "like we we know the reality of working in a real code like you don't need to be a 10-year-old code base to have these",
    "start": "4560560",
    "end": "4565960"
  },
  {
    "text": "problems right by the time you're a year in if you have a lot of developers like you can be in a massive disaster right",
    "start": "4565960",
    "end": "4572600"
  },
  {
    "text": "if you if you optimized for the toy situation so but at the same time like it has to actually be fun to kick off a",
    "start": "4572600",
    "end": "4579159"
  },
  {
    "text": "new app in it like it shouldn't suck right we're not trying to make uh Enterprise Java be here right so that's",
    "start": "4579159",
    "end": "4587080"
  },
  {
    "text": "that's part of what I see as the fun of the whole of trying to solve the whole problem like I do in fact care about solving the big scale problems and I",
    "start": "4587080",
    "end": "4593760"
  },
  {
    "text": "want to do that elegantly and you know in a portable way like an upgradeable",
    "start": "4593760",
    "end": "4598880"
  },
  {
    "text": "way so much of what when you know when when Chris doin was talking about um like universality falling out of the",
    "start": "4598880",
    "end": "4604960"
  },
  {
    "text": "just the desire for upgradeability I think that's why you see that such themes about language specs standards",
    "start": "4604960",
    "end": "4611560"
  },
  {
    "text": "specifications super clear API boundaries coming out of this project is because we care so much",
    "start": "4611560",
    "end": "4617239"
  },
  {
    "text": "about upgradability all those things fall out as necessary right like if um like we helped write the es module spec",
    "start": "4617239",
    "end": "4624120"
  },
  {
    "text": "because we need we knew we needed a stable way to express modules that was going to be stable far into the future",
    "start": "4624120",
    "end": "4631320"
  },
  {
    "text": "and so like you needed a spec and the same goes for like promises promises A+ we helped right because like everybody",
    "start": "4631320",
    "end": "4637400"
  },
  {
    "text": "needs something like that let's try to agree and so now like yeah you don't have to go rewrite your promise",
    "start": "4637400",
    "end": "4642600"
  },
  {
    "text": "implementations all of that comes from like that's how you get upgrade ability right is like actually getting people to agree on what stuff means in the",
    "start": "4642600",
    "end": "4649600"
  },
  {
    "text": "interface sense so that the implementations can evolve wildly over time so just on this idea of like",
    "start": "4649600",
    "end": "4655840"
  },
  {
    "text": "upgradability like I think that's one of our key strengths in Ember and I've seen",
    "start": "4655840",
    "end": "4661000"
  },
  {
    "text": "it so many times where somebody's comparing these toy examples that Ed's talking about and they spend two weeks",
    "start": "4661000",
    "end": "4667440"
  },
  {
    "text": "on one framework two weeks on another framework two weeks on another framework and they just compare what you can",
    "start": "4667440",
    "end": "4672840"
  },
  {
    "text": "achieve and in that game game Ember will lose 90% of the time because it's more",
    "start": "4672840",
    "end": "4679760"
  },
  {
    "text": "than you need or it's clunky or whatever the whatever the negative thing you want to put in there but as soon as you cross",
    "start": "4679760",
    "end": "4686159"
  },
  {
    "text": "a six we boundary and there's another minor release of Ember that you can upgrade with one command that not only",
    "start": "4686159",
    "end": "4694520"
  },
  {
    "text": "changes your libraries it also changes your blueprints in a way that keeps up to date Ember starts winning so you have",
    "start": "4694520",
    "end": "4701679"
  },
  {
    "text": "this upgrade ability that keeps you on the latest that gives you new features for free in minor versions and it's just",
    "start": "4701679",
    "end": "4709800"
  },
  {
    "text": "not something that is done in the same way in other Frameworks or communities I",
    "start": "4709800",
    "end": "4716080"
  },
  {
    "text": "think we're going to start winning on the early things too in at least on the data side but it's gonna the amount of",
    "start": "4716080",
    "end": "4721679"
  },
  {
    "text": "things on my road map for the next year are big but it's going to take me a year all right so I want to wrap this up",
    "start": "4721679",
    "end": "4729000"
  },
  {
    "text": "any last thoughts that you want to make sure make it out there for folks before we close uh sure yeah like I could try",
    "start": "4729000",
    "end": "4737159"
  },
  {
    "text": "to put a put a bow on the thoughts that we were sharing and I was trying to trying to riff off of what other folks",
    "start": "4737159",
    "end": "4742480"
  },
  {
    "text": "were saying I think that if you care about building stuer to last you you come up with different choices than just",
    "start": "4742480",
    "end": "4748159"
  },
  {
    "text": "kind of throwing something over the fence and you know there's there's a time for to throw something over the fence thing if you're some agency that",
    "start": "4748159",
    "end": "4754440"
  },
  {
    "text": "throws up a marketing website in it's fixed budget and you never come back to it again fine like go use whatever do",
    "start": "4754440",
    "end": "4760199"
  },
  {
    "text": "whatever works for that but if you care about building apps that last a long time you get there by really getting a",
    "start": "4760199",
    "end": "4765840"
  },
  {
    "text": "group of people to agree on what everything means like what the abstractions really mean in a really",
    "start": "4765840",
    "end": "4772199"
  },
  {
    "text": "crisp way even if the abstractions turn out to be on you want to change later even to change an abstraction you have",
    "start": "4772199",
    "end": "4777360"
  },
  {
    "text": "to really get everybody to understand really what it means and so like there's a whole lot of communication outside of just the code which is where a lot of",
    "start": "4777360",
    "end": "4783639"
  },
  {
    "text": "the secret sauce is for longevity so it's like it standards it's docks it's",
    "start": "4783639",
    "end": "4788679"
  },
  {
    "text": "getting things upstreamed into the language or the next layer down of your spec and um like so",
    "start": "4788679",
    "end": "4795520"
  },
  {
    "text": "I guess I'd say it's a human communication thing that's like that's really how you get it done right sver is",
    "start": "4795520",
    "end": "4800600"
  },
  {
    "text": "not for computers it's for humans to talk to other humans and that's just one example you're speaking my language",
    "start": "4800600",
    "end": "4807320"
  },
  {
    "text": "right there well and I I will just throw one more thing out that i' love to see I feel like you all have long been leading",
    "start": "4807320",
    "end": "4813400"
  },
  {
    "text": "the community on a things and you talked about that of Designing thinking like a language designer and putting things but",
    "start": "4813400",
    "end": "4818880"
  },
  {
    "text": "what I'm loving to see in the current generation is you are not just leading by showing something and trying to get",
    "start": "4818880",
    "end": "4824360"
  },
  {
    "text": "into spec you're making the pieces that make Ember magical pluggable so that other people can take those and plug",
    "start": "4824360",
    "end": "4830840"
  },
  {
    "text": "with those and I think that's another great way to be leading the community forward so very excited to see where",
    "start": "4830840",
    "end": "4836560"
  },
  {
    "text": "this goes awesome well thank you Chris Ed and Chris and I'm kall for all of you",
    "start": "4836560",
    "end": "4844040"
  },
  {
    "text": "listening to JS party we'll catch you again next week",
    "start": "4844040",
    "end": "4850119"
  },
  {
    "text": "there's so much hard-earned wisdom on the Ember team even if you don't use the framework you got to respect the massive",
    "start": "4855639",
    "end": "4862280"
  },
  {
    "text": "contributions they've made in pushing the web platform forward plus plus people stick around for a lengthy bonus",
    "start": "4862280",
    "end": "4868840"
  },
  {
    "text": "on this episode including Chris thurn's theory on complexity the way that we as",
    "start": "4868840",
    "end": "4874360"
  },
  {
    "text": "humans think about complexity is just wrong like too often how we think about complexity is just sugar can I see a",
    "start": "4874360",
    "end": "4881520"
  },
  {
    "text": "mess it's complex did I hide the mess it's no longer complex that doesn't",
    "start": "4881520",
    "end": "4887520"
  },
  {
    "text": "actually change complexity from the fundamental losss of programming if you aren't one of the 300 plus people who",
    "start": "4887520",
    "end": "4893639"
  },
  {
    "text": "directly support JS party and all the developer pods we make here at changelog get in on the action at",
    "start": "4893639",
    "end": "4901440"
  },
  {
    "text": "changelog.md ads magically disappear we send you a sweet sticker pack and more",
    "start": "4906080",
    "end": "4911719"
  },
  {
    "text": "check it out at change.com Plus plus change log Plus+ it's better next up on",
    "start": "4911719",
    "end": "4919000"
  },
  {
    "text": "the Pod Josh Goldberg returns this time he joins Nick and Chris to discuss the",
    "start": "4919000",
    "end": "4924159"
  },
  {
    "text": "latest updates from es lint typescript eslint and the new flat config format",
    "start": "4924159",
    "end": "4929560"
  },
  {
    "text": "come back next week to hear all about it special thanks to our partners at fly.io and to our longtime sponsors Sentry save",
    "start": "4929560",
    "end": "4936960"
  },
  {
    "text": "100 bucks off the team plan by using Code Chang log when you sign up at sentry.io and of course thank you to",
    "start": "4936960",
    "end": "4943600"
  },
  {
    "text": "breakmaster cylinder our beat freaking residents by the way right now BMC is running a Kickstarter to fund his",
    "start": "4943600",
    "end": "4949840"
  },
  {
    "text": "attempt to resore the opening car chase from madmax Fury Road back that if you want it to exist that's all for now but",
    "start": "4949840",
    "end": "4957159"
  },
  {
    "text": "come back and party with us again next week",
    "start": "4957159",
    "end": "4962600"
  },
  {
    "text": "[Music]",
    "start": "4962630",
    "end": "4971709"
  }
]