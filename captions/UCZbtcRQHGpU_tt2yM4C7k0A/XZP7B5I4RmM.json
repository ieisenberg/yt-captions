[
  {
    "text": "bandwith for change log is provided by fastly learn more at fastly.com we move",
    "start": "40",
    "end": "5520"
  },
  {
    "text": "fast and fix things here at change log because of rbar check them out at rar.com and we're hosted on Leno Cloud",
    "start": "5520",
    "end": "11840"
  },
  {
    "text": "servers at the lin.com changelog what's up Gophers it's not too",
    "start": "11840",
    "end": "17320"
  },
  {
    "text": "late if you're planning to attend ccon Cloud native con here in North America later this November know that we have",
    "start": "17320",
    "end": "23720"
  },
  {
    "text": "just entered late registration pricing but you can still save 10% off your registration when you use our code KC na",
    "start": "23720",
    "end": "31439"
  },
  {
    "text": "changelog 19 again that's KY na changelog 19 check the CH for links to",
    "start": "31439",
    "end": "37040"
  },
  {
    "text": "learn more and [Music]",
    "start": "37040",
    "end": "42400"
  },
  {
    "text": "[Music] register welcome to go time a podcast",
    "start": "49150",
    "end": "55760"
  },
  {
    "text": "featuring a diverse panel and special guests discussing Cloud infrastructure just distributed systems microservices",
    "start": "55760",
    "end": "62079"
  },
  {
    "text": "kubernetes Docker oh and also go we record live every Tuesday at 300 p.m.",
    "start": "62079",
    "end": "67439"
  },
  {
    "text": "Eastern new Pacific join the community slack with us in real time during the show in the go time FM channel in go for",
    "start": "67439",
    "end": "73520"
  },
  {
    "text": "slack follow us on Twitter we're at gotime FM listen live at Chang law.com or subscribe at changel law.com gotime",
    "start": "73520",
    "end": "82000"
  },
  {
    "text": "and now on to the show hello and welcome to go time I'm m",
    "start": "82000",
    "end": "90240"
  },
  {
    "text": "today we're talking all about security we know it's important but what else as",
    "start": "90240",
    "end": "95799"
  },
  {
    "text": "Gophers do we need to know we're going to find out and I have a an excellent",
    "start": "95799",
    "end": "101960"
  },
  {
    "text": "concurrence of gophers with me on today's show to discuss this excellent subject I would like to introduce them",
    "start": "101960",
    "end": "109280"
  },
  {
    "text": "now the first person joining us it's Roberto clais hello Roberto hello hello",
    "start": "109280",
    "end": "117159"
  },
  {
    "text": "and also joining us it's only Johan brandor hello Johan hello Matt lovely to",
    "start": "117159",
    "end": "123799"
  },
  {
    "text": "have you on the show lovely to be here oh thank you and last but not least it's",
    "start": "123799",
    "end": "130280"
  },
  {
    "text": "only filipo VOD hello filipo hi Matt hi everyone how are you doing very good",
    "start": "130280",
    "end": "137200"
  },
  {
    "text": "thank you good I'm very excited about this before we start I'd like to just try an experiment with this is a",
    "start": "137200",
    "end": "143720"
  },
  {
    "text": "security podcast I just want to try something bear with me hey Siri Play",
    "start": "143720",
    "end": "148760"
  },
  {
    "text": "Never Going To Give You Up by Rick asley Okay Google Play Never Going To Give You Up by Rick asley Alexa Play Never Going",
    "start": "148760",
    "end": "154800"
  },
  {
    "text": "To Give You Up by Rick asley so I just want to see if that does hack anyone's",
    "start": "154800",
    "end": "160040"
  },
  {
    "text": "home devices and please let me know in the slack Channel or on Twitter if it does do you just hack yourself I just",
    "start": "160040",
    "end": "167239"
  },
  {
    "text": "hacked myself it's not hacking if you hack yourself is it that's a pretty",
    "start": "167239",
    "end": "172360"
  },
  {
    "text": "common report to any back Bounty program yeah I bet so let's get stuck into this okay",
    "start": "172360",
    "end": "181040"
  },
  {
    "text": "now perfect security as we know is impossible right or not what do we think",
    "start": "181040",
    "end": "189000"
  },
  {
    "text": "I think that uh perfect security is when you are secure enough so that it becomes so hard to hack you that is actually",
    "start": "189000",
    "end": "195440"
  },
  {
    "text": "cheaper to hug someone else and that that is what we should all strive to achieve so that's the equivalent of when",
    "start": "195440",
    "end": "201840"
  },
  {
    "text": "you're running away from a bear you don't have to be faster than the bear you only have to be faster than your",
    "start": "201840",
    "end": "207080"
  },
  {
    "text": "friends or kids yeah just this case you can't you're not allowed to carry",
    "start": "207080",
    "end": "212319"
  },
  {
    "text": "someone with you that is slower than you yes right so what do you mean by that so",
    "start": "212319",
    "end": "217439"
  },
  {
    "text": "literally you just make it hard enough that people don't bother yeah I mean",
    "start": "217439",
    "end": "223280"
  },
  {
    "text": "hackers are after money right and so if it becomes not convenient for them to hack your service they will hack",
    "start": "223280",
    "end": "229959"
  },
  {
    "text": "something which they actually can gain from the effort yeah and even attackers",
    "start": "229959",
    "end": "235079"
  },
  {
    "text": "that are not specifically after money all attackers have budgets and you know men managers and schedules and jira",
    "start": "235079",
    "end": "242920"
  },
  {
    "text": "Boards or who knows what they all have a Target and the budget to achieve it what",
    "start": "242920",
    "end": "249079"
  },
  {
    "text": "do you mean hackers like do Agile is that what you mean you'd be surprised some of the leaks suggested that some of",
    "start": "249079",
    "end": "255439"
  },
  {
    "text": "the state sponsored hackers atual used something yearly similar to jira it was",
    "start": "255439",
    "end": "262320"
  },
  {
    "text": "kind of weird that is weird I'm surprised they get any hacking done if they're using",
    "start": "262320",
    "end": "268440"
  },
  {
    "text": "jir imagine trying to meet your hack quotas when you have to fit it into two",
    "start": "268600",
    "end": "274199"
  },
  {
    "text": "week Sprints yeah imagine that and they've got like performance reviews you've really changed how I thought",
    "start": "274199",
    "end": "279280"
  },
  {
    "text": "about hackers I have to admit it's very uny now yeah I thought they were in a",
    "start": "279280",
    "end": "284680"
  },
  {
    "text": "dark room screens everywhere you know type in there's a 3D cube that has to",
    "start": "284680",
    "end": "290360"
  },
  {
    "text": "complete and that's how they know they're in yeah the only thing that actually is left is the hoodie they",
    "start": "290360",
    "end": "295720"
  },
  {
    "text": "probably wear hoodies but everything else is more corporate than most companies now nowadays oh okay we're",
    "start": "295720",
    "end": "300759"
  },
  {
    "text": "already learning so much on this this is brilliant you you all have quite good security credentials maybe we could just",
    "start": "300759",
    "end": "306120"
  },
  {
    "text": "have a quick uh round go around the table and just tell us a little bit about what you do and how you do it",
    "start": "306120",
    "end": "311560"
  },
  {
    "text": "Roberto where do you work so I work at Google and I do security announcement",
    "start": "311560",
    "end": "317120"
  },
  {
    "text": "for the web I do all the things web security especially the things that we can change in the web platform so it",
    "start": "317120",
    "end": "323199"
  },
  {
    "text": "becomes easier to secure services and uh easier to get it right can you tell us",
    "start": "323199",
    "end": "329680"
  },
  {
    "text": "what you're working on or is it no no it's all my work is public so we're currently work on uh preventing some",
    "start": "329680",
    "end": "335600"
  },
  {
    "text": "cross origin leaks uh which means that you know when you write your web application you're supposed to be able",
    "start": "335600",
    "end": "341400"
  },
  {
    "text": "to feel relaxed that everything that stays on your origin on your domain is",
    "start": "341400",
    "end": "346720"
  },
  {
    "text": "yours and all other domains cannot access your stuff that's the Assumption you should be working under it's not",
    "start": "346720",
    "end": "353759"
  },
  {
    "text": "true so I'm working on making the assumtion better and More close CL ER to",
    "start": "353759",
    "end": "359800"
  },
  {
    "text": "the truth let's put it this way very interesting stuff and how about you Johan I know that you're a a gopher a",
    "start": "359800",
    "end": "367199"
  },
  {
    "text": "writer speaker like Roberto yeah so I recently started a new role at utility",
    "start": "367199",
    "end": "373400"
  },
  {
    "text": "Warehouse working on security so I've been looking at some of the stuff they're doing but mostly a lot of my",
    "start": "373400",
    "end": "381400"
  },
  {
    "text": "security stuff has been in open source as well I'm interested in security and",
    "start": "381400",
    "end": "387639"
  },
  {
    "text": "I've made a few open source packages that revolver on security but I don't work for Google so I wouldn't say I have",
    "start": "387639",
    "end": "394240"
  },
  {
    "text": "the same exposure as Roberto and but filipo you do work at Google don't you I",
    "start": "394240",
    "end": "399319"
  },
  {
    "text": "do but I work on something simpler than securing the web platform I work on",
    "start": "399319",
    "end": "404680"
  },
  {
    "text": "securing the go standard Library I'm the primary security coordinator for the go",
    "start": "404680",
    "end": "410520"
  },
  {
    "text": "project and I the crypto goer on the team awesome that's very exciting cool",
    "start": "410520",
    "end": "416840"
  },
  {
    "text": "so credentials I believe a plenty on this so what are the big challenges that",
    "start": "416840",
    "end": "423000"
  },
  {
    "text": "we're facing then and in particular from a go perspective are there any things",
    "start": "423000",
    "end": "428639"
  },
  {
    "text": "that we should all like what are the things that every gopher needs to know about security I think yes there are",
    "start": "428639",
    "end": "435199"
  },
  {
    "text": "many things that um all goers should be aware of uh but I have to say if you",
    "start": "435199",
    "end": "440919"
  },
  {
    "text": "write go you're are lucky because um I think HTML template library for example",
    "start": "440919",
    "end": "446879"
  },
  {
    "text": "is a piece of art on a security stand point I mean could be improved but compared with any other standard library",
    "start": "446879",
    "end": "453560"
  },
  {
    "text": "or even external library that we have in all other languages this is very nice",
    "start": "453560",
    "end": "459080"
  },
  {
    "text": "and uh protects from xss and other kind of nasty stuff we are less lucky on other standpoints which would probably",
    "start": "459080",
    "end": "465639"
  },
  {
    "text": "get to let's say that forgo is easier yeah I I wasn't actually kidding when I said that I find securing the ghost",
    "start": "465639",
    "end": "472720"
  },
  {
    "text": "standard Library simpler than the web platform because it's both modern and written by people that came before me me",
    "start": "472720",
    "end": "479720"
  },
  {
    "text": "in such a way that it actually has way less complexity and most of security",
    "start": "479720",
    "end": "486000"
  },
  {
    "text": "issues stem or hide in complexity anyway that's interesting so there's there's an",
    "start": "486000",
    "end": "491159"
  },
  {
    "text": "interesting lesson in that anyway then because I always like I always drive towards Simplicity for the sake of the",
    "start": "491159",
    "end": "498039"
  },
  {
    "text": "fact that it's easier to maintain and um easier to work with but of course it's",
    "start": "498039",
    "end": "503560"
  },
  {
    "text": "also more secure just naturally if it's simpler then absolutely yes the parts of",
    "start": "503560",
    "end": "510360"
  },
  {
    "text": "the standard Library where we had most issues have always been the ones that have the most complexity for necessity",
    "start": "510360",
    "end": "518120"
  },
  {
    "text": "like the HTTP stack the TLs stack the whole go-to but some of the reasons we",
    "start": "518120",
    "end": "523599"
  },
  {
    "text": "don't have nearly as many security issues as large toolkits like op SSL in",
    "start": "523599",
    "end": "529000"
  },
  {
    "text": "our TLS stack is that we Implement maybe 10% of the standards uh we Implement",
    "start": "529000",
    "end": "535480"
  },
  {
    "text": "what's needed to make it work to be as useful as it needs to be to get the job done but then it's so many fewer lines",
    "start": "535480",
    "end": "544000"
  },
  {
    "text": "of code that it's easier to audit um it's easier to reason about it's easy to review in code review and simply it",
    "start": "544000",
    "end": "551640"
  },
  {
    "text": "doesn't have as much emergent Behavior Uh a lot of the job of the security researcher is to understand the system",
    "start": "551640",
    "end": "558880"
  },
  {
    "text": "better than who wrote it and find behaviors that emerged from the complex",
    "start": "558880",
    "end": "564519"
  },
  {
    "text": "combination of different parts of the system yeah if if I might add one thing that I really love about go is that we",
    "start": "564519",
    "end": "571399"
  },
  {
    "text": "have some ideas in the security team is that if your code compiles it should be",
    "start": "571399",
    "end": "576440"
  },
  {
    "text": "secure go type system really helps in that sense even if we don't just consider the standard Library which is",
    "start": "576440",
    "end": "582800"
  },
  {
    "text": "pretty good on this matter when you write your own libraries you can design",
    "start": "582800",
    "end": "587880"
  },
  {
    "text": "your apis in a way so that for example let's say we don't want to write raw bytes in an HTP writer we can just come",
    "start": "587880",
    "end": "594720"
  },
  {
    "text": "up with something that accept a secure writer and the only library that is allowed to construct that thing",
    "start": "594720",
    "end": "599959"
  },
  {
    "text": "sanitizes the string you pass in and then you're done you know that if your code compiles you don't have any kind of",
    "start": "599959",
    "end": "606079"
  },
  {
    "text": "nasty injections even for the SQL package it's pretty easy to wrap it with",
    "start": "606079",
    "end": "612000"
  },
  {
    "text": "a wrapper that doesn't allow you to pass a string as a Constructor for a query but it must be a constant compile time",
    "start": "612000",
    "end": "618760"
  },
  {
    "text": "string so just you don't export the type that accepts as a in the signature and",
    "start": "618760",
    "end": "624680"
  },
  {
    "text": "that means that the only way to satisfy that um constraint is to pass in um compile time constant I see so do you",
    "start": "624680",
    "end": "632519"
  },
  {
    "text": "find that's good advice generally then is to have those little abstractions to",
    "start": "632519",
    "end": "638200"
  },
  {
    "text": "add Extra Protection is that a sensible thing if you want to scale if you don't",
    "start": "638200",
    "end": "643240"
  },
  {
    "text": "care about scaling and like you're writing something that you're going to run once and you are like five people",
    "start": "643240",
    "end": "648800"
  },
  {
    "text": "maintaining it uh fine but if you want to scale you need to have compilers and",
    "start": "648800",
    "end": "654959"
  },
  {
    "text": "tools helping you out yeah that leads straight into uh safe defaults which is",
    "start": "654959",
    "end": "660079"
  },
  {
    "text": "basically what I try to spend most of my time on people you can't expect people to read documentation in order to be",
    "start": "660079",
    "end": "665839"
  },
  {
    "text": "secure because just like attackers have budgets we all know programmers have something to do and no time to learn",
    "start": "665839",
    "end": "672519"
  },
  {
    "text": "everything about a system before they use it and so the system should do the safe thing first return an error if it",
    "start": "672519",
    "end": "678959"
  },
  {
    "text": "needs uh explicit approval and to do something unsafe and document that unsafe thing well something I'm a really",
    "start": "678959",
    "end": "686519"
  },
  {
    "text": "big fan of is giving absurdly annoying names to unsave things there was already",
    "start": "686519",
    "end": "692279"
  },
  {
    "text": "insecure skip verify but then they wanted me to add a variant of a hash that she shouldn't be really using so I",
    "start": "692279",
    "end": "699000"
  },
  {
    "text": "just called it new Legacy and then I started going crazy with it and I think the next thing I'm adding is a new",
    "start": "699000",
    "end": "706560"
  },
  {
    "text": "unprotected chaa 20 stream as a symbol name because I really don't want you to",
    "start": "706560",
    "end": "713000"
  },
  {
    "text": "use that that's awesome that's a great idea",
    "start": "713000",
    "end": "719560"
  },
  {
    "text": "so Roberto you mentioned sequel I I was once in a a hotel and I was signing into",
    "start": "719560",
    "end": "727519"
  },
  {
    "text": "the hotel internet some hotels they charge you a lot of money for the internet and I accidentally pressed like",
    "start": "727519",
    "end": "733199"
  },
  {
    "text": "a single quote Mark accidentally yeah genuinely and I got an error a SQL error",
    "start": "733199",
    "end": "738880"
  },
  {
    "text": "and I thought oh hang on that means this probably is kind of susceptible to SQL injections right and Matt let me stop",
    "start": "738880",
    "end": "745440"
  },
  {
    "text": "you before you cop up to a cfaa violation on on record come",
    "start": "745440",
    "end": "752079"
  },
  {
    "text": "on okay could you be on all of my calls forever please really used that yeah",
    "start": "752079",
    "end": "757880"
  },
  {
    "text": "anyway just uh so I just I didn't do anything with it but what you can do is modify the SQL string essentially if",
    "start": "757880",
    "end": "765079"
  },
  {
    "text": "that probably what they were doing was just concatenating strings to build up the SQL query and that's not great",
    "start": "765079",
    "end": "771320"
  },
  {
    "text": "because if you put a closing quoting suddenly you're out of whatever the whatever the query they were doing and",
    "start": "771320",
    "end": "777560"
  },
  {
    "text": "you're into a whole world of you can really do anything yeah that is one of",
    "start": "777560",
    "end": "782920"
  },
  {
    "text": "the major scenes of security mixing data and code that is one of the few things",
    "start": "782920",
    "end": "788959"
  },
  {
    "text": "that we got wrong in the early beginning of uh computer science HTML has that",
    "start": "788959",
    "end": "794360"
  },
  {
    "text": "problem XML as the problem SQL as the problem and every time you see the problem vulnerabilities arise so yeah",
    "start": "794360",
    "end": "802079"
  },
  {
    "text": "there is been a problem that has been around since the web started existing and um we haven't solved it yet so every",
    "start": "802079",
    "end": "809399"
  },
  {
    "text": "time someone thinks okay so I'm mixing some kind of data and some kind of code",
    "start": "809399",
    "end": "814920"
  },
  {
    "text": "you should really put a safe type wrapper around it so that the type system actually helps you those are not",
    "start": "814920",
    "end": "820639"
  },
  {
    "text": "strings you're not you concatenating those are inputs and source code they",
    "start": "820639",
    "end": "825839"
  },
  {
    "text": "should have different types so would you do like type secure string string so",
    "start": "825839",
    "end": "831360"
  },
  {
    "text": "that it's essentially a new type Based On A String or would you would it be a struct would it be something else",
    "start": "831360",
    "end": "836519"
  },
  {
    "text": "completely an interface I would go for an P struct so with an unexported field",
    "start": "836519",
    "end": "841959"
  },
  {
    "text": "and uh the SQL package that constructs the struct should be called something like do not import this package or else",
    "start": "841959",
    "end": "849800"
  },
  {
    "text": "right or statically enforced that you don't import that package so the only safe wrappers and like uh the SQL",
    "start": "849800",
    "end": "856639"
  },
  {
    "text": "package prepares your statements so you don't get this wrong Johan I'm actually",
    "start": "856639",
    "end": "862040"
  },
  {
    "text": "interested in your opinion on this because you happen to be on the user side because Philip and I are more on the designer and provider side so",
    "start": "862040",
    "end": "869680"
  },
  {
    "text": "what's your user experience in securing go applications because I honestly haven't done that philippo mentioned it",
    "start": "869680",
    "end": "875399"
  },
  {
    "text": "already that the go stand Library what it does really well is secure by default and so we mentioned the insecure",
    "start": "875399",
    "end": "882000"
  },
  {
    "text": "skate verify that you literally have to enable explicitly if you want to use TLS without verifying that you're talking to",
    "start": "882000",
    "end": "888800"
  },
  {
    "text": "the correct host and a user most of the time whatever you write by default is is",
    "start": "888800",
    "end": "895800"
  },
  {
    "text": "secure which which is uh super useful obviously because if you you're coming from a language like PHP or even python",
    "start": "895800",
    "end": "901920"
  },
  {
    "text": "python you have to jump through extreme Hoops to enable TLS on a server and go obviously makes this super easy from the",
    "start": "901920",
    "end": "908959"
  },
  {
    "text": "start did you ever find some code that accidentally imported stuff like text template instead of HTML template this",
    "start": "908959",
    "end": "914959"
  },
  {
    "text": "is when I became a gopher which was only about three years ago this kind of thing was already like no no no no definitely",
    "start": "914959",
    "end": "921839"
  },
  {
    "text": "make sure you don't do this so we should we should run back on that actually because one of the kind of easiest",
    "start": "921839",
    "end": "927600"
  },
  {
    "text": "mistakes to make when you're working with HTML templates which are great is to use the wrong templating language so",
    "start": "927600",
    "end": "933440"
  },
  {
    "text": "you don't end up sanitizing the uh inputs so there's the two different template languages in the standard",
    "start": "933440",
    "end": "939800"
  },
  {
    "text": "Library the HTML template and the text template and they both do templating but",
    "start": "939800",
    "end": "945800"
  },
  {
    "text": "one of them is secure for the web and one of them is not so whenever you're using templates to render your website",
    "start": "945800",
    "end": "951560"
  },
  {
    "text": "make sure you're using the HTML template package yeah this is the same issue that",
    "start": "951560",
    "end": "957000"
  },
  {
    "text": "we have with math Rand and crypto Rand and every week I find someone using MAF",
    "start": "957000",
    "end": "962639"
  },
  {
    "text": "Rand somewhere where security is relevant and sometimes people don't really think about it because for",
    "start": "962639",
    "end": "968240"
  },
  {
    "text": "example it's like I don't know I need to select load balancer backend I can do that with my friend right there's no",
    "start": "968240",
    "end": "974120"
  },
  {
    "text": "security involed here well except that an attacker that can predict the ordering can send all the slow requests",
    "start": "974120",
    "end": "980360"
  },
  {
    "text": "to the same back end for example and yes math Rand is completely predictable uh",
    "start": "980360",
    "end": "985839"
  },
  {
    "text": "by an attacker while crypto Rand is you know what you can actually use to generate keys and it's the same problem",
    "start": "985839",
    "end": "991519"
  },
  {
    "text": "as hmail template and text template what's the tradeoff though why wouldn't we always just use the crypto Rand is it",
    "start": "991519",
    "end": "998680"
  },
  {
    "text": "slower uh there are opinions that there are people that have opinions about the",
    "start": "998680",
    "end": "1004079"
  },
  {
    "text": "performance of cryptand and honestly I haven't seen many examples of that being",
    "start": "1004079",
    "end": "1012199"
  },
  {
    "text": "a concern that was actually [Music]",
    "start": "1012199",
    "end": "1017480"
  },
  {
    "text": "relevant [Music]",
    "start": "1017480",
    "end": "1023120"
  },
  {
    "text": "this episode is brought to you by team City team city is a continuous integration and delivery server",
    "start": "1024720",
    "end": "1030558"
  },
  {
    "text": "developed by jetbrains that helps software teams release their software faster get fast feedback on every commit",
    "start": "1030559",
    "end": "1036360"
  },
  {
    "text": "quickly investigate build failures and so much more in this segment I asked build engineer ol gavage from wargaming",
    "start": "1036360",
    "end": "1042280"
  },
  {
    "text": "who's been using team City for seven years about what he loves about team City so I love how it's easy it is to",
    "start": "1042280",
    "end": "1048558"
  },
  {
    "text": "manage team C on a daily basis um I don't have to hack any mysterious XML to",
    "start": "1048559",
    "end": "1053760"
  },
  {
    "text": "configure it or make changes uh though there is an ability to do that uh I choose not to uh I do most of my work",
    "start": "1053760",
    "end": "1060960"
  },
  {
    "text": "through the UI I also like the fact that I can customize a lot of Its Behavior either through the UI or through custom",
    "start": "1060960",
    "end": "1068000"
  },
  {
    "text": "programs that I wrote or through uh plugins uh with their open API I don't",
    "start": "1068000",
    "end": "1073559"
  },
  {
    "text": "think I could do my job without the support that team City development team provides uh and I use that support at",
    "start": "1073559",
    "end": "1080280"
  },
  {
    "text": "least weekly whether it's for new features that I'm interested in or for bugs that we find uh they're very",
    "start": "1080280",
    "end": "1085679"
  },
  {
    "text": "collaborative and you know honestly over the past 10 years uh they've made my job so much easier you know I really owe",
    "start": "1085679",
    "end": "1091960"
  },
  {
    "text": "them all right to get start with Team City headed team city.com go time to learn more the professional version of",
    "start": "1091960",
    "end": "1097640"
  },
  {
    "text": "Team city is free even for commercial use for large ORS you want to check out the team City Enterprise Edition and",
    "start": "1097640",
    "end": "1104159"
  },
  {
    "text": "right now there's a 50% discount for our listeners on team City Enterprise and as",
    "start": "1104159",
    "end": "1109960"
  },
  {
    "text": "a bonus if you want a personal intro to our friends at Team City they'll help you through your cicd path email me Adam",
    "start": "1109960",
    "end": "1117240"
  },
  {
    "text": "change.com head to team.com go tundle learn more and give it a",
    "start": "1117240",
    "end": "1122960"
  },
  {
    "text": "[Music]",
    "start": "1126350",
    "end": "1135520"
  },
  {
    "text": "try since I'm kind of a passionate about performance I spent a week trying to",
    "start": "1135520",
    "end": "1141280"
  },
  {
    "text": "optimize custommade random generator math-based and not CCO based that went",
    "start": "1141280",
    "end": "1147320"
  },
  {
    "text": "fast enough to be faster than a buffered crypto run it's not that easy you you",
    "start": "1147320",
    "end": "1154480"
  },
  {
    "text": "need to think a lot to make it faster than cryptand especially if you use a buffered cryptand reader even if you",
    "start": "1154480",
    "end": "1160480"
  },
  {
    "text": "have the remote suspect that some kind of random could affect your confidentiality Integrity or",
    "start": "1160480",
    "end": "1166200"
  },
  {
    "text": "availability in your service use crypto is fast enough but we mentioned why not",
    "start": "1166200",
    "end": "1173720"
  },
  {
    "text": "always use crypto R I guess you want to use math run when you want predictable Randomness right when you want",
    "start": "1173720",
    "end": "1179760"
  },
  {
    "text": "reproducible Randomness like when you want your tests to always do the same",
    "start": "1179760",
    "end": "1185080"
  },
  {
    "text": "yes like if you want don't want two different test runs to do two different things um then yes you want my friend",
    "start": "1185080",
    "end": "1192799"
  },
  {
    "text": "but that's the only example I can think of is tests maybe you folks can think of a few others but",
    "start": "1192799",
    "end": "1198840"
  },
  {
    "text": "they're very specific even with tests maybe use a random seed for your random",
    "start": "1198840",
    "end": "1206679"
  },
  {
    "text": "and then log the seed if you fail your test because you want your test to be",
    "start": "1206679",
    "end": "1212360"
  },
  {
    "text": "random if the runtime Is Random so the test should be as close to reality as possible so use a math random maybe in",
    "start": "1212360",
    "end": "1218720"
  },
  {
    "text": "tests but use a different seed every time so that is some if a race is is",
    "start": "1218720",
    "end": "1224240"
  },
  {
    "text": "there you see it oh that's a very interesting point yes never thought of that because of course making the random",
    "start": "1224240",
    "end": "1230760"
  },
  {
    "text": "sequence predictable for testing is obviously I think the natural way you would you'd think about that but it's a",
    "start": "1230760",
    "end": "1236480"
  },
  {
    "text": "good point if you're what you're testing has those random elements then you sort of want those to be run as often as as",
    "start": "1236480",
    "end": "1243760"
  },
  {
    "text": "you can yeah yeah as long as you log the the seed so that then you don't have to",
    "start": "1243760",
    "end": "1249240"
  },
  {
    "text": "R run it a million times to reproduce it yes not speaking from experience here",
    "start": "1249240",
    "end": "1254360"
  },
  {
    "text": "not at all yeah about that I want want to talk about one thing today it was a gas I",
    "start": "1254360",
    "end": "1262520"
  },
  {
    "text": "don't know how many people know about this but I actually found that to improve broadly improve my um security and actually the quality of my code so",
    "start": "1262520",
    "end": "1269679"
  },
  {
    "text": "for those who don't know about this goas is a tool that allows you to compile your code in a different way and you",
    "start": "1269679",
    "end": "1275360"
  },
  {
    "text": "just have to implement a fuds function that accepts a slice of bytes and returns an integer and if you implement",
    "start": "1275360",
    "end": "1281320"
  },
  {
    "text": "that correctly goof has adds a lot more value to your tests because it tries see",
    "start": "1281320",
    "end": "1286600"
  },
  {
    "text": "the random input and and tries to explore all your code so it checks when some code was executed and when not and",
    "start": "1286600",
    "end": "1293159"
  },
  {
    "text": "just keeps randomizing until gets a good coverage of your code and you would be surprised to see how many bugs I found",
    "start": "1293159",
    "end": "1299600"
  },
  {
    "text": "in code that I really trusted by just going with like a simple go fuz function",
    "start": "1299600",
    "end": "1305360"
  },
  {
    "text": "takes a minute to write go go fuz is amazing um the folks OSS fuz are now",
    "start": "1305360",
    "end": "1312799"
  },
  {
    "text": "running it continuously on some of the standard Library fers written by Dimitri",
    "start": "1312799",
    "end": "1319120"
  },
  {
    "text": "Dimitri vov right Dimitri yeah probably mispronounced that apologies that code",
    "start": "1319120",
    "end": "1324240"
  },
  {
    "text": "ajas on the coder bag before we shipped it in go13 it saved me the whole rig",
    "start": "1324240",
    "end": "1330200"
  },
  {
    "text": "marel of going through the security ruce process and it stopped it uh before reaching production gfas is amazing and",
    "start": "1330200",
    "end": "1337760"
  },
  {
    "text": "you don't only use it for finding you know panics and stuff like that that's what it finds by itself but you can use",
    "start": "1337760",
    "end": "1344760"
  },
  {
    "text": "it for example for enforce any invariant for example if you are reusing buffers",
    "start": "1344760",
    "end": "1350640"
  },
  {
    "text": "for something you can uh just randomize uh the buffers before you call some",
    "start": "1350640",
    "end": "1357279"
  },
  {
    "text": "decoder and ensure that the old buffer does not influence the new result any",
    "start": "1357279",
    "end": "1363440"
  },
  {
    "text": "other number of invariants anything you can write in the Faz function to say this should always be true and panic if",
    "start": "1363440",
    "end": "1369960"
  },
  {
    "text": "it's not true goaz can help explore until it finds a case in which it does",
    "start": "1369960",
    "end": "1375520"
  },
  {
    "text": "something you didn't expect do we want to take a step back back and just talk a little bit about what fuzzing is for",
    "start": "1375520",
    "end": "1380880"
  },
  {
    "text": "those who might not be familiar with it I mean so we discussed the the package go fuss here which is go specific",
    "start": "1380880",
    "end": "1386799"
  },
  {
    "text": "package for fuzzing but what fuzzing means for a user is for example if you have a function that handles user input",
    "start": "1386799",
    "end": "1394559"
  },
  {
    "text": "then you kind of think about things that a user might put there and you try to protect against like closing brackets",
    "start": "1394559",
    "end": "1399760"
  },
  {
    "text": "and things like that but what you might not realize is that there are automated tools that can handle things that you",
    "start": "1399760",
    "end": "1406360"
  },
  {
    "text": "couldn't think of so and you would have to try very hard to produce in a test that might end up crashing your",
    "start": "1406360",
    "end": "1412440"
  },
  {
    "text": "application and so fuzzing is a way of automatically finding problematic",
    "start": "1412440",
    "end": "1418400"
  },
  {
    "text": "strings or or sequences of bites that can cause unexpected behavior in your",
    "start": "1418400",
    "end": "1423799"
  },
  {
    "text": "application and it does that not just by kind of hammering it with random data it also instruments your code to see like",
    "start": "1423799",
    "end": "1429960"
  },
  {
    "text": "oh it goes into this Branch if I give these btes maybe I'll try this sequence of bites afterwards so it's a really",
    "start": "1429960",
    "end": "1435799"
  },
  {
    "text": "powerful tool for exploring functions that expect arbitrary input don't crash or misbehave and uh it's",
    "start": "1435799",
    "end": "1443880"
  },
  {
    "text": "something that hackers use as well to try and so a lot of applications that were built back in the day I guess will",
    "start": "1443880",
    "end": "1450039"
  },
  {
    "text": "not have necessarily had fussing performed on them and if you have some IPI that's not rate limited you'll be",
    "start": "1450039",
    "end": "1455799"
  },
  {
    "text": "you can be sure that a hacker is going to be trying to fuz it and find unexpected behavior and uh maybe even",
    "start": "1455799",
    "end": "1462320"
  },
  {
    "text": "something like a remote code execution can come out of it yeah to give a couple of uh common examples of fuzzing for",
    "start": "1462320",
    "end": "1468960"
  },
  {
    "text": "example the Json one we would just take the random string for each fuzzing",
    "start": "1468960",
    "end": "1474480"
  },
  {
    "text": "iteration and pass it to json. decoder uh and see whether decoder did something",
    "start": "1474480",
    "end": "1480200"
  },
  {
    "text": "we didn't expect and it found a panic because it does millions and millions and millions of tries and it learns what",
    "start": "1480200",
    "end": "1486880"
  },
  {
    "text": "things uh trigger certain code paths it rewrites the code just like go tool cover or go test Das cover does and that",
    "start": "1486880",
    "end": "1495279"
  },
  {
    "text": "way it finds a path as joh was saying something that really gets me is that",
    "start": "1495279",
    "end": "1501320"
  },
  {
    "text": "you're right it used to be something that just hackers would write and I never truly understood how we got to",
    "start": "1501320",
    "end": "1508520"
  },
  {
    "text": "that point would you believe a word in which we said yeah writing unit test actually like such a good trick uh",
    "start": "1508520",
    "end": "1515000"
  },
  {
    "text": "unfortunately for some reason just security researchers write unit test for other people's software just to find",
    "start": "1515000",
    "end": "1521159"
  },
  {
    "text": "issues and then they throw them away uh once they're done but fuzzing is like that um security researchers fuzz thing",
    "start": "1521159",
    "end": "1528039"
  },
  {
    "text": "and Report issues they find and then they move on when instead fast test should be in the same uh place where um",
    "start": "1528039",
    "end": "1536559"
  },
  {
    "text": "unit tests and integration tests are should be developed by the application there's even talks of integrating this",
    "start": "1536559",
    "end": "1542039"
  },
  {
    "text": "into the standard Library I think isn't there having fing be part of like a first class sit and of the testing tools",
    "start": "1542039",
    "end": "1548760"
  },
  {
    "text": "isn't there yeah and if there is one more thing very short thing that I might",
    "start": "1548760",
    "end": "1554120"
  },
  {
    "text": "add is that every time your father finds a string that crushes your program add",
    "start": "1554120",
    "end": "1559240"
  },
  {
    "text": "that to unit tests immediately yeahh but yeah I was kind of leading here",
    "start": "1559240",
    "end": "1565240"
  },
  {
    "text": "intentionally because I really want fuzzing to become part of the standard library and there's been a progress on",
    "start": "1565240",
    "end": "1572679"
  },
  {
    "text": "that and I'm trying to think through how that should look like and finding either time or people interested in working on",
    "start": "1572679",
    "end": "1578679"
  },
  {
    "text": "that because it would be amazing to have just Funk fuz Fu that for now takes a b",
    "start": "1578679",
    "end": "1584559"
  },
  {
    "text": "SLI but maybe can take any types that we randomize and then it can just do the",
    "start": "1584559",
    "end": "1590480"
  },
  {
    "text": "thing just like go test and does benchmarks as well you mentioned the",
    "start": "1590480",
    "end": "1595799"
  },
  {
    "text": "Json package which to me is the perfect use case for fuzzing because it's literally deserializing strings but what",
    "start": "1595799",
    "end": "1603120"
  },
  {
    "text": "about if you've just got a function where you're like you're going to add make a greeting and say hello filipo and",
    "start": "1603120",
    "end": "1609360"
  },
  {
    "text": "you're just taking the name as a string would you even fuzz functions like that there's a return of of investment here",
    "start": "1609360",
    "end": "1616440"
  },
  {
    "text": "in the mount of effort you put in just like you wouldn't write a number of tests for that function right you would",
    "start": "1616440",
    "end": "1622320"
  },
  {
    "text": "probably just write one quick uh test and not start testing a bunch of Ed Edge cases what does make me think uh more is",
    "start": "1622320",
    "end": "1630360"
  },
  {
    "text": "functions that do take complex inputs but not in the form of a bite slice those are hard problem because how",
    "start": "1630360",
    "end": "1636559"
  },
  {
    "text": "exactly do you randomize those and how do you keep track of that Corpus and what do you do when there's a new field",
    "start": "1636559",
    "end": "1643120"
  },
  {
    "text": "in the structor do you throw away all the Corpus that feels silly uh you just try all the Corpus you already have with",
    "start": "1643120",
    "end": "1651320"
  },
  {
    "text": "different values for the new field but that's extremely hard let me throw in some knowledge a corpus is basically a",
    "start": "1651320",
    "end": "1657320"
  },
  {
    "text": "directory in which you will find all the files and all the inputs that goas found useful somehow and that is going to",
    "start": "1657320",
    "end": "1664279"
  },
  {
    "text": "reuse to generate more input Al so it remembers yeah yeah or",
    "start": "1664279",
    "end": "1670120"
  },
  {
    "text": "you can interrupt it anytime and it will resume when it was one thing that I found particularly hard to fuz is um web",
    "start": "1670120",
    "end": "1676919"
  },
  {
    "text": "applications so if we go back to my land uh it's pretty hard to fuz an application and say okay here there is",
    "start": "1676919",
    "end": "1684640"
  },
  {
    "text": "an xss or here there is a cross-side request forgery that is complicated",
    "start": "1684640",
    "end": "1691279"
  },
  {
    "text": "let's see that um we are kind of working on it but we are not there yet",
    "start": "1691279",
    "end": "1696640"
  },
  {
    "text": "especially for like xss because cross-site request forgery can be",
    "start": "1696640",
    "end": "1701679"
  },
  {
    "text": "addressed in a different way but xss would be nice to have fser 4 yeah so interesting you talk about web because",
    "start": "1701679",
    "end": "1708320"
  },
  {
    "text": "one of the things that's very attractive about go is how easy it is to spin up a web server and you know just HTTP listen",
    "start": "1708320",
    "end": "1715159"
  },
  {
    "text": "and serve and if you use the default mxs and all that stuff you get quite a lot of things for free and it feels like",
    "start": "1715159",
    "end": "1722600"
  },
  {
    "text": "that's kind of enough but what more is there to do to make sure our servers are",
    "start": "1722600",
    "end": "1728000"
  },
  {
    "text": "secure so if you use the um the default and you just spin up your web service",
    "start": "1728000",
    "end": "1733519"
  },
  {
    "text": "you're going to have a list of issues I think that like you can run HTML template that is fine but I've seen",
    "start": "1733519",
    "end": "1739640"
  },
  {
    "text": "people logging errors with like th print think errors to HTP response writer that",
    "start": "1739640",
    "end": "1746840"
  },
  {
    "text": "is not good or like for example if you listen for post requests or form",
    "start": "1746840",
    "end": "1751960"
  },
  {
    "text": "submission you're exposed to cross site request forgery and go doesn't warn you",
    "start": "1751960",
    "end": "1757720"
  },
  {
    "text": "about that because the go HTP implementation is an implementation is not a framework so for example if you",
    "start": "1757720",
    "end": "1765279"
  },
  {
    "text": "have a peo listener installed on your service that is going to set up on the default Ms and you don't want to expose",
    "start": "1765279",
    "end": "1773039"
  },
  {
    "text": "peov to the Internet so there there are many problems in using the default server Ms like keeping Connection open",
    "start": "1773039",
    "end": "1779159"
  },
  {
    "text": "someone can just connect to your service 6,000 times and take it down yeah timeouts are a pet peeve of mine sadly I",
    "start": "1779159",
    "end": "1787000"
  },
  {
    "text": "don't think we can change them according to the go on compatibility promise because if we add timeouts to requests",
    "start": "1787000",
    "end": "1794440"
  },
  {
    "text": "anything that was for example streaming a response over like an hour is going to break uh and we don't break people web",
    "start": "1794440",
    "end": "1802159"
  },
  {
    "text": "sockets web so well I mean we would special case hijacked connections but",
    "start": "1802159",
    "end": "1807960"
  },
  {
    "text": "still so the uh when you use the default hgp server or the default a client the",
    "start": "1807960",
    "end": "1814880"
  },
  {
    "text": "other party might just keep that connection open forever and you're going to leak a goutine and a file descriptor",
    "start": "1814880",
    "end": "1820559"
  },
  {
    "text": "and eventually run out of file descriptors and get page while you're somewhere off in China which I'm totally",
    "start": "1820559",
    "end": "1827320"
  },
  {
    "text": "not talking about from experience so would you say never use the default bits yeah yeah actually you",
    "start": "1827320",
    "end": "1834360"
  },
  {
    "text": "don't want to use the hp. getet uh helper for example you want to spin up your client set timeout in the the time",
    "start": "1834360",
    "end": "1842000"
  },
  {
    "text": "timeout field on the HP client and then use that and similarly for the server I",
    "start": "1842000",
    "end": "1848559"
  },
  {
    "text": "think someone produced a blog post about how to secure your web service on the",
    "start": "1848559",
    "end": "1854159"
  },
  {
    "text": "web a few years ago has that been kept up today somebody also has a to-do item",
    "start": "1854159",
    "end": "1859840"
  },
  {
    "text": "to update that blog first yeah Philip especially for ciphers that would be",
    "start": "1859840",
    "end": "1866159"
  },
  {
    "text": "great yeah that's probably bad today isn't it so let me let me just clarify",
    "start": "1866159",
    "end": "1871639"
  },
  {
    "text": "that um filipo when he was a cloud flare put out a blog post about uh how to secure web servers uh go web servers on",
    "start": "1871639",
    "end": "1879360"
  },
  {
    "text": "so you want to expose go web servers to the internet basically and there's it has a few few good defaults that you",
    "start": "1879360",
    "end": "1885760"
  },
  {
    "text": "should check out if you're looking to spin up a web server and expose it to the internet but uh it",
    "start": "1885760",
    "end": "1892000"
  },
  {
    "text": "sounds like there's more to be to be added in the future Rob want to turn that into a Wiki page oh um no no um",
    "start": "1892000",
    "end": "1901639"
  },
  {
    "text": "you're not going to volunteer me into doing something like that I'll get started I just need somebody to cover",
    "start": "1901639",
    "end": "1908480"
  },
  {
    "text": "the web part of it oh yeah uh I can totally chime in in the web part like uh",
    "start": "1908480",
    "end": "1914440"
  },
  {
    "text": "saying stuff like uh do not interpolate any content in scripts yeah like in",
    "start": "1914440",
    "end": "1919919"
  },
  {
    "text": "script files or do not accept arbitrary requests or stuff like that and you can",
    "start": "1919919",
    "end": "1925720"
  },
  {
    "text": "do all the greasy work with the ciphers defaults and stuff like that perfect",
    "start": "1925720",
    "end": "1931000"
  },
  {
    "text": "yeah we we started setting some default headers the ones to make sure a request is not misinterpreted as something else",
    "start": "1931000",
    "end": "1938279"
  },
  {
    "text": "than text Rob help me out I don't know about that but I know that we are still sniffing content for responses uh yes",
    "start": "1938279",
    "end": "1944919"
  },
  {
    "text": "yes we are we're doing that server side we can TR fix that for those who don't",
    "start": "1944919",
    "end": "1950000"
  },
  {
    "text": "uh know about this um content type is when a server sends a response to the client and says you know what this is",
    "start": "1950000",
    "end": "1956960"
  },
  {
    "text": "text or this is a Json or this is a binary blob and it's important that an",
    "start": "1956960",
    "end": "1962200"
  },
  {
    "text": "attacker cannot control that or that there is no way that the server is going to say hey this is HTML while instead is",
    "start": "1962200",
    "end": "1967760"
  },
  {
    "text": "plain text yeah a classic attack there is you upload a picture to a forum that",
    "start": "1967760",
    "end": "1972799"
  },
  {
    "text": "takes a picture uploads but actually it's HTML and then somebody opens it in their browser and it runs some",
    "start": "1972799",
    "end": "1979080"
  },
  {
    "text": "JavaScript and now I don't know now you have a lot of points on that form yeah and and and the problem there",
    "start": "1979080",
    "end": "1985840"
  },
  {
    "text": "is that go tries to guess so you know the Simplicity you were talking about",
    "start": "1985840",
    "end": "1990919"
  },
  {
    "text": "Matt when you said yeah simpli is now you just spin this up and it works yes but the way it works is that it does",
    "start": "1990919",
    "end": "1997000"
  },
  {
    "text": "some work for you that you it should really not be doing it's like one of the things that I do when I write go web",
    "start": "1997000",
    "end": "2002480"
  },
  {
    "text": "services it's to set content type header to plain text which is",
    "start": "2002480",
    "end": "2007679"
  },
  {
    "text": "uh text/plain and the character set to be utf8 and that's it and I'm sure that",
    "start": "2007679",
    "end": "2014360"
  },
  {
    "text": "I forget to set my content type on my HTML responses those are not going to render so I'm secure by default and then",
    "start": "2014360",
    "end": "2021679"
  },
  {
    "text": "when I serve HTML I actually reset it to the content type that I know to be HTML",
    "start": "2021679",
    "end": "2027080"
  },
  {
    "text": "so that's one point we need to put on the wikii always set your content types explicitly yeah so that is really",
    "start": "2027080",
    "end": "2033600"
  },
  {
    "text": "interesting cuz there's a lot of this a lot of things that we we are talking about here are what are taught when",
    "start": "2033600",
    "end": "2039840"
  },
  {
    "text": "people are teaching go they start with if you want to go and just get some resource you use http.get it therefore",
    "start": "2039840",
    "end": "2046519"
  },
  {
    "text": "doesn't have the timeout you know and we sort of learn that way with those basic tools but yes it does sound like there",
    "start": "2046519",
    "end": "2053760"
  },
  {
    "text": "is a bit more there to learn before you get that into production one of the nice",
    "start": "2053760",
    "end": "2058878"
  },
  {
    "text": "things about using App engine which I use almost exclusively is there's layers",
    "start": "2058879",
    "end": "2063919"
  },
  {
    "text": "of security that happen on your behalf and I think you can safely use listen and serve in app engine because it's",
    "start": "2063919",
    "end": "2071040"
  },
  {
    "text": "everything's kind of proxied um but some of the other things you talk about absolutely apply and probably apply",
    "start": "2071040",
    "end": "2076480"
  },
  {
    "text": "everywhere I think go is still probably better than the average platform here",
    "start": "2076480",
    "end": "2083079"
  },
  {
    "text": "it's just that go is also 10 years old and over these 10 years it did not have",
    "start": "2083079",
    "end": "2088878"
  },
  {
    "text": "the privilege to make a breaking change so anything that didn't get right in",
    "start": "2088879",
    "end": "2094679"
  },
  {
    "text": "terms of secure defaults at the start which were always important were always considered important unfortunately it's",
    "start": "2094679",
    "end": "2101240"
  },
  {
    "text": "not something we're in the position to change so do you think with go to do you think if if there ever was a major",
    "start": "2101240",
    "end": "2107200"
  },
  {
    "text": "release of go that would be a list of things you'd like to correct I am not allowed to talk about goto I'm kidding",
    "start": "2107200",
    "end": "2115079"
  },
  {
    "text": "I'm kidding I'm kidding um well goto is um shipping up to be a process through",
    "start": "2115079",
    "end": "2120280"
  },
  {
    "text": "which we make uh breaking changes but not really uh cut like python 2 to",
    "start": "2120280",
    "end": "2125599"
  },
  {
    "text": "Python 3 was we're calling go two already the language changes that happen go 113 and I suppose that at some point",
    "start": "2125599",
    "end": "2133599"
  },
  {
    "text": "we will want to make V2s of a bunch of standard Library um packages but we",
    "start": "2133599",
    "end": "2140520"
  },
  {
    "text": "don't have the infrastructure yet nor know how we're going to do those uh just",
    "start": "2140520",
    "end": "2146079"
  },
  {
    "text": "yet maybe there will just be a net hp/ V2 just like you can have modules V2 for",
    "start": "2146079",
    "end": "2153000"
  },
  {
    "text": "security one idea that I had and um so you know the web platform we cannot really deprecate stuff because the web",
    "start": "2153000",
    "end": "2160160"
  },
  {
    "text": "platform is kind of out there and if a browser starts breaking websites people will switch to the other one so no",
    "start": "2160160",
    "end": "2166680"
  },
  {
    "text": "browsers are going to completely destroy a feature we need to some features to stay there for a while so the way we go",
    "start": "2166680",
    "end": "2173319"
  },
  {
    "text": "with this is usually some kind of some sort of versioning is like the server sets a header to tell the browser I want",
    "start": "2173319",
    "end": "2179920"
  },
  {
    "text": "this security level and disable any feature that would lower this security",
    "start": "2179920",
    "end": "2185000"
  },
  {
    "text": "level and one thing that I to do for like the HTML template library that we",
    "start": "2185000",
    "end": "2190040"
  },
  {
    "text": "are already discussing is that you say when you pass a template you want it secure that is going to change your HTML",
    "start": "2190040",
    "end": "2197680"
  },
  {
    "text": "to prevent some vulnerabilities we cannot make this the default because that would be a breaking change but if we add one more API that",
    "start": "2197680",
    "end": "2205920"
  },
  {
    "text": "is good and we just need to tell people hey just do do secure and pass it a level from now on so every time we bump",
    "start": "2205920",
    "end": "2214000"
  },
  {
    "text": "it we can just bump that level and go ahead now this is very end wavy but be",
    "start": "2214000",
    "end": "2220119"
  },
  {
    "text": "even before goto we can get some security by default kind of yeah on one hand it's painful on a very deep level",
    "start": "2220119",
    "end": "2227000"
  },
  {
    "text": "to think that to have to tell people oh no it's because you weren't calling HTTP do secure before making your calls it's",
    "start": "2227000",
    "end": "2235079"
  },
  {
    "text": "quite funny it's funny because it's like the crypto with the math math Rand and stuff",
    "start": "2235079",
    "end": "2242760"
  },
  {
    "text": "it's like you're not using the secure one like well why did you make an insecure one and what is a secure six I",
    "start": "2242760",
    "end": "2248680"
  },
  {
    "text": "got a six from this one but I want a secure six yeah but I mean after all do",
    "start": "2248680",
    "end": "2253920"
  },
  {
    "text": "you run your prod server with race I mean for some things kind of makes sense",
    "start": "2253920",
    "end": "2259640"
  },
  {
    "text": "maybe for security do calling HTP do secure doesn't really make sense but for some things I feel like we will have a",
    "start": "2259640",
    "end": "2265560"
  },
  {
    "text": "more secure version that warns you if something bad happens like the do dash race flag and you just run it for a",
    "start": "2265560",
    "end": "2273119"
  },
  {
    "text": "while so that you can instrument your code to see if something's bad happened and then you just go for performance so",
    "start": "2273119",
    "end": "2278720"
  },
  {
    "text": "I I feel like some things might be there and stay there and you you of course could have like an static analysis tools",
    "start": "2278720",
    "end": "2285800"
  },
  {
    "text": "or lint tools and things to help there too and actually I I saw a project that somebody was working on and it's a",
    "start": "2285800",
    "end": "2292359"
  },
  {
    "text": "company I think called shift left and they were doing basically static analysis to for security reasons one of",
    "start": "2292359",
    "end": "2299680"
  },
  {
    "text": "the examples is if there's ever a string called password and that is ever then",
    "start": "2299680",
    "end": "2305160"
  },
  {
    "text": "printed out somewhere that would be a warning that would you would get are there other tools like that that that we",
    "start": "2305160",
    "end": "2312079"
  },
  {
    "text": "should be using today and are there other ones that we could imagine yeah one one of the most amazing ones is the",
    "start": "2312079",
    "end": "2318440"
  },
  {
    "text": "type system so when you have the type password you wrap a string in an opaque struct and you implemented the Stringer",
    "start": "2318440",
    "end": "2325680"
  },
  {
    "text": "interface and the Stringer interface prints an asterisk oh do you get the impression that Roberto likes this",
    "start": "2325680",
    "end": "2334078"
  },
  {
    "text": "pattern if it compiles it should be secure so then password becomes its own",
    "start": "2334160",
    "end": "2339640"
  },
  {
    "text": "type that is not printable because we know all the printing no it is printable it prints ass risks it just prins or",
    "start": "2339640",
    "end": "2346200"
  },
  {
    "text": "Hunter too maybe Rob promise me you'll never look into rust we need you and go I am I am",
    "start": "2346200",
    "end": "2355240"
  },
  {
    "text": "haven't you been watching his Twitter I spent a lot of time in Rust so I'm a big fan of the idea doesn't really appeal to",
    "start": "2355240",
    "end": "2360960"
  },
  {
    "text": "me yeah the reason I'm making this joke is that rust picks a different point in the trade-off between complexity and",
    "start": "2360960",
    "end": "2368040"
  },
  {
    "text": "powerfulness of the type system so you can do many more things like that but it",
    "start": "2368040",
    "end": "2373319"
  },
  {
    "text": "also means that c bases can get much more complex which of course introduces",
    "start": "2373319",
    "end": "2378400"
  },
  {
    "text": "potential security issues as we learned earlier yeah it's a trade-off yeah tradeoff I'm just sending like hearts",
    "start": "2378400",
    "end": "2385079"
  },
  {
    "text": "emojis to Matt in this moment thank you they're greatly",
    "start": "2385079",
    "end": "2391000"
  },
  {
    "text": "received if we might want to change subject a bit I would really love to to",
    "start": "2391000",
    "end": "2396520"
  },
  {
    "text": "talk about dependencies ooh okay well what do you mean oh uh you",
    "start": "2396520",
    "end": "2404119"
  },
  {
    "text": "know that easy thing like how do I pick a library that I want to rely on but I don't want to reimplement because uh",
    "start": "2404119",
    "end": "2410599"
  },
  {
    "text": "especially security wise like you want to protect yourself from cisu that's now in the standard Library how do you go",
    "start": "2410599",
    "end": "2416920"
  },
  {
    "text": "with that that is um pretty complicated question to answer Johan uh do you have",
    "start": "2416920",
    "end": "2424880"
  },
  {
    "text": "suggestions obviously you have under your code and then you review all the code as you before you add it to your",
    "start": "2424880",
    "end": "2430839"
  },
  {
    "text": "Source no right completely unreasonable but yeah that's the ideal",
    "start": "2430839",
    "end": "2438079"
  },
  {
    "text": "but what about um feasible approach wow thanks for learning this in my lap I",
    "start": "2438079",
    "end": "2443920"
  },
  {
    "text": "don't think there's a really good answer at the moment I know there's uh the new go Discovery site that should uh maybe",
    "start": "2443920",
    "end": "2449839"
  },
  {
    "text": "help a little bit finding more kind of reputable packages although I'm not sure that the focuses so much on security but",
    "start": "2449839",
    "end": "2456319"
  },
  {
    "text": "they will be on uh having good maintainers that respond to issues and",
    "start": "2456319",
    "end": "2462119"
  },
  {
    "text": "merge pull requests and things like that it's got It's A Hard problem obviously the author of The Discovery side Julie",
    "start": "2462119",
    "end": "2468720"
  },
  {
    "text": "um presented a whole talk about finding Dependable dependencies um and yeah I don't think I",
    "start": "2468720",
    "end": "2475480"
  },
  {
    "text": "can say much more than what she said in her talk but on the security side we",
    "start": "2475480",
    "end": "2480920"
  },
  {
    "text": "probably need some way uh for outter to Signal uh security issues or any way to",
    "start": "2480920",
    "end": "2488680"
  },
  {
    "text": "tag metadata so that we can then surface it in the discovery uh side there other",
    "start": "2488680",
    "end": "2494520"
  },
  {
    "text": "things that the Discover site can do like flagging uses of deprecated apis or deprecated packages which is my favorite",
    "start": "2494520",
    "end": "2502640"
  },
  {
    "text": "Hammer to Wing when I can't remove something market deprecate and hope that everybody's using static check so that",
    "start": "2502640",
    "end": "2509480"
  },
  {
    "text": "they will get yell at but yes that's two for two on large things that I need to",
    "start": "2509480",
    "end": "2515160"
  },
  {
    "text": "find time or few people that want to work on for the ecosystem uh finding ways for tagging security issues and",
    "start": "2515160",
    "end": "2522480"
  },
  {
    "text": "it's a hard problem because uh what do you do if the module is unmaintained how do you surface issues that have been",
    "start": "2522480",
    "end": "2529480"
  },
  {
    "text": "reported and would you consider a valid issue report that's not published by by",
    "start": "2529480",
    "end": "2535800"
  },
  {
    "text": "the author and yeah these are our questions different ecosystems have different [Music]",
    "start": "2535800",
    "end": "2545160"
  },
  {
    "text": "answers",
    "start": "2545160",
    "end": "2548160"
  },
  {
    "text": "this episode is brought to you by lenoe our Cloud Server of choice it's so easy to get started with linode server",
    "start": "2550760",
    "end": "2556559"
  },
  {
    "text": "started just five bucks a month for your big Ideas head to lin.com changelog choose your flavor of Linux that works",
    "start": "2556559",
    "end": "2562480"
  },
  {
    "text": "for you then pick a location that's right for you London Tokyo Dallas and",
    "start": "2562480",
    "end": "2567559"
  },
  {
    "text": "many other places in the world they've got you covered go from having that amazing shower idea to a hosted website",
    "start": "2567559",
    "end": "2573119"
  },
  {
    "text": "in just minutes start small expand as your idea blossoms into a huge hit and we trust Leno because they keep it fast",
    "start": "2573119",
    "end": "2579200"
  },
  {
    "text": "they keep it simple check them out at lin.com [Music]",
    "start": "2579200",
    "end": "2595559"
  },
  {
    "text": "changelog how soon do you go public with the information as well sometimes you might find a vulnerability that",
    "start": "2595559",
    "end": "2601640"
  },
  {
    "text": "genuinely you don't want people to know about yeah and go adds one more bit of complexity in there because go is",
    "start": "2601640",
    "end": "2608000"
  },
  {
    "text": "statically linked so let's say that um someone exports a go module and uh you",
    "start": "2608000",
    "end": "2613680"
  },
  {
    "text": "make sure that all dros have imported that go module recompiled it with a fix for the security issue and they just use",
    "start": "2613680",
    "end": "2620079"
  },
  {
    "text": "that and that's fine but what about the built binaries what about the compiled binaries how do you check if a go binary",
    "start": "2620079",
    "end": "2626880"
  },
  {
    "text": "was compiled with a previous version of the library that is still vulnerable think about a Dr a Linux Dr you don't",
    "start": "2626880",
    "end": "2634440"
  },
  {
    "text": "want to rep push all the minories all together that depend on a a certain",
    "start": "2634440",
    "end": "2639599"
  },
  {
    "text": "Library maybe you want to security fix something but we kind of would like them",
    "start": "2639599",
    "end": "2646400"
  },
  {
    "text": "to take that approach instead of trying to make Dynamic linking happen yeah no there's s better approach than trying to",
    "start": "2646400",
    "end": "2653119"
  },
  {
    "text": "hack something horrible in it but uh as you can see that is kind of a problem and also when you publish a patch for a",
    "start": "2653119",
    "end": "2660319"
  },
  {
    "text": "library you need to make that public and there are hackers that actively look for patches and they look at the patches to",
    "start": "2660319",
    "end": "2667280"
  },
  {
    "text": "see if that patches a security issue and if so they start exploiting everything that they can that uses their library",
    "start": "2667280",
    "end": "2673680"
  },
  {
    "text": "before they actually can get to patch it a good metadata propagation ecosystem",
    "start": "2673680",
    "end": "2679119"
  },
  {
    "text": "can help with this though uh you can have tools that uh look at binaries which since go13 have all the versions",
    "start": "2679119",
    "end": "2685880"
  },
  {
    "text": "of all the modules they were built with there's thing in debug. build info with",
    "start": "2685880",
    "end": "2691880"
  },
  {
    "text": "the list of all module names and versions that were compiled into the binary is that alongside the the build",
    "start": "2691880",
    "end": "2698520"
  },
  {
    "text": "it it's in the binary oh it's inside it yeah um and a new feature in go13 is",
    "start": "2698520",
    "end": "2703839"
  },
  {
    "text": "that if you type Go version binary. Fu it will tell you all the build",
    "start": "2703839",
    "end": "2708880"
  },
  {
    "text": "information of the binary you pointed at so you can just run Go version uh blah",
    "start": "2708880",
    "end": "2714960"
  },
  {
    "text": "and get a list of the Go version the uh module versions and if we had a way to",
    "start": "2714960",
    "end": "2721000"
  },
  {
    "text": "publish structured metadata about what versions of What have what issues we",
    "start": "2721000",
    "end": "2726280"
  },
  {
    "text": "could have automated systems that look at binaries in your production systems and go like wait wait wait wait that",
    "start": "2726280",
    "end": "2731599"
  },
  {
    "text": "binary is built with a known insecure version of Something the problem is solving what known insecure means yeah",
    "start": "2731599",
    "end": "2738440"
  },
  {
    "text": "easy right we just need to solve that I've just realized this podcast",
    "start": "2738440",
    "end": "2745359"
  },
  {
    "text": "would be really helpful to any aspiring hackers we're g the wrong suggestions",
    "start": "2745359",
    "end": "2751480"
  },
  {
    "text": "you say well it just grows the audience and now that now now I know they use jir and stuff they need all the",
    "start": "2751480",
    "end": "2759000"
  },
  {
    "text": "help they need all the help they can get bless them but yeah to your point about disclosure timelines it's becoming",
    "start": "2759000",
    "end": "2764960"
  },
  {
    "text": "fairly widely accepted in the industry that long embargos don't really help the",
    "start": "2764960",
    "end": "2770720"
  },
  {
    "text": "standard these days is 90 days plus 15 if you need it just to push out a patch",
    "start": "2770720",
    "end": "2776400"
  },
  {
    "text": "because at some point Defenders need to know and attackers ReDiscover things uh",
    "start": "2776400",
    "end": "2781520"
  },
  {
    "text": "I am working on a security issue that I'll try not to spoil because that would",
    "start": "2781520",
    "end": "2786559"
  },
  {
    "text": "be frankly embarrassing but that got reported by two separate security at",
    "start": "2786559",
    "end": "2792200"
  },
  {
    "text": "golang.org reports in the span of two weeks and likewise attackers find things",
    "start": "2792200",
    "end": "2798880"
  },
  {
    "text": "as well so while Defenders don't have the time or budget to look into",
    "start": "2798880",
    "end": "2804119"
  },
  {
    "text": "everything attackers are looking for issues if anyone is listening and thinks like they want to report a security",
    "start": "2804119",
    "end": "2810839"
  },
  {
    "text": "vulnerability report it to the email address don't open a public issue yeah yes please that that is",
    "start": "2810839",
    "end": "2819440"
  },
  {
    "text": "yeah security golang.org okay which is basically Philip and a",
    "start": "2819440",
    "end": "2826280"
  },
  {
    "text": "couple of other folks so you know who you're speaking to you probably will get an answer from me yes but if I'm on",
    "start": "2826280",
    "end": "2832200"
  },
  {
    "text": "vacation there are there are backups security go line.org our uh call center is waiting for your call your call is",
    "start": "2832200",
    "end": "2840079"
  },
  {
    "text": "important to us you're number 741 please wait let help note to",
    "start": "2840079",
    "end": "2846000"
  },
  {
    "text": "complete your submission please enter your mother's maiden name the only email address where if you",
    "start": "2846000",
    "end": "2852200"
  },
  {
    "text": "send something good we might give you some money oh interesting oh is that",
    "start": "2852200",
    "end": "2857400"
  },
  {
    "text": "part of the vrp I didn't know that I tried to keep that like kind of not",
    "start": "2857400",
    "end": "2863359"
  },
  {
    "text": "widely publicized because I don't want the amount the volume of report noise",
    "start": "2863359",
    "end": "2868680"
  },
  {
    "text": "reports that vrp programs ver not VT Awards program get but every time we get",
    "start": "2868680",
    "end": "2876040"
  },
  {
    "text": "something particularly good or particularly um interesting I refer them uh to the vrp to to get some",
    "start": "2876040",
    "end": "2883839"
  },
  {
    "text": "money okay you know we have a dedicated team to take care of VPS if they get to",
    "start": "2883839",
    "end": "2890040"
  },
  {
    "text": "high volume [Laughter]",
    "start": "2890040",
    "end": "2895440"
  },
  {
    "text": "oh you're going to get a lot now big mistake yeah you're going to get",
    "start": "2895440",
    "end": "2900720"
  },
  {
    "text": "all kinds of things like well I don't want to I don't want to help I want to help people",
    "start": "2900720",
    "end": "2906440"
  },
  {
    "text": "so if we got any like crazy what's the craziest security related story that you've heard or that you've yourselves",
    "start": "2906440",
    "end": "2913119"
  },
  {
    "text": "come across o strictly related to go doesn't it doesn't have to you have a",
    "start": "2913119",
    "end": "2919640"
  },
  {
    "text": "lot to choose from do you um are you trying to decide whether",
    "start": "2919640",
    "end": "2925440"
  },
  {
    "text": "to tell this story or not because I can help tell it yeah tell it so there are",
    "start": "2925440",
    "end": "2931760"
  },
  {
    "text": "simple things that I noticed that just people don't care about or don't think about like the other day I was reviewing",
    "start": "2931760",
    "end": "2937599"
  },
  {
    "text": "the xsrf token package in xnet and I found out that it was uh replacing some",
    "start": "2937599",
    "end": "2944440"
  },
  {
    "text": "characters with other characters to make sure that some string split would succeed afterwards which means that a",
    "start": "2944440",
    "end": "2951240"
  },
  {
    "text": "user could craft their username so that they would get the CF token identical to",
    "start": "2951240",
    "end": "2956839"
  },
  {
    "text": "another user so basically they were causing a clash in security tokens just",
    "start": "2956839",
    "end": "2962760"
  },
  {
    "text": "because they were lazy and didn't do proper escaping and I feel like that programmer laziness is the major cause",
    "start": "2962760",
    "end": "2969520"
  },
  {
    "text": "of security issues and that was a clear example yeah by the way thanks for that you know I was in tener and I was there",
    "start": "2969520",
    "end": "2976760"
  },
  {
    "text": "triaging your report it was great yeah so when I found the DNS rebinding",
    "start": "2976760",
    "end": "2982799"
  },
  {
    "text": "problem in the standard Library I was told don't open our public issue right to security at I'm absolutely kidding",
    "start": "2982799",
    "end": "2988960"
  },
  {
    "text": "you did the right thing you got to did you get any money for it Roberto",
    "start": "2988960",
    "end": "2995000"
  },
  {
    "text": "no I would I know you work for Google you can't get Google to pay you a b a",
    "start": "2995000",
    "end": "3000440"
  },
  {
    "text": "bounty actually I could finance my team you know that some teams get financed by",
    "start": "3000440",
    "end": "3006000"
  },
  {
    "text": "finding vulnerabilities in other teams do they yeah I don't know if this is true potentially a legend but um why not",
    "start": "3006000",
    "end": "3014559"
  },
  {
    "text": "so you mentioned programmer laziness uh it's an interesting point but genuinely like a lot of teams rush they they build",
    "start": "3014559",
    "end": "3022920"
  },
  {
    "text": "software extremely quickly they're under a lot of pressure and they a lot of people when you talk to them they feel",
    "start": "3022920",
    "end": "3028160"
  },
  {
    "text": "like that's how you build software but there's there is a good argument to be had for taking your time slow things",
    "start": "3028160",
    "end": "3034119"
  },
  {
    "text": "down you know spend a bit more time on it and maybe we can start to avoid some of those things yeah like one saying",
    "start": "3034119",
    "end": "3042280"
  },
  {
    "text": "that we have is that optimists deploy soon and work fast and they write",
    "start": "3042280",
    "end": "3050440"
  },
  {
    "text": "postmortem pessimists write tests and F functions and they're kind of sleep safe at now night there we",
    "start": "3050520",
    "end": "3058240"
  },
  {
    "text": "go any other crazy stories I'm still not in the in the business of criticizing",
    "start": "3058240",
    "end": "3064839"
  },
  {
    "text": "Developers for for being lazy like it's true that um that's often a source of",
    "start": "3064839",
    "end": "3071880"
  },
  {
    "text": "vulnerabilities but so many times we've resorted to that when in fact we were providing them with insecure Platforms",
    "start": "3071880",
    "end": "3079839"
  },
  {
    "text": "in Secure defaults in Secure architectures I'm sure we blamed on uh",
    "start": "3079839",
    "end": "3085880"
  },
  {
    "text": "developers all sorts of vulnerabilities caused by I don't know string copy in C",
    "start": "3085880",
    "end": "3094240"
  },
  {
    "text": "when in fact it we now know that it's like blaming I don't know people for being dumb because they keep touching",
    "start": "3094240",
    "end": "3101200"
  },
  {
    "text": "that exposed high voltage rail just don't touch the",
    "start": "3101200",
    "end": "3106960"
  },
  {
    "text": "rail yeah it's like if old programmers use an API wrong the proin is not the",
    "start": "3107040",
    "end": "3112200"
  },
  {
    "text": "programmers right and but you know it also has a little label that explains in detail like the the voltage and amperage",
    "start": "3112200",
    "end": "3119319"
  },
  {
    "text": "uh of it and if you read it all and know about voltage and amperage you will know you'll die they should read the",
    "start": "3119319",
    "end": "3127520"
  },
  {
    "text": "label read the label always read the label yeah of course sarcasm but yes uh",
    "start": "3127599",
    "end": "3133960"
  },
  {
    "text": "crazy story is I'm I'm bad at this kind of questions I can tell you the one that stuck with me the most because it's I",
    "start": "3133960",
    "end": "3141040"
  },
  {
    "text": "suspect how I got into security there was um IRC bot in the Wikipedia channels",
    "start": "3141040",
    "end": "3147160"
  },
  {
    "text": "on free node uh back when IRC was Oh What here is this I know right and the",
    "start": "3147160",
    "end": "3154000"
  },
  {
    "text": "bot would just do some things based on who you are right and so on IRC you can",
    "start": "3154000",
    "end": "3159680"
  },
  {
    "text": "change Nicks and there was this bot that based on who you are uh would allow you",
    "start": "3159680",
    "end": "3164920"
  },
  {
    "text": "to do things if you are one of the administrators of the channel the bot would be op and so it would go and you",
    "start": "3164920",
    "end": "3170760"
  },
  {
    "text": "know make you up or make somebody else up or kickb someone kickb they were so",
    "start": "3170760",
    "end": "3175920"
  },
  {
    "text": "fun anyway now to make sure that it wasn't somebody that just took that nickname while that person was offline",
    "start": "3175920",
    "end": "3182960"
  },
  {
    "text": "because onc that was it if somebody was connected with that uh nickname it was taken otherwise it was free it would",
    "start": "3182960",
    "end": "3189319"
  },
  {
    "text": "send a message to the services asking the who is of this person and it would",
    "start": "3189319",
    "end": "3195480"
  },
  {
    "text": "get back a response that if it was authenticated if it had logged in with its password it would say philipo is",
    "start": "3195480",
    "end": "3203079"
  },
  {
    "text": "authenticated to services so would um you would say hey uh kickban this person",
    "start": "3203079",
    "end": "3208480"
  },
  {
    "text": "uh I am the administrator and the thing would say hey who is administrator and",
    "start": "3208480",
    "end": "3213920"
  },
  {
    "text": "be like oh yeah is authenticated to services and would go and kickb except that you could just say is authenticated",
    "start": "3213920",
    "end": "3220160"
  },
  {
    "text": "to Services yourself in the channel and the B would just believe you",
    "start": "3220160",
    "end": "3227040"
  },
  {
    "text": "so you would say you would change your neck to the administrator say kickban and the B would like be like nah and",
    "start": "3227040",
    "end": "3233319"
  },
  {
    "text": "then you would say uh administrator is authenticated to Services cool kick ban",
    "start": "3233319",
    "end": "3238599"
  },
  {
    "text": "out oh that is that is adorable what an adorable bot yeah what an idiot what an",
    "start": "3238599",
    "end": "3244680"
  },
  {
    "text": "idiot bot but that's the yeah that's like the you might as",
    "start": "3244680",
    "end": "3250720"
  },
  {
    "text": "well just have like a box with a check box and say just promise don't do anything bad please and then just check",
    "start": "3250720",
    "end": "3256799"
  },
  {
    "text": "it but that's what Rob was saying about inband signaling messages that are",
    "start": "3256799",
    "end": "3262119"
  },
  {
    "text": "believed data that are believed to be instructions yeah yeah that's every time you see a",
    "start": "3262119",
    "end": "3267720"
  },
  {
    "text": "very bad vulnerability there you go you have data and code mixed together oh",
    "start": "3267720",
    "end": "3273119"
  },
  {
    "text": "there's a theme yeah so there we go we've been on quite the journey there",
    "start": "3273119",
    "end": "3280200"
  },
  {
    "text": "learning about security everything from fuzzing uh all the way up to you know sensible defaults in Go is is a one of",
    "start": "3280200",
    "end": "3287640"
  },
  {
    "text": "the nice features I think of the language and now as felipo was talking about extending that to Safe defaults",
    "start": "3287640",
    "end": "3294920"
  },
  {
    "text": "and and be secure by default and there's a lot there's a lot of work it's hard we're going to carry on talking about",
    "start": "3294920",
    "end": "3300720"
  },
  {
    "text": "this subject I'm sure for a long time thank you to our guests Roberto clais uh",
    "start": "3300720",
    "end": "3306040"
  },
  {
    "text": "Johan brost and filipo VOD thank you very much we'll see you next",
    "start": "3306040",
    "end": "3312599"
  },
  {
    "text": "week all right thank you for tuning in to this week's episode of go time if you're not yet hang with us in go for",
    "start": "3314400",
    "end": "3320559"
  },
  {
    "text": "slack we have a channel called go time FM look it up you'll find us hang with us during the live shows connect with",
    "start": "3320559",
    "end": "3327039"
  },
  {
    "text": "other members of the community share stories share codes share coffee recipes whatever it's a lot of fun also we have",
    "start": "3327039",
    "end": "3334079"
  },
  {
    "text": "discussions at changel love.com on every episode head to changel love.com gotime",
    "start": "3334079",
    "end": "3339640"
  },
  {
    "text": "find this episode and discuss it with the community also thanks to fast the our bandwidth partner rbar for helping",
    "start": "3339640",
    "end": "3345599"
  },
  {
    "text": "us move fast and fix things and Leno for hosting the Chang law platform our music",
    "start": "3345599",
    "end": "3350799"
  },
  {
    "text": "is produced by the mysterious break master cylinder and if you want to hear more awesome podcast like this subscribe",
    "start": "3350799",
    "end": "3356720"
  },
  {
    "text": "to our Master feed it's one feed to rule them all plus some extras that only hit the master feed and to change law.com",
    "start": "3356720",
    "end": "3363400"
  },
  {
    "text": "slm or search for Chang law master in your podcast client you'll find us thanks for tuning in we'll see you next",
    "start": "3363400",
    "end": "3371210"
  },
  {
    "text": "[Music]",
    "start": "3371210",
    "end": "3378530"
  },
  {
    "text": "week [Music]",
    "start": "3383920",
    "end": "3410809"
  },
  {
    "text": "that's",
    "start": "3413880",
    "end": "3416880"
  }
]