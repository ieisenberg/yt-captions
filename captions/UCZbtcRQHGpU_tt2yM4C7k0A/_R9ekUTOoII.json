[
  {
    "text": "so nyx is a programming language a",
    "start": "160",
    "end": "3199"
  },
  {
    "text": "purely functional very simple",
    "start": "3199",
    "end": "5120"
  },
  {
    "text": "programming language you can kind of",
    "start": "5120",
    "end": "6640"
  },
  {
    "text": "think of it as json with types i'm",
    "start": "6640",
    "end": "9599"
  },
  {
    "text": "stealing this from a friend of mine",
    "start": "9599",
    "end": "11040"
  },
  {
    "text": "profpatch and it's so simple that it",
    "start": "11040",
    "end": "13120"
  },
  {
    "text": "doesn't even really have",
    "start": "13120",
    "end": "14559"
  },
  {
    "text": "named top level variables you can't even",
    "start": "14559",
    "end": "16560"
  },
  {
    "text": "give names to things it's just a data",
    "start": "16560",
    "end": "18320"
  },
  {
    "text": "structure and then you can write some",
    "start": "18320",
    "end": "19600"
  },
  {
    "text": "transformations instead of the data",
    "start": "19600",
    "end": "21039"
  },
  {
    "text": "structure it feels very natural to",
    "start": "21039",
    "end": "23920"
  },
  {
    "text": "people who are used to languages like",
    "start": "23920",
    "end": "25439"
  },
  {
    "text": "haskell or erlang so more on the",
    "start": "25439",
    "end": "27359"
  },
  {
    "text": "functional side of things and it can",
    "start": "27359",
    "end": "29279"
  },
  {
    "text": "feel a little bit alien to people coming",
    "start": "29279",
    "end": "31279"
  },
  {
    "text": "from other backgrounds which i think is",
    "start": "31279",
    "end": "32880"
  },
  {
    "text": "one of the barriers to entry of the",
    "start": "32880",
    "end": "34399"
  },
  {
    "text": "language the second thing called nyx is",
    "start": "34399",
    "end": "37360"
  },
  {
    "text": "the package manager itself so the",
    "start": "37360",
    "end": "39440"
  },
  {
    "text": "package manager implements a concept",
    "start": "39440",
    "end": "41440"
  },
  {
    "text": "called derivations derivation is",
    "start": "41440",
    "end": "43360"
  },
  {
    "text": "essentially a data structure that says",
    "start": "43360",
    "end": "45760"
  },
  {
    "text": "we have a transformation that we want to",
    "start": "45760",
    "end": "47840"
  },
  {
    "text": "apply to some data usually this",
    "start": "47840",
    "end": "50320"
  },
  {
    "text": "transformation is something like running",
    "start": "50320",
    "end": "51760"
  },
  {
    "text": "a compiler or running a",
    "start": "51760",
    "end": "54160"
  },
  {
    "text": "some other tool that does file",
    "start": "54160",
    "end": "55440"
  },
  {
    "text": "transformations and these derivations",
    "start": "55440",
    "end": "57760"
  },
  {
    "text": "specify all of the inputs that they have",
    "start": "57760",
    "end": "60160"
  },
  {
    "text": "fully pinned which means that we have",
    "start": "60160",
    "end": "62000"
  },
  {
    "text": "full shower hashes of everything that",
    "start": "62000",
    "end": "63600"
  },
  {
    "text": "gets into the derivation",
    "start": "63600",
    "end": "65680"
  },
  {
    "text": "and then this information together can",
    "start": "65680",
    "end": "67680"
  },
  {
    "text": "be used to create a hash so you take the",
    "start": "67680",
    "end": "70080"
  },
  {
    "text": "hashes of everything going into your",
    "start": "70080",
    "end": "71760"
  },
  {
    "text": "derivation including sort of recursively",
    "start": "71760",
    "end": "73760"
  },
  {
    "text": "if you think about it other derivations",
    "start": "73760",
    "end": "75360"
  },
  {
    "text": "i'll bring up an example in a second and",
    "start": "75360",
    "end": "77600"
  },
  {
    "text": "the build instructions and you hash them",
    "start": "77600",
    "end": "79600"
  },
  {
    "text": "together and you get something that",
    "start": "79600",
    "end": "80799"
  },
  {
    "text": "uniquely identifies this particular",
    "start": "80799",
    "end": "82799"
  },
  {
    "text": "operation to be executed an example of",
    "start": "82799",
    "end": "85119"
  },
  {
    "text": "this is if you're building a program foo",
    "start": "85119",
    "end": "87280"
  },
  {
    "text": "and it depends on a library bar then you",
    "start": "87280",
    "end": "89280"
  },
  {
    "text": "would have a derivation for your library",
    "start": "89280",
    "end": "91439"
  },
  {
    "text": "bar",
    "start": "91439",
    "end": "92240"
  },
  {
    "text": "and that derivation would be passed into",
    "start": "92240",
    "end": "94240"
  },
  {
    "text": "the derivation for your program foo and",
    "start": "94240",
    "end": "96240"
  },
  {
    "text": "the hash of those together",
    "start": "96240",
    "end": "98079"
  },
  {
    "text": "would yield the exact hash specifying",
    "start": "98079",
    "end": "100320"
  },
  {
    "text": "how to build your program",
    "start": "100320",
    "end": "102240"
  },
  {
    "text": "the interesting thing is that if any of",
    "start": "102240",
    "end": "103840"
  },
  {
    "text": "the sort of recursive inputs of your",
    "start": "103840",
    "end": "106240"
  },
  {
    "text": "library change so for example you're",
    "start": "106240",
    "end": "108320"
  },
  {
    "text": "exchanging the compiler version or",
    "start": "108320",
    "end": "109920"
  },
  {
    "text": "you're linking against a new version of",
    "start": "109920",
    "end": "111280"
  },
  {
    "text": "openssl then the hashes kind of change",
    "start": "111280",
    "end": "114479"
  },
  {
    "text": "all the way down in this tree similar to",
    "start": "114479",
    "end": "116399"
  },
  {
    "text": "a data structure called a merkle tree if",
    "start": "116399",
    "end": "118399"
  },
  {
    "text": "you're familiar with that okay how does",
    "start": "118399",
    "end": "120320"
  },
  {
    "text": "this compare to a dag it essentially is",
    "start": "120320",
    "end": "122880"
  },
  {
    "text": "a dag that's exactly what i was thinking",
    "start": "122880",
    "end": "124719"
  },
  {
    "text": "it sounds like a dag to me okay yeah so",
    "start": "124719",
    "end": "127200"
  },
  {
    "text": "you have this graph of some kind of root",
    "start": "127200",
    "end": "129599"
  },
  {
    "text": "note that you're realizing which could",
    "start": "129599",
    "end": "131200"
  },
  {
    "text": "be like an entire operating system or if",
    "start": "131200",
    "end": "133680"
  },
  {
    "text": "you're thinking even grander like the",
    "start": "133680",
    "end": "135280"
  },
  {
    "text": "entire state of a data center or just a",
    "start": "135280",
    "end": "137520"
  },
  {
    "text": "single package and then you have this",
    "start": "137520",
    "end": "139200"
  },
  {
    "text": "tree that unfolds below it that",
    "start": "139200",
    "end": "141040"
  },
  {
    "text": "represents all of the various inputs",
    "start": "141040",
    "end": "142959"
  },
  {
    "text": "that need to go into the stream an",
    "start": "142959",
    "end": "144560"
  },
  {
    "text": "interesting thing about this is that",
    "start": "144560",
    "end": "146080"
  },
  {
    "text": "because all of the inputs and the exact",
    "start": "146080",
    "end": "148800"
  },
  {
    "text": "transformation applied are hashed",
    "start": "148800",
    "end": "150160"
  },
  {
    "text": "together you get a property out of this",
    "start": "150160",
    "end": "152239"
  },
  {
    "text": "that is called repeatability it's not",
    "start": "152239",
    "end": "154400"
  },
  {
    "text": "quite the same as reproducibility we",
    "start": "154400",
    "end": "156720"
  },
  {
    "text": "might want to talk about that a little",
    "start": "156720",
    "end": "158160"
  },
  {
    "text": "bit later but it essentially gives you",
    "start": "158160",
    "end": "160319"
  },
  {
    "text": "the guarantee that you can",
    "start": "160319",
    "end": "162080"
  },
  {
    "text": "rerun this exact computation in the",
    "start": "162080",
    "end": "164319"
  },
  {
    "text": "exact state that you expect",
    "start": "164319",
    "end": "167750"
  },
  {
    "text": "[Music]",
    "start": "167750",
    "end": "170849"
  }
]