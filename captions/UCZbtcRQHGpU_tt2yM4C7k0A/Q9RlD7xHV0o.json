[
  {
    "text": "good day I'm Dave Cheney and KY it's go [Music]",
    "start": "120",
    "end": "17089"
  },
  {
    "text": "time it's go time a weekly podcast where we discuss interesting topics around the go programming language the community",
    "start": "17480",
    "end": "24240"
  },
  {
    "text": "and everything in between if you currently write go or aspire to this is the show for you",
    "start": "24240",
    "end": "31000"
  },
  {
    "text": "we are back for another episode of go time today on the show we have myself Eric St Martin Brian ketton is also on",
    "start": "31000",
    "end": "38280"
  },
  {
    "text": "the show today hello and caria Campos hi everybody and our special guest today",
    "start": "38280",
    "end": "45160"
  },
  {
    "text": "although he needs very little introduction is Dave Cheney say hello Dave why don't you give everybody kind",
    "start": "45160",
    "end": "50559"
  },
  {
    "text": "of a brief introduction hello there hi uh my name's David I am a go Enthusiast",
    "start": "50559",
    "end": "56440"
  },
  {
    "text": "from Sydney Australia I've been involved uh in go for for many many years and I",
    "start": "56440",
    "end": "62760"
  },
  {
    "text": "just love love the opportunity to be involved with the language and get involved so early to being bold and",
    "start": "62760",
    "end": "69360"
  },
  {
    "text": "something I'm so passionate about so hello everyone now it's kind of amusing having you introduce yourself one of the",
    "start": "69360",
    "end": "75360"
  },
  {
    "text": "things that we found at gophercon just a month or so ago was that nearly everyone",
    "start": "75360",
    "end": "80960"
  },
  {
    "text": "that we talked to learned go from your blog there there out of the 1500 people",
    "start": "80960",
    "end": "86840"
  },
  {
    "text": "that were there 1499 of them listed your blog as one of the resources they used",
    "start": "86840",
    "end": "92240"
  },
  {
    "text": "to use go so it is kind of embarrassing to introduce you but we feel it's",
    "start": "92240",
    "end": "97360"
  },
  {
    "text": "necessary yeah it was it was great to meet so many people at at goeran and it",
    "start": "97360",
    "end": "102560"
  },
  {
    "text": "was really touching the way that you know everyone was like oh I love I love to read your blog it was yeah really",
    "start": "102560",
    "end": "109680"
  },
  {
    "text": "touching because five years ago I never started out to be an author or a blogger or a public speaker it was just you know",
    "start": "109680",
    "end": "116880"
  },
  {
    "text": "the way that like every good engineer you think oh I've answered this problem so many times",
    "start": "116880",
    "end": "122200"
  },
  {
    "text": "I can solve this by just writing it down once and I can give people the URL and that's that's kind of how I got",
    "start": "122200",
    "end": "127759"
  },
  {
    "text": "started so a question on that did go encourage you to find your voice or did",
    "start": "127759",
    "end": "133920"
  },
  {
    "text": "just becoming a better engineer encourage you to find that voice I it's it's kind of a question does the Tail",
    "start": "133920",
    "end": "140720"
  },
  {
    "text": "Tail Wag the Dog or does the dog wag the tail certainly so I joined",
    "start": "140720",
    "end": "146239"
  },
  {
    "text": "canonical uh would have been would have been about five years years ago about",
    "start": "146239",
    "end": "151680"
  },
  {
    "text": "four or five years ago and we were encouraged to communicate on IC all the time and so it was a great opportunity",
    "start": "151680",
    "end": "156840"
  },
  {
    "text": "to Moonlight in the um is in the the IC channel for um for go um and yeah at the",
    "start": "156840",
    "end": "164800"
  },
  {
    "text": "time like this is go 1.1.0 was just barely out and there was so many questions people have and they they",
    "start": "164800",
    "end": "170640"
  },
  {
    "text": "would kind of come into the Channel all the time and ask the same question and so I would um you know as I said tried",
    "start": "170640",
    "end": "176840"
  },
  {
    "text": "to solve this problem by just writing it down and I give people URLs and then um",
    "start": "176840",
    "end": "182040"
  },
  {
    "text": "around the same time so go had supported arm and I I knew this and I found a",
    "start": "182040",
    "end": "187959"
  },
  {
    "text": "really cheap arm boox in Australia and one of the magical things about Australia is that um we don't have",
    "start": "187959",
    "end": "195120"
  },
  {
    "text": "access to Rasberry pies and things like that things it's always hard to get to get equipment and so when I found this I",
    "start": "195120",
    "end": "200840"
  },
  {
    "text": "was like can I install go on it and I and I could and that became the very first um Builder and I was so excited",
    "start": "200840",
    "end": "206400"
  },
  {
    "text": "about it I wanted to like tell people about hey you can run go on this on this kind of hacked Up N Naz um",
    "start": "206400",
    "end": "213200"
  },
  {
    "text": "and that was think that was one of the first things I I wrote on my blog um and yeah then it just went from there in",
    "start": "213200",
    "end": "218920"
  },
  {
    "text": "addition to all the blog rating you've also contributed quite a bit to Gil yeah so as I said in in my introduction it",
    "start": "218920",
    "end": "225400"
  },
  {
    "text": "was kind of like this opportunity to get involved at the ground floor um like all you needed all you needed to be involved",
    "start": "225400",
    "end": "231799"
  },
  {
    "text": "with spare time and uh it's it's just snow snowbo since then um you know they",
    "start": "231799",
    "end": "238360"
  },
  {
    "text": "kind of you know seeing fate kind of kind of thing for years you hosted the",
    "start": "238360",
    "end": "243799"
  },
  {
    "text": "uh unofficial builds for the arm platforms on your website and I think it",
    "start": "243799",
    "end": "249599"
  },
  {
    "text": "was it was not not too far in the past when go started making the build",
    "start": "249599",
    "end": "255159"
  },
  {
    "text": "dashboard and and actually having builders that were hosted in-house but uh I think for the longest time all of",
    "start": "255159",
    "end": "262160"
  },
  {
    "text": "us that used arm boards with go were downloading go directly from you which",
    "start": "262160",
    "end": "267479"
  },
  {
    "text": "was awesome and and we all appreciated our our raspberry pies definitely are thankful for that yeah so like arm like",
    "start": "267479",
    "end": "275720"
  },
  {
    "text": "I really think arm is is really special like um I know Intel rules most of the server world but like arm has a really",
    "start": "275720",
    "end": "282800"
  },
  {
    "text": "special place it's so simple it's such a um you beautifully clean operating um",
    "start": "282800",
    "end": "289400"
  },
  {
    "text": "instruction set rather than you know the the Intel mass and so like I just like I appreciate go for being simple and",
    "start": "289400",
    "end": "295120"
  },
  {
    "text": "minimal I really appreciated arm for being all the all the same things um the the story for how to uh build and uh",
    "start": "295120",
    "end": "304039"
  },
  {
    "text": "build build an arm distribution and mainly a lot of the the magic about arm machines is",
    "start": "304039",
    "end": "309600"
  },
  {
    "text": "they're usually pretty pretty weak especially the arm five ones so a lot of people didn't have the opportunity to",
    "start": "309600",
    "end": "315199"
  },
  {
    "text": "build go um cross compiling it used to be quite difficult as as we all know so that was just something I could do I",
    "start": "315199",
    "end": "321479"
  },
  {
    "text": "reached out to Andrew and said you know as long as I put a big warning not official unsupported label at the top",
    "start": "321479",
    "end": "327280"
  },
  {
    "text": "you happy for me to maintain those maintain those builds and he was he was happy to but in the last year we've",
    "start": "327280",
    "end": "333639"
  },
  {
    "text": "managed to get real Builders using places like scaleway um I think Skyway hosts all the Intel Builders so now we",
    "start": "333639",
    "end": "339759"
  },
  {
    "text": "have real builders on the dashboard which means that the go project can produce a real TBO for everyone to use",
    "start": "339759",
    "end": "346039"
  },
  {
    "text": "which is EXA exactly exact what I wanted it's graduated from being uh from from",
    "start": "346039",
    "end": "351280"
  },
  {
    "text": "being a s project to being something that's fully supported by the go team now no I think the blog post I'm waiting",
    "start": "351280",
    "end": "357400"
  },
  {
    "text": "for the most is the how does Dave Cheney make more time in a day because like you have a day job you",
    "start": "357400",
    "end": "364600"
  },
  {
    "text": "contribute to go you contribute to um proposals for language changes uh",
    "start": "364600",
    "end": "371120"
  },
  {
    "text": "recently you've been traveling a lot doing talks at a lot of go conferences and just yeah how you make time for that",
    "start": "371120",
    "end": "377599"
  },
  {
    "text": "is just astonishing yeah it's it's it's a pretty it's a pretty full schedule um the magic of Australia is that it's it's",
    "start": "377599",
    "end": "385000"
  },
  {
    "text": "a day or two in a plane anywhere anywhere you want to go I don't know I've I've I've always been very very",
    "start": "385000",
    "end": "391160"
  },
  {
    "text": "likey like canonical extremely supportive of me working on go and they even sponsored uh some of the time they",
    "start": "391160",
    "end": "397199"
  },
  {
    "text": "sponsored me like they sponsored arum and I to work on the first cut of the arm64 port um so that was that was that",
    "start": "397199",
    "end": "404199"
  },
  {
    "text": "was great that my day job could become the thing that I love um and yeah you you just find uh find time in find time",
    "start": "404199",
    "end": "411919"
  },
  {
    "text": "in the weekends and after work and just integrate it into into your life um I I'm I'm really lucky that that I've been",
    "start": "411919",
    "end": "418199"
  },
  {
    "text": "able to do that well on behalf of all of the people across the world we all really appreciate the effort that you",
    "start": "418199",
    "end": "425199"
  },
  {
    "text": "put into um peliti and go and teaching everybody and and building Community we",
    "start": "425199",
    "end": "431560"
  },
  {
    "text": "we I don't think the go Community would be the way it is now without you so thank you thanks Brian yeah I totally",
    "start": "431560",
    "end": "438680"
  },
  {
    "text": "agree with that yeah I mean I have to add my my name to the list of people who who learned a ton from Dave's blog",
    "start": "438680",
    "end": "445199"
  },
  {
    "text": "especially in the early days uh I mean cuz when Brian and I were starting out in late 2011 early 2012 I mean there",
    "start": "445199",
    "end": "453560"
  },
  {
    "text": "wasn't a lot of content out there I I I feel really really liky and privileged",
    "start": "453560",
    "end": "458720"
  },
  {
    "text": "to be able to do that because it wasn't like it was a space that I could fill up with words um like there was you know",
    "start": "458720",
    "end": "466759"
  },
  {
    "text": "some some great great things to say about go I was learning a lot about it I wanted to tell other people about it and",
    "start": "466759",
    "end": "473960"
  },
  {
    "text": "there there was there was just just an opportunity it was like if you'd have met me as I said five years ago or you",
    "start": "473960",
    "end": "479080"
  },
  {
    "text": "know 10 10 years ago you wouldn't have picked me for any of these things that I don't",
    "start": "479080",
    "end": "484120"
  },
  {
    "text": "know whether I've had to learn them or whether I've been um lucky to learn to be to be a",
    "start": "484120",
    "end": "491080"
  },
  {
    "text": "public speaker like I haven't done any public speaking since high school like I I thought when I graduated I can just",
    "start": "491080",
    "end": "496199"
  },
  {
    "text": "throw away that bit of my brain like I'm never going to need to be do public speaking or debating anymore but had to",
    "start": "496199",
    "end": "502199"
  },
  {
    "text": "learn learn how to learn how to do that um again um a writer my father is very was very",
    "start": "502199",
    "end": "509520"
  },
  {
    "text": "impressed by that um he he was like I never I never your writing has improved",
    "start": "509520",
    "end": "515039"
  },
  {
    "text": "so much cuz yeah like as as an engineer leaving leaving High School I didn't",
    "start": "515039",
    "end": "520200"
  },
  {
    "text": "think a what what non-fiction writing who needs that I just need",
    "start": "520200",
    "end": "525279"
  },
  {
    "text": "code well I think we've spent uh 14 minutes now on Dave Cheney fanboyism so",
    "start": "525279",
    "end": "531920"
  },
  {
    "text": "why don't we why don't we slow down on the ass kissing session for just a minute and talk about some of the really",
    "start": "531920",
    "end": "536959"
  },
  {
    "text": "cool things that you've done lately um you gave a a great talk at golang UK last week about solid design why don't",
    "start": "536959",
    "end": "543000"
  },
  {
    "text": "you tell us a little bit about that the the meat of that talk the solid design principles came out of a presentation I",
    "start": "543000",
    "end": "548560"
  },
  {
    "text": "did a couple a couple of months ago uh in Perth to Dave Thomas's ya uh group",
    "start": "548560",
    "end": "554120"
  },
  {
    "text": "group of conferences and that that that talk was uh to to a group of people who",
    "start": "554120",
    "end": "559480"
  },
  {
    "text": "didn't really know go like it was a mixed uh a mixed bag of technologists most of whom were very passionate about",
    "start": "559480",
    "end": "565399"
  },
  {
    "text": "functional programming um and so I had an opportunity to take this talk and kind of redo it for a home team a home",
    "start": "565399",
    "end": "571839"
  },
  {
    "text": "team crowd and I wanted to put it inside a to to make it interesting for the audience say why should you care about",
    "start": "571839",
    "end": "578200"
  },
  {
    "text": "these things not just being presented in abstract I want to wrap it in a bigger request for for what I see from go that",
    "start": "578200",
    "end": "583959"
  },
  {
    "text": "if go is going to be a language which companies invest in you know they they build they build products and they and",
    "start": "583959",
    "end": "591000"
  },
  {
    "text": "use them in their infrastructure they're going to invest in them for 10 15 20 years then my my bigger message was that",
    "start": "591000",
    "end": "598160"
  },
  {
    "text": "go programmers need to start start thinking about how programs are designed like because the alternative is that we",
    "start": "598160",
    "end": "605079"
  },
  {
    "text": "just become the JavaScript framework of the month and it possibly replaced by",
    "start": "605079",
    "end": "610440"
  },
  {
    "text": "something else but if we think about design um and talk and more importantly talk about design develop a language to",
    "start": "610440",
    "end": "617160"
  },
  {
    "text": "talk about the design of programs rather than just moving from the next fastest HTTP router to the next one",
    "start": "617160",
    "end": "624880"
  },
  {
    "text": "then then go has a has a chance uh to to be to be a language that um people you",
    "start": "624880",
    "end": "631480"
  },
  {
    "text": "know people want to use the programs that have written in 10 15 years so Dave's definitely listened to the show",
    "start": "631480",
    "end": "637440"
  },
  {
    "text": "because Brian rants about the number of HTTP routers about every",
    "start": "637440",
    "end": "642639"
  },
  {
    "text": "episode the other talk I gave at goang UK was about how to write fast go code so I might be a little bit hypocritical",
    "start": "642639",
    "end": "649320"
  },
  {
    "text": "in in dumping on people who are writing HTTP routers but the the bigger the bigger picture is that the go code that",
    "start": "649320",
    "end": "656519"
  },
  {
    "text": "we write today has to be maintainable has has to be changeable it can't it can't just be something which solves",
    "start": "656519",
    "end": "662560"
  },
  {
    "text": "today's need it has to be uh it needs to be maintainable for the for the long",
    "start": "662560",
    "end": "668120"
  },
  {
    "text": "term because otherwise maybe maybe in 5 years people like oh this go code it's",
    "start": "668120",
    "end": "673920"
  },
  {
    "text": "not maintainable what are we going to do and they'll rewrite it in something else and then continue that continue that",
    "start": "673920",
    "end": "680440"
  },
  {
    "text": "that kind of search for the search search for the next thing like to be to be a an investment that the",
    "start": "680440",
    "end": "688079"
  },
  {
    "text": "company's going to make for a decade or more the the the maintenance of the",
    "start": "688079",
    "end": "693399"
  },
  {
    "text": "program is far more important than the initial just just sticking the Prototype together and seeing how fast it goes and",
    "start": "693399",
    "end": "699720"
  },
  {
    "text": "there is another aspect of thinking about design for me it it does take",
    "start": "699720",
    "end": "705480"
  },
  {
    "text": "effort it does take effort in uh you learning what good design means but once",
    "start": "705480",
    "end": "713079"
  },
  {
    "text": "you start learning it it makes coding easier for example when I started",
    "start": "713079",
    "end": "719079"
  },
  {
    "text": "writing go I would think where do I put things and I see people asking that all",
    "start": "719079",
    "end": "724200"
  },
  {
    "text": "over the place where do I put things where do I put my models where do I put put this what I put that well if you",
    "start": "724200",
    "end": "729920"
  },
  {
    "text": "take some time and think about how to design your interfaces how to design your packages how to organize everything",
    "start": "729920",
    "end": "736240"
  },
  {
    "text": "and if if you start thinking about dependencies those questions that question gets answered automatically and",
    "start": "736240",
    "end": "743160"
  },
  {
    "text": "you end up with good codes so there are multiple layers and multiple",
    "start": "743160",
    "end": "749880"
  },
  {
    "text": "reason reasons for you to think about design I think that that's exactly right and you touched on a really important",
    "start": "749880",
    "end": "756079"
  },
  {
    "text": "thing that you just said good code there but that's like that's kind of super subjective what is good code well I like",
    "start": "756079",
    "end": "762720"
  },
  {
    "text": "it to look a certain way I like to have long identifiers I like to call my receiver this rather than rather than",
    "start": "762720",
    "end": "768199"
  },
  {
    "text": "you know the single letter that we're we're used to because that's how I used to do it and what I was interested in",
    "start": "768199",
    "end": "774399"
  },
  {
    "text": "talking about um in in the UK is what what if we had a different language to",
    "start": "774399",
    "end": "779880"
  },
  {
    "text": "talk about design that was not so subjective like I like this and I like I prefer it to be a a certain way that was",
    "start": "779880",
    "end": "785920"
  },
  {
    "text": "more that was more objective and that's some some of the ideas that that Martin Soler principles talk about they're not",
    "start": "785920",
    "end": "792040"
  },
  {
    "text": "they're they're less they're less not no less opinionated but they come from a point of saying I I like this because it",
    "start": "792040",
    "end": "799680"
  },
  {
    "text": "is uh it is easy to modify I don't like this because there's a lot of coupling",
    "start": "799680",
    "end": "805320"
  },
  {
    "text": "with the other types and other packages we can say we can say it more objectively and uh when you the thing Martin says",
    "start": "805320",
    "end": "812959"
  },
  {
    "text": "about the solid principles is that they're not they're not rules they're just their guidelines like you can you",
    "start": "812959",
    "end": "819440"
  },
  {
    "text": "can say every now and then look you know I want to be you know I I should be honest in all my dealings I should be",
    "start": "819440",
    "end": "825720"
  },
  {
    "text": "truthful with my friends but sometimes you have to bend the rules tell a little white lie those those kind of things and",
    "start": "825720",
    "end": "830839"
  },
  {
    "text": "it's when you talk about when you talk about design principles you can say things like I don't I don't like this",
    "start": "830839",
    "end": "837880"
  },
  {
    "text": "because it's quite tightly coupled but this seems like a reasonable trade-off to achieve our objective and and it's",
    "start": "837880",
    "end": "845639"
  },
  {
    "text": "interesting to talk about design using those kind of words rather than rather than things like I I don't like that",
    "start": "845639",
    "end": "851720"
  },
  {
    "text": "that code should be more beautiful beautiful or I don't like it it should be shorter these are um not really",
    "start": "851720",
    "end": "858120"
  },
  {
    "text": "actionable for to to have having a wider design context like because everyone's",
    "start": "858120",
    "end": "863560"
  },
  {
    "text": "idea of well how short is short how beautiful is is beautiful becomes just subjective and the subject arguments",
    "start": "863560",
    "end": "870000"
  },
  {
    "text": "right some of those things that people point out are more from an aesthetic standpoint right and it's like art uh",
    "start": "870000",
    "end": "876279"
  },
  {
    "text": "what I appreciate is going to always be different from what you appreciate but I think we can both agree that two highly",
    "start": "876279",
    "end": "882079"
  },
  {
    "text": "coupled components are hard to maintain right we can collectively agree that on that so yeah I I think talking about",
    "start": "882079",
    "end": "888800"
  },
  {
    "text": "this at this me uh objective level makes a lot of sense and it's one of the reasons why I loved Ruby a lot when I",
    "start": "888800",
    "end": "896040"
  },
  {
    "text": "came into the Ruby World a few years ago was cuz these were the conversations people were having all the time or about",
    "start": "896040",
    "end": "902880"
  },
  {
    "text": "uh the law of Dem meter and and coupling and cohesion and things like that and I",
    "start": "902880",
    "end": "908199"
  },
  {
    "text": "really appreciate that people were talking about making clean abstractions and maintainable code so I like the idea",
    "start": "908199",
    "end": "914000"
  },
  {
    "text": "that we're starting to talk about that in the go world as well yeah absolutely and and I think it it's critical because",
    "start": "914000",
    "end": "920880"
  },
  {
    "text": "companies if companies are going to invest in the long term and they they have started like you know we have Docker all the coros products all the",
    "start": "920880",
    "end": "927639"
  },
  {
    "text": "hashy cor products kubernetes there's an investment but to M to make that",
    "start": "927639",
    "end": "933040"
  },
  {
    "text": "investment pay off in the future it can't just be just smashing out code as fast as possible there has to be some f",
    "start": "933040",
    "end": "940639"
  },
  {
    "text": "some fundamental design so we can change the code in the future as the requirements change so my question is if",
    "start": "940639",
    "end": "948399"
  },
  {
    "text": "there's a maturity model for go as we evolve into a more popular language and",
    "start": "948399",
    "end": "955279"
  },
  {
    "text": "a more uh well adopted language does that mean we have",
    "start": "955279",
    "end": "961639"
  },
  {
    "text": "to go through some ugly growth phases like gang of four patterns and Enterprise Java beans",
    "start": "961639",
    "end": "967880"
  },
  {
    "text": "or what what does our maturity model look like and go does anybody else want to jump in while I think sure I I think",
    "start": "967880",
    "end": "974880"
  },
  {
    "text": "that gang of four is probably a little too far right I I don't think we want to",
    "start": "974880",
    "end": "979959"
  },
  {
    "text": "get into that because the language is specifically kind of designed to prevent",
    "start": "979959",
    "end": "985560"
  },
  {
    "text": "that right like uh the whole inheritance chain and things like that so but I",
    "start": "985560",
    "end": "990759"
  },
  {
    "text": "think that there are some lessons to be learned right like most of those abstractions were built for for good",
    "start": "990759",
    "end": "997240"
  },
  {
    "text": "reasons you know um abstracting away creating clean interfaces and things",
    "start": "997240",
    "end": "1002279"
  },
  {
    "text": "like that and I think that we can do that without having to have that many patterns like kind of kind of did Dave's",
    "start": "1002279",
    "end": "1009360"
  },
  {
    "text": "Point like there there should be kind of objective goals that we're trying to achieve and not",
    "start": "1009360",
    "end": "1014480"
  },
  {
    "text": "necessarily uh set in stone patterns I guess would be my my take on that so I I",
    "start": "1014480",
    "end": "1020480"
  },
  {
    "text": "did have a section in the talk which which I cut and because I didn't have",
    "start": "1020480",
    "end": "1025959"
  },
  {
    "text": "enough time but mainly because I had a lot of push back on it so I I I start the talk by saying you know who does who",
    "start": "1025959",
    "end": "1031280"
  },
  {
    "text": "does code review you know why do you do code review someone yelled out to Define define bad code and um and that that's",
    "start": "1031280",
    "end": "1038438"
  },
  {
    "text": "that's really the the hook there um and I I kind of opened the question like so the patents book does that tell you how",
    "start": "1038439",
    "end": "1044600"
  },
  {
    "text": "to write good code and my my assertion was perhaps not perhaps in in the in the bigger context they they're called",
    "start": "1044600",
    "end": "1051840"
  },
  {
    "text": "patterns because you apply them like like a sewing pattern or like like a like a recipe when you have a particular",
    "start": "1051840",
    "end": "1058240"
  },
  {
    "text": "problem you you could use a set a set of those um a set of those Solutions if",
    "start": "1058240",
    "end": "1063880"
  },
  {
    "text": "they fit but I think talking about design and principles to take Martin's word are kind of high level high level",
    "start": "1063880",
    "end": "1071160"
  },
  {
    "text": "Notions of what is the goal not what is the problem I'm I'm solving right now",
    "start": "1071160",
    "end": "1076760"
  },
  {
    "text": "and if the goal um is to make The Code maintainable by maintainable I mean changeable in the future a thing like a",
    "start": "1076760",
    "end": "1084720"
  },
  {
    "text": "visitor patent or an iterator pattern isn't going to give you the vocabulary to talk about that it's you know that",
    "start": "1084720",
    "end": "1090440"
  },
  {
    "text": "that's just a point solution yeah I think I think it also limits the possibilities right like if if we always",
    "start": "1090440",
    "end": "1096440"
  },
  {
    "text": "refer to you need to use one of these patterns I think that it also kind of closes off creativity but I think that",
    "start": "1096440",
    "end": "1102919"
  },
  {
    "text": "we can generically talk about things like these two components should not be coupled together and uh I always mix up",
    "start": "1102919",
    "end": "1110559"
  },
  {
    "text": "the two books there's another there's another book uh called clean code by by",
    "start": "1110559",
    "end": "1116679"
  },
  {
    "text": "Bob Martin as well um and then there's uh pragmatic programmer from journeyman",
    "start": "1116679",
    "end": "1121919"
  },
  {
    "text": "to master both of those books I really like and they have a lot of kind of unique ideas in there where where they",
    "start": "1121919",
    "end": "1127080"
  },
  {
    "text": "kind of show you like if one if one type seems to know too much about another type maybe you have the function in the",
    "start": "1127080",
    "end": "1133280"
  },
  {
    "text": "wrong place and things like that and we can talk about these at a very very high level without having to like you said go",
    "start": "1133280",
    "end": "1140120"
  },
  {
    "text": "into like oh well this is a visitor pattern or this is a decorator pattern or flywheel or any of the other ones in",
    "start": "1140120",
    "end": "1146080"
  },
  {
    "text": "the gang of four book like it's actually kind of interesting I haven't had to think about the gang of four book in a number of years since leaving",
    "start": "1146080",
    "end": "1153000"
  },
  {
    "text": "Java and and and that's a good thing too because I I distinctly remember a piece of middleware that I swore Somebody went",
    "start": "1153000",
    "end": "1159320"
  },
  {
    "text": "through the book and found a use for every single pattern in the book so here's the weird thing about The",
    "start": "1159320",
    "end": "1165640"
  },
  {
    "text": "Paton book um when it was I guess was written in the the M mid to late ' 80s",
    "start": "1165640",
    "end": "1170919"
  },
  {
    "text": "probably in the '90s at the time people and I'm kind of gesticulating to The Luminaries who ride Paton books thought",
    "start": "1170919",
    "end": "1177480"
  },
  {
    "text": "that it would be it's it would just be the first of many books they thought there would be patn in in everything and",
    "start": "1177480",
    "end": "1183679"
  },
  {
    "text": "you know every year there would be you know patents 2005 2006 like just an endless supply of them but it actually",
    "start": "1183679",
    "end": "1190640"
  },
  {
    "text": "turned out that the 30 odd of them they're in that book are pretty much all there are and it's not because um",
    "start": "1190640",
    "end": "1196320"
  },
  {
    "text": "DeMarco and his friends sat I think um gamar and sat down and like thought up",
    "start": "1196320",
    "end": "1201440"
  },
  {
    "text": "30 patterns and then were like okay we've got to do a second edition of the book they observed them in code that",
    "start": "1201440",
    "end": "1206600"
  },
  {
    "text": "they were looking at they kind of they kind of got it back to front they were they looked at this wide body of code",
    "start": "1206600",
    "end": "1211799"
  },
  {
    "text": "and tried to find commonalities and from from there they extrapolated the patn book but they they could never find more",
    "start": "1211799",
    "end": "1218720"
  },
  {
    "text": "patterns because they're just they're a finite number of them they're like kind like a law of nature you can't invent",
    "start": "1218720",
    "end": "1224240"
  },
  {
    "text": "new new laws of nature they're just there and so so that that really kind of all of a sudden instead of the",
    "start": "1224240",
    "end": "1230919"
  },
  {
    "text": "patents book being the start of a you know a way that we're going to describe every you know every piece of software",
    "start": "1230919",
    "end": "1236000"
  },
  {
    "text": "design it just kind of became this one point in time of um the these these",
    "start": "1236000",
    "end": "1241960"
  },
  {
    "text": "couple of dozen kind of observations about software at that time you know",
    "start": "1241960",
    "end": "1247080"
  },
  {
    "text": "written in the 80s and one of the things about my um my talk and I was very inspired to do it um ironically in",
    "start": "1247080",
    "end": "1254360"
  },
  {
    "text": "London because Jim W's talk from 2007 starts with um talking about the Great Fire of London and saying you know then",
    "start": "1254360",
    "end": "1261159"
  },
  {
    "text": "then when they were going to uh rebuild London they had all these proposals for how to rebuild London and his question",
    "start": "1261159",
    "end": "1267440"
  },
  {
    "text": "like that he opened his talk with was well looking at all these different plans for how to rebuild London how do",
    "start": "1267440",
    "end": "1272720"
  },
  {
    "text": "you decide what's a good one how do you decide like we're all not architects in this room how do you decide which one",
    "start": "1272720",
    "end": "1278000"
  },
  {
    "text": "you like like what is the right design to rebuild London and and again without a language to describe what is good",
    "start": "1278000",
    "end": "1284960"
  },
  {
    "text": "architectural design any more than what is good software design yeah that's interesting I mean we could say the same",
    "start": "1284960",
    "end": "1290400"
  },
  {
    "text": "about algorithms too right there's there's a lot of clearly defined algorithms that have really good use",
    "start": "1290400",
    "end": "1295919"
  },
  {
    "text": "cases and we reach for that bag of well-defined algorithms based on need but sometimes you know based on things",
    "start": "1295919",
    "end": "1303480"
  },
  {
    "text": "we know about how things scale and their performance and how clean they are we",
    "start": "1303480",
    "end": "1308880"
  },
  {
    "text": "also are free to make our own choices right yeah to to talk about algorithms what is the metal language",
    "start": "1308880",
    "end": "1315400"
  },
  {
    "text": "that we talk about algorithms the the Big O notation what is is the time complexity versus the space complexity",
    "start": "1315400",
    "end": "1321000"
  },
  {
    "text": "and it it it's like a a a link list has better space complexity but but poor",
    "start": "1321000",
    "end": "1326799"
  },
  {
    "text": "time complexity um and also in in in New in current Hardware it has um even",
    "start": "1326799",
    "end": "1332279"
  },
  {
    "text": "poorer time complexity versus versus just a vector so the The Meta language",
    "start": "1332279",
    "end": "1337640"
  },
  {
    "text": "to talk about algorithms are these these concepts of time complexity and space complexity it's Space versus time time",
    "start": "1337640",
    "end": "1344600"
  },
  {
    "text": "trade-off and I mean the unfortunately that's a lot more measurable than you",
    "start": "1344600",
    "end": "1350440"
  },
  {
    "text": "know this uh these Concepts we're talking about now with you know how coupled is something right like that's",
    "start": "1350440",
    "end": "1356520"
  },
  {
    "text": "hard to measure yep yeah um but there's there's still probably an argument that you compare like a like a hashmap to",
    "start": "1356520",
    "end": "1363400"
  },
  {
    "text": "just in Array of items for really big hashmaps and really big arrays of items",
    "start": "1363400",
    "end": "1368520"
  },
  {
    "text": "the the lookup time is order log n versus order order n um but for really",
    "start": "1368520",
    "end": "1373600"
  },
  {
    "text": "small ones that n is really small so does it matter like right you can't the",
    "start": "1373600",
    "end": "1379480"
  },
  {
    "text": "these are the the kind of subtleties of you know if if you were saying well we always have to use a hashmap because hashmaps have faster lookups is is",
    "start": "1379480",
    "end": "1387279"
  },
  {
    "text": "ignoring the fact of you know it's a HTTP header map it's maybe only ever going to have five things in it what's",
    "start": "1387279",
    "end": "1392880"
  },
  {
    "text": "what's the overhead of setting up that hash map hashing all the items versus just doing a straight linear linear",
    "start": "1392880",
    "end": "1398799"
  },
  {
    "text": "search through like you know HTP headers only have like five or six items in them usually so those those are the kind of",
    "start": "1398799",
    "end": "1405320"
  },
  {
    "text": "design design decisions I guess you can talk about out with space and time the",
    "start": "1405320",
    "end": "1411960"
  },
  {
    "text": "Big O notation but so that that was that was the the thing that I wanted to get people um in the go Community talking",
    "start": "1411960",
    "end": "1418480"
  },
  {
    "text": "about talk about design at a high level rather than rather than just posting on Reddit hey I need a what's what's the",
    "start": "1418480",
    "end": "1425120"
  },
  {
    "text": "fastest what's the fastest or the best like talk about subjective concerns what's the fastest web framework what's",
    "start": "1425120",
    "end": "1431000"
  },
  {
    "text": "the best um what's what's the best HTTP router these are I I wanted to see",
    "start": "1431000",
    "end": "1437320"
  },
  {
    "text": "people start to talk at a higher level and say start start thinking about what what is what is the best way to design",
    "start": "1437320",
    "end": "1443559"
  },
  {
    "text": "my application to make it maintainable in the future make make it maintainable and reusable composable in the future",
    "start": "1443559",
    "end": "1450120"
  },
  {
    "text": "yeah and I'd love to see more conversations along these lines too because I mean I've been developing go for a number of years and I still",
    "start": "1450120",
    "end": "1455720"
  },
  {
    "text": "struggle with um kind of package layout like at what point do I split things up",
    "start": "1455720",
    "end": "1461080"
  },
  {
    "text": "into separate packages when do I kind of make sub packages um you know how we",
    "start": "1461080",
    "end": "1466440"
  },
  {
    "text": "kind of have like IO and then IO util and things like that and I'm still I'm still trying to abstract these patterns",
    "start": "1466440",
    "end": "1473159"
  },
  {
    "text": "from common code bases that I see and come up with my own rules of thumb so",
    "start": "1473159",
    "end": "1478640"
  },
  {
    "text": "having more conversations like this you know more people talking about it I think is a really good thing because I think a lot of people can learn from",
    "start": "1478640",
    "end": "1485000"
  },
  {
    "text": "this yeah the standard library is kind of a d a double-edged sword like for",
    "start": "1485000",
    "end": "1490440"
  },
  {
    "text": "like for authors like yourself or any anybody who wants to kind of give some advice that won't change next week the",
    "start": "1490440",
    "end": "1496520"
  },
  {
    "text": "standard library is really good because the go on Guarantee means that you know it's it's going to be the same for you",
    "start": "1496520",
    "end": "1502880"
  },
  {
    "text": "know 5 or 10 years we can you know we can give this advice and no know it won't be out of date soon but the thing",
    "start": "1502880",
    "end": "1508480"
  },
  {
    "text": "about the go library is it it what some of the most well-reviewed go code in in",
    "start": "1508480",
    "end": "1513919"
  },
  {
    "text": "the world it's written by the best go programmers at the time it's also some of the oldest go",
    "start": "1513919",
    "end": "1519279"
  },
  {
    "text": "code um and has some inconsistencies like you can look at it and pretty much prove whatever side of the argument you",
    "start": "1519279",
    "end": "1526159"
  },
  {
    "text": "want to you want to make You'll Always Find example in there that supports your whatever argument you want to make um",
    "start": "1526159",
    "end": "1532279"
  },
  {
    "text": "which which is tricky because what is one of the one of the three things that we tell we tell newo programmers go do",
    "start": "1532279",
    "end": "1538720"
  },
  {
    "text": "the tour go read the language spec go read the standard Library um and it's not it's not as",
    "start": "1538720",
    "end": "1546679"
  },
  {
    "text": "clear a guidance as I think we'd like well some of the problem with the standard library is that uh pieces of",
    "start": "1546679",
    "end": "1552760"
  },
  {
    "text": "that code were written before we knew what good go code design looked like you",
    "start": "1552760",
    "end": "1558039"
  },
  {
    "text": "it evolved with design and and we didn't take the time we as as the go Community",
    "start": "1558039",
    "end": "1563600"
  },
  {
    "text": "didn't take the time to go back and change those things in the standard library for various reasons and so it is",
    "start": "1563600",
    "end": "1570559"
  },
  {
    "text": "I agree it's interesting to see some of the variances in style especially in the",
    "start": "1570559",
    "end": "1576240"
  },
  {
    "text": "standard live based on the age of the code yeah absolutely yeah and how you",
    "start": "1576240",
    "end": "1581880"
  },
  {
    "text": "talked about kind of things changing um and evolving it it was based on what we",
    "start": "1581880",
    "end": "1586919"
  },
  {
    "text": "knew at the time um I mean one of those things that you've been also kind of uh doing talks",
    "start": "1586919",
    "end": "1593000"
  },
  {
    "text": "about and advocating is error handling and I think before we kind of shift over into that we should probably break",
    "start": "1593000",
    "end": "1599440"
  },
  {
    "text": "really quick uh to do kind of a shout out to our sponsors and then we'll kind of come over and start talking into your",
    "start": "1599440",
    "end": "1605440"
  },
  {
    "text": "error changes Okay cool so I'm excited to talk about our new sponsor backtrace",
    "start": "1605440",
    "end": "1610720"
  },
  {
    "text": "uh backtrace sponsored our live streaming at gophercon so if you were one of the over 10,000 people who tuned",
    "start": "1610720",
    "end": "1617159"
  },
  {
    "text": "in to watch watch go foron on Twitch you've got back Trace to thank for It software teams are using back Trace to",
    "start": "1617159",
    "end": "1623880"
  },
  {
    "text": "take the headache and guesswork out of debugging across their Frameworks when your application fails",
    "start": "1623880",
    "end": "1629919"
  },
  {
    "text": "back Trace jumps into action capturing detailed application State including the complete set of go routines that are",
    "start": "1629919",
    "end": "1636279"
  },
  {
    "text": "running the channels and the weight durations on those channels and lots of good scheduler information too they",
    "start": "1636279",
    "end": "1643200"
  },
  {
    "text": "analyze all that state and archive it for you so that you can go back and explore the interesting patterns across",
    "start": "1643200",
    "end": "1648760"
  },
  {
    "text": "your errors and try to figure out uh better ways to make your application work a lot of big companies are using",
    "start": "1648760",
    "end": "1655279"
  },
  {
    "text": "back Trace like fastly limelike networks message system and app Nexus so you can",
    "start": "1655279",
    "end": "1661039"
  },
  {
    "text": "check out their website and blog including details on their premium go support and go to back",
    "start": "1661039",
    "end": "1667840"
  },
  {
    "text": "trace. gotime to start a free trial or request to demo yay back trce awesome so",
    "start": "1667840",
    "end": "1675039"
  },
  {
    "text": "we were just kind of talking about the standard library and evolving it um based on new knowledge gained from you",
    "start": "1675039",
    "end": "1681559"
  },
  {
    "text": "know years of writing code in what is the 10 spec and uh some of the stuff",
    "start": "1681559",
    "end": "1687240"
  },
  {
    "text": "that we're starting to see and one of the the topics you're you're primarily advocating is the way error handling is",
    "start": "1687240",
    "end": "1693039"
  },
  {
    "text": "done and it seemed like some of the Sentinel air values and kind of just returning up the air seem to be good",
    "start": "1693039",
    "end": "1701360"
  },
  {
    "text": "enough um as the language was evolving but uh I'd like to talk a bit more about",
    "start": "1701360",
    "end": "1706960"
  },
  {
    "text": "kind of your your new approach and you did a talk at uh goeran about it and",
    "start": "1706960",
    "end": "1713000"
  },
  {
    "text": "you've got a your own package to be used to help with error handling I'd like to talk a bit about that sure F first of",
    "start": "1713000",
    "end": "1719960"
  },
  {
    "text": "all before I say anything I need to be very clear that I stand stand a very small amount above the shoulders of of",
    "start": "1719960",
    "end": "1726440"
  },
  {
    "text": "many Giants who've done a lot of work before that the the errors package that",
    "start": "1726440",
    "end": "1731519"
  },
  {
    "text": "I wrote is directly influenced by the one that we wrote at Chronicle for juu",
    "start": "1731519",
    "end": "1736600"
  },
  {
    "text": "which is based on Roger Pepe's work from earlier like there there is a long lineage of this this idea revolving",
    "start": "1736600",
    "end": "1743480"
  },
  {
    "text": "which is kind of something that I see um I I also see in other um in in other",
    "start": "1743480",
    "end": "1750240"
  },
  {
    "text": "areas in go not to get too too distracted for example uh two two two",
    "start": "1750240",
    "end": "1755440"
  },
  {
    "text": "and a bit years ago Rob poke wrote about functional options um I thought I",
    "start": "1755440",
    "end": "1760720"
  },
  {
    "text": "thought this was such an amazing pattern that I went and talked about it at Dogo mainly because I didn't think people uh",
    "start": "1760720",
    "end": "1767519"
  },
  {
    "text": "G gave Rob's um post enough credit like I thought it was a a brilliant idea and it just kind of flew under the radar um",
    "start": "1767519",
    "end": "1773320"
  },
  {
    "text": "I talked about it I got on stage and talked about it at Dogo the idea keeps percolating and the latest evolution of",
    "start": "1773320",
    "end": "1778960"
  },
  {
    "text": "it is in we we see we see it in grpc they use that heavily in the constructors for all",
    "start": "1778960",
    "end": "1785519"
  },
  {
    "text": "the JPC types and it's just the the formalization around the naming of options and the way they're going to",
    "start": "1785519",
    "end": "1791559"
  },
  {
    "text": "they're going to call it so that what I see in the broader broader perspective to there is kind of an evolution of",
    "start": "1791559",
    "end": "1797840"
  },
  {
    "text": "these ideas which is which is how it should be so to to talk about errors is is two kind of two stories that that sit",
    "start": "1797840",
    "end": "1805279"
  },
  {
    "text": "side by side the first story is that I've written a lot of blog posts about how I think error handling should be",
    "start": "1805279",
    "end": "1811919"
  },
  {
    "text": "done and this is separate from uh from stack tracers and things like that in fact embarrassingly I actually wrote the",
    "start": "1811919",
    "end": "1818360"
  },
  {
    "text": "same blog post twice about an hour about a month a a month in between people even",
    "start": "1818360",
    "end": "1825120"
  },
  {
    "text": "gave it the same title um and when it when it showed up and read it people thought that uh people thought it",
    "start": "1825120",
    "end": "1830960"
  },
  {
    "text": "was a cross post but um the big picture there is that I'm",
    "start": "1830960",
    "end": "1836960"
  },
  {
    "text": "trying to push very heavily this idea that if there's an error return from your from your function in general and",
    "start": "1836960",
    "end": "1844120"
  },
  {
    "text": "there are always there always exceptions because especially when when you're dealing with the network and retrial",
    "start": "1844120",
    "end": "1850080"
  },
  {
    "text": "things but in in in general you should try to basically say this error happened",
    "start": "1850080",
    "end": "1855440"
  },
  {
    "text": "I don't know anything about anything about the details I just need to go through my cleanup behavior and then",
    "start": "1855440",
    "end": "1860799"
  },
  {
    "text": "give the error back to the caller um it it makes it makes the code and the",
    "start": "1860799",
    "end": "1866120"
  },
  {
    "text": "design so much simpler and so much more so much uh more decoupled to just say an",
    "start": "1866120",
    "end": "1871760"
  },
  {
    "text": "error happened I'm going to clean up whatever I was doing in this function that can actually and most times that's",
    "start": "1871760",
    "end": "1877240"
  },
  {
    "text": "almost nothing because we have nice small functions that are well well factored and then just give the error",
    "start": "1877240",
    "end": "1882360"
  },
  {
    "text": "back to the caller I don't know what happened I'm just cleaning up I'm going to give the error back to the caller and",
    "start": "1882360",
    "end": "1887760"
  },
  {
    "text": "so that's um I've talked about ideas of rather than checking the error matches a",
    "start": "1887760",
    "end": "1893360"
  },
  {
    "text": "particular value like or the ER um the error is a particular type you you",
    "start": "1893360",
    "end": "1899840"
  },
  {
    "text": "should Instead try and think about it as okay if I need to know something about this eror does it is it a temporary era",
    "start": "1899840",
    "end": "1907080"
  },
  {
    "text": "we'll assert does it have a temp does it fit the temporary interface which you get from net. con or you can define",
    "start": "1907080",
    "end": "1912720"
  },
  {
    "text": "define yourself and that that leads to much uh much Loosely coupled way of",
    "start": "1912720",
    "end": "1918720"
  },
  {
    "text": "error handling I don't know anything about what this error happened I don't know whether it happened in my direct caller whether it happened 100 stack",
    "start": "1918720",
    "end": "1924799"
  },
  {
    "text": "frames down something happened I'm going to clean up and and hand the error back to the back to the top so that's that's",
    "start": "1924799",
    "end": "1931480"
  },
  {
    "text": "kind of like like a a way for Designing designing go programs that",
    "start": "1931480",
    "end": "1938080"
  },
  {
    "text": "just deal with errors in that kind of fail fail fast kind of way you don't at every stage you're not trying to a",
    "start": "1938080",
    "end": "1944200"
  },
  {
    "text": "something something went wrong I'm going to look at that era and see if it matches a dozen of the a dozen of the",
    "start": "1944200",
    "end": "1949559"
  },
  {
    "text": "kinds that I know about and then in those particular cases I'm going to retry or I'm going to adjust some timer",
    "start": "1949559",
    "end": "1954919"
  },
  {
    "text": "and then do it again no just just blow up just blow up give it back to the the person above you maybe they know how to",
    "start": "1954919",
    "end": "1960639"
  },
  {
    "text": "do it um just keep just hand the error back fail fail early fail fast because we know that's the way to write Reliable",
    "start": "1960639",
    "end": "1967559"
  },
  {
    "text": "Software you know that that this idea of Crash crash only software if an error happens just quit something will restart",
    "start": "1967559",
    "end": "1974320"
  },
  {
    "text": "you try again so that's kind that's kind of one part in the in the case of the the is temporary check um I know in your",
    "start": "1974320",
    "end": "1982159"
  },
  {
    "text": "talk you you kind of brought that up but do you Advocate that if it's temporary people do some kind of exponential back",
    "start": "1982159",
    "end": "1988320"
  },
  {
    "text": "off with some back pressure to to eventually fail out or do you do are you",
    "start": "1988320",
    "end": "1993760"
  },
  {
    "text": "kind of advocating just always return and pass up the chain and and handle it at the the highest level possible it's",
    "start": "1993760",
    "end": "2001760"
  },
  {
    "text": "it's it's always it's always a trade-off I think in the places where you where your code does actually know it's",
    "start": "2001760",
    "end": "2007760"
  },
  {
    "text": "dealing with the network so this this is to come back to the idea of of you want to have modular design and if the the",
    "start": "2007760",
    "end": "2015279"
  },
  {
    "text": "way that your modules interact with each other are interfaces rather than concrete types in the case that your",
    "start": "2015279",
    "end": "2020720"
  },
  {
    "text": "code does know it's dealing with the network like you're you're actually writing a HTP server or you're um or",
    "start": "2020720",
    "end": "2027200"
  },
  {
    "text": "you're writing the SSH package or something like that something that will most the time actually work over the network you have you have the simplest",
    "start": "2027200",
    "end": "2033519"
  },
  {
    "text": "knowledge that when when a a particular caller operation does fail it could be",
    "start": "2033519",
    "end": "2038880"
  },
  {
    "text": "because DNS just DNS just flaked out or the network just flapped or something like that often times when you're when",
    "start": "2038880",
    "end": "2045919"
  },
  {
    "text": "you're working in this thing you're passed by another package is just a red right a red right closer you don't know",
    "start": "2045919",
    "end": "2051800"
  },
  {
    "text": "where that came from could be a buffer could be a file on disc could be anything so it really depends on what",
    "start": "2051800",
    "end": "2059000"
  },
  {
    "text": "what is what is the goal of the goal of your packag and to take that responsibility and just wrap and and",
    "start": "2059000",
    "end": "2064118"
  },
  {
    "text": "just wrap up so you can imagine that the the HTP package knows a lot about the network it knows it there's even things",
    "start": "2064119",
    "end": "2071599"
  },
  {
    "text": "that um we're trying to do in 1.8 to retry HTP eras if HTTP operations if we",
    "start": "2071599",
    "end": "2077158"
  },
  {
    "text": "think that they're safe to do so um like it's a get request it didn't have a body",
    "start": "2077159",
    "end": "2082398"
  },
  {
    "text": "there there was a temporary error trying to make the connection maybe in that circumstance you can you can retry but",
    "start": "2082399",
    "end": "2088919"
  },
  {
    "text": "all those kind of caveats mean that you know a lot about the environment that that package is operating in I think in",
    "start": "2088919",
    "end": "2094599"
  },
  {
    "text": "general you don't uh you don't know you don't have that kind of um that that the",
    "start": "2094599",
    "end": "2101000"
  },
  {
    "text": "kind of visibility to how your package is working and many times perhaps you shouldn't perhaps you should try and",
    "start": "2101000",
    "end": "2106079"
  },
  {
    "text": "treat them more like black boxes because that makes them easier to just clip together they're less uh implicit",
    "start": "2106079",
    "end": "2112440"
  },
  {
    "text": "agreements between between code they have to be they they have to be explicit or just they're just opaque I guess that",
    "start": "2112440",
    "end": "2119920"
  },
  {
    "text": "makes sense because even if you think about it from the network concept I mean what are you doing right some temporary",
    "start": "2119920",
    "end": "2125640"
  },
  {
    "text": "error may have occurred but you can't guarantee item potence right so you could retry but that may",
    "start": "2125640",
    "end": "2133119"
  },
  {
    "text": "cause some uh undesired effect on the other side because it half completed or",
    "start": "2133119",
    "end": "2139160"
  },
  {
    "text": "something like that so yeah I guess I can kind of see how retrying is always",
    "start": "2139160",
    "end": "2144520"
  },
  {
    "text": "hard you really have to understand what the system is doing and potentially check State and make sure that something",
    "start": "2144520",
    "end": "2150400"
  },
  {
    "text": "didn't get half committed before retrying exactly exactly so in those",
    "start": "2150400",
    "end": "2155599"
  },
  {
    "text": "situations it should shouldn't be so easy to just blly just put it in in a retry Loop like you perhaps want to",
    "start": "2155599",
    "end": "2161880"
  },
  {
    "text": "think about how how the how this operation file and that that means that you need to know then very intimately about all",
    "start": "2161880",
    "end": "2168880"
  },
  {
    "text": "the all the parts of the code down Downstream for you which means a lot more coupling you have a lot more um you",
    "start": "2168880",
    "end": "2175640"
  },
  {
    "text": "have a lot more knowledge of the the components that you're building on top of um and that that's certainly there",
    "start": "2175640",
    "end": "2182440"
  },
  {
    "text": "there are cases to do that I think I think they're less um dead less widespread than people think um and in",
    "start": "2182440",
    "end": "2190040"
  },
  {
    "text": "general you want to try and compose your programs out of um out of smaller pieces",
    "start": "2190040",
    "end": "2195400"
  },
  {
    "text": "like to give an example the the SSH package which is built on top of networking and SSH and public keys and",
    "start": "2195400",
    "end": "2202880"
  },
  {
    "text": "uh SSH agents the the interfaces that those types Implement is just your usual read",
    "start": "2202880",
    "end": "2208920"
  },
  {
    "text": "write closer um we we we worked really hard to make the uh con interface and",
    "start": "2208920",
    "end": "2214119"
  },
  {
    "text": "the session interface look pretty much like um like like a readr closer or a",
    "start": "2214119",
    "end": "2219880"
  },
  {
    "text": "similar thing that you get from OS exec um people don't EXA uh people don't",
    "start": "2219880",
    "end": "2226040"
  },
  {
    "text": "expect uh OS EXA vales to be retriable so we don't really expose those those",
    "start": "2226040",
    "end": "2232760"
  },
  {
    "text": "either so that that that's all from the point of view of you build building",
    "start": "2232760",
    "end": "2238800"
  },
  {
    "text": "building packages that you know inter interoperate at a very very high level they they don't know a lot about each",
    "start": "2238800",
    "end": "2244319"
  },
  {
    "text": "other apart from the interfaces there's a a separate part of error handling which is when error does",
    "start": "2244319",
    "end": "2250720"
  },
  {
    "text": "happen how do you tell the developer or the operations person or that I what I",
    "start": "2250720",
    "end": "2257319"
  },
  {
    "text": "was saying earlier you just kind of wave your hands and say I'm just going to give the error back to the person above me the code the code above me it'll",
    "start": "2257319",
    "end": "2263040"
  },
  {
    "text": "figure out what to do eventually eventually you're going to reach the top of your function or the main Handler of your web web server or",
    "start": "2263040",
    "end": "2270240"
  },
  {
    "text": "whatever it is and some and the you know that cost is going to come due you're going to have to figure out what happened and in that case you want to",
    "start": "2270240",
    "end": "2277160"
  },
  {
    "text": "get as much information about the error that happened you want to encode as much information as you can um preferably you",
    "start": "2277160",
    "end": "2283319"
  },
  {
    "text": "want to get a stack trace or something to point you to where where the ER where the error actually occurred um because",
    "start": "2283319",
    "end": "2291599"
  },
  {
    "text": "you know as a developer I'm going to get a bug report and if it just says failed to do request I eof where did that come",
    "start": "2291599",
    "end": "2299680"
  },
  {
    "text": "from where where did that come from so that the second part of error handling is using the using the fact that error",
    "start": "2299680",
    "end": "2307119"
  },
  {
    "text": "the error is a is a value and and we've just talked about from the caller's point of view just making it opaque just",
    "start": "2307119",
    "end": "2313440"
  },
  {
    "text": "making it just an error happened you you don't know anything more than that then we can use this fact and we can stick",
    "start": "2313440",
    "end": "2320440"
  },
  {
    "text": "extra information into it we can um for for a long for a long time the the",
    "start": "2320440",
    "end": "2325760"
  },
  {
    "text": "tradition has been use f f f RF put some",
    "start": "2325760",
    "end": "2331079"
  },
  {
    "text": "little prefix and then print out the error and then kind of annotate the error all the way up so you get this kind of string that's growing with a",
    "start": "2331079",
    "end": "2338160"
  },
  {
    "text": "little bit on the front every time um that that's been that's been a patter we've seen in the standard Library a lot",
    "start": "2338160",
    "end": "2344680"
  },
  {
    "text": "um Donovan kernigan talk about it in their book um there's a lot if you a lot",
    "start": "2344680",
    "end": "2349800"
  },
  {
    "text": "of go code written out there you know if error not equal n return formed error F",
    "start": "2349800",
    "end": "2354839"
  },
  {
    "text": "some some description that says what happened and then the the text did the error and that's good because at the top",
    "start": "2354839",
    "end": "2361160"
  },
  {
    "text": "you get at least the kind of Roger used to call them breadcrumbs of this failed because this filed column because this",
    "start": "2361160",
    "end": "2367680"
  },
  {
    "text": "filed column because this filed and you can kind of grap for those little individual strings and kind of manually",
    "start": "2367680",
    "end": "2372880"
  },
  {
    "text": "construct a stack trace of how where you were in that code and that that that's",
    "start": "2372880",
    "end": "2378400"
  },
  {
    "text": "good but it has problems that uh there are cases um as as as few as they are",
    "start": "2378400",
    "end": "2385319"
  },
  {
    "text": "and as as many as I as I would prefer they weren't in the standard Library we do actually want to check um want to",
    "start": "2385319",
    "end": "2393319"
  },
  {
    "text": "check for a specific value I is the um the super example of this any reader any",
    "start": "2393319",
    "end": "2400240"
  },
  {
    "text": "IO reader must return IE it can't return you know read filed colon ieo must",
    "start": "2400240",
    "end": "2406240"
  },
  {
    "text": "return exactly that value of i.f we're actually checking for equality there so",
    "start": "2406240",
    "end": "2413319"
  },
  {
    "text": "in certain cases you can't do this annotation because uh to take Taking iof",
    "start": "2413319",
    "end": "2420079"
  },
  {
    "text": "printing it string out pending to another string and then returning it an entirely different value from F to error F gives you something which doesn't",
    "start": "2420079",
    "end": "2427599"
  },
  {
    "text": "compare and you can't strip off that prefix anymore because you've forever damaged it so if we're talking about using the",
    "start": "2427599",
    "end": "2435319"
  },
  {
    "text": "error value to annotate like extra information some kind of message or a stack trace or something like that it",
    "start": "2435319",
    "end": "2441480"
  },
  {
    "text": "has to be undoable and and again this is this is um not uh this this my my work",
    "start": "2441480",
    "end": "2448599"
  },
  {
    "text": "in this area is is is very small certainly not unique there's a lot of work that that I I I stand on um which",
    "start": "2448599",
    "end": "2455839"
  },
  {
    "text": "this idea of okay so if we have an error let's give it a method um let's give it",
    "start": "2455839",
    "end": "2461319"
  },
  {
    "text": "a method that lets you get uh the underlying error so if we're stacking them one on top of another let's have a",
    "start": "2461319",
    "end": "2467160"
  },
  {
    "text": "method that we can do undo this stacking so that if we do need this behavior of saying um is this IE or for example um",
    "start": "2467160",
    "end": "2475720"
  },
  {
    "text": "if you use OS is not exist that knows about a certain bunch of types from CIS",
    "start": "2475720",
    "end": "2481800"
  },
  {
    "text": "call uh from Windows uh there's a few other ones that it knows specifically to check and says I know how to interpret",
    "start": "2481800",
    "end": "2488760"
  },
  {
    "text": "these error types and I know how to look at them and say is this actually caused by a far not found so you need to be",
    "start": "2488760",
    "end": "2494560"
  },
  {
    "text": "able to whatever wrapping you do to add context add a St stack frame add a message you need to be able to undo that",
    "start": "2494560",
    "end": "2501520"
  },
  {
    "text": "because there are cases where you you need to extract the airor value because that's the way the code goes right and I",
    "start": "2501520",
    "end": "2507000"
  },
  {
    "text": "mean there's cases where we've seen where people have masked the Sentinal error values based on the type that",
    "start": "2507000",
    "end": "2513079"
  },
  {
    "text": "they're returning in their error too so relying on those kind of Sentinel error",
    "start": "2513079",
    "end": "2518319"
  },
  {
    "text": "values and stuff becomes problematic but so the nice thing I like about this",
    "start": "2518319",
    "end": "2523440"
  },
  {
    "text": "approach too is the other pattern we've seen people trying to solve these same problems with is tagged logging right",
    "start": "2523440",
    "end": "2530960"
  },
  {
    "text": "but that only helps in the log messages that are going out that doesn't help the callers that the messages are being",
    "start": "2530960",
    "end": "2536720"
  },
  {
    "text": "passed back up the stack to oh this this comes into my other my other big big",
    "start": "2536720",
    "end": "2542200"
  },
  {
    "text": "rant which is only handle the error once handle means basically I've inspect I've",
    "start": "2542200",
    "end": "2548119"
  },
  {
    "text": "inspected the error value if error not equal to nil that's your inspection I've looked at it and then you get to make",
    "start": "2548119",
    "end": "2554599"
  },
  {
    "text": "exactly one decision and that decision could be to log the message that you",
    "start": "2554599",
    "end": "2560599"
  },
  {
    "text": "you've handled it like you've written it out and so therefore the error is handled you don't need to return it to the caller now um what was some cases",
    "start": "2560599",
    "end": "2568480"
  },
  {
    "text": "you you might you might log it say you're like searching in a search path you're looking for a particular file and not in your home directory it's not in",
    "start": "2568480",
    "end": "2574400"
  },
  {
    "text": "the Shar directory is it in the system one so you you're you're not going to bail out on that first that first time",
    "start": "2574400",
    "end": "2580680"
  },
  {
    "text": "around because you know it's not in your home directory you're going to look in the shared location then you're going to look in the system location so you check",
    "start": "2580680",
    "end": "2587960"
  },
  {
    "text": "the error and you you might either say okay it wasn't found there but I have two more search paths to look so there",
    "start": "2587960",
    "end": "2593680"
  },
  {
    "text": "is handled at that point um what I see a lot is uh at every level in the call",
    "start": "2593680",
    "end": "2599760"
  },
  {
    "text": "stack if error not equal to nil oh my right out log some error happened and then return that error to the call",
    "start": "2599760",
    "end": "2606760"
  },
  {
    "text": "so that means you know however much you've applied this pattern all the way in your code you're going to get 10 or",
    "start": "2606760",
    "end": "2613920"
  },
  {
    "text": "15 different log messages basically telling you the same thing error happened error happened failed error happened couldn't open file error",
    "start": "2613920",
    "end": "2619920"
  },
  {
    "text": "happened couldn't couldn't pass Jason and then right at the right at the top",
    "start": "2619920",
    "end": "2624960"
  },
  {
    "text": "of your Handler or your main function you're just going to get the raw error with no stack trace and no context and",
    "start": "2624960",
    "end": "2630800"
  },
  {
    "text": "logging and logging kind of happens externally like it's written out to standard out or it through some log",
    "start": "2630800",
    "end": "2637119"
  },
  {
    "text": "shipping and the actual program logic of handing that failure case operates in an",
    "start": "2637119",
    "end": "2642400"
  },
  {
    "text": "entirely different universe so not only you generating a bunch of log messages but the thing the thing that you get",
    "start": "2642400",
    "end": "2648839"
  },
  {
    "text": "back at the top of your program has no context it has none has no no hook to any of that any of that log context that",
    "start": "2648839",
    "end": "2655599"
  },
  {
    "text": "you were sending out to to logging so uh that I so I I strongly Advocate if",
    "start": "2655599",
    "end": "2662839"
  },
  {
    "text": "there is an error then just just return it to the caller the errors package with the WAP method gives you the ability for",
    "start": "2662839",
    "end": "2669480"
  },
  {
    "text": "that little piece of log context that you're going to you know call log. errf just put that in the in the in the error",
    "start": "2669480",
    "end": "2675599"
  },
  {
    "text": "message in in the error itself errors. wrap with that message text and return",
    "start": "2675599",
    "end": "2681240"
  },
  {
    "text": "that to the caller so you get you get all those annotations which were previously kind of sent out to the the",
    "start": "2681240",
    "end": "2687480"
  },
  {
    "text": "the log file via this kind of side channel are now available at the top when you're going to when you're going",
    "start": "2687480",
    "end": "2692720"
  },
  {
    "text": "to print out or Analyze That error or log it into a file or you know quit the program because the error happened you",
    "start": "2692720",
    "end": "2698520"
  },
  {
    "text": "have all that context there for the the operator or the developer to figure out what happened I have a question about",
    "start": "2698520",
    "end": "2705000"
  },
  {
    "text": "that so how does structureal logging fit with this philosophy which I I totally",
    "start": "2705000",
    "end": "2710960"
  },
  {
    "text": "see the point of where you're saying the repeats especially if you're not really",
    "start": "2710960",
    "end": "2716240"
  },
  {
    "text": "crafting your your your logging message strings but how do you handle if you",
    "start": "2716240",
    "end": "2722880"
  },
  {
    "text": "want to do strictor logging do you use that the dump of the the levels you know",
    "start": "2722880",
    "end": "2730079"
  },
  {
    "text": "that you accumulated into a value and that's your log so this is probably the",
    "start": "2730079",
    "end": "2736440"
  },
  {
    "text": "most opinionated thing I'm going to say but I don't see the point in structured logging not not because I I think it's",
    "start": "2736440",
    "end": "2743280"
  },
  {
    "text": "not a useful thing to rather than just have a pre-text blob of text you know",
    "start": "2743280",
    "end": "2748640"
  },
  {
    "text": "this idea of key value key value um as looking is is useful but my I think",
    "start": "2748640",
    "end": "2755680"
  },
  {
    "text": "there really two consumers of logs there is the the person running the program you know I usually say the operator",
    "start": "2755680",
    "end": "2761599"
  },
  {
    "text": "because that I come from I come from an Ops background and in that case if a program tells me something like this",
    "start": "2761599",
    "end": "2767480"
  },
  {
    "text": "kind of Unix philosophy the program tells you something then it was important you should pay attention to it",
    "start": "2767480",
    "end": "2772960"
  },
  {
    "text": "um the number of environments I've worked in where you can't look at the log messages without grapping out a bunch of rubbish um is is is a big",
    "start": "2772960",
    "end": "2781920"
  },
  {
    "text": "problem so if the only things that you log are you know things that the the",
    "start": "2781920",
    "end": "2787960"
  },
  {
    "text": "user needs to needs to take action on then I don't see a lot of value in",
    "start": "2787960",
    "end": "2793359"
  },
  {
    "text": "investing in a kind of framework for describing your know keys and values for",
    "start": "2793359",
    "end": "2798680"
  },
  {
    "text": "for logs now to to be very very clear this is this is my opinion I don't want to push that onto anybody else I know there's a lot of people who see a lot of",
    "start": "2798680",
    "end": "2805040"
  },
  {
    "text": "value in structured logging but for for me looking through this this uh this",
    "start": "2805040",
    "end": "2810599"
  },
  {
    "text": "window of like if you're going to log a line it's actually something that I need to take to take um to take action on",
    "start": "2810599",
    "end": "2817880"
  },
  {
    "text": "then arguably you should be logging very little because if there's thousands of lines of output something has gone",
    "start": "2817880",
    "end": "2823000"
  },
  {
    "text": "terribly terribly wrong and if there's thousands of lines of output and nothing has gone wrong your program is just",
    "start": "2823000",
    "end": "2828359"
  },
  {
    "text": "really chatty then you've got a much more serious problem this the second Persona is",
    "start": "2828359",
    "end": "2833680"
  },
  {
    "text": "obviously the developer and I I I keep them separate from the person running the program versus the person debugging",
    "start": "2833680",
    "end": "2839200"
  },
  {
    "text": "the program and the developer wants all the all the logging and tracing on so I think in that in that case your",
    "start": "2839200",
    "end": "2845160"
  },
  {
    "text": "structure loging is something that you use in uh in development um and maybe",
    "start": "2845160",
    "end": "2850559"
  },
  {
    "text": "you interpret that to be always print out the file on the line and the function that it was executing in and",
    "start": "2850559",
    "end": "2855720"
  },
  {
    "text": "maybe some time stamps and things like that um then yes that is super useful",
    "start": "2855720",
    "end": "2860760"
  },
  {
    "text": "but you you I I I don't think the two use cases should be conflated as the operator I only want programs to Output",
    "start": "2860760",
    "end": "2867599"
  },
  {
    "text": "when there's something that I need to do they shouldn't just tell me that they're still running they shouldn't just tell me um shouldn't just tell me kind of",
    "start": "2867599",
    "end": "2874720"
  },
  {
    "text": "information like uh you know couldn't couldn't dial this socket but I'm retrying it's okay don't worry like that's that's not it's not something I",
    "start": "2874720",
    "end": "2880800"
  },
  {
    "text": "need to care about it's you shouldn't tell me that for the developer yes you want to turn on all those all those",
    "start": "2880800",
    "end": "2885960"
  },
  {
    "text": "loggings so you can see the retry Loop and say Well it always retries three times before it does anything um but",
    "start": "2885960",
    "end": "2892920"
  },
  {
    "text": "they they're different personas and so in in in that that kind of worldview I",
    "start": "2892920",
    "end": "2898160"
  },
  {
    "text": "structure logging doesn't seem as useful to me yeah and I think uh I mean we had",
    "start": "2898160",
    "end": "2903480"
  },
  {
    "text": "a conversation with uh Scott mans F uh from Netflix too and he was talking about how they don't really rely on logs",
    "start": "2903480",
    "end": "2910160"
  },
  {
    "text": "so much as they do counters they they use metrics for everything so they would count the number of reconnect errors",
    "start": "2910160",
    "end": "2916720"
  },
  {
    "text": "that are occurring and measure that over time and they could see that there's a clear problem because the number of",
    "start": "2916720",
    "end": "2922240"
  },
  {
    "text": "reconnect attempts is happening at a much higher frequency than usual and that's when they start kind of digging",
    "start": "2922240",
    "end": "2927880"
  },
  {
    "text": "in um I think the other case where people like structured logging is in",
    "start": "2927880",
    "end": "2932960"
  },
  {
    "text": "distributed application tracing so I can look for a tag that says you know a a",
    "start": "2932960",
    "end": "2938520"
  },
  {
    "text": "request ID and I can get all the logs associated with a given request but kind of to your point when you get to large",
    "start": "2938520",
    "end": "2945599"
  },
  {
    "text": "scales it's really hard to manage all those logs anyway so you you kind of have to find different ways but I kind",
    "start": "2945599",
    "end": "2952880"
  },
  {
    "text": "of want to roll back a little bit where we talk about trying as the best you can to return Upstream one case that I see a",
    "start": "2952880",
    "end": "2960280"
  },
  {
    "text": "lot of people use logging for in those cases is when you're in kind of like a select Loop right you're pulling from a",
    "start": "2960280",
    "end": "2966960"
  },
  {
    "text": "channel something happens you don't want to return because you're just you're just a parallel work stream you know",
    "start": "2966960",
    "end": "2972720"
  },
  {
    "text": "you're running kind of concurrently to the main thread so you don't want to die out because then you stop processing all",
    "start": "2972720",
    "end": "2978200"
  },
  {
    "text": "messages and I typically see a lot of logging take place in those types of methods so that people aren't just kind",
    "start": "2978200",
    "end": "2984920"
  },
  {
    "text": "of throwing away that the fact that there was an error with some given thing yeah yeah so you've got to consider the",
    "start": "2984920",
    "end": "2991760"
  },
  {
    "text": "Persona that you're in are you in the the the the developer persona like I I want to I want to observe the operation",
    "start": "2991760",
    "end": "2998359"
  },
  {
    "text": "of this select Loop like it's it's one of many that's going on currently I believe that if I can see kind of get",
    "start": "2998359",
    "end": "3004599"
  },
  {
    "text": "insight into how all these different parts these different inter meshing parts are moving I be able to",
    "start": "3004599",
    "end": "3010760"
  },
  {
    "text": "reconstruct the flow of events later on that's kind of like the developer Persona the operator Persona like if",
    "start": "3010760",
    "end": "3018040"
  },
  {
    "text": "that was just dumping out information like I'm going back through the select loop again you know one of end",
    "start": "3018040",
    "end": "3023119"
  },
  {
    "text": "conditions fired that would make me Furious I've worked in I've worked in environments in in trading companies where we would produce gigabytes and",
    "start": "3023119",
    "end": "3030119"
  },
  {
    "text": "gigabytes of logs per per application and there are many many applications running at at the time and all my day",
    "start": "3030119",
    "end": "3036920"
  },
  {
    "text": "was just B zipping and unzipping these things and then grapping out a bunch of stuff that was was was not useful I",
    "start": "3036920",
    "end": "3044760"
  },
  {
    "text": "think the distributed the distributed um tracing example is a really good Counterpoint to um to my my points about",
    "start": "3044760",
    "end": "3051599"
  },
  {
    "text": "about structured logging that actually yes that that that request that request ID is something you want to you want to",
    "start": "3051599",
    "end": "3057839"
  },
  {
    "text": "thread through but um but is is that something that the you needs to be",
    "start": "3057839",
    "end": "3064160"
  },
  {
    "text": "printed out on the console like I'm handling this request or is it just um something that goes into that in terms",
    "start": "3064160",
    "end": "3070839"
  },
  {
    "text": "of logging there are definitely exceptions to this case audit logs are a great example and probably a perfect example of where structure logging is",
    "start": "3070839",
    "end": "3076839"
  },
  {
    "text": "useful user ID in group ID with permissions set did Operation um because",
    "start": "3076839",
    "end": "3083640"
  },
  {
    "text": "you do need um in in in large scale systems and well regulated ones you do need audit logs and they but again the",
    "start": "3083640",
    "end": "3090240"
  },
  {
    "text": "audit log is not something that the operator sits tailing they you know it's not something you're going to alert on",
    "start": "3090240",
    "end": "3095880"
  },
  {
    "text": "like an error an error happened in the audit log um they're they're different",
    "start": "3095880",
    "end": "3101000"
  },
  {
    "text": "personas so in the same subject I wanted to ask your opinion because I see",
    "start": "3101000",
    "end": "3106480"
  },
  {
    "text": "logging and and instrumentation instrumentation of metrics as serving",
    "start": "3106480",
    "end": "3112880"
  },
  {
    "text": "different purposes for example I can start tracking how many times a certain",
    "start": "3112880",
    "end": "3117920"
  },
  {
    "text": "request came through because I usually get 500,000 a day and if I certainly",
    "start": "3117920",
    "end": "3123400"
  },
  {
    "text": "start getting 200,000 I want to be alerted something is going on and I want to see those",
    "start": "3123400",
    "end": "3128520"
  },
  {
    "text": "metrics what is your opinion on instrumenting your code that way with",
    "start": "3128520",
    "end": "3134559"
  },
  {
    "text": "getting metric out of it yeah they are absolutely separate things logging is for the human instrumentation is for the",
    "start": "3134559",
    "end": "3142559"
  },
  {
    "text": "machines for your monitoring for your automated alerts for your um your your",
    "start": "3142559",
    "end": "3147760"
  },
  {
    "text": "hesis your automatic retry you're scaling up you're scaling down that if",
    "start": "3147760",
    "end": "3152880"
  },
  {
    "text": "you're driving those processes off tailing a log file you have a serious operational problem they are separate",
    "start": "3152880",
    "end": "3159520"
  },
  {
    "text": "and independent things yeah and I think logging too should be something that you should be able to back off of um you",
    "start": "3159520",
    "end": "3166880"
  },
  {
    "text": "know I've worked on systems commonly where you know it's streamed over UDP and stuff so it's it's one of those",
    "start": "3166880",
    "end": "3173280"
  },
  {
    "text": "things like you don't want logging to slow down on your application because there's some there's some slowdown on",
    "start": "3173280",
    "end": "3178480"
  },
  {
    "text": "the dis or you know things start catastrophically failing because you run out of dis and things like that so and I",
    "start": "3178480",
    "end": "3185160"
  },
  {
    "text": "guess it depends on how important your logs are right like if if if you're doing something for a bank you probably",
    "start": "3185160",
    "end": "3191559"
  },
  {
    "text": "want every single message you know they it's probably of grave importance to keep that for audit purposes but you",
    "start": "3191559",
    "end": "3198160"
  },
  {
    "text": "know in other cases you know if you're you're logging requests to your site you know if if you lose a minute and a half",
    "start": "3198160",
    "end": "3205319"
  },
  {
    "text": "half of logs because there was some slowdown there it's just not the end of the world yeah there they're different",
    "start": "3205319",
    "end": "3212400"
  },
  {
    "text": "different use cases like the audit the audit log the HTTP request log if you have to keep them for analytics or fraud",
    "start": "3212400",
    "end": "3219480"
  },
  {
    "text": "detection or something like that and then there's the the log of your actual application code that was does it tell",
    "start": "3219480",
    "end": "3225880"
  },
  {
    "text": "you every time it speaks to you does it tell you this is something you need to care about or is it just telling you things and you're like I see I see that",
    "start": "3225880",
    "end": "3233079"
  },
  {
    "text": "all the time like like my my rule of thumb is if to work on an application",
    "start": "3233079",
    "end": "3238160"
  },
  {
    "text": "you have to get out GP to filter out a bunch of stuff which is not important to you that is the the problem is that",
    "start": "3238160",
    "end": "3244480"
  },
  {
    "text": "you're logging too much and that logging is of not enough value and this is completely separate from the audit log",
    "start": "3244480",
    "end": "3250520"
  },
  {
    "text": "which has to happen for every action the HTP request that has to happen for analytics and fraud purposes or the",
    "start": "3250520",
    "end": "3257720"
  },
  {
    "text": "metrics which are how you monitor the the health of your system it's hard because there's no cardinal rule right",
    "start": "3257720",
    "end": "3264760"
  },
  {
    "text": "it's it's just kind of like the other topics we've had here today it's it's really kind of looking at your program",
    "start": "3264760",
    "end": "3270720"
  },
  {
    "text": "and determining how important these things are to you like are they a necess a necessity to operate and maintain this",
    "start": "3270720",
    "end": "3279440"
  },
  {
    "text": "application or are they really just fluff that make you feel comfortable that you could open a log and see that",
    "start": "3279440",
    "end": "3285480"
  },
  {
    "text": "data if you wanted to and the number of times I've seen applications that are",
    "start": "3285480",
    "end": "3290520"
  },
  {
    "text": "heavy on the logging side and nobody ever looks at the logs is you know that's probably the better majority of",
    "start": "3290520",
    "end": "3296720"
  },
  {
    "text": "applications I've worked on you know most of the time you're looking at your metrics dashboards and things like that",
    "start": "3296720",
    "end": "3301799"
  },
  {
    "text": "it's just it's too hard to go gripping through logs and especially when you don't have a central logging place for",
    "start": "3301799",
    "end": "3308359"
  },
  {
    "text": "for these things which you know a high scale also becomes its own problem because that's another system that can",
    "start": "3308359",
    "end": "3314680"
  },
  {
    "text": "fail when you're kind of doing your distributed logging out to one place and you have to make the decisions how how",
    "start": "3314680",
    "end": "3321440"
  },
  {
    "text": "worthwhile is that additional complexity to you and you know the additional storage to store all these logs and",
    "start": "3321440",
    "end": "3327400"
  },
  {
    "text": "things or are you really trying to get a rough state of your application and companies that handle",
    "start": "3327400",
    "end": "3332920"
  },
  {
    "text": "that for you they charge a lot of money it's very expensive oh yeah those companies love",
    "start": "3332920",
    "end": "3340359"
  },
  {
    "text": "when you you throw them just needless logs there usually some kind of like per",
    "start": "3340359",
    "end": "3346760"
  },
  {
    "text": "rate charge so that that there's a strong moral hazard in there for them to not help you become better they'll just",
    "start": "3346760",
    "end": "3354000"
  },
  {
    "text": "they'll just write you a better a tool to handle larger larger volumes blogs by all means don't change just keep it keep",
    "start": "3354000",
    "end": "3359880"
  },
  {
    "text": "going how you going I think the difficulty is that when when you look at a line of code and you're thinking about",
    "start": "3359880",
    "end": "3366240"
  },
  {
    "text": "if something were to go wrong here you think about all the times that you've tried to debug an application and you",
    "start": "3366240",
    "end": "3371920"
  },
  {
    "text": "didn't have enough information so I think people air on the side of providing too much information so just",
    "start": "3371920",
    "end": "3377799"
  },
  {
    "text": "in case they need it and I mean I guess there's other ways around it too aside",
    "start": "3377799",
    "end": "3384079"
  },
  {
    "text": "from from log all the time you know some people will build in ways where they can signal the application to change its its",
    "start": "3384079",
    "end": "3390680"
  },
  {
    "text": "verocity for the um logging levels some people will do Canary builds with",
    "start": "3390680",
    "end": "3395920"
  },
  {
    "text": "additional logging in them there there's just a variety of ways you can attack debugging a problem because the the the",
    "start": "3395920",
    "end": "3403960"
  },
  {
    "text": "other issue becomes when you have errors is it like a systemic issue that like continues to happen and plague the rest",
    "start": "3403960",
    "end": "3410839"
  },
  {
    "text": "of the system or is it just an anomaly right like you're going to occasionally have bugs that you doesn't matter how",
    "start": "3410839",
    "end": "3417359"
  },
  {
    "text": "much logging you put in there you're probably never going to figure out why that happened it's just if it's if you",
    "start": "3417359",
    "end": "3423119"
  },
  {
    "text": "can't reproduce it it's hard to it's always going to be hard to debug just",
    "start": "3423119",
    "end": "3428200"
  },
  {
    "text": "looking at the log messages that took place the log messages are really only there to guide you in setting back up",
    "start": "3428200",
    "end": "3435200"
  },
  {
    "text": "the conditions that were taking place when that error occurred ex exactly and",
    "start": "3435200",
    "end": "3441200"
  },
  {
    "text": "when Once that's happened it's too late the horse is bolted so to to to come you mentioned errors to",
    "start": "3441200",
    "end": "3448039"
  },
  {
    "text": "come back to errors the why I think go is so successful for being a language",
    "start": "3448039",
    "end": "3453079"
  },
  {
    "text": "for writing serice software and this is really where we're seeing it mean it's it's branching out into other things as",
    "start": "3453079",
    "end": "3458359"
  },
  {
    "text": "well but it's its home territory is serice software is because of the way we",
    "start": "3458359",
    "end": "3464359"
  },
  {
    "text": "do error handling we don't have exceptions and per perhaps not everyone has has has grasp has grasped this but",
    "start": "3464359",
    "end": "3472920"
  },
  {
    "text": "every time you type you might think oh oh geez if error equals nil then return nil I have to eror return error I have",
    "start": "3472920",
    "end": "3479000"
  },
  {
    "text": "to type this all the time that's missing the point that's it's making you think",
    "start": "3479000",
    "end": "3484240"
  },
  {
    "text": "about what happens if this operation failed and you have to do that",
    "start": "3484240",
    "end": "3490160"
  },
  {
    "text": "everywhere all through go code because we don't have exceptions and we don't have exceptions because you to write",
    "start": "3490160",
    "end": "3496400"
  },
  {
    "text": "reliable programs you have to think about the failure case first don't worry about the happy path think about what",
    "start": "3496400",
    "end": "3502960"
  },
  {
    "text": "happens when this fails and that I think that is what is making go really",
    "start": "3502960",
    "end": "3508119"
  },
  {
    "text": "successful for writing service software because you you can't just you can't just write the code in this linear ah",
    "start": "3508119",
    "end": "3515079"
  },
  {
    "text": "everything's everything's going to work and that throws clause on the on on the function declaration is going to take care of any problems we we we we we we",
    "start": "3515079",
    "end": "3522440"
  },
  {
    "text": "see how the languages with exceptions go for reliability you don't know if they're going to explode at any point",
    "start": "3522440",
    "end": "3529119"
  },
  {
    "text": "and as as kind of as as ver boses goes error handling is it makes us think",
    "start": "3529119",
    "end": "3536119"
  },
  {
    "text": "about the what happens if this fails literally at every function call because",
    "start": "3536119",
    "end": "3542200"
  },
  {
    "text": "any function call can fail and and and if you don't want that function call to fail don't return an error write it in such a way that it",
    "start": "3542200",
    "end": "3548920"
  },
  {
    "text": "can't it can't it can't can't return an error by having extra preconditions or",
    "start": "3548920",
    "end": "3555200"
  },
  {
    "text": "accept the fact that anytime you deal with the real world the network the dis",
    "start": "3555200",
    "end": "3560240"
  },
  {
    "text": "it could fail and you should and you need to handle that failure right then in there rather than just waving your",
    "start": "3560240",
    "end": "3566599"
  },
  {
    "text": "hand and saying IO exception will bubble up to someone who can who knows how to handle it the best place to handle that",
    "start": "3566599",
    "end": "3573000"
  },
  {
    "text": "failure is right there in that function right at the point that the error happens and if people are really annoyed",
    "start": "3573000",
    "end": "3579079"
  },
  {
    "text": "about checking doing the if statement all the time to check the errors they can use your errors package right I love",
    "start": "3579079",
    "end": "3586480"
  },
  {
    "text": "it the way you you made it so you can just return the error and if it's no is no and if if not you the message is",
    "start": "3586480",
    "end": "3593599"
  },
  {
    "text": "there and that's it yep so I know when I first got into the language the kind of",
    "start": "3593599",
    "end": "3599039"
  },
  {
    "text": "verose error handling was kind of annoying too because I came from languages that had exceptions and then",
    "start": "3599039",
    "end": "3604359"
  },
  {
    "text": "you start to realize it does make a lot more sense there but I think it's it's just a a change of viewpoint right so",
    "start": "3604359",
    "end": "3611280"
  },
  {
    "text": "it's a half class empty verse half full right so we look at it and we're like wow this is annoying that I have to keep",
    "start": "3611280",
    "end": "3616920"
  },
  {
    "text": "doing this but it's much more exciting when we think about the fact that everybody else who's working on this project also has to do this right it's",
    "start": "3616920",
    "end": "3623880"
  },
  {
    "text": "kind of like h OA regulations right like it's kind of a pain in the butt right like it's it's annoying because you you",
    "start": "3623880",
    "end": "3630720"
  },
  {
    "text": "don't want to have to follow the rules but it makes everybody else follow the rules you know well I think another",
    "start": "3630720",
    "end": "3636200"
  },
  {
    "text": "corollary to that is is the idea of interfaces and go I was thinking through this today and I think there's a good uh",
    "start": "3636200",
    "end": "3643240"
  },
  {
    "text": "parallel between the way you you think about interfaces and go and the way you handle errors and go versus other",
    "start": "3643240",
    "end": "3649559"
  },
  {
    "text": "languages you with with go interfaces uh you're you're modeling behavior and you",
    "start": "3649559",
    "end": "3655640"
  },
  {
    "text": "don't have to think very hard about that uh inheritance chain and and which",
    "start": "3655640",
    "end": "3661079"
  },
  {
    "text": "abstract classes to create above them you know I came I did a lot of java and c and and Ruby and and all of that",
    "start": "3661079",
    "end": "3668000"
  },
  {
    "text": "object-oriented adherance it there is a big cognitive load to that and just",
    "start": "3668000",
    "end": "3673440"
  },
  {
    "text": "using embedding in composition and go feels so light and so much better but",
    "start": "3673440",
    "end": "3679319"
  },
  {
    "text": "it's hard for for people who come from objectoriented languages to catch that feeling so again it's one of those",
    "start": "3679319",
    "end": "3686760"
  },
  {
    "text": "things where it takes everybody some time to adjust to uh the new features",
    "start": "3686760",
    "end": "3692640"
  },
  {
    "text": "that they're not used to before they can embrace them I I agree and this this is really the the open question that I have",
    "start": "3692640",
    "end": "3699319"
  },
  {
    "text": "I had from my talk um is that like the the every episode of this podcast every",
    "start": "3699319",
    "end": "3705440"
  },
  {
    "text": "time you interview somebody everyone at some point in the podcast says oh geez you should have see",
    "start": "3705440",
    "end": "3711480"
  },
  {
    "text": "my first code I used so many channels I did them wrong and and it's it's like everyone knows",
    "start": "3711480",
    "end": "3717119"
  },
  {
    "text": "that lesson now like anyone who's who's become a successful Cod developer is like whoa far too many channels went",
    "start": "3717119",
    "end": "3722440"
  },
  {
    "text": "overboard there but that's how can we find a like don't use too many channels",
    "start": "3722440",
    "end": "3729000"
  },
  {
    "text": "is not actionable to a new a new go developer they're like what are you talking about this is why I learned this language apparently concurrency is a",
    "start": "3729000",
    "end": "3734839"
  },
  {
    "text": "really important thing why shouldn't I use channels so it it becomes really really really subjective and not",
    "start": "3734839",
    "end": "3740960"
  },
  {
    "text": "particularly useful to say oh be careful don't use too many channels where is the",
    "start": "3740960",
    "end": "3746599"
  },
  {
    "text": "where is the the design language that that says when where is a channel appropriate where is it not um th those",
    "start": "3746599",
    "end": "3754319"
  },
  {
    "text": "kind of things I think are are missing in in the general discourse of go um or",
    "start": "3754319",
    "end": "3760640"
  },
  {
    "text": "or if not missing not emphasized it's not the things that we talk about we we we we focus on on uh speed or stattic",
    "start": "3760640",
    "end": "3768640"
  },
  {
    "text": "compilation or cross compilation or other things like that which are it e",
    "start": "3768640",
    "end": "3774799"
  },
  {
    "text": "equally good but they're kind of missing the missing the wood for the trees like where is the where is the the kind of",
    "start": "3774799",
    "end": "3782319"
  },
  {
    "text": "Eric talked about it the way that in the Ruby Community it was his focus on design people would talk about the",
    "start": "3782319",
    "end": "3788240"
  },
  {
    "text": "people talk about a language of design always that was the kind of things that that you would talk about at conferences um where is that language",
    "start": "3788240",
    "end": "3796920"
  },
  {
    "text": "that that discourse Ino that's that's really the open question from my talk I think I'm very glad to say that I'm",
    "start": "3796920",
    "end": "3803559"
  },
  {
    "text": "starting to see a major shift towards that conversation with you and Ben",
    "start": "3803559",
    "end": "3808960"
  },
  {
    "text": "Johnson and Matt ryer um just want mention Matt R wrote a",
    "start": "3808960",
    "end": "3814520"
  },
  {
    "text": "blog post about his talk at also goang UK about talking about check your erors",
    "start": "3814520",
    "end": "3820760"
  },
  {
    "text": "first and then do the happy path just like you're saying to do and this is just goes to that uh concept of put a",
    "start": "3820760",
    "end": "3829480"
  },
  {
    "text": "guard in your method right is is a design concept",
    "start": "3829480",
    "end": "3834799"
  },
  {
    "text": "um going back to what you were saying about this conversation about design when I started doing go in was when I",
    "start": "3834799",
    "end": "3841720"
  },
  {
    "text": "were me well when I was meeting people who were of experts I would ask how did",
    "start": "3841720",
    "end": "3847240"
  },
  {
    "text": "you learn and try and eror was would be the answer and on and on again people say try and error and now I see that",
    "start": "3847240",
    "end": "3855480"
  },
  {
    "text": "people okay are thinking well let's not uh subject people through Tri and era",
    "start": "3855480",
    "end": "3862359"
  },
  {
    "text": "anymore uh krina goer Con in Denver was a had a lot to do",
    "start": "3862359",
    "end": "3869480"
  },
  {
    "text": "with this concept of let's pave the path for people to jump in and not go through",
    "start": "3869480",
    "end": "3876359"
  },
  {
    "text": "the hassle of trial and error let's you know have educational material",
    "start": "3876359",
    "end": "3882079"
  },
  {
    "text": "and and now a lot of people coming out and talking about design I think there I sense that there is a shift and I think",
    "start": "3882079",
    "end": "3888720"
  },
  {
    "text": "that's very very positive yeah K Katrina's talk was was fantastic and the thing that we should all this podcast",
    "start": "3888720",
    "end": "3894680"
  },
  {
    "text": "remember is that we we we are the success story we are the ones that didn't quit we the ones that didn't get",
    "start": "3894680",
    "end": "3900559"
  },
  {
    "text": "so lost that we made it such a mistake such a mess and we couldn't figure out and we just gave up like we we're",
    "start": "3900559",
    "end": "3906319"
  },
  {
    "text": "actually the ones that figured out how to how to how to write successful go",
    "start": "3906319",
    "end": "3911599"
  },
  {
    "text": "code um and Katrina's talk is really important because as as she said as a",
    "start": "3911599",
    "end": "3917480"
  },
  {
    "text": "beginner you don't have that uh like there's there's a phrase hindsight is",
    "start": "3917480",
    "end": "3922920"
  },
  {
    "text": "2020 like we we're all looking back at our experience and saying oh jeez it was it was hard to learn but we we we got",
    "start": "3922920",
    "end": "3928799"
  },
  {
    "text": "through somehow like think put yourself back into the mind of the beginner and you have no concept of right or wrong you",
    "start": "3928799",
    "end": "3935039"
  },
  {
    "text": "don't know when you're writing good code or bad code you don't know when you're you're doing you're you're you're",
    "start": "3935039",
    "end": "3941160"
  },
  {
    "text": "bringing Knowledge from another another language or you're just learning this some scratch and is this good or bad is",
    "start": "3941160",
    "end": "3948039"
  },
  {
    "text": "am I am I having a hard time writing this program because I'm fighting against language or because I'm actually making mistake like that as a beginning",
    "start": "3948039",
    "end": "3954440"
  },
  {
    "text": "you have no um no context to to judge yourself to to judge your your progress",
    "start": "3954440",
    "end": "3960400"
  },
  {
    "text": "like that so TR really was really really important to remind us all",
    "start": "3960400",
    "end": "3966160"
  },
  {
    "text": "of we are the success story we're the ones who persevered and learned uh and learn learned the language either",
    "start": "3966160",
    "end": "3971680"
  },
  {
    "text": "through you know trial and error or just reading the right example at the right time that put us on a successful path",
    "start": "3971680",
    "end": "3978559"
  },
  {
    "text": "but we shouldn't consider that um with enough time anyone can do that because a lot of people",
    "start": "3978559",
    "end": "3984640"
  },
  {
    "text": "uh a lot of people are unsuccessful and they give up halfway through yep good point so I think we are actually about",
    "start": "3984640",
    "end": "3992279"
  },
  {
    "text": "over time so I think we're GNA skip over um skip over kind of talking about news",
    "start": "3992279",
    "end": "3997520"
  },
  {
    "text": "and projects this episode as much as we would love to to go forever can we do",
    "start": "3997520",
    "end": "4002640"
  },
  {
    "text": "like a a 12-h hour podcast with Dave I think we can yeah so",
    "start": "4002640",
    "end": "4009440"
  },
  {
    "text": "uh I think we can skip into um free software Friday and then we'll kind of close out the show as always Brian you",
    "start": "4009440",
    "end": "4015720"
  },
  {
    "text": "want to kick this thing off I do I spent a whole lot of time playing with rsync",
    "start": "4015720",
    "end": "4021359"
  },
  {
    "text": "this week and it's it's old school Unix tools but you I just can't live without",
    "start": "4021359",
    "end": "4027240"
  },
  {
    "text": "rsync so big shout out to the people who keep aryn fast and awesome and safe I",
    "start": "4027240",
    "end": "4034720"
  },
  {
    "text": "love rsync thank you I think that is J Jeremy Allison is that his name it's it",
    "start": "4034720",
    "end": "4040319"
  },
  {
    "text": "the the the same people that make samb make async maybe I'm return maybe remembering it completely wrong but",
    "start": "4040319",
    "end": "4046599"
  },
  {
    "text": "there there is a strong correlation between the two I think but yeah Arn using arsn and SSH can pretty much move",
    "start": "4046599",
    "end": "4052680"
  },
  {
    "text": "the world yeah and I think I did this",
    "start": "4052680",
    "end": "4057720"
  },
  {
    "text": "week Jo me to go next I have one sure yes so somebody gave a shout out to AG a",
    "start": "4057839",
    "end": "4065799"
  },
  {
    "text": "couple of weeks ago I think on the on the podcast that was me I have one better because it's called PT the",
    "start": "4065799",
    "end": "4071799"
  },
  {
    "text": "Platinum Searcher and it's written uh by Japanese gopher I'll put the name up I'll put the link in in the show notes",
    "start": "4071799",
    "end": "4077920"
  },
  {
    "text": "but yeah PT it's way better way better than a way better than AG I use it every",
    "start": "4077920",
    "end": "4083319"
  },
  {
    "text": "single day I um I'm not a big one for editor Integrations I have a very Spartan environment and if I so it's for",
    "start": "4083319",
    "end": "4090680"
  },
  {
    "text": "for me my entire day is just PT some piece of text find the line go and edit it I am so looking forward to installing",
    "start": "4090680",
    "end": "4097520"
  },
  {
    "text": "that with this endorsements uh I use act all the time also not on my editor just",
    "start": "4097520",
    "end": "4103880"
  },
  {
    "text": "on the terminal and this is sounding like well you're saying is better and but the description I'm just dying to",
    "start": "4103880",
    "end": "4110880"
  },
  {
    "text": "try it well has has all the the features of of a and AG of ignore of skipping",
    "start": "4110880",
    "end": "4116400"
  },
  {
    "text": "over temporary files and dogs and things like that but it's written in go I'm trying to think of who it was too",
    "start": "4116400",
    "end": "4123040"
  },
  {
    "text": "somebody had just mentioned I think it was Harold something ringal maybe and",
    "start": "4123040",
    "end": "4128278"
  },
  {
    "text": "the the go time FM uh slack just before we got on the show had pointed that out",
    "start": "4128279",
    "end": "4133640"
  },
  {
    "text": "to to me too like have you seen this so I definitely need to in install it so",
    "start": "4133640",
    "end": "4138838"
  },
  {
    "text": "you said it's basically feature compatible with uh the silver Searcher pretty much pretty much I mean I I don't",
    "start": "4138839",
    "end": "4145199"
  },
  {
    "text": "know what the features are like I just use PT um my my my two requir like PT",
    "start": "4145199",
    "end": "4150520"
  },
  {
    "text": "and PT minus l so minus L just gives you the names and you pip them through pip them through them and edit edit your",
    "start": "4150520",
    "end": "4157080"
  },
  {
    "text": "files um written by uh monochrome Gan J Japanese Japanese gopher I saw a",
    "start": "4157080",
    "end": "4163318"
  },
  {
    "text": "presentation on this 2014 I think it was um the first time I",
    "start": "4163319",
    "end": "4168679"
  },
  {
    "text": "went to goon in Japan that's awesome plus we can contribute when we when we find new usage but I I probably have a",
    "start": "4168679",
    "end": "4175400"
  },
  {
    "text": "similar workflow to you I I basically AG a directory looking for what I'm looking for and then just open it in Vim I don't",
    "start": "4175400",
    "end": "4182600"
  },
  {
    "text": "do a whole lot of editor Integrations and stuff like that I'm just pretty comfortable with having my editor open",
    "start": "4182600",
    "end": "4188159"
  },
  {
    "text": "and a shell I just installed this and it's beautiful H you're you're ahead of us so how about you carisia well so I",
    "start": "4188159",
    "end": "4197280"
  },
  {
    "text": "recently got a job doing go full-time and I was going working on a new project",
    "start": "4197280",
    "end": "4203560"
  },
  {
    "text": "and going through the phase of you know defining and designing and recently I",
    "start": "4203560",
    "end": "4209040"
  },
  {
    "text": "got full full on coding and my shout out today we've mentioned it before is",
    "start": "4209040",
    "end": "4214679"
  },
  {
    "text": "Source graph I canot tell you how much faster I gra grck things you know if I'm",
    "start": "4214679",
    "end": "4222560"
  },
  {
    "text": "on GitHub I I don't want to download everything to my local machine and just search on my local machine I could do",
    "start": "4222560",
    "end": "4228640"
  },
  {
    "text": "that but it's so much faster to just go I won't get help looking at a library and I'm browsing through the codes and I",
    "start": "4228640",
    "end": "4235080"
  },
  {
    "text": "have Source graph guiding me through you know just popping up the descriptions and if I want to go deeper I just click",
    "start": "4235080",
    "end": "4241360"
  },
  {
    "text": "on the link and I'm there it's been amazing I've learned a 100 times faster",
    "start": "4241360",
    "end": "4248320"
  },
  {
    "text": "just like a learning the what I'm looking at and also learning go at the same time time because you know I of",
    "start": "4248320",
    "end": "4254960"
  },
  {
    "text": "course I see the patterns and and another shout out is just go itself I love that the go- Cod that I see on",
    "start": "4254960",
    "end": "4263600"
  },
  {
    "text": "people's libraries is they look exactly the same as pretty much the same as the",
    "start": "4263600",
    "end": "4268800"
  },
  {
    "text": "go- Cod that I'm writing is uh the the consistency is amazing makes life so",
    "start": "4268800",
    "end": "4276000"
  },
  {
    "text": "much better awesome so mine this week is a little off but I haven't been using a",
    "start": "4276000",
    "end": "4281719"
  },
  {
    "text": "lot of new programming tools over the past couple weeks and I don't think everybody wants to keep hearing new stuff or old stuff so um I'm going to",
    "start": "4281719",
    "end": "4288480"
  },
  {
    "text": "shout out to asky doctor which is asky doctor.org and uh typically I'm a",
    "start": "4288480",
    "end": "4293679"
  },
  {
    "text": "markdown person but I haven't found a really good tool set for being able to do like table of contents and things",
    "start": "4293679",
    "end": "4299159"
  },
  {
    "text": "like that for markdown so asky doctor is similar to markdown um it's uses asky do",
    "start": "4299159",
    "end": "4307400"
  },
  {
    "text": "and then it kind of uh behind the scenes can do doc book and things so it can generate PDFs with like linkable table",
    "start": "4307400",
    "end": "4314320"
  },
  {
    "text": "of contents and you can do kind of like little sidebars and annotations and stuff um it has source code highlighting",
    "start": "4314320",
    "end": "4321560"
  },
  {
    "text": "and stuff in it so it's it's really awesome for doing documentation especially with code and stuff involved",
    "start": "4321560",
    "end": "4327920"
  },
  {
    "text": "nice yeah I I I use it all the time I actually write all my talks long form",
    "start": "4327920",
    "end": "4334239"
  },
  {
    "text": "like actually write everything I want to say and I generally do before I then transpose it into uh into like keynote",
    "start": "4334239",
    "end": "4341120"
  },
  {
    "text": "or something like that um for for one like I need to know how many words I've got and the keynote won't tell you that",
    "start": "4341120",
    "end": "4346920"
  },
  {
    "text": "so like I tend to write out the whole thing long form and I've taken to writing it and ask you doctor so that I can then turn it into HTML and send a",
    "start": "4346920",
    "end": "4353880"
  },
  {
    "text": "link to people um and that for me that's so much better than using a Google doc",
    "start": "4353880",
    "end": "4359199"
  },
  {
    "text": "because to use a Google doc you got to be online whereas this is just a text file you can edit it wherever you are",
    "start": "4359199",
    "end": "4365639"
  },
  {
    "text": "nice and we can just use them nice little guard file updates the",
    "start": "4365639",
    "end": "4370920"
  },
  {
    "text": "PDF alongside of it and then I get to give a second shout shout out to afron",
    "start": "4370920",
    "end": "4375960"
  },
  {
    "text": "for preventing me from sniffling this whole show is that open",
    "start": "4375960",
    "end": "4381480"
  },
  {
    "text": "source no it's not open source and you probably have to show ID at the counter of the pharmacy to get it these days",
    "start": "4381480",
    "end": "4388360"
  },
  {
    "text": "really W the ingredients are listed on the back I mean that's somewhat open source",
    "start": "4388360",
    "end": "4394520"
  },
  {
    "text": "right I guess but I guess the algorithm to combine them it does not exist that",
    "start": "4395239",
    "end": "4400679"
  },
  {
    "text": "reminded me of Katrina St again you have ingredients but you don't know",
    "start": "4400679",
    "end": "4406560"
  },
  {
    "text": "how to put it together the correct mixture ratio yeah so all right so as much as I",
    "start": "4406560",
    "end": "4413719"
  },
  {
    "text": "would love to continue on especially having Dave on the show we've had a lot of interesting conversations and I think",
    "start": "4413719",
    "end": "4419280"
  },
  {
    "text": "way more that could be had uh I think we are like way over time so this will be a",
    "start": "4419280",
    "end": "4424360"
  },
  {
    "text": "nice long episode so I definitely want to thank everybody who's on the show uh",
    "start": "4424360",
    "end": "4429440"
  },
  {
    "text": "today everybody who's listening everybody who will be listening to the show when we drop it live um big shout",
    "start": "4429440",
    "end": "4436280"
  },
  {
    "text": "out to our sponsor back trce and if you aren't subscribed already you can subscribe at go time. FM uh we should",
    "start": "4436280",
    "end": "4443760"
  },
  {
    "text": "have an upcoming uh newsletter uh we are gotime FM on Twitter and gotime fm/ Ping",
    "start": "4443760",
    "end": "4450719"
  },
  {
    "text": "On GitHub if you want to submit yourself or suggestions for guests for the show",
    "start": "4450719",
    "end": "4455960"
  },
  {
    "text": "or questions and I think that's it with that said everybody goodbye hey thanks",
    "start": "4455960",
    "end": "4461400"
  },
  {
    "text": "for getting up so early Dave not a problem thanks for having me thank you so much [Music]",
    "start": "4461400",
    "end": "4487440"
  },
  {
    "text": "David",
    "start": "4487440",
    "end": "4490440"
  }
]