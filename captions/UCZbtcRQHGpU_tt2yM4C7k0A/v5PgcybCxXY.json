[
  {
    "text": "I really like the way you return a result array mhm from the queries and it",
    "start": "120",
    "end": "5720"
  },
  {
    "text": "appears that I'm asking for confirmation it appears that you return a result array every time no matter the query",
    "start": "5720",
    "end": "11160"
  },
  {
    "text": "even if it's empty yeah even if you say select star blah blah blah limit one",
    "start": "11160",
    "end": "16760"
  },
  {
    "text": "yeah going to be an array every time every time okay I love this Library yeah that's awesome man yeah a",
    "start": "16760",
    "end": "22960"
  },
  {
    "text": "lot of magic but some things just got to be",
    "start": "22960",
    "end": "26920"
  },
  {
    "text": "predictable this episode is brought to you by our friends at Sentry build better software faster diagnose fix and",
    "start": "28960",
    "end": "37480"
  },
  {
    "text": "optimize the performance of your code over 1 million developers in 68,000",
    "start": "37480",
    "end": "42879"
  },
  {
    "text": "organizations already use Sentry that number includes us here's the absolute",
    "start": "42879",
    "end": "48039"
  },
  {
    "text": "easiest way to try Sentry right now you don't have to do anything just go to try. centry DD",
    "start": "48039",
    "end": "54120"
  },
  {
    "text": "demo.com that is an open sandbox with data that refreshes every time you refresh or every 10 minutes something",
    "start": "54120",
    "end": "61000"
  },
  {
    "text": "like that but long story short that's the easiest way to try Sentry right now no installation no whatsoever that",
    "start": "61000",
    "end": "68159"
  },
  {
    "text": "dashboard is the exact dashboard we see every time we log in Sentry and of course our listeners get a deal they get",
    "start": "68159",
    "end": "74759"
  },
  {
    "text": "the team plan for free for 3 months all you got to do is go to sentry.io and use the code change log when you sign up",
    "start": "74759",
    "end": "81360"
  },
  {
    "text": "again sentry.io and use the code change [Music]",
    "start": "81360",
    "end": "88920"
  },
  {
    "text": "log",
    "start": "88920",
    "end": "91920"
  },
  {
    "text": "[Music] this is JS party your weekly celebration",
    "start": "94410",
    "end": "99520"
  },
  {
    "text": "of JavaScript and the web subscribe to the Pod at JSP party. FM and follow the",
    "start": "99520",
    "end": "106159"
  },
  {
    "text": "show on Twitter we are at JSP party FM big thanks to our partners at fastly for",
    "start": "106159",
    "end": "112000"
  },
  {
    "text": "serving up our episodes super fast wherever you listen check them out at",
    "start": "112000",
    "end": "117159"
  },
  {
    "text": "fastly.com okay let's do this it's party time",
    "start": "117159",
    "end": "123078"
  },
  {
    "text": "[Applause]",
    "start": "123720",
    "end": "127959"
  },
  {
    "text": "[Applause] y'all hello JS party people I'm Jared",
    "start": "129960",
    "end": "137599"
  },
  {
    "text": "your internet friend and we have a great show for you today I am joined by a special guest Rasmus horsager Rasmus",
    "start": "137599",
    "end": "145319"
  },
  {
    "text": "welcome to JS party thanks a lot nice being here happy to have you we're going to talk long and deep about postgress",
    "start": "145319",
    "end": "153200"
  },
  {
    "text": "about relational databases about postgress JS about node about Dino about",
    "start": "153200",
    "end": "159920"
  },
  {
    "text": "squl queries all sorts of things but before we do that it's time for our regular segment Hala H can I holl you",
    "start": "159920",
    "end": "166640"
  },
  {
    "text": "can I holla of course is a time that we take",
    "start": "166640",
    "end": "173200"
  },
  {
    "text": "to holla at upcoming community events meetup groups conferences whatever needs",
    "start": "173200",
    "end": "180599"
  },
  {
    "text": "a holla and today I want to mention two back-to-back conferences happening in",
    "start": "180599",
    "end": "187360"
  },
  {
    "text": "Amsterdam in June JS nation and react Summit so JS nation is a two-day two",
    "start": "187360",
    "end": "195159"
  },
  {
    "text": "Track event focuses exclusively on JavaScript Dev it's in Amsterdam like I said on June 16th is the inperson event",
    "start": "195159",
    "end": "203360"
  },
  {
    "text": "in June 20th is online react Summit is the next day in the exact same location",
    "start": "203360",
    "end": "209400"
  },
  {
    "text": "so same people throwing it obviously focused on react it's the biggest react conference worldwide June 17th in",
    "start": "209400",
    "end": "216640"
  },
  {
    "text": "Amsterdam and then June 21st remote so these are hybrid events people are getting back together and JS party plans",
    "start": "216640",
    "end": "223640"
  },
  {
    "text": "on being a part of both of those conferences we are still in the works in",
    "start": "223640",
    "end": "229080"
  },
  {
    "text": "the planning stages about exactly how we're going to be involved but at the moment we're planning to send Nick Nick",
    "start": "229080",
    "end": "234280"
  },
  {
    "text": "n there so if you are in the Amsterdam area and can hit up those two comps come see us there if you cannot and you still",
    "start": "234280",
    "end": "241760"
  },
  {
    "text": "want to be involved of course they are dual IRL plus hybrid awesome stuff so",
    "start": "241760",
    "end": "247400"
  },
  {
    "text": "shout out to JS nation and react Summit happening in June 16th and 17th links in",
    "start": "247400",
    "end": "253079"
  },
  {
    "text": "the show notes to check out what those conferences are all about this has been holla can i h can I can",
    "start": "253079",
    "end": "261560"
  },
  {
    "text": "H all right Rasmus back to you so postgress you have this Library quite",
    "start": "261560",
    "end": "267720"
  },
  {
    "text": "popular quite fast looks quite good I've been scouring the read me checking it all out I'm a postgress junkie from a",
    "start": "267720",
    "end": "274400"
  },
  {
    "text": "long time back so this speaks to me and I wanted to bring you on and talk about it's hit V3 been working on it for a",
    "start": "274400",
    "end": "281039"
  },
  {
    "text": "while we're going to get into the library itself how you can use it why you might want to use it how it's built",
    "start": "281039",
    "end": "287600"
  },
  {
    "text": "Etc but first let's talk about postgress as a thing or relational databases as a",
    "start": "287600",
    "end": "292960"
  },
  {
    "text": "thing because there's lots of options when you're building an application how and why are you going to store your data",
    "start": "292960",
    "end": "300440"
  },
  {
    "text": "relational databases are as old as time at this point they were cool they weren't cool now they're kind of cool",
    "start": "300440",
    "end": "306280"
  },
  {
    "text": "again help the folks decided maybe give us your perspective on like why pick a relational database versus a document",
    "start": "306280",
    "end": "312759"
  },
  {
    "text": "database like or a key Value Store Firebase there's lots of options for JS",
    "start": "312759",
    "end": "318360"
  },
  {
    "text": "apps what's up with relational databases why do you like them well I've I've actually started out on the other side",
    "start": "318360",
    "end": "324080"
  },
  {
    "text": "so um when I began programming mongodb was just starting to be become a thing",
    "start": "324080",
    "end": "329479"
  },
  {
    "text": "there was so many things I I didn't know about I had heard about SQL I thought it",
    "start": "329479",
    "end": "334639"
  },
  {
    "text": "was this ancient thing that wasn't a good idea to use anymore I had some friends I saw them write some queries it",
    "start": "334639",
    "end": "340560"
  },
  {
    "text": "was like yeah no this other thing that has this real quick sample I can just",
    "start": "340560",
    "end": "346520"
  },
  {
    "text": "take it and it works and I don't need to set up much stuff is much easier I'll just go along with that so for a long",
    "start": "346520",
    "end": "352600"
  },
  {
    "text": "time I was I was using um with also in Noe using the Mongoose library",
    "start": "352600",
    "end": "358280"
  },
  {
    "text": "and at some point I real realized that in you create schemas over",
    "start": "358280",
    "end": "363400"
  },
  {
    "text": "so the entire idea behind being schema less and document based I wasn't",
    "start": "363400",
    "end": "369080"
  },
  {
    "text": "using it at all for anything I was making schemas just like you would make tables and uh and stuff in in postgress",
    "start": "369080",
    "end": "376680"
  },
  {
    "text": "so after building one system for a company in it and uh having to leave that at some point and leave it to a new",
    "start": "376680",
    "end": "384280"
  },
  {
    "text": "crew I came back to it one year later and it was like my idea of having a",
    "start": "384280",
    "end": "389919"
  },
  {
    "text": "schema having everything nicely in shape uh set up was just gone suddenly I",
    "start": "389919",
    "end": "396639"
  },
  {
    "text": "suppose that could happen with a more strict setup as well but there was literally uh an HTTP endpoint where you",
    "start": "396639",
    "end": "404479"
  },
  {
    "text": "could send Json that would be passed and sent directly on to DB and then",
    "start": "404479",
    "end": "410919"
  },
  {
    "text": "get the results from there around all the beautiful beautiful schemas and data structures I had made H and that's",
    "start": "410919",
    "end": "417759"
  },
  {
    "text": "around the same time I think it was in 2016 that postgress I don't know I felt",
    "start": "417759",
    "end": "423240"
  },
  {
    "text": "like it was gaining some popularity among amongst the this hyped sure kind",
    "start": "423240",
    "end": "430520"
  },
  {
    "text": "of thing and I I was looking into it and um I was just I think instantly when I",
    "start": "430520",
    "end": "437199"
  },
  {
    "text": "just took away the code around it when looking at note examples and stuff and just looking at SQL and creating table",
    "start": "437199",
    "end": "444199"
  },
  {
    "text": "it was just why haven't I given this a shot before yeah yeah so then I just",
    "start": "444199",
    "end": "450120"
  },
  {
    "text": "started out trying to figure out what it was about and um and giving it it a",
    "start": "450120",
    "end": "455360"
  },
  {
    "text": "proper chance and um yeah I haven't looked back since that's an interesting perspective so I have been around I",
    "start": "455360",
    "end": "461240"
  },
  {
    "text": "guess quite a bit longer than yourself because like I said it was cool it became not cool there was a nosql or no",
    "start": "461240",
    "end": "467080"
  },
  {
    "text": "sequel hype cycle that happened around  and other these are like Venture",
    "start": "467080",
    "end": "473520"
  },
  {
    "text": "backed yet open- source is companies that have a very very",
    "start": "473520",
    "end": "480000"
  },
  {
    "text": "compelling product and there's a lot to like about DB and the like but the",
    "start": "480000",
    "end": "486759"
  },
  {
    "text": "Sensation that you had when you came into it like we don't use the old crufty thing anymore like this is what people",
    "start": "486759",
    "end": "493479"
  },
  {
    "text": "use today is really just kind of a cargo cult mentality but when you don't know any better you're just like okay like",
    "start": "493479",
    "end": "499720"
  },
  {
    "text": "that's this is what we use now yeah and I think for a long time people sidelined",
    "start": "499720",
    "end": "505759"
  },
  {
    "text": "my squl postgress squel squl light or it's actually called maybe I did say it",
    "start": "505759",
    "end": "511599"
  },
  {
    "text": "right sqlite I don't know I always say it wrong sqlite there you go that's the correct way of saying it right those got",
    "start": "511599",
    "end": "516919"
  },
  {
    "text": "sidelined because of the overwhelming marketing push and a lot of",
    "start": "516919",
    "end": "524519"
  },
  {
    "text": "interesting features of these new databases but along the way postgress",
    "start": "524519",
    "end": "530120"
  },
  {
    "text": "has just been getting better and better and better and it's been around for so long it's rock solid that I think",
    "start": "530120",
    "end": "535560"
  },
  {
    "text": "eventually it was like hold on a second let's not throw the baby out with the bath water just because these other systems are interesting and may fit our",
    "start": "535560",
    "end": "541920"
  },
  {
    "text": "use case it doesn't mean these other ones aren't anymore and uh what's",
    "start": "541920",
    "end": "548000"
  },
  {
    "text": "interesting about your project we'll get into the origin of your project is it's very SQL oriented from what I read about",
    "start": "548000",
    "end": "554959"
  },
  {
    "text": "it you're writing pretty much SQL like you would if you're connecting to psql",
    "start": "554959",
    "end": "561360"
  },
  {
    "text": "and writing SQL directly to postgress now you you provide utilities and and ways of building that up and all sorts",
    "start": "561360",
    "end": "566560"
  },
  {
    "text": "of things but you you're very much embracing sequel now so did you did you did you learn to love the language the",
    "start": "566560",
    "end": "573560"
  },
  {
    "text": "query language or did you it doesn't seem like you're trying to hide it with this Library no no but I I certainly did",
    "start": "573560",
    "end": "580360"
  },
  {
    "text": "and and I think it was just my programming Journey has been using some",
    "start": "580360",
    "end": "586160"
  },
  {
    "text": "things to build some various stuff and then figuring out where it didn't work out and then just trying to take away",
    "start": "586160",
    "end": "592680"
  },
  {
    "text": "all the parts that I didn't need because usually when you start out with something that needs to work you start",
    "start": "592680",
    "end": "598399"
  },
  {
    "text": "out with a library that has a lot of things to get you 80% of the way and",
    "start": "598399",
    "end": "603800"
  },
  {
    "text": "then you bump into all the bad things so um I actually started out just reading",
    "start": "603800",
    "end": "610279"
  },
  {
    "text": "the post G SQL documentation because I thought that must be the one true source",
    "start": "610279",
    "end": "615600"
  },
  {
    "text": "of uh of this thing yeah and that was just really hard in the beginning until",
    "start": "615600",
    "end": "621360"
  },
  {
    "text": "I understood like at some point their structure their way of setting things up",
    "start": "621360",
    "end": "627240"
  },
  {
    "text": "just clicked for me and and was yeah really really nice just going through it trying to understand how everything",
    "start": "627240",
    "end": "633360"
  },
  {
    "text": "worked and I had a few projects on the side where I could try these things out so what's interesting to me with your",
    "start": "633360",
    "end": "639880"
  },
  {
    "text": "time period so you're talking 2016 was the time range that you started picking up postc is that what you said yeah",
    "start": "639880",
    "end": "646079"
  },
  {
    "text": "that's when I became interested in it and then I think beginning 2017 I",
    "start": "646079",
    "end": "651760"
  },
  {
    "text": "started actually building trying to do stuff with it yeah yeah no. JS is old at",
    "start": "651760",
    "end": "658920"
  },
  {
    "text": "this point yeah yeah 2009 right yeah so the thing that happened when node.js came out and",
    "start": "658920",
    "end": "664240"
  },
  {
    "text": "started picking up steam like there were no libraries there were no database adapters connection poers like there",
    "start": "664240",
    "end": "670920"
  },
  {
    "text": "were like all the stuff in fact Ryan doll's original call was like Hey fertile ground you know helped build the",
    "start": "670920",
    "end": "677240"
  },
  {
    "text": "ecosystem around node and then people did that I'm surprised and maybe there",
    "start": "677240",
    "end": "682320"
  },
  {
    "text": "was and they just didn't fit your use case or you wanted to build it I'm surprised that come 2016",
    "start": "682320",
    "end": "687760"
  },
  {
    "text": "2017 this kind of uh foundational postgress Library didn't exist or there",
    "start": "687760",
    "end": "693800"
  },
  {
    "text": "were ones that maybe didn't you didn't like them or what was the situation with existing postgress libraries when you",
    "start": "693800",
    "end": "700880"
  },
  {
    "text": "started building this yeah my first introduction to to a postgress library in notes note was PG promise which is",
    "start": "700880",
    "end": "708320"
  },
  {
    "text": "built on top of the PG Library I didn't know that at the beginning but PG promise just looked fairly good I had a",
    "start": "708320",
    "end": "715920"
  },
  {
    "text": "good friend introduce me to it and showing off some of his uh his projects using it so that seemed like the natural",
    "start": "715920",
    "end": "723959"
  },
  {
    "text": "thing to start out with and it had the extra things you would build on top of PT to use it any anyhow but it didn't",
    "start": "723959",
    "end": "732079"
  },
  {
    "text": "take long until I kind of felt that there was actually using it writing code",
    "start": "732079",
    "end": "738199"
  },
  {
    "text": "with it could be better like tag template literals was had just become a thing so I made a rber for that library",
    "start": "738199",
    "end": "746040"
  },
  {
    "text": "that I just copied to all of my projects it wasn't even module or anything I was just in the database initialization file",
    "start": "746040",
    "end": "753399"
  },
  {
    "text": "I would just put this wer so I could write everything with tag template literals some other projects I was",
    "start": "753399",
    "end": "760079"
  },
  {
    "text": "working on did a lot of things with tag template literals and I think it was",
    "start": "760079",
    "end": "765160"
  },
  {
    "text": "just a weekend where I was I was reading the postgress documentation and I bummed into the wire protocol and it seemed so",
    "start": "765160",
    "end": "773160"
  },
  {
    "text": "Syle somehow like it I thought there was this crazy complex system behind",
    "start": "773160",
    "end": "779720"
  },
  {
    "text": "talking to the database but it seemed straightforward to just at least make a proof of concept so I made something",
    "start": "779720",
    "end": "785800"
  },
  {
    "text": "that could do queries return some rows over weekend I couldn't stop from",
    "start": "785800",
    "end": "791600"
  },
  {
    "text": "there I got to see where this this takes me so for the uninitiated when you say wire protocol can you describe what you",
    "start": "791600",
    "end": "798000"
  },
  {
    "text": "mean by that yeah it's um you can talk to a postrest database in two ways or",
    "start": "798000",
    "end": "803920"
  },
  {
    "text": "one way it's the wire protocol which is their definition of how to um run",
    "start": "803920",
    "end": "809800"
  },
  {
    "text": "queries wait for results and stuff like that and you can do that over either Unix ciruit or TC or",
    "start": "809800",
    "end": "816880"
  },
  {
    "text": "TCP and um it's a binary protocol but most of the things are text you can use",
    "start": "816880",
    "end": "824040"
  },
  {
    "text": "binary for the actual values and data transfer to which is something I'm going to look into for probably version four",
    "start": "824040",
    "end": "831959"
  },
  {
    "text": "of postgress JS but the core of the protocol is you have first an integer",
    "start": "831959",
    "end": "837440"
  },
  {
    "text": "just telling you how many columns are you going to get now or what is the next length you're going to read and then you",
    "start": "837440",
    "end": "844120"
  },
  {
    "text": "just take it step by step there was some low hanging fruit for making that way",
    "start": "844120",
    "end": "849920"
  },
  {
    "text": "better when you pass the incoming bytes and how to how to handle that compared",
    "start": "849920",
    "end": "855079"
  },
  {
    "text": "to what PG did and uh the two biggest upsides or benefits you could get would",
    "start": "855079",
    "end": "863199"
  },
  {
    "text": "be uh implementing pipelining which is where you just send as many queries as",
    "start": "863199",
    "end": "869279"
  },
  {
    "text": "you like and then they'll come back in the same order as you as you send them that's going to improve performance",
    "start": "869279",
    "end": "875519"
  },
  {
    "text": "quite a lot because you don't have to wait for the network to have a response",
    "start": "875519",
    "end": "882600"
  },
  {
    "text": "from your current career before you send the next and then there's prepared statements when you have taged template",
    "start": "882600",
    "end": "888440"
  },
  {
    "text": "literals it's almost a prepared statement in and of itself so you can",
    "start": "888440",
    "end": "894199"
  },
  {
    "text": "make the user land code create a prepared statement implicitly instead of",
    "start": "894199",
    "end": "899560"
  },
  {
    "text": "I think I haven't seen other libraries do it but I think all other libraries requires you to come up with a name for",
    "start": "899560",
    "end": "904880"
  },
  {
    "text": "your prepared statement yourself and this just gives a a really really big",
    "start": "904880",
    "end": "909959"
  },
  {
    "text": "performance boost compared to not using pipelines pipelining and prepared statements okay so you may have answered",
    "start": "909959",
    "end": "916160"
  },
  {
    "text": "one of my questions and Brett also in the JS party chat says how did you make it so fast and of course one of the",
    "start": "916160",
    "end": "923320"
  },
  {
    "text": "flagship features of post crjs is it's the fastest node Andino post CR client",
    "start": "923320",
    "end": "929839"
  },
  {
    "text": "you have a benchmark there which shows how it Compares and so is it safe to say that that's how the pipelining feature",
    "start": "929839",
    "end": "937000"
  },
  {
    "text": "and the the tag templates or the prepared statements are those the two things that make it faster over the wire",
    "start": "937000",
    "end": "943560"
  },
  {
    "text": "or is like the raw PG the old PG not with the promises and stuff around it but like is that about the same speed",
    "start": "943560",
    "end": "950160"
  },
  {
    "text": "but you're not having the wrapper sorry I'm not sure I how compared to the old PG so let me just ask this is it also",
    "start": "950160",
    "end": "958079"
  },
  {
    "text": "faster than PG yeah it's around two to five time fasters in this very simple Benchmark",
    "start": "958079",
    "end": "964240"
  },
  {
    "text": "that I did but I really wanted to do a thorough Benchmark and actually test with real Network latency instead of",
    "start": "964240",
    "end": "971120"
  },
  {
    "text": "locally because that Benchmark is locally and I'm not doing any actual hard queries I just wanted to test the",
    "start": "971120",
    "end": "977959"
  },
  {
    "text": "raw overhead of the library itself so a lot of that is also uh more efficient",
    "start": "977959",
    "end": "985160"
  },
  {
    "text": "passing and the handling of uh buffers well tool would be to get a benchmark",
    "start": "985160",
    "end": "990759"
  },
  {
    "text": "from an application like Tod do MVC or that real world app which surely has a",
    "start": "990759",
    "end": "997040"
  },
  {
    "text": "node implementation which maybe doesn't use postgress and the node you have to find one that actually uses postgress",
    "start": "997040",
    "end": "1002600"
  },
  {
    "text": "but yeah if you can find something that's already out there and already using PG in a more real world situation",
    "start": "1002600",
    "end": "1008519"
  },
  {
    "text": "not a synthetic Benchmark but actually like and then have a set of operations that you perform through the UI even",
    "start": "1008519",
    "end": "1015279"
  },
  {
    "text": "well that would not isolate quite enough maybe through a command line shell that's using the PG Library you might be",
    "start": "1015279",
    "end": "1021079"
  },
  {
    "text": "able to get not so simple yeah more real world benchmarks yeah I think it would",
    "start": "1021079",
    "end": "1027160"
  },
  {
    "text": "be great to have some a benchmark where there's a lot of concurrency because of course there's a lot of it has to do how",
    "start": "1027160",
    "end": "1034000"
  },
  {
    "text": "how are you handling your connection pool to for sure yeah saturate the server as much as POS possible right",
    "start": "1034000",
    "end": "1041880"
  },
  {
    "text": "yeah I mean I think at the end of the day most people writing node orino apps using",
    "start": "1041880",
    "end": "1047839"
  },
  {
    "text": "postgress are probably not going to bottleneck too hard right away maybe like just by tweaking their connection",
    "start": "1047840",
    "end": "1053240"
  },
  {
    "text": "pools they can get a little bit better performance and stuff but probably the facilities that you provide it seems",
    "start": "1053240",
    "end": "1058480"
  },
  {
    "text": "like you had PG promise you know node has kind of had these eras it was like the Callback era the promise era and now",
    "start": "1058480",
    "end": "1065919"
  },
  {
    "text": "we're very much in like the async O8 era of course promises are still out there but I noticed this library is all async",
    "start": "1065919",
    "end": "1072559"
  },
  {
    "text": "O8 is it all the way down y yeah so that was like a big motivation probably to do that as well wasn't it that's actually a",
    "start": "1072559",
    "end": "1079480"
  },
  {
    "text": "good question I think I'm not even sure I fully embraced ayinger weight when I",
    "start": "1079480",
    "end": "1084720"
  },
  {
    "text": "started out I had embraced promises but I was using then and catch so yeah I",
    "start": "1084720",
    "end": "1090280"
  },
  {
    "text": "think actually it it was first with version three that um that I took that to completion okay but I have one like",
    "start": "1090280",
    "end": "1098120"
  },
  {
    "text": "real world world example where at my current job we have uh we do digital",
    "start": "1098120",
    "end": "1103679"
  },
  {
    "text": "signage and background music so we have a lot of Hardware units throughout the world and um there's around 6,000 online",
    "start": "1103679",
    "end": "1112720"
  },
  {
    "text": "which before I did postgress was running on uh an 8 core 8 GB V server and now",
    "start": "1112720",
    "end": "1120559"
  },
  {
    "text": "it's running on a two Core 2 GB V server and it's just it's idling at 15% when",
    "start": "1120559",
    "end": "1127600"
  },
  {
    "text": "they reconnect all of them at the same time and it's bored yeah so and that was in combination with a switch from noes",
    "start": "1127600",
    "end": "1135080"
  },
  {
    "text": "normal or the node web socket module to microw web so so I actually should have been",
    "start": "1135080",
    "end": "1141840"
  },
  {
    "text": "benchmarked it back then when I had the two code bases next to each other but yeah that's a while ago now hindsights",
    "start": "1141840",
    "end": "1148200"
  },
  {
    "text": "2020 [Music]",
    "start": "1148200",
    "end": "1153049"
  },
  {
    "text": "yeah this episode is brought to you by our friends at source graft they recently launched a new feature called",
    "start": "1154559",
    "end": "1160679"
  },
  {
    "text": "code insights now you can track what really matters to you and your team in your code base transform your code into",
    "start": "1160679",
    "end": "1166000"
  },
  {
    "text": "a quable database to create customizable visual dashboards in seconds here's how engineering teams are using Code",
    "start": "1166000",
    "end": "1172159"
  },
  {
    "text": "insights they can track migrations adoption and replication across the code base they can detect and track versions",
    "start": "1172159",
    "end": "1178919"
  },
  {
    "text": "of languages or packages they can ensure the removal of security vulnerabilities like log 4J they can understand code by",
    "start": "1178919",
    "end": "1185679"
  },
  {
    "text": "team track code smells and health and visualize configurations and services",
    "start": "1185679",
    "end": "1191280"
  },
  {
    "text": "here's what the engineering manager at presy has to say about this new feature quote as we've grown so has a need to",
    "start": "1191280",
    "end": "1196640"
  },
  {
    "text": "better track and communicate our progress and our goals across the engineering team and the broader company",
    "start": "1196640",
    "end": "1202200"
  },
  {
    "text": "with code insights our data and migration tracking is accurate across our entire code base and our engineers",
    "start": "1202200",
    "end": "1208640"
  },
  {
    "text": "and our managers can shift out of manual spreadsheets and spend more time working on code end quote the next step is to",
    "start": "1208640",
    "end": "1216480"
  },
  {
    "text": "see how other teams are using this awesome feature head to about. source.com",
    "start": "1216480",
    "end": "1222520"
  },
  {
    "text": "code Das insights this link will be in the show notes again about. source.com",
    "start": "1222520",
    "end": "1228960"
  },
  {
    "text": "SLC code D [Music]",
    "start": "1228960",
    "end": "1238570"
  },
  {
    "text": "[Music]",
    "start": "1241780",
    "end": "1246799"
  },
  {
    "text": "[Music] insights so it sounds like the nut of it",
    "start": "1251210",
    "end": "1257960"
  },
  {
    "text": "was Tagg taged template functions you wanted to use tab template functions or did you want to use tagged templates in",
    "start": "1257960",
    "end": "1264480"
  },
  {
    "text": "general and now you're using tagged template functions yeah no no tag template functions I mean in general it",
    "start": "1264480",
    "end": "1270840"
  },
  {
    "text": "they're they're not they're just good for multi-line Strings so it's when you're able to use them as a function",
    "start": "1270840",
    "end": "1276600"
  },
  {
    "text": "and interpolate the values then then it becomes really interesting and there's this to me it was a very big Discovery",
    "start": "1276600",
    "end": "1284720"
  },
  {
    "text": "when I found out that the way ATT tack template literal function is called is the first part is an array with um",
    "start": "1284720",
    "end": "1293760"
  },
  {
    "text": "each part of the strings around your values or dynamic values and the next",
    "start": "1293760",
    "end": "1300600"
  },
  {
    "text": "all the rest of the arguments are the actual values and this first array is uh",
    "start": "1300600",
    "end": "1305960"
  },
  {
    "text": "static which means that you get a static reference to the actual code that you wrote If you have a function with a uh",
    "start": "1305960",
    "end": "1314200"
  },
  {
    "text": "that's inside it is calling a tack template literal function this array is by its nature static but it's also",
    "start": "1314200",
    "end": "1320840"
  },
  {
    "text": "static at runtime so in that way you can do some really cool caching features",
    "start": "1320840",
    "end": "1325919"
  },
  {
    "text": "because you know it's not going to change so that's pretty cool so describe how it's working under the scenes so let",
    "start": "1325919",
    "end": "1331760"
  },
  {
    "text": "me just describe how it works as an end user so like I write some SQL I wrot right a tag template I guess string it",
    "start": "1331760",
    "end": "1339600"
  },
  {
    "text": "looks like to me like a interpolated string and I put you know select star from users where ID equals and then I",
    "start": "1339600",
    "end": "1346440"
  },
  {
    "text": "put in my dollar sign as a curly brace I'm not looking at code right now but I put in my basic there's my little",
    "start": "1346440",
    "end": "1352960"
  },
  {
    "text": "variable that can change based on whatever ID I pass into that variable at the time that it's called and I pass",
    "start": "1352960",
    "end": "1359520"
  },
  {
    "text": "that off to postgress JS and say execute this query what does it do from there",
    "start": "1359520",
    "end": "1365000"
  },
  {
    "text": "how does it work the first thing is it does is simply just build up a query object and um this is an object that",
    "start": "1365000",
    "end": "1372600"
  },
  {
    "text": "inherits from a promise and it's actually a lazy promise which means that",
    "start": "1372600",
    "end": "1378240"
  },
  {
    "text": "if won't do anything until you call then. catch or finally and await when",
    "start": "1378240",
    "end": "1385039"
  },
  {
    "text": "you use the await keyword it'll do that implicitly the reason for that is",
    "start": "1385039",
    "end": "1390520"
  },
  {
    "text": "because I wanted to be able to build Dynamic queries but as close to SQL as",
    "start": "1390520",
    "end": "1395880"
  },
  {
    "text": "possible so you can actually Nest these tag template calls inside your values to",
    "start": "1395880",
    "end": "1402919"
  },
  {
    "text": "let's say you want to make it Dynamic to choose if you want to sort by ascending or descending order",
    "start": "1402919",
    "end": "1409120"
  },
  {
    "text": "then you need to be sure that you're not simply just injecting a string because",
    "start": "1409120",
    "end": "1415039"
  },
  {
    "text": "it's a keyword and you can send keywords as parameters to postgress so postgress",
    "start": "1415039",
    "end": "1421039"
  },
  {
    "text": "doesn't know how to handle that but you can do that in a safe way with tag template literals which is pretty cool",
    "start": "1421039",
    "end": "1427159"
  },
  {
    "text": "because you don't have to worry at all about SQL injection the only way you can",
    "start": "1427159",
    "end": "1432840"
  },
  {
    "text": "do that in postgress JS is using a function called do unsave so it's pretty clear that you're doing stuff where you",
    "start": "1432840",
    "end": "1438799"
  },
  {
    "text": "need to be care careful so again for the uninitiated SQL injection is when you open up your queries like imagine you're",
    "start": "1438799",
    "end": "1446480"
  },
  {
    "text": "building up a query string and then you have an end user who is specifying for",
    "start": "1446480",
    "end": "1452240"
  },
  {
    "text": "example sorting so like maybe you have a webui where they can toggle a sort by",
    "start": "1452240",
    "end": "1457520"
  },
  {
    "text": "this ascending or descending like you know invert the sort you're allowing them to specify the order of that sort",
    "start": "1457520",
    "end": "1465440"
  },
  {
    "text": "which is going eventually into your database query and so so SQL injection is when you do that in certain ways that",
    "start": "1465440",
    "end": "1470640"
  },
  {
    "text": "are not safe they can be nefarious and",
    "start": "1470640",
    "end": "1475880"
  },
  {
    "text": "write arbitrary SQL at the end of that maybe by instead of sending ASC or DSC",
    "start": "1475880",
    "end": "1481880"
  },
  {
    "text": "which is what you're expecting the UI to send they send you know semicolon drop all tables or whatever they send and so",
    "start": "1481880",
    "end": "1488679"
  },
  {
    "text": "this is a very common attack against SQL backed applications that when you're",
    "start": "1488679",
    "end": "1495120"
  },
  {
    "text": "building up these queries by hand with strings You're vulnerable to and so what",
    "start": "1495120",
    "end": "1502039"
  },
  {
    "text": "postgress JS is doing is it's protecting you from that possibility it makes it",
    "start": "1502039",
    "end": "1507279"
  },
  {
    "text": "impossible for that to happen because of the way that it's implemented so that's pretty cool I mean that's a huge win",
    "start": "1507279",
    "end": "1513240"
  },
  {
    "text": "yeah so okay so the other thing that you mentioned there that I think is really cool is the lazy",
    "start": "1513240",
    "end": "1519159"
  },
  {
    "text": "evaluation because now I can start to build up a query but not execute it till",
    "start": "1519159",
    "end": "1524600"
  },
  {
    "text": "I actually need to uh which is a performance gain right versus just like every time you pass it to to post crjs",
    "start": "1524600",
    "end": "1531360"
  },
  {
    "text": "it's going to run the query for you right I can build a query over time I can modify it Nest it put some",
    "start": "1531360",
    "end": "1539080"
  },
  {
    "text": "conditions Etc and then execute it really to kind of adjust in time sending",
    "start": "1539080",
    "end": "1544640"
  },
  {
    "text": "a postgress right when I actually need to execute that query so that's Super Rad and you're doing that because you're",
    "start": "1544640",
    "end": "1550640"
  },
  {
    "text": "having this nested tag templates as well as returning the promise versus returning the result right yeah of",
    "start": "1550640",
    "end": "1557799"
  },
  {
    "text": "course you would be able to return the result no matter what you need to await it somehow or a",
    "start": "1557799",
    "end": "1562880"
  },
  {
    "text": "call back function or right but yeah it's to achieve this this way of building your queries without inventing",
    "start": "1562880",
    "end": "1569840"
  },
  {
    "text": "a new language for it and to keep the amount of keywords as low as possible so",
    "start": "1569840",
    "end": "1575960"
  },
  {
    "text": "I really enjoy when I don't have to remember the word of some things I use in the library it's much easier to use",
    "start": "1575960",
    "end": "1582520"
  },
  {
    "text": "to remember the position of things or how you call it so if you want to use a",
    "start": "1582520",
    "end": "1588640"
  },
  {
    "text": "dynamic column name in postgress you also use the same tag template literal function but you use it as a normal",
    "start": "1588640",
    "end": "1595640"
  },
  {
    "text": "function and then postgress will be ensure that the will ensure that the",
    "start": "1595640",
    "end": "1600720"
  },
  {
    "text": "column is escaped properly so one of the places that we started this conversation around relational versus which I",
    "start": "1600720",
    "end": "1607799"
  },
  {
    "text": "haven't seen at least in my perusing of what you are up to with this Library it",
    "start": "1607799",
    "end": "1613159"
  },
  {
    "text": "doesn't seem to have built-in facilities for schema generation migration changes",
    "start": "1613159",
    "end": "1618760"
  },
  {
    "text": "to your schema no which you would need something how do you go about that so",
    "start": "1618760",
    "end": "1624399"
  },
  {
    "text": "you start off uh you're going to build a a web app with postgress JS and you're like okay I need my users table they",
    "start": "1624399",
    "end": "1630799"
  },
  {
    "text": "should have a name and an email blah blah blah blah how do I Define my schema is it all just grab a separate library",
    "start": "1630799",
    "end": "1637760"
  },
  {
    "text": "or no there's actually I have another Library I use personally called postgress shift okay which is just a",
    "start": "1637760",
    "end": "1644360"
  },
  {
    "text": "forwards only migration Library very classical you just have like start with migration number one two three no clever",
    "start": "1644360",
    "end": "1652320"
  },
  {
    "text": "no fancy stuff nope I just like it to be as straightforward as possible because then I know what's going on I think that",
    "start": "1652320",
    "end": "1658520"
  },
  {
    "text": "you can always do a backwards Migration by having the next migration ready if you have the need for that so it doesn't",
    "start": "1658520",
    "end": "1665080"
  },
  {
    "text": "even do the up down thing that most of them do no it's just one direction run this yeah then if you want to back it",
    "start": "1665080",
    "end": "1671159"
  },
  {
    "text": "out you just run another one yeah and um I've tried to get my feet wet with some",
    "start": "1671159",
    "end": "1677679"
  },
  {
    "text": "of these tools that do auto migrations to figure out how you change your schema",
    "start": "1677679",
    "end": "1683080"
  },
  {
    "text": "and I think the the vision is really great I just I haven't tried using one",
    "start": "1683080",
    "end": "1689399"
  },
  {
    "text": "where it felt like an improvement and there's also the question about do you",
    "start": "1689399",
    "end": "1695200"
  },
  {
    "text": "do only schema migrations or do you want to do data migrations at the same time",
    "start": "1695200",
    "end": "1700559"
  },
  {
    "text": "and I I actually feel okay just mixing it all up but it depends on the project of course and for the things I've been",
    "start": "1700559",
    "end": "1706840"
  },
  {
    "text": "doing using postgress shift has been fine very good well we'll take a uh a",
    "start": "1706840",
    "end": "1712000"
  },
  {
    "text": "show notes link over to postgress shift surely there's other library is it there's definitely others and post Chris",
    "start": "1712000",
    "end": "1718799"
  },
  {
    "text": "shift of course yeah might have mentioned it at the bottom of the read me but it's not as polished it's not",
    "start": "1718799",
    "end": "1724640"
  },
  {
    "text": "finished with proper documentations and stuff so uh but it's good enough for Rasmus so maybe it's good enough for",
    "start": "1724640",
    "end": "1729880"
  },
  {
    "text": "somebody else you know yeah your mileage may vary but this is what he uses and I",
    "start": "1729880",
    "end": "1735200"
  },
  {
    "text": "think that's valuable information to have so have you ever thought about maybe expanding the footprint of postgress JS",
    "start": "1735200",
    "end": "1740919"
  },
  {
    "text": "just to provide basic functionality that I mean pretty much anybody using postgress is going to have to Define and",
    "start": "1740919",
    "end": "1748559"
  },
  {
    "text": "migrate their schema right now you can do it outside of your app too I mean you can just but is that pass maybe V4 have",
    "start": "1748559",
    "end": "1757000"
  },
  {
    "text": "a little bit of migration stuff no I think almost all of the things I built",
    "start": "1757000",
    "end": "1762120"
  },
  {
    "text": "primarily because it's for my own usage so with postgress shift it's it's fine having another Library and the way it",
    "start": "1762120",
    "end": "1769120"
  },
  {
    "text": "works is just it has a Convention of a migrations folder with folders for each",
    "start": "1769120",
    "end": "1774320"
  },
  {
    "text": "migration uh numbered and then you um you pass in your postgress instance",
    "start": "1774320",
    "end": "1780480"
  },
  {
    "text": "connection to the database and then just off you go so it's so little code that",
    "start": "1780480",
    "end": "1785640"
  },
  {
    "text": "it might even make sense to include in the the main library but on the other hand a lot of people will prefer another",
    "start": "1785640",
    "end": "1792600"
  },
  {
    "text": "way of doing migrations so mhm as it stands today could you could you use the",
    "start": "1792600",
    "end": "1797720"
  },
  {
    "text": "main Library can you execute arbitrary SQL statements if you want to like can I",
    "start": "1797720",
    "end": "1803000"
  },
  {
    "text": "just write table definitions oh yeah sure pass it to post JS yeah yeah yeah so it's it's there it's just not yeah",
    "start": "1803000",
    "end": "1810080"
  },
  {
    "text": "it's not fleshed out I mean like you can do it you can use the same connection you're using elsewhere and exactly write",
    "start": "1810080",
    "end": "1815200"
  },
  {
    "text": "some code to do your thing okay so that I think when you move into like more",
    "start": "1815200",
    "end": "1820279"
  },
  {
    "text": "functionality you mentioned detecting your scheme of changes I think we get to a point where some people start to think",
    "start": "1820279",
    "end": "1826320"
  },
  {
    "text": "okay well what I really want have our Rich data objects that I Define in my",
    "start": "1826320",
    "end": "1832880"
  },
  {
    "text": "JavaScript code like we have objects in JavaScript can I just have a user class",
    "start": "1832880",
    "end": "1838320"
  },
  {
    "text": "with these methods and these data properties and just let my postgress",
    "start": "1838320",
    "end": "1844960"
  },
  {
    "text": "library do it for me so like we're getting in the world of not just migrate",
    "start": "1844960",
    "end": "1850120"
  },
  {
    "text": "for me but what about the dreaded omm which is actually can be very nice if done well it's hard to do very well but",
    "start": "1850120",
    "end": "1857279"
  },
  {
    "text": "can't you take my objects and and map them onto a relational database and remove a lot of the boiler plate or",
    "start": "1857279",
    "end": "1863639"
  },
  {
    "text": "things I have to do manually have you thought about orms because that would be a natural progression but maybe you",
    "start": "1863639",
    "end": "1868799"
  },
  {
    "text": "don't like those it actually touches on a thing I IAL spoke with feros about at",
    "start": "1868799",
    "end": "1874639"
  },
  {
    "text": "some point which is another project of mine called hql and the idea is that you",
    "start": "1874639",
    "end": "1880799"
  },
  {
    "text": "don't need an orm you just go and query",
    "start": "1880799",
    "end": "1885919"
  },
  {
    "text": "the database so so on the surface it looks it looks like it you just go directly from your client side",
    "start": "1885919",
    "end": "1892200"
  },
  {
    "text": "JavaScript UI code and query the database directly and when you're building your query there you can just",
    "start": "1892200",
    "end": "1898519"
  },
  {
    "text": "ask for it in whatever shape you want and yeah back to the SQL injection all",
    "start": "1898519",
    "end": "1903720"
  },
  {
    "text": "the dangerous stuff in a perfectly safe way so I think once I find the time to",
    "start": "1903720",
    "end": "1911600"
  },
  {
    "text": "actually get that up to a stage where I can present it it's it's going to push",
    "start": "1911600",
    "end": "1916799"
  },
  {
    "text": "the other things away because because it's such an awesome way to just remove",
    "start": "1916799",
    "end": "1922440"
  },
  {
    "text": "so much middleware in between the things you actually want to build and that's",
    "start": "1922440",
    "end": "1928159"
  },
  {
    "text": "orm are one of those [Music]",
    "start": "1928159",
    "end": "1937159"
  },
  {
    "text": "things this episode is brought to you by our friends at Square millions of square",
    "start": "1937159",
    "end": "1942559"
  },
  {
    "text": "sellers use the square app Marketplace to discover and install apps they rely on daily to run their businesses and the",
    "start": "1942559",
    "end": "1949159"
  },
  {
    "text": "way you get your app there is by becoming a square app partner let me tell you how this works as a square app",
    "start": "1949159",
    "end": "1956120"
  },
  {
    "text": "partner you can offer and monetize your apps directly to square sellers in the app Marketplace to millions of sellers",
    "start": "1956120",
    "end": "1963440"
  },
  {
    "text": "you can Leverage The Square platform to build robust e-commerce websites smart payment Integrations and custom",
    "start": "1963440",
    "end": "1969679"
  },
  {
    "text": "solutions for millions of businesses and here's the best part you get to keep 100% of Revenue while you grow Square",
    "start": "1969679",
    "end": "1977360"
  },
  {
    "text": "collects a 0% cut from your sales for the first year or your first 100 square referred sellers that way you can focus",
    "start": "1977360",
    "end": "1984480"
  },
  {
    "text": "on building and growing your Square customer base and you get to set your own pricing models you also get a ton of",
    "start": "1984480",
    "end": "1990919"
  },
  {
    "text": "support from Square you get access to Square's technical team using slack you get insights into the performance of",
    "start": "1990919",
    "end": "1996799"
  },
  {
    "text": "your app on the app Marketplace and of course you get direct access to new product launches and all this begins at",
    "start": "1996799",
    "end": "2003760"
  },
  {
    "text": "changel log.com Square again changel log.com /",
    "start": "2003760",
    "end": "2008850"
  },
  {
    "text": "[Music]",
    "start": "2008850",
    "end": "2022760"
  },
  {
    "text": "Square so while we're still talking about the way it works and some of the things it doesn't do and stuff I like",
    "start": "2022760",
    "end": "2028679"
  },
  {
    "text": "about it I really like the way you return a result array mhm from the",
    "start": "2028679",
    "end": "2034279"
  },
  {
    "text": "queries and it appears that I'm asking for confirmation appears that you return a result array every time no matter the",
    "start": "2034279",
    "end": "2040799"
  },
  {
    "text": "query even if it's empty yeah even if you say select you know star blah blah",
    "start": "2040799",
    "end": "2045880"
  },
  {
    "text": "blah blah limit one yeah it's going to be an array every time every time okay I love this",
    "start": "2045880",
    "end": "2051079"
  },
  {
    "text": "Library yeah that's awesome man yeah a lot of magic but some things just got to be predictable yes the principle of Le",
    "start": "2051079",
    "end": "2057839"
  },
  {
    "text": "surprise you know have no idea how much code I have written in my life where it's like handling the null case",
    "start": "2057839",
    "end": "2063040"
  },
  {
    "text": "handling the single case handling the more than one case mhm and it's like those two like no results and one result",
    "start": "2063040",
    "end": "2070480"
  },
  {
    "text": "are often times treated as special cases yeah whereas if you're returning an array every time an array with zero is",
    "start": "2070480",
    "end": "2078240"
  },
  {
    "text": "just an array an array with one is just an array an array with 75 is just an array and so that is the way to do it",
    "start": "2078240",
    "end": "2085358"
  },
  {
    "text": "where did you learn that I know I've learned it from a specific place but where' you get that principle that it's",
    "start": "2085359",
    "end": "2091158"
  },
  {
    "text": "kind of like a mixture of the principle of least surprise but also there's a uniform access principle which it's kind",
    "start": "2091159",
    "end": "2097839"
  },
  {
    "text": "of that I don't think that's exactly what that principle is about but it's it is you're uniformly accessing the",
    "start": "2097839",
    "end": "2103440"
  },
  {
    "text": "results so I'm curious where you learn that cuz that's that's a brilliant API design if you ask me I don't remember",
    "start": "2103440",
    "end": "2109480"
  },
  {
    "text": "where I learned it but I got an idea it might come from so I haven't studied anything with programming I started out",
    "start": "2109480",
    "end": "2115760"
  },
  {
    "text": "as a designer and it's like some of these principles in design they affect",
    "start": "2115760",
    "end": "2120920"
  },
  {
    "text": "how I write my code so also if you're doing a user interface or building stuff",
    "start": "2120920",
    "end": "2126240"
  },
  {
    "text": "like that it's the same things the userland portion of my library is like",
    "start": "2126240",
    "end": "2131960"
  },
  {
    "text": "an interface design right just like a graphical user interface design so um",
    "start": "2131960",
    "end": "2137599"
  },
  {
    "text": "perhaps from there I'm not sure okay I will tell you I learned it from jQuery ah because that is the way jQuery Works",
    "start": "2137599",
    "end": "2144720"
  },
  {
    "text": "to this day when you do selectors it might have been from there I got it too yeah yeah just never thought about it",
    "start": "2144720",
    "end": "2152319"
  },
  {
    "text": "yeah I thought I think about it because when I I you know I just used jQuery long enough because I used to deal with",
    "start": "2152319",
    "end": "2158000"
  },
  {
    "text": "all the edge cases and I started realizing it's almost like I didn't realize it first it's like I feel like my code has less Edge case handling when",
    "start": "2158000",
    "end": "2165800"
  },
  {
    "text": "I was writing jQuery stuff and I'm like why is that and I realized well it's because you get an AR array every time yeah and so you don't have those two",
    "start": "2165800",
    "end": "2172440"
  },
  {
    "text": "special cases of empty or one mhm and I started writing all my code that way to",
    "start": "2172440",
    "end": "2178319"
  },
  {
    "text": "return sometimes I'm return a set every time yeah and so when I see that in the wild I think okay this person knows what",
    "start": "2178319",
    "end": "2183720"
  },
  {
    "text": "they're doing and I wonder did they see it in jQuery so maybe you did but you know osmosis learn it through osmosis",
    "start": "2183720",
    "end": "2190079"
  },
  {
    "text": "without without knowing that you did but yeah I could see where design principles would also have it's kind of the don't",
    "start": "2190079",
    "end": "2196760"
  },
  {
    "text": "make me think concept because that's kind of what you're doing yeah I think that with uh destructuring in Java",
    "start": "2196760",
    "end": "2203599"
  },
  {
    "text": "Script it also became so much better it's right so pleasant to write that way to handle that stuff yeah okay so the",
    "start": "2203599",
    "end": "2210440"
  },
  {
    "text": "last feature that I want you to touch on because there's lots here we haven't talked transactions we haven't talked",
    "start": "2210440",
    "end": "2216200"
  },
  {
    "text": "about a lot of stuff but a lot of it's the things that you wouldd expect to be in a database Library so it's like yes",
    "start": "2216200",
    "end": "2221359"
  },
  {
    "text": "it has these facilities one that I think is really cool and again it's not like it's ground shattering but the fact that",
    "start": "2221359",
    "end": "2227800"
  },
  {
    "text": "you can call. describe on a query that you're building is super cool you want",
    "start": "2227800",
    "end": "2233760"
  },
  {
    "text": "to talk about that yeah that's actually one of the few things I built because someone else asked for it okay okay and",
    "start": "2233760",
    "end": "2241000"
  },
  {
    "text": "I think that was in relation they were trying to build some setup for automated type",
    "start": "2241000",
    "end": "2247960"
  },
  {
    "text": "inference inference for typescript and there's also a discussion in the repo I",
    "start": "2247960",
    "end": "2253000"
  },
  {
    "text": "don't follow that much I'm not a typescript I don't use typescript so it's not really of interest to me but it",
    "start": "2253000",
    "end": "2259920"
  },
  {
    "text": "wasn't hard to add that feature so someone else is going to take the take credit for thinking of it yeah so the",
    "start": "2259920",
    "end": "2267160"
  },
  {
    "text": "reason why I like this feature and it does exist in other database tools but it should I think exists in every database tools because it allows you to",
    "start": "2267160",
    "end": "2274000"
  },
  {
    "text": "actually see at the end of the day what it is exact that you're going to be sending over to",
    "start": "2274000",
    "end": "2279920"
  },
  {
    "text": "postgress right so you're building it up in JavaScript and strings maybe does something else cuz you're you're flagging me here go ahead yeah it's not",
    "start": "2279920",
    "end": "2287680"
  },
  {
    "text": "only about what you get returned it actually tells you the types postgress expects you to send as well okay so if",
    "start": "2287680",
    "end": "2294680"
  },
  {
    "text": "you have some when you have the tag template literal and you have some values there that you want to extrapolate it tells you what input it",
    "start": "2294680",
    "end": "2302520"
  },
  {
    "text": "expects gosh yes so it's even fancier than I thought okay very cool couple other question coming in from the chat",
    "start": "2302520",
    "end": "2308880"
  },
  {
    "text": "so it's version three you've been working on it for a few years now 2017 is you started doing post grass we're in",
    "start": "2308880",
    "end": "2314760"
  },
  {
    "text": "2022 so I'm not sure when you started this particular library but you've been toiling away few major versions the",
    "start": "2314760",
    "end": "2321079"
  },
  {
    "text": "question is what are your plans and intentions for maintaining the project like are you going to find a new shiny I",
    "start": "2321079",
    "end": "2326800"
  },
  {
    "text": "heard fauna DB is cool you know you going to switch to fauna and an vanted postgress JS or what's going to happen down the road you think well if fauna",
    "start": "2326800",
    "end": "2333520"
  },
  {
    "text": "uses the wire Protocol no problem but uh fauna specifically I think think is the one who is not PG compatible but",
    "start": "2333520",
    "end": "2340880"
  },
  {
    "text": "cockroach yes a lot of them are saying we are wire compatible cuz it's a huge adoption move right but I think fauna",
    "start": "2340880",
    "end": "2347599"
  },
  {
    "text": "actually put a stake in the ground that says they're not but regardless yeah you know how long you going to maintain the",
    "start": "2347599",
    "end": "2353079"
  },
  {
    "text": "sucker for as long as I'm going to use it myself too which is in the quite long",
    "start": "2353079",
    "end": "2358599"
  },
  {
    "text": "future I think but I actually think it's can never say that but it's done there's",
    "start": "2358599",
    "end": "2364400"
  },
  {
    "text": "some interesting things to try out with the binary protocol but it's really not necessary it it wouldn't change anything",
    "start": "2364400",
    "end": "2370920"
  },
  {
    "text": "on the surface it would merely be a performance Improvement so uh I think any bucks that",
    "start": "2370920",
    "end": "2377400"
  },
  {
    "text": "should appear or or any obvious feature requests I'm of course going to take them in but currently it's sitting there",
    "start": "2377400",
    "end": "2384200"
  },
  {
    "text": "with zero poll requests zero issues it feels really nice or did there come one",
    "start": "2384200",
    "end": "2389599"
  },
  {
    "text": "in today I don't I don't remember I'm looking while you talk I don't see any there it's looking empty yeah yeah 74",
    "start": "2389599",
    "end": "2396200"
  },
  {
    "text": "closed zero open we'll see I suppose there's going to come more when people start to use it for more than just side",
    "start": "2396200",
    "end": "2403000"
  },
  {
    "text": "projects it's still pretty young I think it got a lot of attention with the version 3 release but uh it's only two",
    "start": "2403000",
    "end": "2410119"
  },
  {
    "text": "years ago I released the first version so okay yeah so the version 3 release",
    "start": "2410119",
    "end": "2415839"
  },
  {
    "text": "was definitely when it crossed my radar do you have yeah I mean you have some other open source stuff are you do you",
    "start": "2415839",
    "end": "2423319"
  },
  {
    "text": "have a GitHub sponsors do you have an open Collective do you have any sort of sustainability plan are you just happy",
    "start": "2423319",
    "end": "2428599"
  },
  {
    "text": "to use this thing and it's done and maybe you'll do another open source thing maybe not but you're not really like looking to maintain open source as",
    "start": "2428599",
    "end": "2435000"
  },
  {
    "text": "a thing not anything I I would do as for a living sure but I mean like uh you",
    "start": "2435000",
    "end": "2440440"
  },
  {
    "text": "probably put some sweat into this thing or do you only work on it at work no no",
    "start": "2440440",
    "end": "2445640"
  },
  {
    "text": "no no it's it's a private project uh I use it at work but no but it's done so",
    "start": "2445640",
    "end": "2450760"
  },
  {
    "text": "who cares yeah yeah no I have a lot of other open source projects I want to continue working on as well but I'm",
    "start": "2450760",
    "end": "2457319"
  },
  {
    "text": "probably in the camp that don't feel like you should spend too much time trying to open to monetize your open",
    "start": "2457319",
    "end": "2462359"
  },
  {
    "text": "source projects just it's nice to share with others and I get a benefit from uh",
    "start": "2462359",
    "end": "2467640"
  },
  {
    "text": "extra eyes on it that's really nice too and uh yeah solid stance no I I think",
    "start": "2467640",
    "end": "2473119"
  },
  {
    "text": "that's uh well said well said one thing I noticed is that while you came along a",
    "start": "2473119",
    "end": "2478839"
  },
  {
    "text": "little later you do have mpm install postgress which is like very much as",
    "start": "2478839",
    "end": "2484319"
  },
  {
    "text": "short as it I mean you could you couldn't do PG I guess yeah but I mean that's like official and I thought to",
    "start": "2484319",
    "end": "2489839"
  },
  {
    "text": "myself dang dude got postgress mpm is quite a crowded name at this point and I",
    "start": "2489839",
    "end": "2496839"
  },
  {
    "text": "saw in the very very very very bottom of your read me you have a thank you to Ryan doll you want to tell that story",
    "start": "2496839",
    "end": "2502839"
  },
  {
    "text": "how did sounds like maybe he donated it or he wasn't using it or what happened there exactly so in the start it was",
    "start": "2502839",
    "end": "2509680"
  },
  {
    "text": "called PG but PE GE so okay pretty silly",
    "start": "2509680",
    "end": "2514880"
  },
  {
    "text": "and I I can't release it with this name so uh I saw that Ryan had the postgress",
    "start": "2514880",
    "end": "2520160"
  },
  {
    "text": "package and it had like the barebones of a postgress protocol from",
    "start": "2520160",
    "end": "2525720"
  },
  {
    "text": "2010 and like you started the conversation with mentioning that he just laid it out there please build",
    "start": "2525720",
    "end": "2531880"
  },
  {
    "text": "these things for node right so I just I tried to write him and I told him I have this Library it's at this stage I think",
    "start": "2531880",
    "end": "2538520"
  },
  {
    "text": "it could uh definitely be something that would be interesting for people to use as their main postgress library and um",
    "start": "2538520",
    "end": "2545599"
  },
  {
    "text": "he responded the same night just asking yeah that sounds like a great idea can you just link me some of your code so I",
    "start": "2545599",
    "end": "2551720"
  },
  {
    "text": "can see what's going on yeah quick code review yeah yeah exactly and it was Private at that point and then like a",
    "start": "2551720",
    "end": "2558880"
  },
  {
    "text": "half an hour later it was just yeah sure I'll just transfer it to you so that was that was really nice of him was there",
    "start": "2558880",
    "end": "2564640"
  },
  {
    "text": "any anxiety or like dang Ryan doll's just checking out my code right now what if he replies back is like nah you can't",
    "start": "2564640",
    "end": "2570520"
  },
  {
    "text": "have it yeah that's very cool well speaking of Ryan doll it's also a Dino client so",
    "start": "2570520",
    "end": "2578720"
  },
  {
    "text": "I'm wondering yes did you have to go jump through special Hoops in order to work on both platforms or were you just",
    "start": "2578720",
    "end": "2584200"
  },
  {
    "text": "writing vanilla JS so it didn't matter yeah most of it was Vanilla JS and of course there's zero dependencies so it",
    "start": "2584200",
    "end": "2591000"
  },
  {
    "text": "was all my own code and I think version one was actually just 1,200 lines of",
    "start": "2591000",
    "end": "2596040"
  },
  {
    "text": "code for the entire thing so porting it to dino was a one or two day task",
    "start": "2596040",
    "end": "2603960"
  },
  {
    "text": "because they've done a huge job making making polyfills for node interfaces so",
    "start": "2603960",
    "end": "2611559"
  },
  {
    "text": "it was actually just a matter of mapping those up to Doo and then finding the edge cases where that didn't work and",
    "start": "2611559",
    "end": "2618599"
  },
  {
    "text": "then yeah I think on the first run tests passed like almost all of them there",
    "start": "2618599",
    "end": "2623760"
  },
  {
    "text": "were some stream related things but luckily they had fixed that when uh version 3 was about to be launched so it",
    "start": "2623760",
    "end": "2630000"
  },
  {
    "text": "passes the same tests as the note version and I haven't used Dino in production for anything so I'm very",
    "start": "2630000",
    "end": "2635839"
  },
  {
    "text": "curious to hear from anyone using Dino if how it works for them but uh yeah that's cool I might kick the tires I've",
    "start": "2635839",
    "end": "2642240"
  },
  {
    "text": "been kicking the tires on Dino not in production context but just in kicking the tires context and having some fun",
    "start": "2642240",
    "end": "2649800"
  },
  {
    "text": "and uh as I said I'm a postgress guy from way back so this sounds like a nice",
    "start": "2649800",
    "end": "2655440"
  },
  {
    "text": "little playground for me you have typescript support as well you didn't you don't care about that but it sounds",
    "start": "2655440",
    "end": "2661480"
  },
  {
    "text": "like was that also like which one was harder no there was a yeah there was a user on jth HUB who who just PR it the",
    "start": "2661480",
    "end": "2669119"
  },
  {
    "text": "first version and he's just been stepping up along the way so he's done I don't know if he's done a great job but",
    "start": "2669119",
    "end": "2675079"
  },
  {
    "text": "I think he did I can't tell let R know if he did a bad job or not yeah that's like when you have",
    "start": "2675079",
    "end": "2681000"
  },
  {
    "text": "somebody volunteer a translation of something you know like I'll translate this to Japanese you're like okay true",
    "start": "2681000",
    "end": "2687119"
  },
  {
    "text": "please do I hope it's good yeah awesome is there any way the community can help",
    "start": "2687119",
    "end": "2693000"
  },
  {
    "text": "you with this I think he kind of done like if you had a chance to say something to JS devs like would it be",
    "start": "2693000",
    "end": "2699720"
  },
  {
    "text": "use it let me know if you like it suggest features what are you looking for you just want people to enjoy your",
    "start": "2699720",
    "end": "2706200"
  },
  {
    "text": "software or do you have specific needs or desires with it I think the main",
    "start": "2706200",
    "end": "2711400"
  },
  {
    "text": "thing that would be nice to have postgress help is making postc SQL sexy",
    "start": "2711400",
    "end": "2717119"
  },
  {
    "text": "again like it's it's got to be straightforward to use postgress and that's what I'm hoping to do with this",
    "start": "2717119",
    "end": "2722400"
  },
  {
    "text": "Library like that's probably something I picked up from Mongoose the fact that you can just",
    "start": "2722400",
    "end": "2727559"
  },
  {
    "text": "instantiate your database connection and then quer off of it you don't need to",
    "start": "2727559",
    "end": "2733119"
  },
  {
    "text": "worry about managing pools or waiting for the connection to open handling",
    "start": "2733119",
    "end": "2738160"
  },
  {
    "text": "errors on the connection instead of just handling errors on every single queries is there's like the the whole error",
    "start": "2738160",
    "end": "2744760"
  },
  {
    "text": "situation is so much better with postgress JS compared to PG I had a use to convert from PG to postest a day ago",
    "start": "2744760",
    "end": "2753000"
  },
  {
    "text": "and it was like 148 additions 4 90 deletions nice and that that's something",
    "start": "2753000",
    "end": "2759559"
  },
  {
    "text": "that yeah makes me happy that really yeah that feels good right there yeah this seems pretty good yeah so if it can",
    "start": "2759559",
    "end": "2766319"
  },
  {
    "text": "help push post G kill forward then that's really awesome so what about some of post's more advanced features I see",
    "start": "2766319",
    "end": "2772520"
  },
  {
    "text": "you have listen to notify in there some real-time stuff I wonder about the Json",
    "start": "2772520",
    "end": "2778160"
  },
  {
    "text": "support in post grass other things that aren't like that's not exactly new Json",
    "start": "2778160",
    "end": "2783280"
  },
  {
    "text": "B is not new anymore but it's newish faculty and there and the postgress",
    "start": "2783280",
    "end": "2789000"
  },
  {
    "text": "database is getting you know new features over time are you interested in adding specific support for specific",
    "start": "2789000",
    "end": "2796079"
  },
  {
    "text": "Advanced features or you want to stay pretty much SQL compatible what are your thoughts on that I think postgress added",
    "start": "2796079",
    "end": "2803400"
  },
  {
    "text": "it themselves when they got Jason path and everything as a as a first class citizen support for that so you're",
    "start": "2803400",
    "end": "2810599"
  },
  {
    "text": "writing SQL with postr JS and you can just benefit from those features added",
    "start": "2810599",
    "end": "2815680"
  },
  {
    "text": "along the way the most interesting extra thing I added I think is The Logical",
    "start": "2815680",
    "end": "2821079"
  },
  {
    "text": "replication realtime subscription which is taken directly from superbase who did",
    "start": "2821079",
    "end": "2827280"
  },
  {
    "text": "that first and and uh presented it as a web socket through a big setup that you",
    "start": "2827280",
    "end": "2832440"
  },
  {
    "text": "would use use with Elixir but here you can just get it like you do SQL do",
    "start": "2832440",
    "end": "2838880"
  },
  {
    "text": "subscribe and put in your table name perhaps a specific field and then you",
    "start": "2838880",
    "end": "2844400"
  },
  {
    "text": "get notified everything that changes you don't need to set up stuff like you do with listen and notify you just have",
    "start": "2844400",
    "end": "2850440"
  },
  {
    "text": "have to add which you can say all tables just want to push all tables to logical",
    "start": "2850440",
    "end": "2856760"
  },
  {
    "text": "replication or you can narrow it down to the things that that really matter well Rasmus very cool stuff I'm quite",
    "start": "2856760",
    "end": "2862119"
  },
  {
    "text": "impressed by the library I want to give it a try for myself definitely if you're out there using postc crjs let us know",
    "start": "2862119",
    "end": "2868240"
  },
  {
    "text": "shoot us a hauler definitely let Rasmus know one of the best things you can do as a open- source user is just let",
    "start": "2868240",
    "end": "2874720"
  },
  {
    "text": "people know that you're using their software that you appreciate their software if there are issues that you're",
    "start": "2874720",
    "end": "2880160"
  },
  {
    "text": "having obviously let them know those kindly as well that's good feedback for open source maintainers anything else we",
    "start": "2880160",
    "end": "2887440"
  },
  {
    "text": "haven't talked about you want to make sure we squeeze in before we call the show there could be plenty but I no I'm",
    "start": "2887440",
    "end": "2893319"
  },
  {
    "text": "I'm good you're good okay yeah well I really appreciate you coming on the show talking about this I think it's a very",
    "start": "2893319",
    "end": "2899240"
  },
  {
    "text": "cool project I think we need more highquality libraries that let us Build",
    "start": "2899240",
    "end": "2904839"
  },
  {
    "text": "You Know Rich database back applications so more like this please but that's all",
    "start": "2904839",
    "end": "2910200"
  },
  {
    "text": "we have for now don't forget about those events we mentioned in the holla section definitely check out postgress JS",
    "start": "2910200",
    "end": "2915920"
  },
  {
    "text": "postgress shift if you're into simple things as well as hash ql we have the",
    "start": "2915920",
    "end": "2921599"
  },
  {
    "text": "links to all the things in your show notes so click through and check out",
    "start": "2921599",
    "end": "2927440"
  },
  {
    "text": "what Rasmus has been up to but that's all for now this has been JS party I've been Jared Santo and we will talk to you",
    "start": "2927440",
    "end": "2933960"
  },
  {
    "text": "all next time change log plus plus subscribers stick",
    "start": "2933960",
    "end": "2940640"
  },
  {
    "text": "around I followed up with Rasmus on hash ql after the official show end it you",
    "start": "2940640",
    "end": "2946119"
  },
  {
    "text": "laugh when I said check out hash ql yeah I'm a bit nervous about that one",
    "start": "2946119",
    "end": "2951640"
  },
  {
    "text": "it's like it's this thing that I it's only us now right he agreed we could",
    "start": "2951640",
    "end": "2956839"
  },
  {
    "text": "keep it in but it's for chain doog Plus+ ears only if you're not a plus plus subscriber check it out it's our",
    "start": "2956839",
    "end": "2963400"
  },
  {
    "text": "membership program that lets you directly support our work on Js party save yourself some time by making the",
    "start": "2963400",
    "end": "2969079"
  },
  {
    "text": "ads disappear and get cool bonuses like this extended episode subscribe today at Chang log.com plusus plus thanks again",
    "start": "2969079",
    "end": "2977680"
  },
  {
    "text": "to fastly for having our CDN back to our beat freaking residence break master cylinder and to you for listening we",
    "start": "2977680",
    "end": "2984559"
  },
  {
    "text": "appreciate you next up on the Pod Big Show Nick and Chris sat down with the",
    "start": "2984559",
    "end": "2990680"
  },
  {
    "text": "typescript team to discuss their new type annotations proposal that has everybody talking stay tuned for that",
    "start": "2990680",
    "end": "2996760"
  },
  {
    "text": "that one you don't want to miss it it'll be hitting your podcast speed next [Music]",
    "start": "2996760",
    "end": "3004400"
  },
  {
    "text": "week",
    "start": "3004520",
    "end": "3007520"
  }
]