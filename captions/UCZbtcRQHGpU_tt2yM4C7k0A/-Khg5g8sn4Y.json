[
  {
    "text": "bandwith for change log is provided by fastly learn more at fastly.com we move",
    "start": "40",
    "end": "5520"
  },
  {
    "text": "fast and fix things here at change log because of rbar check them out at rar.com and we're hosted on Leno Cloud",
    "start": "5520",
    "end": "11840"
  },
  {
    "text": "servers head to lin.com changelog this episode is brought to you",
    "start": "11840",
    "end": "17320"
  },
  {
    "text": "by lenoe our Cloud Server of choice it is so easy to get started with lenoe servers start at just five bucks a month",
    "start": "17320",
    "end": "23599"
  },
  {
    "text": "we host change log on Lino Cloud servers and we love it we get great 24/7 support Zeus like Powers with",
    "start": "23599",
    "end": "30519"
  },
  {
    "text": "ssds a super fast 40 GB per second Network and Incredibly fast CPUs for",
    "start": "30519",
    "end": "36360"
  },
  {
    "text": "processing and we trust L because they keep it fast they keep it simple check them out at lin.com",
    "start": "36360",
    "end": "44160"
  },
  {
    "text": "[Music] changelog greetings Gophers Adam stovak",
    "start": "53000",
    "end": "59399"
  },
  {
    "text": "here editor in Chief of change log we just did our first live show at London Gophers as part of gophercon UK Matt Ry",
    "start": "59399",
    "end": "66600"
  },
  {
    "text": "and Mark Bates were joined on stage by Liz rice Kat xen and gotam reggae to talk about the magic and go standard",
    "start": "66600",
    "end": "73159"
  },
  {
    "text": "Library huge thanks to the organizers of London gophers and gofer con UK for making this possible let's get to",
    "start": "73159",
    "end": "79870"
  },
  {
    "text": "[Music] [Applause]",
    "start": "79870",
    "end": "85730"
  },
  {
    "text": "[Music] it thank you hello that was very generous of of you giving",
    "start": "85730",
    "end": "92680"
  },
  {
    "text": "that to just me I really appreciate that yeah Matt's going to edit that in over all his bad jokes later that's my text",
    "start": "92680",
    "end": "98759"
  },
  {
    "text": "message mess sound now from now on well welcome to a very special episode of go",
    "start": "98759",
    "end": "105119"
  },
  {
    "text": "time and it's not just a podcast this is also real life as well for those of us",
    "start": "105119",
    "end": "110159"
  },
  {
    "text": "in this room and it's a pre pre-conference social for one of the best go conferences in the world go",
    "start": "110159",
    "end": "116560"
  },
  {
    "text": "foran UK so we've got that coming up",
    "start": "116560",
    "end": "121840"
  },
  {
    "text": "this is also a part of the monthly Meetup that is London Gophers which we'll talk about a little bit more later",
    "start": "123079",
    "end": "129520"
  },
  {
    "text": "as well which is one of the best go meetups in the world so let's give it up for them yeah if not the best in London",
    "start": "129520",
    "end": "136920"
  },
  {
    "text": "I think we can agree on that best and also uh the other voice you can hear is one of the best Mark bites in the world",
    "start": "136920",
    "end": "143319"
  },
  {
    "text": "it's Mark baits that's right that's me thank you Matthew Ry i' like to applaud myself cuz most",
    "start": "143319",
    "end": "150080"
  },
  {
    "text": "people don't um so thank you for having me we're very excited uh as you can tell this is a very different go time than we",
    "start": "150080",
    "end": "156319"
  },
  {
    "text": "normally do uh we're in front of an audience like Matt said Matt's wearing trousers um which that's actually what",
    "start": "156319",
    "end": "162200"
  },
  {
    "text": "I'm most nervous about is not having the live audience so we'll see if that you know any way impacts uh Matt's hosting",
    "start": "162200",
    "end": "168560"
  },
  {
    "text": "abilities over the next uh hour they can't get worse no it really can't honestly um we've got such a wonderful",
    "start": "168560",
    "end": "175560"
  },
  {
    "text": "panel um of people that we want to talk to and so we're just going to obviously introduce I'm going to start with Liz uh",
    "start": "175560",
    "end": "181720"
  },
  {
    "text": "Liz rice here and Liz tell us a little bit about yourself hi thank you very much Mark um yes so my name is Liz rice",
    "start": "181720",
    "end": "189080"
  },
  {
    "text": "I run open source engineering at a company called aqua security where we write lots of code in go",
    "start": "189080",
    "end": "195950"
  },
  {
    "text": "[Applause] so oh Round of Applause we can't do a round of applause on the podcast",
    "start": "195950",
    "end": "202000"
  },
  {
    "text": "normally this is brilliant well we can it's just very weak usually just Matt again he tells a joke and",
    "start": "202000",
    "end": "208680"
  },
  {
    "text": "goes to be fair there are people on slack clapping along with you that is true okay then that's true sometimes",
    "start": "208680",
    "end": "214959"
  },
  {
    "text": "they miss all the fingers off on the Emoji when they clap to me though yeah just the one I've seen that too yeah",
    "start": "214959",
    "end": "220360"
  },
  {
    "text": "really strange kind of way I get that emoji a lot it's weird it's one off I think I'm going to introduce another one",
    "start": "220360",
    "end": "225400"
  },
  {
    "text": "of our panelists I haven't made his name up genuinely this is his real name it's",
    "start": "225400",
    "end": "231000"
  },
  {
    "text": "Gotham reggae just imagine go would like to introduce",
    "start": "231000",
    "end": "236280"
  },
  {
    "text": "yourself yeah well if you want to push it to the limits you know I'm on got time my name is goam oh gotam it's",
    "start": "236280",
    "end": "243439"
  },
  {
    "text": "pretty close by very good and that's why they decided to get me on the panel what we really like doing is",
    "start": "243439",
    "end": "249560"
  },
  {
    "text": "giving Matt we tell him one pronunciation of somebody's name Schlesinger",
    "start": "249560",
    "end": "255759"
  },
  {
    "text": "Boro Gotham and we just like to see what he does with it on stage it's quite fun yeah I'm much better in",
    "start": "255759",
    "end": "264040"
  },
  {
    "text": "text now so Gotham tell us about yourself well I have my own uh software company back home in India it's called",
    "start": "265240",
    "end": "272120"
  },
  {
    "text": "Jo software and J in my mother tongue mean means enthusiasm and passion so",
    "start": "272120",
    "end": "278840"
  },
  {
    "text": "that's what we do we do a lot of uh Consulting in go and Ruby and these are the only two languages we've been doing",
    "start": "278840",
    "end": "284759"
  },
  {
    "text": "for the last 12 years you don't happen to also maybe run a go conference in India do you yeah actually I'm the",
    "start": "284759",
    "end": "290919"
  },
  {
    "text": "organizer for go foron India thank oh there you go then so if you want to go to India and uh just to let you all know",
    "start": "290919",
    "end": "296840"
  },
  {
    "text": "the next time it's in it's in Goa which is residential conference that means all",
    "start": "296840",
    "end": "302919"
  },
  {
    "text": "the attendees and speakers all we book the entire Hotel wow and everybody stays together so if anyone's interested in",
    "start": "302919",
    "end": "309280"
  },
  {
    "text": "coming to Goa which is like the you know it's like the Florida of India so it's",
    "start": "309280",
    "end": "315160"
  },
  {
    "text": "it's harder than the rest of India the the problem is a lot of people register for the conference but don't attend the",
    "start": "315160",
    "end": "321360"
  },
  {
    "text": "conference because they're on the beach it's it's like really unbrand place name though Goa absolutely go in Goa yeah",
    "start": "321360",
    "end": "330560"
  },
  {
    "text": "love it couldn't have it in a place called Java you know there's an actual place called Java that you could have just",
    "start": "330560",
    "end": "337199"
  },
  {
    "text": "actually use I'm much better in",
    "start": "337199",
    "end": "342639"
  },
  {
    "text": "text again that's a single finger emoji uh and in the middle here we have cat",
    "start": "342639",
    "end": "347919"
  },
  {
    "text": "cat say hi hello um I'm cat um I work for Monza who's a which is a company",
    "start": "347919",
    "end": "352960"
  },
  {
    "text": "here in London and I also I'm one of the co-organizers of London goers together with dom and Paul and Antonio we're all",
    "start": "352960",
    "end": "359800"
  },
  {
    "text": "wearing yellow t-shirts tonight so if you want to chat To Us by all means Come Along come up to us and and say hello um",
    "start": "359800",
    "end": "366599"
  },
  {
    "text": "so a big thanks to goer kuk and go time for doing this together this is awesome",
    "start": "366599",
    "end": "372400"
  },
  {
    "text": "and as always thanks to our sponsors monzo bud and M Martin from Vistas uh",
    "start": "372400",
    "end": "377720"
  },
  {
    "text": "without whom we wouldn't be able to run our Meetup it's a monthly Meetup here in London so if you're local and you haven't been to one of the meetups yet",
    "start": "377720",
    "end": "384000"
  },
  {
    "text": "or if you're passing by uh by all means sign up on the Meetup page we are organizing meetups every third Wednesday",
    "start": "384000",
    "end": "390120"
  },
  {
    "text": "of the month in central London fantastic do you have a Twitter account that perhaps people can follow surprisingly",
    "start": "390120",
    "end": "395720"
  },
  {
    "text": "London goers wow who would have thought and Cat I noticed you didn't say your last name is that because you don't know",
    "start": "395720",
    "end": "401520"
  },
  {
    "text": "how to read it properly like me yeah it's another one of those names we give",
    "start": "401520",
    "end": "406840"
  },
  {
    "text": "Matt it's cat Jing Jing easy gets better every time there you go yeah uh in",
    "start": "406840",
    "end": "413120"
  },
  {
    "text": "addition to the London Gophers uh and all their great support and the the support we get they get from their",
    "start": "413120",
    "end": "418319"
  },
  {
    "text": "routine uh recur in sponsors we also want to thank jrog um not for the people at home they don't they honestly don't",
    "start": "418319",
    "end": "423840"
  },
  {
    "text": "know what's going on um but for you in the audience those nice tasty beverages you got when you walked in the door that was courtesy of jrog they they sponsored",
    "start": "423840",
    "end": "430800"
  },
  {
    "text": "uh the welcome drinks tonight uh they have a little booth in the back where they're giving away lots of free stuff um so big round for them for fitting the",
    "start": "430800",
    "end": "437919"
  },
  {
    "text": "bill for tonight thank you and now legally speaking that's all",
    "start": "437919",
    "end": "445319"
  },
  {
    "text": "the stuff that we have to say is now said so now we really are on our own and",
    "start": "445319",
    "end": "450840"
  },
  {
    "text": "this is normally that when we do the podcast we uh the idea is we do the live",
    "start": "450840",
    "end": "456160"
  },
  {
    "text": "show and it's kind of relaxed and we're not sort of too serious about it and then hopefully they can find good bits",
    "start": "456160",
    "end": "462319"
  },
  {
    "text": "to make into a podcast at some point uh so that's what we'll do this time so if it seems bad it's it's not that's just",
    "start": "462319",
    "end": "469319"
  },
  {
    "text": "it's an illusion yeah I forgot to mention one thing we have this goer plushy here and this is a prize for the",
    "start": "469319",
    "end": "475400"
  },
  {
    "text": "best question for tonight so we're going to have some audience questions we're going to take some questions from the",
    "start": "475400",
    "end": "480520"
  },
  {
    "text": "audience at the end and the best question is going to win the Gopher plushy and Matt does have a random gift",
    "start": "480520",
    "end": "485879"
  },
  {
    "text": "he's been desperate to give away for some goer con towel from the wrong go",
    "start": "485879",
    "end": "491520"
  },
  {
    "text": "from yeah the wrong gopher con yeah it's from the different it's from the other gophercon but it's still a towel and if",
    "start": "491520",
    "end": "497479"
  },
  {
    "text": "you like being dry is it unused it's unused yeah I hope",
    "start": "497479",
    "end": "504120"
  },
  {
    "text": "dry it is a soiled beach towel um so for all you British Gophers out there you",
    "start": "504120",
    "end": "509400"
  },
  {
    "text": "love going to the beach uh so next time you're sitting on an umbrella in the rain uh eating an ice Lolly and a sweater you'd have a lovely go for towel",
    "start": "509400",
    "end": "516159"
  },
  {
    "text": "underneath you that's why it's soiled because we sit on",
    "start": "516159",
    "end": "521120"
  },
  {
    "text": "soil this is what happens when we go off script oh yeah see look now you're just moaning at us okay that's fine moaning",
    "start": "521399",
    "end": "529600"
  },
  {
    "text": "is acceptable because at least you can hear it on the podcast and it it it backs up that we're here in real life",
    "start": "529600",
    "end": "535399"
  },
  {
    "text": "and otherwise I do think people are going to question that fair enough I think we should start I think we should start too today we decided we're going",
    "start": "535399",
    "end": "542040"
  },
  {
    "text": "to start by talking about the sparkle Emoji in the standard Library uh again I",
    "start": "542040",
    "end": "549040"
  },
  {
    "text": "am better in text but it's the sparkle it's the gold in the standard library or the Magic in the standard Library the I",
    "start": "549040",
    "end": "556000"
  },
  {
    "text": "I actually pinged Gotham and I said we're going to be talking about the gems of the standard library and goes well this the wrong conference we're supposed",
    "start": "556000",
    "end": "561399"
  },
  {
    "text": "to be talking about that's Ruby yeah like yeah so we're we're really really on point with the name of this",
    "start": "561399",
    "end": "568040"
  },
  {
    "text": "absolutely cuz none of us know it is yeah it's it's the the bits of the standard library that each of us have",
    "start": "568040",
    "end": "573839"
  },
  {
    "text": "kind of Fallen somewhat in love with to varying degrees I've fallen in a in with",
    "start": "573839",
    "end": "579519"
  },
  {
    "text": "mine a lot uh in love uh but others maybe not not so much so well exactly",
    "start": "579519",
    "end": "587440"
  },
  {
    "text": "just a quick example of something that would hopefully get cut out of the podcast so no one even knows about it",
    "start": "587440",
    "end": "593640"
  },
  {
    "text": "but the editors are I want say lazy but they they they leave it all in basically",
    "start": "593640",
    "end": "600560"
  },
  {
    "text": "let's let's start I think we should start right here in the Middle with cat cat can you give us a little nugget of",
    "start": "600560",
    "end": "606040"
  },
  {
    "text": "gold a little something that maybe the audience here may or may not know about in the standard library that you just",
    "start": "606040",
    "end": "611160"
  },
  {
    "text": "love and kind of think oh why I wish more people knew about this so I hope everyone knows about it if not they",
    "start": "611160",
    "end": "617120"
  },
  {
    "text": "should definitely look it up and that my favorite one is context I think I I just find this the most surprisingly the most",
    "start": "617120",
    "end": "624160"
  },
  {
    "text": "usable day-to-day U package for me because it just solves the problem that I've always had like my background is in",
    "start": "624160",
    "end": "631079"
  },
  {
    "text": "PHP so that's a lot of web applications a lot of requests and responses and I always struggled with like how much data",
    "start": "631079",
    "end": "637360"
  },
  {
    "text": "do you pass along and where do I pass along this data and I ended up having like meth function names with 14",
    "start": "637360",
    "end": "643360"
  },
  {
    "text": "parameters in because you needed to pass in all the data and then I when I started doing going I discovered context",
    "start": "643360",
    "end": "649360"
  },
  {
    "text": "I'm like this is a solution to that problem and it's very elegant and that's only one side of the package it's a",
    "start": "649360",
    "end": "654959"
  },
  {
    "text": "really like weirdly split brain package because on one side you've got the the params that you can pass in in the",
    "start": "654959",
    "end": "660560"
  },
  {
    "text": "context and then on the other hand you've got the whole uh like go routine management side of thing so if context",
    "start": "660560",
    "end": "667480"
  },
  {
    "text": "the cancellation and and timeouts and deadlines and I think I find that this is just a great tool to manage your",
    "start": "667480",
    "end": "673560"
  },
  {
    "text": "channels your go routines and everything um and it's very elegant it's very simple it's an interface with like three",
    "start": "673560",
    "end": "679399"
  },
  {
    "text": "methods or something so four yeah um because yeah the request paramet is the foref font so yeah I I love it and I use",
    "start": "679399",
    "end": "686120"
  },
  {
    "text": "it pretty much daily could you give us an example where you've abused it you've",
    "start": "686120",
    "end": "691240"
  },
  {
    "text": "done something you probably shouldn't have with context no so I've been very good at like making sure that the I",
    "start": "691240",
    "end": "696519"
  },
  {
    "text": "think the Only Rule with the param side of things is just passing params that don't change throughout the life cycle",
    "start": "696519",
    "end": "701600"
  },
  {
    "text": "of the request so I didn't cheat I didn't put my database Connection in there or something so i' I've always",
    "start": "701600",
    "end": "708120"
  },
  {
    "text": "avoided this I've been a good citizen um and then I remember like reading a bunch of books which all used context for",
    "start": "708120",
    "end": "714000"
  },
  {
    "text": "examples of uh deadlines and cancellations and timeouts in a really clever way um so so I've tried to do",
    "start": "714000",
    "end": "719959"
  },
  {
    "text": "that I can't I can't say I do this a lot dayto day because it's like most of the time when you use libraries it's all taken care of for you but under the hood",
    "start": "719959",
    "end": "726440"
  },
  {
    "text": "it still uses the context and then when my request times out I see in the logs like you know context time out yeah so",
    "start": "726440",
    "end": "733480"
  },
  {
    "text": "I'm like yeah context So for anybody that doesn't know why that got a laugh when you said you don't put the database",
    "start": "733480",
    "end": "738839"
  },
  {
    "text": "Connection in there maybe we should talk a bit about that because when you do use the values inside a context yeah which",
    "start": "738839",
    "end": "745000"
  },
  {
    "text": "is the the context with value right context with value they sort of hidden dependencies they can be can't they so",
    "start": "745000",
    "end": "751440"
  },
  {
    "text": "sideline apis are often referred to as the problem like the main gotcha with this is that at no point in the in the",
    "start": "751440",
    "end": "758440"
  },
  {
    "text": "life cycle of your like thread uh you don't know what's inside the context and you don't have a list of the values that",
    "start": "758440",
    "end": "764760"
  },
  {
    "text": "you can access so you have to know that they are there so the kind of gotcha with this is like only use values that",
    "start": "764760",
    "end": "770519"
  },
  {
    "text": "throughout the whole life cycle you can expect that value to be there and also not Mission critical values so if it's",
    "start": "770519",
    "end": "775639"
  },
  {
    "text": "not there it's not the end of the world so a very com common use case is log uh",
    "start": "775639",
    "end": "780760"
  },
  {
    "text": "log parameters so if you want to log something and you want to add a bunch of metadata to your log lines then you can",
    "start": "780760",
    "end": "786160"
  },
  {
    "text": "store them in the context but if they're not there it's on the end of the world because they just won't get logged like the app still runs it's fine whereas if",
    "start": "786160",
    "end": "792320"
  },
  {
    "text": "you rely on your database connection being there and by the way like context values are not guarded in any way",
    "start": "792320",
    "end": "797399"
  },
  {
    "text": "against being overridden or changed halfway through you basically have no guarantees that what you put in at the beginning is the same at the end so um",
    "start": "797399",
    "end": "804720"
  },
  {
    "text": "yeah I I always say uh they should be like user requests specific yeah like you know things that you would",
    "start": "804720",
    "end": "810600"
  },
  {
    "text": "get necessarily like if someone made an HTP request you so like a session ID or user ID like things that are kind of",
    "start": "810600",
    "end": "816920"
  },
  {
    "text": "very specific to that small specific and constant and not Mission critical so",
    "start": "816920",
    "end": "822920"
  },
  {
    "text": "yeah I think most most microservices are now just uh coming up with a paradigm where you must have the context passed",
    "start": "822920",
    "end": "829199"
  },
  {
    "text": "around everywhere interfaced properly and a context and if that happens you actually have a lot of control over",
    "start": "829199",
    "end": "834560"
  },
  {
    "text": "what's happening so definitely helps yeah I like the fact that the done method returns a channel which gets",
    "start": "834560",
    "end": "841079"
  },
  {
    "text": "closed when the context is cancelled so then if you do have concurrent code and",
    "start": "841079",
    "end": "846480"
  },
  {
    "text": "you use the select block it's very easy for one of the cases to just be the done off the context and you can do other",
    "start": "846480",
    "end": "853240"
  },
  {
    "text": "things and it'll keep doing those other things until that context gets cancelled and then you can gracefully shut down",
    "start": "853240",
    "end": "859639"
  },
  {
    "text": "it's actually a really easy way to do graceful shutdowns yeah one of my favorite Parts is the fact that um so if",
    "start": "859639",
    "end": "864759"
  },
  {
    "text": "you're unfamiliar with it the way you you create contexts you're actually continually wrapping them um so you're always kind of creating this node of",
    "start": "864759",
    "end": "871000"
  },
  {
    "text": "context which means you can start with say the user request so on HTTP request there's a context um so if the user",
    "start": "871000",
    "end": "877399"
  },
  {
    "text": "shuts your browser for example uh that context gets cancelled and you can use that as like your primary context let's",
    "start": "877399",
    "end": "883440"
  },
  {
    "text": "say in a web app and then spawn that off to other things and they can wrap that with their own timeouts their own",
    "start": "883440",
    "end": "889480"
  },
  {
    "text": "cancellations their own values and it all kind of trickles down or just this little bit cancels itself yeah and I",
    "start": "889480",
    "end": "896399"
  },
  {
    "text": "think it's a really clever pattern they used to do that the kind of node yeah I think the cool thing as well is like the",
    "start": "896399",
    "end": "902160"
  },
  {
    "text": "context package itself like I'm a bit hazy on like the implementation details but I know that it can like flatten",
    "start": "902160",
    "end": "907560"
  },
  {
    "text": "itself or like unpack itself so like if you have a bunch of nested context you can you call this like context something",
    "start": "907560",
    "end": "913040"
  },
  {
    "text": "something that you can just like unpack like flatten the contest to context the most recent values okay that's new what",
    "start": "913040",
    "end": "919240"
  },
  {
    "text": "what that I've seen that and that's why I said I'm a bit hazy on details but there is a way to like if you have a bunch of nested context and like if you",
    "start": "919240",
    "end": "925519"
  },
  {
    "text": "call that meth that that uh function it will like bring up the sort of the compound context with all the ones like",
    "start": "925519",
    "end": "932319"
  },
  {
    "text": "the ones that were nested just flattened to inter I need to dig up the name yeah I'm curious send it to me um or post it",
    "start": "932319",
    "end": "938000"
  },
  {
    "text": "on Twitter so everybody else sees it don't just send it to me privately uh I want to get smarter than you so don't don't send it to them um so",
    "start": "938000",
    "end": "945839"
  },
  {
    "text": "you don't know the con you say you don't know the internals um if you've never seen it Frances campoy uh actually did",
    "start": "945839",
    "end": "951440"
  },
  {
    "text": "two videos for um J for Funk about context when it first came out and one",
    "start": "951440",
    "end": "956839"
  },
  {
    "text": "of them I think is just truly wonderful where where he basically rebuilds almost the entire package from scratch uh and",
    "start": "956839",
    "end": "964440"
  },
  {
    "text": "it it's really clever and I highly recommend you watch it because it shows great use of go routines and channels and and kind of keeping all this stuff",
    "start": "964440",
    "end": "971079"
  },
  {
    "text": "in play and how these contexts cancellations and stuff work uh it's an excellent excellent",
    "start": "971079",
    "end": "976560"
  },
  {
    "text": "video brilliant Choice cat yeah and would you say you just like the context package you love it or you're in love",
    "start": "976560",
    "end": "983880"
  },
  {
    "text": "with it I love it because it makes my life so much easier like I I I find it is the the most useful day today because",
    "start": "983880",
    "end": "990160"
  },
  {
    "text": "like so at work we actually have a thing where like our request struct like an internal request thing it implements it",
    "start": "990160",
    "end": "996399"
  },
  {
    "text": "sort of inherits the context interface so you can pass interchangeably the context context or the request and that",
    "start": "996399",
    "end": "1002600"
  },
  {
    "text": "just makes like makes life so much easier uh that I just love it because if I like our logging Library requires the",
    "start": "1002600",
    "end": "1008040"
  },
  {
    "text": "context for all the extra prams but I can just pass in the request and like I don't need to do any marshalling in between or anything oh so they've",
    "start": "1008040",
    "end": "1014160"
  },
  {
    "text": "implemented the context interface itself yeah yeah so then you can provide your your own context objects like that can't",
    "start": "1014160",
    "end": "1021720"
  },
  {
    "text": "you and buffalo does this too yeah Buffalo does that we do in a lot of projects as well yeah and it's it's a pattern I recommend people actually use",
    "start": "1021720",
    "end": "1028120"
  },
  {
    "text": "and a lot of times you just kind of embed a context. context um which is obviously not very good for the whole",
    "start": "1028120",
    "end": "1033558"
  },
  {
    "text": "don't stutter and go thing everything is just context. context everywhere but you",
    "start": "1033559",
    "end": "1039120"
  },
  {
    "text": "can kind of take in a context that someone gives you and then build your own and do different things with it maybe provide your own value",
    "start": "1039120",
    "end": "1044319"
  },
  {
    "text": "implementation which is what Buffalo does it kind of has a map of your request parameters and stuff like that",
    "start": "1044319",
    "end": "1049480"
  },
  {
    "text": "you can also do it the other way around so like if you if your Str implements the context interface like your code",
    "start": "1049480",
    "end": "1054720"
  },
  {
    "text": "that then deal can deal with either the native context or the or distruct and then check like oh if it's the struct so",
    "start": "1054720",
    "end": "1060480"
  },
  {
    "text": "for us for example it's it's a case of um like our requests have a context but then our um logging Library checks that",
    "start": "1060480",
    "end": "1067240"
  },
  {
    "text": "if the the the thing passed in is actually an instance of that request not just a pure context then you know that",
    "start": "1067240",
    "end": "1072919"
  },
  {
    "text": "the request struct also has a bunch of more details that you can fish in and put in the logging Library so you can kind of do a the other way around as",
    "start": "1072919",
    "end": "1079080"
  },
  {
    "text": "well um but yeah it's like it's seamless and it's so great and I do it like I use it every day every time you implement a",
    "start": "1079080",
    "end": "1084679"
  },
  {
    "text": "Handler you encounter the context so so so interestingly also we always talking",
    "start": "1084679",
    "end": "1090240"
  },
  {
    "text": "in the context of a web request but uh I mean I have seen a couple of cases where people have misused or wrongly used the",
    "start": "1090240",
    "end": "1097880"
  },
  {
    "text": "context just because just because it's cool in a command or something you mean yeah I mean and then you end up doing",
    "start": "1097880",
    "end": "1104919"
  },
  {
    "text": "context too like yeah well so in word I use it in a command so I'll have the",
    "start": "1104919",
    "end": "1111440"
  },
  {
    "text": "main function will trap the signal and I'll cancel a context which I then pass into just some other run function and uh",
    "start": "1111440",
    "end": "1119720"
  },
  {
    "text": "Dave Cheney told me off on Twitter for doing this right that's dve but that's",
    "start": "1119720",
    "end": "1125159"
  },
  {
    "text": "Dave yeah yeah but uh because he said it's for it's for requests only but in a",
    "start": "1125159",
    "end": "1130520"
  },
  {
    "text": "command in a way I think that request yeah it's a user running the C you mean somebody at a CLI typing in a command",
    "start": "1130520",
    "end": "1137760"
  },
  {
    "text": "yeah so that could that's a request that's a request I'm asking you I would do that I often pass contacts in as the",
    "start": "1137760",
    "end": "1145039"
  },
  {
    "text": "first value to a new for example were you when Da was having to go with me on Twitter to too little too late yeah no",
    "start": "1145039",
    "end": "1152880"
  },
  {
    "text": "but here's the thing who trusts what Dave Cheney says really so that's an example of something that",
    "start": "1152880",
    "end": "1158640"
  },
  {
    "text": "might actually get cut out it's quite exciting when you when you hear them everybody right now is tweeting at Dave",
    "start": "1158640",
    "end": "1165080"
  },
  {
    "text": "just said what is more yeah who's Dave really but the thing about the uh",
    "start": "1165080",
    "end": "1170200"
  },
  {
    "text": "command and using requests and contexts in that sense is if you're doing some long process if you trap the signal then",
    "start": "1170200",
    "end": "1178039"
  },
  {
    "text": "that's command c will cancel that context and you can just unwind everything it's a properly nice way to",
    "start": "1178039",
    "end": "1184159"
  },
  {
    "text": "do that graceful shutdown so it fits perfectly I agree I think that's nice so you need you need to be able to use it",
    "start": "1184159",
    "end": "1190679"
  },
  {
    "text": "I've seen cases where uh we using mongodb and there's a lot of context being used and I've seen cord where",
    "start": "1190679",
    "end": "1196480"
  },
  {
    "text": "people have like dude I don't know know why it's there so I just put a dummy context and make it happen and that",
    "start": "1196480",
    "end": "1202679"
  },
  {
    "text": "comes and bites you later on yeah because suddenly your context is changed from a request so when people are",
    "start": "1202679",
    "end": "1207880"
  },
  {
    "text": "building bottom up so you build your code first and then you have an API added to it and that context is misused",
    "start": "1207880",
    "end": "1213640"
  },
  {
    "text": "you have context or true there yeah and the HTTP request which finally comes through is not using the context there",
    "start": "1213640",
    "end": "1219280"
  },
  {
    "text": "and it's failing and uh you do not realize it until all your test your test",
    "start": "1219280",
    "end": "1224520"
  },
  {
    "text": "cases bypass it and you you realize it in production that so you have to be a little careful I",
    "start": "1224520",
    "end": "1231200"
  },
  {
    "text": "never got that to do I I actually get what's well the difference so context.",
    "start": "1231200",
    "end": "1236600"
  },
  {
    "text": "Todo it differs from context. background and that they're the exact same thing but the idea is you can grab for Todo in",
    "start": "1236600",
    "end": "1242559"
  },
  {
    "text": "your code yeah you don't if you don't know what to do you can't well let's just always do that let's let's just",
    "start": "1242559",
    "end": "1249039"
  },
  {
    "text": "write what to do if you don't know what to do just to do if you just can take anything to do anyway cancel so I have a",
    "start": "1249039",
    "end": "1255799"
  },
  {
    "text": "I have actually a question for the pan canceled the Contex you did uh good job um we're almost at our timeline by the",
    "start": "1255799",
    "end": "1261840"
  },
  {
    "text": "way we're almost exceeding that uh so I actually have a question for the panel so when they introduced contexts into",
    "start": "1261840",
    "end": "1267440"
  },
  {
    "text": "the standard library in 17 right um obviously they tried to retrofit it wherever they could um and because of",
    "start": "1267440",
    "end": "1274880"
  },
  {
    "text": "that we now have like this exec exec with context or like you know command",
    "start": "1274880",
    "end": "1280400"
  },
  {
    "text": "you know exec. command exec. command context right where we now have two versions of every API or a lot apis a",
    "start": "1280400",
    "end": "1288640"
  },
  {
    "text": "SQL package has a very similar thing right um what do people feel like I mean",
    "start": "1288640",
    "end": "1294440"
  },
  {
    "text": "do you feel like you should also offer two implementations one that has a context one that doesn't do you think we",
    "start": "1294440",
    "end": "1301120"
  },
  {
    "text": "should only just take the context and the only reason there's two is because context came after and and they have the",
    "start": "1301120",
    "end": "1308039"
  },
  {
    "text": "version that's almost what I just said when I said they retrofitted in 1.7 and they have the backwards almost the same",
    "start": "1308039",
    "end": "1314600"
  },
  {
    "text": "thing I mean not quite you say it a lot nicer with the accent exactly I'm giving I'm giving people a treat you really are",
    "start": "1314600",
    "end": "1321200"
  },
  {
    "text": "it's not a treat here we're in London everyone talks like me they they know I'm  that's going to get cut out I",
    "start": "1321200",
    "end": "1328919"
  },
  {
    "text": "think but let me ask the question the pen I mean it's a it's the compatibility promise isn't it you can't introduce",
    "start": "1328919",
    "end": "1336039"
  },
  {
    "text": "something like that and just you know context is useful I think we just established that so what other so okay",
    "start": "1336039",
    "end": "1343760"
  },
  {
    "text": "so let me rephrase a question in go to the infamous Goto comes out alongside",
    "start": "1343760",
    "end": "1348840"
  },
  {
    "text": "text May 2 Pearl 6 uh and all the other ones um so when go to finally comes out",
    "start": "1348840",
    "end": "1355120"
  },
  {
    "text": "and we're all out of the game because we've retired for 20 years um should they remove the non-c context",
    "start": "1355120",
    "end": "1361480"
  },
  {
    "text": "versions I think I wouldn't necessarily say like remove I mean in two yes because you you're not bound to with the",
    "start": "1361480",
    "end": "1367919"
  },
  {
    "text": "backwards compatibility promise and I feel like because contact context provides an easy way to just put in a",
    "start": "1367919",
    "end": "1373919"
  },
  {
    "text": "dummy context if you don't need it even if every function requires it there's just an easy way for you to not use it",
    "start": "1373919",
    "end": "1379120"
  },
  {
    "text": "if you don't want to I feel like if there was no context background or context to do it would be kind of unfair to always force people to have the",
    "start": "1379120",
    "end": "1385200"
  },
  {
    "text": "context but because you have an easy way out I don't see a problem with just forcing it for every function like it's",
    "start": "1385200",
    "end": "1390840"
  },
  {
    "text": "kind of become a standard anyway where the first pram is always context anyway so which has led to so many fun",
    "start": "1390840",
    "end": "1395919"
  },
  {
    "text": "proposals on goang issues right should we do we have some sort of current context that we can just grab we don't",
    "start": "1395919",
    "end": "1401960"
  },
  {
    "text": "to keep passing it around yeah um I don't think we have time for that discussion I I wouldn't mind a copy",
    "start": "1401960",
    "end": "1408400"
  },
  {
    "text": "context IO copy with a context nice like just yeah someone did write one there is one that you can use",
    "start": "1408400",
    "end": "1415279"
  },
  {
    "text": "oh interesting yeah okay I think uh we should move on I'd love to hear obviously some other ones Gotham tell us",
    "start": "1415279",
    "end": "1420799"
  },
  {
    "text": "a little bit about your favorite parts of the standard Library so when I started writing you know what is the interesting part I realized that U you",
    "start": "1420799",
    "end": "1427760"
  },
  {
    "text": "know this it's everything's about the name so my favorite package uh luckily",
    "start": "1427760",
    "end": "1433320"
  },
  {
    "text": "or unluckily is the the reg XP not because it's my surname my surname is r e g e and it's there in the package name",
    "start": "1433320",
    "end": "1440600"
  },
  {
    "text": "but I actually genuinely like regular expressions and I think it is one of the most important things to learn not in",
    "start": "1440600",
    "end": "1446840"
  },
  {
    "text": "particularly in go but in general so I always say that if you know regular Expressions your Linux command and",
    "start": "1446840",
    "end": "1453880"
  },
  {
    "text": "whim you're a programmer all right so all the emac",
    "start": "1453880",
    "end": "1459000"
  },
  {
    "text": "haters out there too bad are Ides are available I should just say that yeah we don't discriminate",
    "start": "1459000",
    "end": "1465520"
  },
  {
    "text": "against IDE except for ta made yeah so so which hasn't come out yet so you're",
    "start": "1465520",
    "end": "1471080"
  },
  {
    "text": "good recently recently I looked at the reg xp/ syntax package and that's pretty",
    "start": "1471080",
    "end": "1477360"
  },
  {
    "text": "neat because it's it's got a lot of information about the various nuances of using regular Expressions including your",
    "start": "1477360",
    "end": "1484480"
  },
  {
    "text": "named captures and your gritty searches in the right context with the PE based",
    "start": "1484480",
    "end": "1489559"
  },
  {
    "text": "as well as the asy based uh syntaxes and I think it's a must read for everyone if",
    "start": "1489559",
    "end": "1494840"
  },
  {
    "text": "not to use it and stop using stack over flow or Google to find out what is the fastest way to find a regular expression",
    "start": "1494840",
    "end": "1500960"
  },
  {
    "text": "copy paste and put it in because it causes problems later on especially if you copy and paste from the top cuz",
    "start": "1500960",
    "end": "1507679"
  },
  {
    "text": "that's the question I make that mistake all the time oh man I just got this",
    "start": "1507679",
    "end": "1513080"
  },
  {
    "text": "stuck overflow yeah from the questions it works that's taking laziness to the next level thank you thank you yeah the",
    "start": "1513080",
    "end": "1520440"
  },
  {
    "text": "syntax package is amazing cuz it really does show everything um you know there's more to it obviously um and there's a",
    "start": "1520440",
    "end": "1526840"
  },
  {
    "text": "lot of stuff there's actually code that happens in the syntax package too but the documentation at the top is fantastic",
    "start": "1526840",
    "end": "1534080"
  },
  {
    "text": "and worth it alone and I often refer to it like daily a lot of times we don't end up using the captures which is it's",
    "start": "1534080",
    "end": "1542120"
  },
  {
    "text": "been there since regular Expressions ever evolved but uh we tend to miss out and write a lot of more code trying to",
    "start": "1542120",
    "end": "1548559"
  },
  {
    "text": "just use substring and parts and figure it out where captures would actually just give you the you know the array",
    "start": "1548559",
    "end": "1554080"
  },
  {
    "text": "back so can you give us an example where that's really helped you in your code like apart from just simple regular",
    "start": "1554080",
    "end": "1560080"
  },
  {
    "text": "expressions like you know I don't know uh let me think about it but uh they think about it yeah we got time well",
    "start": "1560080",
    "end": "1566760"
  },
  {
    "text": "wait anything this later take your time yeah so there there was a case where we were trying to uh map out the entire URI",
    "start": "1566760",
    "end": "1574760"
  },
  {
    "text": "you know like with the username at theate password colon host Port everything together so you wanted to",
    "start": "1574760",
    "end": "1580360"
  },
  {
    "text": "write your own urip pars it turned out to be a nightmare because because somebody just tried to go the distance",
    "start": "1580360",
    "end": "1586840"
  },
  {
    "text": "saying oh the post could actually have a a b do c. D and they started doing using",
    "start": "1586840",
    "end": "1592960"
  },
  {
    "text": "a substring right and iterating over that and then I saw the code the code had already become like 100 lines of",
    "start": "1592960",
    "end": "1599080"
  },
  {
    "text": "code and I like dude you've not heard of captures just captur it and just match it and it just it's just easy sometimes",
    "start": "1599080",
    "end": "1605480"
  },
  {
    "text": "to look at the documentation first and implement it but it's common mistake so so when you say captures for those who",
    "start": "1605480",
    "end": "1612039"
  },
  {
    "text": "maybe not know the Rex package because that's kind of what we're here for what do you mean by capture just the parenthesis yeah you were trying to",
    "start": "1612039",
    "end": "1618320"
  },
  {
    "text": "match a group of parenthesis with or without greedy searches so you want to actually find out if say for example if",
    "start": "1618320",
    "end": "1624480"
  },
  {
    "text": "you want to match just a subdomain but a subdomain could actually go really like if you look at your the canonical name",
    "start": "1624480",
    "end": "1630640"
  },
  {
    "text": "for an AWS host it's huge but it has everything in it and you want to find",
    "start": "1630640",
    "end": "1635799"
  },
  {
    "text": "out the just the host name not the rest of it you can always capture it without greedy searches or you can find out if",
    "start": "1635799",
    "end": "1642360"
  },
  {
    "text": "it is the matching the right pattern using captures the parenthesis in your regular expression just to check well",
    "start": "1642360",
    "end": "1649600"
  },
  {
    "text": "there are ways that you can even replay stuff in it but not recommended for readability purposes but if you're just",
    "start": "1649600",
    "end": "1656080"
  },
  {
    "text": "getting through the the reg XP syntax package there's a lot of clarity which comes out you can even name a captured",
    "start": "1656080",
    "end": "1663399"
  },
  {
    "text": "field it'll get you back in a in a hash with the named hash so you can actually process it better that's Prett cool that is cool my",
    "start": "1663399",
    "end": "1671080"
  },
  {
    "text": "problem with Rex is it's too easy yeah that's everybody's problem I like a challenge it's like what",
    "start": "1671080",
    "end": "1678320"
  },
  {
    "text": "okay that's clearly human readable uh yeah like let's make it a bit more",
    "start": "1678320",
    "end": "1683360"
  },
  {
    "text": "difficult yeah but yeah once you learn it though of course y yeah it's it's fun",
    "start": "1683360",
    "end": "1689720"
  },
  {
    "text": "because then then you're not just coding to finish a job but you're actually doing it well yeah casting spells as",
    "start": "1689720",
    "end": "1697120"
  },
  {
    "text": "well at the same time and I'm not going to lie to you it feels amazing when you get a red Jack that works like truly",
    "start": "1697120",
    "end": "1702440"
  },
  {
    "text": "amazing doesn't it like I won the internet today I got the red jaxs to compile and do what I wanted it to do I",
    "start": "1702440",
    "end": "1709039"
  },
  {
    "text": "love those um like regx 101 where you can go and like live test your regex and",
    "start": "1709039",
    "end": "1715880"
  },
  {
    "text": "it's has hours of fun fig how to break some elator or rub.com which is so",
    "start": "1715880",
    "end": "1722880"
  },
  {
    "text": "there's actually go.com uh which does go reg regular",
    "start": "1722880",
    "end": "1728000"
  },
  {
    "text": "Expressions uh whoever wrote it though was amazing developer and they wrote it in Buffalo uh and they're just they're",
    "start": "1728000",
    "end": "1734799"
  },
  {
    "text": "really handsome yeah but the interesting part about rubular and go that would be me",
    "start": "1734799",
    "end": "1741519"
  },
  {
    "text": "just just to clarify not Matt because that's who Matt's like I don't remember writing Matt um I do but yeah it's",
    "start": "1741519",
    "end": "1747720"
  },
  {
    "text": "rubular for go so how did you check your side CU I always wonder it's like a chicken and egg with those like online",
    "start": "1747720",
    "end": "1753399"
  },
  {
    "text": "online Rex Checkers for like well if we check our Rex with them what who do they check with kind of thing they used we we",
    "start": "1753399",
    "end": "1760519"
  },
  {
    "text": "compile it and we use a reed I use a reed package and give you the result but if you think about it like if there's a",
    "start": "1760519",
    "end": "1766039"
  },
  {
    "text": "bug on that website then like everybody else's Rex is wrong and like they obviously can't find their own bugs no",
    "start": "1766039",
    "end": "1771919"
  },
  {
    "text": "cuz you just give me a string of Rex I run it through compile and it either compiles or not it's not like I'm",
    "start": "1771919",
    "end": "1777320"
  },
  {
    "text": "sitting there parsing like I don't have a big red Jacks that parses red Jacks like you think that's what I'm doing",
    "start": "1777320",
    "end": "1783159"
  },
  {
    "text": "like on my weekends we come back to the Vex package right yeah exactly there was still like",
    "start": "1783159",
    "end": "1789240"
  },
  {
    "text": "a chicken and egg cuz then like if you just run it through compiled and what checks compile well the go",
    "start": "1789240",
    "end": "1794360"
  },
  {
    "text": "team who checks the go who checks the go team dead end didn't need this no but it's a",
    "start": "1794360",
    "end": "1801279"
  },
  {
    "text": "good point that cat brings up who watches the Rex watch people um we we we",
    "start": "1801279",
    "end": "1806480"
  },
  {
    "text": "may never know funny like there there I've run into a few cases with Rex where like something works in one language and",
    "start": "1806480",
    "end": "1812600"
  },
  {
    "text": "doesn't work in the other language and that always puzzles me yeah it's like your last",
    "start": "1812600",
    "end": "1817799"
  },
  {
    "text": "name that just doesn't compile anymore it just doesn't compile to in my brain not when when I see it written down I",
    "start": "1817799",
    "end": "1823919"
  },
  {
    "text": "believe does the go does implement Pearl style Rex yeah I think so yeah yeah not",
    "start": "1823919",
    "end": "1829600"
  },
  {
    "text": "the PHP one because that never worked yeah it definitely doesn't match rubies either there are a few places where Ruby",
    "start": "1829600",
    "end": "1835679"
  },
  {
    "text": "doesn't matter interesting which is why I think everyone should actually look at that package documentation because you know there is one way to do it that's",
    "start": "1835679",
    "end": "1842720"
  },
  {
    "text": "the only way you want look at can't argue with that yeah it'll and often if you read the documentation you'll see cool things like at the top like you can",
    "start": "1842720",
    "end": "1848760"
  },
  {
    "text": "do col and Alpha col right and that's like that's all of the Alpha Characters",
    "start": "1848760",
    "end": "1854279"
  },
  {
    "text": "like you don't have to specify them you can do col them digits and like all the kind of nice combinations of that very",
    "start": "1854279",
    "end": "1859600"
  },
  {
    "text": "readable words as opposed to D or capital D or for Doon Alpha cover all",
    "start": "1859600",
    "end": "1867279"
  },
  {
    "text": "the kind of accented characters and like non Alpha is only for aski just aski just aski so that's the only asky so",
    "start": "1867279",
    "end": "1873880"
  },
  {
    "text": "there's the problem with wide cars so if you're doing wide characters regular Expressions is not Beast so so what",
    "start": "1873880",
    "end": "1880159"
  },
  {
    "text": "about uh utfa right I mean go is you know go has utf8 support built in if you range over",
    "start": "1880159",
    "end": "1886080"
  },
  {
    "text": "hello world Chinese characters you're going to get you know the nice spaces and the indexes are going to jump appropriately and you get a full",
    "start": "1886080",
    "end": "1892159"
  },
  {
    "text": "character unlike other languages you get a third of a character right how does that actually work with reedax I mean",
    "start": "1892159",
    "end": "1898559"
  },
  {
    "text": "are you able to redx over I think support is there for uh regular exer",
    "start": "1898559",
    "end": "1904440"
  },
  {
    "text": "support already okay and I don't think it gets to utfa because then you need to actually suppose you're looking at uh",
    "start": "1904440",
    "end": "1911240"
  },
  {
    "text": "maybe some Japanese or Chinese character one kanji you cannot you have you cannot compare to the UTF so you'll actually",
    "start": "1911240",
    "end": "1918279"
  },
  {
    "text": "have to have the regular expression support wide characters for for it I haven't tried it because I have not got",
    "start": "1918279",
    "end": "1924720"
  },
  {
    "text": "down to typing out one of the Ki stuff in a regular expression fun but but it",
    "start": "1924720",
    "end": "1931240"
  },
  {
    "text": "it should work it should support it there you go fantastic great love it yeah one my",
    "start": "1931240",
    "end": "1937880"
  },
  {
    "text": "very first professional jobs was doing double bite character support in a 3270 emulator if I remember rightly it",
    "start": "1937880",
    "end": "1946240"
  },
  {
    "text": "was horrible now she can write the 3270 emulator in 20 minutes on stage for fun",
    "start": "1946240",
    "end": "1951760"
  },
  {
    "text": "she cracks her Knuckles goes hang on just get my computer out yeah exactly she'll do it for us by the end of the",
    "start": "1951760",
    "end": "1959440"
  },
  {
    "text": "podcast but Liz you were mentioning earlier about I reader an i writer yeah",
    "start": "1959440",
    "end": "1965159"
  },
  {
    "text": "yeah so when we were first discussing doing this uh this podcast on this topic of you know the golden the standard",
    "start": "1965159",
    "end": "1970960"
  },
  {
    "text": "Library one of the things that strikes me if you think about the whole of it is how prevalent really nice interfaces",
    "start": "1970960",
    "end": "1978080"
  },
  {
    "text": "like I a reader and I writer are which mean you can easily kind of plug and play with",
    "start": "1978080",
    "end": "1984360"
  },
  {
    "text": "different you know things that you want to input or output and and and also the",
    "start": "1984360",
    "end": "1989600"
  },
  {
    "text": "richness of the things that you can plug into that interface so you know you want to write out some Json that's that's",
    "start": "1989600",
    "end": "1996519"
  },
  {
    "text": "there for you you want to write out to a file that's there for you you want to write out",
    "start": "1996519",
    "end": "2001679"
  },
  {
    "text": "to you know they brilliant simple interfaces aren't they just",
    "start": "2001679",
    "end": "2007880"
  },
  {
    "text": "simple and they're so pluggable and so testable which is great my favorite part",
    "start": "2007880",
    "end": "2014000"
  },
  {
    "text": "of the iio readen writer is the design they've used for the interfacing it's beautiful yeah it's it's just something",
    "start": "2014000",
    "end": "2020000"
  },
  {
    "text": "that you should actually look at get into the details of how it's designed and try to implement something like that",
    "start": "2020000",
    "end": "2025039"
  },
  {
    "text": "in your work it really helps and the number of times that we have you know somebody says oh it would be really nice",
    "start": "2025039",
    "end": "2030639"
  },
  {
    "text": "if you could output this report in a different format and go well okay fine yeah that give me a different writer",
    "start": "2030639",
    "end": "2036120"
  },
  {
    "text": "right I'm going to G it boom still just a writer the bites buffer just a writer file just a WR what I love about them is",
    "start": "2036120",
    "end": "2041559"
  },
  {
    "text": "the symmetry of the inter the read write interface they're identical true it's",
    "start": "2041559",
    "end": "2047639"
  },
  {
    "text": "just read and write like and it's just beautiful symmetry between the two right they're identical looking interfaces and",
    "start": "2047639",
    "end": "2054638"
  },
  {
    "text": "just so it's very beautiful it's just very clean isn't it and I think it'd be hard push to find another language that",
    "start": "2054639",
    "end": "2060240"
  },
  {
    "text": "has that kind of breadth of similarity between what the interfaces that you get",
    "start": "2060240",
    "end": "2067118"
  },
  {
    "text": "from different packages I think it's beautiful thing the real magic as well I think is the the fact that there are",
    "start": "2067119",
    "end": "2072358"
  },
  {
    "text": "single method interfaces yeah so an interface with one method is so easy to",
    "start": "2072359",
    "end": "2078358"
  },
  {
    "text": "implement right it gets implemented a lot and this one that's a good example of it um it's very exciting when you're",
    "start": "2078359",
    "end": "2084760"
  },
  {
    "text": "doing your own projects when you I feel like it's a discovery like you discover a single method interface and then you",
    "start": "2084760",
    "end": "2091679"
  },
  {
    "text": "can do things like the trick of using other types as the base and then implementing that interface like like",
    "start": "2091679",
    "end": "2097920"
  },
  {
    "text": "handle Funk does it for handle yeah that's that's I actually showed that in my workshop today that's one of my favorites um just the way you know go",
    "start": "2097920",
    "end": "2104599"
  },
  {
    "text": "type systems work where you can say type Handler Funk is a funk that takes a response writer and app pointer to",
    "start": "2104599",
    "end": "2110359"
  },
  {
    "text": "request and then on that you can Implement another method that calls itself and implements the HP Handler",
    "start": "2110359",
    "end": "2116359"
  },
  {
    "text": "interface yes so then when you need to use that type you don't need to implement that you don't need to build a",
    "start": "2116359",
    "end": "2121920"
  },
  {
    "text": "struct and Implement that type you can just use a function yeah so that it gets used even more but I agree reader and",
    "start": "2121920",
    "end": "2128680"
  },
  {
    "text": "writer and there are they are quite strange I think when you first come to go seeing a read method that takes in a",
    "start": "2128680",
    "end": "2135240"
  },
  {
    "text": "slice of bites and just returns an INT or an error right is a strange thing but",
    "start": "2135240",
    "end": "2140720"
  },
  {
    "text": "it it kind of really reflects what's really happening under the hood absolutely so it has that mechanical SYM",
    "start": "2140720",
    "end": "2146280"
  },
  {
    "text": "I think it's for me it was more just like this can't possibly be it like that was my take like when I first came to it",
    "start": "2146280",
    "end": "2152800"
  },
  {
    "text": "I'm like it's just one method how is that writing like isn't there other stuff I need to do when I'm writing",
    "start": "2152800",
    "end": "2158880"
  },
  {
    "text": "stuff or reading stuff uh and yeah there is and there are other interfaces right maybe you want to close",
    "start": "2158880",
    "end": "2164359"
  },
  {
    "text": "it and that's there's a closer interface like those are just amazing interfaces yeah I can see why you like them I do",
    "start": "2164359",
    "end": "2171079"
  },
  {
    "text": "yeah we should all yeah I and there's so much about the standard library that gives you just so much power out of the",
    "start": "2171079",
    "end": "2178119"
  },
  {
    "text": "box so the other thing that kind of struck me when we first talked about doing these podcasts was well HTTP net",
    "start": "2178119",
    "end": "2185720"
  },
  {
    "text": "http you need to write a website right there in you know Buffalo users don't",
    "start": "2185720",
    "end": "2191720"
  },
  {
    "text": "listen to her she doesn't know what she's talking about you need Buffalo but the fact that you can get a web server",
    "start": "2191720",
    "end": "2198760"
  },
  {
    "text": "running in and I think you made the point cat about you know one line of code it's amazing and again point to",
    "start": "2198760",
    "end": "2204200"
  },
  {
    "text": "another language where that's possible it's out of the standard Library it's really nice well I think what what I",
    "start": "2204200",
    "end": "2210440"
  },
  {
    "text": "love about that is um you know most Diner libraries have web Right Packages",
    "start": "2210440",
    "end": "2215920"
  },
  {
    "text": "and they have like Ruby for example um you know has the ability to web built- in web server called Web brick which",
    "start": "2215920",
    "end": "2222040"
  },
  {
    "text": "kind of gives you an idea of how good a server it is it's called Web",
    "start": "2222040",
    "end": "2227760"
  },
  {
    "text": "brick right yeah it's beautiful um but you know you wouldn't use it out of the standard Library you use rails because",
    "start": "2228040",
    "end": "2233920"
  },
  {
    "text": "it's not useful it's not designed well and those packages in the Ruby standard Library just aren't able to do what",
    "start": "2233920",
    "end": "2240480"
  },
  {
    "text": "people needed to do and that's how things like rails came up with with go I mean admittedly obviously as a you know maintainer Buffalo I've got different",
    "start": "2240480",
    "end": "2247000"
  },
  {
    "text": "end goals which are more development you user development and stuff like that but to just to sit there and say listen.",
    "start": "2247000",
    "end": "2252920"
  },
  {
    "text": "serve here's a function and serve this function I think the first time I saw it however many years ago when I first saw",
    "start": "2252920",
    "end": "2259800"
  },
  {
    "text": "that and I was looking at it thinking how can that possibly be it a bit like what you're saying about iita you know",
    "start": "2259800",
    "end": "2265160"
  },
  {
    "text": "how surely surely there must be more to it and then you realize well actually no there's a ton of defaults that it can",
    "start": "2265160",
    "end": "2272280"
  },
  {
    "text": "take care of and if and if you want to mess with those defaults you can but you don't have to and T our website in one",
    "start": "2272280",
    "end": "2279599"
  },
  {
    "text": "line of code is nice what I love too is you can actually turn that then into an SSL site with two lines of code right",
    "start": "2279599",
    "end": "2285200"
  },
  {
    "text": "you can take the same mxer that you just Ed the same Handler and just do go listen and serve on another",
    "start": "2285200",
    "end": "2291200"
  },
  {
    "text": "port and now you've got Port 80 and you got Port 443 running simultaneously because you just launch the same mxer in",
    "start": "2291200",
    "end": "2297839"
  },
  {
    "text": "a different go routine on a different port it's two lines of code which is really really cool right you don't have",
    "start": "2297839",
    "end": "2304680"
  },
  {
    "text": "to really stretch to get there do you yeah and I like that it's it's pretty safe to use for beginners as well because things like like request",
    "start": "2304680",
    "end": "2311160"
  },
  {
    "text": "timeouts or connection timeouts it's not something that you care about when you first start programming whereas this one",
    "start": "2311160",
    "end": "2316760"
  },
  {
    "text": "you just do one line of code and you're excited because you've got a web server running and then if you want to dig in you kind of have I really liked the nice",
    "start": "2316760",
    "end": "2323240"
  },
  {
    "text": "one of the my favorite things about go is like if you go into the the source code they have really nice com comments",
    "start": "2323240",
    "end": "2328560"
  },
  {
    "text": "that then become the dot the um go do uh source and it just really explains what everything is like the connection",
    "start": "2328560",
    "end": "2334760"
  },
  {
    "text": "timeouts and request timeouts and you can kind of dig a bit more and learn a bit more about how HTTP Works under the hood but you don't have to care what if",
    "start": "2334760",
    "end": "2341319"
  },
  {
    "text": "you're a beginner so it's like a very low barrier to entry and I remember this struck me a lot when um so there is a",
    "start": "2341319",
    "end": "2347720"
  },
  {
    "text": "book called uh the philosophy of software design by I think it's John ster hot and I've probably butchered the",
    "start": "2347720",
    "end": "2352839"
  },
  {
    "text": "name but he talks about deep modules and shallow mod modules and he gives that exact example so in go you've got like",
    "start": "2352839",
    "end": "2358720"
  },
  {
    "text": "um say with the iio with the reader and writer you've got an inter interface with one method and it's kind of a deep",
    "start": "2358720",
    "end": "2364319"
  },
  {
    "text": "module because as a user you it's just a box that you call you don't care what it does under the hood you don't need to know in order to use it and if you want",
    "start": "2364319",
    "end": "2371240"
  },
  {
    "text": "to you can dig in a bit more uh and he he Compares it to Java where in order to do a in order to read a file you need a",
    "start": "2371240",
    "end": "2379680"
  },
  {
    "text": "reader and then you need a buffered reader and you need a string buffered reader and you have to know how this works in order to use it and that's the",
    "start": "2379680",
    "end": "2386400"
  },
  {
    "text": "difference so that's why I like go because HTTP is another example of like you can just call it out of the box and",
    "start": "2386400",
    "end": "2391720"
  },
  {
    "text": "treat it like a black box or you can dig in but you don't need to and I feel like that's the genius of the Des design of",
    "start": "2391720",
    "end": "2396800"
  },
  {
    "text": "those packages I think the standard Library really does it very so you know um I've had lots of conversations with",
    "start": "2396800",
    "end": "2402319"
  },
  {
    "text": "the go team and I remember was having one with C Francia who's one of the program managers for the go team um and",
    "start": "2402319",
    "end": "2408319"
  },
  {
    "text": "you we were talking about just this and he said you know we the standard library is designed to be building blocks right",
    "start": "2408319",
    "end": "2413640"
  },
  {
    "text": "you can start there and then layer on top of that more abstractions if you need them and other stuff you know like",
    "start": "2413640",
    "end": "2420079"
  },
  {
    "text": "the sequel package if you ever use a SQL package is very raw right and it feels quite clunky and cumbersome and the the",
    "start": "2420079",
    "end": "2426440"
  },
  {
    "text": "reason is because that's the building blocks for building more abstractions on top if you want to right and the same",
    "start": "2426440",
    "end": "2431920"
  },
  {
    "text": "thing with the HTTP package right there are times where I'm like oh it doesn't do error handling like I wish it",
    "start": "2431920",
    "end": "2437240"
  },
  {
    "text": "returned an error you know um but that's fun you can then build an abstraction I actually just did this a little error",
    "start": "2437240",
    "end": "2443119"
  },
  {
    "text": "check thing that takes a Handler returns a Handler uh or returns my own type of",
    "start": "2443119",
    "end": "2448160"
  },
  {
    "text": "Handler returns an error and I can do the error handling now in one place right but it's a little abstraction I just build on top of it and the standard",
    "start": "2448160",
    "end": "2454800"
  },
  {
    "text": "Library let you do that cuz it's so easy to work with in that way right that's how everybody has their own HTP router",
    "start": "2454800",
    "end": "2460720"
  },
  {
    "text": "now yeah and I think that that's kind of a nice segue to the other package that I think Gotham mentioned which was the",
    "start": "2460720",
    "end": "2466440"
  },
  {
    "text": "HTTP util reverse single reverse proxy which is another thing on top of HTTP that is very elegant so tell us about",
    "start": "2466440",
    "end": "2472520"
  },
  {
    "text": "that what's the single so this this was something that that came along it was not something I was searching for but if",
    "start": "2472520",
    "end": "2479000"
  },
  {
    "text": "you ever get a chance have a look at HTTP util uh single host reverse proxy",
    "start": "2479000",
    "end": "2484760"
  },
  {
    "text": "method so basic basically if you want to modify the response that is going out on",
    "start": "2484760",
    "end": "2491359"
  },
  {
    "text": "your HTTP server you can intercept any kind of these responses and make whatever changes you want so because you",
    "start": "2491359",
    "end": "2498200"
  },
  {
    "text": "have a reverse proxy there you can uh basically tag it along with a particular URL and so think about this how often",
    "start": "2498200",
    "end": "2505480"
  },
  {
    "text": "can you how easy or difficult is it for you to intercept a redirect request from a server so by default we just think",
    "start": "2505480",
    "end": "2512000"
  },
  {
    "text": "it's a it's a browser thing but it's a server who's sending back a 302 can I intercept that 302",
    "start": "2512000",
    "end": "2518480"
  },
  {
    "text": "request and maybe make a change in the the token the jot token or maybe a",
    "start": "2518480",
    "end": "2524760"
  },
  {
    "text": "change in the the URL that is getting sent back we can do that so if you use a",
    "start": "2524760",
    "end": "2530800"
  },
  {
    "text": "single host reverse proxy method in that it helps you modify the response there's",
    "start": "2530800",
    "end": "2536240"
  },
  {
    "text": "a method called modify response where you can actually take back the status code modify the response and send it",
    "start": "2536240",
    "end": "2542559"
  },
  {
    "text": "back seamlessly it's a you'll probably do it when you're in aqua security I'm",
    "start": "2542559",
    "end": "2548280"
  },
  {
    "text": "pretty sure you'll probably do that because if you have to say preempt somebody from accessing something this",
    "start": "2548280",
    "end": "2553520"
  },
  {
    "text": "is the easiest way to just deny so instead of returning a 30 or2 you change the status code and return a",
    "start": "2553520",
    "end": "2560440"
  },
  {
    "text": "402 yeah so like one of my favorites is uh actually the exact opposite of that",
    "start": "2560440",
    "end": "2566280"
  },
  {
    "text": "which is the round Tripper interface in the HTP standard Library see I love it do you know you're looking at me like",
    "start": "2566280",
    "end": "2572839"
  },
  {
    "text": "what is that yeah I've used it and I it's one of my favor now if you read the documentation um it goes on a client",
    "start": "2572839",
    "end": "2579319"
  },
  {
    "text": "right so HTP client has a default round Tripper which is HTP base requests the",
    "start": "2579319",
    "end": "2584640"
  },
  {
    "text": "documentation will say if you want to change how the transport mechanism Works maybe you want to use file as a",
    "start": "2584640",
    "end": "2590359"
  },
  {
    "text": "transport system so you know Unix uh you know socket files for example right so you could write your own implementation",
    "start": "2590359",
    "end": "2596160"
  },
  {
    "text": "that does that maybe you want to use a database as a transport mechanism or whatever it is right um You can do that",
    "start": "2596160",
    "end": "2601680"
  },
  {
    "text": "you can kind of plug this in and it takes a request and spits out a response an error on the other side right so you",
    "start": "2601680",
    "end": "2608280"
  },
  {
    "text": "can control the flow but I actually according the documentation says you're not supposed to modify the requests",
    "start": "2608280",
    "end": "2613640"
  },
  {
    "text": "you're never supposed to use it for this I actually love it for that um so one of the things I like to do I do with a",
    "start": "2613640",
    "end": "2619359"
  },
  {
    "text": "couple things is I will uh create my own uh round Trippers to do say add a JWT",
    "start": "2619359",
    "end": "2625240"
  },
  {
    "text": "token to all my outgoing requests right so I provide one client that everybody",
    "start": "2625240",
    "end": "2630680"
  },
  {
    "text": "uses right and inside of that it'll automatically tag with JWT right or",
    "start": "2630680",
    "end": "2635720"
  },
  {
    "text": "stuff like that I also use it in tests it's a really fun way of capturing and",
    "start": "2635720",
    "end": "2641400"
  },
  {
    "text": "um replaying back third-party apis right so in your test that you're doing an http.get you can change the transport",
    "start": "2641400",
    "end": "2648960"
  },
  {
    "text": "mechanism so instead of going to Twitter or Facebook whatever you're trying to hit you can just return back your own",
    "start": "2648960",
    "end": "2654079"
  },
  {
    "text": "stuff so it's incredibly useful for testing and kind of mocking out the other side of the HTTP get right it's",
    "start": "2654079",
    "end": "2660359"
  },
  {
    "text": "easy to mock out your own server right but sometimes it's just easier to capture a payload from Twitter store on",
    "start": "2660359",
    "end": "2666280"
  },
  {
    "text": "disc and just replay it using a transport that's really so it's like the other side of the reverse proxy Co it's",
    "start": "2666280",
    "end": "2672720"
  },
  {
    "text": "the outgoing part yeah that's one of my favorite little bits yeah we used reverse proxies for um a very specific",
    "start": "2672720",
    "end": "2680319"
  },
  {
    "text": "use case at the previous company and that was for we had a legacy application and we kind of use wanted to use the",
    "start": "2680319",
    "end": "2685480"
  },
  {
    "text": "Strangler pattern so you sort of slowly carve out so you like strangle your old Legacy app by slowly carving out bits of",
    "start": "2685480",
    "end": "2691559"
  },
  {
    "text": "it and putting it on the new stack until eventually the old thing can just die because nothing's using it it anymore",
    "start": "2691559",
    "end": "2696760"
  },
  {
    "text": "and so we had this problem of uh we had a website and we wanted some of the parts of the website to be served by new",
    "start": "2696760",
    "end": "2702079"
  },
  {
    "text": "services and and most of it still go to still go to the Legacy servers and so we had to put something in between and we",
    "start": "2702079",
    "end": "2707760"
  },
  {
    "text": "used a little go essentially reverse proxy and I remember like my manager coming to me saying can you write a",
    "start": "2707760",
    "end": "2713720"
  },
  {
    "text": "reverse proxy and go that will help us do this and I was like oh my God and then I discovered it's one line you",
    "start": "2713720",
    "end": "2719480"
  },
  {
    "text": "called a single reverse proxy job done yeah I'll give it my best shot might take me a couple of weeks yeah I did",
    "start": "2719480",
    "end": "2726720"
  },
  {
    "text": "that that was my holidays I'm going to go work on it at home I'll see you in a few weeks come back with a tan yeah I",
    "start": "2726720",
    "end": "2732119"
  },
  {
    "text": "gen I was gen scared I was like oh my God I don't know and then it's one line so it's really nice and it gives you a way to basically uh get a receive a",
    "start": "2732119",
    "end": "2739480"
  },
  {
    "text": "request and then decide okay if this request request comes with this domain or based on whatever params you want you",
    "start": "2739480",
    "end": "2744960"
  },
  {
    "text": "just direct it to one service otherwise you direct it to the Legacy app and that was really nice and it was really easy and it was actually it was really nice",
    "start": "2744960",
    "end": "2750839"
  },
  {
    "text": "to have that routing logic in a separate Go app so yeah and you get to use go code to make these decision really one",
    "start": "2750839",
    "end": "2758599"
  },
  {
    "text": "of the things I've played with I never actually got a chance to finish it so with with Buffalo for example we watch your go files and as your go files",
    "start": "2758599",
    "end": "2765000"
  },
  {
    "text": "change we rebuild it uh and if there's an error we display that error back to you from the building but we do that with kind of like just faking it out a",
    "start": "2765000",
    "end": "2771079"
  },
  {
    "text": "little bit using a file and serving it and it's not particular good and one of the things I played with is a reverse proxy where um you know you're actually",
    "start": "2771079",
    "end": "2778160"
  },
  {
    "text": "when you go to Port 3000 it goes to this kind of Dev dashboard thing and proxies it through to your application which is",
    "start": "2778160",
    "end": "2784400"
  },
  {
    "text": "now running on a different port and that crashes whatever we could just proxy that error back to you I just need more",
    "start": "2784400",
    "end": "2791119"
  },
  {
    "text": "free time um but it's a wonderful wonderful tool if you've never used [Music]",
    "start": "2791119",
    "end": "2803589"
  },
  {
    "text": "it this episode is brought to you by X team X team is the world's most",
    "start": "2804480",
    "end": "2810079"
  },
  {
    "text": "energizing Community for developers in this segment I talk with Ryan Chartrand X team CEO about living living your life",
    "start": "2810079",
    "end": "2816359"
  },
  {
    "text": "like a great adventure is your life an adventure when is the last time you had an adventure what if you could be part",
    "start": "2816359",
    "end": "2822200"
  },
  {
    "text": "of a community that was all about living your life working coding and still be adventuring at the same time this is",
    "start": "2822200",
    "end": "2828359"
  },
  {
    "text": "what Ryan has to say we all want to go on adventures but usually what that looks like is we have to save up a lot",
    "start": "2828359",
    "end": "2836400"
  },
  {
    "text": "of money we have to save up a lot of money we have to save up our PTO we have to you know and then eventually the",
    "start": "2836400",
    "end": "2841520"
  },
  {
    "text": "adventure comes and it's very short-lived as opposed to well what if we could do this what if we had",
    "start": "2841520",
    "end": "2846720"
  },
  {
    "text": "opportunities to do this and and be able to code and work and still be",
    "start": "2846720",
    "end": "2852359"
  },
  {
    "text": "adventuring at the same time or at least have more opportunities to Adventure you don't have to do it all the time",
    "start": "2852359",
    "end": "2857440"
  },
  {
    "text": "necessarily and and that's really what companies like X team are being able to offer today all sorts of remote",
    "start": "2857440",
    "end": "2862880"
  },
  {
    "text": "companies are offering this now I think what x team is doing differently on top of that is adding this extra Community",
    "start": "2862880",
    "end": "2869520"
  },
  {
    "text": "layer that energizes you in in fascinating ways because you're part of",
    "start": "2869520",
    "end": "2874559"
  },
  {
    "text": "something that you truly feel like you belong in and you're a part of something that is inspired from 25 years worth of",
    "start": "2874559",
    "end": "2882319"
  },
  {
    "text": "learning from you know communities like World of Warcraft that have mastered how to bring people together and and keep",
    "start": "2882319",
    "end": "2888760"
  },
  {
    "text": "them engaged and energized and so when you combine that that ability to be able to live your life like a great adventure",
    "start": "2888760",
    "end": "2895440"
  },
  {
    "text": "combined with being a part of this incredibly energizing Community you are truly getting to be a part of something",
    "start": "2895440",
    "end": "2901640"
  },
  {
    "text": "special all right if you're ready to live your life like a great adventure give my friends at xte is shout head to",
    "start": "2901640",
    "end": "2907839"
  },
  {
    "text": "X team.com once again X",
    "start": "2907839",
    "end": "2912319"
  },
  {
    "text": "[Music]",
    "start": "2915650",
    "end": "2924839"
  },
  {
    "text": "team.com U So speaking of time Matt yeah it's 7:50 I thought you were going to",
    "start": "2924839",
    "end": "2930160"
  },
  {
    "text": "talk about the time package why time is on my side mate I don't need to worry",
    "start": "2930160",
    "end": "2935240"
  },
  {
    "text": "about it no okay fine well we can cut that out later yeah don't don't worry Tish about",
    "start": "2935240",
    "end": "2941559"
  },
  {
    "text": "the time at some point things will end and then I'd love to give these lovely",
    "start": "2941559",
    "end": "2946640"
  },
  {
    "text": "people a shot at asking some of our fine panelists some questions maybe when that gopher and that used beach towel are",
    "start": "2946640",
    "end": "2952119"
  },
  {
    "text": "yours great idea soiled soiled so hang on a sec Paul Jolly where are you",
    "start": "2952119",
    "end": "2958480"
  },
  {
    "text": "sir we're going to have some he was our mic gopher he's what he's at the dinner he",
    "start": "2958480",
    "end": "2964640"
  },
  {
    "text": "left he's like I'll volunteer to walk around with the mic thank you Paul he went to",
    "start": "2964640",
    "end": "2971720"
  },
  {
    "text": "dinner did he take the mic to dinner he did chewing you here in the background",
    "start": "2971720",
    "end": "2978359"
  },
  {
    "text": "let's just turn it on and see what he's having hello we're going live over to Paul I've seen they're live streaming it",
    "start": "2978359",
    "end": "2984240"
  },
  {
    "text": "can't they just send us some questions from dinner okay so we got uh Dom's G to walk around we got a question right over",
    "start": "2984240",
    "end": "2989400"
  },
  {
    "text": "here down front uh very first hand over here Dom see my finger I'm point over here Dom",
    "start": "2989400",
    "end": "2996119"
  },
  {
    "text": "oh okay sorry I'm looking this way you got that lovely yellow shirt how am I supposed to really my yeah have you ever",
    "start": "2996119",
    "end": "3004960"
  },
  {
    "text": "used the Len operator on a buffer Channel and why the Len yes that came up",
    "start": "3004960",
    "end": "3012400"
  },
  {
    "text": "today I think in Cory uh no cuz I don't use buffered",
    "start": "3012400",
    "end": "3017440"
  },
  {
    "text": "channels that's for buffer channels right yes okay cuz you can also set the capacity well you can read the capacity",
    "start": "3017440",
    "end": "3024119"
  },
  {
    "text": "and you can read the Len the capacity if you have a buffer channel of 10 the capacity be 10 and the Len would be four",
    "start": "3024119",
    "end": "3030359"
  },
  {
    "text": "maybe there thing that's how many but you want to be careful using it because uh you'll probably get an inconsistent",
    "start": "3030359",
    "end": "3036559"
  },
  {
    "text": "result yeah it's not safe no and you shouldn't be using buffer channel so",
    "start": "3036559",
    "end": "3042680"
  },
  {
    "text": "it's not a problem one use case one use case for buffer channels that I find to be great is when you want to control how",
    "start": "3042680",
    "end": "3049400"
  },
  {
    "text": "many active go routines are running so if you wanted to limit them what you can do is create a buffer Channel and then",
    "start": "3049400",
    "end": "3056200"
  },
  {
    "text": "at the start of when your go routine is going to do some work or before that it puts something in the channel so say",
    "start": "3056200",
    "end": "3062319"
  },
  {
    "text": "you've got five slots in this channel the first five of those will be fine and they'll unblock because they'll be able",
    "start": "3062319",
    "end": "3068079"
  },
  {
    "text": "to there'll be space in this buffer the sixth one is going to block because this channel is full and then it's going to",
    "start": "3068079",
    "end": "3075920"
  },
  {
    "text": "wait until and then what you do at the end when you finished processing you read from the channel to release that",
    "start": "3075920",
    "end": "3081960"
  },
  {
    "text": "thing in the semaphore and that then leaves a space for the next want to go in and that's a way you can throttle",
    "start": "3081960",
    "end": "3088000"
  },
  {
    "text": "without much otherwise complexity in the code you can throttle how many concurrent things are going to run and",
    "start": "3088000",
    "end": "3094760"
  },
  {
    "text": "the code stays relatively easy to read it's really work of HS just the other week and that was exactly oh see I do I",
    "start": "3094760",
    "end": "3101480"
  },
  {
    "text": "kind of do it the opposite way where let's say you know I I have a Channel of stuff I want maybe five go routines",
    "start": "3101480",
    "end": "3108200"
  },
  {
    "text": "that's my limit and they're just ranging over the channels so whichever one picks it up first does it and then I don't",
    "start": "3108200",
    "end": "3113720"
  },
  {
    "text": "have to use buffer channels I I do also strongly believe that you should you should know the number of go routines",
    "start": "3113720",
    "end": "3119559"
  },
  {
    "text": "which are going to be spawned and if it's going to be dynamically increasing it can actually create more problems everywhere so I wouldn't still recommend",
    "start": "3119559",
    "end": "3127119"
  },
  {
    "text": "using Len Len on a buffer Channel at any time because it's risky but uh the",
    "start": "3127119",
    "end": "3132480"
  },
  {
    "text": "pooling of go routines or throttling them or you know limiting them uh over",
    "start": "3132480",
    "end": "3138000"
  },
  {
    "text": "this I think we could debate on that one okay we should well I know it works here",
    "start": "3138000",
    "end": "3143520"
  },
  {
    "text": "the thing I don't I don't just kick off of go routines the kicking off of a go routine is what's blocked by that",
    "start": "3143520",
    "end": "3149400"
  },
  {
    "text": "channel so I do know how many go routines are running that's cool it's about readability it's easier to read",
    "start": "3149400",
    "end": "3155000"
  },
  {
    "text": "but no we'll go in the car park after and take our shirts off and have a full fight no props there's a knife fight",
    "start": "3155000",
    "end": "3161160"
  },
  {
    "text": "going to happen over this okay fantastic brilliant the person with lesser hair wins okay Dom's got a question over",
    "start": "3161160",
    "end": "3166760"
  },
  {
    "text": "there then as can I ask like a non-technical question is that okay yeah okay um so I",
    "start": "3166760",
    "end": "3175680"
  },
  {
    "text": "guess my question would be because I'm kind of like um new to like uh well Tech what would be like um if your life was",
    "start": "3175680",
    "end": "3182839"
  },
  {
    "text": "like a story book and like um each chapter is like a year um what would be",
    "start": "3182839",
    "end": "3188480"
  },
  {
    "text": "like a name of like um an influential chapter like for for example an answer for me would be like um chapter 22 like",
    "start": "3188480",
    "end": "3195760"
  },
  {
    "text": "it's go time because that's when I started learning go and so yeah it's more 22 is your age and that's the",
    "start": "3195760",
    "end": "3202359"
  },
  {
    "text": "chapter well it was my last age yeah ch2 every chapter is a year yes every",
    "start": "3202359",
    "end": "3207839"
  },
  {
    "text": "chapter in my book is 21 I'm just so so you're asking us what we'd call like",
    "start": "3207839",
    "end": "3213319"
  },
  {
    "text": "current year of Our Lives well I mean you can go for a current year of your life but like more like an influential year in terms of or or anything really",
    "start": "3213319",
    "end": "3219480"
  },
  {
    "text": "like a current year a year that might be influential too in terms of like your growth as a technical person some some",
    "start": "3219480",
    "end": "3225040"
  },
  {
    "text": "of us been at this for 20 well I mean I'm do something like it's going to take a while well you just pick one year like",
    "start": "3225040",
    "end": "3231839"
  },
  {
    "text": "you know chapter 22 that's when you 22 uh for me it would probably be the very first year I professionally started",
    "start": "3231839",
    "end": "3238440"
  },
  {
    "text": "programming um which would unfortunately be 20 years ago uh I'm dating myself but 20 years uh this year um you're dating",
    "start": "3238440",
    "end": "3245960"
  },
  {
    "text": "yourself that is that like a new app it's for people who can't find love well",
    "start": "3245960",
    "end": "3253079"
  },
  {
    "text": "personally I think I'm I'm quite fanciable so yeah you know I take myself out to the movies and dinner we I treat",
    "start": "3253079",
    "end": "3259440"
  },
  {
    "text": "myself right yeah but why is it not going very well that's the thing it's really not I've broken up with myself",
    "start": "3259440",
    "end": "3264640"
  },
  {
    "text": "several times uh especially the past few years uh but for me it was actually my very first year of programming um",
    "start": "3264640",
    "end": "3271040"
  },
  {
    "text": "because I you know if you don't know my background I actually have a degree in music um and so obviously not computer",
    "start": "3271040",
    "end": "3276440"
  },
  {
    "text": "science so when I got my first job it was the dot boom of the 9s um and if you could spell HTML you got a job uh and if",
    "start": "3276440",
    "end": "3283440"
  },
  {
    "text": "you knew what it meant it was like another 5K years wonderful and and Y 2K",
    "start": "3283440",
    "end": "3288559"
  },
  {
    "text": "yeah exactly so like 1999 and I happen to find this job in Boston where uh the",
    "start": "3288559",
    "end": "3295359"
  },
  {
    "text": "developers on the team were just spectacular and they were more than happy to sit with me and and teach me",
    "start": "3295359",
    "end": "3302799"
  },
  {
    "text": "and show me how to write code and how to write good code and and how to read code",
    "start": "3302799",
    "end": "3307880"
  },
  {
    "text": "and how to understand code and so to me the lessons I learned in that very first year of programming have stuck with me",
    "start": "3307880",
    "end": "3315200"
  },
  {
    "text": "to this day and it's one of the reasons I quite enjoy mentoring because it was such a big part of my learning process",
    "start": "3315200",
    "end": "3321280"
  },
  {
    "text": "cuz 1999 we didn't have a ton of books on program pring we didn't have",
    "start": "3321280",
    "end": "3326440"
  },
  {
    "text": "certainly didn't have tons of online resources and videos and conferences and all this sort of stuff online so you",
    "start": "3326440",
    "end": "3332119"
  },
  {
    "text": "could only learn from other people uh and that to me was the most valuable thing of that year was learning from these professionals and these people who",
    "start": "3332119",
    "end": "3339160"
  },
  {
    "text": "knew what they were doing and taught me some wonderful thing that's lovely do you stay in touch with them I absolutely do yeah yeah uh you I have some very",
    "start": "3339160",
    "end": "3345799"
  },
  {
    "text": "good friends that we still see each other I was just at one of my friends house about a month ago uh having dinner yeah so I still see these people 20",
    "start": "3345799",
    "end": "3352119"
  },
  {
    "text": "years later they're at my wedding I was at their wedding uh just lovely people yeah we still stay in touch thanks to",
    "start": "3352119",
    "end": "3357440"
  },
  {
    "text": "Ben for that really complicated question does anyone want to ask a more complicated question cuz that was too",
    "start": "3357440",
    "end": "3364319"
  },
  {
    "text": "easy to try and your life as a novel yeah I didn't",
    "start": "3364319",
    "end": "3369400"
  },
  {
    "text": "give it a name though yeah yeah I don't know if I have a name for it don't worry",
    "start": "3369400",
    "end": "3374599"
  },
  {
    "text": "we'll do the names later The Marksman oh oh oh sorry that's one of",
    "start": "3374599",
    "end": "3379880"
  },
  {
    "text": "those things we can cut out for Gotham now you get one cut each one cut",
    "start": "3379880",
    "end": "3385079"
  },
  {
    "text": "yourself once Matt you've used like 10 okay oh so you're ready for a question um so I'm I'm I'm not really",
    "start": "3385079",
    "end": "3392640"
  },
  {
    "text": "sure because one one of you is really biased in it but when is the point where",
    "start": "3392640",
    "end": "3399599"
  },
  {
    "text": "you start using a a web framework what would say I'll stay away",
    "start": "3399599",
    "end": "3405000"
  },
  {
    "text": "from the question yeah I do have a valid answer well I think it's a valid answer but I'm going to stay away from it Mark's basically like the clippy version",
    "start": "3405000",
    "end": "3411960"
  },
  {
    "text": "for Buffalo if he's like oh it looks like you're trying to write away web app it pops up it pops up on the screen",
    "start": "3411960",
    "end": "3417920"
  },
  {
    "text": "somehow in the corner I so my real quick but I'd love to hear um others take",
    "start": "3417920",
    "end": "3423000"
  },
  {
    "text": "obviously because I yeah I am slightly biased um but I'm biased in that um coming from something like rails what I",
    "start": "3423000",
    "end": "3428599"
  },
  {
    "text": "loved about rails was the productivity gains right like go like I can very quickly write a very small app but when",
    "start": "3428599",
    "end": "3434799"
  },
  {
    "text": "I start writing a large app the structure the kind of complexity that comes along with large apps and you know",
    "start": "3434799",
    "end": "3441640"
  },
  {
    "text": "templating and sessions and cookies and databases and all that sort of stuff you know there's just so much kind of boiler",
    "start": "3441640",
    "end": "3447960"
  },
  {
    "text": "plate you have to write uh and that's where I Turn to You know I used to turn to rails you know now I turn to to",
    "start": "3447960",
    "end": "3453559"
  },
  {
    "text": "Buffalo right because it's the Go version and I can just get up and running and I can start writing my business log that's when I turn to it I",
    "start": "3453559",
    "end": "3459039"
  },
  {
    "text": "don't always use buffalo though that is the feel that is actually true I don't always use it because it's not always",
    "start": "3459039",
    "end": "3464559"
  },
  {
    "text": "the right solution for what I'm looking for but I'm curious to see yeah I I'm I'm pretty sure I I like the question",
    "start": "3464559",
    "end": "3469920"
  },
  {
    "text": "because uh you need to use the right tools for the right job so if you actually want to build a web application",
    "start": "3469920",
    "end": "3475760"
  },
  {
    "text": "you might want to rethink about using go in general you want to use a web application hang on hang on hang on I'll",
    "start": "3475760",
    "end": "3482799"
  },
  {
    "text": "so if you want to just build some standard API work that you want to do just use rails but I'll give you an",
    "start": "3482799",
    "end": "3489640"
  },
  {
    "text": "example and Mark you actually like this but we needed to put out a very lightweight web server on a Raspberry Pi",
    "start": "3489640",
    "end": "3498240"
  },
  {
    "text": "and I didn't want to install anything on it that's the time I actually used Buffalo and I bundled up the entire in",
    "start": "3498240",
    "end": "3504119"
  },
  {
    "text": "one binary and just put it on a pipe so there are use cases where you want to use a buffalo exactly because there is",
    "start": "3504119",
    "end": "3511079"
  },
  {
    "text": "no dependency for installation but if you want to build a larger web application just use the right tools and",
    "start": "3511079",
    "end": "3516240"
  },
  {
    "text": "sometimes I mean I found using rails for the front interfacing for API API",
    "start": "3516240",
    "end": "3522200"
  },
  {
    "text": "versioning whichever way you want to look at it and scaling it up but do all the heavy lifting maybe using go so use",
    "start": "3522200",
    "end": "3530720"
  },
  {
    "text": "multiple languages be polyglot be available so that the right tool is being used for the job and personally if",
    "start": "3530720",
    "end": "3536920"
  },
  {
    "text": "you're writing a web application in go starting from scratch as long as a simple small application you're okay but",
    "start": "3536920",
    "end": "3543240"
  },
  {
    "text": "as the complexity increases with the databases coming in and your rate",
    "start": "3543240",
    "end": "3548920"
  },
  {
    "text": "limiting and versioning and middleware it just starts getting a lot of lines of code and people have already done it so",
    "start": "3548920",
    "end": "3554920"
  },
  {
    "text": "if people have already been there done that don't go Reinventing the wheel just because you want to use",
    "start": "3554920",
    "end": "3561119"
  },
  {
    "text": "go solutions that are already built in gal yeah I tend to agree with uh I think if",
    "start": "3561119",
    "end": "3567760"
  },
  {
    "text": "you're new to programming I think that looking at a massive framework can scare you off and you kind of look at it and",
    "start": "3567760",
    "end": "3573319"
  },
  {
    "text": "go like I don't know what anything is so I think with the framework you kind of have to know already what a framework what MVC what all of that is uh so I",
    "start": "3573319",
    "end": "3580720"
  },
  {
    "text": "think if you're just trying to learn programming I think it's better to start with um just sort of like a native",
    "start": "3580720",
    "end": "3588359"
  },
  {
    "text": "little app with no bells and whistles no Frameworks so that you can really understand the con Concepts under the",
    "start": "3588359",
    "end": "3594319"
  },
  {
    "text": "hood uh and then if you're if you've already done it once in another language or something then yeah by all means don't",
    "start": "3594319",
    "end": "3599400"
  },
  {
    "text": "reinvent the wheel uh another way to go for me is um and something that we do at monzo is we don't use Frameworks because",
    "start": "3599400",
    "end": "3605559"
  },
  {
    "text": "we have microservices but we use a combination of libraries and code generation so we basically bundled all",
    "start": "3605559",
    "end": "3611079"
  },
  {
    "text": "the common logic in libraries that every little microservice inherits and they're all code generated so if you want a new",
    "start": "3611079",
    "end": "3616799"
  },
  {
    "text": "service you just code generate a service template they're all homogeneous they all inherit the same libraries for authentication and logging and requests",
    "start": "3616799",
    "end": "3623799"
  },
  {
    "text": "and all of that so that's another way to go if you don't want to use a like an NVC style framework how do you describe",
    "start": "3623799",
    "end": "3629400"
  },
  {
    "text": "the services at monzo microservices what do you mean I mean how do you describe them how do you define them they they",
    "start": "3629400",
    "end": "3636319"
  },
  {
    "text": "are they are single single responsibility sorry when you say like something gets generated yeah what get",
    "start": "3636319",
    "end": "3642480"
  },
  {
    "text": "what what does it get generated and what does it get generated from so it gener it gets generated from templates so we",
    "start": "3642480",
    "end": "3648599"
  },
  {
    "text": "we have an internal tool called service gen and we just call that say like give it this name of this service and just",
    "start": "3648599",
    "end": "3654160"
  },
  {
    "text": "generat creat like an empty service I see basically just like a the so you",
    "start": "3654160",
    "end": "3659240"
  },
  {
    "text": "just have to put in your domain logic so you just need to fill in your handlers your Proto Proto definitions all of that",
    "start": "3659240",
    "end": "3664400"
  },
  {
    "text": "stuff so I think the answer is it depends yes so I guess that would be fulfilling the same kind of function",
    "start": "3664400",
    "end": "3671760"
  },
  {
    "text": "that a framework might give you you have a homegrown I think like it's basically to sum up like it's worth doing it once",
    "start": "3671760",
    "end": "3677799"
  },
  {
    "text": "from scratch so you understand it because nothing will teach you better than like rewriting a s like writing a simple comple context package or writing",
    "start": "3677799",
    "end": "3684799"
  },
  {
    "text": "a debugger from scratch or something like this because that that's a like I'm trying to learn perspective like so for",
    "start": "3684799",
    "end": "3691000"
  },
  {
    "text": "me like you know as a consultant as somebody who builds a lot of apps like for me time is of the essence just",
    "start": "3691000",
    "end": "3696799"
  },
  {
    "text": "getting to Market getting the thing out right so that's when you I would absolutely turn to a buffalo or",
    "start": "3696799",
    "end": "3702280"
  },
  {
    "text": "previously rails where it's just like boom I can start business logic somebody else has made all the decisions for me",
    "start": "3702280",
    "end": "3707480"
  },
  {
    "text": "and I'm good right but just like in in Ruby I would use Sinatra for some really small things where I didn't need a",
    "start": "3707480",
    "end": "3713920"
  },
  {
    "text": "full-blown rails app right and in go I still turn to the standard Library when I just need a small quick tight little",
    "start": "3713920",
    "end": "3721680"
  },
  {
    "text": "web app and I don't need the bells and whistles you know that particularly if you're starting from something that you",
    "start": "3721680",
    "end": "3727680"
  },
  {
    "text": "you don't really know where it's going if you go straight to a framework you're going to be locked into the opinions of",
    "start": "3727680",
    "end": "3734000"
  },
  {
    "text": "that framework and if you know that the opinions of that framework meet what you're going to be doing then great it",
    "start": "3734000",
    "end": "3740160"
  },
  {
    "text": "is the right tool for the job and if you haven't figured that out yet then maybe it's too early to to adopt a framework",
    "start": "3740160",
    "end": "3745440"
  },
  {
    "text": "yeah that's actually a really good point cuz a framework is something else to learn however simple it is it is a new",
    "start": "3745440",
    "end": "3752160"
  },
  {
    "text": "thing to learn uh and yeah in in the beginning of projects you don't really",
    "start": "3752160",
    "end": "3758119"
  },
  {
    "text": "know ever what you're going to be doing I think yeah and if you lock yourself into a framework it's almost it's very",
    "start": "3758119",
    "end": "3763520"
  },
  {
    "text": "hard to get yourself out of the framework like after a few years of development you're not going to it's going to be very hard to leave that",
    "start": "3763520",
    "end": "3768799"
  },
  {
    "text": "framework but if you are don't have a framework it's a lot easier to migrate into a framework I find yes well I",
    "start": "3768799",
    "end": "3774079"
  },
  {
    "text": "always say build small things and and I don't I don't mean like therefore don't",
    "start": "3774079",
    "end": "3779359"
  },
  {
    "text": "have big companies and stuff but but actually if you can avoid it don't have a big companies it's way",
    "start": "3779359",
    "end": "3786200"
  },
  {
    "text": "easier is let's let's try and get another question in I think I think we beat web Frameworks to death Ben's",
    "start": "3786200",
    "end": "3792720"
  },
  {
    "text": "winning so far because he asked us to so Dom who's our next question we had one over at the back over there and then",
    "start": "3792720",
    "end": "3798079"
  },
  {
    "text": "I'll come back to the front we got okay for the prize is this one is this the last",
    "start": "3798079",
    "end": "3803279"
  },
  {
    "text": "question oh here we go hello um going a bit back to context right it's a quite elegant",
    "start": "3803279",
    "end": "3810319"
  },
  {
    "text": "solution it's a quite good way to give timeouts and in dead lines for functions",
    "start": "3810319",
    "end": "3815400"
  },
  {
    "text": "and I use a lot for https web services but the thing is that I usually see most",
    "start": "3815400",
    "end": "3821799"
  },
  {
    "text": "of developers they never get the context and check if it's ConEd if it's whatever right so they always delegate a third",
    "start": "3821799",
    "end": "3828359"
  },
  {
    "text": "part library to do this decision and then if the library turns turns you B",
    "start": "3828359",
    "end": "3834599"
  },
  {
    "text": "app you de with that and you know that the coner was cancelled so what do you guys think and how much do you guys look",
    "start": "3834599",
    "end": "3842319"
  },
  {
    "text": "to the context to cancel your code itself you know so I think first of so",
    "start": "3842319",
    "end": "3848240"
  },
  {
    "text": "for anyone that didn't hear that was talking about the uh a lot of the times",
    "start": "3848240",
    "end": "3854520"
  },
  {
    "text": "you can see context just passed through the the methods themselves that you're writing don't deal with it I think",
    "start": "3854520",
    "end": "3861200"
  },
  {
    "text": "that's totally legitimate if you're calling some of the service and it's cancelable and you're allowing that to",
    "start": "3861200",
    "end": "3867119"
  },
  {
    "text": "be cancelled somewhere else Upstream sometimes it's completely appropriate to just pass that straight through and don't touch it but whenever I'm doing",
    "start": "3867119",
    "end": "3874960"
  },
  {
    "text": "any kind of heavy lifting looping around I will at the top just check and you can",
    "start": "3874960",
    "end": "3880359"
  },
  {
    "text": "also check the error on a context yep that's one of the four one of the four methods is there and it returns either",
    "start": "3880359",
    "end": "3887599"
  },
  {
    "text": "nil if everything's okay or a context canell error so sometimes you don't have to even use the channel you can just",
    "start": "3887599",
    "end": "3893480"
  },
  {
    "text": "check that error and if that's if there's an error you know the the context has been canceled I think you just return the error from your yeah",
    "start": "3893480",
    "end": "3900200"
  },
  {
    "text": "well it doesn't I mean so by default in stand the library though they're context deadline errors however if you implement",
    "start": "3900200",
    "end": "3905960"
  },
  {
    "text": "your own context interface that error can be anything you want right you can",
    "start": "3905960",
    "end": "3911079"
  },
  {
    "text": "cancel the context with done and the error could be the database doesn't exist right it's not necessarily a",
    "start": "3911079",
    "end": "3916160"
  },
  {
    "text": "cancellation error is it it's you can still cancel and give a better error uh which is very good for go routines",
    "start": "3916160",
    "end": "3921640"
  },
  {
    "text": "because it's hard to propagate errors up a lot go routines isn't it yeah unless use like airor group or something right",
    "start": "3921640",
    "end": "3929359"
  },
  {
    "text": "yeah so I think it's okay to just if you're not sure but you know that it's you're going to be doing something as",
    "start": "3929359",
    "end": "3935079"
  },
  {
    "text": "part of an HTTP thing then you could use that context and just pass it through the request comes with a context and",
    "start": "3935079",
    "end": "3941720"
  },
  {
    "text": "that does get cancelled if they if they do the back button or they refresh or they close the browser or whatever",
    "start": "3941720",
    "end": "3948279"
  },
  {
    "text": "modern browsers will cancel that context so that is quite cool if you're doing some heavy lifting and doing some work",
    "start": "3948279",
    "end": "3953920"
  },
  {
    "text": "and and you actually can abort early and not do any work it's quite satisfying yeah and clean up all that stuff that",
    "start": "3953920",
    "end": "3960440"
  },
  {
    "text": "maybe got opened that's no longer useful anymore right I'd say it's just a a a",
    "start": "3960440",
    "end": "3965920"
  },
  {
    "text": "safer Habit to have as well because if you think of the alternative which is not pass it down then you you can have",
    "start": "3965920",
    "end": "3971480"
  },
  {
    "text": "something further like Downstream that expects that context and it assumes that it's the one passed from the top and",
    "start": "3971480",
    "end": "3976720"
  },
  {
    "text": "then something in the middle if it starts a new context and suddenly you you lose of it you lose that and it's a mess so I think even if you're not",
    "start": "3976720",
    "end": "3982319"
  },
  {
    "text": "planning to use it it's just always safer to pass it down because it saves you refactoring later and it always ensures that it trickles down rather",
    "start": "3982319",
    "end": "3988520"
  },
  {
    "text": "than somebody randomly overwriting it with context background because they haven't had it past so yeah completely",
    "start": "3988520",
    "end": "3995359"
  },
  {
    "text": "new context almost like you can just keep wrapping I'm we say about the nodes so you can even wrap smaller tighter",
    "start": "3995359",
    "end": "4001200"
  },
  {
    "text": "cancellations on bits of it yeah like passing it down won't hurt you but not passing it can hurt you so don't not",
    "start": "4001200",
    "end": "4008279"
  },
  {
    "text": "pass it so great question I think we had one more question is that right Dom got two more one two more questions okay",
    "start": "4008279",
    "end": "4015279"
  },
  {
    "text": "we still have the plush gopher to give away so none of your questions have been good enough apparently I think Ben's I",
    "start": "4015279",
    "end": "4020799"
  },
  {
    "text": "mean which one was Ben serialize your life yeah that actually was quite good",
    "start": "4020799",
    "end": "4026480"
  },
  {
    "text": "it's complicated to be honest it's more complex than rex that question well just parsing the question",
    "start": "4026480",
    "end": "4034079"
  },
  {
    "text": "yeah it was a good one okay so we got two more so first one I don't know where captures speak hello there you go so",
    "start": "4034079",
    "end": "4043039"
  },
  {
    "text": "this question is a lot less technical uh than the others um but I read an article earlier and it basically said that the",
    "start": "4043039",
    "end": "4050319"
  },
  {
    "text": "next top five sites for fct locations would be London Singapore Belfast New",
    "start": "4050319",
    "end": "4055760"
  },
  {
    "text": "York and Dublin um as a local guy myself in in Ireland I thought it was flattering that that Belfast and Dublin",
    "start": "4055760",
    "end": "4062160"
  },
  {
    "text": "got the mention but I'm I'm skeptical about who done that research on whether they were from Ireland themselves but I",
    "start": "4062160",
    "end": "4067760"
  },
  {
    "text": "wanted to ask is considering brexit and the implications that that could be coming up luckily for for all of us here",
    "start": "4067760",
    "end": "4074480"
  },
  {
    "text": "London is number one but if you were not able to to be present in in London in program here whereabouts in the world",
    "start": "4074480",
    "end": "4081319"
  },
  {
    "text": "would you go to be a go developer I enjoy Boston but that's also where I",
    "start": "4081319",
    "end": "4087119"
  },
  {
    "text": "live um I I don't know personally I think that you can do the job anywhere it really doesn't matter live where you",
    "start": "4087119",
    "end": "4093000"
  },
  {
    "text": "want to live I was going to say I would encourage remote looking into remote work if that's your thing like it's not for everyone some people like going to",
    "start": "4093000",
    "end": "4099758"
  },
  {
    "text": "the office and that's completely fine but if you're not particularly attached to the office if you you then have the",
    "start": "4099759",
    "end": "4104960"
  },
  {
    "text": "whole world of companies that you could work for so especially if you're if you're in a place which doesn't really",
    "start": "4104960",
    "end": "4110120"
  },
  {
    "text": "have many Native local companies and you want to work for amazing company X if they hire remotely that's your chance so",
    "start": "4110120",
    "end": "4117159"
  },
  {
    "text": "yeah in fact talk to talk to gitlab gitlab doesn't have an office I was just talking to somebody earlier and that's so cool so they have so many people all",
    "start": "4117159",
    "end": "4124560"
  },
  {
    "text": "over the world but they don't have a single office location I don't think geography matters anymore I think so too",
    "start": "4124560",
    "end": "4131080"
  },
  {
    "text": "my team is remote and uh most of the company Aqua is based either in Israel",
    "start": "4131080",
    "end": "4136640"
  },
  {
    "text": "or Boston so I know I'd have like a home to go to if I you never come to Boston and visit me I do I just don't see",
    "start": "4136640",
    "end": "4143960"
  },
  {
    "text": "you you're like I'm there every two weeks mark thank you Liz can't yeah",
    "start": "4143960",
    "end": "4149400"
  },
  {
    "text": "thank you classic burn it really was a classic",
    "start": "4149400",
    "end": "4154838"
  },
  {
    "text": "bur it was good I make an effort to see you every time in the London that's very kind thank you yeah that's also lie but",
    "start": "4154839",
    "end": "4160798"
  },
  {
    "text": "that's beside the point uh yeah a remote and we had one more one more",
    "start": "4160799",
    "end": "4168199"
  },
  {
    "text": "yes can you hear me yeah oh there we go uh I'd like to ask you you guys about",
    "start": "4168199",
    "end": "4174000"
  },
  {
    "text": "the singl Tob pattern I know it's a very controversial design pattern and with go",
    "start": "4174000",
    "end": "4180440"
  },
  {
    "text": "you can sort of implement it using package level variables and I've seen it being used uh mainly when it comes to",
    "start": "4180440",
    "end": "4189318"
  },
  {
    "text": "configuration uh for example using the Viper package and I I'd like to hear your thoughts on the Singleton pattern",
    "start": "4189319",
    "end": "4196320"
  },
  {
    "text": "uh whether it should be used whether it should not be used yeah well that's a great question um and for me it's it's",
    "start": "4196320",
    "end": "4203080"
  },
  {
    "text": "don't use it it's as simple as that and actually don't use any Global state in fact maybe even in the next version of",
    "start": "4203080",
    "end": "4211040"
  },
  {
    "text": "go we get rid of package space Global State alt together if it's a config you",
    "start": "4211040",
    "end": "4217320"
  },
  {
    "text": "can just pass a config in you don't have to be it doesn't have to be a Singleton you know and it's it's clearer I think",
    "start": "4217320",
    "end": "4224880"
  },
  {
    "text": "it means that the dependency is is clear that that it's needed it's not just any cuz if it's a",
    "start": "4224880",
    "end": "4231280"
  },
  {
    "text": "global space anything in that package can access it so you don't know you",
    "start": "4231280",
    "end": "4236640"
  },
  {
    "text": "don't really know the flow of where that thing's being accessed you'd have to go and find it versus if it's passed in",
    "start": "4236640",
    "end": "4242760"
  },
  {
    "text": "it's it's a bit more verose but it's infinitely clearer so I probably wouldn't use the singl in I think it",
    "start": "4242760",
    "end": "4249159"
  },
  {
    "text": "does complicate it does complicate things a lot so you avoid avoid using it but if it's being used in a package so",
    "start": "4249159",
    "end": "4255360"
  },
  {
    "text": "be it but don't try to get around a single pattern or try to try to break it",
    "start": "4255360",
    "end": "4260920"
  },
  {
    "text": "just let be it makes testing harder as well yeah it absolutely makes testing harder yeah often in tests you want to",
    "start": "4260920",
    "end": "4268120"
  },
  {
    "text": "try it with different config in that case or different state and you want to also be able to run your tests maybe in",
    "start": "4268120",
    "end": "4275320"
  },
  {
    "text": "parallel or concurrently uh and in different orders and stuff and if you've got this state that's sticking around",
    "start": "4275320",
    "end": "4282000"
  },
  {
    "text": "between them it's kind of uh awkward and can create interesting and strange weird",
    "start": "4282000",
    "end": "4287199"
  },
  {
    "text": "bugs that take a while if you avoid Global State Peter Bergen said it very well he said if I if I had to give five",
    "start": "4287199",
    "end": "4294400"
  },
  {
    "text": "pieces five words to a new go programmer they would be don't use Global State he",
    "start": "4294400",
    "end": "4301320"
  },
  {
    "text": "did he didn't even use the last word that's how confident that's how confident he is that that's right I",
    "start": "4301320",
    "end": "4306440"
  },
  {
    "text": "think it was do not no it wasn't he'd used the contraction and that and that's",
    "start": "4306440",
    "end": "4312320"
  },
  {
    "text": "Peter that's just ter English as well right it's just uh yeah I mean obviously",
    "start": "4312320",
    "end": "4317360"
  },
  {
    "text": "the only thing I would say to that is the asteris of unless you need it well yeah well no I mean like it's it",
    "start": "4317360",
    "end": "4324560"
  },
  {
    "text": "like that is 100% solid advice try to avoid it but like everything in life",
    "start": "4324560",
    "end": "4330040"
  },
  {
    "text": "like sometimes there might be a reason um like everything has a use case",
    "start": "4330040",
    "end": "4336360"
  },
  {
    "text": "otherwise it wouldn't be a pattern there were some bad patterns oh I agree I agree and I'm with I'm not arguing that",
    "start": "4336360",
    "end": "4344520"
  },
  {
    "text": "you should I I I do lots and lots of you know Live code things where I use Global",
    "start": "4344520",
    "end": "4350639"
  },
  {
    "text": "variables because it's convenient for doing things very quickly on the flight it's terrible for like maintainable code",
    "start": "4350639",
    "end": "4359280"
  },
  {
    "text": "Global steak smells very bad to me yeah it can be the solution to it can be as simple as just having a struct and",
    "start": "4359280",
    "end": "4365600"
  },
  {
    "text": "putting them all in there even just doing that really does help um I don't know that I I honestly don't think",
    "start": "4365600",
    "end": "4372000"
  },
  {
    "text": "there's a case where you have to use Global State I didn't say there was I just said you",
    "start": "4372000",
    "end": "4377159"
  },
  {
    "text": "might it's like don't yeah don't do it until you have to do it so you have to Yeah Yeah well yeah if someone's got but",
    "start": "4377159",
    "end": "4383560"
  },
  {
    "text": "you can use a Singleton pattern inside of a struct for example okay right like",
    "start": "4383560",
    "end": "4389199"
  },
  {
    "text": "I'm not say like we're talking Global State um everybody's just assuming that we're doing it at a global level doesn't",
    "start": "4389199",
    "end": "4395159"
  },
  {
    "text": "mean you can't use a Singleton pattern inside of code for other reasons it wouldn't be a Singleton pattern then",
    "start": "4395159",
    "end": "4401400"
  },
  {
    "text": "would it sure it would you wouldn't just have one of them no but uh you might absolutely do it if you're compiling uh",
    "start": "4401400",
    "end": "4407600"
  },
  {
    "text": "say A you you've got a bunch of data in your struct and you need to formulated something that's big and expensive and",
    "start": "4407600",
    "end": "4413159"
  },
  {
    "text": "it's only an operation it's ever going to do once you'd have a sync dot once in your struct you would do it you would",
    "start": "4413159",
    "end": "4418719"
  },
  {
    "text": "just return the cashed value at that point from but it's all still with contained it's not Global State anymore",
    "start": "4418719",
    "end": "4424120"
  },
  {
    "text": "that's why I'm saying like the pattern itself is not bad it's how we use the pattern that makes it bad Global State",
    "start": "4424120",
    "end": "4429880"
  },
  {
    "text": "makes the pattern bad the pattern itself doesn't make the pattern bad right right like you can still use it but try",
    "start": "4429880",
    "end": "4436440"
  },
  {
    "text": "not to do it globally right there are reasons I I use sync. once a lot inside of stuff and that is a Singleton pattern",
    "start": "4436440",
    "end": "4443679"
  },
  {
    "text": "sync. once enable Singleton so otherwise we'd never have sync. once right yeah well no I use sync",
    "start": "4443679",
    "end": "4451360"
  },
  {
    "text": "want in places where it's not then a Singleton but um yeah I see but it",
    "start": "4451360",
    "end": "4456560"
  },
  {
    "text": "enables the Singleton pattern very well I guess it does yeah so anyway so to",
    "start": "4456560",
    "end": "4461920"
  },
  {
    "text": "avoid Global State I think we all agree on that um but as a pattern you know",
    "start": "4461920",
    "end": "4467040"
  },
  {
    "text": "there are times you might want to use it you might also use Factory patterns a lot an occasion we don't use them in go",
    "start": "4467040",
    "end": "4472920"
  },
  {
    "text": "a lot but Java loves them they're just they have factories for factories over there um it's",
    "start": "4472920",
    "end": "4479320"
  },
  {
    "text": "amazing what they do must be massive it's like a factory factory service imple yeah yeah you need that uh I think",
    "start": "4479320",
    "end": "4486840"
  },
  {
    "text": "that's all we've got time for then I think so uh we need to choose a winner of the plush goer for the best question",
    "start": "4486840",
    "end": "4495040"
  },
  {
    "text": "I mean there's a standout winner for me but how do we want one of M no obviously",
    "start": "4495040",
    "end": "4502159"
  },
  {
    "text": "okay uh I like the uh what would a year chapter year in your life be I think do",
    "start": "4502159",
    "end": "4507520"
  },
  {
    "text": "we all agree that was a good question wasn't it yeah okay clearly not everybody agrees yeah there we",
    "start": "4507520",
    "end": "4514639"
  },
  {
    "text": "go Gotham let's show let's show them that uh that arm here that the Yankees are trying to recruit your Force throw",
    "start": "4514639",
    "end": "4521280"
  },
  {
    "text": "that over there to could you throw that over to come on on show us that arm come on really wind it",
    "start": "4521280",
    "end": "4527560"
  },
  {
    "text": "up there you go if Tom Brady ever runs out of the Patriots we're going to recruit you I just missed by the way you",
    "start": "4528120",
    "end": "4534679"
  },
  {
    "text": "missed oh then never mind we're not going to recruit you yeah no we doing you can go to the Yankees we're completely different sports team don't",
    "start": "4534679",
    "end": "4540400"
  },
  {
    "text": "forget it's a podcast yeah oh yeah we got it we got it CGI it in and go right",
    "start": "4540400",
    "end": "4545480"
  },
  {
    "text": "to the right place yeah they don't know they can't see I think yeah I think we have uh now run",
    "start": "4545480",
    "end": "4551480"
  },
  {
    "text": "out of time haven't we so what a great experience this was I mean this is don't forget this is not just a podcast this",
    "start": "4551480",
    "end": "4558480"
  },
  {
    "text": "is also an actual live event in real life which is this it's also uh being",
    "start": "4558480",
    "end": "4564760"
  },
  {
    "text": "live streamed it's going to be a video it's going to be a book we're going to try and get on Netflix it's going to be",
    "start": "4564760",
    "end": "4570560"
  },
  {
    "text": "you imagine you might have to watch this over and over again I mean what do you have to do so by the way if you do a",
    "start": "4570560",
    "end": "4575840"
  },
  {
    "text": "live podcast like this when Matt and I were planning it we may have forgotten to tell the panelists uh that there was",
    "start": "4575840",
    "end": "4582120"
  },
  {
    "text": "going to be an audience uh and it was going to be on YouTube so you can only imagine their",
    "start": "4582120",
    "end": "4588199"
  },
  {
    "text": "lovely face when we show oh yeah it's going to be fil filmed and live and Gotham's like what in a way the way I look at it is I",
    "start": "4588199",
    "end": "4595400"
  },
  {
    "text": "think among all the panelists the people who spoke the most were you both so enjoyed yeah that's about right I think",
    "start": "4595400",
    "end": "4602040"
  },
  {
    "text": "yeah well I mean it's obvious we shouldn't be organizing anything I mean that to me is",
    "start": "4602040",
    "end": "4608159"
  },
  {
    "text": "already obvious it's not it's to the point where it's so obvious it stops being our fault that's how think of it",
    "start": "4608159",
    "end": "4614199"
  },
  {
    "text": "so I do actually have one question about this um did people enjoy itview this again next year oh nice",
    "start": "4614199",
    "end": "4623880"
  },
  {
    "text": "okay okay I like it yeah well that we should do a proper closing of the show",
    "start": "4625000",
    "end": "4631080"
  },
  {
    "text": "because podcasts they at some point have to end you just want more more up no no",
    "start": "4631080",
    "end": "4636639"
  },
  {
    "text": "no I don't want that so the thing is Matt and I don't want to get off stage we're not on stage for the rest of the week uh except for when we're on stage",
    "start": "4636639",
    "end": "4642760"
  },
  {
    "text": "host in the conference for the rest of the week so we really like to yeah no I'm just trying to be professional and you keep interrupting me and stop me",
    "start": "4642760",
    "end": "4649159"
  },
  {
    "text": "from being professional yeah well cat why just close us off oh thank you",
    "start": "4649159",
    "end": "4654639"
  },
  {
    "text": "everyone for coming we hope you enjoy this and see most of you tomorrow thank you so much thank",
    "start": "4654639",
    "end": "4662360"
  },
  {
    "text": "you all right thank you for tuning in to this week's episode of go time if you're not yet hang with us in go for slack we",
    "start": "4669639",
    "end": "4676239"
  },
  {
    "text": "have a channel called go time FM look it up you'll find us hang with us during the live shows connect with other",
    "start": "4676239",
    "end": "4682440"
  },
  {
    "text": "members of the community share stories share code share coffee recipes whatever it's a lot of fun also we have",
    "start": "4682440",
    "end": "4689360"
  },
  {
    "text": "discussions at changel love.com on every episode head to changel love.com gotime",
    "start": "4689360",
    "end": "4694880"
  },
  {
    "text": "find this episode and discuss it with the community also thanks to fast the our bandwidth partner rbar for helping",
    "start": "4694880",
    "end": "4700840"
  },
  {
    "text": "us move fast and fix things and luno for hosting the change law platform our music is produced by the mysterious",
    "start": "4700840",
    "end": "4707360"
  },
  {
    "text": "breake master cylinder and if you want to hear more awesome podcasts like this subscribe to our Master feed it's one",
    "start": "4707360",
    "end": "4713360"
  },
  {
    "text": "feed to rule them all plus some extras that only hit the master feed and to change.com or search for change law",
    "start": "4713360",
    "end": "4720920"
  },
  {
    "text": "master in your podcast client you'll find us thanks for tuning in we'll see you next [Music]",
    "start": "4720920",
    "end": "4731920"
  },
  {
    "text": "week [Music]",
    "start": "4731920",
    "end": "4761590"
  },
  {
    "text": "TR [Music]",
    "start": "4761840",
    "end": "4775300"
  },
  {
    "text": "up",
    "start": "4776199",
    "end": "4779199"
  }
]