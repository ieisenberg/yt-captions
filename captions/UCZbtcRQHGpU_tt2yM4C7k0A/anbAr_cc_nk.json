[
  {
    "text": "[Music] let's do it it's go time welcome to go",
    "start": "7410",
    "end": "12679"
  },
  {
    "text": "time your source for wide ranging discussions from all around the go Community find us on the web at go time.",
    "start": "12679",
    "end": "20199"
  },
  {
    "text": "FM on the fediverse at gotime at Chang log. social and on X at gotime FM thanks",
    "start": "20199",
    "end": "26760"
  },
  {
    "text": "to our partners at fly.io the home of changel log.com launch your app as close to your users as possible find out how",
    "start": "26760",
    "end": "34280"
  },
  {
    "text": "at fly.io okay here we",
    "start": "34280",
    "end": "39239"
  },
  {
    "text": "go what's up friends I'm here with two new friends of mine from Speak Easy sear",
    "start": "40760",
    "end": "46160"
  },
  {
    "text": "bachu co-founder and CEO and George Hadar founding engineer so for the",
    "start": "46160",
    "end": "51360"
  },
  {
    "text": "uninitiated Speak Easy takes care of the entire SDK workflow to save you and your",
    "start": "51360",
    "end": "56399"
  },
  {
    "text": "team significant time delivering Enterprise grade SDK to your customers in minutes you can generate best inclass",
    "start": "56399",
    "end": "64198"
  },
  {
    "text": "sdks in typescript Python go Java C and",
    "start": "64199",
    "end": "69759"
  },
  {
    "text": "even PHP so sear what's your excitement level for apis and this API World we're",
    "start": "69759",
    "end": "76439"
  },
  {
    "text": "living in I'm super excited about apis I think we went to gen zero of the API",
    "start": "76439",
    "end": "83759"
  },
  {
    "text": "first Revolution and I think we're actually going to a second one now with the tail ends of the AI ecosystem kind",
    "start": "83759",
    "end": "89040"
  },
  {
    "text": "of causing that to be reinvigorated so yeah super super psyched to be working in this space right now I think it's",
    "start": "89040",
    "end": "94920"
  },
  {
    "text": "everyone's at a point that where everyone knows about rest apis and graphql apis and GPC apis and now I",
    "start": "94920",
    "end": "101079"
  },
  {
    "text": "think we're actually getting into the second phase of that which is how do people ship great developer experience",
    "start": "101079",
    "end": "107320"
  },
  {
    "text": "in addition to the apis and how do we build like truly best-in-class apis that turn into they long the infrastructure",
    "start": "107320",
    "end": "114439"
  },
  {
    "text": "right this is kind of the the vision I think that stripe helped manifest for everyone in the fex space which is the",
    "start": "114439",
    "end": "121119"
  },
  {
    "text": "the an API that really sets the bar for developer experience but also like it's something you can truly rely on right",
    "start": "121119",
    "end": "127479"
  },
  {
    "text": "it's it's a true fing stripe a dependency of your company you can feel confident doing that and I think that's",
    "start": "127479",
    "end": "133560"
  },
  {
    "text": "that's a part of api2 that really excites me I agree that is exciting so George teams who leverage Speak Easy are",
    "start": "133560",
    "end": "140440"
  },
  {
    "text": "those who have leaned all the way in on documenting a solid open API spec and",
    "start": "140440",
    "end": "146319"
  },
  {
    "text": "mostly want to be hands off of their sdks is that right precisely so you're",
    "start": "146319",
    "end": "151360"
  },
  {
    "text": "coming to us because you want to be hands off from that process you want to put all of your effort into documenting",
    "start": "151360",
    "end": "158120"
  },
  {
    "text": "your API and then you're trusting and relying on great quality tooling to turn that into code and documentation which",
    "start": "158120",
    "end": "164840"
  },
  {
    "text": "is what we're doing for you you're not meant to change or edit the code because it will be regenerated the next time you",
    "start": "164840",
    "end": "171519"
  },
  {
    "text": "change your open API so you ultimately put it in our hands once you've committed the changes to your open API",
    "start": "171519",
    "end": "177760"
  },
  {
    "text": "it's it's Off to the Races and you get a new release of your SDK you get a pull request to review you will you will have",
    "start": "177760",
    "end": "183640"
  },
  {
    "text": "the opportunity to look at the contents of the code but quite often you can let it hum along creating sdks for you or",
    "start": "183640",
    "end": "190560"
  },
  {
    "text": "new releases of your SDK every time you change your API very cool well the thing",
    "start": "190560",
    "end": "195599"
  },
  {
    "text": "that got me with Speak Easy that really helped me understand it was that as George said it is hands off you can just",
    "start": "195599",
    "end": "201080"
  },
  {
    "text": "focus on documenting your API via the open API spec and you still have pull",
    "start": "201080",
    "end": "206280"
  },
  {
    "text": "requests you still have visibility and in fact they will even hop been to P request with you to triage any sort of",
    "start": "206280",
    "end": "212920"
  },
  {
    "text": "anomalies or issues that come from the SDK generation and improve the back end",
    "start": "212920",
    "end": "218879"
  },
  {
    "text": "of Speak Easy to make future releases better for you I think this is so cool for teams who want to just be hands off",
    "start": "218879",
    "end": "225599"
  },
  {
    "text": "of their sdks and focus on their product focus on the core documentation around",
    "start": "225599",
    "end": "231239"
  },
  {
    "text": "the open API spec but still have all that awesome visibility okay so the next",
    "start": "231239",
    "end": "236480"
  },
  {
    "text": "step is to go to Speak Easy API not Dev you can start off with one free SDK",
    "start": "236480",
    "end": "243400"
  },
  {
    "text": "that's so cool because you can go there right now and try it out completely free one free SDK let them know the change",
    "start": "243400",
    "end": "251480"
  },
  {
    "text": "log sent you let them know JS party sent you once again Speak Easy API dodev",
    "start": "251480",
    "end": "257510"
  },
  {
    "text": "[Music]",
    "start": "257510",
    "end": "263660"
  },
  {
    "text": "[Music]",
    "start": "265720",
    "end": "271970"
  },
  {
    "text": "hello everyone and welcome to another episode of go time my name is Natalie and I'm here with Jesus Jesus or Jesus",
    "start": "274880",
    "end": "282080"
  },
  {
    "text": "Jesus Jesus okay Jesus Espino joining us from mattermost and he's here to you are",
    "start": "282080",
    "end": "288000"
  },
  {
    "text": "here to talk about the AHA moments you got from reading the source code have you been doing go for long yeah I've",
    "start": "288000",
    "end": "294600"
  },
  {
    "text": "been doing go for around seven years already so yeah quite long not not a lot",
    "start": "294600",
    "end": "300759"
  },
  {
    "text": "how how did you start why well I started because I start get interested in in the",
    "start": "300759",
    "end": "306400"
  },
  {
    "text": "language itself yeah there's I had a friend that she was learning go and she was very excited about the language and",
    "start": "306400",
    "end": "312919"
  },
  {
    "text": "she sh with the cool things that you can find in go and I start getting interested I start practicing and",
    "start": "312919",
    "end": "318680"
  },
  {
    "text": "actually I start contributing to open source projects one of them was MOS and",
    "start": "318680",
    "end": "324479"
  },
  {
    "text": "like six months later I start working for MOS actually so it was a very very",
    "start": "324479",
    "end": "330360"
  },
  {
    "text": "timing nice what language were you switching from I I come from python I",
    "start": "330360",
    "end": "335919"
  },
  {
    "text": "was using python for around 10 years before that so do you still use python or completely all go time to time I I",
    "start": "335919",
    "end": "343880"
  },
  {
    "text": "use it is it's a nice language also it's I like go more but python is a great",
    "start": "343880",
    "end": "349919"
  },
  {
    "text": "language and for very specific use case I still use Python like writing AI",
    "start": "349919",
    "end": "355000"
  },
  {
    "text": "models yeah playing with playing with AI is one of them probably some small",
    "start": "355000",
    "end": "360400"
  },
  {
    "text": "scripting things uh or maybe even some small res API very very small res API",
    "start": "360400",
    "end": "367599"
  },
  {
    "text": "with bottle or or flask or things like that so very small things nothing",
    "start": "367599",
    "end": "373080"
  },
  {
    "text": "nothing big but yeah I still use it nice um let's start talking about the the 10",
    "start": "373080",
    "end": "378960"
  },
  {
    "text": "aha moments that you got from reading the ghost source code how did that even come to be yeah well this is um I I I",
    "start": "378960",
    "end": "386759"
  },
  {
    "text": "really like to to know deeply my my tools the things I use the things",
    "start": "386759",
    "end": "392639"
  },
  {
    "text": "that I I work with every day and things like that in the past in in my python",
    "start": "392639",
    "end": "398720"
  },
  {
    "text": "background I like to to give talks and things like that and get into the",
    "start": "398720",
    "end": "404360"
  },
  {
    "text": "details and back then I investigated around how the python objects Works",
    "start": "404360",
    "end": "411759"
  },
  {
    "text": "under the hood and things like that how they the different python objects that were built in in the in the language",
    "start": "411759",
    "end": "418840"
  },
  {
    "text": "were working and and all that kind of stuff I prepared a talk I did a talk actually in",
    "start": "418840",
    "end": "424120"
  },
  {
    "text": "in some conference about that but then when I switched to go I start fresh I",
    "start": "424120",
    "end": "429280"
  },
  {
    "text": "didn't know anything at that level I start to learn the language I start learning the language and start getting",
    "start": "429280",
    "end": "436039"
  },
  {
    "text": "confidence with it and there was a point in 2020 21 or something like that that I",
    "start": "436039",
    "end": "444160"
  },
  {
    "text": "felt confident enough to start investigating for preparing a talk and",
    "start": "444160",
    "end": "449599"
  },
  {
    "text": "one of the things that I investigated was exactly the same how certain built-in objects Works in in go and",
    "start": "449599",
    "end": "458160"
  },
  {
    "text": "where that object is where the slices maps and channels because we're like the bread and butter of go so I start",
    "start": "458160",
    "end": "467520"
  },
  {
    "text": "investigating probably half the pop quizzes I'm seeing are usually around slices of rays and such yeah yeah that's",
    "start": "467520",
    "end": "473879"
  },
  {
    "text": "a that's a fun one they're tricky and understanding how they work in the hood is is interesting",
    "start": "473879",
    "end": "480319"
  },
  {
    "text": "and that where that's where that was my first um my first attempt to start",
    "start": "480319",
    "end": "486280"
  },
  {
    "text": "reading the ghost sod in here and there was relatively targeted so it was kind",
    "start": "486280",
    "end": "492240"
  },
  {
    "text": "of simpler that time I prepar a talk I give that talk in the in the F them for",
    "start": "492240",
    "end": "497800"
  },
  {
    "text": "first time so uh what really great give me a lot of insights about about how how",
    "start": "497800",
    "end": "504759"
  },
  {
    "text": "channels actually work and how slices and Maps work and even some small sneak",
    "start": "504759",
    "end": "511800"
  },
  {
    "text": "peek on how goru things works so it's what was an interesting experiment and",
    "start": "511800",
    "end": "517518"
  },
  {
    "text": "that is how I started then I just keep going I I use",
    "start": "517519",
    "end": "523959"
  },
  {
    "text": "conferences and and public speaking as an excuse to learn things that I want to learn so I prepare a talk and then I I",
    "start": "523959",
    "end": "532240"
  },
  {
    "text": "have to learn something to the degree that I can give a talk and I can answer",
    "start": "532240",
    "end": "537680"
  },
  {
    "text": "the questions that sometimes really hard so yeah it's how how we get into that so",
    "start": "537680",
    "end": "544120"
  },
  {
    "text": "the 10A moments comes from the exploration that keeps going preparing",
    "start": "544120",
    "end": "549480"
  },
  {
    "text": "other talks that if you want we can keep talking about it yes and",
    "start": "549480",
    "end": "555399"
  },
  {
    "text": "also already here episode number two part number two of this one do you want to start with the first biggest aha",
    "start": "555399",
    "end": "561959"
  },
  {
    "text": "moment how would you would you go would would you go about that the biggest the most impressive ones or the most uh chronologically like the the order of",
    "start": "561959",
    "end": "568680"
  },
  {
    "text": "that yeah think I like the chronological approach because it's kind of easier for",
    "start": "568680",
    "end": "573959"
  },
  {
    "text": "understanding my head and probably explain sometimes why is an a h moment and the first one for me is is exactly",
    "start": "573959",
    "end": "581959"
  },
  {
    "text": "about the slices maps and channels and specifically about the slic that was how slices are implemented in the hood",
    "start": "581959",
    "end": "589000"
  },
  {
    "text": "because H when I started writing though you I was said that you have slices and",
    "start": "589000",
    "end": "595920"
  },
  {
    "text": "the slices are immutable and then you just happen things to that slices and",
    "start": "595920",
    "end": "601720"
  },
  {
    "text": "then you get a appended version of the slice um the thing is that sounds really",
    "start": "601720",
    "end": "608440"
  },
  {
    "text": "really inefficient it's looks like it's has to be inefficient how in the hell you are you doing that to make it that",
    "start": "608440",
    "end": "615320"
  },
  {
    "text": "efficient then you realize what when you start investigating the code you start realizing how they are doing it and it's",
    "start": "615320",
    "end": "622360"
  },
  {
    "text": "really smart you are slices are not slices just sort of pointers and counters the real data is a sore under",
    "start": "622360",
    "end": "630120"
  },
  {
    "text": "the hood in an array and that array is is changing in size and it's",
    "start": "630120",
    "end": "635320"
  },
  {
    "text": "automatically managed for you and the growing of the slice or the growing of",
    "start": "635320",
    "end": "641279"
  },
  {
    "text": "the underneath array is not something like I going to add one at one at one is",
    "start": "641279",
    "end": "647079"
  },
  {
    "text": "is normally doubling the size of the previous array H to store more data and",
    "start": "647079",
    "end": "652680"
  },
  {
    "text": "then you because of that you understand why you should be pre-allocating uh the",
    "start": "652680",
    "end": "659440"
  },
  {
    "text": "a right size all that kind of stuff was one of my first aha moment was like oh",
    "start": "659440",
    "end": "665800"
  },
  {
    "text": "so that's the reason why is efficient it's really a smart approach actually then you have some pitfalls that you you",
    "start": "665800",
    "end": "673920"
  },
  {
    "text": "know because you know how is implemented under the hood but there are some pitfalls around that approach that is",
    "start": "673920",
    "end": "680639"
  },
  {
    "text": "using multiple slices that points to the same array and some of them and one of",
    "start": "680639",
    "end": "685880"
  },
  {
    "text": "them get resized were connected before because we're accessing the same underneath array but suddenly they are",
    "start": "685880",
    "end": "693200"
  },
  {
    "text": "not connected anymore so it's kind of a weird behavior that is it's unexpected I",
    "start": "693200",
    "end": "699760"
  },
  {
    "text": "guess if you don't understand the implementation details but yeah that was my first one the the my first s moment",
    "start": "699760",
    "end": "707000"
  },
  {
    "text": "was like oh then that is how they make this efficient and make this work",
    "start": "707000",
    "end": "712160"
  },
  {
    "text": "smoothly so were you comparing it to what you know from other languages or was it more like this is the first time",
    "start": "712160",
    "end": "719440"
  },
  {
    "text": "that for AR raise I'm focusing on how's it done out of the hood yeah I think I",
    "start": "719440",
    "end": "724760"
  },
  {
    "text": "think from python was uh very similar it's not the same because in Python I'm",
    "start": "724760",
    "end": "733480"
  },
  {
    "text": "not 100% sure in Python they are not appending things you are saying hey I have a a a list of elements and I adding",
    "start": "733480",
    "end": "741399"
  },
  {
    "text": "things to that list so you semantically you are understanding that you are adding things to the list under the",
    "start": "741399",
    "end": "747920"
  },
  {
    "text": "hoodie if I called correctly is pretty similar the behavior is just an array of",
    "start": "747920",
    "end": "753519"
  },
  {
    "text": "memory that keep doubling and the and you have this pointer and these counters that give you the lens and the capacity",
    "start": "753519",
    "end": "760760"
  },
  {
    "text": "all that is almost exactly the same if I recall correctly I I don't have the",
    "start": "760760",
    "end": "766000"
  },
  {
    "text": "python implementation refresh yeah of course it's been a we're not talking",
    "start": "766000",
    "end": "771079"
  },
  {
    "text": "about the the focus of a of go of python source code I'm I'm just curious if you",
    "start": "771079",
    "end": "776639"
  },
  {
    "text": "generally in were focusing on on the same topic for other languages or was go",
    "start": "776639",
    "end": "781880"
  },
  {
    "text": "kind of where you started really diving into this no I I I I start in Python",
    "start": "781880",
    "end": "788240"
  },
  {
    "text": "before and then I started with go because I was using go every day so the",
    "start": "788240",
    "end": "793639"
  },
  {
    "text": "the the whole point was is a tool that I use every day I want to understand it better that's the reason why I did that",
    "start": "793639",
    "end": "801320"
  },
  {
    "text": "in Python before I want to do that with all the tools that I I I use I did that with G in the past I want to do that",
    "start": "801320",
    "end": "809600"
  },
  {
    "text": "with pogress in the future but yeah it's something that I want to do I don't know",
    "start": "809600",
    "end": "814959"
  },
  {
    "text": "if it's going I going to do it's it's a matter of time and sometimes hard to find the time for that but yeah yeah",
    "start": "814959",
    "end": "821800"
  },
  {
    "text": "it's like a Advent of a diving into code can be a fun project instead of solving",
    "start": "821800",
    "end": "827720"
  },
  {
    "text": "challenges like in advance of code actually reading somebody else's code and learning those things yeah your",
    "start": "827720",
    "end": "834720"
  },
  {
    "text": "Year's list yeah yeah it's it's challenging I have to say that go helps",
    "start": "834720",
    "end": "839959"
  },
  {
    "text": "a lot there go is a great language to to read because it's Feels Like Home",
    "start": "839959",
    "end": "847120"
  },
  {
    "text": "everywhere of course the algorithms and the the complexity of the different projects it's it's different and reading",
    "start": "847120",
    "end": "854800"
  },
  {
    "text": "a compiler source code it's it's a tough thing because it's a compiler the",
    "start": "854800",
    "end": "861120"
  },
  {
    "text": "complexity of a compiler is already big off to to be challenging but at the same",
    "start": "861120",
    "end": "866959"
  },
  {
    "text": "time you see the same kind of styling everywhere the code is it's it's kind of",
    "start": "866959",
    "end": "874199"
  },
  {
    "text": "familiar okay this is an if error whatever then Neil whatever all that",
    "start": "874199",
    "end": "881040"
  },
  {
    "text": "things are kind of the same so you feel it feels less weird than other languages",
    "start": "881040",
    "end": "888279"
  },
  {
    "text": "where every project have its own styling yeah yeah very much goes to our human",
    "start": "888279",
    "end": "893759"
  },
  {
    "text": "need for pattern recognition for sure yeah exactly I agree okay so you say",
    "start": "893759",
    "end": "898920"
  },
  {
    "text": "that that the arrays implementation uh was was making sense and was a little",
    "start": "898920",
    "end": "904839"
  },
  {
    "text": "bit familiar also speaking to your pattern recognition as well yeah so no",
    "start": "904839",
    "end": "909959"
  },
  {
    "text": "and what's interesting that at the end of the day most of the implementation so for example slices and Maps is not like",
    "start": "909959",
    "end": "916560"
  },
  {
    "text": "super weird implementation you can find very similar implementations other languages it's it's just a relatively",
    "start": "916560",
    "end": "924240"
  },
  {
    "text": "standard implementation of certain things there's details on on for example Maps that can be different than other",
    "start": "924240",
    "end": "930360"
  },
  {
    "text": "languages for example in in go Maps uh keys are unsorted and are unsorted on",
    "start": "930360",
    "end": "937959"
  },
  {
    "text": "purpose actually they are unsorted on purpose up to the level that every single map have a random seat for the",
    "start": "937959",
    "end": "945880"
  },
  {
    "text": "for the keys so it's two different maps with the same keys and the same values are going to be ordered differently so",
    "start": "945880",
    "end": "953199"
  },
  {
    "text": "it's it's kind of it's on purpose it's by Design but at the end of the day most of the languages have its own own",
    "start": "953199",
    "end": "959199"
  },
  {
    "text": "implementation of these kind of things and they are all most of them are kind of similar around hashmaps and slies and",
    "start": "959199",
    "end": "967440"
  },
  {
    "text": "all that stuff okay how about uh the second AA moment okay next next step one",
    "start": "967440",
    "end": "974399"
  },
  {
    "text": "of the things that I was intrigued about go because it's one of the key things is",
    "start": "974399",
    "end": "980959"
  },
  {
    "text": "um go routines is something that everybody wants in go everybody loves in go and I do want to understand better",
    "start": "980959",
    "end": "988519"
  },
  {
    "text": "what a go routine is and how it works and I start digging into the into the",
    "start": "988519",
    "end": "993680"
  },
  {
    "text": "source code and start investigating how the G routines works and the Hood from the perspective of the goutin how of the",
    "start": "993680",
    "end": "1001199"
  },
  {
    "text": "life cycle of the goutin and actually for that I prepare another talk that is",
    "start": "1001199",
    "end": "1007360"
  },
  {
    "text": "called the sacred life of a g routine and that in that talk what I I try to do",
    "start": "1007360",
    "end": "1014800"
  },
  {
    "text": "is follow the process of when a go routine is created how it's created and",
    "start": "1014800",
    "end": "1020680"
  },
  {
    "text": "what are the steps that the goutin goes through and how it changed from one from",
    "start": "1020680",
    "end": "1026120"
  },
  {
    "text": "one state to another and what are the reasoning around that changes and one of",
    "start": "1026120",
    "end": "1031480"
  },
  {
    "text": "the things that I discovered while I was doing that was it's something that I already have the kind of the intuition",
    "start": "1031480",
    "end": "1038360"
  },
  {
    "text": "around that or the understanding about that that is go routines are Cooperative",
    "start": "1038360",
    "end": "1044319"
  },
  {
    "text": "but whenever I start seeing the code was more obvious an evidence that it's a",
    "start": "1044319",
    "end": "1050440"
  },
  {
    "text": "Cooperative approach in threats in operating system threats you have the operating system deciding when to cut",
    "start": "1050440",
    "end": "1056360"
  },
  {
    "text": "something and and assign another thread to the to the processor in go the G in",
    "start": "1056360",
    "end": "1062360"
  },
  {
    "text": "itself is the responsible of saying hey I have to stop just I going to call the",
    "start": "1062360",
    "end": "1068360"
  },
  {
    "text": "scheduler to I going to stop myself call the scheduler to select another task or",
    "start": "1068360",
    "end": "1073559"
  },
  {
    "text": "another go routine and the go routine is going to start running not only that the go r i i stop myself because I waiting",
    "start": "1073559",
    "end": "1080280"
  },
  {
    "text": "for something and the one that is going to wake me up is another go routine for",
    "start": "1080280",
    "end": "1085919"
  },
  {
    "text": "example whenever to you send something to a channel and it's some another go routin waiting it's you are going to",
    "start": "1085919",
    "end": "1092919"
  },
  {
    "text": "waake the go routin that is sending to that channel is going to wake up the other go routine so they are collaborating together to do all the",
    "start": "1092919",
    "end": "1100200"
  },
  {
    "text": "processing there's some special go routines like the system monitor go routine that is um is doing certain",
    "start": "1100200",
    "end": "1107240"
  },
  {
    "text": "things or the the net that also it's kind of monitoring certain things for",
    "start": "1107240",
    "end": "1113080"
  },
  {
    "text": "for getting back that goroutines whenever they finished but in general the goroutines are waking up each other",
    "start": "1113080",
    "end": "1119960"
  },
  {
    "text": "or are sleeping by themselves and calling the Schuler to select another goroutine so that Cooperative nature of",
    "start": "1119960",
    "end": "1126200"
  },
  {
    "text": "the G routines is something that I found very interesting and was an AA moment",
    "start": "1126200",
    "end": "1131720"
  },
  {
    "text": "for me also yeah so you said the previous one the AR raise one made a lot of sense does this one Mak a lot of",
    "start": "1131720",
    "end": "1137720"
  },
  {
    "text": "sense would you have done it somehow differently I think it's kind of a natural way of doing that whenever you",
    "start": "1137720",
    "end": "1143600"
  },
  {
    "text": "are doing core routines that is it's not exactly the same Accord routin that what",
    "start": "1143600",
    "end": "1148919"
  },
  {
    "text": "ghost have but it's this kind of Cooperative approach where you have you",
    "start": "1148919",
    "end": "1154240"
  },
  {
    "text": "have one single thread and you have to decide when to change to one or another",
    "start": "1154240",
    "end": "1159640"
  },
  {
    "text": "and it's it's just easier if you let the the go routines collaborate than if you",
    "start": "1159640",
    "end": "1165919"
  },
  {
    "text": "have to put another process on top of that orchestrating all of the algorithms",
    "start": "1165919",
    "end": "1171799"
  },
  {
    "text": "because actually the Schuler the go Schuler is not another process it's not",
    "start": "1171799",
    "end": "1177159"
  },
  {
    "text": "another go routin it's nothing like that the go schul is a chunk of code that the",
    "start": "1177159",
    "end": "1182799"
  },
  {
    "text": "go routin that is going to sleep or the G that finished his work and is going to go to that it's going to call the",
    "start": "1182799",
    "end": "1189559"
  },
  {
    "text": "schedular code and the schedular code it's going to transfer somehow transfer",
    "start": "1189559",
    "end": "1195360"
  },
  {
    "text": "the execution to the to the Schuler the Schuler executes and select another",
    "start": "1195360",
    "end": "1200720"
  },
  {
    "text": "gortin and transfer to that gortin execution so it's just a chunk of code that transition from one go into another",
    "start": "1200720",
    "end": "1208120"
  },
  {
    "text": "it's it's it's pretty cool actually it's it's super interesting code I don't know if I answer your question actually yeah",
    "start": "1208120",
    "end": "1215280"
  },
  {
    "text": "yeah yeah yeah yeah another philosophical question a little bit um as a background for the question have",
    "start": "1215280",
    "end": "1221280"
  },
  {
    "text": "you watched Rick and Morty do you know the concept of a Mr myix oh no I don't",
    "start": "1221280",
    "end": "1226840"
  },
  {
    "text": "sorry so the there there is a concept of a little blue creatures that is called Mr myix and it's very I found it super",
    "start": "1226840",
    "end": "1233520"
  },
  {
    "text": "helpful to understand this concept also of like spinning up a task that has to do exactly one thing and then it dies I",
    "start": "1233520",
    "end": "1240880"
  },
  {
    "text": "think it probably there's some developers and the creators of the show because I found lots of similarity and then when AI came and the concept of",
    "start": "1240880",
    "end": "1248880"
  },
  {
    "text": "Agents autonomous agents in the world of AI not the world of software it's also a little bit similar in the sense that AI",
    "start": "1248880",
    "end": "1255400"
  },
  {
    "text": "agent gets a task and then it spins off subtask TS and then it finishes the task and kind of bubbles up to report so I",
    "start": "1255400",
    "end": "1263120"
  },
  {
    "text": "kind of see similarity between the three of them and I hope that in those two and a half sentences I explained enough of",
    "start": "1263120",
    "end": "1270039"
  },
  {
    "text": "this logic to you but uh this will be my guiding question kind of throughout our conversation on the aha moment because I",
    "start": "1270039",
    "end": "1277840"
  },
  {
    "text": "like finding lots of equivalence between our current day software and what I try",
    "start": "1277840",
    "end": "1283679"
  },
  {
    "text": "to imagine AI based software will be so this is kind of I don't know you're not",
    "start": "1283679",
    "end": "1289720"
  },
  {
    "text": "familiar with Rick and morti I get that that's uh probably better have you played at all with AI",
    "start": "1289720",
    "end": "1297080"
  },
  {
    "text": "agents what do you have enough experience to say an opinion about this or not yet not yet actually I I haven't",
    "start": "1297080",
    "end": "1303640"
  },
  {
    "text": "played I don't know what you mean with an AI agent so that's autonomous agents",
    "start": "1303640",
    "end": "1309440"
  },
  {
    "text": "is a better name yeah I guess it's something like you ask a to realize a",
    "start": "1309440",
    "end": "1314559"
  },
  {
    "text": "task and is going to use a external res sources of external actions to fulfill",
    "start": "1314559",
    "end": "1321200"
  },
  {
    "text": "the task something like that I guess it uh basically the AI goes and and decides",
    "start": "1321200",
    "end": "1326760"
  },
  {
    "text": "what is the subt like you give it a goal it breaks it down to subtasks and then it spins off manyi AIS to execute those",
    "start": "1326760",
    "end": "1334159"
  },
  {
    "text": "tasks let's say which is very very similar to that concept",
    "start": "1334159",
    "end": "1339240"
  },
  {
    "text": "yeah yeah could be yeah no I I I don't I",
    "start": "1339240",
    "end": "1344760"
  },
  {
    "text": "it's hard for me because I I like AI I have I have used it but I'm not very",
    "start": "1344760",
    "end": "1350240"
  },
  {
    "text": "into very deep into that but yeah I I think there are similarities at the end",
    "start": "1350240",
    "end": "1355840"
  },
  {
    "text": "of the day what gorin are is is just processes that are AR can independent as",
    "start": "1355840",
    "end": "1362200"
  },
  {
    "text": "up to certain degree they have a task they have to realize that task and they they they are kind of independent from",
    "start": "1362200",
    "end": "1368720"
  },
  {
    "text": "the rest of the of the gortin there is a actually what is something like for some",
    "start": "1368720",
    "end": "1373960"
  },
  {
    "text": "people it's weird is gortin doesn't have a parent if I recall correctly so a gortin is a gortin there's no",
    "start": "1373960",
    "end": "1380320"
  },
  {
    "text": "relationship with three goroutines you can execute thousands of goroutines and they are not related to each other not",
    "start": "1380320",
    "end": "1386039"
  },
  {
    "text": "even with a parent or the ex or the the one that pawn it so I don't know I think",
    "start": "1386039",
    "end": "1391679"
  },
  {
    "text": "I'm a bit lost with your questions to be yeah yeah well just to it's even more",
    "start": "1391679",
    "end": "1397279"
  },
  {
    "text": "like a opinion than a than a question but just to confuse a bit more and then we move on to number three another",
    "start": "1397279",
    "end": "1405120"
  },
  {
    "text": "similarity that I see there is also to the concept of threads in the um in processors I know how much you got a",
    "start": "1405120",
    "end": "1412240"
  },
  {
    "text": "chance to dive into like a like operating system breaking down things into telling the different processors",
    "start": "1412240",
    "end": "1419120"
  },
  {
    "text": "how they run around their task and so on but there's also like now you have a threat and so on so it's also I see some",
    "start": "1419120",
    "end": "1425559"
  },
  {
    "text": "similarity in those concept and I I personally find it really cool that it kind of goes between the different",
    "start": "1425559",
    "end": "1431960"
  },
  {
    "text": "different fields that have something to do with each other but not fully yeah just an observation it's not a question",
    "start": "1431960",
    "end": "1437520"
  },
  {
    "text": "if you have experienced there I'm happy to hear your thoughts if not tell us about number in in in threats and the",
    "start": "1437520",
    "end": "1443679"
  },
  {
    "text": "difference between threats and gtin or something like that or yeah do you want to chat about that yeah well now it's",
    "start": "1443679",
    "end": "1449279"
  },
  {
    "text": "interesting how it's solved in in the in the go around time it's it's basically",
    "start": "1449279",
    "end": "1454760"
  },
  {
    "text": "they abstract you from the operating system Trends and call them CPUs actually processors actually and then",
    "start": "1454760",
    "end": "1461320"
  },
  {
    "text": "that processors gets assigned to different goroutines but the goroutines and the processors are not highly",
    "start": "1461320",
    "end": "1467240"
  },
  {
    "text": "coupled so they can they normally have certain certain H tendency to execute in",
    "start": "1467240",
    "end": "1474360"
  },
  {
    "text": "the same processor on the same operating Sy and threat but it's not necessarily it's not mandatory at all for the Gin so",
    "start": "1474360",
    "end": "1483000"
  },
  {
    "text": "the Gin can execute in different operating system threat so it's a very smart approach that decouple the the CPU",
    "start": "1483000",
    "end": "1490000"
  },
  {
    "text": "and the and the gtins or the operating syst and threat and theorin and allows you to execute at full capacity it of",
    "start": "1490000",
    "end": "1499039"
  },
  {
    "text": "your processors using that architecture because yeah because if a CPU is",
    "start": "1499039",
    "end": "1505640"
  },
  {
    "text": "overloaded you can take the Goldin from other CPU and start executing in the one that is more free things like that so",
    "start": "1505640",
    "end": "1513200"
  },
  {
    "text": "it's it's a it's very cool how go abstract you from CPUs operating system",
    "start": "1513200",
    "end": "1519159"
  },
  {
    "text": "threats and and the ging so it's it's pretty cool yep yep and efficient so",
    "start": "1519159",
    "end": "1525600"
  },
  {
    "text": "what is your number three at a moment okay number three oh well this this was",
    "start": "1525600",
    "end": "1530840"
  },
  {
    "text": "a kind of silly one I was investigating around the I was investigating a uh the",
    "start": "1530840",
    "end": "1538039"
  },
  {
    "text": "compiler and one of the things that I I start investigating was the the process",
    "start": "1538039",
    "end": "1543200"
  },
  {
    "text": "for tokenizing and parsing and whenever I start reading the parser I just",
    "start": "1543200",
    "end": "1549679"
  },
  {
    "text": "realized that was obvious in anyway but I realize that whatever is in the parer",
    "start": "1549679",
    "end": "1556440"
  },
  {
    "text": "in the as3 is what you can have in a go file",
    "start": "1556440",
    "end": "1561760"
  },
  {
    "text": "there's nothing else so if you start seeing how the as3 the abst sytax 3 for",
    "start": "1561760",
    "end": "1568279"
  },
  {
    "text": "go is generated you are going to see that is one ABS syntax 3 per file and",
    "start": "1568279",
    "end": "1575600"
  },
  {
    "text": "it's going to have an import a set of declarations and a set of imports and a",
    "start": "1575600",
    "end": "1583159"
  },
  {
    "text": "declaration can be a constant a variable a function and a type and that's it",
    "start": "1583159",
    "end": "1589320"
  },
  {
    "text": "there's nothing else that can be in a file so what's kind of a sensation of",
    "start": "1589320",
    "end": "1594919"
  },
  {
    "text": "complete understanding of something and say okay now I know where is the boundaries so everything it's inside",
    "start": "1594919",
    "end": "1603279"
  },
  {
    "text": "these boundaries there's nothing else that can go in a file so there's nothing that I I'm missing constants variables",
    "start": "1603279",
    "end": "1611559"
  },
  {
    "text": "functions and types and the import and the package name that's everything and",
    "start": "1611559",
    "end": "1618000"
  },
  {
    "text": "what probably is kind of silly but for me was was like an a half moment so it was like oh that that's it of course",
    "start": "1618000",
    "end": "1624919"
  },
  {
    "text": "then you have the body of the functions and all that stuff and there's a lot of stuff that goes there but but yeah",
    "start": "1624919",
    "end": "1631120"
  },
  {
    "text": "inside a file you only have that that things this makes me think of uh how in",
    "start": "1631120",
    "end": "1636799"
  },
  {
    "text": "C there is the I think it's in C that you have the header file and you have the code file right it's kind of similar",
    "start": "1636799",
    "end": "1644880"
  },
  {
    "text": "let's scope our little universe but this is scoping it for that file but it's it's kind of like",
    "start": "1644880",
    "end": "1650440"
  },
  {
    "text": "knowing that this is everything that's included there yeah it's kind of like that exactly is you have a clear",
    "start": "1650440",
    "end": "1657480"
  },
  {
    "text": "definition of what can go there it's not exactly the same because in the H file",
    "start": "1657480",
    "end": "1663080"
  },
  {
    "text": "you are saying hey these are the functions that I decare it's kind of publishing this is the public interface",
    "start": "1663080",
    "end": "1670320"
  },
  {
    "text": "but at the same time is it's like okay yeah if I understand the H file in theory I should be able to use it and",
    "start": "1670320",
    "end": "1678279"
  },
  {
    "text": "should be able to understand all the all the boundaries so yeah and you say that",
    "start": "1678279",
    "end": "1684399"
  },
  {
    "text": "what you liked more more than that this is like defining scoping it for this file it's kind of scoping it for go in",
    "start": "1684399",
    "end": "1690559"
  },
  {
    "text": "general that this is your entire toolbox and there will be no surprises it's like",
    "start": "1690559",
    "end": "1695799"
  },
  {
    "text": "not keywords but tool toolbox really yeah there's there's nothing else if if",
    "start": "1695799",
    "end": "1702080"
  },
  {
    "text": "if you think oh could I execute a Chun of code inside inside the main file but",
    "start": "1702080",
    "end": "1710360"
  },
  {
    "text": "outside the function no you can't that's it that's it's a variable declaration",
    "start": "1710360",
    "end": "1716200"
  },
  {
    "text": "then you can it's a constant then you can but it's not that it's not a type",
    "start": "1716200",
    "end": "1721760"
  },
  {
    "text": "definition or a or a function you can't there's no representation for that you",
    "start": "1721760",
    "end": "1727880"
  },
  {
    "text": "can't represent that in the as now there are the pragmas and this kind of but",
    "start": "1727880",
    "end": "1734080"
  },
  {
    "text": "they are comments that are handled in a smart way but at the end of the day the the EST is",
    "start": "1734080",
    "end": "1741440"
  },
  {
    "text": "just that there's nothing else that you can represent with that sounds like it it has not been a talk yet this aha",
    "start": "1741440",
    "end": "1748240"
  },
  {
    "text": "moment not really it's there's a talk the the aha moment comes from a from",
    "start": "1748240",
    "end": "1753399"
  },
  {
    "text": "another talk that I Was preparing actually that was the the time I Was",
    "start": "1753399",
    "end": "1758840"
  },
  {
    "text": "preparing the under s Diego compiler actually was called hell word from the",
    "start": "1758840",
    "end": "1764120"
  },
  {
    "text": "code to the screen I prepared that talk I did that talk in the go on us but then",
    "start": "1764120",
    "end": "1769799"
  },
  {
    "text": "I made a update of an updated version to the last version of the go compiler for",
    "start": "1769799",
    "end": "1777279"
  },
  {
    "text": "goer UK and I renamed that to understanding the go compiler because was more clear the title and I don't",
    "start": "1777279",
    "end": "1783279"
  },
  {
    "text": "want to mislead people around what I going to talk but yeah it's was on that",
    "start": "1783279",
    "end": "1788840"
  },
  {
    "text": "understanding the compiler and I go through the all the whole compiler and there there's a lot of aha moments that",
    "start": "1788840",
    "end": "1794600"
  },
  {
    "text": "comes from that talk because I went through the whole process of compiling",
    "start": "1794600",
    "end": "1800480"
  },
  {
    "text": "and the idea was I have a Hello World and that hello world is going to be the",
    "start": "1800480",
    "end": "1806640"
  },
  {
    "text": "main character of my of my talk is going to go through the whole process of",
    "start": "1806640",
    "end": "1811840"
  },
  {
    "text": "transformation until getting to a binary and I want H in the talk I I guide",
    "start": "1811840",
    "end": "1817799"
  },
  {
    "text": "through through the whole process and that's um that's the idea and this H",
    "start": "1817799",
    "end": "1823440"
  },
  {
    "text": "moment comes from that and there's some of them some that comes from that too so",
    "start": "1823440",
    "end": "1829440"
  },
  {
    "text": "if you want we can jump to the next one actually yeah yeah let's do that so H moment number four yeah I think so when",
    "start": "1829440",
    "end": "1837039"
  },
  {
    "text": "I was investigating that one of the thing that I investigate during the process were two characteristics that",
    "start": "1837039",
    "end": "1844159"
  },
  {
    "text": "were Escape analysis and in lining and the Escape analysis for that people that",
    "start": "1844159",
    "end": "1849840"
  },
  {
    "text": "doesn't know that escape analysis is a process inside the compiler that is going to decide if a variable",
    "start": "1849840",
    "end": "1858639"
  },
  {
    "text": "needs to be a store in the hip or can be a store in the stack so that's that",
    "start": "1858639",
    "end": "1863960"
  },
  {
    "text": "decision is made through Escape analysis that basically decides hey if it's",
    "start": "1863960",
    "end": "1869200"
  },
  {
    "text": "possible for me to use the the function stack to store this data or because the",
    "start": "1869200",
    "end": "1876080"
  },
  {
    "text": "scope of this variable escapes from the function I need to store some somewhere",
    "start": "1876080",
    "end": "1883159"
  },
  {
    "text": "else that means basically the main memory the the Hep so that is um that is",
    "start": "1883159",
    "end": "1888679"
  },
  {
    "text": "what Escape analysis does on the other hand you have inlining inlining it's a",
    "start": "1888679",
    "end": "1894519"
  },
  {
    "text": "process that analyze a function in in the co compiler is a process that analyze the function and decide if the",
    "start": "1894519",
    "end": "1901240"
  },
  {
    "text": "function is simple enough to be embedded to be in lined in the other side in the",
    "start": "1901240",
    "end": "1909000"
  },
  {
    "text": "call side instead of calling the function you are going to take the whole code of the function and replace the",
    "start": "1909000",
    "end": "1916639"
  },
  {
    "text": "function called with the code itself that is in linning and it depends on the complexity of the function that it not",
    "start": "1916639",
    "end": "1923519"
  },
  {
    "text": "necessarily means the size of the function it means the size of the function but also means the operations",
    "start": "1923519",
    "end": "1930519"
  },
  {
    "text": "that you use inside the function so the cool thing that I learned was if you",
    "start": "1930519",
    "end": "1936200"
  },
  {
    "text": "have scape analysis that the size of function H needs to go into the stack or the Hep and you have in lining that",
    "start": "1936200",
    "end": "1943480"
  },
  {
    "text": "allows you to take a function and put the function in place of the col",
    "start": "1943480",
    "end": "1949039"
  },
  {
    "text": "what is going to happen is they are going to collaborate together so if your function is simple enough it's going to",
    "start": "1949039",
    "end": "1956080"
  },
  {
    "text": "be in line and suddenly the scope of your variables is bigger so it's more",
    "start": "1956080",
    "end": "1962559"
  },
  {
    "text": "probable that you can use the stack instead of the hip so that was very cool",
    "start": "1962559",
    "end": "1968039"
  },
  {
    "text": "that was very interesting it's yeah it's it's something that I found super interesting yeah and then what did you",
    "start": "1968039",
    "end": "1975679"
  },
  {
    "text": "have any any chance of implementing this function like writing code that's kind",
    "start": "1975679",
    "end": "1980919"
  },
  {
    "text": "of corresponding to this functionality that was extra efficient or interesting or not really or is there a use case you",
    "start": "1980919",
    "end": "1987399"
  },
  {
    "text": "can imagine for this this to be interesting or because as you were describing this I I I had nothing come",
    "start": "1987399",
    "end": "1993799"
  },
  {
    "text": "to M there are use cases I think I think you you have it's it's a tool that you",
    "start": "1993799",
    "end": "1999159"
  },
  {
    "text": "have there and sometimes you have you can say okay I have a very tight",
    "start": "1999159",
    "end": "2004880"
  },
  {
    "text": "function here that is generating a lot of allocation then I can try to tweak that to reach",
    "start": "2004880",
    "end": "2012279"
  },
  {
    "text": "the point where this gets in line so that's one option but also I think the",
    "start": "2012279",
    "end": "2018279"
  },
  {
    "text": "cool part is knowing that you can make decision that are just smarter around",
    "start": "2018279",
    "end": "2024960"
  },
  {
    "text": "creating your your structs for example if you have a new function for creating",
    "start": "2024960",
    "end": "2030200"
  },
  {
    "text": "a new struct and you have initialization process in that inside that that",
    "start": "2030200",
    "end": "2035799"
  },
  {
    "text": "function that new function that new function almost for sure is not going to be in line because the initialization",
    "start": "2035799",
    "end": "2042880"
  },
  {
    "text": "process it's going to get complex enough to not get embedded to not get in lined",
    "start": "2042880",
    "end": "2049398"
  },
  {
    "text": "so the scope of that variables is always going to be whenever you execute new",
    "start": "2049399",
    "end": "2055200"
  },
  {
    "text": "it's going to return a pointer to that variable and because of that it's going to always go into the Hep but if the",
    "start": "2055200",
    "end": "2062158"
  },
  {
    "text": "function is small enough if you say hey the new function is going to create the the object and return the the pointer",
    "start": "2062159",
    "end": "2069919"
  },
  {
    "text": "suddenly the new function is always embeded is always in line and it's always a store in the stack in the stock",
    "start": "2069919",
    "end": "2077679"
  },
  {
    "text": "of the parent unless there's other reason for escaping but you are storing",
    "start": "2077679",
    "end": "2082960"
  },
  {
    "text": "that in the stock of the parent and then if you call for example an initialization function that",
    "start": "2082960",
    "end": "2089839"
  },
  {
    "text": "initialization function is already working in the in the stack so keeping",
    "start": "2089839",
    "end": "2094960"
  },
  {
    "text": "your Constructors small enough to get them embedded then inlined it's going to be a",
    "start": "2094960",
    "end": "2102880"
  },
  {
    "text": "good practice in general so for example that is that is a a a good thing because",
    "start": "2102880",
    "end": "2109599"
  },
  {
    "text": "it's not going to give you a huge boost in performance but it can give you tiny",
    "start": "2109599",
    "end": "2116520"
  },
  {
    "text": "Improvement in performance here and there and suddenly you are gaining well",
    "start": "2116520",
    "end": "2121599"
  },
  {
    "text": "that adds up at fin now at the end so yeah it's yeah yeah that that makes a",
    "start": "2121599",
    "end": "2127480"
  },
  {
    "text": "lot sense that that would be actually super interesting to also run tracing on that for example and to compare yeah if",
    "start": "2127480",
    "end": "2133480"
  },
  {
    "text": "if depending on the size of your application you can have thousand and thousand and thousand of creation of",
    "start": "2133480",
    "end": "2138640"
  },
  {
    "text": "certain objects and if they go to the Hep instead of the stack it's going to be a l loation a lot of garbage",
    "start": "2138640",
    "end": "2144800"
  },
  {
    "text": "collector pressure a lot of other stuff that maybe is not that important so or",
    "start": "2144800",
    "end": "2150760"
  },
  {
    "text": "actually we'll find a like big big differences I would be I would be very curious we do have a tracing episode uh",
    "start": "2150760",
    "end": "2157760"
  },
  {
    "text": "in planning part two of that so that will be I will remember to do the cross and to bring this up there as well it's",
    "start": "2157760",
    "end": "2164839"
  },
  {
    "text": "a cool observation yeah actually I think the inliner now it's uh being rewritting",
    "start": "2164839",
    "end": "2171000"
  },
  {
    "text": "I don't know if it's already finished the work I think in 23 it will be released in the updated uh yeah with",
    "start": "2171000",
    "end": "2176359"
  },
  {
    "text": "with the profiler right with the with a profile guide optimization so yeah that's that that can be very very cool",
    "start": "2176359",
    "end": "2183400"
  },
  {
    "text": "to see if that is going to have a huge impact because probably it's going to have certain impact there yeah anything",
    "start": "2183400",
    "end": "2190160"
  },
  {
    "text": "else to say about Point number four I don't think so okay we have to we we have a lot of field to cover still so",
    "start": "2190160",
    "end": "2197960"
  },
  {
    "text": "all right jumping back and we are continuing now with aha moment number",
    "start": "2197960",
    "end": "2203800"
  },
  {
    "text": "five and six yes the other thing that I was doing well I I I keep investigating",
    "start": "2203800",
    "end": "2209079"
  },
  {
    "text": "the go compiler and go through different steps in the process and I reached a point that was super interesting for me",
    "start": "2209079",
    "end": "2215760"
  },
  {
    "text": "that was another H moment that was when the go compiler gets machine specific so",
    "start": "2215760",
    "end": "2224880"
  },
  {
    "text": "all the process related to tokenizing parsing um there's an intermediate",
    "start": "2224880",
    "end": "2231280"
  },
  {
    "text": "representation um in in the middle then it's converted to something that is called SSA that is sing Single static",
    "start": "2231280",
    "end": "2238200"
  },
  {
    "text": "assignment and then it's apply a lot of optimizations and there's a point in the",
    "start": "2238200",
    "end": "2244079"
  },
  {
    "text": "process of converting SSA or processing SSA say where it's applying",
    "start": "2244079",
    "end": "2249880"
  },
  {
    "text": "optimizations and accepting Point there's one of the passes or the optimizations that is called Lower that",
    "start": "2249880",
    "end": "2257760"
  },
  {
    "text": "is the exact point where the compiler is start doing things that are machine",
    "start": "2257760",
    "end": "2263880"
  },
  {
    "text": "specific everything before that point it's machine and Noti is if you have an",
    "start": "2263880",
    "end": "2270560"
  },
  {
    "text": "irm or if you have a MD amd64 doesn't matter it's all the same",
    "start": "2270560",
    "end": "2277160"
  },
  {
    "text": "code base and then gets into this lower phase of the SSA transformation or SSA",
    "start": "2277160",
    "end": "2284800"
  },
  {
    "text": "passes and gets converted into a machine specific SSA and then apply other",
    "start": "2284800",
    "end": "2291400"
  },
  {
    "text": "optimizations and finally with that optimization suppli start generating the",
    "start": "2291400",
    "end": "2296920"
  },
  {
    "text": "binary the linking and generate the final binary that is an executable but it's it's pretty good that very far in",
    "start": "2296920",
    "end": "2303680"
  },
  {
    "text": "the process it's when you get the machine specific part that by itself was",
    "start": "2303680",
    "end": "2309520"
  },
  {
    "text": "an H moment and was very interesting for me but I'm also a big fan of tinyo I love microcontrollers I love playing",
    "start": "2309520",
    "end": "2316319"
  },
  {
    "text": "around I'm not good at it but I love playing around with them and for me it was kind of interesting how tiny go was",
    "start": "2316319",
    "end": "2323480"
  },
  {
    "text": "doing that and it's very interesting that tiny go it's follow a very smart",
    "start": "2323480",
    "end": "2329119"
  },
  {
    "text": "approach it's basically taking everything up to that point everything",
    "start": "2329119",
    "end": "2334160"
  },
  {
    "text": "up to SSA it's up to that point point is is the same compiler it's the same uh",
    "start": "2334160",
    "end": "2340040"
  },
  {
    "text": "codebase mainly and in that point it takes that SSA and instead of converting",
    "start": "2340040",
    "end": "2346280"
  },
  {
    "text": "that SS say into machine code it's going to convert that into a",
    "start": "2346280",
    "end": "2352200"
  },
  {
    "text": "llvm intermediate representation or llbm kind of s assembly and then llbm is the",
    "start": "2352200",
    "end": "2360640"
  },
  {
    "text": "one responsible for compiling that to the microcontroller specific architecture so apart from that you have",
    "start": "2360640",
    "end": "2366920"
  },
  {
    "text": "to have a run time that is compatible with microcontrollers because in microcontrollers you don't have the same",
    "start": "2366920",
    "end": "2373319"
  },
  {
    "text": "kind of access to to things you don't have an operating system and things like that but at the end of the day the",
    "start": "2373319",
    "end": "2379560"
  },
  {
    "text": "compilation part is exactly the same so that is the reason why tiny go it is exactly the same language you can have",
    "start": "2379560",
    "end": "2386880"
  },
  {
    "text": "differences in the runtime but you don't have differences in the language because it's the same one and it's leveraging",
    "start": "2386880",
    "end": "2393680"
  },
  {
    "text": "that point so for me that was like oh wow this people is really really smart so I really love that aha moment and",
    "start": "2393680",
    "end": "2401839"
  },
  {
    "text": "actually I'm a big fan of Tano shouting out to the cool things",
    "start": "2401839",
    "end": "2407680"
  },
  {
    "text": "that tinyo does and uh together with Ron and Ron Evans and Daniel estban and the",
    "start": "2407680",
    "end": "2414960"
  },
  {
    "text": "team who was working on the cool projects around that oh yeah yeah that is a that is interesting I how how would",
    "start": "2414960",
    "end": "2422839"
  },
  {
    "text": "you say that this so if this Maps easily to across a different processors and it",
    "start": "2422839",
    "end": "2428160"
  },
  {
    "text": "Maps also to little tiny embedded Tech would that be how would that be working",
    "start": "2428160",
    "end": "2434079"
  },
  {
    "text": "on gpus for example yeah that's that's interesting I think the gpus have a",
    "start": "2434079",
    "end": "2440880"
  },
  {
    "text": "different set of instructions so I don't think it's it fits really well with that",
    "start": "2440880",
    "end": "2447359"
  },
  {
    "text": "that things I'm not an expert to be honest but my sensation here is what you",
    "start": "2447359",
    "end": "2452440"
  },
  {
    "text": "have is a selda assembly that is oriented to a general purpose CPUs and",
    "start": "2452440",
    "end": "2457760"
  },
  {
    "text": "that general purpose CPUs gets uh general purpose CPU s assembly gets",
    "start": "2457760",
    "end": "2464000"
  },
  {
    "text": "converted into real general purpose CPU like irm or amd64 or things like that so",
    "start": "2464000",
    "end": "2472000"
  },
  {
    "text": "applying that to CPU you can you can apply the same set of ideas probably you can write you can do what what Rod Pike",
    "start": "2472000",
    "end": "2480319"
  },
  {
    "text": "did here that is or what the go team did here that is taking the generating a s",
    "start": "2480319",
    "end": "2487440"
  },
  {
    "text": "assembly that is going to be for GPU code and build that up to the level that",
    "start": "2487440",
    "end": "2495359"
  },
  {
    "text": "you have this Intermediate Language and whenever you reach that point you",
    "start": "2495359",
    "end": "2501400"
  },
  {
    "text": "convert that into the specifics of different uh gpus um assembly code or or",
    "start": "2501400",
    "end": "2507800"
  },
  {
    "text": "instructions but but I don't think it's applicable to execute the go binary for",
    "start": "2507800",
    "end": "2514079"
  },
  {
    "text": "example or a go binary directly into a GPU because I think have different",
    "start": "2514079",
    "end": "2519359"
  },
  {
    "text": "different set of instructions it's not the same kind of machine that you are managing there yeah that's fair again",
    "start": "2519359",
    "end": "2525960"
  },
  {
    "text": "I'm not an expert maybe I'm I'm wrong here so it's it's a guess it's a guess",
    "start": "2525960",
    "end": "2531160"
  },
  {
    "text": "it's a surprise question yeah yeah yeah that but that definitely is interesting and I will go and uh look about that a",
    "start": "2531160",
    "end": "2538640"
  },
  {
    "text": "little bit I'm also now curious you said embedded tiny go and although this connection has been around in forever",
    "start": "2538640",
    "end": "2545119"
  },
  {
    "text": "I'm kind of only now starting to think will it how different will it be for FBG for example and like all the all the",
    "start": "2545119",
    "end": "2551160"
  },
  {
    "text": "other Hardware out there in the world um maybe one day we'll do an episode about go on different um different processing",
    "start": "2551160",
    "end": "2559640"
  },
  {
    "text": "units yeah H well we only covered five six six of the 10 but we're slowly",
    "start": "2559640",
    "end": "2566000"
  },
  {
    "text": "approaching uh our time which means we will have to do a part two because you",
    "start": "2566000",
    "end": "2571359"
  },
  {
    "text": "you're just bringing up two interesting points and I have too many questions SL comments about them my last question to",
    "start": "2571359",
    "end": "2576760"
  },
  {
    "text": "you would be do you have an unpopular [Music] opinion unpop opinion you I actually",
    "start": "2576760",
    "end": "2585720"
  },
  {
    "text": "think you should probably [Music]",
    "start": "2585720",
    "end": "2597800"
  },
  {
    "text": "leave okay I think I think I going to get some hate for this H so well that's",
    "start": "2597800",
    "end": "2604440"
  },
  {
    "text": "what unpopular opinion is about yep I think mechanical keyboards are just",
    "start": "2604440",
    "end": "2611920"
  },
  {
    "text": "glorified Nostalgia so it's a loudly glorified yeah very",
    "start": "2611920",
    "end": "2618599"
  },
  {
    "text": "loud glorifying Nostalgia so that's that's the thing I I have used them I",
    "start": "2618599",
    "end": "2625480"
  },
  {
    "text": "don't think are more comfortable I don't think are more are better for sure I'm not going to make you a better",
    "start": "2625480",
    "end": "2631720"
  },
  {
    "text": "programmer or improve your performance or something like that that there's no way I understand for some cases pretty",
    "start": "2631720",
    "end": "2638640"
  },
  {
    "text": "cool whenever you are building your own keyboard or this kind of split keyboards",
    "start": "2638640",
    "end": "2643720"
  },
  {
    "text": "or programmable keyboards that you have your microcontroller and things like that for that kind of cases I found that",
    "start": "2643720",
    "end": "2650359"
  },
  {
    "text": "cool because you can have your switches and all that stuff and there's a lot of pieces out there for doing that kind of",
    "start": "2650359",
    "end": "2656720"
  },
  {
    "text": "things but I don't know paying 10x it's it's all the 10x that you are going to",
    "start": "2656720",
    "end": "2662359"
  },
  {
    "text": "get for a keyboard is 10x in the price and the sound the noise oh yeah exactly",
    "start": "2662359",
    "end": "2668000"
  },
  {
    "text": "and the decibels yeah getting getting that 10x in the price for something that",
    "start": "2668000",
    "end": "2673839"
  },
  {
    "text": "is I don't know probably it's an unpopular opinion I get I get that",
    "start": "2673839",
    "end": "2679720"
  },
  {
    "text": "people the people that is going to consider this unpopular is going to consider this very unpopular so let's",
    "start": "2679720",
    "end": "2686400"
  },
  {
    "text": "see well I cannot say I don't agree with you so please with me you're you are popular uh my opinion is on the",
    "start": "2686400",
    "end": "2693440"
  },
  {
    "text": "unpopular opinion is on a similar topic um trackpads are better than mice I I",
    "start": "2693440",
    "end": "2700079"
  },
  {
    "text": "use a mouse but yeah I I I think",
    "start": "2700079",
    "end": "2705599"
  },
  {
    "text": "so well I guess we both agree then with this uh consensus I will say thank you",
    "start": "2705920",
    "end": "2711520"
  },
  {
    "text": "so much for joining and sharing your interesting insights and I am looking forward to episode two and thanks",
    "start": "2711520",
    "end": "2717640"
  },
  {
    "text": "everybody who joined yeah thank you for having me that is go time for this week thanks",
    "start": "2717640",
    "end": "2725400"
  },
  {
    "text": "for listening along subscribe now if you haven't already head to go time. FM for",
    "start": "2725400",
    "end": "2731480"
  },
  {
    "text": "all the ways or simply search for go time wherever you get your podcasts",
    "start": "2731480",
    "end": "2736599"
  },
  {
    "text": "you'll find us hey do you receive our change log newsletter each Monday if not",
    "start": "2736599",
    "end": "2742240"
  },
  {
    "text": "let's fix that bug one reader calls it so good he considers it a competitive",
    "start": "2742240",
    "end": "2747359"
  },
  {
    "text": "Advantage Sign up for $0 at Chang log.com",
    "start": "2747359",
    "end": "2752520"
  },
  {
    "text": "snews thanks once again to our partners at fly.io to our mysterious beat freak",
    "start": "2752520",
    "end": "2758160"
  },
  {
    "text": "break master cylinder and to our friends at Sentry we love Sentry you might too use code change log when you're signing",
    "start": "2758160",
    "end": "2764800"
  },
  {
    "text": "up for a team plan and save a 100 bucks why not right that is all for now but",
    "start": "2764800",
    "end": "2770760"
  },
  {
    "text": "we'll talk to you again next time on go time",
    "start": "2770760",
    "end": "2776359"
  },
  {
    "text": "[Music]",
    "start": "2779670",
    "end": "2782780"
  },
  {
    "text": "love",
    "start": "2788880",
    "end": "2791838"
  }
]