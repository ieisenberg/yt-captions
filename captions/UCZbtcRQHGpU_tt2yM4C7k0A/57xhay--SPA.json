[
  {
    "text": "bandwidth for change log is provided by fastly learn more at fastly.com we move",
    "start": "40",
    "end": "5520"
  },
  {
    "text": "fast and fix things here at change log because of rbar check them out at rar.com and we're hosted on linode cloud",
    "start": "5520",
    "end": "11840"
  },
  {
    "text": "servers head the lin.com changelog this episode is brought to you",
    "start": "11840",
    "end": "17000"
  },
  {
    "text": "by digital ocean digital ocean is the simplest Cloud platform for developers and teams with products like droplets",
    "start": "17000",
    "end": "24039"
  },
  {
    "text": "spaces kubernetes load balancers block storage and pre-built one-click apps you",
    "start": "24039",
    "end": "29240"
  },
  {
    "text": "can deploy manage and scale Cloud applications faster and more efficiently on digital ocean whether you're running",
    "start": "29240",
    "end": "35800"
  },
  {
    "text": "one virtual machine or 10,000 digital ocean makes managing your infrastructure way too easy get started for free with a",
    "start": "35800",
    "end": "42559"
  },
  {
    "text": "$100 credit head to do. changelog again do.",
    "start": "42559",
    "end": "49530"
  },
  {
    "text": "[Music]",
    "start": "49530",
    "end": "57038"
  },
  {
    "text": "changelog",
    "start": "58920",
    "end": "61920"
  },
  {
    "text": "welcome to go time a podcast featuring a diverse panel and special guests discussing Cloud infrastructure",
    "start": "64760",
    "end": "70600"
  },
  {
    "text": "distributed systems microservices kubernetes Docker oh and also go we",
    "start": "70600",
    "end": "76080"
  },
  {
    "text": "record live every Tuesday at 300 p.m. Eastern noon Pacific join the community SL with us in real time during the show",
    "start": "76080",
    "end": "82320"
  },
  {
    "text": "in the go time FM channel in go for slack follow us on Twitter we're at gotime FM listen live at change.com or",
    "start": "82320",
    "end": "90079"
  },
  {
    "text": "subscribe at changel law.com gotime and now on to the",
    "start": "90079",
    "end": "95720"
  },
  {
    "text": "[Music] [Applause] show okay welcome to go time I'm Matt",
    "start": "95910",
    "end": "101360"
  },
  {
    "text": "ryer today we're going to be talking about go to and the future of go so get into your little time machine uh join us",
    "start": "101360",
    "end": "109159"
  },
  {
    "text": "with a veritable cast of characters we've got thinkers and tinkerers from",
    "start": "109159",
    "end": "114759"
  },
  {
    "text": "around the go Community I'm joined by Mark Bates Yana B",
    "start": "114759",
    "end": "120439"
  },
  {
    "text": "and Johnny Boro and before we get started I just want to pay a quick tribute to the original Broadway musical",
    "start": "120439",
    "end": "127520"
  },
  {
    "text": "cast of go time Brian caria and Eric for setting such a great standard and we're",
    "start": "127520",
    "end": "133640"
  },
  {
    "text": "going to fill those shoes then dear listener we're going to need your help so get involved go for slack we're in",
    "start": "133640",
    "end": "139920"
  },
  {
    "text": "the gotime FM channel or on Twitter at gotime FM and we'd love to hear from you",
    "start": "139920",
    "end": "145920"
  },
  {
    "text": "and I'm GNA kick things off by asking Mark Bates a question Mark yes uh if you",
    "start": "145920",
    "end": "152599"
  },
  {
    "text": "had the power which I don't to change anything which you definitely don't",
    "start": "152599",
    "end": "157640"
  },
  {
    "text": "right to change to change anything in the go language or in go at all what",
    "start": "157640",
    "end": "163159"
  },
  {
    "text": "would you change uh that's an exer in classro there's a there's a lot of answers I could give you I mean there's some stuff I want to take out things",
    "start": "163159",
    "end": "169519"
  },
  {
    "text": "like panic and stuff but I was thinking about this today totally unprompted just assuming that I was going to be asked",
    "start": "169519",
    "end": "174720"
  },
  {
    "text": "the very first question and that being it the answer I came up with was I'd love to see them extend uh the ability",
    "start": "174720",
    "end": "181480"
  },
  {
    "text": "to remove unnecessary typing of types so for example when you're doing a slice of",
    "start": "181480",
    "end": "188239"
  },
  {
    "text": "a type right you don't have to do the the type each time for each kind of entry in the slice and I'd like to be able to see that other places like if",
    "start": "188239",
    "end": "195040"
  },
  {
    "text": "I'm passing like a slice of strings for example I'd love to be able to just do curlies and then the strings and have go",
    "start": "195040",
    "end": "201879"
  },
  {
    "text": "know that that is a slice of strings cuz what else would it be right so cases where there's only one type it could",
    "start": "201879",
    "end": "208360"
  },
  {
    "text": "possibly be then maybe you can omit the type yeah and they've done that in a few places already um where you can omit the",
    "start": "208360",
    "end": "214200"
  },
  {
    "text": "type and it'd be really nice to see that further you know where we don't have to do that necessarily all the time because",
    "start": "214200",
    "end": "220560"
  },
  {
    "text": "there's a lot of typing seems a little pointless and unnecessary uh don't even get me started on wrapping strings in",
    "start": "220560",
    "end": "226120"
  },
  {
    "text": "the slice of bite thing that really annoys me too okay no that's interesting there you",
    "start": "226120",
    "end": "232159"
  },
  {
    "text": "go I I want to type less yes so lazy Johnny you're not lazy are you uh I am",
    "start": "232159",
    "end": "238439"
  },
  {
    "text": "many things lazy um has not been used to describe me yet so how about you is there anything that you think you could",
    "start": "238439",
    "end": "244920"
  },
  {
    "text": "get rid of in the language or something that you would like to see added um",
    "start": "244920",
    "end": "250040"
  },
  {
    "text": "honestly I've I've learned to love go for what it is I I I don't feel sort of",
    "start": "250040",
    "end": "256040"
  },
  {
    "text": "a sort of like one way or the other it's I mean sure there are some things that I use currently in the current version of",
    "start": "256040",
    "end": "262479"
  },
  {
    "text": "go that I I don't use as much I I don't I don't think I've ever used go-to for example um fall through doesn't come",
    "start": "262479",
    "end": "268600"
  },
  {
    "text": "through a lot um sorry about that um and um I mean these things are useful to",
    "start": "268600",
    "end": "274320"
  },
  {
    "text": "some um and they find sort of excellent uses for them but for me I've learned to appreciate the language for what it is",
    "start": "274320",
    "end": "280320"
  },
  {
    "text": "and for what it isn't at the same time so along the lines of you know in go-to",
    "start": "280320",
    "end": "285360"
  },
  {
    "text": "what's coming up and what I could do without honestly it's the whole generics thing where everybody sort of you know",
    "start": "285360",
    "end": "291400"
  },
  {
    "text": "loses their cool when it comes to that I've gotten buy without it right yeah you have to type a little bit more and",
    "start": "291400",
    "end": "296840"
  },
  {
    "text": "and you have to kind of find some creative ways around that but I don't know I'm I'm I like the sort of U the",
    "start": "296840",
    "end": "302479"
  },
  {
    "text": "stability of the language and and not having sort of to introduce features for the sake of introducing features again",
    "start": "302479",
    "end": "308160"
  },
  {
    "text": "there are folks that are going to feel differently and the folks that do see the value in that and and I do as well but I I like the stability of the",
    "start": "308160",
    "end": "314360"
  },
  {
    "text": "language honestly yeah absolutely actually I I tweeted an unpopular opinion recently which said that I",
    "start": "314360",
    "end": "320880"
  },
  {
    "text": "actually don't mind the if a doesn't equal nil everywhere I've kind of become used to that and now I sort of expect to",
    "start": "320880",
    "end": "327280"
  },
  {
    "text": "see it and I can kind of spot where it's missing as well now because I've been doing it for so long um but I don't know",
    "start": "327280",
    "end": "334600"
  },
  {
    "text": "yeah what were you going to say Mark uh no I I just agree with Johnnie I don't need generics at either I think they",
    "start": "334600",
    "end": "339919"
  },
  {
    "text": "just complicate the language I think we've all done really well uh in languages that didn't have generics I",
    "start": "339919",
    "end": "345360"
  },
  {
    "text": "think we've all done really well in go without generics it's a little copy paste but the language is cleaner easier",
    "start": "345360",
    "end": "350720"
  },
  {
    "text": "to understand parse work with Etc I don't personally I'm not a fan of generics an unpopular opinion I seem to",
    "start": "350720",
    "end": "356800"
  },
  {
    "text": "stop the show I apologize no I agree with you I've used code gen",
    "start": "356800",
    "end": "364080"
  },
  {
    "text": "more than you know in those occasional times when I've come to do need",
    "start": "364080",
    "end": "369280"
  },
  {
    "text": "something like that yeah but I've always been able to get by without it so far uh Jana is there anything that you would",
    "start": "369280",
    "end": "376520"
  },
  {
    "text": "see taken out or is it I definitely have some opinions on this like I think um",
    "start": "376520",
    "end": "382560"
  },
  {
    "text": "some of them are more controversial oh sorry um oh let's have",
    "start": "382560",
    "end": "387800"
  },
  {
    "text": "those um I think uh these like I have really minor you know requests such as",
    "start": "387800",
    "end": "393800"
  },
  {
    "text": "um I want to see some of the shadowing issues are made illegal you know that there's like some convenience um",
    "start": "393800",
    "end": "399479"
  },
  {
    "text": "variable name comma error air uh colon equals sometimes kind of allows you to",
    "start": "399479",
    "end": "405160"
  },
  {
    "text": "like error um Shadow errors uh I want to like see some of them actually making",
    "start": "405160",
    "end": "410720"
  },
  {
    "text": "more like being more consistent rather than like us uh you know allowing them",
    "start": "410720",
    "end": "416759"
  },
  {
    "text": "to be Shad outed um I also don't like you know naked returns I wish that like they were entirely gone I really like to",
    "start": "416759",
    "end": "423120"
  },
  {
    "text": "you know call out uh the variable names when I'm returning things uh people think that it's a little bit varos but",
    "start": "423120",
    "end": "429440"
  },
  {
    "text": "you know we have some tools that actually like autofill some of those places so um I think it's not really worth to you know have this like second",
    "start": "429440",
    "end": "436319"
  },
  {
    "text": "guess or make it so you know IND directional um I wish that like you know we were more consistent with naked",
    "start": "436319",
    "end": "442759"
  },
  {
    "text": "returns um select statement is one of the other things that I wish that like we could have spent some more time on um",
    "start": "442759",
    "end": "450000"
  },
  {
    "text": "because it's doing a lot of random things and I wish that like there was some sort of like maybe a priority or",
    "start": "450000",
    "end": "456280"
  },
  {
    "text": "something uh a very typical case is um I you know if my channel is closed for",
    "start": "456280",
    "end": "461840"
  },
  {
    "text": "example I don't necessarily care much about like what else is going on in that select like there are some very common",
    "start": "461840",
    "end": "467599"
  },
  {
    "text": "patterns and like it's just so hard to you know figure out the right pattern uh",
    "start": "467599",
    "end": "472800"
  },
  {
    "text": "and use select in a you know easy way because select statement is really complicated and I if we have time like I",
    "start": "472800",
    "end": "479960"
  },
  {
    "text": "have some opinions on what packages I think we needs to be gone from 2.0 um",
    "start": "479960",
    "end": "486319"
  },
  {
    "text": "typical example of this is like the xar package uh it's like a straight copy of",
    "start": "486319",
    "end": "491360"
  },
  {
    "text": "the War Z at Google and I don't think that it's a really scalable approach like it uses you know Global State um",
    "start": "491360",
    "end": "498120"
  },
  {
    "text": "number of variables are growing really quickly uh the output uh the output",
    "start": "498120",
    "end": "503360"
  },
  {
    "text": "format is human readable but not necessarily like a good representation uh um doesn't really provide a good you",
    "start": "503360",
    "end": "510199"
  },
  {
    "text": "know way to represent structured values and it's really expensive to parts and",
    "start": "510199",
    "end": "515360"
  },
  {
    "text": "formats so uh I don't think it's worth it at all and you know there are some like packages that we want to get rid of",
    "start": "515360",
    "end": "521760"
  },
  {
    "text": "like the container packages uh the you know the RPC related package which has been deprecated uh net HTTP also has like a",
    "start": "521760",
    "end": "529240"
  },
  {
    "text": "lot of like you know organically grown features and um the response Rider has",
    "start": "529240",
    "end": "535720"
  },
  {
    "text": "some sort of like this like optional interfaces if you think about like the initial HTTP package you know even http2",
    "start": "535720",
    "end": "543399"
  },
  {
    "text": "was not around when it first came around and um over time it started to you know",
    "start": "543399",
    "end": "550040"
  },
  {
    "text": "provide some features uh through optional um implementing some of the interfaces that is added to the package",
    "start": "550040",
    "end": "556640"
  },
  {
    "text": "at a later time and I really want like 2.0 to kind of like clean that up uh and",
    "start": "556640",
    "end": "563440"
  },
  {
    "text": "make it easier for Library makers as well as the user um as they're like engaging with the respon right there",
    "start": "563440",
    "end": "570160"
  },
  {
    "text": "yeah wow that's yeah like can we just ditto everything jbd just said yeah",
    "start": "570160",
    "end": "577040"
  },
  {
    "text": "seriously I I gave one answer she gave them all I do have a question uh around",
    "start": "577040",
    "end": "582279"
  },
  {
    "text": "the xpar um package though what would you would you replace that with anything or you basically make that an external",
    "start": "582279",
    "end": "588480"
  },
  {
    "text": "concern I would say that like it's an external concern I would rather you know libraries to expose the you know the",
    "start": "588480",
    "end": "595000"
  },
  {
    "text": "Vari like the values of through apis and you know you just write write the uh you",
    "start": "595000",
    "end": "600680"
  },
  {
    "text": "decide on the export format um and you take the you know you read it from the library and then like convert it to",
    "start": "600680",
    "end": "607000"
  },
  {
    "text": "whatever format and then you know just like I don't like go is opiated on this",
    "start": "607000",
    "end": "612160"
  },
  {
    "text": "to be honest Matt what about you we no one's asked you the same question well I",
    "start": "612160",
    "end": "618120"
  },
  {
    "text": "actually would like to simplif there are some things that there are multiple ways to do it in the language so for example",
    "start": "618120",
    "end": "625360"
  },
  {
    "text": "you're going to like create an instance of a stru you can do that with the new keyword you can also just kind of do it",
    "start": "625360",
    "end": "632279"
  },
  {
    "text": "literally and then start to set the fields and things so anytime that there's two ways to do something I",
    "start": "632279",
    "end": "639079"
  },
  {
    "text": "always uh would like to trim that fact little bit so I would probably drop the new keyword yeah I would agree I'm",
    "start": "639079",
    "end": "646360"
  },
  {
    "text": "hearing a lot of uh removals not a lot of additions so I think generally speaking we like to see fewer things in",
    "start": "646360",
    "end": "653000"
  },
  {
    "text": "go which is kind of interesting from a community Outlook standpoint right usually you have folks asking for for",
    "start": "653000",
    "end": "659279"
  },
  {
    "text": "more things more ways to do things I think by consensus here most of us are are asking for fewer things I think we",
    "start": "659279",
    "end": "665839"
  },
  {
    "text": "might be a little bit biased um you know the the language has been very small for a long time and we have this resistance",
    "start": "665839",
    "end": "673160"
  },
  {
    "text": "and um I think people come into the language from like other languages in the first few years they're looking for",
    "start": "673160",
    "end": "679160"
  },
  {
    "text": "all these features and they then they learn uh not to look for them and I mean",
    "start": "679160",
    "end": "684320"
  },
  {
    "text": "I'm I'm using go for a long time now maybe you know I'm a little bit biased",
    "start": "684320",
    "end": "689360"
  },
  {
    "text": "yeah me too I can think of a few things that I'd like to add if you're curious um if we want to talk about some things because we've all talked about things",
    "start": "689360",
    "end": "695000"
  },
  {
    "text": "we'd remove what um I'd be curious to he what everybody would add for example I would love a true sync map",
    "start": "695000",
    "end": "702040"
  },
  {
    "text": "implementation uh typed sync map implementation in the standard Library uh so instead of just doing like say map",
    "start": "702040",
    "end": "708360"
  },
  {
    "text": "whatever just do SM map or something like that um because right now the one that's all interface based is not that",
    "start": "708360",
    "end": "714880"
  },
  {
    "text": "helpful I totally agree because you're casting everywhere I totally agree like I think go is an overwhelmingly you know",
    "start": "714880",
    "end": "720839"
  },
  {
    "text": "concurrence friendly language but it doesn't give you a lot of like safe types concurrent data structures and",
    "start": "720839",
    "end": "726560"
  },
  {
    "text": "safe types yes yeah and map is map is the worst in terms of concurrency like",
    "start": "726560",
    "end": "731880"
  },
  {
    "text": "it's the number one bug you know when we teach concurrency you know to people whatever when I'm teaching it's you know",
    "start": "731880",
    "end": "738120"
  },
  {
    "text": "I always drill into their heads that maps are not thread safe because they're so 100% not yeah they're the worst and",
    "start": "738120",
    "end": "745040"
  },
  {
    "text": "it'd be great if we had nice uh concurrent implementations of slice of AR of arrays of and you know the said",
    "start": "745040",
    "end": "752160"
  },
  {
    "text": "of the data type the common data types because having to sit there and put mutexes around everything is really",
    "start": "752160",
    "end": "757240"
  },
  {
    "text": "annoying yeah I totally agree and um you know the tricky part is um the you know",
    "start": "757240",
    "end": "762920"
  },
  {
    "text": "the runtime is not giving you a lot of like you know it doesn't give you the identity of the gotin you can't really",
    "start": "762920",
    "end": "768480"
  },
  {
    "text": "build these structures yourself in a you know efficient performant way so you really need to rely on uh whatever is",
    "start": "768480",
    "end": "775199"
  },
  {
    "text": "coming from uh the you know the standard library and then standard Library is not doing a good job in terms of you know",
    "start": "775199",
    "end": "781360"
  },
  {
    "text": "having any of having any support uh for the primitive data structures yeah that",
    "start": "781360",
    "end": "787000"
  },
  {
    "text": "would be my biggest that and I would love to see a map not need to be initialized before being used yeah I",
    "start": "787000",
    "end": "792279"
  },
  {
    "text": "feel like that one should be quite loow hanging fruit isn't it yeah why is that not well it's a point because it's a",
    "start": "792279",
    "end": "798040"
  },
  {
    "text": "pointer under the covers that's what a map the original jbd probably knows this too right the original implementation",
    "start": "798040",
    "end": "803199"
  },
  {
    "text": "you actually had to do the pointer on it and then they just kind of clean that up for everybody else",
    "start": "803199",
    "end": "809399"
  },
  {
    "text": "but it's a pointer under the covers it's nil that's why what other things would we have would we like to add them let's",
    "start": "809399",
    "end": "816120"
  },
  {
    "text": "just get it sorted now can we get your laptops get our laptops um Johnny what",
    "start": "816120",
    "end": "821880"
  },
  {
    "text": "about you anything you'd like to see added actually no I honestly I mean yeah I I hate to you know sort of be like a",
    "start": "821880",
    "end": "828839"
  },
  {
    "text": "contrarian and and sort of you know I like it just the way it is I think from what I've sense from what I've seen I",
    "start": "828839",
    "end": "835880"
  },
  {
    "text": "think there's a there's always pressure to and being a programming language or being a product or service whatever it",
    "start": "835880",
    "end": "841399"
  },
  {
    "text": "is there's always pressure right from the market you know quote unquote to sort of U to be adding new things to be",
    "start": "841399",
    "end": "847199"
  },
  {
    "text": "innovating to be always trying to make something better the next version will be you know will be better faster",
    "start": "847199",
    "end": "853279"
  },
  {
    "text": "stronger I mean all these things I really don't see that uh that need uh and go and again I'm not against",
    "start": "853279",
    "end": "859839"
  },
  {
    "text": "Innovation and I'm and I'm sure there are ways that the language can evolve can be made better to do some things",
    "start": "859839",
    "end": "865399"
  },
  {
    "text": "that it does now to make them even better and more approachable absolutely I mean we've identified a number of",
    "start": "865399",
    "end": "870440"
  },
  {
    "text": "things that could be done better with the existing language so I'm not saying that there are not you know better ways of doing things or introducing new",
    "start": "870440",
    "end": "876279"
  },
  {
    "text": "things that make you know more complicated things easier to do my sense is that the need to introduce new",
    "start": "876279",
    "end": "882320"
  },
  {
    "text": "features into language because of Market drivers is for me I tend to sort of have",
    "start": "882320",
    "end": "888240"
  },
  {
    "text": "a have a negative view on that that's just where I stand on that yeah I think you're right but there's nothing you",
    "start": "888240",
    "end": "893399"
  },
  {
    "text": "would add you wouldn't add like sync Maps or anything Johnny come on there's got to be something",
    "start": "893399",
    "end": "899199"
  },
  {
    "text": "well in a sense that for a newcomer who doesn't quite know where the gachas are",
    "start": "899199",
    "end": "904320"
  },
  {
    "text": "absolutely I mean I I could definitely see ways of making certain constructs easier to sort of uh wrap your head",
    "start": "904320",
    "end": "909720"
  },
  {
    "text": "around and use them in the language absolutely but you know again you know you you identify the problem and you",
    "start": "909720",
    "end": "915519"
  },
  {
    "text": "know how to get around it right so it's not like when you're encoding now you're still sort of you know banging your head",
    "start": "915519",
    "end": "921120"
  },
  {
    "text": "against the table saying oh man I wish we still had that wish we still had that you can program around it you can code around it so in that in that sense I",
    "start": "921120",
    "end": "928160"
  },
  {
    "text": "would love to to see uh things that make complicated things easier in the",
    "start": "928160",
    "end": "933440"
  },
  {
    "text": "language right be introduced not necessarily New Concepts new constructs new new data types or or anything like",
    "start": "933440",
    "end": "939959"
  },
  {
    "text": "that just really making things easier for people to do the right thing right yeah yeah how how do we feel about the",
    "start": "939959",
    "end": "946399"
  },
  {
    "text": "errors Proposal with the Handler and the check and thatu I think there's like um",
    "start": "946399",
    "end": "951560"
  },
  {
    "text": "if you we are talking about adding stuff I think error handling is one of the few places I would love to see an",
    "start": "951560",
    "end": "957480"
  },
  {
    "text": "improvement um I think you know the problems over there is just not the verbosity but um you know bubbling up we",
    "start": "957480",
    "end": "964120"
  },
  {
    "text": "have this tendency to Bubble Up errors because there's no easy way to you know discover the error types you know we",
    "start": "964120",
    "end": "969600"
  },
  {
    "text": "don't have like for example any analysis tools that can help us uh to discover the types coming from you know the",
    "start": "969600",
    "end": "975040"
  },
  {
    "text": "previous call tree right um it's no there's no stack frame if you do fum",
    "start": "975040",
    "end": "980079"
  },
  {
    "text": "error and wrap like put like not wrap things so errors are definitely not in",
    "start": "980079",
    "end": "985680"
  },
  {
    "text": "an ideal form at this point and I really like the fact that check is um",
    "start": "985680",
    "end": "991040"
  },
  {
    "text": "specifically like it it looks like maybe it's specifically trying to solve the variables with the problem but it might",
    "start": "991040",
    "end": "997079"
  },
  {
    "text": "actually help us to create some of this like you know tools by intercepting",
    "start": "997079",
    "end": "1002880"
  },
  {
    "text": "every error um helping us to like write some Dynamic analysis tools maybe it really depends on how much they're going",
    "start": "1002880",
    "end": "1010240"
  },
  {
    "text": "to allow us to you know provide us like some apis maybe to like you know to you",
    "start": "1010240",
    "end": "1016000"
  },
  {
    "text": "know diagnose what is going on but um I think it's an opportunity to us you know",
    "start": "1016000",
    "end": "1021920"
  },
  {
    "text": "thinking about error handling is a good opportunity yeah yeah I was reading the error spec earlier and I don't know",
    "start": "1021920",
    "end": "1027798"
  },
  {
    "text": "there's a lot in there I think might be too just too much just too many things",
    "start": "1027799",
    "end": "1033400"
  },
  {
    "text": "uh the biggest thing I've always had like I don't need check check doesn't really bother me like Matt said earlier",
    "start": "1033400",
    "end": "1038520"
  },
  {
    "text": "I think the you know if error does not equal nail thing has always worked for me uh and I just kind of used to it and",
    "start": "1038520",
    "end": "1044160"
  },
  {
    "text": "if I really need to do a you know in say a function if I have multiple points where I need to do something if there's",
    "start": "1044160",
    "end": "1050360"
  },
  {
    "text": "an error I just write a little you know Anonymous function in line and just call that um my own little check basically so",
    "start": "1050360",
    "end": "1057280"
  },
  {
    "text": "I don't feel like I need any of that what I really need is just a nice way to get a clean stack Trace from where the",
    "start": "1057280",
    "end": "1065000"
  },
  {
    "text": "error was that's where I want a stack Trace that goes all the way back like you know we've been trying to use like",
    "start": "1065000",
    "end": "1071039"
  },
  {
    "text": "the errors PKG errors package and its WID stack kind of keeps adding on top of",
    "start": "1071039",
    "end": "1076120"
  },
  {
    "text": "each other uh and makes for these really kind of hard to read stack traces so for",
    "start": "1076120",
    "end": "1081400"
  },
  {
    "text": "me all I really want is just something that gives me the stack Trace so probably you need the St frame rather",
    "start": "1081400",
    "end": "1087799"
  },
  {
    "text": "than the whole Trace um and you know you can reconstruct you know the thing by just like looking at the St frame it's",
    "start": "1087799",
    "end": "1094360"
  },
  {
    "text": "also like this is such a you know big issue um if you are running things in production and we all do uh you just",
    "start": "1094360",
    "end": "1101480"
  },
  {
    "text": "want to you know collect errors in a way that you can analyze like you can you may want to able to see hey where are",
    "start": "1101480",
    "end": "1108080"
  },
  {
    "text": "the like the number of top reasons top places that the errors are coming and like what are the sum of the error",
    "start": "1108080",
    "end": "1114120"
  },
  {
    "text": "patterns and currently just because of fumed error F we we just kind of like you know lose the stack frame it's it's",
    "start": "1114120",
    "end": "1120640"
  },
  {
    "text": "not really nice if you want to analyze so definitely it's something that I",
    "start": "1120640",
    "end": "1126480"
  },
  {
    "text": "would love to be improved but I've seen the proposal and it seems like it's covering a lot of things and exposing a",
    "start": "1126480",
    "end": "1133039"
  },
  {
    "text": "lot of apis and uh it just looks like it's too much that's exactly I was reading it and there there are a few",
    "start": "1133039",
    "end": "1139080"
  },
  {
    "text": "things in there I couldn't even grasp I'm like what is this even for like what problem is this thing solving uh and",
    "start": "1139080",
    "end": "1146480"
  },
  {
    "text": "there's a few of those it's I don't know if it's the best proposal I've ever seen yeah but it's part of the conversation",
    "start": "1146480",
    "end": "1151720"
  },
  {
    "text": "the the other thing that's a part of that conversation too about errors is it's very useful to know whether",
    "start": "1151720",
    "end": "1157520"
  },
  {
    "text": "something is a temporary error you know whether you can retry it and it might work or whether this is a kind of okay",
    "start": "1157520",
    "end": "1164880"
  },
  {
    "text": "stop the world something is not going to recover at least this request is not going to ever be happy so I have to go",
    "start": "1164880",
    "end": "1170799"
  },
  {
    "text": "and tell the user something all that stuff is just left up so far really for the application so yeah there might be",
    "start": "1170799",
    "end": "1178280"
  },
  {
    "text": "something that we can do there around classes of errors and make but some really go kind of nice elegant way of",
    "start": "1178280",
    "end": "1186039"
  },
  {
    "text": "solving that problem I think be quite interesting too not sure if having that",
    "start": "1186039",
    "end": "1191120"
  },
  {
    "text": "as part of the standard Library itself would be sort of the way to go though um I could I could definitely see like a",
    "start": "1191120",
    "end": "1197120"
  },
  {
    "text": "community contributed package that actually does that kind of provides these standard set of error types that",
    "start": "1197120",
    "end": "1202799"
  },
  {
    "text": "you could sort of integrate into your code if you need them that's a great idea because you could do that today",
    "start": "1202799",
    "end": "1207960"
  },
  {
    "text": "yeah right exactly yeah I would otherwise um you know maybe Advocate something more for the error groups it's",
    "start": "1207960",
    "end": "1214600"
  },
  {
    "text": "a really common case but you know you can always build stuff to support those cases within you know third party",
    "start": "1214600",
    "end": "1220640"
  },
  {
    "text": "Library I'm not sure like if we should you know include more to the standard library or we should experiment more",
    "start": "1220640",
    "end": "1227760"
  },
  {
    "text": "outside of the standard Library well one of the cool things about go as a project is that it it does engage with the",
    "start": "1227760",
    "end": "1235200"
  },
  {
    "text": "community you can if you've got something to say about it you can write about it you can get involved and I know",
    "start": "1235200",
    "end": "1240799"
  },
  {
    "text": "that they pay attention to it I was talking to one of the team recently in Paris and they're very interested in in",
    "start": "1240799",
    "end": "1247840"
  },
  {
    "text": "looking at particularly erors and and the the packages like Dave Chinese package there's a few others that have",
    "start": "1247840",
    "end": "1255080"
  },
  {
    "text": "they've really taken part in that conversation that's the kind of something that I like to see just from a community point of view sort of is quite",
    "start": "1255080",
    "end": "1263030"
  },
  {
    "text": "[Music]",
    "start": "1263030",
    "end": "1270329"
  },
  {
    "text": "empowering this episode is brought to you by our friends at go CD go CD is an",
    "start": "1271799",
    "end": "1277559"
  },
  {
    "text": "open source continuous delivery server built by thoughtworks check them out at go.org or on GitHub at github.com",
    "start": "1277559",
    "end": "1285240"
  },
  {
    "text": "gocd go CD provides continuous delivery of the box with his built-in pipelines",
    "start": "1285240",
    "end": "1290520"
  },
  {
    "text": "Advanced traceability and value stream visualization with GH CD you can easily model orchestrate and visualize complex",
    "start": "1290520",
    "end": "1297919"
  },
  {
    "text": "workflows from end to end with no problem they support kubernetes and modern infrastructure with elastic on",
    "start": "1297919",
    "end": "1303360"
  },
  {
    "text": "demand agents and Cloud deployments to learn more about go CD visit go.org",
    "start": "1303360",
    "end": "1308480"
  },
  {
    "text": "changelog it's free to use they have professional support and Enterprise add-ons available from thoughtworks once",
    "start": "1308480",
    "end": "1315400"
  },
  {
    "text": "again go c.org changelog",
    "start": "1315400",
    "end": "1320039"
  },
  {
    "text": "[Music] in terms of tools um I was also thinking",
    "start": "1324790",
    "end": "1332320"
  },
  {
    "text": "about like you know I I think we are not doing a good job in terms of giving introspection tools for example do you",
    "start": "1332320",
    "end": "1339480"
  },
  {
    "text": "have any opinions on that um do you think that like what is the right approach um you know there are errors",
    "start": "1339480",
    "end": "1345520"
  },
  {
    "text": "that you want to handle transform into something else or you can recover from then there are some errors there's",
    "start": "1345520",
    "end": "1351679"
  },
  {
    "text": "nothing else to do just the mat you know said like it's a stop the world type of error and all you can do is maybe log it",
    "start": "1351679",
    "end": "1359080"
  },
  {
    "text": "what do you think that you know our approach should be in terms of like providing more visibility I think it's a",
    "start": "1359080",
    "end": "1364120"
  },
  {
    "text": "great question that means I don't have an answer that's secret code secret code for that um I don't know but for sure in",
    "start": "1364120",
    "end": "1372799"
  },
  {
    "text": "particularly in apis often you it's very convenient as your writing code to just",
    "start": "1372799",
    "end": "1379360"
  },
  {
    "text": "like you say bubble the error up and it you it pops out the top and the developer can read it but of course you",
    "start": "1379360",
    "end": "1384600"
  },
  {
    "text": "can leak kind of internals doing that so you then do want to protect that to some extent and some errors it's okay for the",
    "start": "1384600",
    "end": "1392200"
  },
  {
    "text": "users to see it and some you'd rather not sort of erroring your dirty laundry in public there isn't really a simple",
    "start": "1392200",
    "end": "1397760"
  },
  {
    "text": "way say for example you know here's a this is the public message for this error yeah that's not really answer the",
    "start": "1397760",
    "end": "1403520"
  },
  {
    "text": "question but well let's talk I think this is a great segue to talk about panics cuz",
    "start": "1403520",
    "end": "1408880"
  },
  {
    "text": "panics are really supposed to be that stop the world like I got to get off kind of error right um I it just like",
    "start": "1408880",
    "end": "1415360"
  },
  {
    "text": "stops the entire process right like I think there's something in between I know which is",
    "start": "1415360",
    "end": "1421320"
  },
  {
    "text": "awful there's something in between that's why I hate Panic so much yeah",
    "start": "1421320",
    "end": "1426880"
  },
  {
    "text": "they're arrogant it just stops everything uh it's maddening panics are really arrogant aren't they they really",
    "start": "1426880",
    "end": "1434279"
  },
  {
    "text": "are they're like taking their ball home it's like no I can't do my thing so no",
    "start": "1434279",
    "end": "1439320"
  },
  {
    "text": "one else is going to play too I think Panic is this like specific thing hey if I continue it it's going to mess up even",
    "start": "1439320",
    "end": "1446840"
  },
  {
    "text": "like more crazily like I'm going to corrupt memory or something right like it's not like oh I got an error and I",
    "start": "1446840",
    "end": "1453520"
  },
  {
    "text": "don't know what to do and I should Panic right like it's just I think there's like an error type which is in between",
    "start": "1453520",
    "end": "1459880"
  },
  {
    "text": "you don't have to stop the process but there's nothing you can you know what are you don't have much of a next action",
    "start": "1459880",
    "end": "1466679"
  },
  {
    "text": "and there's only one thing you can do is to log it you know report it to your error reporting analysis tool um I was",
    "start": "1466679",
    "end": "1474120"
  },
  {
    "text": "specifically more like talking about that case and I don't know like what is the best way to avoid panics like would",
    "start": "1474120",
    "end": "1479600"
  },
  {
    "text": "you rather see um yourself like corrupt in memory rather than go panicking uh",
    "start": "1479600",
    "end": "1485480"
  },
  {
    "text": "that's a great question I I don't have an answer for that uh it's just it's you know so working on a project like",
    "start": "1485480",
    "end": "1491799"
  },
  {
    "text": "Buffalo for example where there's a lot of user kind of stuff happening we have to really make sure that panics don't",
    "start": "1491799",
    "end": "1497919"
  },
  {
    "text": "crash people's applications uh and it's a real thing like the standard Library panics in some very strange places for",
    "start": "1497919",
    "end": "1503880"
  },
  {
    "text": "example um one of them being if you accidentally register a database driver",
    "start": "1503880",
    "end": "1509039"
  },
  {
    "text": "twice it panics uh which can which can happen in a variety of cases typically involving",
    "start": "1509039",
    "end": "1515880"
  },
  {
    "text": "vendoring but that's a whole another issue um which is going away thankfully so there are you know the standard",
    "start": "1515880",
    "end": "1521880"
  },
  {
    "text": "libraries doing it you know the standard library has this kind of pattern of if you put the word must in front of it it",
    "start": "1521880",
    "end": "1527799"
  },
  {
    "text": "panics MH which you know I personally again I'm against panics so I think that's a really bad uh approach like",
    "start": "1527799",
    "end": "1534080"
  },
  {
    "text": "give me an error version and let me shut down my app like I know so there's all",
    "start": "1534080",
    "end": "1539799"
  },
  {
    "text": "there's stuff like that generally yeah you usually do have that option and I think those must um methods",
    "start": "1539799",
    "end": "1547799"
  },
  {
    "text": "and and functions I think they came from before we knew that what panics really were and what they meant so I think",
    "start": "1547799",
    "end": "1554159"
  },
  {
    "text": "originally yeah there were errors and panics and probably you'd use them in different ways and it's only over time from writing",
    "start": "1554159",
    "end": "1561360"
  },
  {
    "text": "code and deploying apps and doing real things we've kind of realized panics uh",
    "start": "1561360",
    "end": "1567559"
  },
  {
    "text": "they're not good they are difficult and yeah we'd rather just have an error to deal with yeah I'd love to be able like",
    "start": "1567559",
    "end": "1573640"
  },
  {
    "text": "so with the you know the check proposal for for errors for example I'd love something similar but for panic if we're",
    "start": "1573640",
    "end": "1579919"
  },
  {
    "text": "going to keep panics I'd love to be able maybe at a package level say this is how I want to handle panics just because you said a package",
    "start": "1579919",
    "end": "1587080"
  },
  {
    "text": "level Maybe you know the problem itself is like the global State and like you know everybody's interacting with each",
    "start": "1587080",
    "end": "1592799"
  },
  {
    "text": "other and so on I think Library space and go is generally uh not really well",
    "start": "1592799",
    "end": "1597919"
  },
  {
    "text": "you know contained um everybody's leaking to each other's you know Global",
    "start": "1597919",
    "end": "1603039"
  },
  {
    "text": "State yeah I don't care where it is I just it' be nice to I mean I could do it at the top of every single function um",
    "start": "1603039",
    "end": "1609000"
  },
  {
    "text": "but just it feels like that's not the right place you know um I even have rappers when I'm calling functions given",
    "start": "1609000",
    "end": "1615080"
  },
  {
    "text": "to me that I that will capture the p panics and return errors for me so that when users give me a function if it",
    "start": "1615080",
    "end": "1621559"
  },
  {
    "text": "panics it won't crash everything you know so I always feel like I'm constantly writing that sort of stuff it",
    "start": "1621559",
    "end": "1627120"
  },
  {
    "text": "sounds like also there's a it sounds like what you're asking for also maybe some errors that are currently panics",
    "start": "1627120",
    "end": "1634760"
  },
  {
    "text": "right should be treated as sort of like a noop right for example like registering a database driver like more than once like if it's already there",
    "start": "1634760",
    "end": "1641679"
  },
  {
    "text": "then just no op right just don't do anything don't don't crash the entire app because of that right so yeah",
    "start": "1641679",
    "end": "1646880"
  },
  {
    "text": "exactly I mean yeah there and and the other thing too I mean because of I also teach and and when I teach especially",
    "start": "1646880",
    "end": "1653799"
  },
  {
    "text": "those new to go they kind of run into some erors that we as sort of veterans consider to be obvious like for example",
    "start": "1653799",
    "end": "1660240"
  },
  {
    "text": "like you know basically index out of range eror right if you're trying to get raid or access you know anyx in r or",
    "start": "1660240",
    "end": "1666440"
  },
  {
    "text": "slice as that doesn't exist then that's going to panic sometimes they're surprised like oh like I didn't see that",
    "start": "1666440",
    "end": "1671679"
  },
  {
    "text": "coming right so things like that I'm I'm not sure if there's a good way of sort of handling these kind of situations but",
    "start": "1671679",
    "end": "1677000"
  },
  {
    "text": "you know perhaps perhaps there's a there's a softer way there's something in between like Yan is saying basically there's you know it it's like it can't",
    "start": "1677000",
    "end": "1682080"
  },
  {
    "text": "be all or nothing maybe there's something in between there right yeah I don't have an answer I just voicing",
    "start": "1682080",
    "end": "1688279"
  },
  {
    "text": "frustration yeah maybe there's we could have an error and we could have paniced and we could just have like a small",
    "start": "1688279",
    "end": "1693840"
  },
  {
    "text": "anxiety that just gets returned it's like I'm okay mildly",
    "start": "1693840",
    "end": "1700880"
  },
  {
    "text": "frustrated but just give me a bit of like emotional errors oh mate they're",
    "start": "1700880",
    "end": "1706720"
  },
  {
    "text": "all emotional to me when I'm writing code uh so what about the context as well someone asked on slack it's very",
    "start": "1706720",
    "end": "1712960"
  },
  {
    "text": "common now to see code where context is passed throughout the entire package is that something that we'd like to see",
    "start": "1712960",
    "end": "1719640"
  },
  {
    "text": "implicit as in you not passing into the context with every call down a chain yeah but you can still reference it do",
    "start": "1719640",
    "end": "1725640"
  },
  {
    "text": "the same things that context gives you yeah oo my spidersense is tingling I don't know why yet how would that even",
    "start": "1725640",
    "end": "1731840"
  },
  {
    "text": "look in code implicit uh context is yeah like I just I don't know like how would",
    "start": "1731840",
    "end": "1737120"
  },
  {
    "text": "you Define this is the context I want to use going forward uh just imagine an API",
    "start": "1737120",
    "end": "1742799"
  },
  {
    "text": "call that like you say like context get current whatever and then it returns you",
    "start": "1742799",
    "end": "1748440"
  },
  {
    "text": "don't have to like explicitly pass it around yeah but how do I set the current context you can't really engage with the",
    "start": "1748440",
    "end": "1754799"
  },
  {
    "text": "context in that case probably like what you can do is to set the values uh by you know getting the current context",
    "start": "1754799",
    "end": "1760640"
  },
  {
    "text": "probably like it depends on the API design of course but uh assume that there is a context always around and you",
    "start": "1760640",
    "end": "1767000"
  },
  {
    "text": "can engaged it with the with some apis some get Setters yeah but if I can't",
    "start": "1767000",
    "end": "1772399"
  },
  {
    "text": "then set say a new context for this go routine or could you probably could set",
    "start": "1772399",
    "end": "1777960"
  },
  {
    "text": "the context when you call the go routine or when you call a function or something right I don't know you probably have to wouldn't you yeah I mean it's it's if",
    "start": "1777960",
    "end": "1785519"
  },
  {
    "text": "it's not a one1 type of real um situation like each go routine gets only",
    "start": "1785519",
    "end": "1790919"
  },
  {
    "text": "one context uh usually you can dve you know contexts from contexts and you know",
    "start": "1790919",
    "end": "1796120"
  },
  {
    "text": "you can just set a new context yeah I don't know I don't know if I'm for it I would need to see a proposal I like the",
    "start": "1796120",
    "end": "1803039"
  },
  {
    "text": "explicitness of it I just don't like that like I mean it has to be everywhere if it needs to be everywhere maybe it",
    "start": "1803039",
    "end": "1810159"
  },
  {
    "text": "doesn't have to be explicit but it's also nice because every like you you are it's visibly there you know that it",
    "start": "1810159",
    "end": "1816880"
  },
  {
    "text": "actually takes a context and you need to do something about that context right like right but for people who don't",
    "start": "1816880",
    "end": "1822159"
  },
  {
    "text": "doesn't necessarily care about the context maybe it's a little bit too much yeah well I suppose you'd be able to",
    "start": "1822159",
    "end": "1827320"
  },
  {
    "text": "ignore it always you wouldn't even know it's there if you didn't need it if it was implicit but I think um yeah I mean",
    "start": "1827320",
    "end": "1834600"
  },
  {
    "text": "from people who are coming to go um you know their primary questions like hey",
    "start": "1834600",
    "end": "1839960"
  },
  {
    "text": "what is context like it's everywhere I've never seen it in other languages as such a fundamentally visible you know",
    "start": "1839960",
    "end": "1846720"
  },
  {
    "text": "primitive maybe they're like familiar with context or not uh is I think it's just too visible in go um you need to",
    "start": "1846720",
    "end": "1853960"
  },
  {
    "text": "explain them the the you know the story and the context and why it's useful and so on and uh they learn not to see it if",
    "start": "1853960",
    "end": "1861080"
  },
  {
    "text": "they don't need it they know that they need to propagate it I think propagation is a little bit like the other concern",
    "start": "1861080",
    "end": "1868039"
  },
  {
    "text": "um it's not automatic so you need to you know pass it explicitly and like lots of the newcomers don't know much about you",
    "start": "1868039",
    "end": "1875240"
  },
  {
    "text": "know these Concepts and they end up like Breaking the Chain sometimes yeah I I",
    "start": "1875240",
    "end": "1880600"
  },
  {
    "text": "totally agree with that I mean and and when I explain the context package and you know context propagation I usually",
    "start": "1880600",
    "end": "1886559"
  },
  {
    "text": "basically have to take a couple steps back first and say okay well this is what context propagation is this is why",
    "start": "1886559",
    "end": "1892360"
  },
  {
    "text": "it's useful why you use it now this is how it's actually done and go so it's like there's two things there there two",
    "start": "1892360",
    "end": "1898120"
  },
  {
    "text": "fundamental concepts that must be introduced for somebody to understand even how to use it properly and what it ish there's also a real um what's the",
    "start": "1898120",
    "end": "1905799"
  },
  {
    "text": "word I'm looking for uh in the standard Library they're not using it the same way all over the place uh and it's",
    "start": "1905799",
    "end": "1912320"
  },
  {
    "text": "really kind of frustrating I'll give you an example uh in the exact package uh there's exact uh",
    "start": "1912320",
    "end": "1917679"
  },
  {
    "text": "command context which takes a context and creates a command yet there is no way to get back the context on that",
    "start": "1917679",
    "end": "1924159"
  },
  {
    "text": "command it's a private unexported field but in request you can on HTTP request",
    "start": "1924159",
    "end": "1930799"
  },
  {
    "text": "you can get access to it so there's lots of places where it's just you know it's not consistent and I think maybe",
    "start": "1930799",
    "end": "1937679"
  },
  {
    "text": "formalizing or Con making it more consistent would help a lot of problems true and it's also like uh the context",
    "start": "1937679",
    "end": "1943320"
  },
  {
    "text": "you know added to the standard library at a later time so it doesn't even like follow the best practices right uh the",
    "start": "1943320",
    "end": "1949399"
  },
  {
    "text": "context package itself says like uh use this as the first argument of a function call never pin it and you know if you",
    "start": "1949399",
    "end": "1955320"
  },
  {
    "text": "take a look at the HTTP package request as a you know uh context uh as a field",
    "start": "1955320",
    "end": "1960840"
  },
  {
    "text": "because they couldn't break the apis they had it had to like put the context",
    "start": "1960840",
    "end": "1966360"
  },
  {
    "text": "somewhere and then they made it a field so all of this like organically you know grown features is just like making it",
    "start": "1966360",
    "end": "1972480"
  },
  {
    "text": "very complicated for people come into the language for the first time I'm not sure if any any of this is going to be",
    "start": "1972480",
    "end": "1978559"
  },
  {
    "text": "different in two points through well but it is an opportunity to potentially clean up some of that stuff like you say",
    "start": "1978559",
    "end": "1984360"
  },
  {
    "text": "context is one it was added quite late and I know that they didn't like the design when they had those methods in",
    "start": "1984360",
    "end": "1990399"
  },
  {
    "text": "the quest they wished that they would was just passing as an argument to the do and the get and the post so what",
    "start": "1990399",
    "end": "1998679"
  },
  {
    "text": "moving shifting gears very slightly which areas of go do we feel like we",
    "start": "1998679",
    "end": "2005159"
  },
  {
    "text": "haven't really explored the full potential yet yet or which areas of tech could go move into and make a bit of an",
    "start": "2005159",
    "end": "2012000"
  },
  {
    "text": "impact I know that initially go wasn't really awesome for building websites and",
    "start": "2012000",
    "end": "2018240"
  },
  {
    "text": "things it was but of course Mark maybe for those that don't know about the Buffalo package you could just tell us",
    "start": "2018240",
    "end": "2023760"
  },
  {
    "text": "briefly what that is oh well the the tagline basically is it's rails for go",
    "start": "2023760",
    "end": "2029240"
  },
  {
    "text": "I'm not going to pretend that it's anything more than that you know it for for me it was solving a it solves a",
    "start": "2029240",
    "end": "2034440"
  },
  {
    "text": "couple problems one is I need to just knock stuff out very quickly and I don't want to deal with folder layouts and I",
    "start": "2034440",
    "end": "2039720"
  },
  {
    "text": "don't want to deal with how do I deal with sessions and templates and this and that and the other thing and cookies or",
    "start": "2039720",
    "end": "2045200"
  },
  {
    "text": "whatever like I just kind of get all that by default with with uh Buffalo but the standard Library definitely misses a",
    "start": "2045200",
    "end": "2051200"
  },
  {
    "text": "few pieces when it comes to web it definitely got a lot right but then there are some pieces um where it",
    "start": "2051200",
    "end": "2057760"
  },
  {
    "text": "definitely could do with being approved and one of the big examples that everybody talks about is a much better router the current router is really kind",
    "start": "2057760",
    "end": "2064839"
  },
  {
    "text": "of it's very very weak the mxer is really weak you can't really build decent uh restful apis on it without",
    "start": "2064839",
    "end": "2071480"
  },
  {
    "text": "doing a bunch of case and switch statements and yada y y to check verbs and stuff like that um so that would be",
    "start": "2071480",
    "end": "2077800"
  },
  {
    "text": "the big place where I think uh webwise that it's really missing um is just is a",
    "start": "2077800",
    "end": "2083679"
  },
  {
    "text": "much much better router because we all have to go to these third party routers you know I hear everybody talk about oh I use the standard library but I use",
    "start": "2083679",
    "end": "2089000"
  },
  {
    "text": "gorilla Mox and it's like well you're not using the standard Library anymore right and it's like well I don't use",
    "start": "2089000",
    "end": "2094118"
  },
  {
    "text": "this I use the standard library but with the HTTP router it's like like again you're no longer just using the standard",
    "start": "2094119",
    "end": "2099160"
  },
  {
    "text": "Library you have to pull in a better router uh and there's a bunch of those packages uh for sessions and stuff like",
    "start": "2099160",
    "end": "2104560"
  },
  {
    "text": "that that were just kind of missing or are only halfway implemented if that makes sense well would you say would",
    "start": "2104560",
    "end": "2110960"
  },
  {
    "text": "wouldn't you say though that these these kinds of sort of a uses of the language right to create these kinds of",
    "start": "2110960",
    "end": "2116720"
  },
  {
    "text": "Frameworks and whatnot these are things that are I would argue are better suited U um for the community to provide these",
    "start": "2116720",
    "end": "2123359"
  },
  {
    "text": "things right so in go you you get the Bare Bones you get the sort of building block right it's up to you to kind of",
    "start": "2123359",
    "end": "2129119"
  },
  {
    "text": "add because you know obviously these things sort of tend to tend to be opinionated right so how you assemble a",
    "start": "2129119",
    "end": "2134400"
  },
  {
    "text": "web framework how you do routing how you you know store things like you know models and and how you interact with",
    "start": "2134400",
    "end": "2139720"
  },
  {
    "text": "databases these are choices that you're making these are part of your design so if if the standard library is then sort",
    "start": "2139720",
    "end": "2145359"
  },
  {
    "text": "of taking that choice Away really from Engineers I'd argue that that's kind of overstepping it's bounds as as a",
    "start": "2145359",
    "end": "2151920"
  },
  {
    "text": "language I don't think improving the current router is taking away anything from anybody",
    "start": "2151920",
    "end": "2158079"
  },
  {
    "text": "um because you could still obviously have your own third part routers I mean obviously I'm somebody who doesn't believe that I completely agree with you",
    "start": "2158079",
    "end": "2164200"
  },
  {
    "text": "I think the standard library is about building blocks um for Library maintainers such as those who maintain",
    "start": "2164200",
    "end": "2170319"
  },
  {
    "text": "tools like Buffalo and other uh Frameworks and you know gorilla mocks and all those things like that I",
    "start": "2170319",
    "end": "2175720"
  },
  {
    "text": "completely 100% agree and the go team also agrees I've had long conversations with members of them where they say",
    "start": "2175720",
    "end": "2181800"
  },
  {
    "text": "these packages are meant as building blocks the problem really becomes in that we've somehow gotten to this",
    "start": "2181800",
    "end": "2188200"
  },
  {
    "text": "culture where if you use anything other than the standard Library you're doing it wrong and I see that all the time I",
    "start": "2188200",
    "end": "2193359"
  },
  {
    "text": "see people getting very Adam and like only use the standard library and it's like well it's not for everybody and it's the building blocks and I could use",
    "start": "2193359",
    "end": "2199880"
  },
  {
    "text": "the standard library and Ruby too to to build a web app but I had rails which made it a lot nicer or Sinatra and the",
    "start": "2199880",
    "end": "2206319"
  },
  {
    "text": "same thing in Java and every other language that has a web standard Library you know I just think the router that is",
    "start": "2206319",
    "end": "2212280"
  },
  {
    "text": "there is really weak and there are times when I do want to just use a standard Library for smaller things and that",
    "start": "2212280",
    "end": "2219280"
  },
  {
    "text": "router just isn't enough to make it work uh and I still have to bring a third part router I think the confusion",
    "start": "2219280",
    "end": "2225440"
  },
  {
    "text": "started because you know go was a batteries included like it's perceived",
    "start": "2225440",
    "end": "2230880"
  },
  {
    "text": "as a batteries included language or standard library and um there was this",
    "start": "2230880",
    "end": "2236040"
  },
  {
    "text": "culture of like relying only on the standard Library building blocks and rather than like you know just like",
    "start": "2236040",
    "end": "2242359"
  },
  {
    "text": "building more abstractions um especially for like you know typical things like the HTTP layers or um you know some",
    "start": "2242359",
    "end": "2250079"
  },
  {
    "text": "encoders decoders like you know the Json package and um I think we are suffering from that like initial culture uh",
    "start": "2250079",
    "end": "2256839"
  },
  {
    "text": "because we expected a lot from the standard library because to be fair if you compare 10 years ago this was the",
    "start": "2256839",
    "end": "2264599"
  },
  {
    "text": "only standard library with an H good HTP package and a Json library right like so",
    "start": "2264599",
    "end": "2271119"
  },
  {
    "text": "um I think like you know originally speaking like that is coming from there but we need to just pass it and you know",
    "start": "2271119",
    "end": "2278400"
  },
  {
    "text": "realize the truth and I think the team kind of like got to that point um we need to keep the standard Library as a",
    "start": "2278400",
    "end": "2285359"
  },
  {
    "text": "building block and you know let people build on top yeah agreed so you don't have to just use a standard",
    "start": "2285359",
    "end": "2292319"
  },
  {
    "text": "Library yes did you hear that everybody you don't have to just use the standard Library it's okay it's okay to pull in",
    "start": "2292319",
    "end": "2299720"
  },
  {
    "text": "some other packages it really especially with modules now it does make that a lot easier going back to the original",
    "start": "2299720",
    "end": "2305720"
  },
  {
    "text": "question uh you know Matt ask I think you know it's really hard to use go when",
    "start": "2305720",
    "end": "2312079"
  },
  {
    "text": "your problem has like a lot of business logic um I was having this conversation",
    "start": "2312079",
    "end": "2317560"
  },
  {
    "text": "you know on a couple of times that like my background is actually um at smaller",
    "start": "2317560",
    "end": "2322839"
  },
  {
    "text": "companies where you know the problems are ambiguous um our abstraction changes",
    "start": "2322839",
    "end": "2328440"
  },
  {
    "text": "all the time but we were trying to like as we are you know tweaking our abstractions and so on we still try to",
    "start": "2328440",
    "end": "2334280"
  },
  {
    "text": "keep things simple but there was this like like cost of like you know organic growth in terms of you know because the",
    "start": "2334280",
    "end": "2340520"
  },
  {
    "text": "problem evolves over time your design evolves over time and um go type system",
    "start": "2340520",
    "end": "2346560"
  },
  {
    "text": "is really small it's really super nice if you have like a lot of confidence in",
    "start": "2346560",
    "end": "2353880"
  },
  {
    "text": "in your types and you know this is great for riding you know networking servers",
    "start": "2353880",
    "end": "2359160"
  },
  {
    "text": "or like you know writing n implementing a networking stack because most of the",
    "start": "2359160",
    "end": "2364200"
  },
  {
    "text": "time everything is well defined and so on but it's not just really really good for like areas uh where things are could",
    "start": "2364200",
    "end": "2371680"
  },
  {
    "text": "be a little bit like influx uh may require more design you still need some sort of flexibility you're still trying",
    "start": "2371680",
    "end": "2378680"
  },
  {
    "text": "to keep things under control but you know you're not like you need to just tweak your design as you go I've worked",
    "start": "2378680",
    "end": "2385560"
  },
  {
    "text": "on a lot of like you know big rule engines message message paring systems",
    "start": "2385560",
    "end": "2391520"
  },
  {
    "text": "and I would probably not use go um for those type of problems where I needed",
    "start": "2391520",
    "end": "2397440"
  },
  {
    "text": "flexibility so I'm not like super you know opiniated against generics because",
    "start": "2397440",
    "end": "2402680"
  },
  {
    "text": "um I see some we are actually like go is disabled in some of the used cases by not providing that level of flexibility",
    "start": "2402680",
    "end": "2409520"
  },
  {
    "text": "I have to say to piggyback on that I I do miss on occasion the flexibility that Ruby offered me for unstructured kind of",
    "start": "2409520",
    "end": "2415880"
  },
  {
    "text": "data you know where you could just kind of pull in whatever and it's just kind of there and you can work with it um",
    "start": "2415880",
    "end": "2422119"
  },
  {
    "text": "which is a lot harder to do and go I I completely agree but I also really have the type safety go too so I'm not not",
    "start": "2422119",
    "end": "2430079"
  },
  {
    "text": "exactly eager to rush back to the dynamic world of Ruby but there are times trade-offs trade-offs exactly you",
    "start": "2430079",
    "end": "2436760"
  },
  {
    "text": "know um I'm willing to to let go of the that a little bit but I don't have that problem set yeah I don't I'm not",
    "start": "2436760",
    "end": "2443599"
  },
  {
    "text": "Advocate I'm not like you know here encouraging people to go and use you know uh Dynamic type systems it's more",
    "start": "2443599",
    "end": "2449760"
  },
  {
    "text": "of like yeah maybe it could be a little bit better like I mean I'm probably biased because um I'm coming from jvm",
    "start": "2449760",
    "end": "2456079"
  },
  {
    "text": "where world and it's also not a world that I suggest like it's not I think",
    "start": "2456079",
    "end": "2461160"
  },
  {
    "text": "it's a very bloated world compared to goh I don't want us to like go and like",
    "start": "2461160",
    "end": "2466200"
  },
  {
    "text": "end up being there because there's already such a world right like you use Java if you need that type of language",
    "start": "2466200",
    "end": "2472680"
  },
  {
    "text": "but yeah I mean this is just like uh one of the use cases I would rather use a different language rather than using go",
    "start": "2472680",
    "end": "2479599"
  },
  {
    "text": "right tool for the right job yes and speaking of other languages are there any things that we'd like to steal from",
    "start": "2479599",
    "end": "2485800"
  },
  {
    "text": "those other languages to bring into go you're talking about the future that's a really good question I really don't like",
    "start": "2485800",
    "end": "2491880"
  },
  {
    "text": "centralized systems but I wish that we had a central package manager like a metadata service and maybe we can bu",
    "start": "2491880",
    "end": "2498480"
  },
  {
    "text": "build more Tools around it it's kind of like hard to isn't that what Athens is trying to be Athens is also more like",
    "start": "2498480",
    "end": "2505480"
  },
  {
    "text": "yeah exactly Athens is also more of like a proxy so you can um as a for example organization you can run your Athens",
    "start": "2505480",
    "end": "2513119"
  },
  {
    "text": "instance but it's also aware of the central Athens it's a really good model and you know",
    "start": "2513119",
    "end": "2519839"
  },
  {
    "text": "sort of like having this like metadata somewhere uh stored kind of is going to",
    "start": "2519839",
    "end": "2525560"
  },
  {
    "text": "enable everybody to write Tools around it and like I think it will make maintenance much easier for the library owners it probably will be easier to",
    "start": "2525560",
    "end": "2533119"
  },
  {
    "text": "just query like who is dependent on what like what you know restrictions they have in terms of versioning and so on so",
    "start": "2533119",
    "end": "2539920"
  },
  {
    "text": "I'm really excited about ethens yeah me too I think a lot of people are but what we talking about modules can we talk",
    "start": "2539920",
    "end": "2545520"
  },
  {
    "text": "about how we really need versioned binaries in modules explain we want to talk about adding things so modules give",
    "start": "2545520",
    "end": "2552280"
  },
  {
    "text": "us the ability to version packages um but what about the binaries that are",
    "start": "2552280",
    "end": "2557319"
  },
  {
    "text": "associated with some of these things so an example would obviously be something like a like Buffalo where you know I've",
    "start": "2557319",
    "end": "2562960"
  },
  {
    "text": "got an app that's on an older version of Buffalo I want to also have a binary that matches that yeah I mean definitely",
    "start": "2562960",
    "end": "2569640"
  },
  {
    "text": "and not say use the later like you know you might have like Buffalo's what 142",
    "start": "2569640",
    "end": "2575160"
  },
  {
    "text": "right now and that generates a lot different code than say 12 did right version 12 but if your app is on version",
    "start": "2575160",
    "end": "2582079"
  },
  {
    "text": "12 and you're using the binary from 14 you're going to get this random code that may not compile in your application",
    "start": "2582079",
    "end": "2589079"
  },
  {
    "text": "or work correctly in your application so it'd be nice to be able to say I'm in this module use this you know use a",
    "start": "2589079",
    "end": "2595240"
  },
  {
    "text": "binary that matches my whatever I have in my module file so I have a you know you get your requirements maybe have a a",
    "start": "2595240",
    "end": "2602040"
  },
  {
    "text": "bins down the bottom where you can add you know Buffalo add for 2.2 and then I",
    "start": "2602040",
    "end": "2608160"
  },
  {
    "text": "don't know you'd call go exact Buffalo for example kind of like bundler does you do bundler exact rails and that runs",
    "start": "2608160",
    "end": "2615160"
  },
  {
    "text": "a very particular version of rails that's from your gem file which is kind of their you know their package",
    "start": "2615160",
    "end": "2621280"
  },
  {
    "text": "management system and in the Ruby World um so that would run the correct version of rails for your project and I'd love",
    "start": "2621280",
    "end": "2628720"
  },
  {
    "text": "to be able to see go exact XYZ where you can do the same thing but this is not like specific to like go binaries right",
    "start": "2628720",
    "end": "2635559"
  },
  {
    "text": "like I mean it's a problem generally yeah we've got it in another langu but I'm saying like so rails does that where",
    "start": "2635559",
    "end": "2640839"
  },
  {
    "text": "you've got or Ruby does that with bundler where you can have your your binaries are technically versioned uh if",
    "start": "2640839",
    "end": "2647000"
  },
  {
    "text": "you call them through bundle exec um and I'd love to have that kind of in my mod file where it'll use the right binaries",
    "start": "2647000",
    "end": "2653640"
  },
  {
    "text": "if I do go exact what does your current make files look like is it like um is it",
    "start": "2653640",
    "end": "2658839"
  },
  {
    "text": "directly dependent on I mean I say make files I'm sorry because if it's such a",
    "start": "2658839",
    "end": "2664040"
  },
  {
    "text": "you know huge workflow I assume that you need to represent it in a you know bash",
    "start": "2664040",
    "end": "2669200"
  },
  {
    "text": "script or something well no I just use go paath SL bin okay okay uh my make",
    "start": "2669200",
    "end": "2675480"
  },
  {
    "text": "files are currently littered with go mod tidy but that's another thing for another time you got to run go mod tidy",
    "start": "2675480",
    "end": "2681280"
  },
  {
    "text": "at the end of every single go command uh but that's another thing altogether but i' like I said I'd love to be able to say go exact Fu and have it run Foo at",
    "start": "2681280",
    "end": "2689119"
  },
  {
    "text": "whatever version is listed inside my mod file would you rather um you know the binaries are named after they versions",
    "start": "2689119",
    "end": "2696640"
  },
  {
    "text": "like for example um you know Buffalo one point whatever being the binary name",
    "start": "2696640",
    "end": "2703200"
  },
  {
    "text": "maybe um still in the bin directory under goath or whatever I mean so here's",
    "start": "2703200",
    "end": "2710240"
  },
  {
    "text": "the thing like the go paath is going away but I haven't heard anybody tell me where the binaries are going to go no",
    "start": "2710240",
    "end": "2717359"
  },
  {
    "text": "one's really talked about what happens when you go do go install where do they go yeah I mean so we're kind of open",
    "start": "2717359",
    "end": "2724880"
  },
  {
    "text": "for there you know personally I'd love to see them go somewhere in your path so people don't have to add goath bin to",
    "start": "2724880",
    "end": "2732079"
  },
  {
    "text": "their existing path already uh because we get that one in Buffalo a lot it's like I installed it but I can't find the",
    "start": "2732079",
    "end": "2737359"
  },
  {
    "text": "command and it's like well did you add go paath bin they're like oh I didn't know you had to it's like well yeah you",
    "start": "2737359",
    "end": "2742960"
  },
  {
    "text": "do um and so it's a you know it's a real problem with go and I see it and I'm sure Johnny sees it when he's teaching",
    "start": "2742960",
    "end": "2749119"
  },
  {
    "text": "people in Matt too like you see it all the time in classes they don't have go paath bin added so so first yes I would",
    "start": "2749119",
    "end": "2755680"
  },
  {
    "text": "love see bins go somewhere where they are useful without actually without having another step of setting up your",
    "start": "2755680",
    "end": "2761720"
  },
  {
    "text": "environment further but I'd also like to said you know maybe we could do kind of like you know you could see like you know Buffalo at v114 Buffalo at",
    "start": "2761720",
    "end": "2771400"
  },
  {
    "text": "v14.1 whatever it is and when you do go exact Buffalo it runs the right version from your mod file wherever those files",
    "start": "2771400",
    "end": "2778040"
  },
  {
    "text": "are that would be how I would like to see it done and maybe you get like a Sim link to whatever the latest version is",
    "start": "2778040",
    "end": "2784079"
  },
  {
    "text": "or something like that so if you just went Buffalo you get the latest version I'm using obviously Buffalo as an example it can be any",
    "start": "2784079",
    "end": "2792000"
  },
  {
    "text": "Buffalo so which of you did the survey the user survey go 2018 I do it every",
    "start": "2792559",
    "end": "2799040"
  },
  {
    "text": "year I do it every year yeah I did yeah I do there year excellent and I wonder",
    "start": "2799040",
    "end": "2804359"
  },
  {
    "text": "how many of our listeners do oh did you read it did you see the results I saw the highlights which were actually quite",
    "start": "2804359",
    "end": "2810920"
  },
  {
    "text": "interesting to to look at this year there were about 100 countries 103 countries um participating and with well",
    "start": "2810920",
    "end": "2817960"
  },
  {
    "text": "over 5,800 survey respondents so it was it was much larger scale than it it has",
    "start": "2817960",
    "end": "2823800"
  },
  {
    "text": "been in previous years so yeah it was it has been an interesting read yeah I didn't even know there were 103",
    "start": "2823800",
    "end": "2829800"
  },
  {
    "text": "countries I'm joking you clearly haven't hung around my kids long enough from lots of different countries",
    "start": "2829800",
    "end": "2836200"
  },
  {
    "text": "aren't you in the UK aren don't you have a little something going on right now called a what was it what was it brexit",
    "start": "2836200",
    "end": "2841400"
  },
  {
    "text": "uh familiar with I don't know what you mean yeah you don't want to be bringing",
    "start": "2841400",
    "end": "2846440"
  },
  {
    "text": "that one up right now Johnny too soon no not soon",
    "start": "2846440",
    "end": "2854078"
  },
  {
    "text": "[Music]",
    "start": "2854600",
    "end": "2860290"
  },
  {
    "text": "enough this episode is brought to you by O'Reilly Velocity Conference in San Jose California June 10th through June 13th",
    "start": "2860359",
    "end": "2867640"
  },
  {
    "text": "to get ahead today your organization needs to be Cloud native and O'Reilly Velocity Conference covers everything",
    "start": "2867640",
    "end": "2872880"
  },
  {
    "text": "from kubernetes and S reliability engineering to observability in performance to give you a comprehensive",
    "start": "2872880",
    "end": "2878119"
  },
  {
    "text": "understanding of applications and services and stay on top of the rapidly changing Cloud landscape they have",
    "start": "2878119",
    "end": "2883680"
  },
  {
    "text": "amazing training amazing speakers and of course an amazing Community here from industry leaders like Lena Hall Julie",
    "start": "2883680",
    "end": "2889839"
  },
  {
    "text": "Horvath Liz Fong Jones Emily Freeman and more learn new skills approaches and",
    "start": "2889839",
    "end": "2895880"
  },
  {
    "text": "Technologies and get expert insights and essential training on critical topics like chaos engineering Cloud native",
    "start": "2895880",
    "end": "2902160"
  },
  {
    "text": "systems emerging Tech serverless production engineering and of course kubernetes learn more and register at",
    "start": "2902160",
    "end": "2908400"
  },
  {
    "text": "velocity.com CA again it's in San Jose California June 10th through June 13th plus our",
    "start": "2908400",
    "end": "2915640"
  },
  {
    "text": "listeners get 20% off bronze silver and gold passes when you use the code go time 20 again velocity.com CA or check",
    "start": "2915640",
    "end": "2923599"
  },
  {
    "text": "the shows for [Music]",
    "start": "2923599",
    "end": "2928500"
  },
  {
    "text": "details for the survey some of the things that I found interesting CU when I when I sort",
    "start": "2934599",
    "end": "2941160"
  },
  {
    "text": "of looked through it and to find things that were particularly relevant to me in my line of work I saw a lot of U um",
    "start": "2941160",
    "end": "2947319"
  },
  {
    "text": "basically the the most common use of go was building you know API and RPC Services um and also building CLI tools",
    "start": "2947319",
    "end": "2953720"
  },
  {
    "text": "so a lot of people are building pretty much whenever it is a new project that comes along that requires that type of",
    "start": "2953720",
    "end": "2959400"
  },
  {
    "text": "uh um um use Go is is becoming more and more sort of the go-to tool for that",
    "start": "2959400",
    "end": "2965000"
  },
  {
    "text": "that kind of surprise me at all because I think from the very first time go was introduced it was sort of a position as",
    "start": "2965000",
    "end": "2970880"
  },
  {
    "text": "sort of the the language for the cloud the language for building these type of services these type of networked programs so that kind of didn't surprise",
    "start": "2970880",
    "end": "2977440"
  },
  {
    "text": "me at all yeah let's be honest writing CLI tools and go is awesome it's really",
    "start": "2977440",
    "end": "2982799"
  },
  {
    "text": "you have a static binary that's awesome right it's so good it's so much nicer",
    "start": "2982799",
    "end": "2988559"
  },
  {
    "text": "than any other language I've ever used to do it yeah the startup time is really fast it's just awesome yeah yeah it wins",
    "start": "2988559",
    "end": "2994680"
  },
  {
    "text": "at command line but also I mean I I learned go I built something I wanted to build something for app engine back in",
    "start": "2994680",
    "end": "3000920"
  },
  {
    "text": "the day and there were three language options it was either Java Java python or go and it had it's just had this",
    "start": "3000920",
    "end": "3007680"
  },
  {
    "text": "weird little like exp badge on it which is I'm like a magpie when I see little experimental things shining on the other",
    "start": "3007680",
    "end": "3013960"
  },
  {
    "text": "sites I go and collect them uh so that's how I started getting into go I wanted to build apis and it was it just had",
    "start": "3013960",
    "end": "3019640"
  },
  {
    "text": "everything I needed even with the router comes built in uh which I agree isn't as powerful as it could be but even with",
    "start": "3019640",
    "end": "3026319"
  },
  {
    "text": "just that and the Json stuff and the fact that the ghost the the servers that",
    "start": "3026319",
    "end": "3031880"
  },
  {
    "text": "they're just so quick like and you know it does I learned later each request",
    "start": "3031880",
    "end": "3036920"
  },
  {
    "text": "gets its own go routine so you kind of have concurrency going on for free without even realizing when you start",
    "start": "3036920",
    "end": "3042839"
  },
  {
    "text": "building a I think we all tried at at very very beginning to to launch every request in a go routine and failed at",
    "start": "3042839",
    "end": "3050079"
  },
  {
    "text": "least I did like day one I was like oh sweet I'm going to throw all these in go routines and I'm like why is they working oh they're already",
    "start": "3050079",
    "end": "3056720"
  },
  {
    "text": "ter it's uh the funny story is actually the uh the initial go EP engine implementation didn't really provide",
    "start": "3056720",
    "end": "3063920"
  },
  {
    "text": "concurrence there was like an event Loop you couldn't really realize that was the case because you know they were able to",
    "start": "3063920",
    "end": "3069400"
  },
  {
    "text": "hide it in a way that like users cannot recognize but there was actually an event Loop the new runtime is supporting",
    "start": "3069400",
    "end": "3076119"
  },
  {
    "text": "full concurrency so so that's really good news but like yeah it's just it was different than the actual runtime going",
    "start": "3076119",
    "end": "3083599"
  },
  {
    "text": "back to like a penion case I think if you looked at other language supports",
    "start": "3083599",
    "end": "3088880"
  },
  {
    "text": "there was always like since Aenon is a Sandbox environment as well as like have so so much runtime restrictions it was",
    "start": "3088880",
    "end": "3094920"
  },
  {
    "text": "you know there was a lot of complexity figuring out what framework to use like what libraries is supported on app",
    "start": "3094920",
    "end": "3101079"
  },
  {
    "text": "engine for other language run times but I think go just you know worked the standard library at least work and since",
    "start": "3101079",
    "end": "3106760"
  },
  {
    "text": "the standard Library had a lot of things you know batteries included um it was so",
    "start": "3106760",
    "end": "3112240"
  },
  {
    "text": "much easier to you know get started and be productive with go on on EP engine",
    "start": "3112240",
    "end": "3117359"
  },
  {
    "text": "yeah absolutely I actually have little things that I've built that are still running I go to it and it's still there",
    "start": "3117359",
    "end": "3124599"
  },
  {
    "text": "and I haven't touched it for years literally wow yeah I think we sent out like some emails hey if you're using a",
    "start": "3124599",
    "end": "3130880"
  },
  {
    "text": "very old version of uh go please just migrate or something because we wanted",
    "start": "3130880",
    "end": "3137240"
  },
  {
    "text": "to stop supporting 1.6 a long time ago but we couldn't because there were so",
    "start": "3137240",
    "end": "3142400"
  },
  {
    "text": "many users and like you know what happened in um we introduced you know the context package and like all the",
    "start": "3142400",
    "end": "3148240"
  },
  {
    "text": "apis got broken and so on and like and for a long time google had to support",
    "start": "3148240",
    "end": "3153559"
  },
  {
    "text": "context package coming from the net package yeah that's just because uh we can't really break people that that was",
    "start": "3153559",
    "end": "3160480"
  },
  {
    "text": "really annoying the switch from X context to just context what did really",
    "start": "3160480",
    "end": "3165720"
  },
  {
    "text": "bite a lot of people yes that was frustrating wait didn't go fix help with",
    "start": "3165720",
    "end": "3172319"
  },
  {
    "text": "that so like I mean lots of people just didn't want to touch their existing deployments uh so they would have like",
    "start": "3172319",
    "end": "3177960"
  },
  {
    "text": "you know uh their existing stuff relying on the older apis and um we couldn't",
    "start": "3177960",
    "end": "3184200"
  },
  {
    "text": "break and that's how all this like aliases and everything actually like you know came around because we couldn't",
    "start": "3184200",
    "end": "3190799"
  },
  {
    "text": "break and migrate people there are lots of people who are not like catching up with the latest versions especially in",
    "start": "3190799",
    "end": "3196559"
  },
  {
    "text": "like cases where projects are hobby projects or it's like a super large company or a kind of like an Enterprise",
    "start": "3196559",
    "end": "3203319"
  },
  {
    "text": "company that like deploys one particular solution and like never touches it for 10 years it's really you know hard to go",
    "start": "3203319",
    "end": "3209880"
  },
  {
    "text": "and like tell people like hey you need to rebuild you need to make sure that it's working with the new version and",
    "start": "3209880",
    "end": "3215200"
  },
  {
    "text": "you know push it even if you you know enforce security releases and so on like",
    "start": "3215200",
    "end": "3221000"
  },
  {
    "text": "some people don't care no it's true I we see that in corporate environments all the time yeah you know companies still",
    "start": "3221000",
    "end": "3226559"
  },
  {
    "text": "using 1.8 1.7 because that's what they build their app on they have a whole process that you have to go through to",
    "start": "3226559",
    "end": "3232880"
  },
  {
    "text": "clear new versions through you know appc or whatever they need to do and so most",
    "start": "3232880",
    "end": "3238480"
  },
  {
    "text": "of them just stay on the version that got cleared through their lawyers and security team and that's it and",
    "start": "3238480",
    "end": "3243920"
  },
  {
    "text": "sometimes like if you're deploying to a customer for example you know they need to pay you more because you're doing",
    "start": "3243920",
    "end": "3249200"
  },
  {
    "text": "some extra work right like so it's not that easy to say hey I just need to",
    "start": "3249200",
    "end": "3254359"
  },
  {
    "text": "rebuild this and need to redeploy the way the contracts work for software as a",
    "start": "3254359",
    "end": "3260160"
  },
  {
    "text": "you know service type of situations is just really complicated so another high highl light which is kind of near and",
    "start": "3260160",
    "end": "3267200"
  },
  {
    "text": "dear to my heart and I think also for everybody on the panel here uh is that uh most folks most respondents to the",
    "start": "3267200",
    "end": "3274319"
  },
  {
    "text": "survey they said they were they felt welcome in the go Community um and basically they thought that the um the",
    "start": "3274319",
    "end": "3280839"
  },
  {
    "text": "community was sort of making it easier for newcomers to unboard to to sort of join and be part of the community feel",
    "start": "3280839",
    "end": "3286559"
  },
  {
    "text": "like feeling like they can they can communicate you know with folks and they can um ask for help and not feel like they're going to get sort of a beat back",
    "start": "3286559",
    "end": "3293240"
  },
  {
    "text": "or or not feel silly for asking you know um questions so I think that's that's a pretty big deal because not many",
    "start": "3293240",
    "end": "3299480"
  },
  {
    "text": "communities are like that a lot of communities these days are sort of trying to come more sort of a um",
    "start": "3299480",
    "end": "3304680"
  },
  {
    "text": "friendly U more sort of a newcomer friendly but I think that's something the go Community got right from the get",
    "start": "3304680",
    "end": "3309960"
  },
  {
    "text": "basically trying to be more welcoming to people from all backgrounds yeah that's really nice yeah I think so they did",
    "start": "3309960",
    "end": "3315680"
  },
  {
    "text": "make a concerted effort in the beginning I think I noticed it which is another thing that pulled me in a bit I noticed",
    "start": "3315680",
    "end": "3322039"
  },
  {
    "text": "that there was a focus around having diverse teams in having diverse communities and they saw the value in",
    "start": "3322039",
    "end": "3328640"
  },
  {
    "text": "that and so it's kind of like it's a no-brainer in the go Community which is why I always say at my talks if you know",
    "start": "3328640",
    "end": "3335119"
  },
  {
    "text": "if you're weird then come to the go Community because this is where all the weird people get together and like Co",
    "start": "3335119",
    "end": "3341760"
  },
  {
    "text": "things we're weird too exactly I would never imagine myself being a you know participant of a language Community like",
    "start": "3341760",
    "end": "3349079"
  },
  {
    "text": "you know it was always like oh these are programming language people I should probably stay away uh go was very very",
    "start": "3349079",
    "end": "3355280"
  },
  {
    "text": "different that's why it's like I think the first programming language Community I feel like I'm kind of like a part of",
    "start": "3355280",
    "end": "3360400"
  },
  {
    "text": "it right right oh that's great yeah we're all people first we just happen to you know love the same language so you",
    "start": "3360400",
    "end": "3367440"
  },
  {
    "text": "know we can't lose sight of that yeah well also I mean I've noticed any Dev team that I've been on the ones that",
    "start": "3367440",
    "end": "3373920"
  },
  {
    "text": "have had the most diverse group that tends to be the best team just because",
    "start": "3373920",
    "end": "3379359"
  },
  {
    "text": "different perspectives and you know we're building software for humans mostly or at some point the humans going",
    "start": "3379359",
    "end": "3385079"
  },
  {
    "text": "to probably interact with it so having all those different perspectives on the team I think that's what's happening where we that's why it's so valuable so",
    "start": "3385079",
    "end": "3392359"
  },
  {
    "text": "yeah and the go Community just makes that a no-brainer which I like and of course because go is growing so quickly",
    "start": "3392359",
    "end": "3399720"
  },
  {
    "text": "most people that we encounter are going to be new you know we're really growing rapidly so it's I think I like that",
    "start": "3399720",
    "end": "3406480"
  },
  {
    "text": "Focus too and I always I try and only really do talks for the beginners because I think you know the experts are",
    "start": "3406480",
    "end": "3412720"
  },
  {
    "text": "theying look after themselves mhm what am I a beginner no no no",
    "start": "3412720",
    "end": "3418839"
  },
  {
    "text": "no I like the fact that like we can ask questions to each other and like we can challenge right like that's really",
    "start": "3418839",
    "end": "3425079"
  },
  {
    "text": "important and I think we are respectful to each other and I think everybody",
    "start": "3425079",
    "end": "3430880"
  },
  {
    "text": "understands that um there there will be differences in terms of like you know priorities and in terms of like personal",
    "start": "3430880",
    "end": "3437119"
  },
  {
    "text": "opinions but it's really nice uh that we can have a conversation regardless of the topic yeah it's going well so far",
    "start": "3437119",
    "end": "3443760"
  },
  {
    "text": "the first episode back you think yeah is it it's not supposed to get meta yeah I",
    "start": "3443760",
    "end": "3449440"
  },
  {
    "text": "think it's going well it's going well I love all the dead air yeah well don't don't be afraid of it and that's okay",
    "start": "3449440",
    "end": "3455000"
  },
  {
    "text": "that's okay yeah yeah Adam Adam will catch it in post don't worry about",
    "start": "3455000",
    "end": "3461039"
  },
  {
    "text": "it I'm specifically happy that like we haven't recorded this show on April 1st",
    "start": "3461039",
    "end": "3466319"
  },
  {
    "text": "with this particular crew I kind of felt safe oh you're always safe with us you",
    "start": "3466319",
    "end": "3471880"
  },
  {
    "text": "know that although I think I made you pee once on a trip on bus trip in Iceland which I do apologize oh wow",
    "start": "3471880",
    "end": "3479720"
  },
  {
    "text": "details details I had Jana laughing pretty oops",
    "start": "3479720",
    "end": "3485079"
  },
  {
    "text": "I'm pretty sure at one point she might have [Laughter] be oh those are the days what were we",
    "start": "3485079",
    "end": "3491440"
  },
  {
    "text": "doing Mark playing some of your music oh oh wow it's com comedy it is comedy po",
    "start": "3491440",
    "end": "3500920"
  },
  {
    "text": "o oh we got to keep that we got to keep that in the Final Cut oh oh",
    "start": "3500920",
    "end": "3506559"
  },
  {
    "text": "please there's tons of people out there with making fun of me you you don't need any extras yes",
    "start": "3506559",
    "end": "3512599"
  },
  {
    "text": "absolutely well uh this has been a great first episode I think the key thing that",
    "start": "3512599",
    "end": "3518760"
  },
  {
    "text": "I took from this was the fact that we actually think Go's doing quite well and",
    "start": "3518760",
    "end": "3523920"
  },
  {
    "text": "uh and we like some of the decisions that they've made there wasn't a great deal that we wanted to add to it but",
    "start": "3523920",
    "end": "3530920"
  },
  {
    "text": "really just more about refinement and finding small improvements and things along the way thanks so much for my",
    "start": "3530920",
    "end": "3537680"
  },
  {
    "text": "panel uh Mark Jana and Johnny been emotional and that's our show this week",
    "start": "3537680",
    "end": "3544960"
  },
  {
    "text": "uh we'll see you next week thanks everybody thanks thanks see you thanks for tuning",
    "start": "3544960",
    "end": "3551599"
  },
  {
    "text": "in all right that is the first show back for go time I'm so excited to have this",
    "start": "3552960",
    "end": "3558079"
  },
  {
    "text": "show back it's been so much work behind the scenes but it's definitely paying off now and it's so much fun producing",
    "start": "3558079",
    "end": "3563559"
  },
  {
    "text": "this show we had so many people listening live for the very first show back so thank you so much for that we",
    "start": "3563559",
    "end": "3568640"
  },
  {
    "text": "love you and if you're not yet hang with us in go for slack we have a channel called go time FM look it up you'll find",
    "start": "3568640",
    "end": "3574039"
  },
  {
    "text": "us chat with the community share stories share coffee recipes whatever it's a lot of fun also we have discussions on every",
    "start": "3574039",
    "end": "3581000"
  },
  {
    "text": "single episode at changel law.com so at the Chang law.com slgo time find this",
    "start": "3581000",
    "end": "3586280"
  },
  {
    "text": "episode and discuss it with the community of course thank you to our sponsors digital ocean Velocity",
    "start": "3586280",
    "end": "3591880"
  },
  {
    "text": "Conference from O'Reilly and also go CD huge thanks to fastly for being our bandwidth partner hit to fast.com to",
    "start": "3591880",
    "end": "3598280"
  },
  {
    "text": "learn more and we move fast and fix things around here change log because of robar check them out at roar.com",
    "start": "3598280",
    "end": "3603559"
  },
  {
    "text": "changelog and we're hosted on Lino Cloud servers at a lin.com changelog our music",
    "start": "3603559",
    "end": "3609400"
  },
  {
    "text": "is by the one and only break master cylinder and if you want to hear more episodes like this subscribe to our",
    "start": "3609400",
    "end": "3614960"
  },
  {
    "text": "Master feed at changel law.com or go to your podcast app and search for change",
    "start": "3614960",
    "end": "3620000"
  },
  {
    "text": "law Master you'll find it subscribe get all of our shows in one single feed as well as some extras that only hit the",
    "start": "3620000",
    "end": "3626359"
  },
  {
    "text": "master feed thanks for listening we'll see you [Music]",
    "start": "3626359",
    "end": "3649349"
  },
  {
    "text": "soon",
    "start": "3653520",
    "end": "3656520"
  },
  {
    "text": "because you've stuck in here to the end of this show we got a special surprise for you this is a preview of our new",
    "start": "3660400",
    "end": "3666839"
  },
  {
    "text": "upcoming show called brain science this podcast is for the Curious we explore",
    "start": "3666839",
    "end": "3672039"
  },
  {
    "text": "the inner workings of the human brain to understand Behavior change habit formation mental health and the",
    "start": "3672039",
    "end": "3677480"
  },
  {
    "text": "complexities of The Human Condition it's hosted by myself Adam stovak and my good friend Mariel ree a doctor in clinical",
    "start": "3677480",
    "end": "3684599"
  },
  {
    "text": "psychology it's about brain science applied not just how the brain works but how we apply what we know about the",
    "start": "3684599",
    "end": "3689839"
  },
  {
    "text": "brain to better our lives here we go so where do we begin to understand",
    "start": "3689839",
    "end": "3695520"
  },
  {
    "text": "the Mind humans have brains with all this neural activity and I'm just thinking about what I know about my",
    "start": "3695520",
    "end": "3702160"
  },
  {
    "text": "brain I understand that it's up there what it is I understand it's very important to me and without it I",
    "start": "3702160",
    "end": "3707839"
  },
  {
    "text": "couldn't function but you know my mind isn't my brain's activity how can we",
    "start": "3707839",
    "end": "3713400"
  },
  {
    "text": "begin to break that down the brain and the mind to really understand the operations behind our mind well one of",
    "start": "3713400",
    "end": "3720599"
  },
  {
    "text": "the things that is really important when we're looking at the brain and the mind is actually the words that we use to",
    "start": "3720599",
    "end": "3726640"
  },
  {
    "text": "describe different things and so I think it's really important to be as clear as possible and so I think we want to",
    "start": "3726640",
    "end": "3733400"
  },
  {
    "text": "differentiate the brain from the mind and the brain is made up of different structures and then the mind is sort of",
    "start": "3733400",
    "end": "3740799"
  },
  {
    "text": "the inner workings of the physical structure which is not observable but",
    "start": "3740799",
    "end": "3746599"
  },
  {
    "text": "when we're looking at the brain there are some primary structures that are fundamental to Being Human and that",
    "start": "3746599",
    "end": "3753359"
  },
  {
    "text": "involves sort of three different brains well we have the brain stem the lyic brain and the prefrontal cortex I know",
    "start": "3753359",
    "end": "3761039"
  },
  {
    "text": "might get a little petty in talking about some of these things but I think it's helpful when we can have a visual",
    "start": "3761039",
    "end": "3767520"
  },
  {
    "text": "so if you put your right hand up in the air like you're being sworn in with all five fingers next to each other go ahead",
    "start": "3767520",
    "end": "3773599"
  },
  {
    "text": "and okay okay fold your thumb across the palm of your hand and then close your",
    "start": "3773599",
    "end": "3779000"
  },
  {
    "text": "four fingers over the top of your thumb okay I got that and so in order to correlate these with different",
    "start": "3779000",
    "end": "3784960"
  },
  {
    "text": "structures your wrist would be synonymous with your brain stem which is",
    "start": "3784960",
    "end": "3790319"
  },
  {
    "text": "the reptile brain then your thumb is the limbic brain or mamillion brain which",
    "start": "3790319",
    "end": "3796160"
  },
  {
    "text": "means all mammals have that part of the brain and then your four fingers are what we refer to as the frontal lobe or",
    "start": "3796160",
    "end": "3802760"
  },
  {
    "text": "part of the free prefrontal cortex okay so we sort of have three brains in one",
    "start": "3802760",
    "end": "3808240"
  },
  {
    "text": "and all do different things in our brain to help us be able to live and move and",
    "start": "3808240",
    "end": "3813960"
  },
  {
    "text": "be safe so if we have three brains in one they all have their different roles",
    "start": "3813960",
    "end": "3819319"
  },
  {
    "text": "it sounds like you know the reptilian seems I don't know like it can't think very well when it comes to The Reptilian",
    "start": "3819319",
    "end": "3825799"
  },
  {
    "text": "brand I'm assuming it's just sort of like you know gut reactions you know very very quick thinking you know almost",
    "start": "3825799",
    "end": "3832440"
  },
  {
    "text": "subconscious kind of stuff potentially is that right right yeah you're spoton sometimes I think again it's helpful to",
    "start": "3832440",
    "end": "3838440"
  },
  {
    "text": "parallel things with what we do know and do understand so thinking of different animals um reptiles right lizards",
    "start": "3838440",
    "end": "3845720"
  },
  {
    "text": "turtles so the brain stem is really only responsible for these key functions",
    "start": "3845720",
    "end": "3851880"
  },
  {
    "text": "within the body so breathing heart rate the essentials and and fight ORF flight",
    "start": "3851880",
    "end": "3857079"
  },
  {
    "text": "if uh a lizard is afraid right it needs to figure out what it needs to do to",
    "start": "3857079",
    "end": "3863160"
  },
  {
    "text": "survive so the brain stem is just preoccupied with the function of survival how do I not die and then if we",
    "start": "3863160",
    "end": "3868960"
  },
  {
    "text": "move up to that mammal brain right we can think about you know cats or dogs",
    "start": "3868960",
    "end": "3874680"
  },
  {
    "text": "bats and that mammal brain or lyic brain is really the feeling center of our",
    "start": "3874680",
    "end": "3880359"
  },
  {
    "text": "brain there's two key brain structures as part of that and that is involves the amydala and the hampus which is",
    "start": "3880359",
    "end": "3888119"
  },
  {
    "text": "responsible for memory one thing I think is super fascinating about the mammal brain is really the way in which we Bank",
    "start": "3888119",
    "end": "3895160"
  },
  {
    "text": "memories whenever things have the most emotion associated with it we're more",
    "start": "3895160",
    "end": "3902920"
  },
  {
    "text": "likely to remember that okay so it doesn't matter whether it's positive or negative so be it a wedding birth of a",
    "start": "3902920",
    "end": "3908760"
  },
  {
    "text": "child you know or something super traumatic our brain goes oh that's so important to remember it vacuum seals it",
    "start": "3908760",
    "end": "3916599"
  },
  {
    "text": "so that we hold on to that and so this is why too our lives have different meaning and being able to to feel is a",
    "start": "3916599",
    "end": "3923720"
  },
  {
    "text": "fund part of Being Human the mammal brain is really the feeling Center so as",
    "start": "3923720",
    "end": "3929039"
  },
  {
    "text": "opposed to more of the fight ORF flight from the reptile brain or mammal brains they're still more un unconscious",
    "start": "3929039",
    "end": "3936160"
  },
  {
    "text": "subconscious things but imagine that The Dewy Decimal System of your brain sorts",
    "start": "3936160",
    "end": "3942200"
  },
  {
    "text": "things according to feelings when we're mammals that's a preview of brain",
    "start": "3942200",
    "end": "3948160"
  },
  {
    "text": "science if you love where we're going with this send us an email to get on the list to be notified the the very moment",
    "start": "3948160",
    "end": "3955079"
  },
  {
    "text": "this show gets released email us at editors changel law.com in the subject",
    "start": "3955079",
    "end": "3960240"
  },
  {
    "text": "line put in all caps brain science with a couple bangs if you're really excited",
    "start": "3960240",
    "end": "3965559"
  },
  {
    "text": "you can also subscribe to our Master feed to get all of our shows in one single feed head to changel law.com",
    "start": "3965559",
    "end": "3971880"
  },
  {
    "text": "slm or search in your podcast app for changw master you'll find it subscribe",
    "start": "3971880",
    "end": "3977240"
  },
  {
    "text": "get all of our shows and even those that only hit the master feed again change.com",
    "start": "3977240",
    "end": "3983000"
  },
  {
    "text": "slm [Music]",
    "start": "3983000",
    "end": "4001420"
  },
  {
    "text": "I want to be remembered for my Gourmet line of Frozen Seafood",
    "start": "4001440",
    "end": "4008078"
  },
  {
    "text": "dinners",
    "start": "4013000",
    "end": "4016000"
  }
]