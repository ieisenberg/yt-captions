[
  {
    "text": "B with for change log is provided by fastly learn more at fastly.com we move",
    "start": "80",
    "end": "6040"
  },
  {
    "text": "fast and fix things here at Chang log because of rollbar check them out at rar.com and we're hosted on Leno servers",
    "start": "6040",
    "end": "12799"
  },
  {
    "text": "head to lin.com changelog this episode is brought to you by gagee gagee is a free and open-",
    "start": "12799",
    "end": "20000"
  },
  {
    "text": "Source test automation tool by thoughtworks with a goal of taking the pain out of test automation for",
    "start": "20000",
    "end": "25359"
  },
  {
    "text": "acceptance tests to help with this gauge supports specifications and markdown which are easy to read and easy to write",
    "start": "25359",
    "end": "31640"
  },
  {
    "text": "reusable specifications to simplify your code which makes refactoring easier and less code means less time maintaining",
    "start": "31640",
    "end": "39360"
  },
  {
    "text": "your code and finally Integrations use gauge with your favorite tools and idees",
    "start": "39360",
    "end": "44640"
  },
  {
    "text": "in the ecosystem of your choice like selenia and sahi pro CI and CD tools",
    "start": "44640",
    "end": "50440"
  },
  {
    "text": "like G CD Jenkins Travis and IDE support for visual studio VSS code intellig and",
    "start": "50440",
    "end": "56800"
  },
  {
    "text": "more the team behind gauge believes in using web technology to test web applications head to g.org sjsp party to",
    "start": "56800",
    "end": "64439"
  },
  {
    "text": "learn more and give it a try once again g.org sljs",
    "start": "64439",
    "end": "71400"
  },
  {
    "text": "[Music] party welcome to JS party a weekly",
    "start": "79290",
    "end": "84560"
  },
  {
    "text": "celebration of JavaScript and the web tune in live on Thursdays at 1:00 p.m. Eastern 10 a.m. Pacific at changel",
    "start": "84560",
    "end": "91840"
  },
  {
    "text": "law.com join the community and slack with us in real time during the show at Chang law.com Community follow us on",
    "start": "91840",
    "end": "99159"
  },
  {
    "text": "Twitter we're at JSP party FM and now on to the",
    "start": "99159",
    "end": "104240"
  },
  {
    "text": "show Howdy everybody Welcome to the JS party today we are here to talk about",
    "start": "104520",
    "end": "110360"
  },
  {
    "text": "everybody's favorite topic uh bugs not the creepy crawlies the bugs that you",
    "start": "110360",
    "end": "116000"
  },
  {
    "text": "find in your code uh and joining us today on this conversation is I sopia",
    "start": "116000",
    "end": "121039"
  },
  {
    "text": "rhymes with Mafia uh we've got Kevin kall with us uh Suz Hinton and Nick ni I",
    "start": "121039",
    "end": "127640"
  },
  {
    "text": "like your rhymes with Mafia idea like that's a that's a good way to get across I'm trying to think what I could do kall",
    "start": "127640",
    "end": "134319"
  },
  {
    "text": "rhymes with ball there is a whole host of words you",
    "start": "134319",
    "end": "140800"
  },
  {
    "text": "can use ball small Maul call I'm not as fortunate I before I got into Tech I uh",
    "start": "140800",
    "end": "148000"
  },
  {
    "text": "I actually did some substitute teaching and I remember going into a kindergarten classroom and being like I'm Mr ball",
    "start": "148000",
    "end": "153519"
  },
  {
    "text": "like a bouncing ball and that work for communicating to 5-year-olds like call yourself a basketball and they're",
    "start": "153519",
    "end": "160400"
  },
  {
    "text": "good noted that's a useful life tip uh for interacting with",
    "start": "160400",
    "end": "165599"
  },
  {
    "text": "children so today's conversation is we're just going to talk about software bugs uh specifically in",
    "start": "165599",
    "end": "172000"
  },
  {
    "text": "JavaScript um and I kind of wanted to kick it off with a reference to an",
    "start": "172000",
    "end": "177599"
  },
  {
    "text": "article that was published earlier this year in January uh it was published by",
    "start": "177599",
    "end": "183480"
  },
  {
    "text": "rollbar for those of you who are unfamiliar rollbar is essentially sort of like an error Monitoring Service uh",
    "start": "183480",
    "end": "190640"
  },
  {
    "text": "so you can hook it up and capture any exceptions that occur in your application um and get stats on them",
    "start": "190640",
    "end": "197480"
  },
  {
    "text": "they published this really interesting article called the top 10 JavaScript errors from 1,000 projects and how to",
    "start": "197480",
    "end": "203920"
  },
  {
    "text": "avoid them and I thought it'd be a really good way to start the conversation on some of the comment bugs",
    "start": "203920",
    "end": "210400"
  },
  {
    "text": "that we find in our JavaScript code and how folks on the panel uh fix those bugs",
    "start": "210400",
    "end": "216280"
  },
  {
    "text": "or uh get around them prevent them from existing in the first place so one of",
    "start": "216280",
    "end": "221560"
  },
  {
    "text": "the first ones that they laid out is our favorite bug ever it's the uncut type",
    "start": "221560",
    "end": "226599"
  },
  {
    "text": "error can't read property um I just had like a chill go down my spine when I",
    "start": "226599",
    "end": "232239"
  },
  {
    "text": "read that um and essentially this is a specific variant of an error that occurs when you",
    "start": "232239",
    "end": "239799"
  },
  {
    "text": "try to either uh fetch a property um or invoke a method on an object that is",
    "start": "239799",
    "end": "247280"
  },
  {
    "text": "undefined you get this error thrown at your face if you'll think about it um I've got this list of the type five",
    "start": "247280",
    "end": "253799"
  },
  {
    "text": "errors most of them relate to things being undefined or null when we don't",
    "start": "253799",
    "end": "259079"
  },
  {
    "text": "expect them to be um so you know how do you all deal with those kinds of bugs in",
    "start": "259079",
    "end": "264520"
  },
  {
    "text": "your code handling uh null cases and undefined cases feel like Nick is going",
    "start": "264520",
    "end": "269600"
  },
  {
    "text": "to have the the like mic dropping answer here yeah I could see where this is",
    "start": "269600",
    "end": "275160"
  },
  {
    "text": "going just use typescript I mean we're looking at these",
    "start": "275160",
    "end": "280479"
  },
  {
    "text": "five bugs right and it's uncut type error cannot read type error undefined type error null type error undefined",
    "start": "280479",
    "end": "286680"
  },
  {
    "text": "it's not a function like there there's a Common Thread here uh and it has to do with type and what's interesting is that",
    "start": "286680",
    "end": "294199"
  },
  {
    "text": "that list is these are literally the most common ones that happen and so by",
    "start": "294199",
    "end": "300520"
  },
  {
    "text": "being able to Shield yourself against all of these specific type eras you're actually knocking down some of the most",
    "start": "300520",
    "end": "306280"
  },
  {
    "text": "common things you got to find in your app which is fascinating and I'm really glad that this list was shared because",
    "start": "306280",
    "end": "311560"
  },
  {
    "text": "it really does kind of call out that we do have an issue with this in JavaScript for sure yeah and for those who don't",
    "start": "311560",
    "end": "320240"
  },
  {
    "text": "have a chance to read the list right now it's essentially all of the different variants of the undefined error that you",
    "start": "320240",
    "end": "326199"
  },
  {
    "text": "might find in different browsers which is something that's knowing each browser has a different way of telling you that",
    "start": "326199",
    "end": "332080"
  },
  {
    "text": "you're running into the same bug I think we need a working group on that um",
    "start": "332080",
    "end": "337360"
  },
  {
    "text": "that's actually cool I hadn't I hadn't quite put that together but you're totally right like those are the same exact thing yeah so Chrome will alert",
    "start": "337360",
    "end": "344800"
  },
  {
    "text": "you of the same bug using a different message than Firefox or Internet Explorer will but it's all the same",
    "start": "344800",
    "end": "350520"
  },
  {
    "text": "thing at the end there's a talk by Britney Stores um she gave this talk earlier this year I've been to so many",
    "start": "350520",
    "end": "357080"
  },
  {
    "text": "conferences this year I'm embarrassed to see I forget which one I think it was JSC Au and Britney has been a teacher at",
    "start": "357080",
    "end": "365199"
  },
  {
    "text": "um a coding school before and she proposed that we need to have better",
    "start": "365199",
    "end": "372599"
  },
  {
    "text": "errors in our browsers and also just like in um any of our JavaScript engines",
    "start": "372599",
    "end": "377840"
  },
  {
    "text": "like node.js for example because sometimes even people who are new um",
    "start": "377840",
    "end": "383360"
  },
  {
    "text": "this is going to be really really confusing to them to see that you know even different browsers spit out a",
    "start": "383360",
    "end": "389120"
  },
  {
    "text": "slightly different era um and it's really really hard to debug those things when you're really new and so I would",
    "start": "389120",
    "end": "395720"
  },
  {
    "text": "definitely highly encourage people to watch that talk of hers we'll drop a link in the show notes for that but I",
    "start": "395720",
    "end": "401840"
  },
  {
    "text": "don't I'm interested if anyone else has kind of seen any proposals to improve the errors that come out of just the",
    "start": "401840",
    "end": "408160"
  },
  {
    "text": "JavaScript in general because other languages are sometimes a little better at this that's a really good point and I",
    "start": "408160",
    "end": "413880"
  },
  {
    "text": "notice you know I work with some folks who are a little bit more new to JavaScript or Junior and a lot of of",
    "start": "413880",
    "end": "419800"
  },
  {
    "text": "times they'll come and say hey I've got this stack Trace I have no idea what it means and being able to point and say oh",
    "start": "419800",
    "end": "427319"
  },
  {
    "text": "you know that says type error cannot read property undefined of something that is null well let's go look for",
    "start": "427319",
    "end": "434080"
  },
  {
    "text": "what's null you know but they see this massive stack trace and these fairly",
    "start": "434080",
    "end": "441240"
  },
  {
    "text": "obscure I won't say they're obscure because you can understand them when you really dig in but kind of pattern",
    "start": "441240",
    "end": "448039"
  },
  {
    "text": "recognition style error messages rather than something that you get out of like rust rust is the rust compeller is",
    "start": "448039",
    "end": "454000"
  },
  {
    "text": "phenomenal for pointing you like what are you probably doing wrong that's resulting in this exactly and I just",
    "start": "454000",
    "end": "460319"
  },
  {
    "text": "looked it up and the the talk is called um a year of others bugs the sad state of era handling and she does actually",
    "start": "460319",
    "end": "466879"
  },
  {
    "text": "call out other languages that are more helpful such as rust or even just Elm which is technically still transpiling",
    "start": "466879",
    "end": "472560"
  },
  {
    "text": "to JavaScript and how they do much better error handling at least for just trying to help people out yeah I don't",
    "start": "472560",
    "end": "480360"
  },
  {
    "text": "do a lot of work with rust but I do do work with Elm and it's got some great error messages when you're trying to get",
    "start": "480360",
    "end": "486960"
  },
  {
    "text": "all your types in order and and everything in line something that as discussed unfortunately we don't have in",
    "start": "486960",
    "end": "492720"
  },
  {
    "text": "the JavaScript world and I think that a big part of that might just be discrepancies in all",
    "start": "492720",
    "end": "499039"
  },
  {
    "text": "the different JavaScript engines that we have running around in different browsers so coming back to prevention um",
    "start": "499039",
    "end": "506520"
  },
  {
    "text": "you have Nick's easy in some ways answer um though I'm ashamed to admit I still",
    "start": "506520",
    "end": "511680"
  },
  {
    "text": "am not on typescript at all uh you know there are pure JavaScript Solutions as",
    "start": "511680",
    "end": "517560"
  },
  {
    "text": "well that help you do some amount of type checking um for example you could be using something like flow uh which",
    "start": "517560",
    "end": "524000"
  },
  {
    "text": "lets you embed typechecking straight into vanilla JavaScript do you have experience using flow in a code base",
    "start": "524000",
    "end": "530040"
  },
  {
    "text": "that you want to share um a little bit um so it it definitely highlights or my",
    "start": "530040",
    "end": "535440"
  },
  {
    "text": "experience there definitely highlights both the positive and negative pieces of types um you know types types one let",
    "start": "535440",
    "end": "543360"
  },
  {
    "text": "you communicate really clearly about what data structure looks like and two let you you know catch a lot of these",
    "start": "543360",
    "end": "548800"
  },
  {
    "text": "bugs ahead of time uh there are scenarios where they can be extremely painful as well anytime you're doing any",
    "start": "548800",
    "end": "555120"
  },
  {
    "text": "sort of like metaprogramming or where you have um kind of objects that are coming back in different ways based on",
    "start": "555120",
    "end": "563160"
  },
  {
    "text": "on criteria uh I mean maybe this is my lack of skill with types but I found it",
    "start": "563160",
    "end": "569160"
  },
  {
    "text": "I often found myself fighting the type Checker or compiler to get it to express something where it was like okay this",
    "start": "569160",
    "end": "575959"
  },
  {
    "text": "thing has two different modes that it can be in um and you could get it but then you it was often painful to get it",
    "start": "575959",
    "end": "582399"
  },
  {
    "text": "to work right I don't know Nick is that something that just goes away as you get better with it it's yeah maybe you you just get more",
    "start": "582399",
    "end": "590040"
  },
  {
    "text": "experience with how to to handle that and when you see those problems how to to better handle it I think uh as you go",
    "start": "590040",
    "end": "597320"
  },
  {
    "text": "um I was also going to say that you don't have to fully switch to typescript to get benefits from it uh the big",
    "start": "597320",
    "end": "602920"
  },
  {
    "text": "benefit is the tooling that it provides and the typescript um language service can actually infer a lot about your code",
    "start": "602920",
    "end": "609920"
  },
  {
    "text": "about your JavaScript code without having to switch fully to typescript and in fact that's what um Visual Studio",
    "start": "609920",
    "end": "615360"
  },
  {
    "text": "code does for you automatically does anyone have non-technical maybe",
    "start": "615360",
    "end": "621120"
  },
  {
    "text": "engineering or best practice solutions that you've implemented in your team for catching these common bugs I don't know",
    "start": "621120",
    "end": "627760"
  },
  {
    "text": "if I'd say for catching them for but for debugging one of the things that I constantly come back to is uh making",
    "start": "627760",
    "end": "636160"
  },
  {
    "text": "sure that you are very explicit about the assumptions you're making um you know I'm coming",
    "start": "636160",
    "end": "641560"
  },
  {
    "text": "into this function and I believe these things are going to be true and then validating that those things are",
    "start": "641560",
    "end": "647200"
  },
  {
    "text": "actually true um because I find a lot of times where these bugs come from is we",
    "start": "647200",
    "end": "653560"
  },
  {
    "text": "assume something but then we we kind of forget that we've made that as an assumption and just take it for granted",
    "start": "653560",
    "end": "659079"
  },
  {
    "text": "and move on and then where that bites us is when that assumption turns out to not be",
    "start": "659079",
    "end": "665279"
  },
  {
    "text": "true in all cases maybe it's true in most cases but then when we hit this bug it's actually not true because it's coming from a different thing and if we",
    "start": "665279",
    "end": "672399"
  },
  {
    "text": "uh don't reassess the fact that that was an assumption and and check it it can be",
    "start": "672399",
    "end": "678000"
  },
  {
    "text": "baffling to try to figure out why is this breaking how could it possibly be breaking um and so stepping back and",
    "start": "678000",
    "end": "683600"
  },
  {
    "text": "saying okay what are what are all of my assumptions and how do I validate them one by one I find that a Cod RW comes in",
    "start": "683600",
    "end": "690639"
  },
  {
    "text": "really handy for this too because a lot of the time the people looking at what you've just written haven't been staring",
    "start": "690639",
    "end": "696320"
  },
  {
    "text": "at the same code for as much time as you have and so have probably some of less assumptions about what's being passed in",
    "start": "696320",
    "end": "703760"
  },
  {
    "text": "and what the shape of it is and things like that yeah and then also codifying that in uh a unit test to try and",
    "start": "703760",
    "end": "710360"
  },
  {
    "text": "capture all of the valid um inputs that might occur and if you discover something new as you're running the code",
    "start": "710360",
    "end": "716880"
  },
  {
    "text": "um instead of just fixing it try and add a unit test to that to make sure to capture for that in the future yeah I",
    "start": "716880",
    "end": "723440"
  },
  {
    "text": "thought of test two and I thought that maybe test driven development if you wanted to get super super nitty-gritty",
    "start": "723440",
    "end": "728720"
  },
  {
    "text": "highly detailed you could be writing little mini tests for that at which point you would almost start justifying",
    "start": "728720",
    "end": "734040"
  },
  {
    "text": "something like flow or typescript anyway because no one really wants to actually reimplement that just for their specific",
    "start": "734040",
    "end": "739279"
  },
  {
    "text": "code but if you didn't want to use something like typescript or flow you could perhaps write some guardrails",
    "start": "739279",
    "end": "746120"
  },
  {
    "text": "during your tdd session to ensure that you're not constantly changing the shape of something in order to get an",
    "start": "746120",
    "end": "752399"
  },
  {
    "text": "undefined error happening one of the skills or lessons that I learned actually a really long time ago from my",
    "start": "752399",
    "end": "758800"
  },
  {
    "text": "high school computer science teacher out of all things was that whenever you write a test case for a function make",
    "start": "758800",
    "end": "764720"
  },
  {
    "text": "sure you're always testing the empty or undefined case um and that prevents you",
    "start": "764720",
    "end": "770480"
  },
  {
    "text": "from shooting your foot in most situations totally and you should almost um you should almost test that your code",
    "start": "770480",
    "end": "776720"
  },
  {
    "text": "even does that in the first place you should test to make sure does break in that way before you then like write something to stop it breaking in that",
    "start": "776720",
    "end": "783800"
  },
  {
    "text": "way too and then that helps with not making a set of assumptions on top of that as well so I'm curious to explore",
    "start": "783800",
    "end": "790720"
  },
  {
    "text": "uh so you uh s put a set of five top functions here and as we called out like",
    "start": "790720",
    "end": "796920"
  },
  {
    "text": "four of them are type error related and null and undefined and whatever but then we have this unknown script error uh",
    "start": "796920",
    "end": "803519"
  },
  {
    "text": "that one I I've seen it I don't know any magic for it does anybody know any magic for debugging what the heck is going on",
    "start": "803519",
    "end": "809160"
  },
  {
    "text": "on when that happens I just saw this last week oh do you tell so it was",
    "start": "809160",
    "end": "814880"
  },
  {
    "text": "actually in the context of a um a unit test that was being kicked off uh over",
    "start": "814880",
    "end": "820920"
  },
  {
    "text": "the web driver protocol which was bringing up um electron and running in",
    "start": "820920",
    "end": "826040"
  },
  {
    "text": "electron and I just kept getting this script error over and over and over and trying to understand what that was and",
    "start": "826040",
    "end": "832440"
  },
  {
    "text": "it was um for for our case it just ended up being that like the way that we were",
    "start": "832440",
    "end": "838839"
  },
  {
    "text": "k those those tests off in electron uh and they were trying to make I think it I think it was that they were trying to",
    "start": "838839",
    "end": "844320"
  },
  {
    "text": "make requests out to um like like in a browsery way uh to a a server that",
    "start": "844320",
    "end": "852399"
  },
  {
    "text": "wasn't part of its domain and so it didn't uh like it was like a chors error almost like I think that's what it was",
    "start": "852399",
    "end": "858560"
  },
  {
    "text": "at least but that is a tough one because it's it gives you no information anyone else no unknown script error I feel like",
    "start": "858560",
    "end": "864920"
  },
  {
    "text": "it that's the the JavaScript equivalent of throwing your hands up in the air and saying I don't know y yeah got",
    "start": "864920",
    "end": "871560"
  },
  {
    "text": "me yeah that's when you start looking at everything line by line and it is just so painful so in this uh roll bar blog",
    "start": "871560",
    "end": "879600"
  },
  {
    "text": "post there are two kind of fixes to get the real air messages um it recommends",
    "start": "879600",
    "end": "885000"
  },
  {
    "text": "doing the following which is setting an access control allow origin header on",
    "start": "885000",
    "end": "890639"
  },
  {
    "text": "your uh web server whether it's like aachi or engine X or what have you and",
    "start": "890639",
    "end": "896519"
  },
  {
    "text": "then there's also setting the cross origin attribute to Anonymous on the script tag",
    "start": "896519",
    "end": "903560"
  },
  {
    "text": "um as two techniques for getting the full error message to be able to like",
    "start": "903560",
    "end": "909079"
  },
  {
    "text": "debug more effectively oh so basically that unknown script error is well we probably know but we're not allowed to",
    "start": "909079",
    "end": "915320"
  },
  {
    "text": "tell you because of cross origin stuff we're just we're just trying to give you",
    "start": "915320",
    "end": "920519"
  },
  {
    "text": "a hard time like something went wrong but it went wrong someplace that you're not allowed to see so we're just going",
    "start": "920519",
    "end": "925639"
  },
  {
    "text": "to tell you hey you know this went wrong um Good Luck yeah so um as was mentioned",
    "start": "925639",
    "end": "931240"
  },
  {
    "text": "earlier it usually happens in sort of like a cross domain context where um",
    "start": "931240",
    "end": "937000"
  },
  {
    "text": "you're like trying to send a message or something and instead of the external",
    "start": "937000",
    "end": "942880"
  },
  {
    "text": "domain or whatever external thing you're accessing sending you a stack Trace with potentially",
    "start": "942880",
    "end": "949120"
  },
  {
    "text": "useful information and you know being kind of like a security loophole it just says there's a script error but we're",
    "start": "949120",
    "end": "955279"
  },
  {
    "text": "not going to tell you what it is because you might be a bad person and that makes a lot of sense like that's kind of how",
    "start": "955279",
    "end": "962319"
  },
  {
    "text": "guard rails is set up in apis too right you don't just get they don't they don't return things like 404s or or any kind",
    "start": "962319",
    "end": "968440"
  },
  {
    "text": "of clue that yes you were almost there but you didn't authenticate properly or something like that um and I know that",
    "start": "968440",
    "end": "974040"
  },
  {
    "text": "that sometimes is very frustrating too when you're trying to debug being a legitimate API user because like they do",
    "start": "974040",
    "end": "979959"
  },
  {
    "text": "have things in there to stop people from being able to exploit their weigh in one little tiny breadcrumb at a time of",
    "start": "979959",
    "end": "986000"
  },
  {
    "text": "Clues but yeah I I didn't actually think of just setting the cross origin heads",
    "start": "986000",
    "end": "992880"
  },
  {
    "text": "in order to alleviate that that's actually something that I learned today harah yay for learning I was actually",
    "start": "992880",
    "end": "998399"
  },
  {
    "text": "going to uh bring up a a me an error message that we used to get but we really don't get it anymore and see if",
    "start": "998399",
    "end": "1004880"
  },
  {
    "text": "you all remember that uh it's unexpected identifier string or number Code Zero",
    "start": "1004880",
    "end": "1010160"
  },
  {
    "text": "does anybody remember that yes I have that it's been a while there you know that name where sorry sorry I was trying",
    "start": "1010160",
    "end": "1017079"
  },
  {
    "text": "to make a relevant reference be funny but I totally fell on my face cuz I'm a great",
    "start": "1017079",
    "end": "1022519"
  },
  {
    "text": "MC go ahead oh that one this error used to cause me so much pain in the past",
    "start": "1022519",
    "end": "1029640"
  },
  {
    "text": "because uh I would only ever see it really an Internet Explorer uh and when when I tell you what caused it I'll tell",
    "start": "1029640",
    "end": "1036038"
  },
  {
    "text": "you you'll know why but you try and bring it up in like Firefox or or Chrome back in the day and it wouldn't like the",
    "start": "1036039",
    "end": "1041798"
  },
  {
    "text": "code would run fine so you'd see this and of course Internet Explorer never gave you a correct line number or anything and so it and this always like",
    "start": "1041799",
    "end": "1049919"
  },
  {
    "text": "would cause me like a half hour of grief until I remembered oh yeah this is actually caused by trailing commas mhm",
    "start": "1049919",
    "end": "1056760"
  },
  {
    "text": "wow but that error message just gave you nothing well it is actually it's a really interesting highlight of how much",
    "start": "1056760",
    "end": "1064440"
  },
  {
    "text": "linters have kind of reduced the set of errors that often show up because",
    "start": "1064440",
    "end": "1070640"
  },
  {
    "text": "there's whole classes of bugs that used to be essentially runtime bugs that linters just catch and they clean up for",
    "start": "1070640",
    "end": "1077559"
  },
  {
    "text": "you and you don't have to ever worry about it which is lining is kind of like a half step to the level of validation",
    "start": "1077559",
    "end": "1082760"
  },
  {
    "text": "that you get in something like typescript but it it gets you a lot it's very true but also thankfully our",
    "start": "1082760",
    "end": "1089440"
  },
  {
    "text": "JavaScript engines are a little bit more closely aligned in being spec compliant now there's obviously still differences",
    "start": "1089440",
    "end": "1095919"
  },
  {
    "text": "between them but it's definitely not as bad as it was back in the day I think even just in a previous episode I was",
    "start": "1095919",
    "end": "1102520"
  },
  {
    "text": "talking about how you know one one browser was using like um you know ecmascript uh 3 and then the others were",
    "start": "1102520",
    "end": "1109960"
  },
  {
    "text": "on equiscript 5 for example and that was just that was sort of the era at which you saw those kind of erors as well I",
    "start": "1109960",
    "end": "1115600"
  },
  {
    "text": "believe and so things have gotten a lot better since then which is really really nice and I totally agree with the linting thing too it just stops",
    "start": "1115600",
    "end": "1122520"
  },
  {
    "text": "completely unnecessary like errors uh we're going to take a quick break and then come back for a really interesting",
    "start": "1122520",
    "end": "1128840"
  },
  {
    "text": "segment we're going to get out on the porch sit on the rocking chairs and talk about the hardest bugs that we've had to",
    "start": "1128840",
    "end": "1135200"
  },
  {
    "text": "debug in JavaScript and that is right after the break",
    "start": "1135200",
    "end": "1140720"
  },
  {
    "text": "[Music] this episode is sponsored by our friends at rbar how important is it for you to",
    "start": "1144030",
    "end": "1149360"
  },
  {
    "text": "catch errors before your users do what if you could resolve those errors in minutes and then deploy with confidence",
    "start": "1149360",
    "end": "1155120"
  },
  {
    "text": "that's exactly what robbar enables for software teams one of the most frustrating things we all deal with is",
    "start": "1155120",
    "end": "1160520"
  },
  {
    "text": "errors most teams either a rely on their users to report errors or B use log",
    "start": "1160520",
    "end": "1165640"
  },
  {
    "text": "files and lists of Errors to debug problems that's such a a waste of time instantly know what's broken and why",
    "start": "1165640",
    "end": "1171960"
  },
  {
    "text": "with rollar reduce time wasted debugging and automatically capture errors alongside Rich diagnostic data to help",
    "start": "1171960",
    "end": "1178919"
  },
  {
    "text": "you defeat impactful errors you can integrate rollar into your existing workflow it integrates with your source",
    "start": "1178919",
    "end": "1184440"
  },
  {
    "text": "code repository and deployment system to give you deep insights into exactly what changes caused each error give rollar a",
    "start": "1184440",
    "end": "1191320"
  },
  {
    "text": "try today at no cost to you no credit card is required our listeners get access to the bootstrap plan with",
    "start": "1191320",
    "end": "1197320"
  },
  {
    "text": "100,000 events for free for 90 days to get started head to rar.com changel",
    "start": "1197320",
    "end": "1204170"
  },
  {
    "text": "[Music]",
    "start": "1204170",
    "end": "1209360"
  },
  {
    "text": "loock I'm Tim Smith and my show away from keyboard explores The Human Side of creative work you'll hear stories",
    "start": "1209360",
    "end": "1216280"
  },
  {
    "text": "sometimes deeply personal about the triumphs and struggles of doing what you love jumping off into the abyss is kind",
    "start": "1216280",
    "end": "1223120"
  },
  {
    "text": "of my skill like and so I'm not saying that it's not scary",
    "start": "1223120",
    "end": "1229320"
  },
  {
    "text": "I'm saying that perhaps my skill is just not being able to estimate how scary it will be new episodes Premiere every",
    "start": "1229320",
    "end": "1236960"
  },
  {
    "text": "other Wednesday find the show at changel log.com AFK or wherever you listen to",
    "start": "1236960",
    "end": "1242430"
  },
  {
    "text": "[Music]",
    "start": "1242430",
    "end": "1245589"
  },
  {
    "text": "podcasts we are back live here to answer and share stories about a really",
    "start": "1253120",
    "end": "1258600"
  },
  {
    "text": "interesting question which is what is the hardest bug you've had to debug in JavaScript uh so what I want to hear",
    "start": "1258600",
    "end": "1264760"
  },
  {
    "text": "about is you know what made that bug hard to debug um how did you end up solving it or fixing it and then what",
    "start": "1264760",
    "end": "1270880"
  },
  {
    "text": "did you capture about the debugging process or what did you learn uh that you took on with you that you can share",
    "start": "1270880",
    "end": "1276559"
  },
  {
    "text": "with us today uh so anyone want to start off with their own harrowing story of",
    "start": "1276559",
    "end": "1282000"
  },
  {
    "text": "facing a very hard to fix bug I can go with mine um so recently I I don't know",
    "start": "1282000",
    "end": "1288960"
  },
  {
    "text": "about hardest of all time because you the memories fade pain goes away we're not good at remembering",
    "start": "1288960",
    "end": "1297320"
  },
  {
    "text": "pain you just block it out I know it just it gets totally blocked but this one actually happened recently enough",
    "start": "1297320",
    "end": "1303640"
  },
  {
    "text": "that I remember it and also it happened it it was it turned out to be interesting enough that I jotted down notes to remind myself so I could write",
    "start": "1303640",
    "end": "1310120"
  },
  {
    "text": "it up at some point um because it it was fascinating but so the situation is I was working in a uh View application uh",
    "start": "1310120",
    "end": "1318200"
  },
  {
    "text": "using njs and I have a number of third party things that I'm using and I was",
    "start": "1318200",
    "end": "1324840"
  },
  {
    "text": "using uh view select uh which is kind of a combo uh type ahead selector thing",
    "start": "1324840",
    "end": "1331720"
  },
  {
    "text": "super cool little plugin um and I had just updated it to the latest version and I noticed that it was not working",
    "start": "1331720",
    "end": "1337919"
  },
  {
    "text": "right um it was not automatically filtering down options as I did the typ ahead and I thought is that a bug in the",
    "start": "1337919",
    "end": "1345440"
  },
  {
    "text": "latest version what's going on so I pulled down the the latest version repo and kind of did ran through test and the",
    "start": "1345440",
    "end": "1352640"
  },
  {
    "text": "exact thing thing was working fine when I just looked at the repo itself and then I thought okay so this is weird let me see like am I using it wrong um and",
    "start": "1352640",
    "end": "1362240"
  },
  {
    "text": "couldn't find it um so and then I so I started digging more and more and more",
    "start": "1362240",
    "end": "1367520"
  },
  {
    "text": "um I went back to the previous version discovered actually the previous version uh I don't think it was working quite",
    "start": "1367520",
    "end": "1372840"
  },
  {
    "text": "right either I'm not actually I don't remember that so ignore that but it wasn't working um and I saw that there",
    "start": "1372840",
    "end": "1378880"
  },
  {
    "text": "was an odd warning message in the console um and I don't I didn't jot that",
    "start": "1378880",
    "end": "1385559"
  },
  {
    "text": "down I should actually go back and get that for when I write this up but it was something about you know warning you can't redefine or you're you're",
    "start": "1385559",
    "end": "1392600"
  },
  {
    "text": "redefining this thing as a method it was already a prop and it was a a the the",
    "start": "1392600",
    "end": "1399679"
  },
  {
    "text": "warning was kind of from down inside of this third party library and I thought okay that's kind of weird let me dig",
    "start": "1399679",
    "end": "1405919"
  },
  {
    "text": "through the source code of that Library like maybe I'm using it in a weird way um couldn't find it it was only that",
    "start": "1405919",
    "end": "1412240"
  },
  {
    "text": "thing was there as a prop there were no other references to anything of that name I had no idea what could be causing",
    "start": "1412240",
    "end": "1418919"
  },
  {
    "text": "this and it's not even it's not in my code right so it's like what what did I do here um the way I ended up eventually",
    "start": "1418919",
    "end": "1425799"
  },
  {
    "text": "tracing it down is I uh put a breakpoint in the view warn code so the the uh",
    "start": "1425799",
    "end": "1434159"
  },
  {
    "text": "Because by the time I was I wasn't getting a back Trace really except through view warrant so I would go into",
    "start": "1434159",
    "end": "1439600"
  },
  {
    "text": "view warrant I put a breakpoint there and then when I uh ran it again that let me look at",
    "start": "1439600",
    "end": "1447559"
  },
  {
    "text": "the definitions that were coming in and I saw okay this thing is getting a a",
    "start": "1447559",
    "end": "1453120"
  },
  {
    "text": "method with this name and there was a pointer back to the source file where that method was being defined and it",
    "start": "1453120",
    "end": "1458679"
  },
  {
    "text": "turned out that method was actually being defined in a separate third party Library uh that",
    "start": "1458679",
    "end": "1465440"
  },
  {
    "text": "was be creating essentially a mix in for these view components with some method",
    "start": "1465440",
    "end": "1470840"
  },
  {
    "text": "names and so there was a and neither neither library was Nam spacing The View selected doesn't matter because it was",
    "start": "1470840",
    "end": "1477039"
  },
  {
    "text": "doing its own stuff uh but the third party library was setting up a global",
    "start": "1477039",
    "end": "1482120"
  },
  {
    "text": "method for any component that utilized it that happened to have a naming clash with a property that the view select was",
    "start": "1482120",
    "end": "1489640"
  },
  {
    "text": "using oh so long story short I pulled out the third party library that was",
    "start": "1489640",
    "end": "1494880"
  },
  {
    "text": "defining it because it turned out like I didn't need all of at all collaborator had put it in for like one or two things",
    "start": "1494880",
    "end": "1501520"
  },
  {
    "text": "that it did so I kind of pulled that out reproduced the two things that it did like pulled their code out and just did that piece uh is my own thing and that",
    "start": "1501520",
    "end": "1509520"
  },
  {
    "text": "solved the problem and quickly submitted a you know an issue on that third party Library saying hey if you're going to",
    "start": "1509520",
    "end": "1515360"
  },
  {
    "text": "Define these uh methods in a way that's going to go into any component you really should name space them for your",
    "start": "1515360",
    "end": "1520679"
  },
  {
    "text": "library or at least give an option to name space it absolutely that that must have been so infuriating too to figure",
    "start": "1520679",
    "end": "1527840"
  },
  {
    "text": "out what it was because it it's not necessarily something that you did wrong per se exactly well and it it tied a",
    "start": "1527840",
    "end": "1534919"
  },
  {
    "text": "little bit into um the way that like some of the sort of application",
    "start": "1534919",
    "end": "1540320"
  },
  {
    "text": "Frameworks work so if I were just using that uh library in a single component it",
    "start": "1540320",
    "end": "1548600"
  },
  {
    "text": "probably wouldn't have been a problem uh but it was basically defining a set of common filters um this third party",
    "start": "1548600",
    "end": "1554240"
  },
  {
    "text": "library was like view filters or view filters 2 or something like that so it's a set of common filters and so I just",
    "start": "1554240",
    "end": "1560120"
  },
  {
    "text": "put it in the sort of global plug-in space where it gets included in every component because we were using it all",
    "start": "1560120",
    "end": "1565799"
  },
  {
    "text": "over the app but that means that it's not only getting included in my own components it's getting included in",
    "start": "1565799",
    "end": "1570840"
  },
  {
    "text": "every third party component everywhere so yeah that was my recent really tricky bug and it was a pain but",
    "start": "1570840",
    "end": "1578960"
  },
  {
    "text": "things I learned was you can put break points anywhere and if you're getting warnings like view is view as a",
    "start": "1578960",
    "end": "1585640"
  },
  {
    "text": "framework um I've been using view a lot I haven't I think react was good at this too but it's been almost a year since I",
    "start": "1585640",
    "end": "1591360"
  },
  {
    "text": "used react extensively um but Vue gives you lots of different informative",
    "start": "1591360",
    "end": "1597200"
  },
  {
    "text": "warnings and if you put a breakpoint in at those warnings then you can actually",
    "start": "1597200",
    "end": "1602600"
  },
  {
    "text": "get a lot of Rich information about what's triggering that that isn't there in the the direct back trace of the",
    "start": "1602600",
    "end": "1608080"
  },
  {
    "text": "warning because you can look at you can get lots of context of where are the objects that are getting passed in that are resulting in this what files are",
    "start": "1608080",
    "end": "1614640"
  },
  {
    "text": "they coming from all that stuff so break points are awesome yeah that's really handy that's a helpful tip yeah and I'm",
    "start": "1614640",
    "end": "1621159"
  },
  {
    "text": "so glad you made it out of battling that bug alive C to join us here",
    "start": "1621159",
    "end": "1626520"
  },
  {
    "text": "today yeah it felt it felt actually like I was angry a little bit but it also felt really good to solve it because it",
    "start": "1626520",
    "end": "1633039"
  },
  {
    "text": "was like wow that's a tricky one yeah there's that catharsis and",
    "start": "1633039",
    "end": "1638600"
  },
  {
    "text": "satisfaction and endorphin rush you get after fixing a bug that's so good there's this sort of like I can move on",
    "start": "1638600",
    "end": "1645279"
  },
  {
    "text": "with my life feeling as well I think yes yes just be clutter well and the nice",
    "start": "1645279",
    "end": "1651760"
  },
  {
    "text": "thing actually about it being a combo of third party things is you don't have this the reaction of like how could I",
    "start": "1651760",
    "end": "1657080"
  },
  {
    "text": "have been so stupid right because it's not like I introduced this by doing something really stupid and then I spend",
    "start": "1657080",
    "end": "1662679"
  },
  {
    "text": "all this time debugging it's like no this was a really interesting combination of things that were mostly",
    "start": "1662679",
    "end": "1668880"
  },
  {
    "text": "outside of my control certainly outside of my expectation and yet we tracked it",
    "start": "1668880",
    "end": "1674120"
  },
  {
    "text": "down so that you know it has a nice feeling for that yeah love blaming someone else exactly I can share one of",
    "start": "1674120",
    "end": "1683039"
  },
  {
    "text": "mine although it it is it just happens to be JavaScript but this could happen in a lot of different languages oh",
    "start": "1683039",
    "end": "1688679"
  },
  {
    "text": "that's great um I was writing a JavaScript driver for a specific piece of hardware and so like yes it sues I'm",
    "start": "1688679",
    "end": "1695720"
  },
  {
    "text": "going to talk about Hardware I'm sorry but U I had a small display that you can",
    "start": "1695720",
    "end": "1701440"
  },
  {
    "text": "plug into Arduino microcontrollers um in order to be able to display things like you can write",
    "start": "1701440",
    "end": "1706960"
  },
  {
    "text": "text you can write pictures to it it's essentially just um a monochromatic",
    "start": "1706960",
    "end": "1712159"
  },
  {
    "text": "screen that has like pixels that light up or they don't light up so there's only really two kind of states that you",
    "start": "1712159",
    "end": "1717559"
  },
  {
    "text": "can have and the way that you um Drive these screens specifically is that you",
    "start": "1717559",
    "end": "1725360"
  },
  {
    "text": "encode all of the pixels just into straight up bytes right so one bit is a",
    "start": "1725360",
    "end": "1731080"
  },
  {
    "text": "pixel and so if the bit is um has the value zero then it's basically like the",
    "start": "1731080",
    "end": "1737120"
  },
  {
    "text": "pixel is dark and if you have it as a one the pixel is actually lit up on the",
    "start": "1737120",
    "end": "1742559"
  },
  {
    "text": "screen and so that seems very straightforward um and so when I read the data sheet I was like cool I've got",
    "start": "1742559",
    "end": "1748480"
  },
  {
    "text": "this I understand how to do this and I hadn't really done a lot of bitwise manipulation in JavaScript before so I",
    "start": "1748480",
    "end": "1754640"
  },
  {
    "text": "really did learn a lot about it in this particular um project that I was working on but I would what I would end up doing",
    "start": "1754640",
    "end": "1762480"
  },
  {
    "text": "is I would um import a like a bit map and then I would use bitwise oper ation",
    "start": "1762480",
    "end": "1768720"
  },
  {
    "text": "to basically take that bit map and convert it into um you know a monochromatic one using you know",
    "start": "1768720",
    "end": "1776080"
  },
  {
    "text": "whatever algorithm you want to use for that in this case it was Floyd Steinberg but that's not relevant and then I would",
    "start": "1776080",
    "end": "1782399"
  },
  {
    "text": "then have to just take like basically a frame buffer that was full of empty bites and start sort of like using",
    "start": "1782399",
    "end": "1787480"
  },
  {
    "text": "bitwise operations to shift in all of the different pixel values that I needed and I was like yeah this is just a",
    "start": "1787480",
    "end": "1792840"
  },
  {
    "text": "linear thing right it's like the first bite is going to be the first eight pixels of the picture and then it's just",
    "start": "1792840",
    "end": "1799480"
  },
  {
    "text": "going to go from left to right and then when it gets to the next row of the actual picture it'll just like you know",
    "start": "1799480",
    "end": "1805440"
  },
  {
    "text": "keep sort of going left to right and then back again I was like this is very straightforward so every time I sent the",
    "start": "1805440",
    "end": "1812760"
  },
  {
    "text": "frame buffer that I Was preparing with JavaScript you know bitwise operations every time I sent it the picture would",
    "start": "1812760",
    "end": "1819039"
  },
  {
    "text": "just not be that I think I was trying to send a picture of a parrot and it would just be complete garbled nonsense on the",
    "start": "1819039",
    "end": "1825279"
  },
  {
    "text": "screen and I was very frustrated because this is a very hard thing to debug and I think even in JavaScript doing bitwise",
    "start": "1825279",
    "end": "1832679"
  },
  {
    "text": "operations yes you can spit out the final value of the bite and things like that but it's harder you you have to do",
    "start": "1832679",
    "end": "1839720"
  },
  {
    "text": "a lot of mental math to then convert it back into the actual bit representation like if you have like a bite that's like",
    "start": "1839720",
    "end": "1846440"
  },
  {
    "text": "2 C or something unless you sort of have this stuff memorized and you're very good at kind of like heximal math and",
    "start": "1846440",
    "end": "1853559"
  },
  {
    "text": "stuff it's hard to figure out okay well is that like 0 1 1 01 or like trying to figure that out and so that's something",
    "start": "1853559",
    "end": "1861120"
  },
  {
    "text": "that I don't think is particularly um I guess intuitive at least in JavaScript",
    "start": "1861120",
    "end": "1867200"
  },
  {
    "text": "you kind of almost have to come up with your own little Tools in order to debug that and so the problem ended up being",
    "start": "1867200",
    "end": "1872600"
  },
  {
    "text": "was um just to cut the story short was I wasn't reading the data sheet correctly",
    "start": "1872600",
    "end": "1877639"
  },
  {
    "text": "and it turns out that each bite is actually like a column of eight pixels",
    "start": "1877639",
    "end": "1882880"
  },
  {
    "text": "going down so you have to yeah so you have to imagine it in that every time",
    "start": "1882880",
    "end": "1888600"
  },
  {
    "text": "you know the first bite in this Frame buffer array is actually just painting straight downwards you know starting",
    "start": "1888600",
    "end": "1894519"
  },
  {
    "text": "from the first um the most uh the most significant bit is like kind of x0 y0",
    "start": "1894519",
    "end": "1900679"
  },
  {
    "text": "and then the next bit in that bite is like x0 y1 for example and it keeps",
    "start": "1900679",
    "end": "1906000"
  },
  {
    "text": "going down and then once you've satisfied that column you move across one on the x axis and then you start",
    "start": "1906000",
    "end": "1912360"
  },
  {
    "text": "painting downwards again and I just did the data sheet was actually very explicitly clear but I just skipped over",
    "start": "1912360",
    "end": "1917679"
  },
  {
    "text": "that section as you do you're like yeah I got this and so it was very frustrating because what I really should have done was I should have written a",
    "start": "1917679",
    "end": "1923960"
  },
  {
    "text": "tool that was able to preview this stuff more on the client side because when you send this stuff to Hardware it is",
    "start": "1923960",
    "end": "1930159"
  },
  {
    "text": "enormously difficult to debug you're just like well it's not doing what I want it to and I don't really have any feedback from that and so what I learned",
    "start": "1930159",
    "end": "1937320"
  },
  {
    "text": "was one read the data sheet properly but two sometimes it's worth slowing down",
    "start": "1937320",
    "end": "1942480"
  },
  {
    "text": "and spending maybe 15 minutes writing something that emulates the screen for",
    "start": "1942480",
    "end": "1947600"
  },
  {
    "text": "example or emulate it in a way where you would expect it to to show a certain you",
    "start": "1947600",
    "end": "1953240"
  },
  {
    "text": "know order of pixels for example to be honest I would have debugged it a lot faster because I would have been able to",
    "start": "1953240",
    "end": "1958679"
  },
  {
    "text": "verify that at least my initial assumption about the order of pixels at least that I was dumping it out in the",
    "start": "1958679",
    "end": "1964559"
  },
  {
    "text": "correct way and so therefore it couldn't have been that and so I did lose a lot of time debugging what was my initial",
    "start": "1964559",
    "end": "1970679"
  },
  {
    "text": "assumption about what the order of pixel should be in the first place so again not very related to JavaScript but kind",
    "start": "1970679",
    "end": "1976679"
  },
  {
    "text": "of showing that I had a limited tool set to debug with and so that's what made it so annoying well that also gets back to",
    "start": "1976679",
    "end": "1983399"
  },
  {
    "text": "this question of validating assumptions right which is yeah not limited to JavaScript but so key absolutely how do",
    "start": "1983399",
    "end": "1990399"
  },
  {
    "text": "I even check what my assumptions are and then test them yes and so I never forgot",
    "start": "1990399",
    "end": "1995519"
  },
  {
    "text": "it too I kind of did what you did kall and I took copious notes about it so that I didn't ever go back to that other",
    "start": "1995519",
    "end": "2001840"
  },
  {
    "text": "assumption and then it ended up writing a blog post about like how all old LED screens work and so to be honest I've",
    "start": "2001840",
    "end": "2009159"
  },
  {
    "text": "actually referenced that blog post personally myself probably more than anyone else has so it's been like really",
    "start": "2009159",
    "end": "2014279"
  },
  {
    "text": "really good to write up that's the amazing thing about blogging uh is like yeah I search for my own blog posts all",
    "start": "2014279",
    "end": "2020279"
  },
  {
    "text": "the time because I'm like I know I figured this out already how the heck did it work it's so true it's so so true",
    "start": "2020279",
    "end": "2027600"
  },
  {
    "text": "all right Nick do you want to share your own harrowing Bug Story sure uh as Kevin",
    "start": "2027600",
    "end": "2034039"
  },
  {
    "text": "said or kall said it's um kind of faded in my mind a little bit so I'm trying to",
    "start": "2034039",
    "end": "2039840"
  },
  {
    "text": "recollect myself as best I can because I've I've tried for so long to block it out uh but I often I often get need to",
    "start": "2039840",
    "end": "2047519"
  },
  {
    "text": "heal yeah this is therapy uh I often get um tasks uh through my job to like come",
    "start": "2047519",
    "end": "2055398"
  },
  {
    "text": "in on a project and figure out like a very specific bug uh and then that's it and um so this is one of those times",
    "start": "2055399",
    "end": "2062560"
  },
  {
    "text": "where a uh a client sent us their code and said we're having this bug we can't",
    "start": "2062560",
    "end": "2067760"
  },
  {
    "text": "figure it out and it works fine in local development and so uh I was running",
    "start": "2067760",
    "end": "2073200"
  },
  {
    "text": "their code locally it's an angular project uh angular 4 I think and um I I",
    "start": "2073200",
    "end": "2078240"
  },
  {
    "text": "tried to reproduce it and I could not reproduce it except for when I used Chrome's um emulate 3G uh in the network",
    "start": "2078240",
    "end": "2086919"
  },
  {
    "text": "tab to emulate a slow network connection then I could reproduce it every time uh but the problem was they had this table",
    "start": "2086919",
    "end": "2093760"
  },
  {
    "text": "on the page uh that had expandable rows and when they the Rose expanded they would introduce a link in there and when",
    "start": "2093760",
    "end": "2100400"
  },
  {
    "text": "you click the link it would use angular routing to navigate to another page and then the contents of that page would not",
    "start": "2100400",
    "end": "2107400"
  },
  {
    "text": "be fully filled out you would just see like a small portion of it unless you resized the window or um did any kind of",
    "start": "2107400",
    "end": "2115680"
  },
  {
    "text": "interaction with the page like a click then everything would just pop into place and so just a terrible bug because",
    "start": "2115680",
    "end": "2122560"
  },
  {
    "text": "you have to do it only on a 3G emulating 3G which slowed everything thing down",
    "start": "2122560",
    "end": "2128119"
  },
  {
    "text": "because there's a lot of stuff in development that was being downloaded and um I immediately started looking at",
    "start": "2128119",
    "end": "2135480"
  },
  {
    "text": "the the router thinking oh this is a problem with with routing for some reason uh but it was actually not part",
    "start": "2135480",
    "end": "2142040"
  },
  {
    "text": "of that at all the the table that they were using on the previous page was um",
    "start": "2142040",
    "end": "2147640"
  },
  {
    "text": "NG Grid or AG grid I think um which is a like a grid project uh specifically for",
    "start": "2147640",
    "end": "2154680"
  },
  {
    "text": "angular projects and that has some code in there that I I ended up debugging",
    "start": "2154680",
    "end": "2160520"
  },
  {
    "text": "down and figuring out that um when the rows were being expanded that was",
    "start": "2160520",
    "end": "2166200"
  },
  {
    "text": "causing the problem so if I just had the link on the page and clicked the link then everything worked fine so it had something to do with the rose being",
    "start": "2166200",
    "end": "2173599"
  },
  {
    "text": "expanded in there and I was trying to figure out what that was and it's really tough um and this was also kind of a a",
    "start": "2173599",
    "end": "2179440"
  },
  {
    "text": "really big deep dive into angular for me and so trying to understand that and and what it was actually doing I had no idea",
    "start": "2179440",
    "end": "2186000"
  },
  {
    "text": "how angular was was working in internally and um angular relies on this",
    "start": "2186000",
    "end": "2191359"
  },
  {
    "text": "project called Zone JS to um listen to and uh update itself when asynchronous",
    "start": "2191359",
    "end": "2198480"
  },
  {
    "text": "tasks happen things like set timeouts or uh promises being resolved and it uses that to trigger its uh diffing to",
    "start": "2198480",
    "end": "2206359"
  },
  {
    "text": "understand when it needs to rerender portions of the page and digging through the angular code and then the Zone JS",
    "start": "2206359",
    "end": "2212560"
  },
  {
    "text": "code and then back up to the AG grid code and trying to figure out what was the problem in there uh there there was",
    "start": "2212560",
    "end": "2219520"
  },
  {
    "text": "a method in ag grid where when those rows were being updated it was actually",
    "start": "2219520",
    "end": "2224720"
  },
  {
    "text": "calling a Zone JS method called run outside angular which means do this",
    "start": "2224720",
    "end": "2230480"
  },
  {
    "text": "asynchronous action that was wrapped in a set timeout um but do it outside of angular's change detection so that",
    "start": "2230480",
    "end": "2236400"
  },
  {
    "text": "angular won't actually do any kind of updating on that and so the way that the the nature of what they were doing with",
    "start": "2236400",
    "end": "2242280"
  },
  {
    "text": "adding in new rows it was being added in in a way where it wasn't fully flushing out the the all of the the changes that",
    "start": "2242280",
    "end": "2249599"
  },
  {
    "text": "it needed to from the the change detection um buffers that that angular",
    "start": "2249599",
    "end": "2254880"
  },
  {
    "text": "was using and so when I'd go to the next page there was still things that hadn't been cleared out of that and so",
    "start": "2254880",
    "end": "2260839"
  },
  {
    "text": "triggering like a click or resizing the window would actually caused the change detection to run again see that it had",
    "start": "2260839",
    "end": "2266000"
  },
  {
    "text": "changes and then update the page oh my God yeah it was it was very",
    "start": "2266000",
    "end": "2272079"
  },
  {
    "text": "traumatic very very terrible but uh what ended up happening I I was going through",
    "start": "2272079",
    "end": "2277520"
  },
  {
    "text": "trying to figure out you know if I just remove this run outside angular and get",
    "start": "2277520",
    "end": "2282920"
  },
  {
    "text": "it to run normally then everything works um but what I ended up recommending to the client is instead of just triggering",
    "start": "2282920",
    "end": "2290599"
  },
  {
    "text": "a non-change call back like they were doing for when the the rows were getting reset actually recalculate the rows",
    "start": "2290599",
    "end": "2297400"
  },
  {
    "text": "which would force angular to realize that it had uh changes that needed to be",
    "start": "2297400",
    "end": "2303599"
  },
  {
    "text": "applied to the Dom and then do that and then everything worked okay but but it took like a week of going back every",
    "start": "2303599",
    "end": "2310680"
  },
  {
    "text": "couple of hours and saying this is what I found um and you know I can investigate this further I need more",
    "start": "2310680",
    "end": "2316680"
  },
  {
    "text": "time Etc uh but just a week of back and forth on that and it was it was not fun but uh I learned a lot and I think the",
    "start": "2316680",
    "end": "2323800"
  },
  {
    "text": "the big takeaway is asynchronous bugs are very hard especially if they're not easily reproducible uh locally and uh I",
    "start": "2323800",
    "end": "2331680"
  },
  {
    "text": "just don't like the idea of overriding things like set timeout and Promises to",
    "start": "2331680",
    "end": "2336800"
  },
  {
    "text": "to do change detection yeah that's really scary so one of the commonalities",
    "start": "2336800",
    "end": "2343119"
  },
  {
    "text": "that I've kind of seen in all of your stories is it's all about having to kind",
    "start": "2343119",
    "end": "2348680"
  },
  {
    "text": "of explore a breadth of code to debug a single issue whether you're having to like dive into third party code um or",
    "start": "2348680",
    "end": "2356440"
  },
  {
    "text": "just read through a lot of invocations like it's really just like processing a lot of information to try and find the",
    "start": "2356440",
    "end": "2363000"
  },
  {
    "text": "one thing that's causing the problem yeah there's a lot of like just kind of trying to build up a picture of what the",
    "start": "2363000",
    "end": "2370480"
  },
  {
    "text": "heck is going on um our our friend Bobby tables David Point xter points out in the slack that you know if you can",
    "start": "2370480",
    "end": "2376839"
  },
  {
    "text": "figure out a reduced test case it's super valuable um that I think Su you",
    "start": "2376839",
    "end": "2382720"
  },
  {
    "text": "mentioned that a little bit um what that lets you do if you can do it is really isolate that space of where you're",
    "start": "2382720",
    "end": "2388800"
  },
  {
    "text": "trying to get the picture of like what the heck is going on here um you can't",
    "start": "2388800",
    "end": "2394960"
  },
  {
    "text": "always do it I think in that async example um that you're giving Nick just trying",
    "start": "2394960",
    "end": "2400000"
  },
  {
    "text": "to do an isolated case might have like you know you trying to run it outside of angular and it worked or whatever like",
    "start": "2400000",
    "end": "2405240"
  },
  {
    "text": "that sort of points you in the right direction for where the heck do I look for this but um yeah it's it's really",
    "start": "2405240",
    "end": "2413480"
  },
  {
    "text": "like there's not a science to this it's like we're just trying to to create a map in our head of what the heck is",
    "start": "2413480",
    "end": "2418960"
  },
  {
    "text": "happening totally and I'm really stubbon too and I'm too lazy I'm like no I'm",
    "start": "2418960",
    "end": "2424200"
  },
  {
    "text": "going to waste more time writing this test case I bet you I'm just like right on the brink of figuring this out and so",
    "start": "2424200",
    "end": "2429560"
  },
  {
    "text": "I will just cycle endlessly rather than slow down and actually kind of explore",
    "start": "2429560",
    "end": "2435480"
  },
  {
    "text": "and write verification for it and that's something that I'm trying to work on as a developer in general constantly is",
    "start": "2435480",
    "end": "2442040"
  },
  {
    "text": "like don't don't think that this is a waste of time because it's probably",
    "start": "2442040",
    "end": "2447599"
  },
  {
    "text": "going to end up saving you more time in the long run if you just slow down and write something that will be able to",
    "start": "2447599",
    "end": "2452800"
  },
  {
    "text": "either reproduce it in another case or like what Nick did I'm going to like actually go off and try and like look at",
    "start": "2452800",
    "end": "2458400"
  },
  {
    "text": "how it behaves in this context I'm really glad you mentioned that Su because I do that too and it's just good to to know that that uh others do as",
    "start": "2458400",
    "end": "2466200"
  },
  {
    "text": "well like think that oh I I'm too lazy I don't want to do this like like I don't",
    "start": "2466200",
    "end": "2472440"
  },
  {
    "text": "want to put in all of this work because I'm right on the The Edge I always feel like that and I always come out worse at the end I feel but uh yeah thanks for",
    "start": "2472440",
    "end": "2479880"
  },
  {
    "text": "sharing that I'm glad that I'm not the only one as well so I'm very glad that I shed it those are some really",
    "start": "2479880",
    "end": "2485680"
  },
  {
    "text": "interesting stories for our second segment we've been talking a lot about bugs and we've talked a little bit about",
    "start": "2485680",
    "end": "2491800"
  },
  {
    "text": "ways to avoid them or tips and tricks to keep in mind when trying to solve them",
    "start": "2491800",
    "end": "2496839"
  },
  {
    "text": "uh in the next segment when we come back we're going to provide you with some tools and techniques to reduce the",
    "start": "2496839",
    "end": "2502160"
  },
  {
    "text": "number of bugs in your code or help debug bugs so stay tuned and we'll be right",
    "start": "2502160",
    "end": "2508180"
  },
  {
    "text": "[Music] back this episode is brought to you by V",
    "start": "2508180",
    "end": "2515800"
  },
  {
    "text": "A hiring Marketplace that can next job seekers in Tech with the hiring managers from top companies in the US and I had a",
    "start": "2515800",
    "end": "2522319"
  },
  {
    "text": "chance to Brian Laie VP a product about one of the most memorable and impactful things about the job Seekers experience",
    "start": "2522319",
    "end": "2528520"
  },
  {
    "text": "on veter every candidate on veter gets assign their very own Talent executive",
    "start": "2528520",
    "end": "2533680"
  },
  {
    "text": "who guides them every step of the way the talent Executives is an internal team that works with candidates as",
    "start": "2533680",
    "end": "2540760"
  },
  {
    "text": "they're coming on the platform helps them fill out their preferences we get on the phone with job Seekers and talk",
    "start": "2540760",
    "end": "2547559"
  },
  {
    "text": "through their backgrounds and what they're looking for in their career and then once job Seekers are on the platform we help them look into roles",
    "start": "2547559",
    "end": "2555000"
  },
  {
    "text": "and companies that they're interviewing with and talk through offers that they get on the platform in order to make",
    "start": "2555000",
    "end": "2560319"
  },
  {
    "text": "sure that they get tailored offers that meet their requirements and their career goals it sounds like you're holding a",
    "start": "2560319",
    "end": "2565599"
  },
  {
    "text": "candidate's hand through the whole process yeah definitely working with a talent executive is essentially having a",
    "start": "2565599",
    "end": "2571240"
  },
  {
    "text": "personal career coach who can help you think through how does a Job relate to your career goals like what should I be",
    "start": "2571240",
    "end": "2577599"
  },
  {
    "text": "asking for in an offer what should I be doing to prepare for an interview uh essentially what a career coach would do",
    "start": "2577599",
    "end": "2583800"
  },
  {
    "text": "so it's often a very isolating experience veter has found a way to ensure that job Seekers aren't alone in",
    "start": "2583800",
    "end": "2589599"
  },
  {
    "text": "the process yeah that's exactly right and I think that it's really something that we hear a lot from job Seekers on",
    "start": "2589599",
    "end": "2596000"
  },
  {
    "text": "vet is that working with the town executive is often the thing that is most memorable and most impactful about",
    "start": "2596000",
    "end": "2602520"
  },
  {
    "text": "their experience on veter is that they have someone to bounce ideas off of who can help them think through through their career goals and decide is this",
    "start": "2602520",
    "end": "2610079"
  },
  {
    "text": "the right company for me and um if it is how am I going to land this job all right take that first step head to",
    "start": "2610079",
    "end": "2615160"
  },
  {
    "text": "vet.com changelog to learn more and get started also our listeners get a $500",
    "start": "2615160",
    "end": "2621200"
  },
  {
    "text": "signing bonus when you find your job through veter once again that's veter",
    "start": "2621200",
    "end": "2626400"
  },
  {
    "text": "VT y.com changelog and by digital ocean the",
    "start": "2626400",
    "end": "2632200"
  },
  {
    "text": "simplest Cloud platform for developers and teams deploy manage scale faster and",
    "start": "2632200",
    "end": "2638400"
  },
  {
    "text": "more efficiently on digital ocean managing infrastructure is easy for teams whether you're running one virtual",
    "start": "2638400",
    "end": "2644160"
  },
  {
    "text": "machine or thousands use our special link to get a $100 credit for digital ocean and try it today for free head to",
    "start": "2644160",
    "end": "2652319"
  },
  {
    "text": "do. changelog once again do. co/",
    "start": "2652319",
    "end": "2659480"
  },
  {
    "text": "[Music]",
    "start": "2660130",
    "end": "2663288"
  },
  {
    "text": "changelog [Music]",
    "start": "2666040",
    "end": "2672920"
  },
  {
    "text": "we are back for the last segment of this recording uh we are going to be giving",
    "start": "2672920",
    "end": "2678920"
  },
  {
    "text": "you the answers to life the universe and everything not really we're just going",
    "start": "2678920",
    "end": "2683960"
  },
  {
    "text": "to be helping you reduce the number of bugs in your code uh sharing some tools and some programming principles to keep",
    "start": "2683960",
    "end": "2690760"
  },
  {
    "text": "in mind uh so does anyone want to share some things uh We've mentioned a few already on the podcast but any anything",
    "start": "2690760",
    "end": "2697400"
  },
  {
    "text": "new you want to share on how you avoid those pesky bugs there's no way to avoid",
    "start": "2697400",
    "end": "2703000"
  },
  {
    "text": "themt was a big one I feel like we were going to we were going to talk about typescript but we've gotten there",
    "start": "2703000",
    "end": "2708240"
  },
  {
    "text": "already but I mean typescript is going to solve a very very specific problem for you right um but there are outside",
    "start": "2708240",
    "end": "2714319"
  },
  {
    "text": "of things like typ erors and just like the really cool lenting that um Visual Studio code can do are there any other",
    "start": "2714319",
    "end": "2722280"
  },
  {
    "text": "um I guess like plugins for IDE um you know while we're on the topic that",
    "start": "2722280",
    "end": "2727680"
  },
  {
    "text": "anyone's really really liked using other than what we've already talked about I mean I'm a hardcore Vim addict so I",
    "start": "2727680",
    "end": "2733640"
  },
  {
    "text": "don't I don't really do those IDE things I am too uh and one plug-in that",
    "start": "2733640",
    "end": "2740000"
  },
  {
    "text": "comes to mind is Al or the asynchronous linting engine uh which is great it it",
    "start": "2740000",
    "end": "2745160"
  },
  {
    "text": "basically makes them uh yell at you like other editors would so it'll uh give you a gutter on the the left side of your",
    "start": "2745160",
    "end": "2751680"
  },
  {
    "text": "code and if as you're typing if you it checks things like uh your es lent or c",
    "start": "2751680",
    "end": "2757000"
  },
  {
    "text": "file or your tslint or um talks to the typescript server if you're using typescript and it will give you",
    "start": "2757000",
    "end": "2763720"
  },
  {
    "text": "information about that line and then put down in the the little error um message",
    "start": "2763720",
    "end": "2768800"
  },
  {
    "text": "area at the bottom of the screen what the problem is so if you're uh trailing comma or whatever it'll it'll tell you",
    "start": "2768800",
    "end": "2774960"
  },
  {
    "text": "that right there but it also has a a really nice feature called Al fix which will do things like run your prettier",
    "start": "2774960",
    "end": "2780680"
  },
  {
    "text": "config and automatically update the file that's cool wait is this for Vim or another editor for Vim heck yeah I use",
    "start": "2780680",
    "end": "2788079"
  },
  {
    "text": "Vim so I'm going to install this now thank you I leared that today we really do need a Vim party because like it",
    "start": "2788079",
    "end": "2793319"
  },
  {
    "text": "seems like just about everybody on here is all about it oh boy I used to be all about it but then when I started uh",
    "start": "2793319",
    "end": "2800000"
  },
  {
    "text": "working full-time everyone at the company uses vs code so now I'm on the VSS code train which actually I quite",
    "start": "2800000",
    "end": "2806440"
  },
  {
    "text": "like it but unfortunately I don't have any uh new extensions to mention besides",
    "start": "2806440",
    "end": "2812359"
  },
  {
    "text": "like TS Lind so in terms of practices uh David the pych channel brought up",
    "start": "2812359",
    "end": "2818200"
  },
  {
    "text": "something that I was going to which is uh immutability and trying not to mutate",
    "start": "2818200",
    "end": "2823480"
  },
  {
    "text": "State um I think you know so many of the bugs that we run into you know not just",
    "start": "2823480",
    "end": "2830839"
  },
  {
    "text": "are like so at one layer we could say these are about types and undefined but at another layer it's just about this",
    "start": "2830839",
    "end": "2836640"
  },
  {
    "text": "thing has changed from what we expect it to be um and it's way harder to reason",
    "start": "2836640",
    "end": "2843400"
  },
  {
    "text": "about that sort of what we expect it to be and keeping it um there if you're mutating State as you go along um and so",
    "start": "2843400",
    "end": "2851319"
  },
  {
    "text": "the more you can write your code in a way that where you're con you're always",
    "start": "2851319",
    "end": "2857200"
  },
  {
    "text": "creating uh new objects and you're you're being immutable and you have functions that are pure and that are not",
    "start": "2857200",
    "end": "2863480"
  },
  {
    "text": "creating all these side effects the more it becomes easy to reason about what's going on the more it becomes easy to",
    "start": "2863480",
    "end": "2868559"
  },
  {
    "text": "test and you have a lot fewer challenges with bugs and you can do that in a way",
    "start": "2868559",
    "end": "2876160"
  },
  {
    "text": "where even if you are are dealing with something that is fundamentally uh mutation oriented um",
    "start": "2876160",
    "end": "2881640"
  },
  {
    "text": "like I'm thinking about you know one of the big contrasts between the way that Vue and VX handles State and the way",
    "start": "2881640",
    "end": "2889359"
  },
  {
    "text": "that react and Redux handle state is that uh view leans very heavily into",
    "start": "2889359",
    "end": "2894839"
  },
  {
    "text": "this concept of reactivity and you have data that you mutate and things react from that um but if you kind of isolate",
    "start": "2894839",
    "end": "2902480"
  },
  {
    "text": "that reactive piece uh and so you're still doing you all of your changes are based on I'm going to take something I'm",
    "start": "2902480",
    "end": "2908720"
  },
  {
    "text": "going to uh immutably come up with a new state and then at that point I'm going to do my assignment so that my sort of",
    "start": "2908720",
    "end": "2915640"
  },
  {
    "text": "mutable store changes at that point uh but all of your logic and and communication and thinking about is",
    "start": "2915640",
    "end": "2921079"
  },
  {
    "text": "essentially treating these things as immutable it just becomes so much easier to reason about the flows of data and",
    "start": "2921079",
    "end": "2926760"
  },
  {
    "text": "you don't end up with these objects where you're like how the heck did that end up that way it's so true and it also",
    "start": "2926760",
    "end": "2932160"
  },
  {
    "text": "does mean that it's it's provides the opportunity for you to have really cool",
    "start": "2932160",
    "end": "2937319"
  },
  {
    "text": "debugging things like the time travel debugging and things like that where you can actually start capturing that data",
    "start": "2937319",
    "end": "2944760"
  },
  {
    "text": "every time you generate a new copy of it that's like basically like a little record in time and that ends up opening",
    "start": "2944760",
    "end": "2950799"
  },
  {
    "text": "the doors to like all sorts of really cool stuff where you can actually watch something live and you can actually",
    "start": "2950799",
    "end": "2957599"
  },
  {
    "text": "capture that even from user data so that you can actually see exactly what they were doing at that given time and you",
    "start": "2957599",
    "end": "2962880"
  },
  {
    "text": "can reproduce the state of your app as well so I think that by itself is really good and then also what it opens up for",
    "start": "2962880",
    "end": "2969480"
  },
  {
    "text": "debugging itself is kind of amazing has anyone seen code Lauren by Mary Rose",
    "start": "2969480",
    "end": "2975280"
  },
  {
    "text": "cook I have not it's a really cool example of this it's it's basically an old project I don't think that they work",
    "start": "2975280",
    "end": "2981160"
  },
  {
    "text": "on it anymore but it's for it's like game programming for beginners and they designed the um it's basically a web-",
    "start": "2981160",
    "end": "2988280"
  },
  {
    "text": "based IDE and I think it's code lauren.com and they designed it in a way",
    "start": "2988280",
    "end": "2993680"
  },
  {
    "text": "where you can draw shapes and and compare things and um you can specify",
    "start": "2993680",
    "end": "3000119"
  },
  {
    "text": "functions and data types and stuff like that but also you can step backwards and forwards through the program as you're actually writing it as well and I think",
    "start": "3000119",
    "end": "3006359"
  },
  {
    "text": "that that's really really cool to be able to learn how that approach to",
    "start": "3006359",
    "end": "3012000"
  },
  {
    "text": "things like immutability and avoiding side effects and things like that could be really really helpful I had two uh",
    "start": "3012000",
    "end": "3017559"
  },
  {
    "text": "sort of programming principles that I wanted to share for helping uh reduce the number of bugs uh one of them is",
    "start": "3017559",
    "end": "3025200"
  },
  {
    "text": "just something that I always do that I am trying to do less of which is having numerous cases in a single if statement",
    "start": "3025200",
    "end": "3032839"
  },
  {
    "text": "um so you know I might be like saying if this combination of cases or this combination of cases but not that",
    "start": "3032839",
    "end": "3039040"
  },
  {
    "text": "combination of cases then do this um and that's just like definitely asking to",
    "start": "3039040",
    "end": "3045200"
  },
  {
    "text": "shoot myself in the foot later um but just kind of like being deliberate about how you're implementing uh logic in my",
    "start": "3045200",
    "end": "3052599"
  },
  {
    "text": "code um is something that helps me reduce the number of bugs in it um and",
    "start": "3052599",
    "end": "3058319"
  },
  {
    "text": "then another one which I learned really recently is to avoid uh Boolean traps",
    "start": "3058319",
    "end": "3063520"
  },
  {
    "text": "Boolean traps are cases where you essentially pass a Boolean parameter to",
    "start": "3063520",
    "end": "3069839"
  },
  {
    "text": "a function um and usually what your intention is there is to treat a Boolean flag or parameter as some sort of flag",
    "start": "3069839",
    "end": "3078440"
  },
  {
    "text": "um that internally your function may or may not do one thing depending on what the value of the Boolean is um you end",
    "start": "3078440",
    "end": "3085960"
  },
  {
    "text": "up shooting your especially in JavaScript uh cuz there isn't like a way",
    "start": "3085960",
    "end": "3091640"
  },
  {
    "text": "to do named parameters in JavaScript besides like the trick of passing an object to a function instead of a list",
    "start": "3091640",
    "end": "3098920"
  },
  {
    "text": "of parameters um and so it ends up happening is you pass a Boolean to a",
    "start": "3098920",
    "end": "3105280"
  },
  {
    "text": "function expecting it to do one thing but that logic is off fiscated from you and that Boolean flag doesn't actually",
    "start": "3105280",
    "end": "3112599"
  },
  {
    "text": "do what you intend um and it sort of just follows a general programming principle of um don't have functions",
    "start": "3112599",
    "end": "3120200"
  },
  {
    "text": "that take booleans to um dictate what internal logic happens um so yeah those",
    "start": "3120200",
    "end": "3126599"
  },
  {
    "text": "are like two tips especially around booing I feel like those booing are one",
    "start": "3126599",
    "end": "3132240"
  },
  {
    "text": "of the subtler places where um bugs can happen um in code and those are some",
    "start": "3132240",
    "end": "3138160"
  },
  {
    "text": "things I try and do to reduce them I'm glad that bullan are brought up because they really are like not talked about as",
    "start": "3138160",
    "end": "3145000"
  },
  {
    "text": "much as type errors and side effects and things like that and it is it is bewildering when you are trying to use a",
    "start": "3145000",
    "end": "3151839"
  },
  {
    "text": "library for the first time and I'm guilty of this actually because one of the first libraries I ever wrote um for",
    "start": "3151839",
    "end": "3158359"
  },
  {
    "text": "like other people to consume was that one for the screen and I have I am breaking the rule that we're talking",
    "start": "3158359",
    "end": "3163559"
  },
  {
    "text": "about right now where I am asking for arbitrary like bullion to be passed in to the function as an argument and that",
    "start": "3163559",
    "end": "3170760"
  },
  {
    "text": "does tend to be where it's very very hard for other people who are also using the code you've written in teams to",
    "start": "3170760",
    "end": "3176839"
  },
  {
    "text": "reason about those kind of things as well and I think that also with bullan",
    "start": "3176839",
    "end": "3182520"
  },
  {
    "text": "one thing that I've gotten better at with time is just explicitly um naming",
    "start": "3182520",
    "end": "3187799"
  },
  {
    "text": "them properly and using naming conventions for them as well and so you've probably seen these",
    "start": "3187799",
    "end": "3192839"
  },
  {
    "text": "recommendations on the internet a fair bit where um you know you can have a bullion that is that can be named with",
    "start": "3192839",
    "end": "3199720"
  },
  {
    "text": "like is has and should and things like that at the beginning which makes it so",
    "start": "3199720",
    "end": "3205040"
  },
  {
    "text": "much more clear what it is instead of calling a bullion for example something",
    "start": "3205040",
    "end": "3210400"
  },
  {
    "text": "or um I guess we can come up with a better example such as um hide versus is",
    "start": "3210400",
    "end": "3216599"
  },
  {
    "text": "hidden yes hi yes thank you that is perfect yes so should hide or is hidden",
    "start": "3216599",
    "end": "3221760"
  },
  {
    "text": "or um something like that is better than just the word hide or hidden or something you know if hidden um is not",
    "start": "3221760",
    "end": "3229480"
  },
  {
    "text": "as clear as um is currently hidden or something like that and I think that that's really good to be a little more",
    "start": "3229480",
    "end": "3236480"
  },
  {
    "text": "explicit in your bullion so that people understand exactly what you're intended to do with them because they are such a",
    "start": "3236480",
    "end": "3241520"
  },
  {
    "text": "simple primitive it's like a true or a false and so you know there's not much you can extrapolate from there unless you name it properly yeah naming is huge",
    "start": "3241520",
    "end": "3249359"
  },
  {
    "text": "and I think sort of associated with that is just being extremely explicit valuing",
    "start": "3249359",
    "end": "3256480"
  },
  {
    "text": "explicitness over tness I think uh it's",
    "start": "3256480",
    "end": "3261520"
  },
  {
    "text": "really easy to get sucked into how sexy metaprogramming is and how like oh I can have so much power I can do all these",
    "start": "3261520",
    "end": "3268319"
  },
  {
    "text": "things and I can write this you know really reusable code that does everything um but code is read way more",
    "start": "3268319",
    "end": "3277200"
  },
  {
    "text": "often than it is written and it is also you know the the difference between writing one function and four or five",
    "start": "3277200",
    "end": "3284160"
  },
  {
    "text": "functions is rarely that big in terms of time but by being much more explicit you",
    "start": "3284160",
    "end": "3290720"
  },
  {
    "text": "can really cut down on your bugs around like oh I didn't think about that case or or that sort of thing like I feel",
    "start": "3290720",
    "end": "3296680"
  },
  {
    "text": "like uh I followed this trajectory that I think a a lot of developers can",
    "start": "3296680",
    "end": "3302799"
  },
  {
    "text": "probably resonate with where you know I started out and I didn't know much what I was doing and I just was happy to get",
    "start": "3302799",
    "end": "3308480"
  },
  {
    "text": "it done and then I learned about meta program and I was like oh this is amazing I'm going to create these perfect systems they're going to be so",
    "start": "3308480",
    "end": "3314400"
  },
  {
    "text": "cool and doing all these you know fancy metaprogramming things and you end up",
    "start": "3314400",
    "end": "3320359"
  },
  {
    "text": "ended up in all these nightmare Corner cases and debugging and how the heck did this and how did how do I do that and",
    "start": "3320359",
    "end": "3325440"
  },
  {
    "text": "whatever and sort of went back to well yeah metaprogramming is a pretty useful tool occasionally but for the vast",
    "start": "3325440",
    "end": "3331240"
  },
  {
    "text": "majority of cases I'm going to just be explicit and just do the thing I have touched metaprogramming code bases",
    "start": "3331240",
    "end": "3337640"
  },
  {
    "text": "before where other people wrote the metaprogramming and I just think that that is also an area where it can get so",
    "start": "3337640",
    "end": "3344119"
  },
  {
    "text": "subjective on how it's written depending on who wrote it and that's actually been one of the more difficult things for me",
    "start": "3344119",
    "end": "3349400"
  },
  {
    "text": "as well and I think that that's pretty much what you summarized right there yeah I think one of the great summ",
    "start": "3349400",
    "end": "3355680"
  },
  {
    "text": "summary points point that I I take back from the conversation we just had is if",
    "start": "3355680",
    "end": "3361079"
  },
  {
    "text": "you write code that's easy to read you're going to write code that's easy to debug and code that is also less",
    "start": "3361079",
    "end": "3366880"
  },
  {
    "text": "likely to have bugs so kind of the root thing you're going for is always readability and accessibility totally",
    "start": "3366880",
    "end": "3375000"
  },
  {
    "text": "also write less code you know if there's a CSS feature that does what you want",
    "start": "3375000",
    "end": "3381799"
  },
  {
    "text": "then use CSS and use I let me go even more on that use less powerful code the",
    "start": "3381799",
    "end": "3386839"
  },
  {
    "text": "more that you can so metaprogramming kind of fits into that but even more like if you can do this thing in markup",
    "start": "3386839",
    "end": "3392119"
  },
  {
    "text": "or in CSS instead of JavaScript do it in markup per CSS like code that you don't write doesn't have bugs that's quite",
    "start": "3392119",
    "end": "3399559"
  },
  {
    "text": "true that's actually the the real solution just don't write code don't write any code yeah get out of the get",
    "start": "3399559",
    "end": "3405640"
  },
  {
    "text": "out of the industry no code required um but I mean if we do it you could take it",
    "start": "3405640",
    "end": "3410720"
  },
  {
    "text": "in a number of Dimensions right so like there's use the least powerful tool possible to get what you want want uh",
    "start": "3410720",
    "end": "3417240"
  },
  {
    "text": "there's use uh well-used well validated Frameworks and libraries things where",
    "start": "3417240",
    "end": "3422440"
  },
  {
    "text": "somebody else has probably already worked through this and you you know this isn't like use this random package",
    "start": "3422440",
    "end": "3427839"
  },
  {
    "text": "that I found on GitHub that you know five people are using this is like okay there's a reason why you know hundreds",
    "start": "3427839",
    "end": "3434079"
  },
  {
    "text": "of thousands of people are using this library or this framework it's got a lot of testing it's got a lot of other things like let's mostly use that rather",
    "start": "3434079",
    "end": "3441480"
  },
  {
    "text": "than Reinventing the wheel all right those are some really useful tips we are coming close to the end of the hour on",
    "start": "3441480",
    "end": "3448839"
  },
  {
    "text": "here hopefully you all had a wonderful time listening to us and you learned something new about interest in cases",
    "start": "3448839",
    "end": "3454480"
  },
  {
    "text": "where bugs can come up and also how you can avoid those bugs in the first place uh thanks for joining us here on the JS",
    "start": "3454480",
    "end": "3461400"
  },
  {
    "text": "party the best party of all um thank you to everyone joining me today Cal Nick",
    "start": "3461400",
    "end": "3467160"
  },
  {
    "text": "Susie and we shall see you next time all right thank you for tuning in",
    "start": "3467160",
    "end": "3473520"
  },
  {
    "text": "to JS party this week tuning live on Thursday days at 1 p.m. us Eastern at",
    "start": "3473520",
    "end": "3479200"
  },
  {
    "text": "Chang law.com join the community and slack with us in real time during the shows head to change.com community and",
    "start": "3479200",
    "end": "3486200"
  },
  {
    "text": "do us a favor share this show with a friend we do have a podcast go into overcast and favored it and thank you to",
    "start": "3486200",
    "end": "3492720"
  },
  {
    "text": "fastly our bandwidth partner head to fastly.com to learn more and we move fast to fix things right here at change",
    "start": "3492720",
    "end": "3498240"
  },
  {
    "text": "law because of RAR check them out at roar.com we're hosted on Lino Cloud servers at the lin.com changelog check",
    "start": "3498240",
    "end": "3505520"
  },
  {
    "text": "them out and support support this show our music is produced by break master cylinder and you can find more shows",
    "start": "3505520",
    "end": "3510720"
  },
  {
    "text": "just like this at change.com thanks for tuning in we'll see you next [Music]",
    "start": "3510720",
    "end": "3520839"
  },
  {
    "text": "week",
    "start": "3520839",
    "end": "3523839"
  }
]