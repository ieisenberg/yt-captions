[
  {
    "text": "even just that mechanism alone probably is enough to kind of spark a bit of innovation I would have thought in the",
    "start": "80",
    "end": "6080"
  },
  {
    "text": "go Community because who knows what you could build I mean well a file Watcher was one thing that I thought of there but I bet there's loads of things you",
    "start": "6080",
    "end": "12320"
  },
  {
    "text": "can do if if only you could get an insight into what's really going on in the kernel the possibilities are",
    "start": "12320",
    "end": "20199"
  },
  {
    "text": "endless getting quite excited about it big thanks to our partners Len fastly",
    "start": "20199",
    "end": "26279"
  },
  {
    "text": "and launch Darkly we love Len they keep it fast and simple get a $100 in credit at lin.com changelog our bandwidth is",
    "start": "26279",
    "end": "34640"
  },
  {
    "text": "provided by fastly learn more at fastly.com and get your feature Flags Power by launch darkley get a demo at",
    "start": "34640",
    "end": "41280"
  },
  {
    "text": "launch dark.com this episode is brought to you by teleport teleport lets Engineers operate",
    "start": "41280",
    "end": "47480"
  },
  {
    "text": "as if all cloud computing resources they have access to are in the seam room with them SSO allows Discovery and instant",
    "start": "47480",
    "end": "53600"
  },
  {
    "text": "access to all layers of your Tech stack behind Nat across clouds data centers or on the edge I have f cons boy here with",
    "start": "53600",
    "end": "60680"
  },
  {
    "text": "me co-founder and CE of teleport have helped me understand industry best practices and how teleport access",
    "start": "60680",
    "end": "66479"
  },
  {
    "text": "playing gives Engineers unified access in the most secure way possible so the industry best practice for remote access",
    "start": "66479",
    "end": "73680"
  },
  {
    "text": "means that the access needs to be identity based which means that you're logging in as yourself you're not",
    "start": "73680",
    "end": "78920"
  },
  {
    "text": "sharing credentials from anybody and the best way to implement this is certificates it also means that you need",
    "start": "78920",
    "end": "85159"
  },
  {
    "text": "to have unified audit for all the different actions with all these difficulties that you would experience",
    "start": "85159",
    "end": "91079"
  },
  {
    "text": "configuring everything you have every server every cluster with certificate based authentication and authorization",
    "start": "91079",
    "end": "97119"
  },
  {
    "text": "that's the state of the world today you have to do it but if you are using teleport that creates a single end point",
    "start": "97119",
    "end": "103880"
  },
  {
    "text": "it's a multi-protocol proxy that natively speaks all of these different protocols that you're using it makes you",
    "start": "103880",
    "end": "110560"
  },
  {
    "text": "to go through SSO single sign on and then it transparently allows you to receive certificates for all of your",
    "start": "110560",
    "end": "117560"
  },
  {
    "text": "Cloud resources and the beauty of of certificates it said they have your identity encoded and they also expire so",
    "start": "117560",
    "end": "123799"
  },
  {
    "text": "when the day is over you go home the your access is automatically revoked and",
    "start": "123799",
    "end": "129080"
  },
  {
    "text": "that's what teleport allows you to do so it allows Engineers to enjoy the superpowers of accessing all of cloud",
    "start": "129080",
    "end": "136720"
  },
  {
    "text": "computing resources as if they were in the same room with them that's why it's called teleport and at the same time",
    "start": "136720",
    "end": "142080"
  },
  {
    "text": "when the day is over the access automatically revoked that's the beauty of teleport all right you can try teleport today in the cloud self-hosted",
    "start": "142080",
    "end": "149040"
  },
  {
    "text": "or open source head to goport.com to learn more and get started again goport.com",
    "start": "149040",
    "end": "155210"
  },
  {
    "text": "[Music]",
    "start": "155210",
    "end": "162740"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "170879",
    "end": "178159"
  },
  {
    "text": "from around the go community are you repping your favorite go podcast with a comfy t-shirt buy one today at go time.",
    "start": "178159",
    "end": "186080"
  },
  {
    "text": "fm/ merch all right we have an awesome episode for you let's get into it here",
    "start": "186080",
    "end": "192599"
  },
  {
    "text": "we [Music]",
    "start": "192599",
    "end": "204220"
  },
  {
    "text": "go hello and welcome to go time I'm Matt ryer and today we're talking about",
    "start": "205319",
    "end": "213040"
  },
  {
    "text": "ebpf ebpf is a technology that allows you to run programs safely in a sandbox",
    "start": "213040",
    "end": "220120"
  },
  {
    "text": "without having to change kernel sort code or install modules or anything like that and this has been sort of typically",
    "start": "220120",
    "end": "226799"
  },
  {
    "text": "the perfect place really for solving problems like networking security or observability because of course the",
    "start": "226799",
    "end": "233280"
  },
  {
    "text": "kernel controls everything it can see everything so it's kind of perfect really but because it is such a core",
    "start": "233280",
    "end": "239439"
  },
  {
    "text": "comp component means it's actually difficult to change if you think about your own code if you've got a core",
    "start": "239439",
    "end": "244879"
  },
  {
    "text": "service or something that is a dependency for lots of other systems you can see where that gets to be quite",
    "start": "244879",
    "end": "251439"
  },
  {
    "text": "difficult to change and you know when you can't change something you can't innovate there so that was typically the",
    "start": "251439",
    "end": "257120"
  },
  {
    "text": "story really for you changing the kernel be quite um not really an option until",
    "start": "257120",
    "end": "262600"
  },
  {
    "text": "ebpf comes along apparently to change the rules let's find out more about it",
    "start": "262600",
    "end": "268880"
  },
  {
    "text": "because we're doing an episode on it right now and joining me on this episode I've got Derek Parker hello Derek hello",
    "start": "268880",
    "end": "275520"
  },
  {
    "text": "Derek you created delve didn't you you only went and created delve yes that's correct yeah and you are a senior",
    "start": "275520",
    "end": "282880"
  },
  {
    "text": "software engineer at Red Hat apparently yep that's right very cool welcome to go",
    "start": "282880",
    "end": "288639"
  },
  {
    "text": "time we're also joined by Grant Seltzer Grant is on the open source engineering",
    "start": "288639",
    "end": "294120"
  },
  {
    "text": "team at Aqua Aqua security yep and lives in Brooklyn in New York New York City",
    "start": "294120",
    "end": "300120"
  },
  {
    "text": "what a cool place to live thanks for joining us Grant thank you for having me no it's a it's an honor the honor is all",
    "start": "300120",
    "end": "306160"
  },
  {
    "text": "ours mine uh 50% mine and 50% Johnny Boro is also here hello Johnny hello",
    "start": "306160",
    "end": "313240"
  },
  {
    "text": "mate I'm here to ask all the silly questions about ebpf oh good good good",
    "start": "313240",
    "end": "319360"
  },
  {
    "text": "because that'll save me from doing it I'll make you look good I'll make you look good I'll just ask all yeah I mean",
    "start": "319360",
    "end": "325000"
  },
  {
    "text": "I just wrote that intro from Wikipedia mate rest of it I'm I'm an impostor today I don't mind bit these episodes",
    "start": "325000",
    "end": "331880"
  },
  {
    "text": "where I'm I'm kind of the impostor like I don't really know the subject because",
    "start": "331880",
    "end": "337520"
  },
  {
    "text": "I really then get to explore it and I always learn so much especially when we have guests such as these esteemed",
    "start": "337520",
    "end": "343759"
  },
  {
    "text": "gentlemen so who wants to kind of give us a bit of a background on ebpf where did it come from and and what really is",
    "start": "343759",
    "end": "350960"
  },
  {
    "text": "it ebpf like you said it's a technology that lets you write small Snippets of",
    "start": "350960",
    "end": "357360"
  },
  {
    "text": "code and then put those into the Linux kernel at strategic points that they'll be run in response",
    "start": "357360",
    "end": "365440"
  },
  {
    "text": "to certain hooks so you could kind of think of it in the same way as",
    "start": "365440",
    "end": "370560"
  },
  {
    "text": "registering a web hook for a web service in the same way you could do that for",
    "start": "370560",
    "end": "376680"
  },
  {
    "text": "your actual system so the things that you can have these small you could think of them as scripts things that you could",
    "start": "376680",
    "end": "383759"
  },
  {
    "text": "have them respond to include like a kernel function being called like something happening within the Linux",
    "start": "383759",
    "end": "390880"
  },
  {
    "text": "kernel source code you could attach them to functions things like that you could",
    "start": "390880",
    "end": "396000"
  },
  {
    "text": "attach these BPF programs to network sockets and have them respond to packets",
    "start": "396000",
    "end": "402599"
  },
  {
    "text": "coming in or out you could attach them to user space functions so uh if you",
    "start": "402599",
    "end": "408319"
  },
  {
    "text": "have a compiled go program that you're running some service even if it's a long running service you can attach them to",
    "start": "408319",
    "end": "414639"
  },
  {
    "text": "actual it's not the actual source code that you're attaching them to but the symbols and inside your compiled binary",
    "start": "414639",
    "end": "420879"
  },
  {
    "text": "that correspond to the to the actual functions you could have ebpf programs",
    "start": "420879",
    "end": "426039"
  },
  {
    "text": "respond to that that's something Derek I'm sure can talk about wait I told you I was gonna ask to things let me let me",
    "start": "426039",
    "end": "432440"
  },
  {
    "text": "say what you just said but in a much simpler way for me sure ebpf is like so",
    "start": "432440",
    "end": "437840"
  },
  {
    "text": "the kernel is like HTML and ebpf is like your JavaScript so that when somebody",
    "start": "437840",
    "end": "443000"
  },
  {
    "text": "clicks a button on your HTML your JavaScript can react to that event happening exactly so that's one way that",
    "start": "443000",
    "end": "451080"
  },
  {
    "text": "a lot of people I think I think the quote originated from Brendan Greg but that's the typical way that people like",
    "start": "451080",
    "end": "457560"
  },
  {
    "text": "to explain BPF it's a a very good analogy to make is that a purely Observatory thing can you only listen to",
    "start": "457560",
    "end": "465080"
  },
  {
    "text": "things or can you change things no you you could actually change things and you could uh make responses you could really",
    "start": "465080",
    "end": "471840"
  },
  {
    "text": "you know there are certainly limitations because safety is certainly a a concern you don't want to just be able to put",
    "start": "471840",
    "end": "477560"
  },
  {
    "text": "anything into your running operating system especially in production but yeah there there's a lot you can do you can",
    "start": "477560",
    "end": "484400"
  },
  {
    "text": "take action you can prevent a process from occurring in the case of like routing networks you can reroute packets",
    "start": "484400",
    "end": "491159"
  },
  {
    "text": "as you please I've got all kinds of Spidey senses going off right now but we'll get to that yeah I've seen like",
    "start": "491159",
    "end": "498120"
  },
  {
    "text": "pure ebpf based load balancing and that kind of stuff which I think is is really cool and really interesting and the",
    "start": "498120",
    "end": "504159"
  },
  {
    "text": "other kind of interesting thing about like the ebpf programs in and of themselves is like so you you write them",
    "start": "504159",
    "end": "511639"
  },
  {
    "text": "and kind of like essentially C but it's like a very it's kind of like a strip",
    "start": "511639",
    "end": "516800"
  },
  {
    "text": "down version of C so like instead of fighting like a typical C compiler you have to fight like the BTF verifier or",
    "start": "516800",
    "end": "523320"
  },
  {
    "text": "whatever which like complains like you can't have loops in your BPF programs",
    "start": "523320",
    "end": "528920"
  },
  {
    "text": "you have to be really careful with how much stack space you allocate because there's there stringent requirements",
    "start": "528920",
    "end": "534880"
  },
  {
    "text": "there because it has to be safe as it's running in the kernel even though it's sandbox the program still has to",
    "start": "534880",
    "end": "541160"
  },
  {
    "text": "terminate so you can't have like loops and things like that where the verifier can't verify that the program's actually",
    "start": "541160",
    "end": "547160"
  },
  {
    "text": "going to terminate and stuff so there's some like interesting things that you have to do in that aspect when you're",
    "start": "547160",
    "end": "552560"
  },
  {
    "text": "writing the programs to kind of get around some of these limitations are these things done with the permission of",
    "start": "552560",
    "end": "557680"
  },
  {
    "text": "the kernel like was this something that is explicitly allowed or is this something that's kind of being done to",
    "start": "557680",
    "end": "564120"
  },
  {
    "text": "the kernel well BPF definitely exists within the kernel it's a virtual machine",
    "start": "564120",
    "end": "569839"
  },
  {
    "text": "that's part of the Linux kernel it ships within everything in terms of loading",
    "start": "569839",
    "end": "575760"
  },
  {
    "text": "the actual programs and what those programs can do there there is a permissioning scheme behind it like you",
    "start": "575760",
    "end": "582240"
  },
  {
    "text": "have to have rout access or a particular capability in the process that's loading",
    "start": "582240",
    "end": "587519"
  },
  {
    "text": "the BPF program right so you can't just do this on any kind of to any kernel",
    "start": "587519",
    "end": "593320"
  },
  {
    "text": "this is a technology that is explicitly supported correct you couldn't do it on",
    "start": "593320",
    "end": "598560"
  },
  {
    "text": "Mac OS yeah it's specific to Linux and all Linux distributions are are shipping",
    "start": "598560",
    "end": "603920"
  },
  {
    "text": "with it there's also something that I I really can't speak intelligently about",
    "start": "603920",
    "end": "609040"
  },
  {
    "text": "but there is an effort within Microsoft to Port BPF to",
    "start": "609040",
    "end": "614800"
  },
  {
    "text": "Windows yeah I've actually heard a lot about that too but I don't use Windows to develop on so I don't I don't know",
    "start": "614800",
    "end": "621760"
  },
  {
    "text": "like the state of it but I thought that it was just cool because it's cool to see like some of the innovations that",
    "start": "621760",
    "end": "627560"
  },
  {
    "text": "come out of Linux kind of prop to other other places like I wish we",
    "start": "627560",
    "end": "632600"
  },
  {
    "text": "could do like more native like containerization stuff on Mac OS instead of having to like oh let's just real",
    "start": "632600",
    "end": "638639"
  },
  {
    "text": "quick install Linux VM and pretend that we're doing container stuff on Mac OS but we're really not I think it's cool",
    "start": "638639",
    "end": "645440"
  },
  {
    "text": "for Microsoft to if they actually are adopting that kind of stuff like in kernel instead of I don't know if it's",
    "start": "645440",
    "end": "651120"
  },
  {
    "text": "like actually properly in kernel or if they're also doing like behind the scenes like WSL real quick and we'll",
    "start": "651120",
    "end": "657920"
  },
  {
    "text": "just shoot all your e VPS stuff over there I do think it's uh user space",
    "start": "657920",
    "end": "663079"
  },
  {
    "text": "based right now but I don't want to mischaracterize it but I I think you are correct but I think it would be kind of",
    "start": "663079",
    "end": "669680"
  },
  {
    "text": "cool for like anti-che software to be able to ship if you're gaming on Windows",
    "start": "669680",
    "end": "675920"
  },
  {
    "text": "and the company that makes the game wants to prevent Hackers from cheating in the game to have be able to ship BPF",
    "start": "675920",
    "end": "683000"
  },
  {
    "text": "programs that detect new cheats that have been found in the wild I think that's a very cool of it it's like uh",
    "start": "683000",
    "end": "690880"
  },
  {
    "text": "what is it called punk Buster or whatever is like the is one of the like anti-s for like some of the big games",
    "start": "690880",
    "end": "696600"
  },
  {
    "text": "like punkbuster ebpf Edition yeah there you go so I'm trying to visualize sort",
    "start": "696600",
    "end": "702399"
  },
  {
    "text": "of the the concept right between user space and cral space and everything else so like and for those who really are",
    "start": "702399",
    "end": "707959"
  },
  {
    "text": "still trying to wrap their heads around this generally speaking when you and i r a program um say not for programing",
    "start": "707959",
    "end": "714279"
  },
  {
    "text": "language like go for example we're riding sort of those user space programs that when they need to do something",
    "start": "714279",
    "end": "721240"
  },
  {
    "text": "basically at sort of the operating system level they make a system call Say Hey I want to open a file right um so",
    "start": "721240",
    "end": "727680"
  },
  {
    "text": "for us the developers we're using you know the sort of the standard library and go saying hey can you can I please",
    "start": "727680",
    "end": "733760"
  },
  {
    "text": "open up this file because I want to read content or whatever it is so that's a system call that then gets handled and",
    "start": "733760",
    "end": "739000"
  },
  {
    "text": "basically all the sort of operating system level stuff gets done for us and then we get back that result but we're",
    "start": "739000",
    "end": "744160"
  },
  {
    "text": "still all that happens in user space right so what we're talking about here is actually the ability to write",
    "start": "744160",
    "end": "750360"
  },
  {
    "text": "programs that run in kernel space right so going that level basically deeper",
    "start": "750360",
    "end": "756600"
  },
  {
    "text": "right to actually listen and react to and potentially change what the actual",
    "start": "756600",
    "end": "762000"
  },
  {
    "text": "kernel is doing yeah precisely yeah so you get a lot of advantage to that like",
    "start": "762000",
    "end": "767639"
  },
  {
    "text": "um so let's take the example of of a system call where like I guess the flow of events is that your go program tries",
    "start": "767639",
    "end": "775600"
  },
  {
    "text": "to write to a file under the hood the go standard libraries using the right",
    "start": "775600",
    "end": "780880"
  },
  {
    "text": "system call leading up to the system call your go program puts whatever information it needs to in the correct",
    "start": "780880",
    "end": "786839"
  },
  {
    "text": "registers and then it executes a system call instruction and then the colonel",
    "start": "786839",
    "end": "792760"
  },
  {
    "text": "takes over executes the system call returns back to user space with hey we were able to write to that file or",
    "start": "792760",
    "end": "798680"
  },
  {
    "text": "whatnot in the ebpf world you can write an ebpf program that is triggered by",
    "start": "798680",
    "end": "804600"
  },
  {
    "text": "System calls so if you were to have an ebpf program that is triggered every",
    "start": "804600",
    "end": "809920"
  },
  {
    "text": "time the right system call is called so adding to that original flow of events",
    "start": "809920",
    "end": "815440"
  },
  {
    "text": "the go program sets up the system call it executes it right before it executes it the evf program runs it can look at",
    "start": "815440",
    "end": "822720"
  },
  {
    "text": "all the arguments that were passed to that system call it could do whatever it wants and then once it's finished the",
    "start": "822720",
    "end": "829920"
  },
  {
    "text": "system call executes then returns back to user space Etc and that's the BPF side is completely invisible to the",
    "start": "829920",
    "end": "836360"
  },
  {
    "text": "application that actually triggered it interesting so does it run as a kind of",
    "start": "836360",
    "end": "842279"
  },
  {
    "text": "background to the main things that are going on or is it a blocking code how does it actually run when it sees",
    "start": "842279",
    "end": "849360"
  },
  {
    "text": "particular callers happen so like in the in the case of like a probe attached to like a function or something like that",
    "start": "849360",
    "end": "855839"
  },
  {
    "text": "it's blocking so for that that moment of time like the execution of the the",
    "start": "855839",
    "end": "861199"
  },
  {
    "text": "program that that invoked or triggered the probe will be stopped so that the",
    "start": "861199",
    "end": "866480"
  },
  {
    "text": "ebpf program can do kind of any kind of inection or whatever that it needs which is also why like for the context of like",
    "start": "866480",
    "end": "873399"
  },
  {
    "text": "tracing this is kind of what got me interested in ebpf was the combination",
    "start": "873399",
    "end": "879120"
  },
  {
    "text": "of the two last subjects we were talking about which is like the overhead of system calls and just the overhead of",
    "start": "879120",
    "end": "886399"
  },
  {
    "text": "tracing in general so a similar thing would happen so the the reason why I got interested in it was because I wanted to",
    "start": "886399",
    "end": "892399"
  },
  {
    "text": "make delves the tracing back end more performant like have less overheads so",
    "start": "892399",
    "end": "898000"
  },
  {
    "text": "that maybe you could use it like in a production context if you wanted to I did a tweet a while back when I first",
    "start": "898000",
    "end": "904759"
  },
  {
    "text": "started working on it of like the overhead added so like I had a program that ran in like some odd number of",
    "start": "904759",
    "end": "910519"
  },
  {
    "text": "micros seconds and then with ebpf based tracing on top of it it was it went from",
    "start": "910519",
    "end": "916880"
  },
  {
    "text": "like I don't know maybe like 20 micros seconds to like 3 or 400 microsc or",
    "start": "916880",
    "end": "922040"
  },
  {
    "text": "something like that which sounds like a significant amount of overhead but like we're talking microseconds and then I I",
    "start": "922040",
    "end": "927480"
  },
  {
    "text": "did a I timed it using the like the P trce based tracing that delve had been using prior and it bumped up to like 2.3",
    "start": "927480",
    "end": "935399"
  },
  {
    "text": "seconds so you go from micros seconds to actual seconds which is like you can't have that kind of overhead if you're",
    "start": "935399",
    "end": "941519"
  },
  {
    "text": "tracing something in production so that was kind of what got me interested in it having these really like small targeted",
    "start": "941519",
    "end": "949040"
  },
  {
    "text": "programs that can be called as a result of something that don't do contact switching between kernel and user space",
    "start": "949040",
    "end": "955000"
  },
  {
    "text": "and stop the program for as little time as possible and and really get kind of",
    "start": "955000",
    "end": "960040"
  },
  {
    "text": "performant detailed but also ad hoc tracing the other kind of difficult thing was like making it adhawk so a lot",
    "start": "960040",
    "end": "967399"
  },
  {
    "text": "of times when people write ebpf programs they're very very targeted like you already know when you're writing the",
    "start": "967399",
    "end": "973319"
  },
  {
    "text": "function what corresponding function it's going to be attached to like what",
    "start": "973319",
    "end": "978440"
  },
  {
    "text": "kernel function or whatever like you you generally already know or or whatever so you kind of know the arguments to expect",
    "start": "978440",
    "end": "984399"
  },
  {
    "text": "and things like that but in the case of Delvin what I was doing with ebpf I was kind of abusing it a little bit to try",
    "start": "984399",
    "end": "990519"
  },
  {
    "text": "to do like just I want to attach this probe to a completely arbitrary function where I don't know how many arguments or",
    "start": "990519",
    "end": "997040"
  },
  {
    "text": "return arguments it has I I know nothing about it but I want to get all the information out of it how do I do that and so that opened up a lot of questions",
    "start": "997040",
    "end": "1003959"
  },
  {
    "text": "of how to write a generic ebpf program and how to communicate between that",
    "start": "1003959",
    "end": "1010240"
  },
  {
    "text": "program and delve right like communicate between kernel space and user space in a way that also wouldn't introduce back",
    "start": "1010240",
    "end": "1017120"
  },
  {
    "text": "the slowness that I was trying to get get rid of you mentioned earlier um basically you're using sort of a a",
    "start": "1017120",
    "end": "1023399"
  },
  {
    "text": "constrained C right there's certain things that are not permitted you know obviously for performance reasons and",
    "start": "1023399",
    "end": "1028798"
  },
  {
    "text": "and other things so what's the development workflow for this like are you if I want to use vpf do I have do",
    "start": "1028799",
    "end": "1034600"
  },
  {
    "text": "you see or do we have rappers sdks like what's the development workflow like so",
    "start": "1034600",
    "end": "1039880"
  },
  {
    "text": "the ebpf program itself so I I I think from a high level it's well not just to",
    "start": "1039880",
    "end": "1045918"
  },
  {
    "text": "visualize it this this how it is where you have two sides you have the ebpf programs themselves and then you have",
    "start": "1045919",
    "end": "1052400"
  },
  {
    "text": "the user space program that loads them into the kernel and listens for feedback and essentially the agent that interacts",
    "start": "1052400",
    "end": "1060160"
  },
  {
    "text": "with the BPF programs themselves so on the BPF side I only have experience with",
    "start": "1060160",
    "end": "1066640"
  },
  {
    "text": "with doing it in C I think that there was talk about a library that where you can write the actual BPF programs in",
    "start": "1066640",
    "end": "1073520"
  },
  {
    "text": "Rust because the back end to it is llvm llvm kind of control controls the",
    "start": "1073520",
    "end": "1079559"
  },
  {
    "text": "specification for the ebpf bite code but similar to the windows BPF I I really",
    "start": "1079559",
    "end": "1086200"
  },
  {
    "text": "don't know anything about it and don't want to talk about it plus rust is like the competing language so we can't talk",
    "start": "1086200",
    "end": "1092240"
  },
  {
    "text": "about it so yeah so you write uh the BPF program in C so for the most part you're",
    "start": "1092240",
    "end": "1099240"
  },
  {
    "text": "just stringing together these helper functions that are defined in the BPF",
    "start": "1099240",
    "end": "1104480"
  },
  {
    "text": "world like their BPF helper functions that are defined in header files that that you have to use so they're really",
    "start": "1104480",
    "end": "1110799"
  },
  {
    "text": "not not too complex if you're a go developer you it wouldn't take long for",
    "start": "1110799",
    "end": "1115840"
  },
  {
    "text": "you to to pick that up especially looking at examples and there's a lot of guides for getting into it and on the",
    "start": "1115840",
    "end": "1122559"
  },
  {
    "text": "user space side you can write a program in there's there's even more options",
    "start": "1122559",
    "end": "1128400"
  },
  {
    "text": "there so there's a c standard library for for doing that that's called lid BPF",
    "start": "1128400",
    "end": "1134559"
  },
  {
    "text": "then there's a project that you may have heard of called BCC you shouldn't use that though but that essentially lets",
    "start": "1134559",
    "end": "1140720"
  },
  {
    "text": "you use like either python or there's a Go version of it there's even an old",
    "start": "1140720",
    "end": "1146280"
  },
  {
    "text": "unmaintained Lua version rust and and certainly you can do go so with go",
    "start": "1146280",
    "end": "1152640"
  },
  {
    "text": "there's also a bunch of different libraries that you can use on the user space side I'm partial to one called lib",
    "start": "1152640",
    "end": "1159880"
  },
  {
    "text": "bpfo which is a wrapper around Li BPF the one I just mentioned there's also a",
    "start": "1159880",
    "end": "1166240"
  },
  {
    "text": "standard or rather a uh go native implementation that doesn't wrap around",
    "start": "1166240",
    "end": "1171919"
  },
  {
    "text": "Li BPF that's part of the cium project but I maintain Li BPF go and use it for",
    "start": "1171919",
    "end": "1179679"
  },
  {
    "text": "projects that I also help maintain so I'm partial to that slightly biased yeah",
    "start": "1179679",
    "end": "1185240"
  },
  {
    "text": "yeah I'll I'll be transparent about that so obviously you mentioned that this is sort of a Linux only kind of thing aside",
    "start": "1185240",
    "end": "1192320"
  },
  {
    "text": "from sort of whatever is in progress for Windows so if I was on a Mac and I needed to write these kinds of program",
    "start": "1192320",
    "end": "1198320"
  },
  {
    "text": "Rhymes I'd have to use some sort of virtual machine like to be able to test and run these things yeah yeah for now I",
    "start": "1198320",
    "end": "1204960"
  },
  {
    "text": "remember uh there's like um like drace and stuff from back in the day on like for Darwin kernels and stuff like that",
    "start": "1204960",
    "end": "1212039"
  },
  {
    "text": "yeah Mac OS has a uh I don't remember the exact name but some type of security framework with uh a recent version of",
    "start": "1212039",
    "end": "1219520"
  },
  {
    "text": "Mac OS that is comparable but there's no interoperability [Music]",
    "start": "1219520",
    "end": "1226030"
  },
  {
    "text": "[Applause] there",
    "start": "1226030",
    "end": "1230159"
  },
  {
    "text": "this episode is brought to you by our friends at incident iio every software team on the planet has to manage",
    "start": "1232679",
    "end": "1238600"
  },
  {
    "text": "incidents and a very large percentage of those teams are using slack to communicate that includes us with",
    "start": "1238600",
    "end": "1244480"
  },
  {
    "text": "incident IO you can create manage and resolve incidents directly inside slack here's how it works head to incident.",
    "start": "1244480",
    "end": "1251840"
  },
  {
    "text": "and sign it for free then add it to your slack from there you have a brand new instance Channel where all instance get",
    "start": "1251840",
    "end": "1257880"
  },
  {
    "text": "announced anounced use a/ incident command to create and manage incidents this command let you share updates",
    "start": "1257880",
    "end": "1263559"
  },
  {
    "text": "assign roles set important links and more all without ever leaving the incident Channel each incident gets",
    "start": "1263559",
    "end": "1269600"
  },
  {
    "text": "their own slack Channel plus a highes dashboard at incident. with the entire",
    "start": "1269600",
    "end": "1274720"
  },
  {
    "text": "timeline from report to resolution get everyone on the same page from the moment they join the incident and help stakeholders stay in the loop add",
    "start": "1274720",
    "end": "1281279"
  },
  {
    "text": "incident I your slack today and prove yourself and your team that they have everything you need to streamline your Incident Management learn more and sign",
    "start": "1281279",
    "end": "1288240"
  },
  {
    "text": "free at incident. no credit card required again",
    "start": "1288240",
    "end": "1293820"
  },
  {
    "text": "[Music]",
    "start": "1293820",
    "end": "1305679"
  },
  {
    "text": "incident. let's talk a little bit about use cases I'm interested in sort of understanding sort of really where The",
    "start": "1305679",
    "end": "1310840"
  },
  {
    "text": "Sweet Spot is for evf programs like we've talked about sort of observability and sort of knowing when certain things",
    "start": "1310840",
    "end": "1316799"
  },
  {
    "text": "happen and and der mentioned that this is sort of a very targeted kind of tool right so you already know what what system calls you want to sort of uh um",
    "start": "1316799",
    "end": "1324320"
  },
  {
    "text": "get callbacks about right other than cases where you you're trying to get everything right which I'm assuming is a",
    "start": "1324320",
    "end": "1330200"
  },
  {
    "text": "very different approach to writing these kinds of programs when you when as opposed to having something very targeted you're looking for like you",
    "start": "1330200",
    "end": "1336000"
  },
  {
    "text": "know a file open or something like that right so I'm interested in sort of understanding the use cases a bit more so I've heard things like observability",
    "start": "1336000",
    "end": "1343080"
  },
  {
    "text": "um which seem like like a good sort of a use case for this I've heard troubleshooting like networking I've",
    "start": "1343080",
    "end": "1349320"
  },
  {
    "text": "heard um people writing up loan balancers which I'm like really interested in understanding how that works what's the realm of problems that",
    "start": "1349320",
    "end": "1357039"
  },
  {
    "text": "you sort of look to ebpf to sort of help you and what kind of problems are you solving sure so the use case that I use",
    "start": "1357039",
    "end": "1364159"
  },
  {
    "text": "it for most is security so I help maintain this project called Tracy that",
    "start": "1364159",
    "end": "1370760"
  },
  {
    "text": "hooks on to really uh just like hundreds of different events and tries to correlate all these things that are",
    "start": "1370760",
    "end": "1376720"
  },
  {
    "text": "happening in the kernel to to determine if there is uh some type of intrusion some type of malware and allows you to",
    "start": "1376720",
    "end": "1383520"
  },
  {
    "text": "apply policy on top of that do cool things like when programs uh or",
    "start": "1383520",
    "end": "1388880"
  },
  {
    "text": "processes are are executed try and capture the binary that was actually run for later inspection there's a whole lot",
    "start": "1388880",
    "end": "1395799"
  },
  {
    "text": "of things that you could do security wise observability you know you can use it in production uh BPF that is you",
    "start": "1395799",
    "end": "1402200"
  },
  {
    "text": "could use in production for determining the health of your web services so you",
    "start": "1402200",
    "end": "1408679"
  },
  {
    "text": "could attach to your network sockets or some type of networking mechanism",
    "start": "1408679",
    "end": "1413799"
  },
  {
    "text": "there's multiple that BPF works with to determine how many packets are being dropped or where are packets being",
    "start": "1413799",
    "end": "1420400"
  },
  {
    "text": "routed get a lot of information that way that level of observability that we're talking about here this is something",
    "start": "1420400",
    "end": "1426400"
  },
  {
    "text": "slightly different from these days more common usage of the term right observability and things like that so",
    "start": "1426400",
    "end": "1432159"
  },
  {
    "text": "when we think of observability we're thinking okay I need a dashboard I need like a like a honeycomb or a data dog whatever it is right I'm watching my",
    "start": "1432159",
    "end": "1438520"
  },
  {
    "text": "services are they up are they down like what's the latency that kind of thing so what we're talking about here is like a",
    "start": "1438520",
    "end": "1443679"
  },
  {
    "text": "different kind of Observer like a much lower level yes yeah certainly like you have access to Raw memory in most of",
    "start": "1443679",
    "end": "1450840"
  },
  {
    "text": "these cases or all of these cases really like you could see the full contents of",
    "start": "1450840",
    "end": "1456200"
  },
  {
    "text": "the packet or full contents of of memory from a a user space program but you",
    "start": "1456200",
    "end": "1462520"
  },
  {
    "text": "still have that even if you're not inspecting memory you could still just have these BPF programs trigger and just",
    "start": "1462520",
    "end": "1468399"
  },
  {
    "text": "say hey this happened in the same way as you know if you were to add a line of code to your go program and then",
    "start": "1468399",
    "end": "1475399"
  },
  {
    "text": "recompile it and run it you know like let's say a print line you could instead of recompiling or editing source code",
    "start": "1475399",
    "end": "1482600"
  },
  {
    "text": "and recompiling it you can add a a BPF program attached to a certain space in",
    "start": "1482600",
    "end": "1487640"
  },
  {
    "text": "memory and find out when like that certain line executes and that's what",
    "start": "1487640",
    "end": "1493080"
  },
  {
    "text": "delve does yeah so like do we have to write all of these things out our El or",
    "start": "1493080",
    "end": "1498799"
  },
  {
    "text": "are there not already like some tools around that we could use like are there any tools that do like monitoring memory",
    "start": "1498799",
    "end": "1505520"
  },
  {
    "text": "allocation say so and collecting that in Prometheus so we can put that in a dashboard or something are there",
    "start": "1505520",
    "end": "1511640"
  },
  {
    "text": "existing tools that are springing up around this is there like an ecosystem yeah I know that that like there's a",
    "start": "1511640",
    "end": "1517640"
  },
  {
    "text": "range like from the cis's perspective like Brendan Greg who I know Grant",
    "start": "1517640",
    "end": "1522880"
  },
  {
    "text": "mentioned earlier he's like a from Netflix like devops extraordinaire",
    "start": "1522880",
    "end": "1528440"
  },
  {
    "text": "he has like a a whole Suite of like EPF based tools and scripts and kind of on",
    "start": "1528440",
    "end": "1534159"
  },
  {
    "text": "liners that you can use to like inspect your system I think he has I can't remember if this is explicitly wrapped",
    "start": "1534159",
    "end": "1539960"
  },
  {
    "text": "up into it but he has a great blog post of like what to do within like the first five minutes or something like that of",
    "start": "1539960",
    "end": "1546360"
  },
  {
    "text": "like debugging a production issue and it goes through all of these scripts and tools and stuff that you can use and a lot of them are ebpf based but I think",
    "start": "1546360",
    "end": "1554080"
  },
  {
    "text": "like the question that you were kind of alluding to was like the productization of this and like feeding this into like",
    "start": "1554080",
    "end": "1559240"
  },
  {
    "text": "metrics Gathering systems and things like that and I know there's a lot of efforts in that space right now yeah",
    "start": "1559240",
    "end": "1565399"
  },
  {
    "text": "it's interesting so when you talk about running these things in prod is this something that you have to do ahead of",
    "start": "1565399",
    "end": "1571360"
  },
  {
    "text": "time you have to plan enable it build things for it or can you just go in and",
    "start": "1571360",
    "end": "1576440"
  },
  {
    "text": "attach them to running processes I mean do you literally because it's in the kernel is it sort of almost underneath",
    "start": "1576440",
    "end": "1581880"
  },
  {
    "text": "all the processes yeah I think like the most of the prep work is like ensuring",
    "start": "1581880",
    "end": "1587000"
  },
  {
    "text": "that you have a current that can load these programs I think like as long as you're running on any kind of modern kernel you're going to be fine but in",
    "start": "1587000",
    "end": "1594240"
  },
  {
    "text": "terms of like like you don't need any coordination from like the user space program or or anything like that really",
    "start": "1594240",
    "end": "1600120"
  },
  {
    "text": "all you need to do is coordinate with the colonel and get whatever program that you're running that is trying to do",
    "start": "1600120",
    "end": "1606279"
  },
  {
    "text": "the inspection onto that production server to to load the ebpf programs or whatever but there's no coordination",
    "start": "1606279",
    "end": "1612880"
  },
  {
    "text": "needed with with a program it it's like from the perspective of like delve or something like that similar to like a",
    "start": "1612880",
    "end": "1619279"
  },
  {
    "text": "normal kind of debug session where we just kind of asked the colonel for permission to do things in the user",
    "start": "1619279",
    "end": "1624480"
  },
  {
    "text": "Space Program whatever program we're inspecting it's just kind of happening",
    "start": "1624480",
    "end": "1629919"
  },
  {
    "text": "to it but it doesn't really get to decide yeah that's interesting then so that is quite useful for particularly",
    "start": "1629919",
    "end": "1636279"
  },
  {
    "text": "debugging but any sort of inspection on things you could almost not be running anything like it's not like you have to",
    "start": "1636279",
    "end": "1642799"
  },
  {
    "text": "run extra things to enable it so I can see why a little collection of on liners",
    "start": "1642799",
    "end": "1648919"
  },
  {
    "text": "has built up actually because that is quite I suppose quite useful to have those in your toolbox yeah very",
    "start": "1648919",
    "end": "1655760"
  },
  {
    "text": "interesting we'll try and find that and put a link to it in the show notes that sounds very interesting and at Le at",
    "start": "1655760",
    "end": "1661799"
  },
  {
    "text": "least we'll be able to see some real examples of what abpf programs look like yeah I would even add on uh and relating",
    "start": "1661799",
    "end": "1668600"
  },
  {
    "text": "to the last question about you know what the ecosystem is like I would say that you really don't have to you know if",
    "start": "1668600",
    "end": "1676240"
  },
  {
    "text": "this is a technology that excites you or I should say having this level of visibility excites you but you're",
    "start": "1676240",
    "end": "1682600"
  },
  {
    "text": "perhaps intimidated or don't even want to bother writing this evf code there is",
    "start": "1682600",
    "end": "1688039"
  },
  {
    "text": "certainly like a developing maturing ecosystem around this like there's a lot of products that are being developed for",
    "start": "1688039",
    "end": "1694399"
  },
  {
    "text": "gaining that kind of visibility and then follow up to that is that yeah like you don't have to recompile your code at all",
    "start": "1694399",
    "end": "1701799"
  },
  {
    "text": "which is good for like I think a lot of the use cases for ebpf applies to",
    "start": "1701799",
    "end": "1707480"
  },
  {
    "text": "perhaps like srvs or or security folks uh and maybe not let's say if you're if",
    "start": "1707480",
    "end": "1712960"
  },
  {
    "text": "you're like a back-end web developer you might not be as interested in writing the ebpf code but certainly like if",
    "start": "1712960",
    "end": "1719600"
  },
  {
    "text": "you're an SRV and you have this running service that you're trying to figure out what's going on being able to write a",
    "start": "1719600",
    "end": "1726120"
  },
  {
    "text": "BPF program that inspects different areas of memory on the Fly and being able to iterate on the BPF program",
    "start": "1726120",
    "end": "1732760"
  },
  {
    "text": "without restarting or service is something that's really valuable and something that you can get a lot of",
    "start": "1732760",
    "end": "1738240"
  },
  {
    "text": "advantage of yeah what about kind of higher level slightly than that what about like could you you implement like",
    "start": "1738240",
    "end": "1745840"
  },
  {
    "text": "a file Watcher using this if you wanted if you had to say something was going to Auto reload if you were a web developer",
    "start": "1745840",
    "end": "1752440"
  },
  {
    "text": "could you write an ebpf program that would notice when files have changed in a certain path and then do take some",
    "start": "1752440",
    "end": "1758320"
  },
  {
    "text": "action alert you somehow so you can refresh yeah absolutely and I think Derek uh hit the nail on the head that",
    "start": "1758320",
    "end": "1765760"
  },
  {
    "text": "yeah Brandon Greg has a lot of a lot of tools for doing like very specific things really well like just I think",
    "start": "1765760",
    "end": "1772480"
  },
  {
    "text": "there's a tool called open Snoop that will just tell you every time you just run it and it'll tell you every time a",
    "start": "1772480",
    "end": "1778039"
  },
  {
    "text": "file is opened and get some information about it m and perhaps more robust I guess again plugging the product I work",
    "start": "1778039",
    "end": "1784600"
  },
  {
    "text": "on but you know I really believe on it I believe in it uh is that Tracy you know you could just run it and get all this",
    "start": "1784600",
    "end": "1790480"
  },
  {
    "text": "information that you want and filter different events without ever having to write ebpf code and that's Tracy t r a c",
    "start": "1790480",
    "end": "1798600"
  },
  {
    "text": "e isn't it exactly yeah it's uh under Aqua Securities GitHub so as a side note",
    "start": "1798600",
    "end": "1803640"
  },
  {
    "text": "you work with Liz Liz rice right I used to she left like right after I joined",
    "start": "1803640",
    "end": "1808960"
  },
  {
    "text": "unfortunately I was going to ask you what what's it like to work with a with a rockstar oh I use a a touchy term with",
    "start": "1808960",
    "end": "1815960"
  },
  {
    "text": "a well-known and respected member of our community who plays Rock KO",
    "start": "1815960",
    "end": "1822880"
  },
  {
    "text": "rock it was fantastic while it lasted I I will say that but I still interact with her Plenty uh in the community she",
    "start": "1822880",
    "end": "1829600"
  },
  {
    "text": "does a lot for the ebpf community so still uh get to interact with her did",
    "start": "1829600",
    "end": "1835039"
  },
  {
    "text": "you say that she left just after you or just before uh just after I scared her",
    "start": "1835039",
    "end": "1840159"
  },
  {
    "text": "away maybe suspicious well it's it's an option is it's possible isn't it that's what I was thinking Johnny you had",
    "start": "1840159",
    "end": "1846039"
  },
  {
    "text": "mentioned being curious about like the ebpf based load balancing stuff that I had brought up earlier I know Liz Rice",
    "start": "1846039",
    "end": "1853440"
  },
  {
    "text": "gave a really good talk about kind of how to implement of those so if you're curious I would definitely recommend",
    "start": "1853440",
    "end": "1860080"
  },
  {
    "text": "seeking out her talk on the subject because it's really really good we'll do thank you yeah cool we'll also find it",
    "start": "1860080",
    "end": "1865960"
  },
  {
    "text": "and put it in the show notes there is a a great Community around ebpf there's a lot to learn there's a lot to be",
    "start": "1865960",
    "end": "1871559"
  },
  {
    "text": "confused about the ecosystem is really evolving and becoming a lot more accessible but there's a lot of people",
    "start": "1871559",
    "end": "1877679"
  },
  {
    "text": "who are excited about it who are willing to help you know if you go to ebpf doio",
    "start": "1877679",
    "end": "1882720"
  },
  {
    "text": "there's a a slack channel that you can join that is very helpful so a lot of",
    "start": "1882720",
    "end": "1887799"
  },
  {
    "text": "talks coming out Derk and I are speaking at a conference coming up soon there's a lot of material to to learn from yeah",
    "start": "1887799",
    "end": "1894159"
  },
  {
    "text": "and where is the communities it mainly hang out in that slack Channel then where else does this ebpf community",
    "start": "1894159",
    "end": "1900279"
  },
  {
    "text": "exist for anyone that wants to sort of get involved I think a lot of like the ebpf space and the technology in general",
    "start": "1900279",
    "end": "1907159"
  },
  {
    "text": "is really big in like the cloud native like cncf land like Cloud native like kubernetes type ecosystem like that's I",
    "start": "1907159",
    "end": "1915000"
  },
  {
    "text": "think where a lot of the the community hangs out and then it kind of dips into like programming language communities a",
    "start": "1915000",
    "end": "1921039"
  },
  {
    "text": "little bit for people who like want to implement things and stuff like that but yeah a lot of the interest in a lot of",
    "start": "1921039",
    "end": "1927559"
  },
  {
    "text": "the communities like in Cloud native land much of the sort of the body of examples I've seen out there in my short",
    "start": "1927559",
    "end": "1936120"
  },
  {
    "text": "looking into ebpf seems to be around sort of um BCC and like python land or",
    "start": "1936120",
    "end": "1941760"
  },
  {
    "text": "something I'm wondering and I've seen examples of that I'm wondering when I saw that I was like okay so we're",
    "start": "1941760",
    "end": "1948519"
  },
  {
    "text": "writing some python here python there in the middle somewhere we've got this giant string of",
    "start": "1948519",
    "end": "1953770"
  },
  {
    "text": "[Music] c and we can see sort of where the hooks are but you know it's like okay which",
    "start": "1953770",
    "end": "1960039"
  },
  {
    "text": "kind of hws back to the the developer experience I was talking about earlier I'm wondering what is it like to write",
    "start": "1960039",
    "end": "1967200"
  },
  {
    "text": "these kinds of programs and go what libraries is sort of your goto you know in the go ecosystem for sort of",
    "start": "1967200",
    "end": "1973559"
  },
  {
    "text": "interacting with and writing these kinds of programs I'll steal this one for a second I'll also evangelize the lib ppf",
    "start": "1973559",
    "end": "1979960"
  },
  {
    "text": "go framework because that's what I'm using in delve to implement the ebpf",
    "start": "1979960",
    "end": "1985679"
  },
  {
    "text": "based tracing back end so there's a lot of good like tooling and stuff like that for for writing and loading ebpf",
    "start": "1985679",
    "end": "1993600"
  },
  {
    "text": "programs and using them against go there is some trickiness with like certain",
    "start": "1993600",
    "end": "1999480"
  },
  {
    "text": "features of ebpf and combining that with go to Circle back since this is go Time",
    "start": "1999480",
    "end": "2005080"
  },
  {
    "text": "Podcast uh so like for example and not to like hijack the the question or",
    "start": "2005080",
    "end": "2011720"
  },
  {
    "text": "whatever but just some of the trickiness that you might run into if you're using like probes or whatever with a go",
    "start": "2011720",
    "end": "2017639"
  },
  {
    "text": "program is there's two kinds of probes there's U probes well of like user space probes there's U probes and and Ur rep",
    "start": "2017639",
    "end": "2025080"
  },
  {
    "text": "probes so U probes you can attach to like the entry point of a function and then U probes attached to the return of",
    "start": "2025080",
    "end": "2032799"
  },
  {
    "text": "the function so you can kind of see like a function entry and then when when the function returns you can kind of hook into both of those",
    "start": "2032799",
    "end": "2039039"
  },
  {
    "text": "spots but this gets really tricky with go because the way that you rep probes work is they actually modify some of the",
    "start": "2039039",
    "end": "2045960"
  },
  {
    "text": "data and some of the addresses on like a go routine stack or like a thread stack",
    "start": "2045960",
    "end": "2051040"
  },
  {
    "text": "so if you're not familiar go routines start with like very very small stacks and they get kind of grown over time and",
    "start": "2051040",
    "end": "2057520"
  },
  {
    "text": "as part of that growing the go runtime needs to kind of look through the stack and look through what pointers are there",
    "start": "2057520",
    "end": "2062919"
  },
  {
    "text": "and move them and do all kinds of updating and stuff like that so if you're not careful with like you rep",
    "start": "2062919",
    "end": "2068358"
  },
  {
    "text": "probes you can blow up a go program because when it tries to copy the stack it's going to look through stuff and see",
    "start": "2068359",
    "end": "2074158"
  },
  {
    "text": "an address that it has no idea about and it'll just Panic so in delve we had to do some like really kind of tricky stuff",
    "start": "2074159",
    "end": "2080440"
  },
  {
    "text": "to like use P Trace to like see when the go run run time was going to copy a",
    "start": "2080440",
    "end": "2085679"
  },
  {
    "text": "stack and then like detach a rep probe let it do its thing and then reattach it",
    "start": "2085679",
    "end": "2091638"
  },
  {
    "text": "so there's like a little bit of handholding there when it comes to the go run time like so there's some kind of weirdness and and wonkiness for like",
    "start": "2091639",
    "end": "2098040"
  },
  {
    "text": "languages that have runtimes or like self- introspective languages that could be weird with ett probes and and doing",
    "start": "2098040",
    "end": "2104440"
  },
  {
    "text": "this kind of low-level probing that you might need to be aware of if you're like experimenting with this kind of stuff",
    "start": "2104440",
    "end": "2110520"
  },
  {
    "text": "yeah that's that would be an unusual Panic to encounter I'm sure so if you do",
    "start": "2110520",
    "end": "2115880"
  },
  {
    "text": "have say you've got a little ebpf program that's going to give you it's going to somehow emit some interesting",
    "start": "2115880",
    "end": "2121560"
  },
  {
    "text": "information whatever that is let's say just literally counting like allocations or something like that",
    "start": "2121560",
    "end": "2127480"
  },
  {
    "text": "then how do you get that information out where do you store it in the first place like does the ebpf program have any",
    "start": "2127480",
    "end": "2134160"
  },
  {
    "text": "memory and how would the go program get that information sure so yeah perhaps",
    "start": "2134160",
    "end": "2139960"
  },
  {
    "text": "the the thing that we've missed when when talking about BPF programs is like what are the things the BPF program can",
    "start": "2139960",
    "end": "2146359"
  },
  {
    "text": "actually do so one of the main things that BPF programs are interacting with",
    "start": "2146359",
    "end": "2151760"
  },
  {
    "text": "are are various forms of maps the same way that you have a a map in go you have",
    "start": "2151760",
    "end": "2157000"
  },
  {
    "text": "various different types of maps that you can use to store information and you",
    "start": "2157000",
    "end": "2162160"
  },
  {
    "text": "could have a map that is shared between user space and and kernel space or the",
    "start": "2162160",
    "end": "2167680"
  },
  {
    "text": "BPF program itself or multiple BPF programs sharing this map in memory so",
    "start": "2167680",
    "end": "2175079"
  },
  {
    "text": "you could have something like a ring buffer that lets you you know let's say",
    "start": "2175079",
    "end": "2180119"
  },
  {
    "text": "if you have a simple BPF program that is triggered every time a certain function",
    "start": "2180119",
    "end": "2185160"
  },
  {
    "text": "is called or let's say a system call every time a system call is triggered in that BPF program you can just have a",
    "start": "2185160",
    "end": "2192280"
  },
  {
    "text": "little message that says hey the system call was was triggered put that in let's",
    "start": "2192280",
    "end": "2197480"
  },
  {
    "text": "say a string and send it to user space using this ring buffer and then on the user space side you just have a go",
    "start": "2197480",
    "end": "2204200"
  },
  {
    "text": "routine that is picking picking up these events and printing them to screen so you have uh yeah these buffers these",
    "start": "2204200",
    "end": "2210720"
  },
  {
    "text": "maps that you can use to share memory between user space and share memory between different DPF programs so do you",
    "start": "2210720",
    "end": "2218280"
  },
  {
    "text": "literally get a channel interface then in the go side where you can for each over or for range over a the channel to",
    "start": "2218280",
    "end": "2225960"
  },
  {
    "text": "just read this stuff so I I'll say yes uh but it depends on the library that",
    "start": "2225960",
    "end": "2231480"
  },
  {
    "text": "you're using so the the actual underlying primitive is is a different interface but in the uh case of Li BPF",
    "start": "2231480",
    "end": "2239280"
  },
  {
    "text": "go you do have a channel so you could really interact with it in the same way that you would uh like any other go",
    "start": "2239280",
    "end": "2244920"
  },
  {
    "text": "program does that include sending stuff as well sending is a little bit different because you're you're updating",
    "start": "2244920",
    "end": "2252480"
  },
  {
    "text": "there is an interface for it or an API for it for updating values in in one of these shared Maps but the ring buffer is",
    "start": "2252480",
    "end": "2259200"
  },
  {
    "text": "more for sending from BPF up to user space I see so these Maps then they are",
    "start": "2259200",
    "end": "2265319"
  },
  {
    "text": "literally like objects they are key value pairs basically and does the konel already have did it already have that",
    "start": "2265319",
    "end": "2272240"
  },
  {
    "text": "concept is that already how it deals with things or is that something that ebpf models without going into too much",
    "start": "2272240",
    "end": "2278760"
  },
  {
    "text": "detail about the different various different features because there's quite a lot that you know I certainly don't",
    "start": "2278760",
    "end": "2284240"
  },
  {
    "text": "know about ebpf like the concept of having this visibility into the kernel",
    "start": "2284240",
    "end": "2289720"
  },
  {
    "text": "is not new but it makes things a lot easier so before something that you",
    "start": "2289720",
    "end": "2295440"
  },
  {
    "text": "might have written a kernel module to do something that uh doesn't have as many safety guarantees and requires you to",
    "start": "2295440",
    "end": "2303480"
  },
  {
    "text": "restart or even sometimes recompile your Linux kernel and reload it and restart",
    "start": "2303480",
    "end": "2308640"
  },
  {
    "text": "and it takes forever BPF it does a lot faster a lot safer in a much more",
    "start": "2308640",
    "end": "2314040"
  },
  {
    "text": "accessible way yeah but it get it does get quite exciting when you consider as a go programmer being able to just have",
    "start": "2314040",
    "end": "2320839"
  },
  {
    "text": "a channel where you're getting like very detailed information about what's going",
    "start": "2320839",
    "end": "2327440"
  },
  {
    "text": "on in a system like they probably like even just that mechanism alone probably",
    "start": "2327440",
    "end": "2333720"
  },
  {
    "text": "is enough to kind of spark a bit of innovation I would have thought in the go Community because who knows what you",
    "start": "2333720",
    "end": "2339280"
  },
  {
    "text": "could build I mean well a file Watcher was one thing that I thought of there but I bet there's loads of things you can do if if only you could get an",
    "start": "2339280",
    "end": "2346280"
  },
  {
    "text": "insight into what's really going on in the kernel the possibilities are",
    "start": "2346280",
    "end": "2352440"
  },
  {
    "text": "endless yeah getting quite excited about it we've heard of um lib BPF go quite",
    "start": "2352520",
    "end": "2358960"
  },
  {
    "text": "thoroughly we'll definitely link to that and I was looking at the repo and it it does look like a a nice API it's",
    "start": "2358960",
    "end": "2365280"
  },
  {
    "text": "interesting using this even using this could I end up in that situation we talked about earlier where I'm getting",
    "start": "2365280",
    "end": "2371400"
  },
  {
    "text": "panicked because should I avoid go routines or something if I'm going to write code like this probably the the",
    "start": "2371400",
    "end": "2377880"
  },
  {
    "text": "only thing that I would avoid if you're going to do anything with ebpf and go is",
    "start": "2377880",
    "end": "2383000"
  },
  {
    "text": "avoid you rep probes unless you really really know what you're doing because it",
    "start": "2383000",
    "end": "2388040"
  },
  {
    "text": "will Almost 100% of the time crash your program you you the only way to really",
    "start": "2388040",
    "end": "2393560"
  },
  {
    "text": "make it work is to do this weird thing that we're doing in that's kind of like a gnarly little hack",
    "start": "2393560",
    "end": "2398880"
  },
  {
    "text": "could that be put into a package could that little hack be solved once it's",
    "start": "2398880",
    "end": "2404280"
  },
  {
    "text": "possible I mean it's it's solved right now in a way on a pending poll request in Del there's a lot that goes into",
    "start": "2404280",
    "end": "2411480"
  },
  {
    "text": "implementing this workaround it's some knowledge of dwarf which is like debug info that goes into binaries knowled",
    "start": "2411480",
    "end": "2418480"
  },
  {
    "text": "like using p trce and having permission to use p trce on top of ebpf there's a",
    "start": "2418480",
    "end": "2424079"
  },
  {
    "text": "few kind of things that are stacked that are like esoteric and non-standard for",
    "start": "2424079",
    "end": "2429560"
  },
  {
    "text": "like a a typical go programming Adventure so there's some dragons there for sure but yeah I I would say that",
    "start": "2429560",
    "end": "2437319"
  },
  {
    "text": "everything else is pretty safe to use with go but you rep probes are are going to blow things up and what would they be",
    "start": "2437319",
    "end": "2442720"
  },
  {
    "text": "used for capturing return returns from functions return values yeah yeah yeah I",
    "start": "2442720",
    "end": "2448640"
  },
  {
    "text": "see but so if you're reading if you if it's one way data use something like a ring buffer or something yeah from",
    "start": "2448640",
    "end": "2455040"
  },
  {
    "text": "within like a program so like the the U probe will will fire and start executing",
    "start": "2455040",
    "end": "2462359"
  },
  {
    "text": "your ebpf program and then your ebpf program can use like a ring buffer or a map or something like that to",
    "start": "2462359",
    "end": "2468119"
  },
  {
    "text": "communicate back with user space delve uses both so it kind of uses maps to communicate from user space to the ebpf",
    "start": "2468119",
    "end": "2476760"
  },
  {
    "text": "program and then it uses ring buffers for the ebpf program to send data back back out to Del yeah see it's really",
    "start": "2476760",
    "end": "2484359"
  },
  {
    "text": "interesting when when I think of like delve I see that as a very sort of lowlevel tool because I work on like",
    "start": "2484359",
    "end": "2492960"
  },
  {
    "text": "bigger systems I they're the sort of systems that I think of so but it's always interesting to me when I zoom in",
    "start": "2492960",
    "end": "2499599"
  },
  {
    "text": "down you get these same kinds of layers there's the same often more complicated",
    "start": "2499599",
    "end": "2504800"
  },
  {
    "text": "sort of little architectures around and I always find that to be quite fascinating really sample is not easy",
    "start": "2504800",
    "end": "2510839"
  },
  {
    "text": "man yeah absolutely",
    "start": "2510839",
    "end": "2518180"
  },
  {
    "text": "[Music] what's going on Gophers this episode is",
    "start": "2518180",
    "end": "2523640"
  },
  {
    "text": "brought to you by equinex metal if you want the choice and control of Hardware with low overhead and the developer",
    "start": "2523640",
    "end": "2530040"
  },
  {
    "text": "experience of the cloud you need to check out equinix metal deploy in minutes across 18 global locations from",
    "start": "2530040",
    "end": "2536200"
  },
  {
    "text": "Silicon Valley to Sydney visit metal.in x.com justad medal and receive $100 in",
    "start": "2536200",
    "end": "2541839"
  },
  {
    "text": "credit to play with again metal.in x.com sjust admetal",
    "start": "2541839",
    "end": "2548240"
  },
  {
    "text": "[Music]",
    "start": "2551500",
    "end": "2554619"
  },
  {
    "text": "well I was going to ask what do you think's like going to be the future for ebpf I mean do we feel like this is the",
    "start": "2562480",
    "end": "2570280"
  },
  {
    "text": "start of something that's just going to keep getting more and more exciting commercial products that's what ni",
    "start": "2570280",
    "end": "2576640"
  },
  {
    "text": "commercial products is that what's going to happen next let's start the company now us",
    "start": "2576640",
    "end": "2581960"
  },
  {
    "text": "for let's just do it live on on the go time not the go time is it it's go time",
    "start": "2581960",
    "end": "2588400"
  },
  {
    "text": "I've done the thing about the Facebook I think it's cooler though like I think that was very much of its time taking",
    "start": "2588400",
    "end": "2594559"
  },
  {
    "text": "the off Facebook I think it's cooler now to be called like the go time the go you",
    "start": "2594559",
    "end": "2600559"
  },
  {
    "text": "know what I mean I feel I've gone all the way around there MH but what what the company look like if we were going to start it I would definitely say that",
    "start": "2600559",
    "end": "2608119"
  },
  {
    "text": "the ecosystem is very very much maturing but or I should say just starting to mature but there's really so many use",
    "start": "2608119",
    "end": "2614920"
  },
  {
    "text": "cases that that haven't been tapped yet Li BPF hasn't even hit 1.0 yet I think a",
    "start": "2614920",
    "end": "2620800"
  },
  {
    "text": "lot of people are entering the community who are just learning about BPF so",
    "start": "2620800",
    "end": "2626359"
  },
  {
    "text": "there's a lot of talk on the Kernel side about BPF eating Linux about rewriting",
    "start": "2626359",
    "end": "2632720"
  },
  {
    "text": "large swaths of the Linux kernel in BPF code to make it much more modu so I",
    "start": "2632720",
    "end": "2638319"
  },
  {
    "text": "certainly think you know like one area is like the scheduler for example having being able to put logic into the",
    "start": "2638319",
    "end": "2645000"
  },
  {
    "text": "scheduler on the Fly for changing how we schedule processes certainly like",
    "start": "2645000",
    "end": "2650440"
  },
  {
    "text": "drivers is another concept that people are are thinking about but really at at",
    "start": "2650440",
    "end": "2655920"
  },
  {
    "text": "like a high level I don't want to go too like thought leader on on pleas do on",
    "start": "2655920",
    "end": "2661400"
  },
  {
    "text": "all of you but please do I think that I forgot who gave this talk or talked",
    "start": "2661400",
    "end": "2666760"
  },
  {
    "text": "about this in a in a presentation about how BPF sort of represents this new paradigm of software that gives you the",
    "start": "2666760",
    "end": "2674440"
  },
  {
    "text": "ability to change the way your software interacts with the operating system on the Fly it's hard to say where BPF will",
    "start": "2674440",
    "end": "2682119"
  },
  {
    "text": "go because one there's like a million more ideas for what you could attach BPF",
    "start": "2682119",
    "end": "2687760"
  },
  {
    "text": "programs to two there's so many people like entering the community that are",
    "start": "2687760",
    "end": "2692920"
  },
  {
    "text": "coming up with really good ideas there's a lot of new contributors and whatnot and really there's not much restriction",
    "start": "2692920",
    "end": "2699520"
  },
  {
    "text": "on on those ideas it's like saying uh what's the next big thing for go or like",
    "start": "2699520",
    "end": "2706160"
  },
  {
    "text": "that you could write and go really anything except maybe BPF is cooler okay well that brings us to our regular",
    "start": "2706160",
    "end": "2714240"
  },
  {
    "text": "segment it's time for unpopular [Music]",
    "start": "2714240",
    "end": "2722920"
  },
  {
    "text": "opinions I actually think should probably leave",
    "start": "2722920",
    "end": "2727960"
  },
  {
    "text": "[Music] Grant Sala do you have an unpopular opinion for us so I do I would also like",
    "start": "2733110",
    "end": "2740760"
  },
  {
    "text": "to mention that I am the reigning champion of unpopular opinions oh is that right I have the most unpopular",
    "start": "2740760",
    "end": "2747200"
  },
  {
    "text": "opinion of all time on the show yes when you said ebpf was cooler than",
    "start": "2747200",
    "end": "2752280"
  },
  {
    "text": "girl oh you beat your own record then I think I I said something about baseball",
    "start": "2752280",
    "end": "2757599"
  },
  {
    "text": "You' like to switch your own popular opinion no I still agree that baseball is the best sport but oh I won't try and",
    "start": "2757599",
    "end": "2763520"
  },
  {
    "text": "beat that I'm I'm not going to say anything political or anything I would say that something that I've always felt",
    "start": "2763520",
    "end": "2769400"
  },
  {
    "text": "is that engineering organizations should have a security engineer on every team",
    "start": "2769400",
    "end": "2775760"
  },
  {
    "text": "really I think there's a lot of decisions that software developers make",
    "start": "2775760",
    "end": "2780960"
  },
  {
    "text": "or even at a higher level like people who are architecting entire systems that",
    "start": "2780960",
    "end": "2786800"
  },
  {
    "text": "the input of a security engineer or someone even a software engineer who has",
    "start": "2786800",
    "end": "2792760"
  },
  {
    "text": "more training or or will think about things from a security perspective can be crucial to making an entire",
    "start": "2792760",
    "end": "2800960"
  },
  {
    "text": "organization more secure as opposed to having a team on the side of security Engineers that are just trying to throw",
    "start": "2800960",
    "end": "2809200"
  },
  {
    "text": "products at already existing infrastructure so this is in your mind different from having some sort of um",
    "start": "2809200",
    "end": "2815920"
  },
  {
    "text": "Security review before you ship a version of the product or something like that this is more like having somebody",
    "start": "2815920",
    "end": "2821720"
  },
  {
    "text": "as part of the team as re build Hardware yes yes so is this a little bit like how",
    "start": "2821720",
    "end": "2827520"
  },
  {
    "text": "testing used to almost be a separate concern to software engineering and then we sort of became test driven developers",
    "start": "2827520",
    "end": "2833760"
  },
  {
    "text": "and we sort of realized that was our responsibility was to write well tested",
    "start": "2833760",
    "end": "2838960"
  },
  {
    "text": "code are we headed for sdd software security sorry what are we talking about",
    "start": "2838960",
    "end": "2845280"
  },
  {
    "text": "here man are we getting towards a more like sdd sort of like security driven",
    "start": "2845280",
    "end": "2851040"
  },
  {
    "text": "development thing sdt Oh I thought you were talking about something else no driven development DD gotcha",
    "start": "2851040",
    "end": "2859599"
  },
  {
    "text": "that's so difficult to do for some reason write it down MH I think I did it I think we can get it in the",
    "start": "2859599",
    "end": "2865880"
  },
  {
    "text": "edit I'm happy to move on if everyone else's that would be ideal it's definitely true when when you're",
    "start": "2865880",
    "end": "2872520"
  },
  {
    "text": "designing systems that security is one of the key things that you think of and",
    "start": "2872520",
    "end": "2877880"
  },
  {
    "text": "you're right like sometimes you can just make design decisions that make systems",
    "start": "2877880",
    "end": "2883119"
  },
  {
    "text": "more robust like if they're IDM poent so that you can just retry something lots",
    "start": "2883119",
    "end": "2888800"
  },
  {
    "text": "of times and kind of better safe than sorry because you've designed it a certain way it was not going to it's not",
    "start": "2888800",
    "end": "2894880"
  },
  {
    "text": "going to break and you can do that same thing with security issues too you can just by making certain design choices",
    "start": "2894880",
    "end": "2901000"
  },
  {
    "text": "you're sort of necessarily more secure so yeah I think interesting one we're going to definitely test that one on",
    "start": "2901000",
    "end": "2907960"
  },
  {
    "text": "Twitter we would test it on Facebook but I think we all know why that we're not going to we're not going to do that heyo",
    "start": "2907960",
    "end": "2914680"
  },
  {
    "text": "never see the results bgp different from BPF oh is it that's why we did the",
    "start": "2914680",
    "end": "2921920"
  },
  {
    "text": "show no it was timely it was timely disambiguation yes indeed made a",
    "start": "2921920",
    "end": "2927000"
  },
  {
    "text": "mistake okay very well well very interesting what do you think of that Johnny what do you think about having a security person on the team I don't",
    "start": "2927000",
    "end": "2933920"
  },
  {
    "text": "disagree it's hard to disagree with to be honest though it's hard to disagree when anyone says anything about security",
    "start": "2933920",
    "end": "2939760"
  },
  {
    "text": "you can't be the person in the room saying no I think we should be less secure Derek do you have an unpopular",
    "start": "2939760",
    "end": "2947240"
  },
  {
    "text": "opinion for us today I do I didn't it last time I choked but I have one this time so let's start provoking the CR",
    "start": "2947240",
    "end": "2953920"
  },
  {
    "text": "it's less dramatic as well if you don't if you're not choking like if you can't feel your anxiety that's where the drama",
    "start": "2953920",
    "end": "2960799"
  },
  {
    "text": "comes from in this segment so from going back and forth to like writing the Go",
    "start": "2960799",
    "end": "2966760"
  },
  {
    "text": "stuff and then switching to like the ebpf stuff which is bringing me back to a lot of C my unpopular opinion is snake",
    "start": "2966760",
    "end": "2974079"
  },
  {
    "text": "case is better than camel case whoa soone not familiar what's the difference so snake case is like word underscore",
    "start": "2974079",
    "end": "2981640"
  },
  {
    "text": "another word underscore another word where camel case is like word then uppercase first letter another word",
    "start": "2981640",
    "end": "2989119"
  },
  {
    "text": "uppercase you know so go version versus what you would typically see in like C or rust or something else like that I",
    "start": "2989119",
    "end": "2995200"
  },
  {
    "text": "just think snake case is so much more it looks nicer it's more readable I don't know it's not just like a jumble like",
    "start": "2995200",
    "end": "3001760"
  },
  {
    "text": "all words just kind of jumble together it's like it almost looks like a sentence or whatever you know I don't know it just looks nicer to me yeah it's",
    "start": "3001760",
    "end": "3009760"
  },
  {
    "text": "very interesting what about hashtags on Twitter do you do snake case hashtags I",
    "start": "3009760",
    "end": "3014920"
  },
  {
    "text": "just go all lowercase yeah strings to lower and then I write my strings to",
    "start": "3014920",
    "end": "3020319"
  },
  {
    "text": "lower yeah yeah you did it with ebpf you attached to that somehow",
    "start": "3020319",
    "end": "3026040"
  },
  {
    "text": "change it before it tweets out apparently it's a it's a it's an",
    "start": "3026040",
    "end": "3031240"
  },
  {
    "text": "accessibility problem though doing all lower case because it's hard for screen readers to do it like they just say",
    "start": "3031240",
    "end": "3037040"
  },
  {
    "text": "really I used to do it deliberately on my computer I just put in loads of nonsense and make the computers try and speak it that's hours of fun yeah yeah",
    "start": "3037040",
    "end": "3044720"
  },
  {
    "text": "yeah it's like fuzzing the say command basically there's endless amounts of fun sshing into somebody's computer and then",
    "start": "3044720",
    "end": "3049839"
  },
  {
    "text": "writing say and then some random stuff oh yes oh yes but typically try to stick",
    "start": "3049839",
    "end": "3056040"
  },
  {
    "text": "with one word hashtag so hopefully I'm not messing up with any uh readability",
    "start": "3056040",
    "end": "3061599"
  },
  {
    "text": "stuff no but snake case would fix it snake case hashtags would fix that wouldn't it there you go yeah it it",
    "start": "3061599",
    "end": "3067200"
  },
  {
    "text": "would look suspicious but yeah it would look strange but that's I mean I used to do Ruby and that was the",
    "start": "3067200",
    "end": "3073640"
  },
  {
    "text": "standard in Ruby you would just write true with little snake case things like underlining yeah I don't know as they",
    "start": "3073640",
    "end": "3080720"
  },
  {
    "text": "say when in Rome do as the Romans there was a very interesting talk at go for one year about writing go code or",
    "start": "3080720",
    "end": "3089079"
  },
  {
    "text": "perhaps code in general that is more accessible and part of that was making",
    "start": "3089079",
    "end": "3095599"
  },
  {
    "text": "it easier for a screen reader to to read and I was thinking about that when when",
    "start": "3095599",
    "end": "3101079"
  },
  {
    "text": "Derek said that that opinion I feel like it might be easier for screen readers snake case versus camel case yeah it may",
    "start": "3101079",
    "end": "3107440"
  },
  {
    "text": "be I don't know but deric I mean how how far does it go like would you name your kids with the snake case names you still",
    "start": "3107440",
    "end": "3114200"
  },
  {
    "text": "you still thinking about this yeah they are there's no there's no spaces it's uh my youngest is Davore you",
    "start": "3114200",
    "end": "3121880"
  },
  {
    "text": "know I can't wait for to meet the first engineer that does actually call their kid something like underscore something",
    "start": "3121880",
    "end": "3128359"
  },
  {
    "text": "like that I would love it that's a good one then so Johnny are you sold on that I'd say if I've done some Ruby so I'm",
    "start": "3128359",
    "end": "3135559"
  },
  {
    "text": "like yeah I'm very familiar with the with the readability of of the underscore but yeah since this is a go",
    "start": "3135559",
    "end": "3141720"
  },
  {
    "text": "Time Podcast and we're talking about go I'm going to say no I do do not like that opinion but Derek do you write go code",
    "start": "3141720",
    "end": "3149280"
  },
  {
    "text": "with underscores no you actually do that in go code no no I'm not a monster he knows better he knows",
    "start": "3149280",
    "end": "3155599"
  },
  {
    "text": "better what would it look like how bad is it I think where it falls apart for me is uppercase snake case just seems",
    "start": "3155599",
    "end": "3163960"
  },
  {
    "text": "really wrong to me so it doesn't work for me and go because capitalizing to",
    "start": "3163960",
    "end": "3169839"
  },
  {
    "text": "export like a capital first snake case statement that's just wrong that's wrong",
    "start": "3169839",
    "end": "3175000"
  },
  {
    "text": "yeah so it all looks wrong until it just becomes the way we do it it's just all",
    "start": "3175000",
    "end": "3180319"
  },
  {
    "text": "trendy there's nothing wrong with it at all um I'm going to do it now and see what it looks like yeah I feel sick I",
    "start": "3180319",
    "end": "3186359"
  },
  {
    "text": "feel sick it's awful right yeah oh a good one I like those",
    "start": "3186359",
    "end": "3192280"
  },
  {
    "text": "ones Johnny have you got an unpopular opinion these days my unpopular opinion is that I can never come up with an",
    "start": "3192280",
    "end": "3198559"
  },
  {
    "text": "unpopular opinion yeah I know cuz you're too popular like every opinion ends up",
    "start": "3198559",
    "end": "3205319"
  },
  {
    "text": "being popular so I'm sick and tired of having unpopular opinions because they're always popular that's very meta",
    "start": "3205319",
    "end": "3211359"
  },
  {
    "text": "your your unpopular opinion seems to be we shouldn't keep doing this",
    "start": "3211359",
    "end": "3217040"
  },
  {
    "text": "segment it's funny because when we put them on Twitter I genuinely think Grant was like is the record breaker because",
    "start": "3217359",
    "end": "3224640"
  },
  {
    "text": "yeah yeah most of the time people just agree the case that's made is just well made very often now these days what I",
    "start": "3224640",
    "end": "3230880"
  },
  {
    "text": "look for is what's the ratio of people who disagree right so I'm trying to figure out how how many people actually",
    "start": "3230880",
    "end": "3236880"
  },
  {
    "text": "do lean one way or the other that's more interesting now than trying to say oh this is overwhelmingly unpopular because",
    "start": "3236880",
    "end": "3243559"
  },
  {
    "text": "that doesn't happen often yeah no it doesn't you know it's very interesting",
    "start": "3243559",
    "end": "3248599"
  },
  {
    "text": "well we're coming to the end I just want to do a quick shout out it's like a shout out but the first time I did it I",
    "start": "3248599",
    "end": "3255359"
  },
  {
    "text": "said it wrong yeah you're shouting at so now it's a shout out okay and we're just going to shout at a particular Meetup",
    "start": "3255359",
    "end": "3261720"
  },
  {
    "text": "from about the place actually today I'm shouting at the gdn page on meetup.com",
    "start": "3261720",
    "end": "3268240"
  },
  {
    "text": "so it's meetup.com prgo and that will give you a great list",
    "start": "3268240",
    "end": "3277160"
  },
  {
    "text": "of resources local meetups places people around you Gophers that you can go and",
    "start": "3277160",
    "end": "3282839"
  },
  {
    "text": "meet and talk to and who knows you might find someone there that's interested in ebpf and then you can talk to them about",
    "start": "3282839",
    "end": "3290799"
  },
  {
    "text": "it and join in see if you can build something cool and for those who don't know gdn for the go developer Network so",
    "start": "3290799",
    "end": "3298160"
  },
  {
    "text": "this is sort of the The Meta organization behind all of the go meetups and events and even things like",
    "start": "3298160",
    "end": "3305200"
  },
  {
    "text": "goldbridge and things like that so that is the behind the scenes of the behind the scenes yeah it has a lot of members",
    "start": "3305200",
    "end": "3311760"
  },
  {
    "text": "MH 117,000 members at the time of recording",
    "start": "3311760",
    "end": "3317599"
  },
  {
    "text": "so you could be one of those ones so you can't or you already have to have been one of those but you can increase the",
    "start": "3317599",
    "end": "3322839"
  },
  {
    "text": "number and be that one yeah and definitely join join the gdn and we'll send you your license information in the",
    "start": "3322839",
    "end": "3329280"
  },
  {
    "text": "mail for having joined the go developer Network I'm kidding there's no license I was getting excited I was thinking I'll",
    "start": "3329280",
    "end": "3334640"
  },
  {
    "text": "join this we're not a licensing organization a what's the point I want to do it if I don't get a badge you want",
    "start": "3334640",
    "end": "3340160"
  },
  {
    "text": "to get a certificate little silver gopher can just you can just flash it at certain places and you get half off I",
    "start": "3340160",
    "end": "3345799"
  },
  {
    "text": "can DM you my my address you can send me a check okay and you're going to make me a little gopher police badge yeah I'll",
    "start": "3345799",
    "end": "3351520"
  },
  {
    "text": "make you a doodle and I'll send that back to you it say Sheriff Matt on it yeah you can be a sheriff man you can be",
    "start": "3351520",
    "end": "3357640"
  },
  {
    "text": "a sheriff should have that should have like ranks in the in the force in the",
    "start": "3357640",
    "end": "3363359"
  },
  {
    "text": "force are we yeah yeah it's like a police force now the go developer Force right yeah it's like a government agency",
    "start": "3363359",
    "end": "3370319"
  },
  {
    "text": "now it's like Matt ryer gdn oh no it sounds like a news organization is that the homepage for it",
    "start": "3370319",
    "end": "3377319"
  },
  {
    "text": "then Johnny you seem to know a lot about this yeah that is the that is the starter page how do you know so much",
    "start": "3377319",
    "end": "3382880"
  },
  {
    "text": "about it oh I I know some people who know some people it does sound like a it just",
    "start": "3382880",
    "end": "3388920"
  },
  {
    "text": "sound like a dodgy organization I know some people they",
    "start": "3388920",
    "end": "3394760"
  },
  {
    "text": "know some people it's like that's a nice GitHub handle you've got there it'd be a shame if anything were to happen to him",
    "start": "3394760",
    "end": "3401440"
  },
  {
    "text": "that is all the time we have today I hope you enjoyed this deep dive on ebpf very technical and very interesting and",
    "start": "3401440",
    "end": "3408520"
  },
  {
    "text": "quite exciting I do want to see what Gophers are going to build with it I think there's some exciting",
    "start": "3408520",
    "end": "3413960"
  },
  {
    "text": "opportunities there tweeters at gotime FM if you build something cool with it we'd love to hear about it thank you so",
    "start": "3413960",
    "end": "3420720"
  },
  {
    "text": "much to our guests today Derek Parker Grant Seltzer always a pleasure you'll",
    "start": "3420720",
    "end": "3426480"
  },
  {
    "text": "have to come back and of course Johnny boso was here and so was I I've said me",
    "start": "3426480",
    "end": "3432160"
  },
  {
    "text": "see you later [Music] bye not the most professional ending",
    "start": "3432160",
    "end": "3439200"
  },
  {
    "text": "I've ever done but uh there we go and now we have to play the outro yes goodbye goodbye",
    "start": "3439200",
    "end": "3446880"
  },
  {
    "text": "all right that is our show for this week thanks for listening good news we just restocked the go time merch so you can",
    "start": "3448039",
    "end": "3453839"
  },
  {
    "text": "rep your favorite podcast with a comfy tea check it out we probably have your size now at go time. fm/ merch go time",
    "start": "3453839",
    "end": "3462000"
  },
  {
    "text": "is produced by Jared Santo that's me with music by break master cylinder that's not me we are brought to you by",
    "start": "3462000",
    "end": "3468520"
  },
  {
    "text": "fastly launch darkle and lenoe next episode Chris continues our series on",
    "start": "3468520",
    "end": "3473839"
  },
  {
    "text": "maintenance this one's about maintaining ourselves in the fast moving software industry that's what's coming up next",
    "start": "3473839",
    "end": "3480440"
  },
  {
    "text": "time on go [Music]",
    "start": "3480440",
    "end": "3503799"
  },
  {
    "text": "time [Music]",
    "start": "3503799",
    "end": "3510579"
  },
  {
    "text": "but that's probably the end of the podcast that's how the sausage gets made or our live",
    "start": "3515200",
    "end": "3522160"
  },
  {
    "text": "viewers like it was dead cool I love that mic drop I love the unnecessary mic",
    "start": "3522160",
    "end": "3527400"
  },
  {
    "text": "drop that's what you've just invented Johnny they like and that's how the sausage gets made that's really cool I'm",
    "start": "3527400",
    "end": "3533799"
  },
  {
    "text": "going to do that I'm going do that at the end of every meeting that I have at work now yeah and that's how the sausage",
    "start": "3533799",
    "end": "3540680"
  },
  {
    "text": "gets made then storm out I'm just trying to find the right window to click end",
    "start": "3540680",
    "end": "3547520"
  },
  {
    "text": "on it's not a very elegant exit",
    "start": "3547520",
    "end": "3555000"
  }
]