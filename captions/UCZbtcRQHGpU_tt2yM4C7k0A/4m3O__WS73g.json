[
  {
    "text": "okay I'm back el rey to make a podcast I",
    "start": "199",
    "end": "12260"
  },
  {
    "text": "am I think you all might not have a say sorry I got select an audio show you",
    "start": "14299",
    "end": "21300"
  },
  {
    "text": "guys need to actually use it or I gotta be we gotta be on it all right yeah so",
    "start": "21300",
    "end": "26699"
  },
  {
    "text": "we kick things off do you do you have the sound board now you play musics I do",
    "start": "26699",
    "end": "31700"
  },
  {
    "text": "can you hear that I can okay Nick you heard that yep",
    "start": "31700",
    "end": "36989"
  },
  {
    "text": "all right here we go all right time y'all",
    "start": "36989",
    "end": "40730"
  },
  {
    "text": "[Music]",
    "start": "45650",
    "end": "52950"
  },
  {
    "text": "[Music] hello and welcome to Jas party this is",
    "start": "59500",
    "end": "68190"
  },
  {
    "text": "cable I'll be your MC this week I'm so excited to be back on the show and these guys missed me so much they let me run",
    "start": "68190",
    "end": "74550"
  },
  {
    "text": "things today I am joined by the one and only Jared",
    "start": "74550",
    "end": "79830"
  },
  {
    "text": "Santo Jared how you doing what's up man good to have you back yeah yeah and Nick",
    "start": "79830",
    "end": "86130"
  },
  {
    "text": "neesee welcome back I cannot tell you how much I've missed that hoy all right",
    "start": "86130",
    "end": "92759"
  },
  {
    "text": "so today y'all are gonna indulge me and talk about something that I have been digging into quite a bit over the last",
    "start": "92759",
    "end": "99149"
  },
  {
    "text": "three to six months both while I was gone but even some before that which is",
    "start": "99149",
    "end": "104430"
  },
  {
    "text": "the subject of graph QL and I think from what I was hearing you all have",
    "start": "104430",
    "end": "110220"
  },
  {
    "text": "different levels of experience so obviously I'm gonna pick on you a lot and make you explain things so that we",
    "start": "110220",
    "end": "117090"
  },
  {
    "text": "get that played out in front of everybody but let's start with just kind of describing what is graph QL and I",
    "start": "117090",
    "end": "124320"
  },
  {
    "text": "actually want to want to hear everybody's answer starting from the least knowledgeable so Jarrod you said you had only played a tiny tiny bit from",
    "start": "124320",
    "end": "131280"
  },
  {
    "text": "your perspective what is graph QL yes I've talked about it a lot but I haven't used it a lot most of my",
    "start": "131280",
    "end": "137670"
  },
  {
    "text": "experience with graph QL is toying with it with the github API and so I can tell",
    "start": "137670",
    "end": "143880"
  },
  {
    "text": "you what I think graph QL is as a noob and that would be an API architecture",
    "start": "143880",
    "end": "150410"
  },
  {
    "text": "where in the API clients are allowed to craft queries and mutations according to",
    "start": "150410",
    "end": "160260"
  },
  {
    "text": "what's been laid out by the API provider and can put together the exact data they",
    "start": "160260",
    "end": "166019"
  },
  {
    "text": "require to suck down into their little API clients just probably more to it",
    "start": "166019",
    "end": "172260"
  },
  {
    "text": "than that but that's my newb description how'd I do too bad not too bad Nick do",
    "start": "172260",
    "end": "178079"
  },
  {
    "text": "you want to add or amend anything on that yeah so previously I've used",
    "start": "178079",
    "end": "183739"
  },
  {
    "text": "libraries like d3 and charge is to make these graphs but this is the next iteration on that a",
    "start": "183739",
    "end": "190170"
  },
  {
    "text": "full language to create awesome graphing librarians no yeah I think that that's",
    "start": "190170",
    "end": "200010"
  },
  {
    "text": "that kind of goes to my understanding of it it's all schema driven and typesafe",
    "start": "200010",
    "end": "205470"
  },
  {
    "text": "so the queries know exactly what they can pull and exactly what they will get back which is pretty cool and it as",
    "start": "205470",
    "end": "215100"
  },
  {
    "text": "opposed to something like rest where you have like specific endpoints to fetch things from you kind of just have like a",
    "start": "215100",
    "end": "221280"
  },
  {
    "text": "grab-bag endpoint where you can just say this is what I want this is all of the",
    "start": "221280",
    "end": "226770"
  },
  {
    "text": "properties that I would specifically want on that and then you can have relationships between that so like one example that I always think of is like",
    "start": "226770",
    "end": "233730"
  },
  {
    "text": "pulling a tweet you can grab the tweet but then you can say I also want the number of likes that it has and then I",
    "start": "233730",
    "end": "239850"
  },
  {
    "text": "also want the replies to that which would be other tweets that are all related to that top tweet may or may not",
    "start": "239850",
    "end": "246480"
  },
  {
    "text": "be correct but that's the way I at least think about it in my mind yeah metaphor",
    "start": "246480",
    "end": "251550"
  },
  {
    "text": "up like a ball so the the server metaphor you're at a restaurant write an API think of it like serving up stuff",
    "start": "251550",
    "end": "257519"
  },
  {
    "text": "you know so a REST API where you have end points that Nicias describe this",
    "start": "257519",
    "end": "262620"
  },
  {
    "text": "would be like where your waiter comes and like here here's the menu right would you like to order and you say I'll",
    "start": "262620",
    "end": "268080"
  },
  {
    "text": "take a hamburger and they say okay I'll go get you a hamburger they send it back whereas maybe a graphical OPI is more",
    "start": "268080",
    "end": "273690"
  },
  {
    "text": "like an open buffet where it's like here's all of our food you know what's in front of you pick and choose what you",
    "start": "273690",
    "end": "278970"
  },
  {
    "text": "want make your plate and take it back to your table no that doesn't sound good in these times at least that would yeah",
    "start": "278970",
    "end": "287310"
  },
  {
    "text": "make graph QL very contagious dangerous dangerous yeah I mean I feel like you",
    "start": "287310",
    "end": "292890"
  },
  {
    "text": "two have summed it up pretty well I'm not sure I dig the metaphor but one of the ways that one of the the layers that",
    "start": "292890",
    "end": "300000"
  },
  {
    "text": "I would put on top of that is if you think about a REST API everything is centered around resources and each",
    "start": "300000",
    "end": "306720"
  },
  {
    "text": "resource has its own place that you go and get it but if they are relationships between those resources you have to on the",
    "start": "306720",
    "end": "313140"
  },
  {
    "text": "client side understand those relationships and go and fetch the",
    "start": "313140",
    "end": "318540"
  },
  {
    "text": "pieces that you want graph QL starts from also having a whole set of",
    "start": "318540",
    "end": "323870"
  },
  {
    "text": "resources that's the schema that you're talking about the schema driven nature of it but it maps out the connections",
    "start": "323870",
    "end": "331230"
  },
  {
    "text": "between those resources so that anytime you are accessing one resource you can specify all the graph of relationships",
    "start": "331230",
    "end": "339990"
  },
  {
    "text": "you want to follow down and pull data from and then the other piece in terms of having the single place to go it is",
    "start": "339990",
    "end": "348480"
  },
  {
    "text": "one location one endpoint but there's this set of top-level queries that you",
    "start": "348480",
    "end": "355200"
  },
  {
    "text": "can run that where the API provider still gets to define like what are the",
    "start": "355200",
    "end": "361770"
  },
  {
    "text": "ways into my buffet so to speak so oh I knew it was coming back around see you",
    "start": "361770",
    "end": "366870"
  },
  {
    "text": "actually do like this metaphor and the more you think about it keep going please oh I'll play with anything you give me you know that but so you can't",
    "start": "366870",
    "end": "376350"
  },
  {
    "text": "necessarily grab at the top level every resource that you might want to access some resources might only be accessible",
    "start": "376350",
    "end": "383700"
  },
  {
    "text": "within the context of another resource and the options that you have available",
    "start": "383700",
    "end": "388980"
  },
  {
    "text": "are those top level queries so you can think of everything within graph Q all",
    "start": "388980",
    "end": "394140"
  },
  {
    "text": "that you're occurring as a graph that starts with a single node at the top which is a query so query is this top",
    "start": "394140",
    "end": "401070"
  },
  {
    "text": "and then it steps down a relationship to here's a set of queries that are available maybe let's use the github API",
    "start": "401070",
    "end": "407310"
  },
  {
    "text": "as an example if we look at the github API what are the queries or public",
    "start": "407310",
    "end": "414510"
  },
  {
    "text": "schema that's available grab cool API queries I think the first one that it",
    "start": "414510",
    "end": "419940"
  },
  {
    "text": "lists is marketplace listings so that would be one hop down that's going to give you a set of thing of listings in",
    "start": "419940",
    "end": "427230"
  },
  {
    "text": "the marketplace and from that you can does that have any relationships that",
    "start": "427230",
    "end": "432600"
  },
  {
    "text": "actually doesn't have relationships but from that you can kind of hop down and",
    "start": "432600",
    "end": "439530"
  },
  {
    "text": "ask for the sets of things that you would want from that query so say we were doing your buffet query you might",
    "start": "439530",
    "end": "446730"
  },
  {
    "text": "say that you can only start with pancakes or",
    "start": "446730",
    "end": "452060"
  },
  {
    "text": "eggs and those are the top level things you can't just get bacon on its own but you could get eggs with a relationship",
    "start": "452060",
    "end": "458009"
  },
  {
    "text": "to bacon or you could get pancakes in a relationship to bacon right like you have this these sort of entrees into the",
    "start": "458009",
    "end": "463529"
  },
  {
    "text": "API that you can start with and then you can follow down the relationships as far as you go what kind of a fate doesn't",
    "start": "463529",
    "end": "470069"
  },
  {
    "text": "have bacon as a top level entry come on just start with the bacon and go from there well that's API design like so one",
    "start": "470069",
    "end": "478830"
  },
  {
    "text": "of the things I thought actually before I started dealing with graph QL is okay everything's there where's the API like",
    "start": "478830",
    "end": "483900"
  },
  {
    "text": "do you still have to design your API and that set of top-level queries actually",
    "start": "483900",
    "end": "491039"
  },
  {
    "text": "makes a pretty big difference in terms of how do you think about exposing things in your API what are the core",
    "start": "491039",
    "end": "497789"
  },
  {
    "text": "concepts that are the ways that people can enter into this thing and maybe you want to expose everything at the top",
    "start": "497789",
    "end": "503729"
  },
  {
    "text": "there maybe every resource that you have has a top level query so you know I can always start with bacon and then get the",
    "start": "503729",
    "end": "510300"
  },
  {
    "text": "things related to bacon and I can always start with something else and get the things related to that but that may not be the right answer",
    "start": "510300",
    "end": "517159"
  },
  {
    "text": "isn't it like REST API is in that way I mean your endpoints are your top level menu items right yeah in many ways best",
    "start": "517159",
    "end": "524640"
  },
  {
    "text": "it's like if you had a REST API but at every point that you had a REST API instead of just getting back any sort of",
    "start": "524640",
    "end": "532230"
  },
  {
    "text": "like say you have a relationship idea foreign key and a traditional REST API",
    "start": "532230",
    "end": "538320"
  },
  {
    "text": "you'd get that key and then you'd go fetch the resource for that key from another endpoint the resource for that",
    "start": "538320",
    "end": "543630"
  },
  {
    "text": "endpoint here you can just say I want to follow that relationship give me back all the data why is that better there's",
    "start": "543630",
    "end": "554100"
  },
  {
    "text": "a couple of reasons why it has advantages it also can have disadvantages I think it's it's really",
    "start": "554100",
    "end": "560060"
  },
  {
    "text": "interesting to look at what are some of the pros and cons of graph QL because this is not a panacea it's not a better",
    "start": "560060",
    "end": "566399"
  },
  {
    "text": "for everything one of the ways in which it is better is it reduces the number of",
    "start": "566399",
    "end": "574890"
  },
  {
    "text": "network hops or network calls that you're gonna have to make so if you think about a especially like on a",
    "start": "574890",
    "end": "582720"
  },
  {
    "text": "mobile phone or something like that you want to be making as few calls over",
    "start": "582720",
    "end": "588400"
  },
  {
    "text": "the slow part of the network as possible the slow part of the network is between the phone and the API server so if you",
    "start": "588400",
    "end": "594250"
  },
  {
    "text": "can consolidate that all into a single request and pull back only the data you need you could be much more network",
    "start": "594250",
    "end": "600580"
  },
  {
    "text": "efficient even if on the backend like one way that you can implement a graph QL server is have a wrapper around a",
    "start": "600580",
    "end": "606220"
  },
  {
    "text": "REST API that may still be valuable but then all those independent API calls are",
    "start": "606220",
    "end": "611500"
  },
  {
    "text": "happening in your data center network which is super fast can we pause for a",
    "start": "611500",
    "end": "617290"
  },
  {
    "text": "second kay ball because you're not used to having a desk mic I think when your hand hits your desk there's a bump on the mic you got it yep I am not used to",
    "start": "617290",
    "end": "625150"
  },
  {
    "text": "this at all yeah for the listeners I'm in a weird situation because we're a normally record is currently being used",
    "start": "625150",
    "end": "630220"
  },
  {
    "text": "as a clinical office yeah so wanted to say that before I got too deep into it",
    "start": "630220",
    "end": "635740"
  },
  {
    "text": "we had a bunch of bump sounds so hands off thank you go ahead and let's see",
    "start": "635740",
    "end": "643090"
  },
  {
    "text": "where were we this might be a good time to actually talk a little bit about some of those benefits and drawbacks I'd be",
    "start": "643090",
    "end": "650830"
  },
  {
    "text": "once again curious Nick it sounds like you've been playing with it a little bit what have you found to be good or bad in",
    "start": "650830",
    "end": "656380"
  },
  {
    "text": "your first look yeah so some I guess",
    "start": "656380",
    "end": "661990"
  },
  {
    "text": "I'll start with the bad first it's a another layer on top of things to learn",
    "start": "661990",
    "end": "667050"
  },
  {
    "text": "there's this whole like language for like defining a schema or defining your query that you have to learn so there's",
    "start": "667050",
    "end": "673630"
  },
  {
    "text": "syntax involved around that it's got types to it which are different from like the way you define typescript types",
    "start": "673630",
    "end": "680440"
  },
  {
    "text": "so you have to learn that like you have to keep those separate and then there's",
    "start": "680440",
    "end": "687360"
  },
  {
    "text": "what else I could be wrong about this but don't you have to explicitly define",
    "start": "687360",
    "end": "694420"
  },
  {
    "text": "everything that you want to get back whereas with like a rest in point you can just say like give me back all the",
    "start": "694420",
    "end": "700060"
  },
  {
    "text": "bacon and it'll give you back whatever it has bacon yeah with it is much more verbose yeah and sometimes I don't know",
    "start": "700060",
    "end": "707350"
  },
  {
    "text": "what I want yeah it's it's harder to programmatically explore in that way",
    "start": "707350",
    "end": "714280"
  },
  {
    "text": "though it does expose an end point that lets you programmatically explore what the ski as look like are you talking about like",
    "start": "714280",
    "end": "720790"
  },
  {
    "text": "the is it cold graphic like graphic cool like that tool area yeah we're I mean so your graph QL",
    "start": "720790",
    "end": "727570"
  },
  {
    "text": "server actually I don't know necessarily if that is I think that that is part of the spec I know it's a part of the",
    "start": "727570",
    "end": "733000"
  },
  {
    "text": "graphical server we've been using it has a schema end point where you can just your client can fetch back here's the",
    "start": "733000",
    "end": "738400"
  },
  {
    "text": "schema for all of the things and then you could programmatically explore what's in there or not but if you're",
    "start": "738400",
    "end": "744010"
  },
  {
    "text": "just poking around at it yeah it is definitely more painful than let me",
    "start": "744010",
    "end": "750940"
  },
  {
    "text": "fetch this and examine the data yeah right that is one thing that I was gonna put in the pro/con or the pro category",
    "start": "750940",
    "end": "757420"
  },
  {
    "text": "is that that tool and specifically like those calls that it's making to figure out what you can actually get those are",
    "start": "757420",
    "end": "763830"
  },
  {
    "text": "introspection queries that it is doing on its own and it's really cool that that's just kind of built into the spec",
    "start": "763830",
    "end": "768940"
  },
  {
    "text": "to say like tell me what I can do here and then bring that back and then you can build really powerful tools like",
    "start": "768940",
    "end": "774880"
  },
  {
    "text": "like that I think it's all too graphic cool that lets you like it gives me a",
    "start": "774880",
    "end": "780040"
  },
  {
    "text": "blank canvas to start writing a query and I can hit control space and it will tell me what I can autocomplete here and",
    "start": "780040",
    "end": "785920"
  },
  {
    "text": "what makes sense and it'll immediately like show a little red line on that line if it's something that I can't actually fire if it's not formed correctly so",
    "start": "785920",
    "end": "793030"
  },
  {
    "text": "yeah it really does help you as much as possible when you're exploring like that which is what I've been doing quite a lot so I do like that and I do like the",
    "start": "793030",
    "end": "803410"
  },
  {
    "text": "tooling so far that I've been playing around with is really powerful in that I basically give it like this is what our",
    "start": "803410",
    "end": "810910"
  },
  {
    "text": "data based model looks like and this is the type of queries that you can expect and it just figures out all the plumbing",
    "start": "810910",
    "end": "819580"
  },
  {
    "text": "for me and then gives me back exactly what I want which is really cool that is super cool and I feel like you mean you",
    "start": "819580",
    "end": "826150"
  },
  {
    "text": "mentioned the typing being different than in typescript at least with the tooling that we're using we can you can",
    "start": "826150",
    "end": "832600"
  },
  {
    "text": "auto generate typescript types based on the queries that you're running so you find a particular query and have it",
    "start": "832600",
    "end": "839800"
  },
  {
    "text": "generate an explicit type script type that has only the fields that are coming back from your query which lets you just",
    "start": "839800",
    "end": "846610"
  },
  {
    "text": "kind of get really nice tight end-to-end type safety is that like Apollo cogent",
    "start": "846610",
    "end": "852030"
  },
  {
    "text": "yeah yeah some playing with that too and that is cool but I'm annoyed with it",
    "start": "852030",
    "end": "857940"
  },
  {
    "text": "right now because it doesn't change those it doesn't actually go and clean up the types that it created previously so like my route my result right now is",
    "start": "857940",
    "end": "866400"
  },
  {
    "text": "just blow away that generated types directory and then let it regenerate everything which is kind of annoying but",
    "start": "866400",
    "end": "872160"
  },
  {
    "text": "yeah I'm sure it's something that can be fixed but I actually go the opposite way with well so far I've gone the opposite",
    "start": "872160",
    "end": "879030"
  },
  {
    "text": "way with I don't really touch schema generation on my own so I don't think about the graph QL schema I am using a",
    "start": "879030",
    "end": "885780"
  },
  {
    "text": "library called nest that has a graph QL plugin for it and so I define all of the",
    "start": "885780",
    "end": "894150"
  },
  {
    "text": "types for like my what my queries will look like in typescript with decorators and then it generates let's game before",
    "start": "894150",
    "end": "900960"
  },
  {
    "text": "me from that yeah I think one of the really cool things that you're touching",
    "start": "900960",
    "end": "907320"
  },
  {
    "text": "on a little bit in the tooling is all the same type of magic that you can get with a NID when you go to a strongly",
    "start": "907320",
    "end": "916440"
  },
  {
    "text": "typed language and all of the amazing different guarantees and other things you could do this allows you to do end-to-end with your API server well you",
    "start": "916440",
    "end": "926790"
  },
  {
    "text": "were touching on discovery there Nick and I think it's worth pointing out maybe it's not worth pointing up I'm",
    "start": "926790",
    "end": "933150"
  },
  {
    "text": "gonna point out anyways that restful api is in idea are also discoverable because",
    "start": "933150",
    "end": "941640"
  },
  {
    "text": "of the hyper media linking worse in the response it's just that restful api is in practice aren't actually don't usually",
    "start": "941640",
    "end": "948720"
  },
  {
    "text": "implement that part of restful api is the concept github actually had a really",
    "start": "948720",
    "end": "953910"
  },
  {
    "text": "nice hypermedia api where you could say here is the repo and here are all the issues here is sorry the response could",
    "start": "953910",
    "end": "961530"
  },
  {
    "text": "say here's my repo object and and as a part of that object is a link to a URL where in all of those issues for the",
    "start": "961530",
    "end": "969300"
  },
  {
    "text": "repo exists and so you could then my point is you could also in concept programmatically crawl or discover a",
    "start": "969300",
    "end": "976650"
  },
  {
    "text": "restful api like you could with the schema what's it called schema endpoint where it will tell you your graph QL",
    "start": "976650",
    "end": "983190"
  },
  {
    "text": "schema and so that would be pretty cool if it took off unfortunately it's difficult to implement server-side and it's just",
    "start": "983190",
    "end": "989010"
  },
  {
    "text": "always one more thing and lots of times that's the part that gets dropped off or the restful api is which leaves developers like us instead of letting",
    "start": "989010",
    "end": "995790"
  },
  {
    "text": "our tooling discover how it all works is basically just reading the docs and saying where are the comments and then",
    "start": "995790",
    "end": "1001370"
  },
  {
    "text": "it's constructing the URL so in practice it didn't really pay off but in concept restful api is also we're supposed to be",
    "start": "1001370",
    "end": "1008360"
  },
  {
    "text": "discoverable and some of them are like the better ones the better implement ones I think part of what makes that",
    "start": "1008360",
    "end": "1014570"
  },
  {
    "text": "hard to implement is because it requires a sort of centralization of thought because every endpoint needs to know",
    "start": "1014570",
    "end": "1020990"
  },
  {
    "text": "about every other endpoint or at least all of their references and as you say a good API that's well essentially",
    "start": "1020990",
    "end": "1027920"
  },
  {
    "text": "controlled and designed is gonna have that but many are not and they're developed independently whereas graph QL",
    "start": "1027920",
    "end": "1034339"
  },
  {
    "text": "by being more rigid it forces into everything is going through this graph QL endpoint so we know about everything",
    "start": "1034339",
    "end": "1041000"
  },
  {
    "text": "so we can force that level of explicitness and that produces the tooling right the thing that happened",
    "start": "1041000",
    "end": "1046610"
  },
  {
    "text": "around a restful api is is because it wasn't reliable to have those linking between resources the tooling wasn't",
    "start": "1046610",
    "end": "1052880"
  },
  {
    "text": "built out in order to do the discover ability right the actual discovery and so you couldn't rely on it so habitually",
    "start": "1052880",
    "end": "1059810"
  },
  {
    "text": "we didn't think about it and so we always just go read the docs and find the endpoints and hard code those into our clients and whatnot so I think a big",
    "start": "1059810",
    "end": "1066830"
  },
  {
    "text": "win is that because it's there from the start by default on all graphs ql api is",
    "start": "1066830",
    "end": "1072230"
  },
  {
    "text": "now that you can build your tooling saying it's gonna be there and that makes a huge difference in practice I",
    "start": "1072230",
    "end": "1078700"
  },
  {
    "text": "think that's a good place to wrap - a break ok ok ball shaking the rust off I",
    "start": "1078700",
    "end": "1091220"
  },
  {
    "text": "know I'm totally rusty totally rusty I love it well I just wouldn't call you",
    "start": "1091220",
    "end": "1098630"
  },
  {
    "text": "I'll just try to make this show sound good that's all no it's good call me on other things too ok",
    "start": "1098630",
    "end": "1103790"
  },
  {
    "text": "maybe react you're being a jerk no I hope not all right anybody need a bio",
    "start": "1103790",
    "end": "1111470"
  },
  {
    "text": "break nope nope all right let's just",
    "start": "1111470",
    "end": "1116570"
  },
  {
    "text": "roll back in all right so we've talked some about",
    "start": "1116570",
    "end": "1123610"
  },
  {
    "text": "graph QL as a mental model what's some of the pros some of the cons things like that even some of the different tooling",
    "start": "1123610",
    "end": "1129380"
  },
  {
    "text": "that it creates let's now dive into something a little bit more Kronk REIT looking at what our different approach",
    "start": "1129380",
    "end": "1136790"
  },
  {
    "text": "is to actually implementing graph QL what are the different pieces of it that you would need to implement and maybe",
    "start": "1136790",
    "end": "1143870"
  },
  {
    "text": "some specific examples and implementations Nik you want to lead us",
    "start": "1143870",
    "end": "1149780"
  },
  {
    "text": "off since you've been working particularly with one sure so like I said I've been using nest Jas for this",
    "start": "1149780",
    "end": "1157250"
  },
  {
    "text": "and it has a its own plug-in called an STS graph QL that is actually just a",
    "start": "1157250",
    "end": "1163700"
  },
  {
    "text": "wrapper on top of Apollo or there's another one I think but Apollo is the",
    "start": "1163700",
    "end": "1170000"
  },
  {
    "text": "one that I'm using and oh yeah Apollo fast if I I think it's another thing",
    "start": "1170000",
    "end": "1177070"
  },
  {
    "text": "anyway it is interesting because it lets me just like set up everything very",
    "start": "1177070",
    "end": "1182870"
  },
  {
    "text": "simple very similar way to the way that I was sitting abreast endpoints with nest where I can create instead of a",
    "start": "1182870",
    "end": "1188180"
  },
  {
    "text": "controller to control all of the rest of all endpoints I have I create a resolver and the resolver can have like a query",
    "start": "1188180",
    "end": "1194570"
  },
  {
    "text": "method or specifically like the pieces of the the graphical model that I want",
    "start": "1194570",
    "end": "1200090"
  },
  {
    "text": "to fetch and then it can pull that data and do any kind of processing it needs to the query and then pass that along to",
    "start": "1200090",
    "end": "1206030"
  },
  {
    "text": "a server service that can go read from the database and query exactly what I need and then deliver that or do any",
    "start": "1206030",
    "end": "1214190"
  },
  {
    "text": "other kind of processing so it's really nice and easy to to set up that library",
    "start": "1214190",
    "end": "1219860"
  },
  {
    "text": "nest is very much in the it's a typescript first library and it's very",
    "start": "1219860",
    "end": "1226070"
  },
  {
    "text": "decorator heavy which is interesting but it does things kind of magically but",
    "start": "1226070",
    "end": "1233000"
  },
  {
    "text": "it's pretty easy to to pick up on you're used a key word there that I don't think we actually dug into defining yet but",
    "start": "1233000",
    "end": "1240950"
  },
  {
    "text": "that is pretty core to implementing at least graph QL servers the server side which is resolver describe a little bit",
    "start": "1240950",
    "end": "1248480"
  },
  {
    "text": "what that is or I can take a stab at it or whatever prefer as best I can I'll try so a",
    "start": "1248480",
    "end": "1255450"
  },
  {
    "text": "resolver would be something that like provides the instructions for taking like the graph QL string the the query",
    "start": "1255450",
    "end": "1262620"
  },
  {
    "text": "that it receives and actually doing something with that so passing that off",
    "start": "1262620",
    "end": "1268950"
  },
  {
    "text": "to to do whatever it needs to with that so that could be like you know making",
    "start": "1268950",
    "end": "1274950"
  },
  {
    "text": "sure that I'm falling apart here a little bit but maybe like type checking",
    "start": "1274950",
    "end": "1280020"
  },
  {
    "text": "arguments that might be passed in to the query or things like that could happen there yeah I think that's good the the",
    "start": "1280020",
    "end": "1286320"
  },
  {
    "text": "resolvers take responsibility for mapping from the query to the data and one of the interesting things that I've",
    "start": "1286320",
    "end": "1293340"
  },
  {
    "text": "seen there is like those can be more or less granular so you could have a single",
    "start": "1293340",
    "end": "1298530"
  },
  {
    "text": "resolver that resolves all of an object everything that it has there or you can",
    "start": "1298530",
    "end": "1303630"
  },
  {
    "text": "actually break apart different resolvers per field in that object depending on",
    "start": "1303630",
    "end": "1308940"
  },
  {
    "text": "how your data is stored and so if for example you're building up a graph QL object out of several different objects",
    "start": "1308940",
    "end": "1315960"
  },
  {
    "text": "in your database those references to different objects could actually be in",
    "start": "1315960",
    "end": "1322200"
  },
  {
    "text": "different resolvers or different parts of the object could be in different resolvers and then if those fields",
    "start": "1322200",
    "end": "1329160"
  },
  {
    "text": "aren't queried those resolvers aren't called you don't have to take those database heads so it act they can actually give you a mechanism for making",
    "start": "1329160",
    "end": "1336870"
  },
  {
    "text": "your back-end much more efficient speaking of backends and efficiency what",
    "start": "1336870",
    "end": "1342840"
  },
  {
    "text": "happens and I'm back-end when somebody crafts a graph QL API that just spans",
    "start": "1342840",
    "end": "1348660"
  },
  {
    "text": "like six of your tables and just causes all these joins cuz let's take a blog scenario write blog post has comments",
    "start": "1348660",
    "end": "1355590"
  },
  {
    "text": "comments have authors authors have blog posts so couldn't I just say blog comments dot authors dot first dot blog",
    "start": "1355590",
    "end": "1364680"
  },
  {
    "text": "comments or post comment can't I just drill down and just completely screw over your back end yes",
    "start": "1364680",
    "end": "1374600"
  },
  {
    "text": "well and this is actually one of the things that I saw coming into this is the first version of the graph QL server",
    "start": "1375400",
    "end": "1385470"
  },
  {
    "text": "that I've been working a lot on was written by somebody who had a front-end background who did not understand",
    "start": "1385470",
    "end": "1391840"
  },
  {
    "text": "databases and schema right and it was ridiculously slow even in good cases and",
    "start": "1391840",
    "end": "1399130"
  },
  {
    "text": "so easy to write pathological queries that would just totally destroy the",
    "start": "1399130",
    "end": "1404410"
  },
  {
    "text": "backend and take minutes to resolve mm-hmm there's a few different layers to",
    "start": "1404410",
    "end": "1409660"
  },
  {
    "text": "this so one is appropriately setting up your resolvers if somebody's asking for",
    "start": "1409660",
    "end": "1415809"
  },
  {
    "text": "a particular what was your example post",
    "start": "1415809",
    "end": "1421150"
  },
  {
    "text": "and their comment and their whatever and their whatever and they're just going down one whole thing like your resolver should be such that it just follows that",
    "start": "1421150",
    "end": "1427300"
  },
  {
    "text": "one trail and doesn't load everything at this level and everything at that level and then everything at that level and",
    "start": "1427300",
    "end": "1432420"
  },
  {
    "text": "you may want to set up your top-level queries such that it's impossible to do",
    "start": "1432420",
    "end": "1439330"
  },
  {
    "text": "something that's gonna span all those those different things but there are other techniques you can do you can implement checks on how complex is this",
    "start": "1439330",
    "end": "1448179"
  },
  {
    "text": "query how much data is gonna pull various other things and just throw errors and say hey no you can't make",
    "start": "1448179",
    "end": "1454600"
  },
  {
    "text": "that query it's too much doesn't that break the promise of graça well I mean I'm supposed to be able to go to the",
    "start": "1454600",
    "end": "1460660"
  },
  {
    "text": "feign grab what I want yeah it does but",
    "start": "1460660",
    "end": "1467470"
  },
  {
    "text": "it is still your API and one of the trade-offs that you get as you create",
    "start": "1467470",
    "end": "1474280"
  },
  {
    "text": "this great flexibility is and this great power is there's now great responsibilities that you need to put",
    "start": "1474280",
    "end": "1480100"
  },
  {
    "text": "limits on it or you need to be confident that your back-end can handle every type",
    "start": "1480100",
    "end": "1485260"
  },
  {
    "text": "of query that can be crafted it seems",
    "start": "1485260",
    "end": "1491350"
  },
  {
    "text": "like it would map well on top of a denormalize database or a a document based database whereas if you are",
    "start": "1491350",
    "end": "1497050"
  },
  {
    "text": "retrofitting and graph QL API on top of an established highly relational charted",
    "start": "1497050",
    "end": "1503800"
  },
  {
    "text": "even like a very established relational database that you could potentially expose more",
    "start": "1503800",
    "end": "1509290"
  },
  {
    "text": "of the performance problems without unless you take a very precise and extreme measures in order to stop that",
    "start": "1509290",
    "end": "1515650"
  },
  {
    "text": "whereas maybe that's mapped on top of something that already is more document oriented you're not gonna be crossing",
    "start": "1515650",
    "end": "1520720"
  },
  {
    "text": "tables anyways because your data is right there stored in the same document is that a fair assumption I think that's",
    "start": "1520720",
    "end": "1526600"
  },
  {
    "text": "definitely fair I think it's really easy to if you're not careful create the",
    "start": "1526600",
    "end": "1536020"
  },
  {
    "text": "ability to do pathological queries and implementing a graph QL server on top of",
    "start": "1536020",
    "end": "1543820"
  },
  {
    "text": "a any sort of complex data situation is not a trivial task this is something",
    "start": "1543820",
    "end": "1549190"
  },
  {
    "text": "that you know there should be somebody who's an expert in that data system on there though one of the things you",
    "start": "1549190",
    "end": "1556390"
  },
  {
    "text": "highlight that that is kind of interesting to explore is you can also set up what is essentially a proxy layer",
    "start": "1556390",
    "end": "1563770"
  },
  {
    "text": "on top of an existing REST API so if you have a big established working system",
    "start": "1563770",
    "end": "1570220"
  },
  {
    "text": "and you have a REST API there you can set up a proxy that just is calling out",
    "start": "1570220",
    "end": "1575350"
  },
  {
    "text": "to your wrists endpoints and rest is very good for cache ability so you can",
    "start": "1575350",
    "end": "1580630"
  },
  {
    "text": "have that proxy be caching things in all appropriate ways and doing managing the cache so that you can take advantage of",
    "start": "1580630",
    "end": "1587410"
  },
  {
    "text": "those individual endpoints not being pathological and working well and with that you still get a lot of benefits in",
    "start": "1587410",
    "end": "1593800"
  },
  {
    "text": "terms of you insert typing such that you have all these tooling benefits exposed",
    "start": "1593800",
    "end": "1599440"
  },
  {
    "text": "to the client developers and you get that advantage that all of those",
    "start": "1599440",
    "end": "1604480"
  },
  {
    "text": "individual api have requests are happening inside of your fast data center instead of over the slow public",
    "start": "1604480",
    "end": "1611620"
  },
  {
    "text": "network that's pretty cool",
    "start": "1611620",
    "end": "1616290"
  },
  {
    "text": "coming back a little bit to implementation options so I guess that",
    "start": "1618850",
    "end": "1624929"
  },
  {
    "text": "piece of about being able to wrap a rest day be can imagine the graph cool proxy",
    "start": "1624929",
    "end": "1630220"
  },
  {
    "text": "as your bacon that you're wrapping around everything you know he makes everything taste better well played well",
    "start": "1630220",
    "end": "1636519"
  },
  {
    "text": "are you getting the specific ones that you might build I just want to mention that what I see a lot of which seems like is cool to try out craft oil from a",
    "start": "1636519",
    "end": "1644409"
  },
  {
    "text": "server-side provider it's probably not scalable and usable it's like so many these things are like hey we'll just",
    "start": "1644409",
    "end": "1649720"
  },
  {
    "text": "generate your graphical API for you isn't that I mean take your Postgres database take your MongoDB take your",
    "start": "1649720",
    "end": "1655840"
  },
  {
    "text": "existing REST API and just like slap us in front of it and now you have a graphic you LAPI I see a lot of those",
    "start": "1655840",
    "end": "1661029"
  },
  {
    "text": "tools and they are shiny and neat and I would play with them but I wouldn't necessarily think to roll that out on my",
    "start": "1661029",
    "end": "1667450"
  },
  {
    "text": "production system in my off-base that on that I don't think you're off base at all I think that those are I mean",
    "start": "1667450",
    "end": "1674649"
  },
  {
    "text": "similar to kind of vanilla active record that you might get in Ruby on Rails or",
    "start": "1674649",
    "end": "1681490"
  },
  {
    "text": "vanilla what have you they're great for fast prototyping they're great for early projects and as you develop scale and as",
    "start": "1681490",
    "end": "1689529"
  },
  {
    "text": "you have to deal with complex data you're gonna have to deal with those",
    "start": "1689529",
    "end": "1694720"
  },
  {
    "text": "problems as programming problems and you're gonna have to think about your schema design cool so Nick that's just a",
    "start": "1694720",
    "end": "1702250"
  },
  {
    "text": "nest is a specific node library that does this for you or yet you use to",
    "start": "1702250",
    "end": "1707409"
  },
  {
    "text": "build it yeah that you used to build it and so nest like default nest would be",
    "start": "1707409",
    "end": "1713830"
  },
  {
    "text": "for rest endpoints and then I have a plugin that lets you okay instead of instead of creating controllers for",
    "start": "1713830",
    "end": "1718899"
  },
  {
    "text": "those create resolvers for mutations and this is a tool like Express Jas or like",
    "start": "1718899",
    "end": "1724179"
  },
  {
    "text": "any sort of service like it's an HTTP library so it's a wrapper on top of",
    "start": "1724179",
    "end": "1729250"
  },
  {
    "text": "Express - oh it just kind of is wrapping a lot of frameworks now everything's a",
    "start": "1729250",
    "end": "1737590"
  },
  {
    "text": "meta framework right that's where the interesting stuff is how to get close to the metal and use Express Jas that's",
    "start": "1737590",
    "end": "1746860"
  },
  {
    "text": "kind of one of the the downsides that I didn't mention is if you just wanted to like do a quick query like there's",
    "start": "1746860",
    "end": "1752760"
  },
  {
    "text": "a lot of a lot more ceremony around making a request whereas with a rest endpoint I can just you know from my my",
    "start": "1752760",
    "end": "1759330"
  },
  {
    "text": "dev tools console use fetch and grab the data and I can still do that but I have to know exactly how the query is formed",
    "start": "1759330",
    "end": "1767520"
  },
  {
    "text": "like in that rest of alcohol and how arguments are passed and things like that and send it along but then another",
    "start": "1767520",
    "end": "1774750"
  },
  {
    "text": "thing that has always confused me when I look at rest is sorry a graph QL is there there seemed to be well are there",
    "start": "1774750",
    "end": "1783360"
  },
  {
    "text": "different flavors of it Apollo seems like a flavor that I don't know I might",
    "start": "1783360",
    "end": "1789060"
  },
  {
    "text": "be referring to it incorrectly but I always hear it referred to as like a flavor of graph QL is that an accurate",
    "start": "1789060",
    "end": "1795000"
  },
  {
    "text": "way of putting it that's a great question and I don't have a super strong sense I think well we",
    "start": "1795000",
    "end": "1805170"
  },
  {
    "text": "added a little labor a little more detail on that so there are multiple layers of there there have been",
    "start": "1805170",
    "end": "1812850"
  },
  {
    "text": "evolutions of the spec so as in anything with an evolving spec you're gonna have different flavors where people have",
    "start": "1812850",
    "end": "1820260"
  },
  {
    "text": "chosen to stick out of one version of spec and maybe haven't upgraded another thing that is interesting to look at and",
    "start": "1820260",
    "end": "1828210"
  },
  {
    "text": "explore is that graph QL has this essentially like abstraction leaker or",
    "start": "1828210",
    "end": "1834900"
  },
  {
    "text": "whatever for the the query language which is directives you can define relatively arbitrary and I haven't used",
    "start": "1834900",
    "end": "1841980"
  },
  {
    "text": "this too you know too much so I don't know the boundaries of that arbitrary but you can define relatively arbitrary",
    "start": "1841980",
    "end": "1847830"
  },
  {
    "text": "new behavior and logic in your graph QL API using directives and these can then",
    "start": "1847830",
    "end": "1853170"
  },
  {
    "text": "function essentially as decorators on your queries in different ways so that",
    "start": "1853170",
    "end": "1859850"
  },
  {
    "text": "is another way which different implementations of graph QL can potentially create what feel like",
    "start": "1860240",
    "end": "1867570"
  },
  {
    "text": "different flavors because if they have built-in decorators that aren't user defined but are just part of when you",
    "start": "1867570",
    "end": "1873240"
  },
  {
    "text": "install Apollo you get this but that's just that's mostly just me spitballing I don't have a super good sense",
    "start": "1873240",
    "end": "1882200"
  },
  {
    "text": "there's also aspects of it that are not defined in the spec but are like determined by the implementation and",
    "start": "1883480",
    "end": "1889480"
  },
  {
    "text": "people are starting to figure out norms such as like how do you handle pagination and whatnot where it's like",
    "start": "1889480",
    "end": "1894880"
  },
  {
    "text": "that's not formalized but Apollo does have a way that it does it and then like you can do it that way or maybe you can",
    "start": "1894880",
    "end": "1900549"
  },
  {
    "text": "do it some other way yeah I had to deal with pagination recently and I I it did not feel natural",
    "start": "1900549",
    "end": "1908559"
  },
  {
    "text": "and it was something where I essentially created a different top-level query and",
    "start": "1908559",
    "end": "1913840"
  },
  {
    "text": "a different object that included pagination related things and then had the repeating value or sir yeah yeah I",
    "start": "1913840",
    "end": "1922240"
  },
  {
    "text": "use a library called SJS query where I just give it a resolver and the DTO or",
    "start": "1922240",
    "end": "1928750"
  },
  {
    "text": "what what the queries will look like and it will automatically paginate everything that's one of the cool really",
    "start": "1928750",
    "end": "1935169"
  },
  {
    "text": "cool libraries that were using on top of all of this interesting what's that called called nest yes query okay",
    "start": "1935169",
    "end": "1942279"
  },
  {
    "text": "I feel like Nick probably doesn't never actually write code he just kind of like instructs things to do the coding for",
    "start": "1942279",
    "end": "1949659"
  },
  {
    "text": "him like he's like this is what I use grows on underneath there inside my vim",
    "start": "1949659",
    "end": "1955510"
  },
  {
    "text": "macro it does all the coding for me I think Nick is just operating at a higher",
    "start": "1955510",
    "end": "1961210"
  },
  {
    "text": "level of abstraction than the rest of us that's my point yeah a wizard or a fool",
    "start": "1961210",
    "end": "1968139"
  },
  {
    "text": "I can't figure out which one I think he's probably a wizard I use a wizard I'm really curious how they hand how",
    "start": "1968139",
    "end": "1974470"
  },
  {
    "text": "that handles pagination so what does it do to the underlying queries I'm looking",
    "start": "1974470",
    "end": "1981220"
  },
  {
    "text": "at their Doc's right now Oh interesting so they they do kind of a similar thing where they have a meta object that wraps",
    "start": "1981220",
    "end": "1990309"
  },
  {
    "text": "the underlying objects that includes a page info object and then an edges",
    "start": "1990309",
    "end": "1995559"
  },
  {
    "text": "object which has all the different whatever the results were that makes sense yeah so if that is a not into your so on",
    "start": "1995559",
    "end": "2006510"
  },
  {
    "text": "the client side Nick are you doing a client and the server side in this project are you using the graphic you",
    "start": "2006510",
    "end": "2012269"
  },
  {
    "text": "API you're not even using it yourself right that is something I wanted to bring up is",
    "start": "2012269",
    "end": "2017380"
  },
  {
    "text": "if you had any experience with like I guess service to service graph QL calls",
    "start": "2017380",
    "end": "2024100"
  },
  {
    "text": "like on the server side is that something that you you've handled before cable Oh interesting no it is not",
    "start": "2024100",
    "end": "2030130"
  },
  {
    "text": "because all of our servers to service stuff on our back end right now is using G RPC so we're not currently doing that",
    "start": "2030130",
    "end": "2039340"
  },
  {
    "text": "we only use graph QL to communicate to the client interesting yeah",
    "start": "2039340",
    "end": "2044620"
  },
  {
    "text": "so I've only been working on a proof of concept with this stuff for the last few weeks and it's all all sagar site mm-hmm",
    "start": "2044620",
    "end": "2052870"
  },
  {
    "text": "I just wondered how that how a client would they interact with the pagination like is it maybe the ought there's an",
    "start": "2052870",
    "end": "2059919"
  },
  {
    "text": "auto-generated client that knows that you're the way that nest does pagination",
    "start": "2059920",
    "end": "2065320"
  },
  {
    "text": "there's like a nest client that knows that and so they already do the pagination for you or something that's",
    "start": "2065320",
    "end": "2070540"
  },
  {
    "text": "so this this nest race query will you give it the the objects that you're",
    "start": "2070540",
    "end": "2075550"
  },
  {
    "text": "working with and it will define the schema that includes that page info and and edges has leaves in in that graph so",
    "start": "2075550",
    "end": "2083980"
  },
  {
    "text": "you can the client knows exactly what it can expect from that on any kind of page",
    "start": "2083980",
    "end": "2089649"
  },
  {
    "text": "of all resolver gotcha",
    "start": "2089650",
    "end": "2095099"
  },
  {
    "text": "that's interesting yeah that's I think that's actually pretty cool how it's",
    "start": "2101710",
    "end": "2107330"
  },
  {
    "text": "dealing with pagination looking at that now and one thing that so is nest nest",
    "start": "2107330",
    "end": "2112850"
  },
  {
    "text": "only handles the server side where it's generating for you all that client side work as well so that you plug that into",
    "start": "2112850",
    "end": "2118520"
  },
  {
    "text": "whatever you're doing on the client what would be required on the front end on",
    "start": "2118520",
    "end": "2126410"
  },
  {
    "text": "the client ID want to have access to all",
    "start": "2126410",
    "end": "2131660"
  },
  {
    "text": "of the types clearly I'd like to I guess",
    "start": "2131660",
    "end": "2138320"
  },
  {
    "text": "that's the main thing is the types and then whatever library is handling how it runs queries and doing caching and",
    "start": "2138320",
    "end": "2143390"
  },
  {
    "text": "things like that so it's I guess the question is is it exporting all those types it has to you",
    "start": "2143390",
    "end": "2149270"
  },
  {
    "text": "alright I've answered my own question that's something that I haven't really touched on yet in my exploration and so",
    "start": "2149270",
    "end": "2156650"
  },
  {
    "text": "I assume that somehow the client would be would have access to the schema is that right maybe or like at least like",
    "start": "2156650",
    "end": "2163670"
  },
  {
    "text": "it from a tooling level like it knows what it can query based on that and then tools like like Apollo",
    "start": "2163670",
    "end": "2169970"
  },
  {
    "text": "Oh Jen will from what I've gathered that will go through like an ast Walker and",
    "start": "2169970",
    "end": "2175400"
  },
  {
    "text": "just find all of the places where you're making graph queue alcohols look at those queries and then define interfaces",
    "start": "2175400",
    "end": "2181760"
  },
  {
    "text": "in typescript that match exactly what you'd be getting back or we expect to get back yes that is correct",
    "start": "2181760",
    "end": "2190040"
  },
  {
    "text": "but I guess what I would want ideally since Ness jess is also doing this all",
    "start": "2190040",
    "end": "2195290"
  },
  {
    "text": "in JavaScript or typescript I would love something that lets me have end-to-end because right now I'm doing graph QL in",
    "start": "2195290",
    "end": "2201710"
  },
  {
    "text": "Python and then I'm on the server side and then I'm querying it with JavaScript and there's always this step of okay my",
    "start": "2201710",
    "end": "2207260"
  },
  {
    "text": "client thinks it's doing this it sends this query and then the backend says wait what are you talking about that's not a query right but presumably if",
    "start": "2207260",
    "end": "2213890"
  },
  {
    "text": "you're doing everything end-to-end in JavaScript or typescript you can deal with that and catch it at the tooling",
    "start": "2213890",
    "end": "2219590"
  },
  {
    "text": "level rather than at the testing runtime level yeah presumably I mean I think",
    "start": "2219590",
    "end": "2227720"
  },
  {
    "text": "Apolo cogent looks at the graph QL schema so it does some amount of that I",
    "start": "2227720",
    "end": "2232820"
  },
  {
    "text": "don't know we're getting outside of my six months experience what I've done in",
    "start": "2232820",
    "end": "2241790"
  },
  {
    "text": "the past for for that kind of sharing is and not with graph QL but with like",
    "start": "2241790",
    "end": "2246800"
  },
  {
    "text": "restful endpoints is I've used so Nest has a plugin for swagger so it'll",
    "start": "2246800",
    "end": "2252980"
  },
  {
    "text": "generate Auto generate swagger documentation for all of your endpoints for restful calls and you can export",
    "start": "2252980",
    "end": "2258859"
  },
  {
    "text": "that as a JSON file and then I just written a parser that goes through the",
    "start": "2258859",
    "end": "2264680"
  },
  {
    "text": "JSON and creates interfaces out of that that are then just automatically generated and placed into the project",
    "start": "2264680",
    "end": "2271570"
  },
  {
    "text": "not the most straightforward way but it is a way to kind of not have to think",
    "start": "2271570",
    "end": "2276590"
  },
  {
    "text": "about writing all of those interfaces I love it Nick you always find a way to",
    "start": "2276590",
    "end": "2282230"
  },
  {
    "text": "Auto jen-jen always I need to suck some of that stuff into my head you know like",
    "start": "2282230",
    "end": "2287900"
  },
  {
    "text": "i toil away at my code and make just kind of like tells things to do things for him hang out with you more work less",
    "start": "2287900",
    "end": "2296080"
  },
  {
    "text": "alright I think that's another good spot for a break cut ok I breaks anyone",
    "start": "2296080",
    "end": "2311290"
  },
  {
    "text": "mm-hmm drinking water cable it's like",
    "start": "2311320",
    "end": "2316550"
  },
  {
    "text": "it's not like you normally just run off to the coffee machine on the break I know but I'm not in a good spot for that",
    "start": "2316550",
    "end": "2323810"
  },
  {
    "text": "no because I'm in our mostly abandoned office for the company I work at we have",
    "start": "2323810",
    "end": "2329390"
  },
  {
    "text": "to coordinate we only allow one person at a time right now because oh wow you're the one I'm the one for this hour",
    "start": "2329390",
    "end": "2335359"
  },
  {
    "text": "and a half two hour stretch but I don't think the coffee machines are on well",
    "start": "2335359",
    "end": "2344359"
  },
  {
    "text": "we're happy to have you back and in the limited capacity that we have you will take whatever cable we can get mm-hmm I",
    "start": "2344359",
    "end": "2349880"
  },
  {
    "text": "did already drink quite a few cups this morning so I actually tried to code up",
    "start": "2349880",
    "end": "2355550"
  },
  {
    "text": "an auto-generated Kay ball but it didn't work out like we thought it would and you I want to hear more about that",
    "start": "2355550",
    "end": "2361780"
  },
  {
    "text": "well you can't cuz I just made it up Nick tell him more about the K ball you tried it right well it's just layers of",
    "start": "2361780",
    "end": "2370160"
  },
  {
    "text": "abstraction construct anything enough that you eventually just end up talking",
    "start": "2370160",
    "end": "2375890"
  },
  {
    "text": "about them with me so yeah well you know now we can hang out and talk typescript too because I've been in that world a",
    "start": "2375890",
    "end": "2381800"
  },
  {
    "text": "lot but anyway we should probably get back get back to graph QL I was thinking",
    "start": "2381800",
    "end": "2393220"
  },
  {
    "text": "just some more stories from the trenches on it but if you all have other things that you think we didn't cover or we",
    "start": "2393220",
    "end": "2400520"
  },
  {
    "text": "talked about fragments and fragment roll-up that's a kind of interesting area as well one thing that hasn't been",
    "start": "2400520",
    "end": "2407390"
  },
  {
    "text": "covered at all which I think a lot of people gap on I don't know anything about so I don't talk about it is like",
    "start": "2407390",
    "end": "2413180"
  },
  {
    "text": "the mutation side like most of the stuff is about the queries and the reading and the data fetching but like how do you",
    "start": "2413180",
    "end": "2419030"
  },
  {
    "text": "change things you know and what are the not just how do mutations work but like what is that your experience and the",
    "start": "2419030",
    "end": "2424250"
  },
  {
    "text": "nitty gritty on that I think that'd be worth covering I don't have it yeah to the extent I have it which is really",
    "start": "2424250",
    "end": "2430180"
  },
  {
    "text": "relative you don't either the W in the",
    "start": "2430180",
    "end": "2437390"
  },
  {
    "text": "RW of an API it's gotta be read and write yeah it's a read-only API okay while we're on",
    "start": "2437390",
    "end": "2448220"
  },
  {
    "text": "break oh no I don't have it on this laptop nevermind I was gonna pull up some of the code base that I've been",
    "start": "2448220",
    "end": "2453440"
  },
  {
    "text": "working in and take a look real quick but I know I'm on the wrong laptop all",
    "start": "2453440",
    "end": "2459800"
  },
  {
    "text": "right we'll just roll back and we'll talk a little bit about mutations and then I don't have to I'm just that was",
    "start": "2459800",
    "end": "2465800"
  },
  {
    "text": "just an idea now I think I think it is",
    "start": "2465800",
    "end": "2472210"
  },
  {
    "text": "let me take a look real quick and what",
    "start": "2472210",
    "end": "2479750"
  },
  {
    "text": "that looks like I'm gonna get AB signed [Music]",
    "start": "2479750",
    "end": "2488730"
  },
  {
    "text": "alright alright let's get back into it and talk about one subject that we have",
    "start": "2489090",
    "end": "2496660"
  },
  {
    "text": "not talked about much yet which is mutations how do you actually change data using a graph QL API this is",
    "start": "2496660",
    "end": "2503230"
  },
  {
    "text": "something that Jared was talking about on the break he said well you know you have a read write API we've only talked about read how does write work a query",
    "start": "2503230",
    "end": "2510430"
  },
  {
    "text": "in language not a it squealing but if you're gonna replace rest rest you've",
    "start": "2510430",
    "end": "2516820"
  },
  {
    "text": "got to do some amount of updating those things state transfer write or crud",
    "start": "2516820",
    "end": "2522580"
  },
  {
    "text": "create read update and delete how is that gonna work so who wants to lead us",
    "start": "2522580",
    "end": "2528880"
  },
  {
    "text": "off here I'll go last also not at all yeah I have not are in",
    "start": "2528880",
    "end": "2539500"
  },
  {
    "text": "my POC yet Nick will get back to us so see UK ball how do you mean all right",
    "start": "2539500",
    "end": "2545560"
  },
  {
    "text": "that's me so I think the way to think about mutations is it's actually coming",
    "start": "2545560",
    "end": "2552910"
  },
  {
    "text": "back to this question of query design and API design it's much more explicit",
    "start": "2552910",
    "end": "2559270"
  },
  {
    "text": "or at least has the potential to be much more explicit so we talked about how all the queries are this kind of graph",
    "start": "2559270",
    "end": "2566230"
  },
  {
    "text": "descending from the top-level query so you have query you define what the first level of things you're allowed to query",
    "start": "2566230",
    "end": "2572080"
  },
  {
    "text": "is and then you can follow relationships down through the different resources through the types on the mutation side",
    "start": "2572080",
    "end": "2581250"
  },
  {
    "text": "it's similar in that you have a top level mutation object where you're",
    "start": "2581250",
    "end": "2587230"
  },
  {
    "text": "defining the mutations that are allowed to happen and I have not used this a",
    "start": "2587230",
    "end": "2593890"
  },
  {
    "text": "huge amount so I'm not an expert on this at all I don't actually have a strong sense the extent to which there is that",
    "start": "2593890",
    "end": "2600850"
  },
  {
    "text": "same level of nesting and following relationships but if you look at the mutations part of the graph QL API what",
    "start": "2600850",
    "end": "2607570"
  },
  {
    "text": "you'll see is they have a shit-ton of mutations defined and they're all very",
    "start": "2607570",
    "end": "2615040"
  },
  {
    "text": "explicit so whereas an arrestee yeah you might assume that you're gonna expose mostly crud functions so you just",
    "start": "2615040",
    "end": "2622630"
  },
  {
    "text": "have an update endpoint that lets you update the fields on your object and maybe there's some permissions around that or what-have-you",
    "start": "2622630",
    "end": "2628090"
  },
  {
    "text": "in a graph QL API you're gonna have much",
    "start": "2628090",
    "end": "2634060"
  },
  {
    "text": "more explicit mutations and some of those may be just update this object and use pass in the new object types or",
    "start": "2634060",
    "end": "2640180"
  },
  {
    "text": "things around that but if you look at for example the github API there's a lot",
    "start": "2640180",
    "end": "2645369"
  },
  {
    "text": "of things about accept this suggestion clone this thing do this thing you have a mutation for each type of action that",
    "start": "2645369",
    "end": "2652060"
  },
  {
    "text": "you're wanting to enable and so it feels in some ways much more like defining an",
    "start": "2652060",
    "end": "2658170"
  },
  {
    "text": "internal API that you might call programmatically rather than this model",
    "start": "2658170",
    "end": "2665530"
  },
  {
    "text": "that I think crud particularly and the combo of crud and rest a lot of stuff",
    "start": "2665530",
    "end": "2671170"
  },
  {
    "text": "got sort of gone together where most REST API czar just implementing crud functionality this idea of I just have",
    "start": "2671170",
    "end": "2678250"
  },
  {
    "text": "an object and I'm gonna give you new fields for it or new override certain fields for it it's more towards what",
    "start": "2678250",
    "end": "2685270"
  },
  {
    "text": "type of API would I extend inside of my project add this thing do this thing",
    "start": "2685270",
    "end": "2693160"
  },
  {
    "text": "change this thing where I'm explicitly calling out the fields that I want from you and because everything is strongly",
    "start": "2693160",
    "end": "2698530"
  },
  {
    "text": "typed I can have those fields be objects with particular types but that's kind of",
    "start": "2698530",
    "end": "2705160"
  },
  {
    "text": "where it goes and I think you can specify you for an object which fields",
    "start": "2705160",
    "end": "2710859"
  },
  {
    "text": "do you accept in that mutation as well so it may not be every field and that object but instead say hey I want you",
    "start": "2710859",
    "end": "2717940"
  },
  {
    "text": "can pass in this object but really only these fields from this object I want you",
    "start": "2717940",
    "end": "2724540"
  },
  {
    "text": "do something like a delete then would you say here's a mutation called delete post and you call it a solution yep if",
    "start": "2724540",
    "end": "2732520"
  },
  {
    "text": "you look at the once again the github API is a great public example and it's",
    "start": "2732520",
    "end": "2737920"
  },
  {
    "text": "super well documented they have delete issue delete issue comment to eat label delete package",
    "start": "2737920",
    "end": "2743350"
  },
  {
    "text": "version delete project delete project card all of these are top-level mutations that they expose",
    "start": "2743350",
    "end": "2750090"
  },
  {
    "text": "do each of those then have your now I'm gonna assume that you understand how",
    "start": "2757839",
    "end": "2762859"
  },
  {
    "text": "github back-end works but each of those has then a resolver that takes care of that functionality some sort of function",
    "start": "2762859",
    "end": "2768829"
  },
  {
    "text": "that lives somewhere that says delete this thing and then it goes and make sure you can do that and it has any sort",
    "start": "2768829",
    "end": "2774799"
  },
  {
    "text": "of like background jobs that have to happen when that happens and it resolves that and how that works on the API side",
    "start": "2774799",
    "end": "2782140"
  },
  {
    "text": "yeah and I think that level I'm sure there's details missing there I'm sure there are and there may be abstractions",
    "start": "2782140",
    "end": "2788869"
  },
  {
    "text": "in there or whatever but yeah it's very very explicit in terms of what changes are enabled and allowed is there a",
    "start": "2788869",
    "end": "2797569"
  },
  {
    "text": "standard for like what gets returned from the mutation not that I'm aware of",
    "start": "2797569",
    "end": "2805719"
  },
  {
    "text": "so in the case of github there's an add star delete team discussion the input is",
    "start": "2811359",
    "end": "2824359"
  },
  {
    "text": "the delete team discussion input and the return fields is the client mutation idea a unique identifier for the client",
    "start": "2824359",
    "end": "2829910"
  },
  {
    "text": "performing the mutation so probably a",
    "start": "2829910",
    "end": "2834920"
  },
  {
    "text": "minimal response you seem like you'd had like a success or a failure kind of thing in this case maybe if it's a",
    "start": "2834920",
    "end": "2840410"
  },
  {
    "text": "success they just return the client ID I was trying to find the lead star I found",
    "start": "2840410",
    "end": "2845749"
  },
  {
    "text": "add star delete issue returns two fields",
    "start": "2845749",
    "end": "2850759"
  },
  {
    "text": "the client mutation ID which is the same as the other one and the repository that the issue belonged to which I assume is",
    "start": "2850759",
    "end": "2858140"
  },
  {
    "text": "the entire object not just the repository ID so even amongst github",
    "start": "2858140",
    "end": "2864769"
  },
  {
    "text": "responses it seems they're consistent but not like identical yeah that's that",
    "start": "2864769",
    "end": "2871549"
  },
  {
    "text": "and I was going to kind of ask about like error handling too like if there's any kind of standard for that and and",
    "start": "2871549",
    "end": "2878630"
  },
  {
    "text": "the reason I'm asking is like when you implement this like like Apollo for example",
    "start": "2878630",
    "end": "2884750"
  },
  {
    "text": "would Apollo handle errors like on the client-side different from like another library but you might be using to hit on",
    "start": "2884750",
    "end": "2892160"
  },
  {
    "text": "Apollo back-end is there some kind of standard that is followed or is it just",
    "start": "2892160",
    "end": "2898010"
  },
  {
    "text": "abstractions all the way up that's a girl boy yeah and I don't have the",
    "start": "2898010",
    "end": "2903860"
  },
  {
    "text": "answer for you there and let me see we're gonna talk about error handling",
    "start": "2903860",
    "end": "2912350"
  },
  {
    "text": "I feel like an Apollo what happens is it sends back essentially a message saying",
    "start": "2912350",
    "end": "2918410"
  },
  {
    "text": "there was an error go check your graphical server I don't remember like I",
    "start": "2918410",
    "end": "2924500"
  },
  {
    "text": "don't know the top of my head and that definitely feels like a place where we have a little bit of a hole one thing",
    "start": "2924500",
    "end": "2932240"
  },
  {
    "text": "that is kind of odd is graph QL will return a success code with an error",
    "start": "2932240",
    "end": "2939200"
  },
  {
    "text": "message rather than it being an HTTP error so that's kind of funky is they're",
    "start": "2939200",
    "end": "2948920"
  },
  {
    "text": "using eight they're using HTTP as a transport layer not really exactly exactly",
    "start": "2948920",
    "end": "2954760"
  },
  {
    "text": "in fact I think it may not even necessarily like I'm not sure that's",
    "start": "2954760",
    "end": "2962120"
  },
  {
    "text": "part of the spec so much as that is just a common choice I'm gonna say we have a transport layer it's called TCP so it's",
    "start": "2962120",
    "end": "2970970"
  },
  {
    "text": "like HTTP would be superfluous in that use that means yeah but it makes it easy",
    "start": "2970970",
    "end": "2976520"
  },
  {
    "text": "to build client-side interactions with it all right like you want to be able to hit this thing from a browser and it's",
    "start": "2976520",
    "end": "2984290"
  },
  {
    "text": "way easier to hit an HTTP based API than a TCP based API right so real-time",
    "start": "2984290",
    "end": "2990590"
  },
  {
    "text": "follow-up on the github API the reasons I couldn't find delete stars there is not one it's called a remove star and",
    "start": "2990590",
    "end": "2996460"
  },
  {
    "text": "that out that's the delete function is every remove so because you know now",
    "start": "2996460",
    "end": "3003370"
  },
  {
    "text": "they're they're more semantic like you know do you delete a star really well you just kind of remove the fact that",
    "start": "3003370",
    "end": "3009220"
  },
  {
    "text": "you started that repo so there be a little bit more descriptive but less discoverable because I'm everything else",
    "start": "3009220",
    "end": "3015070"
  },
  {
    "text": "says delete and then I guess the start remove yeah what you want to bet those were implemented by different teams and",
    "start": "3015070",
    "end": "3021040"
  },
  {
    "text": "the ones doing delete these things there's a whole set that are removed there's a whole set that are delete and",
    "start": "3021040",
    "end": "3026130"
  },
  {
    "text": "maybe they have an internal consistency for which things but yeah the fun of API",
    "start": "3026130",
    "end": "3033490"
  },
  {
    "text": "design so there's a cool question come",
    "start": "3033490",
    "end": "3041620"
  },
  {
    "text": "out of the chat room from Lars maybe one of you two can help him out",
    "start": "3041620",
    "end": "3046650"
  },
  {
    "text": "and he asks where do you learn the",
    "start": "3046650",
    "end": "3054250"
  },
  {
    "text": "actual QL where do you learn the query language what's the best resource for learning the query language that's a",
    "start": "3054250",
    "end": "3061660"
  },
  {
    "text": "great question there's a website called how to graph QL comm that has sort of",
    "start": "3061660",
    "end": "3070240"
  },
  {
    "text": "interactive tutorials and a bunch of stuff and I've heard of a few things I've heard folks talk about that as a",
    "start": "3070240",
    "end": "3076270"
  },
  {
    "text": "good resource I have not actually used it because I learned it all on the job so I just kind of learned it by looking",
    "start": "3076270",
    "end": "3082210"
  },
  {
    "text": "at the code that we had and then sitting developers down when I got stuck in me like what the heck is going on here can",
    "start": "3082210",
    "end": "3088930"
  },
  {
    "text": "you explain this to me but I've heard great things about how to graph QL comm why you Nick I will definitely check",
    "start": "3088930",
    "end": "3096880"
  },
  {
    "text": "that out but mine has also been on-the-job learning and kind of looking at other queries but we like I said this",
    "start": "3096880",
    "end": "3103510"
  },
  {
    "text": "is a proof of concept so we don't really have like established queries lying around anywhere so it's more just what",
    "start": "3103510",
    "end": "3110440"
  },
  {
    "text": "have I typed into the graphical interface and then I heavily rely on the",
    "start": "3110440",
    "end": "3116460"
  },
  {
    "text": "control space to tell me what I can and can't do m in this and then it's like",
    "start": "3116460",
    "end": "3121930"
  },
  {
    "text": "it's like throwing spaghetti at the wall to see what sticks and you also got the other road you know you can go back to your history what if I take before up",
    "start": "3121930",
    "end": "3128320"
  },
  {
    "text": "arrow up arrow arrow arrow key sorry",
    "start": "3128320",
    "end": "3133800"
  },
  {
    "text": "LK okay I don't know okay okay okay",
    "start": "3133800",
    "end": "3141540"
  },
  {
    "text": "Groff Georg itself is also pretty good and it's got reasonable learn resources",
    "start": "3145610",
    "end": "3152970"
  },
  {
    "text": "though they also reference straight out to have how to graph QL for doing tutorial related stuff they've got a",
    "start": "3152970",
    "end": "3159990"
  },
  {
    "text": "bunch of interesting things there what does the query link result as simple as",
    "start": "3159990",
    "end": "3166110"
  },
  {
    "text": "simple enough that everything I needed to know at the time that I was using it was basically just like clicking and",
    "start": "3166110",
    "end": "3171780"
  },
  {
    "text": "seen in the graphical editor the query that it generated based on what I was",
    "start": "3171780",
    "end": "3176940"
  },
  {
    "text": "trying to do and it's pretty straightforward to just copy and paste that around and you know tweak it so I",
    "start": "3176940",
    "end": "3184500"
  },
  {
    "text": "didn't feel like there was all that much to learn on that side which is probably one of the reasons why it is so beloved",
    "start": "3184500",
    "end": "3189900"
  },
  {
    "text": "by front Enders and people who just want to get their data and get on with their day is that there's not too much to learn on the query side on the",
    "start": "3189900",
    "end": "3196020"
  },
  {
    "text": "implementation side and maybe on the mutation side as well I'm not sure seems like there's a whole bunch there but",
    "start": "3196020",
    "end": "3202320"
  },
  {
    "text": "yeah I think we just saw was pretty basic absolutely one I think that's one of the one of the easy gotchas in graph",
    "start": "3202320",
    "end": "3210240"
  },
  {
    "text": "QL is folks will come in and particularly folks who are just on the front end side will come in and say hey",
    "start": "3210240",
    "end": "3215670"
  },
  {
    "text": "this makes my life so much easier but we can just throw it in and it's gonna make everything golden and what I",
    "start": "3215670",
    "end": "3223320"
  },
  {
    "text": "have seen having to do a lot of retrofitting work on the server side here is that that approach leads to",
    "start": "3223320",
    "end": "3230400"
  },
  {
    "text": "catastrophic ly slow graph QL servers poorly designed schema and various other",
    "start": "3230400",
    "end": "3236400"
  },
  {
    "text": "things so this is a real domain there",
    "start": "3236400",
    "end": "3241410"
  },
  {
    "text": "are real concerns and if you're creating that server-side implementation it's",
    "start": "3241410",
    "end": "3248460"
  },
  {
    "text": "gonna go a lot better if you have some understanding of your underlying data systems and how they work mm-hm",
    "start": "3248460",
    "end": "3257599"
  },
  {
    "text": "one aspect of graphical we haven't brought up which i think is the coolest use case of it so far is the way the",
    "start": "3257810",
    "end": "3263250"
  },
  {
    "text": "gatsby uses it to normalize all these disparate data sources into a single graph QL usable thing and I had a lot of",
    "start": "3263250",
    "end": "3272100"
  },
  {
    "text": "complexity and those things and of course you could have especially if you're spanning multiple data sources and stuff it could get real",
    "start": "3272100",
    "end": "3277770"
  },
  {
    "text": "hairy but conceptually I think that is super rad I think it's the coolest thing about Gatsby it is super cool in it it",
    "start": "3277770",
    "end": "3284820"
  },
  {
    "text": "lets them create a dissociation between data source and accessing that data",
    "start": "3284820",
    "end": "3290700"
  },
  {
    "text": "source so all that you have to do to incorporate a new data source with a new way of interacting is you write",
    "start": "3290700",
    "end": "3296180"
  },
  {
    "text": "something that knows how to translate from that to graph QL and then your",
    "start": "3296180",
    "end": "3303240"
  },
  {
    "text": "client code just behaves in the same old way it's always behaved and I think that",
    "start": "3303240",
    "end": "3308610"
  },
  {
    "text": "is a really neat way to do it and they do it at Build time but one could",
    "start": "3308610",
    "end": "3313680"
  },
  {
    "text": "imagine doing that in real time too in that wrapping approach that I mentioned where you wrap around all sorts of",
    "start": "3313680",
    "end": "3320730"
  },
  {
    "text": "different api's and provide a single consistent interface to them you're not",
    "start": "3320730",
    "end": "3330420"
  },
  {
    "text": "only gonna have me disagree with wrapping once again graph QL is the",
    "start": "3330420",
    "end": "3335760"
  },
  {
    "text": "bacon that's gonna make everything better but if you're not careful you'll get a little bit bloated if you have too",
    "start": "3335760",
    "end": "3341820"
  },
  {
    "text": "much bacon you don't know how much I've",
    "start": "3341820",
    "end": "3348630"
  },
  {
    "text": "missed playing with these puns and metaphors with you all all right",
    "start": "3348630",
    "end": "3355350"
  },
  {
    "text": "anything else that you all want to talk about or ask about on graph QL while we're here oh one thing we didn't talk",
    "start": "3355350",
    "end": "3361320"
  },
  {
    "text": "about was this concept of fragments which i think is also quite interesting particularly on the client side so",
    "start": "3361320",
    "end": "3369540"
  },
  {
    "text": "fragments allows you to essentially take sub pieces of a graph QL query and treat",
    "start": "3369540",
    "end": "3377850"
  },
  {
    "text": "them as their own individual queries but then kind of roll them up so that you only do that one big query at the top so",
    "start": "3377850",
    "end": "3383940"
  },
  {
    "text": "in the code that I'm working with right now each component thinks in its own set",
    "start": "3383940",
    "end": "3391980"
  },
  {
    "text": "of data that it's going to run or that it's going to query and it writes a fragment but then the top level page",
    "start": "3391980",
    "end": "3397670"
  },
  {
    "text": "loads up all those fragments composes them into a single query and only hits the API once so it lets you as a",
    "start": "3397670",
    "end": "3405690"
  },
  {
    "text": "developer think only of the data that you need for the piece that you're working on but then from a",
    "start": "3405690",
    "end": "3414119"
  },
  {
    "text": "performance standpoint you can normalize all that so you're doing a single query that's going to generate the info that",
    "start": "3414119",
    "end": "3421049"
  },
  {
    "text": "you need and send that all at once to the server and get it all back right on page load another nice done with",
    "start": "3421049",
    "end": "3426960"
  },
  {
    "text": "fragments is that it will it'll give you an interface name and type script with with like Apollo code gen very example",
    "start": "3426960",
    "end": "3433440"
  },
  {
    "text": "that is the name of that fragment so if you need to reference that type later you easily have access to it and and can",
    "start": "3433440",
    "end": "3441839"
  },
  {
    "text": "pull it from there because otherwise it gives it some really funky name that's like whatever the query name is",
    "start": "3441839",
    "end": "3447089"
  },
  {
    "text": "underscore result under like just a lot of underscores in there which looks ugly",
    "start": "3447089",
    "end": "3454039"
  },
  {
    "text": "yeah so yeah fragments are super interesting area and there are tools",
    "start": "3454039",
    "end": "3460980"
  },
  {
    "text": "like relay which will automatically roll up all those fragments but it's also not super hard to kind of explicitly roll up",
    "start": "3460980",
    "end": "3468960"
  },
  {
    "text": "and import your fragments with that I",
    "start": "3468960",
    "end": "3476130"
  },
  {
    "text": "think we've covered a heck of a lot about graph QL thank you for indulging me this has been fun we'll sign off till",
    "start": "3476130",
    "end": "3484470"
  },
  {
    "text": "next week thank you Jared Thank You Nick and the party will continue same time",
    "start": "3484470",
    "end": "3490140"
  },
  {
    "text": "same channel next week ten o'clock Pacific and whatever time it is for you",
    "start": "3490140",
    "end": "3495930"
  },
  {
    "text": "all take care bye bye",
    "start": "3495930",
    "end": "3501529"
  },
  {
    "text": "alright cue balls back you did it",
    "start": "3504499",
    "end": "3509479"
  },
  {
    "text": "definitely noticing a little bit of rest but rusty on the sign off I could tell you like yeah honey",
    "start": "3510199",
    "end": "3523579"
  }
]