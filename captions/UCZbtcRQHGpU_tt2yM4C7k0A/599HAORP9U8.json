[
  {
    "text": "we could spend an hour on tabs versus spaces if you'd prefer tabs yeah definitely tabs I mean no question but",
    "start": "40",
    "end": "5720"
  },
  {
    "text": "but oh please that's just like a waste of waste of energy preserve your",
    "start": "5720",
    "end": "11000"
  },
  {
    "text": "knuckles people like you know you need to use them for a long time being with for Chang log is",
    "start": "11000",
    "end": "17039"
  },
  {
    "text": "provided by fastly learn more at fastly.com we move fast and fix things",
    "start": "17039",
    "end": "22199"
  },
  {
    "text": "here at change log because of rollar check them out at roar.com and we're hosted on Leno Cloud servers at the",
    "start": "22199",
    "end": "28519"
  },
  {
    "text": "lin.com log this episode is brought to you by",
    "start": "28519",
    "end": "33800"
  },
  {
    "text": "rbar move fast and fix things resolve errors of minutes and deploy with confidence head to roar.com changelog",
    "start": "33800",
    "end": "41760"
  },
  {
    "text": "requested demo get started today it's loved by developers trusted by Enterprises and most of all we use it",
    "start": "41760",
    "end": "48399"
  },
  {
    "text": "here at change log move fast and fix things with rollar once again rar.com",
    "start": "48399",
    "end": "55570"
  },
  {
    "text": "[Music] changelog",
    "start": "55570",
    "end": "61920"
  },
  {
    "text": "[Music] you are listening to JS party a weekly",
    "start": "63730",
    "end": "68960"
  },
  {
    "text": "celebration of JavaScript and the web we record live on Thursdays at 1: p.m. us",
    "start": "68960",
    "end": "75119"
  },
  {
    "text": "eastern time and you should join in on the H Jinx it's absolutely free at change.com Community hop in our slack",
    "start": "75119",
    "end": "81680"
  },
  {
    "text": "hit up the JS party channel the bigger the Live party the better if this is your first time listening make sure you",
    "start": "81680",
    "end": "86960"
  },
  {
    "text": "subscribe at cha.com sjsp party or or wherever you get your podcasts it's",
    "start": "86960",
    "end": "92320"
  },
  {
    "text": "party time",
    "start": "92320",
    "end": "94798"
  },
  {
    "text": "y'all oh yes it's time once again friends it's time for JS party I'm Jared",
    "start": "102119",
    "end": "108119"
  },
  {
    "text": "I'm your friend and I'm joined by some of my friends Nick ni joins us today what's up Nick ho ho ho and AML Hussein",
    "start": "108119",
    "end": "115240"
  },
  {
    "text": "is back what's up am hey everyone and we are also joined by by a special guest",
    "start": "115240",
    "end": "121000"
  },
  {
    "text": "Yanni Goldberg the curator Creator and maintainer of the node best practices",
    "start": "121000",
    "end": "127119"
  },
  {
    "text": "repo on GitHub Yanni thanks for coming on JS party thanks for inviting me so happy to be here yes we are happy to",
    "start": "127119",
    "end": "134239"
  },
  {
    "text": "have you and we're happy to learn and discuss from you you have this really",
    "start": "134239",
    "end": "139280"
  },
  {
    "text": "cool set of node best practices which a lot of these repos on GitHub start off",
    "start": "139280",
    "end": "144760"
  },
  {
    "text": "cool and then they just kind of fall into disrepair or you know non-maintenance and one thing that",
    "start": "144760",
    "end": "149959"
  },
  {
    "text": "impressed me about this repo is that you've kept it up to dat and active uh",
    "start": "149959",
    "end": "155120"
  },
  {
    "text": "over time so give us the lowdown on this where it came from why you started it",
    "start": "155120",
    "end": "161159"
  },
  {
    "text": "and what's going on with this project sure so it all goes back to when I was a",
    "start": "161159",
    "end": "167400"
  },
  {
    "text": "net developer like 15 years ago Microsoft has a team that was called the patterns and practices team they was",
    "start": "167400",
    "end": "174400"
  },
  {
    "text": "kind of inspiring everyone how to write code and the entire net community follow",
    "start": "174400",
    "end": "180159"
  },
  {
    "text": "their advice and I kind of admired them I wanted to be part of the patterns and practices tools this didn't happen but",
    "start": "180159",
    "end": "188120"
  },
  {
    "text": "once I um switched to no JS there was no almost no practices and understanding",
    "start": "188120",
    "end": "193920"
  },
  {
    "text": "how you build an application unlike Java rubil have a very strong opinion on um",
    "start": "193920",
    "end": "200840"
  },
  {
    "text": "the application structure so this was my chance to to be a patterns and practices of no JS I put a lot of effort into it",
    "start": "200840",
    "end": "208439"
  },
  {
    "text": "and uh to extent it worked yeah it's interesting when you have a brand new ecosystem spring out of nowhere and go",
    "start": "208439",
    "end": "214879"
  },
  {
    "text": "into such a place of use right like it became from very small uh start just",
    "start": "214879",
    "end": "220840"
  },
  {
    "text": "exploding and used in so many different ways and Enterprises and hobbies that",
    "start": "220840",
    "end": "226920"
  },
  {
    "text": "there's opportunity right in them Hills is like okay I can be the best practices guy if I just go ahead and and put the",
    "start": "226920",
    "end": "234760"
  },
  {
    "text": "effort in and did you come up with the best practices did you find them from other people you know where does the",
    "start": "234760",
    "end": "241239"
  },
  {
    "text": "actual content come from out of your brain partially it was a mix between",
    "start": "241239",
    "end": "246519"
  },
  {
    "text": "things that are common knowledge for in other platforms and you just should just import them into no jsland other stuff",
    "start": "246519",
    "end": "254000"
  },
  {
    "text": "need some adaptation into the node GS word uh because node has some special",
    "start": "254000",
    "end": "259359"
  },
  {
    "text": "characteristics and behavior so some of the stuff needed to be adjusted and there was also quite a bit opinionated",
    "start": "259359",
    "end": "266080"
  },
  {
    "text": "decision to make like what is the right architecture for OJs is it one from the Java world or from the Ruby uh ecosystem",
    "start": "266080",
    "end": "275320"
  },
  {
    "text": "so it was a mix of different type of contents and decision to make I'll guess",
    "start": "275320",
    "end": "281600"
  },
  {
    "text": "we'll speak about this very soon yeah I have to say that that makes sense to me",
    "start": "281600",
    "end": "286639"
  },
  {
    "text": "that ultimately there's a general set of security best practices you know I I",
    "start": "286639",
    "end": "292560"
  },
  {
    "text": "think of that list what was it wasp I can't even pronounce it what's that that community that uh sends out the top 10",
    "start": "292560",
    "end": "299280"
  },
  {
    "text": "threats every year mhm oh was yes so there's generally like best practices",
    "start": "299280",
    "end": "304919"
  },
  {
    "text": "with in security but I think for me what I'd love to hear from you on is there are things that are unique to server",
    "start": "304919",
    "end": "312680"
  },
  {
    "text": "side JavaScript being a novel thing and then also just like the youngness of",
    "start": "312680",
    "end": "318560"
  },
  {
    "text": "this ecosystem as well as the cultural a lot of the cultural baggage",
    "start": "318560",
    "end": "324199"
  },
  {
    "text": "that I think JavaScript developers have around like move fast and break things I",
    "start": "324199",
    "end": "329360"
  },
  {
    "text": "think JavaScript security is like a unique challenge right because I think it's the hardest group of nerds to Hur",
    "start": "329360",
    "end": "336400"
  },
  {
    "text": "because ultimately it's also the biggest Community period and then I think you know the server side shift like it it it",
    "start": "336400",
    "end": "343319"
  },
  {
    "text": "was very fast and furious right and so I think like there's this whole swath of",
    "start": "343319",
    "end": "348880"
  },
  {
    "text": "and for me like node is very much like a Lego Legoland Community right like it's",
    "start": "348880",
    "end": "354360"
  },
  {
    "text": "it's you know you have to build your own modules and you know you create your own storyboard but there's so many many",
    "start": "354360",
    "end": "359840"
  },
  {
    "text": "challenges with node because there aren't like it's very easy to shoot yourself in the foot right like there",
    "start": "359840",
    "end": "365120"
  },
  {
    "text": "aren't like strong conventions there and and that's how you see things like the loop back and like you know like tools",
    "start": "365120",
    "end": "373479"
  },
  {
    "text": "like happy JS like you know they kind of have come in to kind of I think fill that need like the conventions Gap and",
    "start": "373479",
    "end": "379720"
  },
  {
    "text": "so like what have been some challenges for you there I totally agree Mo mostly about it's being Legoland where everyone",
    "start": "379720",
    "end": "386360"
  },
  {
    "text": "has to craft and reinvent sometimes the wheels I I think that as terms of security there are two things that makes",
    "start": "386360",
    "end": "392400"
  },
  {
    "text": "nodejs security more challenging than other platforms one as you said I",
    "start": "392400",
    "end": "397680"
  },
  {
    "text": "believe is the maturity there are not yet enough set of tools to um address",
    "start": "397680",
    "end": "404520"
  },
  {
    "text": "all the concerns for an example if you want to limit your process permissions",
    "start": "404520",
    "end": "411160"
  },
  {
    "text": "it's not very easy with node by the way this is one of the sailing point of Dino the so-called uh node replacement we are",
    "start": "411160",
    "end": "418680"
  },
  {
    "text": "more secure and I guess there is a reason why Ryan Dal the creator of this",
    "start": "418680",
    "end": "424160"
  },
  {
    "text": "of Dino choose security as one of his um",
    "start": "424160",
    "end": "429520"
  },
  {
    "text": "differentiator the second point is the single thread thing which we all know no JS at least there is one thread that",
    "start": "429520",
    "end": "436879"
  },
  {
    "text": "serve users and when you have one thread it's much easier to attack your your",
    "start": "436879",
    "end": "443319"
  },
  {
    "text": "code because if this red is gone your at least a big part of your service is gone",
    "start": "443319",
    "end": "449879"
  },
  {
    "text": "so um this what makes Security in ogs security is always challenging but in ogs it's even a bit",
    "start": "449879",
    "end": "456560"
  },
  {
    "text": "more so the plan for this episode is we're going to try to treat this in in",
    "start": "456560",
    "end": "462440"
  },
  {
    "text": "three segments three sections now there's lots of best practices there's lots of areas and full disclosure Yan's",
    "start": "462440",
    "end": "469479"
  },
  {
    "text": "favorite area is testing in fact when I said hey come talk about node best practices with us he was like are you sure cuz I could talk about testing and",
    "start": "469479",
    "end": "476800"
  },
  {
    "text": "I was like no I'm sure but maybe we'll do testing again lat so we might go to a deep dive on testing we have a lot of",
    "start": "476800",
    "end": "482599"
  },
  {
    "text": "testing Advocates on the panel but we're going to start off with writing our code",
    "start": "482599",
    "end": "487840"
  },
  {
    "text": "and then we're going to talk about testing the code a little bit and then also securing the code so Les we get too far ahead of ourselves in the securing",
    "start": "487840",
    "end": "493599"
  },
  {
    "text": "section let's go through some of the best practices laid out in this guide",
    "start": "493599",
    "end": "499080"
  },
  {
    "text": "for how you go about writing your code AS we've stated before a lot of this",
    "start": "499080",
    "end": "504680"
  },
  {
    "text": "stuff is really what I consider you know Wild West for a while Cowboy land of like well how do you like to do it right",
    "start": "504680",
    "end": "511039"
  },
  {
    "text": "and over time these things start to develop and you realize this is worse or this is better and people come to these",
    "start": "511039",
    "end": "516518"
  },
  {
    "text": "conventions so when it comes to writing code Yanni what do you have in the best practices or what has the community",
    "start": "516519",
    "end": "522599"
  },
  {
    "text": "landed on in terms of project structure error handling style etc for note code",
    "start": "522599",
    "end": "529480"
  },
  {
    "text": "yes so I picked some of the I think most impactful and important practices for",
    "start": "529480",
    "end": "535600"
  },
  {
    "text": "writing code um although I might admit the bull bullet that the bullets that",
    "start": "535600",
    "end": "541120"
  },
  {
    "text": "has the most traction and flamable discussion was about semicolons or not",
    "start": "541120",
    "end": "547160"
  },
  {
    "text": "brackets but I think that we better focus here on things that are more um painful and impactful we could spend an",
    "start": "547160",
    "end": "553360"
  },
  {
    "text": "hour on tabs versus spaces if you'd prefer tabs yeah definitely tabs I mean no question but but oh please that's",
    "start": "553360",
    "end": "560000"
  },
  {
    "text": "just like a waste of waste of energy preserve your knuckles people like you",
    "start": "560000",
    "end": "565680"
  },
  {
    "text": "know you need to use them for a long time um y Yanni just just to confirm when you said uh the semicolon are you",
    "start": "565680",
    "end": "571360"
  },
  {
    "text": "talking about like ASI ASI being automatic semicolon insertion like I'm just curious why semicolons play um like",
    "start": "571360",
    "end": "578000"
  },
  {
    "text": "into the security story at all yeah so first here I'm more referring not not yet to the security part whether to",
    "start": "578000",
    "end": "584240"
  },
  {
    "text": "writing cod in general just coding style yeah okay coding style sorry I clearly",
    "start": "584240",
    "end": "589360"
  },
  {
    "text": "I'm foaming at the mouth to talk about security she's already in segment three I am going to unfurl myself and let's",
    "start": "589360",
    "end": "596720"
  },
  {
    "text": "talk about writing code to semicolon or not to sem col is definitely like a thing right oh for sure that's a thing",
    "start": "596720",
    "end": "603000"
  },
  {
    "text": "yeah I was at npm and we use standard uh at npm and I it was like the first time I've had to write code without",
    "start": "603000",
    "end": "609560"
  },
  {
    "text": "semicolons and it was a big adjustment especially because I'm very familiar with like the traps of ASI ASI being",
    "start": "609560",
    "end": "615959"
  },
  {
    "text": "automatic semicolon insertion so it's like I was always just like am I going to take down the registry am I going to",
    "start": "615959",
    "end": "621560"
  },
  {
    "text": "like break all the builds like concerns valid no no but but but it",
    "start": "621560",
    "end": "629560"
  },
  {
    "text": "was really funny because we could write like highly opinionated and controversial stuff like hey you should",
    "start": "629560",
    "end": "635639"
  },
  {
    "text": "all use Oracle database and people like okay but if you right you should use semic colum in the end those was kind of",
    "start": "635639",
    "end": "642680"
  },
  {
    "text": "hundred comments discussion so we learn to run away from this flamable discussions anyway so about writing code",
    "start": "642680",
    "end": "650240"
  },
  {
    "text": "I think that the first bre practice that I picked is um distinguishing between what are catastrophic errors versus",
    "start": "650240",
    "end": "657639"
  },
  {
    "text": "non-catastrophic errors because in a single threaded land making a decision",
    "start": "657639",
    "end": "663680"
  },
  {
    "text": "when to make your thread crash is is really impactful there are other",
    "start": "663680",
    "end": "669320"
  },
  {
    "text": "thousand users now on the line if you make the process if you make the thread crash then um the damage is is huge so",
    "start": "669320",
    "end": "677720"
  },
  {
    "text": "when I started with node.js the advice was if you have an unfamiliar error you",
    "start": "677720",
    "end": "684519"
  },
  {
    "text": "should just let this threed Crush why it's just safer you you you don't know",
    "start": "684519",
    "end": "689720"
  },
  {
    "text": "what are the implications of the error if you if it's not familiar maybe you have some zombie like critical zombie",
    "start": "689720",
    "end": "696519"
  },
  {
    "text": "component like database connections that is hanging so better be safe crash okay",
    "start": "696519",
    "end": "702920"
  },
  {
    "text": "this is what I started with and then when I worked with customers I always put that line process. exit if if the",
    "start": "702920",
    "end": "710880"
  },
  {
    "text": "error is unknown process. exit and the funny part is that almost everyone after",
    "start": "710880",
    "end": "717079"
  },
  {
    "text": "some times after weeks some someone commented out this line like I I got",
    "start": "717079",
    "end": "722200"
  },
  {
    "text": "back two months later looked at the GitHub repository someone deleted this line and the reality just told us that",
    "start": "722200",
    "end": "728880"
  },
  {
    "text": "in most of the time the errors are not really catastrophic and affecting all",
    "start": "728880",
    "end": "734800"
  },
  {
    "text": "the process but killing a thread uh is really painful in production for and so",
    "start": "734800",
    "end": "740279"
  },
  {
    "text": "many time so after some sometimes I adjusted my practice and I suggest go",
    "start": "740279",
    "end": "746440"
  },
  {
    "text": "with a balanced approach if the eror comes with uh you know that is originated from a specific request like",
    "start": "746440",
    "end": "753079"
  },
  {
    "text": "a specific HTTP request it is probably not catastrophic this is just something",
    "start": "753079",
    "end": "758639"
  },
  {
    "text": "that happened during the request yes it's a risk but staying alive make the",
    "start": "758639",
    "end": "763800"
  },
  {
    "text": "thread stay alive is educated guess on the other hand if the error happened",
    "start": "763800",
    "end": "768920"
  },
  {
    "text": "during a critical phase like the startup or something regarding to some global object like the database error",
    "start": "768920",
    "end": "774920"
  },
  {
    "text": "connection it's probably catastrophic crash and this EP medium uh based on my",
    "start": "774920",
    "end": "779959"
  },
  {
    "text": "experience works better for um most of uh my customers so is is this",
    "start": "779959",
    "end": "785839"
  },
  {
    "text": "information or guide specific to like server apps as opposed to like I don't",
    "start": "785839",
    "end": "791959"
  },
  {
    "text": "know command line apps or something because there is a lot to to pass when you exit like with a specific error code",
    "start": "791959",
    "end": "799040"
  },
  {
    "text": "for example if you want to like pipe that into another process or something for like command line apps so is this",
    "start": "799040",
    "end": "806639"
  },
  {
    "text": "kind of more focused towards server side apps absolutely because a server side",
    "start": "806639",
    "end": "811839"
  },
  {
    "text": "Shad probably at at the moment is serving thousand users so only to get",
    "start": "811839",
    "end": "817160"
  },
  {
    "text": "the exit code to now let down thousand users does I guess doesn't make sense",
    "start": "817160",
    "end": "822880"
  },
  {
    "text": "you can just properly log the the error get it to the op systems and stay alive",
    "start": "822880",
    "end": "829320"
  },
  {
    "text": "so yeah so I mean this is really kind of fascinating because I feel like I've had a very similar Evolution except for I",
    "start": "829320",
    "end": "837040"
  },
  {
    "text": "think for me it ties very much into the logging story right because I think for me I really am I'm a data freak so I",
    "start": "837040",
    "end": "844160"
  },
  {
    "text": "love monitoring and logging and classifying my errors and um making sure",
    "start": "844160",
    "end": "849279"
  },
  {
    "text": "that if there's something new that's out of bounds like I'm notified right away right um and we're able to hop on it and",
    "start": "849279",
    "end": "855839"
  },
  {
    "text": "that's kind of like the triage process and so I think for me it's very interesting like I I'm not sure I'm",
    "start": "855839",
    "end": "861639"
  },
  {
    "text": "fully on board with the like universally just don't crash right like ultimately",
    "start": "861639",
    "end": "866959"
  },
  {
    "text": "like things like the DB if there's like memory issues or if there's like you",
    "start": "866959",
    "end": "872720"
  },
  {
    "text": "flushes that you didn't do like you're going to the system's going to crash anyway right like it's going to crash on",
    "start": "872720",
    "end": "878320"
  },
  {
    "text": "its own whether you you explicitly exit or not but I think for me I you know especially during development and",
    "start": "878320",
    "end": "884880"
  },
  {
    "text": "testing and staging like I don't know I I would air on shut like trying to collect as many of those data points and",
    "start": "884880",
    "end": "891639"
  },
  {
    "text": "making sure that whatever loger you're using that you have event listeners set",
    "start": "891639",
    "end": "897440"
  },
  {
    "text": "up on process exit and crash like so that you can capture that stack in that",
    "start": "897440",
    "end": "902639"
  },
  {
    "text": "eror like you know what I mean so that you're able to send it somewhere like put it on dis and whatever if you have a",
    "start": "902639",
    "end": "907680"
  },
  {
    "text": "log rotate policy or if you're using like a fluent D or something like that that you're you know you're able to kind",
    "start": "907680",
    "end": "913040"
  },
  {
    "text": "of capture that that data right so like for me like where does that come into play for you you know like the logging",
    "start": "913040",
    "end": "918600"
  },
  {
    "text": "story and the monitoring story and the triaging like how how does that kind of fit into that flow because I think for",
    "start": "918600",
    "end": "923920"
  },
  {
    "text": "me without kind of a rubric there it's very hard to implement any type of universal guidance",
    "start": "923920",
    "end": "929560"
  },
  {
    "text": "right like at least for me mhm yeah I I think that the Ops involvement here the",
    "start": "929560",
    "end": "934839"
  },
  {
    "text": "monitoring the logging the other side of the error rling the one that should take some proactive Act is is a really really",
    "start": "934839",
    "end": "941440"
  },
  {
    "text": "important piece of the puzzle this is by the way another reason why you should not always and blindly Crush remember",
    "start": "941440",
    "end": "948759"
  },
  {
    "text": "there are people there watching the application they might make thoughtful decision if you decide to crash based on",
    "start": "948759",
    "end": "954600"
  },
  {
    "text": "one error that you have and then you make the thread crash all the time congrats you know I have two",
    "start": "954600",
    "end": "961360"
  },
  {
    "text": "problems very soon we will discuss the next best practice is about metrics and",
    "start": "961360",
    "end": "967560"
  },
  {
    "text": "how to visualize your application health so yeah so okay so so it ties in over",
    "start": "967560",
    "end": "973600"
  },
  {
    "text": "there I think makes sense to think of those as as distinct and it's like your development practices are allowing for",
    "start": "973600",
    "end": "980399"
  },
  {
    "text": "your Ops practices to get what they need right and that may be still be you that may still be the same person but if it's",
    "start": "980399",
    "end": "986240"
  },
  {
    "text": "not it scales well and so one of those things things y as we go down the list here you have extend the built-in error",
    "start": "986240",
    "end": "992000"
  },
  {
    "text": "object you want to tell us more about that sure and I guess it's complementary to the first one we're building the",
    "start": "992000",
    "end": "997880"
  },
  {
    "text": "story here so the idea is that anytime you throw an error you should throw only and",
    "start": "997880",
    "end": "1005959"
  },
  {
    "text": "your object that that inherits from the base JavaScript error and not anything else there are two groups that I I",
    "start": "1005959",
    "end": "1013959"
  },
  {
    "text": "believe are doing it wrong the first one you know in JavaScript you can throw anything JavaScript you can throw in integer you can throw a bullan I guess",
    "start": "1013959",
    "end": "1020800"
  },
  {
    "text": "you can throw a an emoji of unicorn if you can throw a party which is what we do here every Thursday that's kind of",
    "start": "1020800",
    "end": "1026880"
  },
  {
    "text": "how we handle it 1 p.m. Eastern yeah JavaScript part some people think it's an error but we don't think",
    "start": "1026880",
    "end": "1032600"
  },
  {
    "text": "so at least not a c one yet it's a custom error that's right it's our error",
    "start": "1032600",
    "end": "1038079"
  },
  {
    "text": "okay yeah so I guess it's obvious to to everyone why why this is wrong you lose",
    "start": "1038079",
    "end": "1043520"
  },
  {
    "text": "the stack TR it's obvious but the other type of mistake is so popular and by",
    "start": "1043520",
    "end": "1049400"
  },
  {
    "text": "this mistake is when you throw the error object of JavaScript and I see it in",
    "start": "1049400",
    "end": "1054480"
  },
  {
    "text": "many places and even the nodejs core was doing this for a while so the idea is that you just include a very long",
    "start": "1054480",
    "end": "1060240"
  },
  {
    "text": "message and then once you need to handle the error risen about it the neck you",
    "start": "1060240",
    "end": "1065480"
  },
  {
    "text": "have to compare with a very very long string and if someone just change a word in this string then million application",
    "start": "1065480",
    "end": "1072240"
  },
  {
    "text": "in the word breaks because they relied on this this specific string not to mention that many people it was a funny",
    "start": "1072240",
    "end": "1078880"
  },
  {
    "text": "funny thing to observe many people install a a localized version of nodejs so the error messages change per",
    "start": "1078880",
    "end": "1085520"
  },
  {
    "text": "language they are localized wow so yeah at some point the nodejs core realized",
    "start": "1085520",
    "end": "1092000"
  },
  {
    "text": "it maybe they already done it I don't know as they switch to what I propose",
    "start": "1092000",
    "end": "1097520"
  },
  {
    "text": "and not because of me by the way the idea is that to include in every error object some identifier property a name a",
    "start": "1097520",
    "end": "1105280"
  },
  {
    "text": "code something that strongly identify the error and then it's very easy to uh to reason about the error type and um",
    "start": "1105280",
    "end": "1112640"
  },
  {
    "text": "and compare so if I were to reiterate and just make sure I'm following you don't throw the standard error like",
    "start": "1112640",
    "end": "1117760"
  },
  {
    "text": "don't throw the non-custom error but also don't customize the crap out of your errors like have some classifiers",
    "start": "1117760",
    "end": "1123280"
  },
  {
    "text": "for types of Errors so you're you're you're suggesting some structure of your error messages but not like a hierarchy",
    "start": "1123280",
    "end": "1130320"
  },
  {
    "text": "or like extreme unique errors for each circumstance is that what you're saying or am I not following I I think I I",
    "start": "1130320",
    "end": "1136240"
  },
  {
    "text": "believe that there are two valid practices here one of them is just iner it from the base error object and add at",
    "start": "1136240",
    "end": "1143880"
  },
  {
    "text": "least one property that identifies the like name code and then you can you know",
    "start": "1143880",
    "end": "1149360"
  },
  {
    "text": "write their think like invalid input payment failed whatever right the second type of Li implementation which is valid",
    "start": "1149360",
    "end": "1156280"
  },
  {
    "text": "is creating a different class per error type then you achieve the same goal H",
    "start": "1156280",
    "end": "1164520"
  },
  {
    "text": "you can uh identify the error type quite easily it's just more verbos and demands",
    "start": "1164520",
    "end": "1170520"
  },
  {
    "text": "more work but I guess valid as well yeah so it's just just functional versus",
    "start": "1170520",
    "end": "1175799"
  },
  {
    "text": "composition right right for me it's very clear when logging and trying to capture",
    "start": "1175799",
    "end": "1180840"
  },
  {
    "text": "errors or any type of logs within your application you know you really need to kind of have like a standard format and",
    "start": "1180840",
    "end": "1188000"
  },
  {
    "text": "I think like that's kind of what uh y y is alluding to uh but also for me there's a very clear core set of things",
    "start": "1188000",
    "end": "1196840"
  },
  {
    "text": "that I I log for right that being like that unique event name right or in this case unique error name that's like a",
    "start": "1196840",
    "end": "1204000"
  },
  {
    "text": "string that's tied to some constant or enum in my system you know as well as like you know what service did this come",
    "start": "1204000",
    "end": "1210280"
  },
  {
    "text": "from you know what um uh like there's a set of core things you want in every",
    "start": "1210280",
    "end": "1216440"
  },
  {
    "text": "error and the way I handle for dynamic data right Dynamic data being like",
    "start": "1216440",
    "end": "1222360"
  },
  {
    "text": "anything else that I want to capture where the error happened whether it's arguments whether it's like additional",
    "start": "1222360",
    "end": "1228679"
  },
  {
    "text": "context or any other data that's contextual beyond the stack Trace which is a standard item I use a specific key",
    "start": "1228679",
    "end": "1236159"
  },
  {
    "text": "something like payload or data and I put everything in that object right so so even the dynamic data has a standard",
    "start": "1236159",
    "end": "1242799"
  },
  {
    "text": "format right and you kind of get away from that like I I 100% relate to your the example that you use around the the",
    "start": "1242799",
    "end": "1249600"
  },
  {
    "text": "string matching and anybody changes that format all of a sudden everything breaks it's ridiculous especially when splunking you know people are splunking",
    "start": "1249600",
    "end": "1257000"
  },
  {
    "text": "on crazy string formats I'm like Jesus Christ like just use a data structure that like makes sense you know so yeah I",
    "start": "1257000",
    "end": "1264600"
  },
  {
    "text": "plus a million on that all right let's move on to the next one we have layer your code with n tears that means you",
    "start": "1264600",
    "end": "1272520"
  },
  {
    "text": "have to cry the whole time or what's that mean that's a terrible pun uh it says on creating into your style of",
    "start": "1272520",
    "end": "1278159"
  },
  {
    "text": "architecture so this has to do with the actual layering and styling of the architecture of the code and you have",
    "start": "1278159",
    "end": "1283799"
  },
  {
    "text": "best practices on this as well yeah this is about the project structure project",
    "start": "1283799",
    "end": "1288880"
  },
  {
    "text": "architecture or practically the folder um structure in your",
    "start": "1288880",
    "end": "1293960"
  },
  {
    "text": "application these type of discussions are always opinionated and when I started I thought to myself do I want to",
    "start": "1293960",
    "end": "1300240"
  },
  {
    "text": "to get into this and I decided that yes because there there was no standards at",
    "start": "1300240",
    "end": "1305279"
  },
  {
    "text": "all at nodejs land back then about how do I build application and um obviously I wouldn't",
    "start": "1305279",
    "end": "1312120"
  },
  {
    "text": "invent anything new but my debates were between choosing the heaviest",
    "start": "1312120",
    "end": "1317520"
  },
  {
    "text": "architecture style like hexagonal clean onion uh those are architecturals that",
    "start": "1317520",
    "end": "1323159"
  },
  {
    "text": "have many many moving parts and um a lot of interface and uh it's really heavy",
    "start": "1323159",
    "end": "1329880"
  },
  {
    "text": "stuff I don't want to now elaborate a lot about architecture like hexagonal the other option was Ruby style",
    "start": "1329880",
    "end": "1337279"
  },
  {
    "text": "architecture like MVC which was quite popular when nodejs started I believe",
    "start": "1337279",
    "end": "1343120"
  },
  {
    "text": "that node needs something between the over structured architectures of java to",
    "start": "1343120",
    "end": "1348760"
  },
  {
    "text": "the what I believe are the underst structure MVC something in the middle some EP medium The Reason by the way",
    "start": "1348760",
    "end": "1355919"
  },
  {
    "text": "that I believe that MVC is is underst structured and not powerful enough I",
    "start": "1355919",
    "end": "1361960"
  },
  {
    "text": "believe it was Uncle Bob who said that MVC is a delivery pattern it's not a way",
    "start": "1361960",
    "end": "1367159"
  },
  {
    "text": "to to architect your backend it says nothing about how you structure your business logic your data access layer",
    "start": "1367159",
    "end": "1374960"
  },
  {
    "text": "your uh Services facade access to other servic says all of this by the way in",
    "start": "1374960",
    "end": "1380400"
  },
  {
    "text": "MVC falls under the word the letter M model yeah yeah it's everything is a",
    "start": "1380400",
    "end": "1386640"
  },
  {
    "text": "model obiously never never meant to answer this question ENT is a great",
    "start": "1386640",
    "end": "1391960"
  },
  {
    "text": "medium between between having of something that is make great separation",
    "start": "1391960",
    "end": "1397559"
  },
  {
    "text": "between the API the entry point let me emphasize about what is enters yeah",
    "start": "1397559",
    "end": "1402760"
  },
  {
    "text": "entor architecture simply mean that you have layers in plain JavaScript JS layer",
    "start": "1402760",
    "end": "1409200"
  },
  {
    "text": "is just a folder and then as your request think about some API request",
    "start": "1409200",
    "end": "1414440"
  },
  {
    "text": "flying in it just goes through for example three different layers the first",
    "start": "1414440",
    "end": "1420000"
  },
  {
    "text": "one is the entry point like API so you have one folder with only API related",
    "start": "1420000",
    "end": "1426520"
  },
  {
    "text": "code only your routes only thing related to receiving the request then your second layer is the",
    "start": "1426520",
    "end": "1433400"
  },
  {
    "text": "business logic or the domain this is where you apply custom data chck change",
    "start": "1433400",
    "end": "1439400"
  },
  {
    "text": "logic orchestrating if you need to call other services everything that is as as",
    "start": "1439400",
    "end": "1444720"
  },
  {
    "text": "the name said the business logic of your application and then the third folder the third tier is the data access if you",
    "start": "1444720",
    "end": "1451760"
  },
  {
    "text": "have an RM this is where it goes to so you have a very simple and clean separation of concern but it's also very",
    "start": "1451760",
    "end": "1458960"
  },
  {
    "text": "intuitive this is also how the request is physically going from API to some",
    "start": "1458960",
    "end": "1464200"
  },
  {
    "text": "logic to our database so I chose this um architecture um is a good medium and um",
    "start": "1464200",
    "end": "1471799"
  },
  {
    "text": "what do you think about the reasons that led me to this um proposal I I have",
    "start": "1471799",
    "end": "1477080"
  },
  {
    "text": "thoughts on this but I want to hear from Nick and Jared I'm I'm I'm calling it MCD for the",
    "start": "1477080",
    "end": "1482520"
  },
  {
    "text": "record or I should say CMD controller model data access or C cmda how about",
    "start": "1482520",
    "end": "1490240"
  },
  {
    "text": "that it's a work in progress model yeah I I mean hey you're you're getting an insight into my brain right now so it's",
    "start": "1490240",
    "end": "1496279"
  },
  {
    "text": "it's it's controller model data access layer maybe that's good CMD yeah cmla I",
    "start": "1496279",
    "end": "1504320"
  },
  {
    "text": "was gon to say CMD that's call it you know it yeah Nick what do you think about it you've got boots on the ground",
    "start": "1504320",
    "end": "1510760"
  },
  {
    "text": "in you know big node applications is this is this a pattern that you've seen and do you like this idea these tiers",
    "start": "1510760",
    "end": "1516600"
  },
  {
    "text": "versus MVC or something even more strict and heavy yeah uh correct me if I'm",
    "start": "1516600",
    "end": "1522640"
  },
  {
    "text": "wrong y but I I feel like this is kind of the architecture pattern that like a njs application would use if you're",
    "start": "1522640",
    "end": "1529240"
  },
  {
    "text": "familiar with that that's what I have a lot of experience with lately and you know breaking everything up into",
    "start": "1529240",
    "end": "1534440"
  },
  {
    "text": "controllers then are basically like the API endpoints that then have talk to",
    "start": "1534440",
    "end": "1540240"
  },
  {
    "text": "services that have all of the business logic and then going into like in our case a typ or and backend to access the",
    "start": "1540240",
    "end": "1547320"
  },
  {
    "text": "data and manipulate that absolutely yeah years later nestjs did a very similar",
    "start": "1547320",
    "end": "1554120"
  },
  {
    "text": "thing that I think that what Nest has resembles more than anything else kind of 's approach yeah interesting yeah I",
    "start": "1554120",
    "end": "1562159"
  },
  {
    "text": "feel like Express also did this really well initially many years ago I just",
    "start": "1562159",
    "end": "1567520"
  },
  {
    "text": "don't think they did as maybe I don't want to say good of a job that's not the right word right what was kind of not as",
    "start": "1567520",
    "end": "1575679"
  },
  {
    "text": "defined was like the kind of separation of concerns between models and data",
    "start": "1575679",
    "end": "1581039"
  },
  {
    "text": "access right so I don't think we ever really had a very good early pattern for that in the node Community it's just",
    "start": "1581039",
    "end": "1587399"
  },
  {
    "text": "like a bunch of di mentions like that were not similar across the board between teams and I come from a Ruby on",
    "start": "1587399",
    "end": "1594120"
  },
  {
    "text": "Rails background back in the day so I was thick into MVC and I always thought it made a lot of sense with the problems",
    "start": "1594120",
    "end": "1602000"
  },
  {
    "text": "that Yanni stated that most developers thought that those three words were the",
    "start": "1602000",
    "end": "1608120"
  },
  {
    "text": "only place where you could put your code and so maybe it was for a lack of structure which why the M became it all",
    "start": "1608120",
    "end": "1613440"
  },
  {
    "text": "like everything's in the model everything's in the model uh and then the there's backlash to that which which was the skinny models fat controllers",
    "start": "1613440",
    "end": "1621320"
  },
  {
    "text": "idiom or no sorry uh the controllers got too fat anyways you're supposed to have skinny controller I don't know I can't",
    "start": "1621320",
    "end": "1626960"
  },
  {
    "text": "remember long too long ago point was skin skinny controllers fat models yeah cuz everything was getting shoved into the controllers and it's like well you",
    "start": "1626960",
    "end": "1633360"
  },
  {
    "text": "should shove it into the models well then we ended up with these really fat models and I never at a personal level",
    "start": "1633360",
    "end": "1640399"
  },
  {
    "text": "felt the pain but I saw the pain in so many rails projects where it was just became unwieldy and I think it was",
    "start": "1640399",
    "end": "1646760"
  },
  {
    "text": "because there was just not buckets laid out even though uh spoiler alert you can",
    "start": "1646760",
    "end": "1652840"
  },
  {
    "text": "create your own buckets you don't you don't have like you said this is this not about that but I haven't done n tier",
    "start": "1652840",
    "end": "1658600"
  },
  {
    "text": "so I'm very interested in checking out what Nest is up to and are there other projects or open source things or people",
    "start": "1658600",
    "end": "1664519"
  },
  {
    "text": "using this tiered approach where you could say here's a codebase check it out here's what it looks like No And this is",
    "start": "1664519",
    "end": "1670880"
  },
  {
    "text": "this is something that that that yeah yeah I mean this is the sincere answer and I say I say we've been asked so many",
    "start": "1670880",
    "end": "1678360"
  },
  {
    "text": "times to provide a an example application and I I just didn't have the time so right I I definitely plan to",
    "start": "1678360",
    "end": "1686200"
  },
  {
    "text": "yeah maybe maybe one of our listeners can help contribute to that that would be really powerful is there is there like an open issue that we can link in",
    "start": "1686200",
    "end": "1692240"
  },
  {
    "text": "the show notes or should we create one um so people can chime in I'm just curious like where are you tracking that",
    "start": "1692240",
    "end": "1697760"
  },
  {
    "text": "backlog work the backlog work you mean of the repository right yes these feature requests to kind of",
    "start": "1697760",
    "end": "1704240"
  },
  {
    "text": "like provide an example right so like the node best practices repo would be cool if it linked out to examples of",
    "start": "1704240",
    "end": "1710559"
  },
  {
    "text": "this in practice so maybe creating that example would be the first step maybe in the GitHub issues for that repo or if",
    "start": "1710559",
    "end": "1716960"
  },
  {
    "text": "you have a separate way where the community says I'm sure there's debates on what which best practi is to add or",
    "start": "1716960",
    "end": "1722279"
  },
  {
    "text": "remove or change so maybe a place where you could go and say here are things that need to be done to improve this set",
    "start": "1722279",
    "end": "1728399"
  },
  {
    "text": "of best practices yeah so first we do manage all the the backlog and issues in in GitHub",
    "start": "1728399",
    "end": "1736000"
  },
  {
    "text": "and there was a handful of discussion about this we actually have uh an example some hidden examples there it",
    "start": "1736000",
    "end": "1743600"
  },
  {
    "text": "never matured enough that we felt confident enough to share it but if any of the audience wants to get a quick",
    "start": "1743600",
    "end": "1750120"
  },
  {
    "text": "look into an example that is not finalized feel free to um approach in",
    "start": "1750120",
    "end": "1756159"
  },
  {
    "text": "GitHub and I'll be glad to share with you the link that's awesome thanks Yoni um so just one last question before we",
    "start": "1756159",
    "end": "1761279"
  },
  {
    "text": "kind of wrap this topic so you know I was really I think what Jared said earlier about like people feeling",
    "start": "1761279",
    "end": "1768600"
  },
  {
    "text": "constrained by these letters right these MVC letters which were really kind of very maybe not so fully baked ideas you",
    "start": "1768600",
    "end": "1775799"
  },
  {
    "text": "know or part of the story yeah it was part of the story it was a suggestion first try um so I'm just curious like to",
    "start": "1775799",
    "end": "1782159"
  },
  {
    "text": "a lot of our listeners work on front-end applications as well as backend but like",
    "start": "1782159",
    "end": "1787360"
  },
  {
    "text": "uh for folks that are you know working on progressively thicker clients right is there an nend tiers kind of mirror",
    "start": "1787360",
    "end": "1795159"
  },
  {
    "text": "model for browser code that's written in Javas JavaScript or typescript well I I guess you can",
    "start": "1795159",
    "end": "1803519"
  },
  {
    "text": "structure your it makes sense for everything said I case you can structure your front end code with enters because",
    "start": "1803519",
    "end": "1810720"
  },
  {
    "text": "also in front end there are like multiple big concerns which are good candidates for partitioning the front",
    "start": "1810720",
    "end": "1817240"
  },
  {
    "text": "end but as we all saw the move the movement in the front end world the state thing gets most of the attention",
    "start": "1817240",
    "end": "1824519"
  },
  {
    "text": "right so almost all the Frameworks are all about how do I just um manage the interaction between the",
    "start": "1824519",
    "end": "1830519"
  },
  {
    "text": "state and my UI and this is why it's probably won't get any much popularity",
    "start": "1830519",
    "end": "1836080"
  },
  {
    "text": "if if you plan on suggesting that to the front end word yeah I mean I might be",
    "start": "1836080",
    "end": "1841480"
  },
  {
    "text": "able to actually take a step on this I'm we're I'm working on a big I think proposal for UI re architecture at work",
    "start": "1841480",
    "end": "1847399"
  },
  {
    "text": "and so I don't know maybe there's something that can kind of come out from there but but I will say that you know I",
    "start": "1847399",
    "end": "1852480"
  },
  {
    "text": "think that the frontend community is very much subject to like the Paro principle you know 8020 so I think like",
    "start": "1852480",
    "end": "1858519"
  },
  {
    "text": "80 oh that's so funny it's actually in your notes too 80% I think of of frontend apps like their biggest pain",
    "start": "1858519",
    "end": "1864120"
  },
  {
    "text": "points are State Management right and I think the remaining 20% still have State Management problems but in addition to",
    "start": "1864120",
    "end": "1870919"
  },
  {
    "text": "other things right and so I think for me it's that 20% or 15% of applications at",
    "start": "1870919",
    "end": "1876320"
  },
  {
    "text": "like massive scale that I would be interested in kind of I think codifying so it's it's really good takeaway from",
    "start": "1876320",
    "end": "1882639"
  },
  {
    "text": "this conversation",
    "start": "1882639",
    "end": "1889919"
  },
  {
    "text": "this episode is brought to you by digital ocean droplets manage kubernetes manage databases spaces object storage",
    "start": "1894919",
    "end": "1902880"
  },
  {
    "text": "volume block storage Advanced networking like virtual private clouds and Cloud firewalls developer tooling like the",
    "start": "1902880",
    "end": "1909039"
  },
  {
    "text": "robust API and CLI to make sure you can interact with your infrastructure the way you want to digital ocean is",
    "start": "1909039",
    "end": "1915720"
  },
  {
    "text": "designed for developers and built for bus businesses join Over 150,000",
    "start": "1915720",
    "end": "1921159"
  },
  {
    "text": "businesses that develop manage and scale their applications with digital ocean head to do. changelog to get started",
    "start": "1921159",
    "end": "1928120"
  },
  {
    "text": "with a $100 credit again do. [Music]",
    "start": "1928120",
    "end": "1942679"
  },
  {
    "text": "changelog so we touched on logging in the first segment we are going to talk",
    "start": "1942679",
    "end": "1948039"
  },
  {
    "text": "more about it now because you have more things to say logging metrics open it up ya for conversation what is the best",
    "start": "1948039",
    "end": "1953799"
  },
  {
    "text": "practices here yeah so uh it's not coincidentally that many many of the best practices are are focused on Ops on",
    "start": "1953799",
    "end": "1960559"
  },
  {
    "text": "operations on production I really believe that what I call production oriented development is something that",
    "start": "1960559",
    "end": "1966480"
  },
  {
    "text": "should be uh embraced more by development teams and one of the thing that I think uh most project are not",
    "start": "1966480",
    "end": "1973760"
  },
  {
    "text": "doing enough is emitting metrics and metrics are meaningful measurable pieces",
    "start": "1973760",
    "end": "1980960"
  },
  {
    "text": "of information that the application share outside usually with the Ops production monitoring guys and um this",
    "start": "1980960",
    "end": "1989919"
  },
  {
    "text": "allow to me to Monitor and measure and alert when certain um meaningful events",
    "start": "1989919",
    "end": "1997000"
  },
  {
    "text": "happen and for example it might be the amount of Errors if we know that there",
    "start": "1997000",
    "end": "2002240"
  },
  {
    "text": "is a increase in the error rate in the last 20 minutes something is probably",
    "start": "2002240",
    "end": "2007279"
  },
  {
    "text": "wrong it might be the event Loop delay in the last one hour it might be also",
    "start": "2007279",
    "end": "2012480"
  },
  {
    "text": "completely custom business metric like payment failed instead of doing also",
    "start": "2012480",
    "end": "2017720"
  },
  {
    "text": "this developers mostly rely on logging which is important very important but",
    "start": "2017720",
    "end": "2023440"
  },
  {
    "text": "logging are not good enough for this type of thing because first there are big bulk of text so if I'm as an Ops guy",
    "start": "2023440",
    "end": "2030159"
  },
  {
    "text": "looking at application and looking at the logs it's very hard for me to extract what is important and if I try",
    "start": "2030159",
    "end": "2037240"
  },
  {
    "text": "to many what many are doing is trying to scrape some text and extract events based on this but then if a developer",
    "start": "2037240",
    "end": "2043600"
  },
  {
    "text": "change just one word it all breaks and not only that usually log log lines are",
    "start": "2043600",
    "end": "2048800"
  },
  {
    "text": "not measurable it's not numbers it's also not documented who document is log",
    "start": "2048800",
    "end": "2053878"
  },
  {
    "text": "statements it doesn't make sense metrics are the solution to this a few 10 maybe",
    "start": "2053879",
    "end": "2060200"
  },
  {
    "text": "30 uh specific events that are documented by Design whatever framework",
    "start": "2060200",
    "end": "2065560"
  },
  {
    "text": "you're going to use it's very clear to your Ops what our application is going",
    "start": "2065560",
    "end": "2070679"
  },
  {
    "text": "to emit so it's kind of an interface between the dev and the Ops and uh",
    "start": "2070679",
    "end": "2077520"
  },
  {
    "text": "practically it's very easy to do it as a developer you just throw a plain Json",
    "start": "2077520",
    "end": "2082800"
  },
  {
    "text": "with a identifier usually it's a counter or a specific numerical value uh it has",
    "start": "2082800",
    "end": "2088398"
  },
  {
    "text": "a name sometimes it has labels there are many supportive Frameworks for this like data dog or Prometheus if you're into",
    "start": "2088399",
    "end": "2095158"
  },
  {
    "text": "the kubernetes era or cloudwatch if AWS is your thing it's really easy it's",
    "start": "2095159",
    "end": "2101280"
  },
  {
    "text": "really powerful for the Ops and yet not enough are doing this so I think it's an",
    "start": "2101280",
    "end": "2106760"
  },
  {
    "text": "opportunity for many project to embrace metrics how do you decide what specifically you want to have metrics",
    "start": "2106760",
    "end": "2112560"
  },
  {
    "text": "around like is there guidelines that you follow for that yes so I'm putting aside",
    "start": "2112560",
    "end": "2119480"
  },
  {
    "text": "infrastructural metrics because it's more about a development show so the Ops",
    "start": "2119480",
    "end": "2124640"
  },
  {
    "text": "don't need ask the developers to throw infrastructure like this space out of dis space CPU there are tools for this",
    "start": "2124640",
    "end": "2131160"
  },
  {
    "text": "no no no need to so in your code type of metrics that you want to throw are of",
    "start": "2131160",
    "end": "2136240"
  },
  {
    "text": "two type one is your platform specific metrics because your op you know what I",
    "start": "2136240",
    "end": "2142160"
  },
  {
    "text": "would say first your metrics should reflect what is important what is important to measure and alert on so",
    "start": "2142160",
    "end": "2150000"
  },
  {
    "text": "usually it's platform specific measures like if you are in OJs the Ops guide",
    "start": "2150000",
    "end": "2155119"
  },
  {
    "text": "don't know about the event Loop and how sensitive it is so platform specific in",
    "start": "2155119",
    "end": "2160319"
  },
  {
    "text": "ogs it will probably be something like the event Loop the amount the open file descriptors usually also HT the HTTP",
    "start": "2160319",
    "end": "2167319"
  },
  {
    "text": "request Behavior Leng length of an HTTP request amount of HTP request amount of",
    "start": "2167319",
    "end": "2173119"
  },
  {
    "text": "Errors very important this is one category and the second one is business",
    "start": "2173119",
    "end": "2179800"
  },
  {
    "text": "metrics like business or product metric stuff like payment failed really important stuff payment failed wow we",
    "start": "2179800",
    "end": "2186440"
  },
  {
    "text": "really want to measure this if there is an increase in payment failure then obviously someone have to",
    "start": "2186440",
    "end": "2194160"
  },
  {
    "text": "to go online and watch I think this is It's I'm so glad we're talking about this because for me like so first of all",
    "start": "2194160",
    "end": "2199839"
  },
  {
    "text": "like logging and monitoring of any kind has a cost right and I think a lot of",
    "start": "2199839",
    "end": "2205200"
  },
  {
    "text": "I've seen a lot of developers fall into a trap where they overlog and then once their application",
    "start": "2205200",
    "end": "2211359"
  },
  {
    "text": "scales it's like what's why why what's going on why are my server bills so high",
    "start": "2211359",
    "end": "2217119"
  },
  {
    "text": "and or like why are things slow mhm so a understanding that like monitoring and",
    "start": "2217119",
    "end": "2222440"
  },
  {
    "text": "logging have a cost and then making sure that whatever tools you're using to do",
    "start": "2222440",
    "end": "2228640"
  },
  {
    "text": "logging and monitoring meet high performance benchmarks right so like I",
    "start": "2228640",
    "end": "2234440"
  },
  {
    "text": "wouldn't be using bowl for example as a node logger anymore when things like",
    "start": "2234440",
    "end": "2239920"
  },
  {
    "text": "Pino p n o you know JS exist right so ultimately like it's one of those things",
    "start": "2239920",
    "end": "2245119"
  },
  {
    "text": "where you really you know the kind of the maintenance part of this as a developer I can tell you the way I've kind of handled this is I typically have",
    "start": "2245119",
    "end": "2251599"
  },
  {
    "text": "like an abstraction around my logger totally right so I created my logging interface in my language my class my",
    "start": "2251599",
    "end": "2259200"
  },
  {
    "text": "code whatever my my set of functions my module and you know whatever tool I'm",
    "start": "2259200",
    "end": "2264560"
  },
  {
    "text": "using is abstracted away in there and what that gives me is a lot of flexibility to like move with the best",
    "start": "2264560",
    "end": "2271240"
  },
  {
    "text": "tools as they become available right and as benchmarks improve like there's no loyalty here right the only loyalty is",
    "start": "2271240",
    "end": "2276880"
  },
  {
    "text": "speed when comes to like moning and perf so um so so so there's that although",
    "start": "2276880",
    "end": "2282880"
  },
  {
    "text": "Pino has set a really high bar and I think Mato is only going to be continuing to innovate I think Mato Kina",
    "start": "2282880",
    "end": "2289119"
  },
  {
    "text": "who we should have on the show sometime by the way uh he's gonna be he's gonna be on our show pretty soon the platform podcast but um Mato has this unique",
    "start": "2289119",
    "end": "2296520"
  },
  {
    "text": "Advantage where he's like a a maintainer of a lot of popular node libraries like",
    "start": "2296520",
    "end": "2302440"
  },
  {
    "text": "fastify and Pino but he's also on the no technical stering committee so he has",
    "start": "2302440",
    "end": "2307720"
  },
  {
    "text": "this unique Advantage where he like is able to leverage his understanding of like the internal workings of node to",
    "start": "2307720",
    "end": "2313240"
  },
  {
    "text": "like do performance optimizations I think that's like super cool but anyways so getting back to the like decision-",
    "start": "2313240",
    "end": "2318920"
  },
  {
    "text": "making around performance as a cost you also have to understand that like what you're monitoring and what your logging",
    "start": "2318920",
    "end": "2324000"
  },
  {
    "text": "also fall into two different categories right so there's like you said like there's the business intelligence type",
    "start": "2324000",
    "end": "2329280"
  },
  {
    "text": "stuff like new user like transaction happened and then there's like metrics",
    "start": "2329280",
    "end": "2334520"
  },
  {
    "text": "around like health and performance you know which like how long are your requests taking Etc and so I think for",
    "start": "2334520",
    "end": "2340280"
  },
  {
    "text": "me like the management of those two and then deciding on like what to log and",
    "start": "2340280",
    "end": "2345599"
  },
  {
    "text": "how often to log and what ver verbosity and what your debug path looks like in production like those are really big",
    "start": "2345599",
    "end": "2352359"
  },
  {
    "text": "decisions and I still haven't found a way to like codify and organize it so",
    "start": "2352359",
    "end": "2357440"
  },
  {
    "text": "that like I can have a very seamless interaction or seamless set of communication with Ops you know that's",
    "start": "2357440",
    "end": "2364200"
  },
  {
    "text": "actually doing this monitoring and setting these benchmarks and setting like the bounds right like I do you have",
    "start": "2364200",
    "end": "2369480"
  },
  {
    "text": "any kind of feedback on this like who who's done this well like are there tools that you can use like I'm thinking",
    "start": "2369480",
    "end": "2374640"
  },
  {
    "text": "of like infrastructure as code right like there's no infrastructure as code equivalent to like fixing this problem",
    "start": "2374640",
    "end": "2380760"
  },
  {
    "text": "and organizing it and codifying it and like making it easy to communicate um the only thing I found that has worked",
    "start": "2380760",
    "end": "2386280"
  },
  {
    "text": "for me in the past is to like I say create my own abstractions and centralize my own like Central create my",
    "start": "2386280",
    "end": "2392280"
  },
  {
    "text": "own modules that at least like limit the points of change you know but other than",
    "start": "2392280",
    "end": "2397839"
  },
  {
    "text": "that I don't know what's falling down with that ml why I mean I do that as well and I find that it's like a really good pattern and it just works have you",
    "start": "2397839",
    "end": "2404359"
  },
  {
    "text": "found limitations with that or you just don't want to do it every time or no no I just think that Yoni brought up a",
    "start": "2404359",
    "end": "2409720"
  },
  {
    "text": "really good point about your Ops Team it's like you you need to be in communicado with your Ops Team right on",
    "start": "2409720",
    "end": "2417359"
  },
  {
    "text": "this stuff and so ultimately like what's that process like the only thing I can think of is like a manual human process",
    "start": "2417359",
    "end": "2424280"
  },
  {
    "text": "yeah right and I just wasn't sure if there was like a pro programmatic way to do that in like in a consistent way like",
    "start": "2424280",
    "end": "2431280"
  },
  {
    "text": "that's all I I'm trying to over optimize is what what I'm doing here well Nick's probably written a robot to talk to his",
    "start": "2431280",
    "end": "2437280"
  },
  {
    "text": "Ops teams haven't you automated that away Nick you don't have to talk to anybody anymore you just tell your robots to I",
    "start": "2437280",
    "end": "2445680"
  },
  {
    "text": "wish sorry Yan you were about to say something before I picked on Nick again to amal's point I thinkal you just",
    "start": "2445680",
    "end": "2453440"
  },
  {
    "text": "kind of packed few great and very useful best practices first yeah always create a rapper around your logger and anything",
    "start": "2453440",
    "end": "2461240"
  },
  {
    "text": "that is external and also separate the verbosity of your log entry so uh uh do",
    "start": "2461240",
    "end": "2468000"
  },
  {
    "text": "info level logs on you know um major events like start of or request moving",
    "start": "2468000",
    "end": "2473119"
  },
  {
    "text": "to another layer and anytime we write this huge messages with custom variables",
    "start": "2473119",
    "end": "2479160"
  },
  {
    "text": "yeah keep it verus it's really I even agree about mat Kino which has a genine",
    "start": "2479160",
    "end": "2485000"
  },
  {
    "text": "skill for taking things and making them somehow so much faster amazing um yeah",
    "start": "2485000",
    "end": "2492079"
  },
  {
    "text": "and and one more now to to kind of uh combine metric and logging although they answer different questions but many",
    "start": "2492079",
    "end": "2498680"
  },
  {
    "text": "times what I hear from developers is okay I understand why metrics answer a different question it's not about",
    "start": "2498680",
    "end": "2504240"
  },
  {
    "text": "investigating a specific flow it's about getting a sense of the overall system Health now but I don't want to present",
    "start": "2504240",
    "end": "2511440"
  },
  {
    "text": "now new infrastructure and new transport layer uh anyway I'm doing my alerting on cloudwatch or LK so I don't I have login",
    "start": "2511440",
    "end": "2520000"
  },
  {
    "text": "so great it's a good point you can use loging for metrix my advice then would",
    "start": "2520000",
    "end": "2525359"
  },
  {
    "text": "be create a dedicated method for metric so like you have logger.log logger do",
    "start": "2525359",
    "end": "2531359"
  },
  {
    "text": "info logger do have logger do metric and there have a very specific variable",
    "start": "2531359",
    "end": "2536760"
  },
  {
    "text": "metric name metric value and next time a developer comes to change something you",
    "start": "2536760",
    "end": "2542920"
  },
  {
    "text": "probably be cautious about changing this line This the metric because it knows",
    "start": "2542920",
    "end": "2548520"
  },
  {
    "text": "that this specific log usage is a direct contract with the Ops so it's a kind of",
    "start": "2548520",
    "end": "2554400"
  },
  {
    "text": "good good balance between using our convenient tools the logging but making them a bit more uh Ops oriented shall I",
    "start": "2554400",
    "end": "2562960"
  },
  {
    "text": "call it yeah make sense yeah no that's really that's a really really good idea I love that I think that actually gets",
    "start": "2562960",
    "end": "2569800"
  },
  {
    "text": "me one step further than my process right now so that's great and thank you for highlighting that I called out best",
    "start": "2569800",
    "end": "2575359"
  },
  {
    "text": "practices I pride myself on best practices usage in fact if I could have",
    "start": "2575359",
    "end": "2580680"
  },
  {
    "text": "my middle name be ml best practices Hussein I would legally make that change Just One Last point to kind of further",
    "start": "2580680",
    "end": "2587040"
  },
  {
    "text": "drive this automation home as you can tell like I'm an optimization nut you can actually use ests or something like",
    "start": "2587040",
    "end": "2593960"
  },
  {
    "text": "that to either have something as part of your poll request check right so anytime",
    "start": "2593960",
    "end": "2599240"
  },
  {
    "text": "somebody adds something new or remove something that's logger metric you can have a slack Channel notification you",
    "start": "2599240",
    "end": "2605800"
  },
  {
    "text": "can have a backlog ticket that's put for the Ops Team like you can you can put that into somebody's cue for review",
    "start": "2605800",
    "end": "2611720"
  },
  {
    "text": "right so what you're doing is kind of taking away some of that gatekeeping around process change and kind of",
    "start": "2611720",
    "end": "2618160"
  },
  {
    "text": "flipping the switch into like just having a monitoring process for process change and that that way if you need to",
    "start": "2618160",
    "end": "2623720"
  },
  {
    "text": "swoop in you can but if you don't need to like full steam ahead right so and that's something I personally real I'm",
    "start": "2623720",
    "end": "2629440"
  },
  {
    "text": "embracing that model like I just realize I like I'm in a principal software engineer role right now and I want to",
    "start": "2629440",
    "end": "2635599"
  },
  {
    "text": "enable developers to quickly but also with convention and standards and so that's I'm using that kind of",
    "start": "2635599",
    "end": "2642280"
  },
  {
    "text": "methodology to like monitor but not get in people's way and only get in people's way when I need to that makes sense I",
    "start": "2642280",
    "end": "2649400"
  },
  {
    "text": "love that that's the robot right there that's there it is that's talking to Ops yeah yeah totally so there you go thank",
    "start": "2649400",
    "end": "2656960"
  },
  {
    "text": "you so much we fixed this problem ladies fix the bug you're welcome so anything else on writing code",
    "start": "2656960",
    "end": "2664680"
  },
  {
    "text": "best practices we have a lot to say about security so we're going to skip right to that unless we will have any",
    "start": "2664680",
    "end": "2670079"
  },
  {
    "text": "more on this topic of course there's more to say but for this particular podcast standout I just had questions on",
    "start": "2670079",
    "end": "2675680"
  },
  {
    "text": "like Stand Out stand air you know versus like there's one more I can't can't forget standard out Standard air and",
    "start": "2675680",
    "end": "2681920"
  },
  {
    "text": "standard in but that's the other dire yeah yeah yeah yeah and and is different yeah thank you okay I don't know I guess",
    "start": "2681920",
    "end": "2687520"
  },
  {
    "text": "any light to shed there really briefly y yes so you're referring to the best practi as it is called log to STD out",
    "start": "2687520",
    "end": "2695599"
  },
  {
    "text": "right yeah I guess it's kind of a common wisdom for many developers the idea that",
    "start": "2695599",
    "end": "2701160"
  },
  {
    "text": "anytime you log uh your medium is not a file or a database it's the STD out the the",
    "start": "2701160",
    "end": "2708559"
  },
  {
    "text": "standard output or error I I don't I don't differentiate now between the two is the standard output of the process",
    "start": "2708559",
    "end": "2716440"
  },
  {
    "text": "because then at the production a deployment time there is someone maybe you maybe someone else you we always",
    "start": "2716440",
    "end": "2722319"
  },
  {
    "text": "plan for plan at least in advance that it will be someone else could be um",
    "start": "2722319",
    "end": "2727960"
  },
  {
    "text": "bridge this stream into his convenient log aggregator system maybe it's elk",
    "start": "2727960",
    "end": "2734359"
  },
  {
    "text": "maybe it's cloudwatch we don't want to make this a Cod decision however when",
    "start": "2734359",
    "end": "2740000"
  },
  {
    "text": "the most popular logger for NOS for years at least until recently Winstone",
    "start": "2740000",
    "end": "2745119"
  },
  {
    "text": "in almost all of his examples they were uh showing how to you log to to a",
    "start": "2745119",
    "end": "2750680"
  },
  {
    "text": "file and uh to make it more tangible if you log to a file in kubernetes it's so hard hard so hard to",
    "start": "2750680",
    "end": "2758240"
  },
  {
    "text": "extract all the files from all the pods and unify them however if you do it to STD out it's it's just happening it's",
    "start": "2758240",
    "end": "2765119"
  },
  {
    "text": "it's another point where developers don't think Ops in Ops way soon enough",
    "start": "2765119",
    "end": "2770240"
  },
  {
    "text": "yeah but but there is a Nuance difference between standout and stand error right like and it has to do with",
    "start": "2770240",
    "end": "2777240"
  },
  {
    "text": "uh I think if I remember like when your application is crashing right like Andor",
    "start": "2777240",
    "end": "2783319"
  },
  {
    "text": "blocking threads and so can you maybe just like shed some light there like briefly I it's a very important it's",
    "start": "2783319",
    "end": "2789000"
  },
  {
    "text": "more an advanced topic but I think it's an important nugget for people to digest yeah I believe this uh distinguishment",
    "start": "2789000",
    "end": "2796760"
  },
  {
    "text": "was made for mostly for CLI application because in CLI application you need kind of two feeds one is what this the user",
    "start": "2796760",
    "end": "2804200"
  },
  {
    "text": "the user is the one who prints on the CLI probably administrator a power user what he sees on the screen and the other",
    "start": "2804200",
    "end": "2810640"
  },
  {
    "text": "on the other end what the program prints when it uh exits or for Diagnostics so",
    "start": "2810640",
    "end": "2817079"
  },
  {
    "text": "there was kind of Separation however in backend application which was my uh this",
    "start": "2817079",
    "end": "2822520"
  },
  {
    "text": "is the context I used here in back end application this distinguished um doesn't make a lot of at least is not",
    "start": "2822520",
    "end": "2828800"
  },
  {
    "text": "very useful so this is why I didn't differentiate yeah yeah if you want to go by the book STD error is the right",
    "start": "2828800",
    "end": "2837160"
  },
  {
    "text": "the target for well said yeah a lot of times in services will will wrap those",
    "start": "2837160",
    "end": "2842599"
  },
  {
    "text": "two up and there's there's no differentiation in where those actual entries go if you're sending them over to a paper trail or something like that",
    "start": "2842599",
    "end": "2849160"
  },
  {
    "text": "so definitely makes sense on the command line though as you have certain things that you want the person to see",
    "start": "2849160",
    "end": "2854520"
  },
  {
    "text": "regardless of something going wrong like they asked you for an answer and you give them an answer and then perhaps you",
    "start": "2854520",
    "end": "2860160"
  },
  {
    "text": "they ask you for an answer and it's an invalid question and you log that to standard out versus or sorry to standard error versus standard",
    "start": "2860160",
    "end": "2868130"
  },
  {
    "text": "[Music]",
    "start": "2868130",
    "end": "2875839"
  },
  {
    "text": "out what up JS party people it's your boy here Adams stovak and I have a question",
    "start": "2875839",
    "end": "2882359"
  },
  {
    "text": "for you are you having trouble uncovering performance issues in your nodejs apps if so check out our friends",
    "start": "2882359",
    "end": "2887880"
  },
  {
    "text": "at Scout APM that's Scout apm.com changelog Scout is application",
    "start": "2887880",
    "end": "2893559"
  },
  {
    "text": "monitoring that automatically reports key nodejs monitoring metrics instruments many nodejs libraries",
    "start": "2893559",
    "end": "2898880"
  },
  {
    "text": "automatically detects easy to miss m plus1 queries that sneak into production plus a ton more and of course Scout is",
    "start": "2898880",
    "end": "2905520"
  },
  {
    "text": "easy to install via M package learn more and get started for free at Scout apm.com changelog no credit cards",
    "start": "2905520",
    "end": "2912839"
  },
  {
    "text": "required that's Scout apm.com",
    "start": "2912839",
    "end": "2917040"
  },
  {
    "text": "[Music]",
    "start": "2917990",
    "end": "2921119"
  },
  {
    "text": "[Music]",
    "start": "2930230",
    "end": "2934099"
  },
  {
    "text": "cheog okay let's turn our Focus over to Security because there's so much to say here and this is a place where many of",
    "start": "2935720",
    "end": "2942599"
  },
  {
    "text": "us know a thing or two but not everything and even if we think that we have a good grasp there's so many ways",
    "start": "2942599",
    "end": "2950040"
  },
  {
    "text": "you can shoot yourself in the foot and accidentally write insecure code or",
    "start": "2950040",
    "end": "2955160"
  },
  {
    "text": "deploy things in an insecure way and surely there's lots of best practices around that you have a whole section in",
    "start": "2955160",
    "end": "2961720"
  },
  {
    "text": "the repo on security best practices so let's pick a few and talk through them Yanni what are some",
    "start": "2961720",
    "end": "2967599"
  },
  {
    "text": "globalized best like everyone should know about these don't do this or do this kind of security practices yeah",
    "start": "2967599",
    "end": "2974760"
  },
  {
    "text": "well I try to pick some interesting um security practices that um kind of",
    "start": "2974760",
    "end": "2981040"
  },
  {
    "text": "reflect on the complexity of uh configuring our application um security",
    "start": "2981040",
    "end": "2987480"
  },
  {
    "text": "the first one is that um you should hopefully inspect for outdated",
    "start": "2987480",
    "end": "2993799"
  },
  {
    "text": "packages but the important question is how soon should you update your packages",
    "start": "2993799",
    "end": "3001040"
  },
  {
    "text": "because um one common says believe that yeah we should always update as fast as",
    "start": "3001040",
    "end": "3007240"
  },
  {
    "text": "possible right we want to get the latest and greatest as soon as they become available but what we have seen in the",
    "start": "3007240",
    "end": "3014799"
  },
  {
    "text": "industry in the past two years at least is that most of the security Bridges the hilarious npm security Bridges were",
    "start": "3014799",
    "end": "3022359"
  },
  {
    "text": "discovered by the community in I tried to calculate this it was around 30 maybe",
    "start": "3022359",
    "end": "3028359"
  },
  {
    "text": "30 days so if someone Waits before updating 30 or 40 days you're greatly",
    "start": "3028359",
    "end": "3035480"
  },
  {
    "text": "decreasing the chances of you are affecting by some uh new security bridge in npm I'm not sure if you're familiar",
    "start": "3035480",
    "end": "3042200"
  },
  {
    "text": "with the uh in famous event stream incident yes we are yeah maybe a quick",
    "start": "3042200",
    "end": "3048880"
  },
  {
    "text": "recap on this but our audience may not be yeah for sure we we did have a conversation there's a show about this",
    "start": "3048880",
    "end": "3054480"
  },
  {
    "text": "back in December of 2019 when it happened Nick if you recall I think it was you and I and fos talked about event",
    "start": "3054480",
    "end": "3059799"
  },
  {
    "text": "streaming we even had Dominic on maybe it was on the change log anyways we've covered this topic but it's been a while",
    "start": "3059799",
    "end": "3065079"
  },
  {
    "text": "and even I don't remember the details so please do review it for everybody yeah so shortly there is a new a very very",
    "start": "3065079",
    "end": "3073240"
  },
  {
    "text": "popular type of attacks which are called the supply chain attack and the idea is don't try to",
    "start": "3073240",
    "end": "3079400"
  },
  {
    "text": "intrude into someone production that's hard and complex instead just uh socially become a friend of a maintainer",
    "start": "3079400",
    "end": "3087440"
  },
  {
    "text": "become uh one of the maintenance of a package and then you get infinite power",
    "start": "3087440",
    "end": "3092559"
  },
  {
    "text": "so in a event stream is one of those very very um popular packages I believe",
    "start": "3092559",
    "end": "3099520"
  },
  {
    "text": "it was downloaded eight million times a week or a months can't remember but it's",
    "start": "3099520",
    "end": "3104880"
  },
  {
    "text": "not really maintained anymore there's no much to add to it it just works and at some point some new maintainer kind of",
    "start": "3104880",
    "end": "3111960"
  },
  {
    "text": "um show intent to start contributing and got the trust of the core maintainer and",
    "start": "3111960",
    "end": "3118839"
  },
  {
    "text": "then for a start he he he does a lot of useful stuff and at some point he",
    "start": "3118839",
    "end": "3123960"
  },
  {
    "text": "injected a new dependency to the code nobody noticed and this dependency was a",
    "start": "3123960",
    "end": "3129920"
  },
  {
    "text": "very malicious one I believe it tried to steal some Bitcoin files from the local",
    "start": "3129920",
    "end": "3136160"
  },
  {
    "text": "developers but the important Point here is that it affected a I believe eight",
    "start": "3136160",
    "end": "3142119"
  },
  {
    "text": "million people downloaded this um package until it was discovered around 30 days later so those who waited those",
    "start": "3142119",
    "end": "3150440"
  },
  {
    "text": "who are patient benefit so the bottom line here is that keep your code updated",
    "start": "3150440",
    "end": "3155599"
  },
  {
    "text": "but maybe some kind of grace period before you do that so I'm so glad that",
    "start": "3155599",
    "end": "3161960"
  },
  {
    "text": "you're bringing this up because I literally we should put this tweet in the show notes uh Jared okay uh one of",
    "start": "3161960",
    "end": "3167880"
  },
  {
    "text": "my really good friends who is the former CTO of npm while I was there and uh",
    "start": "3167880",
    "end": "3173200"
  },
  {
    "text": "literally we were making fun of dependabot yesterday um we were saying like if you don't automat you know",
    "start": "3173200",
    "end": "3179280"
  },
  {
    "text": "you're not updating your repo six times a day via depended bot like can you really call yourself a developer right",
    "start": "3179280",
    "end": "3185839"
  },
  {
    "text": "so I and while I was at npm one of the things I worked on was like updating the",
    "start": "3185839",
    "end": "3191119"
  },
  {
    "text": "unpublished package feature right so we actually gave a little more autonomy to users like we extended out we can link",
    "start": "3191119",
    "end": "3197520"
  },
  {
    "text": "to the blog post on that as well so now you can unpublish packages with a little bit more of a grace period and more like",
    "start": "3197520",
    "end": "3203319"
  },
  {
    "text": "leeway if you meet certain criteria right so we just kind of took a First Step at like widening that and there's a",
    "start": "3203319",
    "end": "3209960"
  },
  {
    "text": "lot like's a lot of headache to get that feature out it's a very sensitive topic right like once you publish something in",
    "start": "3209960",
    "end": "3216680"
  },
  {
    "text": "theory like mpm registry is like this immutable thing I consider it to be immutable like in fact Isaac who is the",
    "start": "3216680",
    "end": "3223440"
  },
  {
    "text": "you know creator of CLI and um he said that like he regrets adding the",
    "start": "3223440",
    "end": "3230000"
  },
  {
    "text": "unpublish feature into the API right because it takes away from the",
    "start": "3230000",
    "end": "3235799"
  },
  {
    "text": "immutability mhm and while I was at mpm like there's tons of like security packages that get",
    "start": "3235799",
    "end": "3241680"
  },
  {
    "text": "removed from the registry tons you know if if something malicious like we we remove it like it's right it's it's gone",
    "start": "3241680",
    "end": "3247720"
  },
  {
    "text": "regardless of who was downloading it or not and so you know it's I am very much",
    "start": "3247720",
    "end": "3253000"
  },
  {
    "text": "in the favor of being one major release behind for everything like I just think",
    "start": "3253000",
    "end": "3258720"
  },
  {
    "text": "it's you know it living on the edge is just too much churn the bigger your",
    "start": "3258720",
    "end": "3263760"
  },
  {
    "text": "engineering team right like the more you have at stake you know so I for me that's the rule that I use I like being one major",
    "start": "3263760",
    "end": "3269920"
  },
  {
    "text": "version behind that gives enough especially with the npm ecosystem like there's enough dependencies on the",
    "start": "3269920",
    "end": "3276200"
  },
  {
    "text": "dependencies you know like your dependencies have dependencies and peer dependencies like there's just too much",
    "start": "3276200",
    "end": "3282400"
  },
  {
    "text": "interlocking and giving and like the more time you wait the more everything is going to just work you know together",
    "start": "3282400",
    "end": "3289640"
  },
  {
    "text": "in a seamless way versus like upgrading your webpack config and and or upgrading your web pack and then all of a sudden",
    "start": "3289640",
    "end": "3295599"
  },
  {
    "text": "you know babble still hasn't caught up or or they're still fixing bugs you know like why why take that cost like I I",
    "start": "3295599",
    "end": "3301319"
  },
  {
    "text": "think our obsession with like new is something that we need to like",
    "start": "3301319",
    "end": "3306359"
  },
  {
    "text": "acknowledge as a problem and actively curb in our community like it's just unhealthy and it promotes like unsafe",
    "start": "3306359",
    "end": "3312960"
  },
  {
    "text": "code practices as well just like Yi just highlighted with the fs events yeah so",
    "start": "3312960",
    "end": "3318480"
  },
  {
    "text": "stay a version behind I think that's a pretty good practice I would also major version major version I would also",
    "start": "3318480",
    "end": "3325079"
  },
  {
    "text": "submit limit your dependencies right I mean limit and scrutinize your",
    "start": "3325079",
    "end": "3330400"
  },
  {
    "text": "dependencies is an actual practical takeaway here because the problem with this kind of a exploit right we're talk",
    "start": "3330400",
    "end": "3336559"
  },
  {
    "text": "about the different kinds of exploits this one a supply chain exploit is you are not in that supply chain you as a",
    "start": "3336559",
    "end": "3341960"
  },
  {
    "text": "developer you're just sitting over there minding your own business you're dependent upon the supply chain what can",
    "start": "3341960",
    "end": "3347240"
  },
  {
    "text": "I actually do as a person typing into my terminal and my Editor to guard myself",
    "start": "3347240",
    "end": "3352680"
  },
  {
    "text": "against this problem and really the a couple of things you can do is say a version behind or a major version if",
    "start": "3352680",
    "end": "3357960"
  },
  {
    "text": "you're very paranoid um at least a patch or a minor version and limit and scrutinize your dependency because while",
    "start": "3357960",
    "end": "3364400"
  },
  {
    "text": "you didn't write that code you don't maintain that code you don't know where that code came from the buck does stop",
    "start": "3364400",
    "end": "3369480"
  },
  {
    "text": "with you it's your code once you execute it and run it so the only thing you can do is limit that attack surface and",
    "start": "3369480",
    "end": "3378240"
  },
  {
    "text": "verify try to that you're using dependencies that are reliable and maintained and be aware of what's going",
    "start": "3378240",
    "end": "3384720"
  },
  {
    "text": "on around you which is difficult to pull off but necessary in this ecosystem Jared you're you're you're a man of my",
    "start": "3384720",
    "end": "3391680"
  },
  {
    "text": "heart really because I can share some some insight on this you know as someone who's been a lead for lead engineer for",
    "start": "3391680",
    "end": "3398079"
  },
  {
    "text": "a while like when evaluating new tools and libraries my personal rubric which I",
    "start": "3398079",
    "end": "3403160"
  },
  {
    "text": "should probably write a blog post on because I think this is useful to more people an element of my rubric involves",
    "start": "3403160",
    "end": "3409400"
  },
  {
    "text": "looking at the dependency chain of the tool that I'm like going to install right so for example you look at",
    "start": "3409400",
    "end": "3415440"
  },
  {
    "text": "something like a load module it's just pure function no dependency that gets a high score for me",
    "start": "3415440",
    "end": "3421960"
  },
  {
    "text": "on like that's a plus right if I look at a module that is like not doing magic",
    "start": "3421960",
    "end": "3427720"
  },
  {
    "text": "rocket science but it has like 71 dependencies like I'm not into it right like I would rather find a tool that's",
    "start": "3427720",
    "end": "3434039"
  },
  {
    "text": "like more static and like even if it's not as wellmaintained like I will use that over you know like just um adding",
    "start": "3434039",
    "end": "3442119"
  },
  {
    "text": "71 new sub dependencies into my project you know and so like there is a process",
    "start": "3442119",
    "end": "3448119"
  },
  {
    "text": "and there should be a rubric that you have based on your business needs and goals as a team or as an engineering or",
    "start": "3448119",
    "end": "3454599"
  },
  {
    "text": "when adding new dependencies and you know that rubric should include like how many things as",
    "start": "3454599",
    "end": "3462839"
  },
  {
    "text": "like who else am I getting who else am I getting into bed with or who else am I marrying when I npm install safe right",
    "start": "3462839",
    "end": "3468760"
  },
  {
    "text": "because you are just like Jared said you are responsible for maintaining that code whether you like it or not and node",
    "start": "3468760",
    "end": "3474280"
  },
  {
    "text": "modules are absolutely the heaviest objects in the universe so right let me",
    "start": "3474280",
    "end": "3479359"
  },
  {
    "text": "do a Shameless not self-promotion but self- show promotion there's a excellent JS party episode Nick you are on it uh",
    "start": "3479359",
    "end": "3486280"
  },
  {
    "text": "episode 56 called We're dependent see and it's",
    "start": "3486280",
    "end": "3491520"
  },
  {
    "text": "sfia and kall and Chris and Nick and they discuss at length how they decide",
    "start": "3491520",
    "end": "3498039"
  },
  {
    "text": "like that rubric their own personal rubrics that go in deep when and how to select a third party dependency and",
    "start": "3498039",
    "end": "3505760"
  },
  {
    "text": "there's that episode is just filled with wisdom so I'll submit that to the listeners uh to go and check that one",
    "start": "3505760",
    "end": "3511559"
  },
  {
    "text": "out but then also I feel like this kind of thing this dependency selection",
    "start": "3511559",
    "end": "3517119"
  },
  {
    "text": "process is something that needs to be blogged and like referenced and cified yeah because you",
    "start": "3517119",
    "end": "3525000"
  },
  {
    "text": "do it enough over time and it almost becomes intuition like I can sense when this is a bad idea but that's just",
    "start": "3525000",
    "end": "3531079"
  },
  {
    "text": "because I've internalized my own rubric right like I know what to look for and I'm you know look for what to look for",
    "start": "3531079",
    "end": "3537079"
  },
  {
    "text": "over time you develop this sense of what is a good or bad choice in that regard but these things can be enumerated and",
    "start": "3537079",
    "end": "3544880"
  },
  {
    "text": "explained and scored and you could actually have very useful transferable knowledge that way yeah or hire Yoni you",
    "start": "3544880",
    "end": "3551640"
  },
  {
    "text": "know if you have the budget there you go thanks for promoting",
    "start": "3551640",
    "end": "3557280"
  },
  {
    "text": "me I hope one day to hire you I'm not kidding I mean it's extremely valuable",
    "start": "3557280",
    "end": "3562520"
  },
  {
    "text": "to get like external feedback and on penetration testing and security best practices it doesn't matter how good of a team you are like you have bias like",
    "start": "3562520",
    "end": "3570520"
  },
  {
    "text": "you know like I have blind spots we have blind spots collectively and you know so that's that's supply chain problems what",
    "start": "3570520",
    "end": "3577319"
  },
  {
    "text": "about the problems that we introduce uh in our first party code because we have a much more direct relationship with",
    "start": "3577319",
    "end": "3583079"
  },
  {
    "text": "that and there's things that you can do to avoid that kind of attack right there's SQL injection there's crossy",
    "start": "3583079",
    "end": "3589599"
  },
  {
    "text": "scripting there's all sorts of things that can happen right there in the code that you're typing out y so what are",
    "start": "3589599",
    "end": "3594720"
  },
  {
    "text": "your best practices around how to handle problematic input from your users that you weren't expecting",
    "start": "3594720",
    "end": "3601039"
  },
  {
    "text": "coming into your note app typescript no typescript this",
    "start": "3601039",
    "end": "3606720"
  },
  {
    "text": "episode Nick did you did you just say typescript no never never the ghost of",
    "start": "3606720",
    "end": "3613240"
  },
  {
    "text": "Nick past yeah so I guess that um malicious or challenging input is a big",
    "start": "3613240",
    "end": "3620319"
  },
  {
    "text": "topic but first I do agree with about typescript but I would phrase it in a more generic way",
    "start": "3620319",
    "end": "3626720"
  },
  {
    "text": "uh this was a very important advice in nodejs L three years ago now it's almost common wisdom you should have some layer",
    "start": "3626720",
    "end": "3634240"
  },
  {
    "text": "of should have some mechanism of presenting the schema that you are expecting in the request whether it's a",
    "start": "3634240",
    "end": "3640960"
  },
  {
    "text": "typescript or a Json schema or class validator becomes now very popular with",
    "start": "3640960",
    "end": "3646119"
  },
  {
    "text": "net something that should limit the attack surface and the you know it's",
    "start": "3646119",
    "end": "3651319"
  },
  {
    "text": "funny I think that I tried many many many times at least until a year or two ago to do a very very simple attack",
    "start": "3651319",
    "end": "3657440"
  },
  {
    "text": "against noj application so you know that there is some post route just send a",
    "start": "3657440",
    "end": "3664000"
  },
  {
    "text": "custom Json with other property and a big portion of the big portion",
    "start": "3664000",
    "end": "3669640"
  },
  {
    "text": "application just crashed after this because someone was doing that I expect some property dot other property but it",
    "start": "3669640",
    "end": "3676520"
  },
  {
    "text": "wasn't there so there was an uncut error and so yeah validation is um obviously",
    "start": "3676520",
    "end": "3683760"
  },
  {
    "text": "one tier and there are linters that will catch think like SQL injection or odm",
    "start": "3683760",
    "end": "3689559"
  },
  {
    "text": "injection one of the interesting stuff is um once you know that you should get",
    "start": "3689559",
    "end": "3694680"
  },
  {
    "text": "Dynamic input from the user so it's not a structured request with a specific",
    "start": "3694680",
    "end": "3699760"
  },
  {
    "text": "Json schema it's kind of you know free form content user type a comment how do",
    "start": "3699760",
    "end": "3705200"
  },
  {
    "text": "you treat that escaping of this string should it happen on the first tier",
    "start": "3705200",
    "end": "3711240"
  },
  {
    "text": "before saving to the database should it happen on the on the Upstream when we send back to the user and um one of the",
    "start": "3711240",
    "end": "3719240"
  },
  {
    "text": "things that we learned is that this type of escaping should happen on the Upstream in other words when you return",
    "start": "3719240",
    "end": "3725640"
  },
  {
    "text": "it back to the device user that is quaring for the information because",
    "start": "3725640",
    "end": "3730760"
  },
  {
    "text": "escaping is platform specific thing uh you escape differently for browsers you",
    "start": "3730760",
    "end": "3736960"
  },
  {
    "text": "escape differently for mobile applications for some platform you don't know how to escape so typically you",
    "start": "3736960",
    "end": "3743640"
  },
  {
    "text": "should save in the database the raw information obviously after you have ensured there's no SQL injection there",
    "start": "3743640",
    "end": "3749880"
  },
  {
    "text": "and if you use the right orms or tools the rappers there shouldn't be an SQL",
    "start": "3749880",
    "end": "3755279"
  },
  {
    "text": "injection but generally speaking the row content should be stored in the database and the p and the sanitizing escaping",
    "start": "3755279",
    "end": "3762839"
  },
  {
    "text": "should happen as the content is served um back to the user yeah that that makes",
    "start": "3762839",
    "end": "3768400"
  },
  {
    "text": "a ton of sense um I'm just curious for me like I'm always amazed at how you",
    "start": "3768400",
    "end": "3774760"
  },
  {
    "text": "know much buyas I have um being a quality and performance and whatever",
    "start": "3774760",
    "end": "3781760"
  },
  {
    "text": "like obsessive compulsive life person like I'm amazed that there's just basic",
    "start": "3781760",
    "end": "3787760"
  },
  {
    "text": "stuff that I I consider just like duh that not everybody does right and like one of those things for people who write",
    "start": "3787760",
    "end": "3794079"
  },
  {
    "text": "a lot of backend Services is like schema validation via a tool like the open API spec formally known as",
    "start": "3794079",
    "end": "3800920"
  },
  {
    "text": "Swagger and like just how important it is to have that for your requests and responses because you know even like if",
    "start": "3800920",
    "end": "3809440"
  },
  {
    "text": "if somebody is um adding something that you didn't expect or like you know like",
    "start": "3809440",
    "end": "3815079"
  },
  {
    "text": "you're able to catch that log that monitor that and have it go through security review Cycles or whatever like",
    "start": "3815079",
    "end": "3821160"
  },
  {
    "text": "you can loop back like it's a life cycle event where having those things allows",
    "start": "3821160",
    "end": "3827240"
  },
  {
    "text": "you to have that improved communication flow between devops and security right and engineering and so I'm just just",
    "start": "3827240",
    "end": "3834559"
  },
  {
    "text": "curious if you have any thoughts on that you mean thoughts on like the overall process of um proofing your security",
    "start": "3834559",
    "end": "3841880"
  },
  {
    "text": "level or more specific well leveraging tools like open API spec as well to",
    "start": "3841880",
    "end": "3847440"
  },
  {
    "text": "ensure like there isn't drift on the contract right between requests and",
    "start": "3847440",
    "end": "3852520"
  },
  {
    "text": "responses yeah so um I'll start with the open AI thing so I I'm sure Nick will be",
    "start": "3852520",
    "end": "3858760"
  },
  {
    "text": "pleasant and already aware that uh there is a great movement in the node GS ecosystem towered more structured uh",
    "start": "3858760",
    "end": "3867640"
  },
  {
    "text": "thing like typescript and the nest with nestjs now it's much much easier to",
    "start": "3867640",
    "end": "3874400"
  },
  {
    "text": "introduce open API and get upfront validation of the open API spec um",
    "start": "3874400",
    "end": "3883319"
  },
  {
    "text": "specifically we will probably discuss it in the testing session but there are also very neat testing tools that allows",
    "start": "3883319",
    "end": "3889960"
  },
  {
    "text": "you to check up front whether your if during your test one of your request VI",
    "start": "3889960",
    "end": "3895839"
  },
  {
    "text": "Ates the API spec the Swagger then it detects it automatically even if your",
    "start": "3895839",
    "end": "3902440"
  },
  {
    "text": "code didn't detected it and let it flow by the test will Discover it based on",
    "start": "3902440",
    "end": "3907960"
  },
  {
    "text": "the network uh traffic I would also mentioned the move to graphql it's a",
    "start": "3907960",
    "end": "3913880"
  },
  {
    "text": "very popular transport it's all going toward uh getting that structure that we",
    "start": "3913880",
    "end": "3919520"
  },
  {
    "text": "need I would even argue that kind of um attacking using some surprising input",
    "start": "3919520",
    "end": "3926520"
  },
  {
    "text": "would become a bit more difficult for attacker now due to all of this um like",
    "start": "3926520",
    "end": "3933039"
  },
  {
    "text": "the hardening of schemas and validation like built-in validation yeah I I agree",
    "start": "3933039",
    "end": "3938319"
  },
  {
    "text": "I I I I feel like for me the the the industry industry here being like Library authors and RM developers Andor",
    "start": "3938319",
    "end": "3946599"
  },
  {
    "text": "you know the services world like we're heading into more like stronger defaults",
    "start": "3946599",
    "end": "3952520"
  },
  {
    "text": "right better defaults out of the box right and so so like give power users",
    "start": "3952520",
    "end": "3957680"
  },
  {
    "text": "flexibility but also give novices less of a chance to shoot themselves in the foot so yeah it seems like we're head",
    "start": "3957680",
    "end": "3964279"
  },
  {
    "text": "we're heading in the right direction I think another way that we could move there together faster better stronger is",
    "start": "3964279",
    "end": "3971039"
  },
  {
    "text": "to collaborate more one of the things that I see inside our ecosystem is this",
    "start": "3971039",
    "end": "3976960"
  },
  {
    "text": "ethos of like the Indie Dev with a th000 mpm packages right like one person many",
    "start": "3976960",
    "end": "3982599"
  },
  {
    "text": "packages and that's amazing and those people are amazing but what can be more",
    "start": "3982599",
    "end": "3989000"
  },
  {
    "text": "secure and maintained and sustainable is many devs working together on less",
    "start": "3989000",
    "end": "3995000"
  },
  {
    "text": "packages right because now we're bringing our Collective knowledge and even inside the security research field",
    "start": "3995000",
    "end": "4001880"
  },
  {
    "text": "there are people with there are verticals inside of information security right there's people with this particular Niche expertise and they can",
    "start": "4001880",
    "end": "4010000"
  },
  {
    "text": "bring a different eye on a security question than somebody else like somebody who understands crypto graphy",
    "start": "4010000",
    "end": "4015920"
  },
  {
    "text": "inside and out versus somebody who understands databases inside and out and all the way that a database can be",
    "start": "4015920",
    "end": "4021279"
  },
  {
    "text": "compromised and so more people working together on less projects which really",
    "start": "4021279",
    "end": "4026359"
  },
  {
    "text": "comes into things like Frameworks versus libraries right teaming up on a",
    "start": "4026359",
    "end": "4031559"
  },
  {
    "text": "framework has a lot of advantages and one of those advantages is all of us",
    "start": "4031559",
    "end": "4037319"
  },
  {
    "text": "looking at one code base versus me looking at thousands of little",
    "start": "4037319",
    "end": "4042440"
  },
  {
    "text": "code bases so that's just an ideal throughout there no it's that's such a good point we should Vlog about that or",
    "start": "4042440",
    "end": "4048359"
  },
  {
    "text": "we should do a show about that Jared seriously it's such a such a good um show uh maybe we can have a panel of",
    "start": "4048359",
    "end": "4053960"
  },
  {
    "text": "framework authors and talk about how like the collective makes them better I think of next as a really good example",
    "start": "4053960",
    "end": "4060799"
  },
  {
    "text": "here because you know I think that like they've done a lot to kind of have those good defaults right so you don't have to",
    "start": "4060799",
    "end": "4066279"
  },
  {
    "text": "like worry about performance and all these other things because there's like there's good rails for you so you don't",
    "start": "4066279",
    "end": "4072319"
  },
  {
    "text": "go off the rails right right so I just just quickly y i I wanted to ask you um",
    "start": "4072319",
    "end": "4078440"
  },
  {
    "text": "specifically for folks that are writing a lot of front end code what are some common things that you see as like",
    "start": "4078440",
    "end": "4085279"
  },
  {
    "text": "security fa Paws that start in the front end and affect back ends like um it",
    "start": "4085279",
    "end": "4091559"
  },
  {
    "text": "commonly I'm just curious like are there you know whether it's escaping CSS HTML",
    "start": "4091559",
    "end": "4097278"
  },
  {
    "text": "JavaScript or like I'm just how how can folks who are writing frontend",
    "start": "4097279",
    "end": "4102640"
  },
  {
    "text": "code make less work for backend security make less work interesting less work",
    "start": "4102640",
    "end": "4108880"
  },
  {
    "text": "yeah yeah so just before answering that I want to relate to something very interesting that gerro said and I think",
    "start": "4108880",
    "end": "4115520"
  },
  {
    "text": "that Gerard's idea and I'm getting back your report Tamal at a second what what you said I think is is really strategic",
    "start": "4115520",
    "end": "4122318"
  },
  {
    "text": "point in NOS now and it can be generalized to everything not only security it used to be and I see it many",
    "start": "4122319",
    "end": "4128560"
  },
  {
    "text": "times I'm now building this Lego puzzle from many many pieces and I have to make",
    "start": "4128560",
    "end": "4134120"
  },
  {
    "text": "I'm overwhelmed by the amount of decisions and Architectural stuff that I have to make decision on the quality of",
    "start": "4134120",
    "end": "4141238"
  },
  {
    "text": "every every decision is is is diminishing uh but now that we starting to see mature framework like njs then",
    "start": "4141239",
    "end": "4149278"
  },
  {
    "text": "not only Security will become um this pattern of many people looking",
    "start": "4149279",
    "end": "4155838"
  },
  {
    "text": "at one code base will be very beneficial not only related to security everything performance um features uh structure",
    "start": "4155839",
    "end": "4164120"
  },
  {
    "text": "yeah yeah so uh CH chromium is a very good example of that chromium formerly blank formerly",
    "start": "4164120",
    "end": "4172679"
  },
  {
    "text": "webkit or whatever like I don't know maybe not formerly blink but like formerly web kits right so like it's",
    "start": "4172679",
    "end": "4178679"
  },
  {
    "text": "like a more than a million person hours I think of engineering time has collectively gone into making a that",
    "start": "4178679",
    "end": "4185758"
  },
  {
    "text": "browser rendering engine and all you know it is not something where like like nobody's going to write a new browser",
    "start": "4185759",
    "end": "4192560"
  },
  {
    "text": "right like folks like Brave forked and like added their flavor of features to",
    "start": "4192560",
    "end": "4198800"
  },
  {
    "text": "that but no no no one's going to put in the work and brave also like they they they're constantly pulling from Master",
    "start": "4198800",
    "end": "4206000"
  },
  {
    "text": "right like they're keeping up with chromium and they pay they pay the price for that but I'm I'm just saying that like that is a very good example of",
    "start": "4206000",
    "end": "4214120"
  },
  {
    "text": "open-source projects where lots and lots of people are working on one thing and",
    "start": "4214120",
    "end": "4220120"
  },
  {
    "text": "collectively are able to like make make it the best right mhm so so wrapping up",
    "start": "4220120",
    "end": "4226320"
  },
  {
    "text": "the conversation of what front Enders can do ultimately I will say that your back end has to be secure the front end",
    "start": "4226320",
    "end": "4231880"
  },
  {
    "text": "you cannot trust somebody could throw away your front end and send you whatever input they want via a proxy via",
    "start": "4231880",
    "end": "4238000"
  },
  {
    "text": "a HTTP you know request Creator curl but there are things that front Enders can",
    "start": "4238000",
    "end": "4243800"
  },
  {
    "text": "do to help out and one of those things I'll just throw out there is that they can validate inputs on their users",
    "start": "4243800",
    "end": "4249719"
  },
  {
    "text": "behalf in the front end that will not stop the malicious user but it will stop",
    "start": "4249719",
    "end": "4255360"
  },
  {
    "text": "what most of us hit most of the time is users just using our product in ways that we did not expect and creating",
    "start": "4255360",
    "end": "4261000"
  },
  {
    "text": "malformed inputs and submitting them via forms which can definitely accidentally either uh hack your s yeah going to",
    "start": "4261000",
    "end": "4268040"
  },
  {
    "text": "probably accidentally hack somebody but you can definitely do or dos Somebody by causing their back end to crash Yanni",
    "start": "4268040",
    "end": "4275120"
  },
  {
    "text": "any other thoughts from you on things front Enders can do or Nick as well you do a lot of front ends and backend so",
    "start": "4275120",
    "end": "4280440"
  },
  {
    "text": "surely you run into these issues where the front Enders can help out the node side of the of the fence",
    "start": "4280440",
    "end": "4285760"
  },
  {
    "text": "from my side just to re first to reiterate what you just said I mean there shouldn't be any trust between the",
    "start": "4285760",
    "end": "4291159"
  },
  {
    "text": "back end and the front end in most of the time so I don't see a practical way where the front end can actually uh",
    "start": "4291159",
    "end": "4298560"
  },
  {
    "text": "secure things help the back end uh maybe in realizing patterns but it's there there are two different teams at least",
    "start": "4298560",
    "end": "4304440"
  },
  {
    "text": "from security perspective one of the challenges that it's not the the front",
    "start": "4304440",
    "end": "4310159"
  },
  {
    "text": "end to blame but one of the movements that is caus is um triggering now more",
    "start": "4310159",
    "end": "4315840"
  },
  {
    "text": "challenges to the back end is the what I call the backendless pattern we seeing a",
    "start": "4315840",
    "end": "4321400"
  },
  {
    "text": "lot of demand now that the front end will be the core thing with most of the code where most of the Innovation and",
    "start": "4321400",
    "end": "4328080"
  },
  {
    "text": "changes happen and the backend is kind of a much more generic thing that much",
    "start": "4328080",
    "end": "4333920"
  },
  {
    "text": "that rarely change you can see stuff like uh uh for example AWS up sync or",
    "start": "4333920",
    "end": "4340280"
  },
  {
    "text": "graphql graphql is kind of a thing hey beend give me a very very Flex schema I",
    "start": "4340280",
    "end": "4346639"
  },
  {
    "text": "don't want to ask any time for new API route and I'll just in my front end can now get much more power but then on the",
    "start": "4346639",
    "end": "4354239"
  },
  {
    "text": "back end you have to implement a much more generic and um",
    "start": "4354239",
    "end": "4359800"
  },
  {
    "text": "dangerous uh gen code so for example now if using rest for example I could limit",
    "start": "4359800",
    "end": "4365400"
  },
  {
    "text": "and say Hey you can only query but for this entity using these fields now with",
    "start": "4365400",
    "end": "4370920"
  },
  {
    "text": "graphql the user kind of can Traverse and EXP exp my database or at least my",
    "start": "4370920",
    "end": "4377000"
  },
  {
    "text": "data provider in a very free form style of course that we have to limit this and",
    "start": "4377000",
    "end": "4382440"
  },
  {
    "text": "there are tools but this need to create a very generic layer for the front end",
    "start": "4382440",
    "end": "4388600"
  },
  {
    "text": "imposes many security challenges if I should choose one thing to blame the front and for it would be this one oh",
    "start": "4388600",
    "end": "4396080"
  },
  {
    "text": "wait wait what's the gener generic layer what why does the generic layer cause this issue if if ultimately there's no",
    "start": "4396080",
    "end": "4401760"
  },
  {
    "text": "trust to begin with like why why why does it even like ultimately like the back end is going to always validate its",
    "start": "4401760",
    "end": "4408600"
  },
  {
    "text": "inputs and and sanitize and do whatever like there's no trust so why why would the front end cause any more burden in",
    "start": "4408600",
    "end": "4415159"
  },
  {
    "text": "this regard you're providing a larger surface area you're requiring a larger surface area surface area I understand",
    "start": "4415159",
    "end": "4421199"
  },
  {
    "text": "okay okay got it thank you yeah and in plain words now if I have four database",
    "start": "4421199",
    "end": "4427360"
  },
  {
    "text": "tables and I used to know that if you approach this route you just get data from this table quering by two fields",
    "start": "4427360",
    "end": "4435639"
  },
  {
    "text": "Now using a single end point because graphql have a single uh is a single endpoint you can query something that I",
    "start": "4435639",
    "end": "4443120"
  },
  {
    "text": "don't really predict from my entire T from all of my tables using some kind of",
    "start": "4443120",
    "end": "4448960"
  },
  {
    "text": "relations of course that we have tools to limit this and we absolutely need to limit this but the the entire idea of",
    "start": "4448960",
    "end": "4456239"
  },
  {
    "text": "getting you so much flexibility is challenging bigger challenge absolutely well one thing that was a challenge was",
    "start": "4456239",
    "end": "4462600"
  },
  {
    "text": "fitting all of this amazing content into one episode of party you may be wondering what about testing you're not talking about testing well we're punting",
    "start": "4462600",
    "end": "4469440"
  },
  {
    "text": "on testing we're going to bring Yanni back here soon and we will have a show on testing because it is a huge Topic in",
    "start": "4469440",
    "end": "4476239"
  },
  {
    "text": "fact maybe even a minseries will be coming your way soon holler at us if",
    "start": "4476239",
    "end": "4481400"
  },
  {
    "text": "you're interested in the topic of testing holler at us if you don't want to hear about testing because uh you",
    "start": "4481400",
    "end": "4486520"
  },
  {
    "text": "have to eat your veggies but maybe we'll mix them in with some other Suites as well I don't know this has been an",
    "start": "4486520",
    "end": "4492760"
  },
  {
    "text": "awesome show I've learned a lot I hope you all have to Yanni thanks so much for creating this repo for maintaining it of",
    "start": "4492760",
    "end": "4499159"
  },
  {
    "text": "course the links to node best practices is in the show notes hop in there give",
    "start": "4499159",
    "end": "4504400"
  },
  {
    "text": "it a star bookmark it so you can reference it and hop into the issues and help out surely best practi has changed",
    "start": "4504400",
    "end": "4511199"
  },
  {
    "text": "they evolve this is one person's Thoughts melded with many people and his experiences so as we get more people",
    "start": "4511199",
    "end": "4517639"
  },
  {
    "text": "looking at it more people contributing we can really round it out and have a a great reference for the entire Community",
    "start": "4517639",
    "end": "4524400"
  },
  {
    "text": "mhm thanks for joining me guys any final thoughts from the panel where can people",
    "start": "4524400",
    "end": "4529520"
  },
  {
    "text": "find you on the interweb Z and how can they connect with you and help you yeah so if it's related to the no just best",
    "start": "4529520",
    "end": "4536480"
  },
  {
    "text": "practice repositories and by the way I have also a JavaScript testing best practices repo then U I'll really be",
    "start": "4536480",
    "end": "4543239"
  },
  {
    "text": "glad if you approach me there and U it helps there is a lot of learning why you write and think together about this",
    "start": "4543239",
    "end": "4549960"
  },
  {
    "text": "stuff and in overall Twitter or the common common social medias uh you're",
    "start": "4549960",
    "end": "4555360"
  },
  {
    "text": "welcome to approach I'm a very nice guy by the way it was a pleasure H quick",
    "start": "4555360",
    "end": "4560400"
  },
  {
    "text": "promotion we are publishing Docker Docker and node.js best practices probably next week cool uh so um yeah",
    "start": "4560400",
    "end": "4569080"
  },
  {
    "text": "I'll be glad if you um pay a visit and again I hope to be here again it was a real pleasure being here with you guys",
    "start": "4569080",
    "end": "4575800"
  },
  {
    "text": "awesome yeah we appreciate yie AML thanks for hanging Nick a pleasure as always that's our show we'll talk to you",
    "start": "4575800",
    "end": "4581840"
  },
  {
    "text": "again next week did you hear we are launching a",
    "start": "4581840",
    "end": "4587080"
  },
  {
    "text": "membership program it's called changelog Plus+ and we think it'll be super cool join the club for 10 bucks a month or",
    "start": "4587080",
    "end": "4593400"
  },
  {
    "text": "$100 a year and if you move fast you can get in for just six bucks a month or $60",
    "start": "4593400",
    "end": "4598600"
  },
  {
    "text": "a year that discount ends on September 1st so join today to support our work",
    "start": "4598600",
    "end": "4603760"
  },
  {
    "text": "get closer to the metal and make the ads disappear learn more at chain.com",
    "start": "4603760",
    "end": "4608920"
  },
  {
    "text": "Plus+ once again that's changel law.com Plus+ JS party is brought You by amazing",
    "start": "4608920",
    "end": "4615760"
  },
  {
    "text": "sponsors thanks again to fastly lenoe and robbar for their continued support",
    "start": "4615760",
    "end": "4620920"
  },
  {
    "text": "and our beats are produced by the one and only brake master cylinder that's all for now we'll talk to you again next",
    "start": "4620920",
    "end": "4627840"
  },
  {
    "text": "[Music]",
    "start": "4627840",
    "end": "4643159"
  },
  {
    "text": "week clap your hands everybody If You Got What It Takes cuz I'm Curtis blow",
    "start": "4643159",
    "end": "4649159"
  },
  {
    "text": "and I want you to know that these are the BRS we'll come back on testing code for its own episode and we just continue",
    "start": "4649159",
    "end": "4655960"
  },
  {
    "text": "on writing code and then go to test go straight to securing code for Segment I I like that",
    "start": "4655960",
    "end": "4662159"
  },
  {
    "text": "idea better I think security code and writing code are a better pair than than",
    "start": "4662159",
    "end": "4668719"
  },
  {
    "text": "yeah yeah I think testing code could be its own show and it deserves to be its own showt you know what I mean so yeah I",
    "start": "4668719",
    "end": "4675800"
  },
  {
    "text": "think that's a good idea I mean it could be its own series because there's so much yeah like multi-art we could we",
    "start": "4675800",
    "end": "4681440"
  },
  {
    "text": "could do like a like a series on testing yeah like the most boring month in JS",
    "start": "4681440",
    "end": "4686880"
  },
  {
    "text": "party history what are you talking about this is a ve it's vegetable I am all",
    "start": "4686880",
    "end": "4692320"
  },
  {
    "text": "about my vegetables okay I don't eat enough vegetables in real life but I sure as hell eat a lot of intellectual",
    "start": "4692320",
    "end": "4698320"
  },
  {
    "text": "vegetables you know you're on the JS party podcast right like you know we play games and we we debate things and",
    "start": "4698320",
    "end": "4704600"
  },
  {
    "text": "uh we sing songs I know but I just I just testing like doesn't get enough love and I a",
    "start": "4704600",
    "end": "4710120"
  },
  {
    "text": "testing nerd by the way so full disclosure like big testing I'm protesting and I've tested for many",
    "start": "4710120",
    "end": "4715520"
  },
  {
    "text": "years yeah no protesting is different different than being a testing fanatic",
    "start": "4715520",
    "end": "4721480"
  },
  {
    "text": "okay I I never said I was Tes fanatic I was just telling you that I am protesting you know okay that's but I'm",
    "start": "4721480",
    "end": "4727679"
  },
  {
    "text": "also protesting too much testing talk o see what it did there yeah well you just",
    "start": "4727679",
    "end": "4732960"
  },
  {
    "text": "have to be sneaky with it right just like you have to hide vegetables that's right you got to work it in that's why the whole series on testing is like",
    "start": "4732960",
    "end": "4739000"
  },
  {
    "text": "we'll lose most of our audience but if we sneak it in every episode then we're just King them what they need you know you figured out my typescript model",
    "start": "4739000",
    "end": "4746440"
  },
  {
    "text": "yeah yeah we're we're we're blending the we're BL blending the broli into the",
    "start": "4746440",
    "end": "4751719"
  },
  {
    "text": "we've been on to you about time script Nick you're not fooling",
    "start": "4751719",
    "end": "4757040"
  },
  {
    "text": "anybody",
    "start": "4757040",
    "end": "4760040"
  }
]