[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "years ago I had a lot to do with Fortran",
    "start": "0",
    "end": "3000"
  },
  {
    "text": "uh my advisor they referred to him as Dr",
    "start": "3000",
    "end": "5819"
  },
  {
    "text": "Fortran and he sounds like sounds like",
    "start": "5819",
    "end": "8940"
  },
  {
    "text": "an evil villain I interned for John",
    "start": "8940",
    "end": "11700"
  },
  {
    "text": "Backus oh wow",
    "start": "11700",
    "end": "13860"
  },
  {
    "text": "that's cool that is cool and so I have a",
    "start": "13860",
    "end": "16260"
  },
  {
    "start": "15000",
    "end": "67000"
  },
  {
    "text": "real soft spot for Fortran",
    "start": "16260",
    "end": "18840"
  },
  {
    "text": "and the thing that makes Fortran fast is",
    "start": "18840",
    "end": "21420"
  },
  {
    "text": "like one tiny little thing",
    "start": "21420",
    "end": "24240"
  },
  {
    "text": "and it's usually true in programs",
    "start": "24240",
    "end": "28199"
  },
  {
    "text": "and when it's and that has to do with",
    "start": "28199",
    "end": "30840"
  },
  {
    "text": "when you would say pass a pair of slices",
    "start": "30840",
    "end": "34140"
  },
  {
    "text": "to a function for Trans has you can",
    "start": "34140",
    "end": "36840"
  },
  {
    "text": "pretend they overlap if they overlap",
    "start": "36840",
    "end": "38700"
  },
  {
    "text": "it's not Fortran and it's less",
    "start": "38700",
    "end": "40920"
  },
  {
    "text": "interesting it's this interesting rule",
    "start": "40920",
    "end": "42780"
  },
  {
    "text": "that you can't check with syntax but if",
    "start": "42780",
    "end": "45540"
  },
  {
    "text": "your code overlaps passes overlapping",
    "start": "45540",
    "end": "48239"
  },
  {
    "text": "memory in parameters to a function and",
    "start": "48239",
    "end": "51539"
  },
  {
    "text": "it and it can tell then it's not Fortran",
    "start": "51539",
    "end": "54360"
  },
  {
    "text": "that's a convenient way of dealing with",
    "start": "54360",
    "end": "56340"
  },
  {
    "text": "all the bug reports they say oh my code",
    "start": "56340",
    "end": "58079"
  },
  {
    "text": "can tell that you did this and it says",
    "start": "58079",
    "end": "60239"
  },
  {
    "text": "well that's fine but that's not a",
    "start": "60239",
    "end": "61559"
  },
  {
    "text": "Fortran bug that's a bug in some other",
    "start": "61559",
    "end": "63300"
  },
  {
    "text": "language you're imagined going",
    "start": "63300",
    "end": "67020"
  },
  {
    "start": "67000",
    "end": "101000"
  },
  {
    "text": "um but what this does is it lets you do",
    "start": "67020",
    "end": "70200"
  },
  {
    "text": "it lets you do vectorization just",
    "start": "70200",
    "end": "72420"
  },
  {
    "text": "willy-nilly all sorts of vectorization",
    "start": "72420",
    "end": "75000"
  },
  {
    "text": "Transformations and parallelization",
    "start": "75000",
    "end": "76979"
  },
  {
    "text": "Transformations and reordering and and",
    "start": "76979",
    "end": "80159"
  },
  {
    "text": "this is sort of like the key to why",
    "start": "80159",
    "end": "82140"
  },
  {
    "text": "Fortran is so fast and so part of me",
    "start": "82140",
    "end": "85439"
  },
  {
    "text": "says",
    "start": "85439",
    "end": "86460"
  },
  {
    "text": "that it would be there's like these",
    "start": "86460",
    "end": "88619"
  },
  {
    "text": "Shaggy Dog stories of you know all and",
    "start": "88619",
    "end": "90540"
  },
  {
    "text": "it gets back to Stacks actually like the",
    "start": "90540",
    "end": "92820"
  },
  {
    "text": "the pain of inter-language calls and",
    "start": "92820",
    "end": "96299"
  },
  {
    "text": "translating data between this language",
    "start": "96299",
    "end": "98159"
  },
  {
    "text": "and that language and it's",
    "start": "98159",
    "end": "102360"
  },
  {
    "start": "101000",
    "end": "117000"
  },
  {
    "text": "it's never fun and it's always annoying",
    "start": "102360",
    "end": "104900"
  },
  {
    "text": "and so if you just said we could make it",
    "start": "104900",
    "end": "107700"
  },
  {
    "text": "go fast in go you would need if you did",
    "start": "107700",
    "end": "110939"
  },
  {
    "text": "this and it would need a lot of compiler",
    "start": "110939",
    "end": "112860"
  },
  {
    "text": "work and it would be more employment for",
    "start": "112860",
    "end": "115020"
  },
  {
    "text": "people like me which is great but you",
    "start": "115020",
    "end": "118799"
  },
  {
    "text": "could do this you could do this little",
    "start": "118799",
    "end": "120240"
  },
  {
    "text": "Fortran change to the parameter rules",
    "start": "120240",
    "end": "122220"
  },
  {
    "text": "and then you could make code go faster",
    "start": "122220",
    "end": "124680"
  },
  {
    "text": "and you know to you know to take this",
    "start": "124680",
    "end": "127560"
  },
  {
    "text": "out of the previous Century or the",
    "start": "127560",
    "end": "129599"
  },
  {
    "text": "previous Millennium I'd say machine",
    "start": "129599",
    "end": "131640"
  },
  {
    "text": "learning",
    "start": "131640",
    "end": "134239"
  },
  {
    "text": "so that's my unpopular opinion and",
    "start": "134780",
    "end": "137700"
  },
  {
    "text": "that's probably more unpopular with the",
    "start": "137700",
    "end": "139800"
  },
  {
    "text": "rest of the go team yeah they probably",
    "start": "139800",
    "end": "142140"
  },
  {
    "text": "understand it",
    "start": "142140",
    "end": "144070"
  },
  {
    "text": "[Music]",
    "start": "144070",
    "end": "150569"
  }
]