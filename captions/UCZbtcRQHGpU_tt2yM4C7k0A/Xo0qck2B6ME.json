[
  {
    "text": "what's up friends welcome back this week on the change La we're talking to Jake Zimmerman Jake is one of the leads at",
    "start": "3120",
    "end": "8280"
  },
  {
    "text": "stripe working on sorbet sbet is an open source project that does type checking in Ruby and runs over Stripes entire",
    "start": "8280",
    "end": "15599"
  },
  {
    "text": "Ruby code base as of last minut that code base was over 15 million lines of code spread across 150,000 files if you",
    "start": "15599",
    "end": "23359"
  },
  {
    "text": "think you have a bigger ruby code base Jake is down to go bite forbite to see who wins stick around because Jake",
    "start": "23359",
    "end": "30000"
  },
  {
    "text": "shares tons of wisdom and he also shares why he thinks types will win in the end a massive thank you to our friends and",
    "start": "30000",
    "end": "36879"
  },
  {
    "text": "our partners at fastly and fly this podcast got to you fast because fastly is super fast all over the world learn",
    "start": "36879",
    "end": "44480"
  },
  {
    "text": "more at fastly.com and our friends at fly help us put our app in our database close our users with no Ops check them",
    "start": "44480",
    "end": "51520"
  },
  {
    "text": "out at [Music]",
    "start": "51520",
    "end": "57299"
  },
  {
    "text": "fly.io",
    "start": "58920",
    "end": "61920"
  },
  {
    "text": "so I'm here with Ian wiro VP of product management at Sentry so Ian you've got a",
    "start": "64199",
    "end": "70159"
  },
  {
    "text": "developer first application moning platform it shows you what's slowed down",
    "start": "70159",
    "end": "75200"
  },
  {
    "text": "to the line of code that's very developer friendly and is making performance monitoring actionable what",
    "start": "75200",
    "end": "81520"
  },
  {
    "text": "are you all doing that's new what's what's novel there traditionally in errors what's the strength of centry is",
    "start": "81520",
    "end": "88520"
  },
  {
    "text": "we've taken not a stream of errors and said hey go look at this like all these error codes are flowing into a sets we",
    "start": "88520",
    "end": "95000"
  },
  {
    "text": "actually look at them we try and fingerprint them and say hey we've actually grouped all these things and",
    "start": "95000",
    "end": "101079"
  },
  {
    "text": "then we give you everything you need within Century to go and solve that error and close that out and that's I",
    "start": "101079",
    "end": "108200"
  },
  {
    "text": "think driven tons of value for our users and traditionally if you look at performance it's not that thing it's you",
    "start": "108200",
    "end": "114920"
  },
  {
    "text": "know looking at certain golden signals setting up lots of alerts maintaining those alerts grooming those alerts and",
    "start": "114920",
    "end": "121200"
  },
  {
    "text": "then detecting them and maybe you have a war room and you try and look at traces or maybe you realize oh it's this",
    "start": "121200",
    "end": "126799"
  },
  {
    "text": "engineering team that owns it maybe they'll look at logs or whatever they have available performance is very",
    "start": "126799",
    "end": "132360"
  },
  {
    "text": "rotated on detection and then isolating to where the problem may exist and root",
    "start": "132360",
    "end": "139640"
  },
  {
    "text": "causing is often an exercise left to the user good Performance Products provide a",
    "start": "139640",
    "end": "146120"
  },
  {
    "text": "lot of context and DET details that a an experienced uh engineer or or devops",
    "start": "146120",
    "end": "152120"
  },
  {
    "text": "professional can can kind of parse and make sense of and try and get to a hypothesis of what went wrong but it's",
    "start": "152120",
    "end": "158319"
  },
  {
    "text": "not like that Century error experience where it's like here's the stack Trace here's all the tags oh we see it's like",
    "start": "158319",
    "end": "164159"
  },
  {
    "text": "this particular SE segment of code and Ian did the commit that changed that",
    "start": "164159",
    "end": "169800"
  },
  {
    "text": "code and do you want to fire J issue and assign it to Ian like it's not that that that crisp kind of tight work that we",
    "start": "169800",
    "end": "176319"
  },
  {
    "text": "have erors this is bread Crums right and we said hey maybe there's no reason why",
    "start": "176319",
    "end": "181640"
  },
  {
    "text": "we could do this for performance let's try okay so you took a swing you tried",
    "start": "181640",
    "end": "187159"
  },
  {
    "text": "describe to me how that trial works if I'm if I go to my dashboard now and I",
    "start": "187159",
    "end": "192280"
  },
  {
    "text": "enable APM all my application what are the steps largely because we kind of encourage you to go at set up uh",
    "start": "192280",
    "end": "198360"
  },
  {
    "text": "transaction information when you set up Sentry you probably as a user probably don't need to do much but if you skip",
    "start": "198360",
    "end": "203599"
  },
  {
    "text": "that step you do need to configure the send that data uh in your SDK and what happens is we start now looking at that",
    "start": "203599",
    "end": "210439"
  },
  {
    "text": "information and then when we see a what we call a performance issue we fingerprint that and we put that into",
    "start": "210439",
    "end": "217439"
  },
  {
    "text": "your issues feed which is already where you're looking for error issues right it's not a separate inbox this is the",
    "start": "217439",
    "end": "222920"
  },
  {
    "text": "same inbox the same inbox yeah now we obviously give logical filters and if you just want to look at those we do",
    "start": "222920",
    "end": "228480"
  },
  {
    "text": "that um and for newer user sometimes we detect hey you've probably never seen this before we can kind of we we do",
    "start": "228480",
    "end": "235040"
  },
  {
    "text": "things because we know we build for for math Market to bring your attention to it but it's the same workflow you have",
    "start": "235040",
    "end": "240920"
  },
  {
    "text": "for errors today so you don't have to learn something new uh to take advantage of these things so you ask the",
    "start": "240920",
    "end": "247799"
  },
  {
    "text": "experience so last fall we did the experiment the first one which we called uh M plus1 and we didn't know how it was",
    "start": "247799",
    "end": "254200"
  },
  {
    "text": "go honestly uh but uh people liked it like we we kind of know people like it when they start tweeting and saying nice",
    "start": "254200",
    "end": "260040"
  },
  {
    "text": "things about it and so um yeah it it got traction very cool so if your team is",
    "start": "260040",
    "end": "265479"
  },
  {
    "text": "looking for a developer first APM tool to use check out sentury you use our code to get 6 months of the team plan",
    "start": "265479",
    "end": "272720"
  },
  {
    "text": "for free use the code changel media yes changel media 6 months free of the team",
    "start": "272720",
    "end": "279960"
  },
  {
    "text": "plan check them out at sentry.io again sentry.io that's s n t r y.",
    "start": "279960",
    "end": "291560"
  },
  {
    "text": "IO [Music]",
    "start": "298560",
    "end": "321639"
  },
  {
    "text": "all right we are here with Jake Zimmerman what's up Jake not much how are you guys doing good doing good happy",
    "start": "321880",
    "end": "328360"
  },
  {
    "text": "to have you here this is is a requested episode always happy when we get to do a show that's requested we know is 100% on",
    "start": "328360",
    "end": "335800"
  },
  {
    "text": "point for at least one person in our listening audience this one is requested by Max valink who says type checking has",
    "start": "335800",
    "end": "343400"
  },
  {
    "text": "been a white whale in Ruby for a long time and very divisive there's even a",
    "start": "343400",
    "end": "348479"
  },
  {
    "text": "built-in attempt in Ruby 3 called RBS that hasn't gained much traction sorbet",
    "start": "348479",
    "end": "354240"
  },
  {
    "text": "on the other hand is being adopted by many organizations including stripe Shopify instacart his his company just",
    "start": "354240",
    "end": "360280"
  },
  {
    "text": "works and he says I think it's telling that many large Ruby shops are switching to some sort of type safety on larger",
    "start": "360280",
    "end": "365840"
  },
  {
    "text": "Ruby code bases it would be cool to hear from Jake who works on sorbet at stripe",
    "start": "365840",
    "end": "371720"
  },
  {
    "text": "around the origin story what problems it solves there and how it was like trying to convince pretty kinly Ruby D devs to",
    "start": "371720",
    "end": "380680"
  },
  {
    "text": "add type checking into their code bases so max thanks for writing that to us I agreed I thought that would be cool so I",
    "start": "380680",
    "end": "387319"
  },
  {
    "text": "reached out and you're here now Jake that's true true yeah yeah I think uh all all the things he commented on are",
    "start": "387319",
    "end": "393680"
  },
  {
    "text": "it's kind of what I've lived and breathed for the past 5 years of working on on sbet and type chicking Ruby and it's a it's been a wild ride yeah that's",
    "start": "393680",
    "end": "400759"
  },
  {
    "text": "the first thing that I noticed was I had heard of sorbet but it was somewhat recently and I went back to check a",
    "start": "400759",
    "end": "406960"
  },
  {
    "text": "little bit on the history and like you guys were doing presentations in 2018",
    "start": "406960",
    "end": "412039"
  },
  {
    "text": "yep and I think it goes back to 2017 is that right like you've been working on it for a long time the project itself started yeah in Fall of 2017 at stripe",
    "start": "412039",
    "end": "419560"
  },
  {
    "text": "and um that's kind of uh yeah one of the things that's kind of set this project apart from a lot of other kind of like",
    "start": "419560",
    "end": "425800"
  },
  {
    "text": "larger attempts to you know like type JavaScript or type python is we've kind of just like focused on just doing what",
    "start": "425800",
    "end": "432240"
  },
  {
    "text": "we need to do and not really going out and trying to sell other people on this like vision of uh what typing and riy",
    "start": "432240",
    "end": "438479"
  },
  {
    "text": "could be it's more just been kind of like here's what we have if you want it that's great if you don't you can still keep using Ruby what about inside stripe",
    "start": "438479",
    "end": "446240"
  },
  {
    "text": "though is it more Evangelical inside of stripe in terms of well that's the other weird thing is uh Max in his comment had",
    "start": "446240",
    "end": "453680"
  },
  {
    "text": "said like I'm curious to hear like how you know it must have been hard convincing these cogy Ruby developers",
    "start": "453680",
    "end": "459599"
  },
  {
    "text": "but it was the complete opposite inside of stripe it was the sort of thing where like for years prior to starting this",
    "start": "459599",
    "end": "464720"
  },
  {
    "text": "typ tracker project people were like I love working at stripe stripe you know our product is great but every day I",
    "start": "464720",
    "end": "470639"
  },
  {
    "text": "come in here and I have to use Ruby and I our code base is too big I don't understand how anything works really",
    "start": "470639",
    "end": "475800"
  },
  {
    "text": "just wish there was a type Checker and so we didn't have to convince really the of the company we just kind of had to",
    "start": "475800",
    "end": "481599"
  },
  {
    "text": "build the product that's interesting do you think that uh typescript and that move made the pav the way to some degree",
    "start": "481599",
    "end": "488599"
  },
  {
    "text": "that it could be done successfully oh yeah absolutely um I think a huge part of it was people you know would switch",
    "start": "488599",
    "end": "495080"
  },
  {
    "text": "back and forth between writing typescript in the front end or Flo in the front end um and then Ruby in the back end and and know what could have",
    "start": "495080",
    "end": "501560"
  },
  {
    "text": "been the case what what you know what they could have what they were missing out on basically so they they just asked",
    "start": "501560",
    "end": "507080"
  },
  {
    "text": "for it and they kept asking for it the lack of types in Ruby is really you know Keen to the prototyping and I think",
    "start": "507080",
    "end": "513279"
  },
  {
    "text": "stripe is kind of baked obviously you're innovating do you think that that's maybe less needed now like once it's",
    "start": "513279",
    "end": "519640"
  },
  {
    "text": "sort of you know where stripe is going it's a big code base lots of Ruby you think that's why types in that in that",
    "start": "519640",
    "end": "525839"
  },
  {
    "text": "environment is welcomed versus hey we're proving new ground here we need to be at compile time flexible we need that",
    "start": "525839",
    "end": "532160"
  },
  {
    "text": "flexibility yeah I think like um people will will sometimes say that you know in the prototyping phase you care less",
    "start": "532160",
    "end": "538079"
  },
  {
    "text": "about types and in the you know you know iteration you know longterm maybe you need more more types I mean there's a",
    "start": "538079",
    "end": "544320"
  },
  {
    "text": "class of people that will break that mold and say like actually prefer you know the type checking even when I'm in",
    "start": "544320",
    "end": "550040"
  },
  {
    "text": "my prototyping phase just because it means that you can if you do want to like completely switch out one half of your system you know that you've you",
    "start": "550040",
    "end": "557279"
  },
  {
    "text": "know switched it out correctly cuz the type trer will catch you but I think that the biggest motivating factor for",
    "start": "557279",
    "end": "562880"
  },
  {
    "text": "us was just at the time you know we were getting up to the place where we had hundreds of developers and even if we",
    "start": "562880",
    "end": "568120"
  },
  {
    "text": "were building new code it was hard to make sense of it all we really just wanted jump to definition to be able to",
    "start": "568120",
    "end": "574000"
  },
  {
    "text": "like follow Paths of you know control flow through the code base and connect things together so it was it was more",
    "start": "574000",
    "end": "579959"
  },
  {
    "text": "about understanding the code I would say it's interesting hearing that because I guess being around long enough I",
    "start": "579959",
    "end": "585640"
  },
  {
    "text": "remember when people would be so excited to be able to work in Ruby on their day",
    "start": "585640",
    "end": "590839"
  },
  {
    "text": "job yep because it was just hobbies for so long and it was like slowly becoming adopted obviously rails really helped",
    "start": "590839",
    "end": "598440"
  },
  {
    "text": "that adoption come in when you could actually make money doing Ruby but we're so far past that point plus we're at a",
    "start": "598440",
    "end": "604079"
  },
  {
    "text": "point where people switch jobs and orgs so much I've talked to multiple people on the front end side through JS party",
    "start": "604079",
    "end": "611120"
  },
  {
    "text": "who have come to a ruby a shop like Shopify or Stripe from something else maybe they grew up in JavaScript land",
    "start": "611120",
    "end": "617360"
  },
  {
    "text": "doing note apps and stuff and they're like yeah the job's cool but I have to use Ruby and I don't know Ruby and it's",
    "start": "617360",
    "end": "623240"
  },
  {
    "text": "weird I don't like it and I'm like that's it that's the drawback is the programming language I understand it but",
    "start": "623240",
    "end": "629160"
  },
  {
    "text": "just a weird place to be when it's like that's the part of the job they're not excited about because it used to be that",
    "start": "629160",
    "end": "634760"
  },
  {
    "text": "that was so exciting for people to be able to use the programming language they love and make money yeah it's",
    "start": "634760",
    "end": "640760"
  },
  {
    "text": "probably just a you know relative popularity thing I think that people's primary programming language tends to be",
    "start": "640760",
    "end": "646560"
  },
  {
    "text": "just such a large fraction of how they think and how they approach problems and if you're used to something you want to",
    "start": "646560",
    "end": "652480"
  },
  {
    "text": "switch if that thing is so you know different from the thing that you're currently using it's kind of a culture shock a little bit mhm so what is some",
    "start": "652480",
    "end": "659639"
  },
  {
    "text": "of the origin story like why how did you get to working on this you know you you mentioned people already wanted it so",
    "start": "659639",
    "end": "665040"
  },
  {
    "text": "apparently there was a desire yeah inside of stripe for something like this but how come you and how you've been working on it for a long time before the",
    "start": "665040",
    "end": "671839"
  },
  {
    "text": "show you said you eat drink and dream I don't know you said but something along Lin up so all you think about so here",
    "start": "671839",
    "end": "677639"
  },
  {
    "text": "you are five years later still just thinking about that all day why you and uh tell tell the origin yeah yeah uh so",
    "start": "677639",
    "end": "682800"
  },
  {
    "text": "I mentioned it started in kind of uh the fall of 2017 um it started with two",
    "start": "682800",
    "end": "688200"
  },
  {
    "text": "people who had been working at stripe for a number of years and one person that we had hired from uh just finishing",
    "start": "688200",
    "end": "694040"
  },
  {
    "text": "his PhD working on the scolar compiler so it was a very small team a very experienced set of people they spent",
    "start": "694040",
    "end": "700360"
  },
  {
    "text": "about a year building it from scratch so by the end of that year they had gotten it to the point where it was able to",
    "start": "700360",
    "end": "706040"
  },
  {
    "text": "type check most of the code at stripe it was still kind of maybe only 75% of the",
    "start": "706040",
    "end": "711240"
  },
  {
    "text": "the code base was opted into the type Checker and the other 25% still hadn't",
    "start": "711240",
    "end": "716399"
  },
  {
    "text": "gotten around to enabling it but I started at stripe actually basically the same time that this project started so I",
    "start": "716399",
    "end": "722639"
  },
  {
    "text": "got to kind of follow the project from my team just you know outside looking in for that whole year and yeah when I was",
    "start": "722639",
    "end": "729680"
  },
  {
    "text": "in school I was always just super interested in types and programming languages um I didn't really realize this until basically my last year of of",
    "start": "729680",
    "end": "737240"
  },
  {
    "text": "being in University if I had realized it maybe a year or so sooner it's possible I wouldn't have even uh joined stripe",
    "start": "737240",
    "end": "742920"
  },
  {
    "text": "and I would have tried to do some sort of research and maybe go into higher education but didn't work out that way",
    "start": "742920",
    "end": "748920"
  },
  {
    "text": "and so I was just kind of like I knew that I had this passion for types and programming languages but I didn't quite understand like whether there was a a",
    "start": "748920",
    "end": "755800"
  },
  {
    "text": "way to go from just being excited about it to being able to actually do it professionally but I knew for this whole",
    "start": "755800",
    "end": "761519"
  },
  {
    "text": "first year that I was working full-time at stripe that uh that we did have this team and so I eventually got to the",
    "start": "761519",
    "end": "767079"
  },
  {
    "text": "point where I was just like I'm going to regret it for the rest of my life if I never even ask to join the team so one",
    "start": "767079",
    "end": "772440"
  },
  {
    "text": "day I just yeah I asked and said hey are you guys have a an opening can I come",
    "start": "772440",
    "end": "777680"
  },
  {
    "text": "help out and it just so turns out that because this team had been staffed by like these super experienced people that",
    "start": "777680",
    "end": "785160"
  },
  {
    "text": "they actually really wanted somebody who had zero experience so that they the people on the team could have the chance to you know Flex their like mentorship",
    "start": "785160",
    "end": "792959"
  },
  {
    "text": "muscles um and kind of learn what it takes to teach younger developers and so I was one year out of school I was",
    "start": "792959",
    "end": "799079"
  },
  {
    "text": "working with three really experienced people who had this basically this mandate to like your whole job now is to",
    "start": "799079",
    "end": "805560"
  },
  {
    "text": "train this other person so it was it was a great environment and and again yeah because I already knew that I was kind",
    "start": "805560",
    "end": "810760"
  },
  {
    "text": "of interested in it I just kind of Dove right in and that's kind of been it we've worked on a handful of different",
    "start": "810760",
    "end": "815920"
  },
  {
    "text": "things over the that 5 years whether it's been making the type system better whether it's making the uh experience of",
    "start": "815920",
    "end": "823360"
  },
  {
    "text": "using the type system in in your editor better we even spent a couple years working on an ahead of time compiler",
    "start": "823360",
    "end": "829880"
  },
  {
    "text": "using sorbet to um actually compile Ruby code to native code and now we're kind",
    "start": "829880",
    "end": "835199"
  },
  {
    "text": "of back focusing on how we can basically just uh yeah improved the typee system",
    "start": "835199",
    "end": "840720"
  },
  {
    "text": "improved the editor improved the type checking experience so was that aead of time compiler was that work did it end",
    "start": "840720",
    "end": "845880"
  },
  {
    "text": "up being not super fruitful so you went back to it or what was the story when when you went down that path yeah the",
    "start": "845880",
    "end": "851959"
  },
  {
    "text": "the compiler project it was kind of interesting it was at a point in time when latency was the primary concern for",
    "start": "851959",
    "end": "857959"
  },
  {
    "text": "pretty much every team at stripe this was during the height of the pandemic when suddenly everyone across the internet who was running a software",
    "start": "857959",
    "end": "865320"
  },
  {
    "text": "company was seeing increased increased volumes and increased on the system so we had basically just like every team",
    "start": "865320",
    "end": "872360"
  },
  {
    "text": "working on different ways to achieve latency and we were just going to take whichever you know long-term bet panned out the quickest so some of those people",
    "start": "872360",
    "end": "879279"
  },
  {
    "text": "working on latency were just profiling Ruby code seeing where they could get latency wins some people were focusing",
    "start": "879279",
    "end": "885199"
  },
  {
    "text": "on making the database faster some people are taking really longer term sorts of uh changes like should we",
    "start": "885199",
    "end": "890880"
  },
  {
    "text": "rewrite the core architecture to use a different language um all sorts of different bets across the company so one",
    "start": "890880",
    "end": "897079"
  },
  {
    "text": "of these was the ahead of time compiler for Ruby and we actually got to the point where it was completely working in",
    "start": "897079",
    "end": "902320"
  },
  {
    "text": "production and it really was just a matter of um whether we wanted to continue working on it and because of",
    "start": "902320",
    "end": "908600"
  },
  {
    "text": "all the great work of um you know other teams at stripe making the stripe API faster we uh got to the point where we",
    "start": "908600",
    "end": "916040"
  },
  {
    "text": "didn't quite need the the latency from the sorb compiler and it would have you know come with its own set of trade-offs",
    "start": "916040",
    "end": "921880"
  },
  {
    "text": "so given all that we we wanted to focus then again on the developer prod productivity side of of having a type",
    "start": "921880",
    "end": "928240"
  },
  {
    "text": "checker we can actually make people writing Ruby code more productive that's cool so inside of stripe then if you if",
    "start": "928240",
    "end": "935360"
  },
  {
    "text": "you could come up with a percentage of like how much code is sorbed you know",
    "start": "935360",
    "end": "940959"
  },
  {
    "text": "across the code base do you have those numbers do you know how much it's yeah yeah I have yeah um it's less than 1% is",
    "start": "940959",
    "end": "947160"
  },
  {
    "text": "not using sorbet oh wow yeah there's kind of various strictness levels to",
    "start": "947160",
    "end": "952720"
  },
  {
    "text": "what it means to have surve turned on um so the very bottom level is what we call typed false and even still even though",
    "start": "952720",
    "end": "959800"
  },
  {
    "text": "it says typed false it's still doing some kind of Sanity checking which it'll make sure that all of the classes and",
    "start": "959800",
    "end": "966279"
  },
  {
    "text": "modules and constant references in the codebase uh resolve and it will obviously like check that your syntax is",
    "start": "966279",
    "end": "971920"
  },
  {
    "text": "valid but then up from that there's typed true uh and that's the point where surve will start doing actual type",
    "start": "971920",
    "end": "978079"
  },
  {
    "text": "inference on method bodies and tell you if you have any like classical type errors like expected anager found string",
    "start": "978079",
    "end": "983319"
  },
  {
    "text": "sort of type errors and then one level up from that is typed strict and at type strict not only will it do the type in",
    "start": "983319",
    "end": "988839"
  },
  {
    "text": "but it'll require that you put explicit type annotations on every method in your file and I think we even have that typed",
    "start": "988839",
    "end": "995000"
  },
  {
    "text": "strict level so it's like 99% at typed true or higher but at typed strict I think we're somewhere close to like 80%",
    "start": "995000",
    "end": "1001319"
  },
  {
    "text": "or something like that it's a sort of thing where over time people encounter the file that doesn't have type",
    "start": "1001319",
    "end": "1006639"
  },
  {
    "text": "annotations and encounter the files that do have type annotations and they find that's a lot easier to edit and",
    "start": "1006639",
    "end": "1013160"
  },
  {
    "text": "understand and you know refactor the code that has the type annotations and so they've self- selected to opt their",
    "start": "1013160",
    "end": "1019040"
  },
  {
    "text": "files into these stricter checking levels that's interesting Network effects in a sense right exactly like",
    "start": "1019040",
    "end": "1025480"
  },
  {
    "text": "okay this file doesn't have this I want to bring in in there it's good stuff that's uh it's crazy to have such a",
    "start": "1025480",
    "end": "1031720"
  },
  {
    "text": "project take over too like uh in one of the posts I think it's 2019 posting",
    "start": "1031720",
    "end": "1037120"
  },
  {
    "text": "where sorbet is at now this is state of sorbet spring 2019 it actually says 100%",
    "start": "1037120",
    "end": "1042600"
  },
  {
    "text": "of our production Ruby files are sorbed according to this every C build in the",
    "start": "1042600",
    "end": "1047798"
  },
  {
    "text": "main Repository is checked my s b i can you know you kind of lay that out there but to put such a percentage there like",
    "start": "1047799",
    "end": "1053400"
  },
  {
    "text": "that's a this is a big deal you're making developers productive how does",
    "start": "1053400",
    "end": "1058480"
  },
  {
    "text": "the type checking how does this really equate to being more productive what are some of the ways that this comes in play",
    "start": "1058480",
    "end": "1065240"
  },
  {
    "text": "yeah so there's all sorts of different things I think that the quote that I I like bringing up here is the first time",
    "start": "1065240",
    "end": "1071799"
  },
  {
    "text": "that we so we had built this type Checker and it was really just kind of like this policeman just kind of like enforcing that you're not doing the",
    "start": "1071799",
    "end": "1077320"
  },
  {
    "text": "wrong thing at in the beginning that's all there was it was like either your CI check would fail with a big red scary",
    "start": "1077320",
    "end": "1083440"
  },
  {
    "text": "message or it would pass and that's fine like you can get a lot of value out of that but the first time that we took",
    "start": "1083440",
    "end": "1090679"
  },
  {
    "text": "this type Checker and we started building editor functionality and like you know kind of typical IDE sorts of",
    "start": "1090679",
    "end": "1096600"
  },
  {
    "text": "features and exposing that to users that was when people really started to you have their eyes light up and so the",
    "start": "1096600",
    "end": "1102480"
  },
  {
    "text": "first time that we sent an email to the company saying um you can now use sorbet to get accurate jump to definition",
    "start": "1102480",
    "end": "1108640"
  },
  {
    "text": "people were telling us like this is the best Christmas present you could have ever given me it's July I don't even care I think that people really identify",
    "start": "1108640",
    "end": "1116120"
  },
  {
    "text": "with being able to understand their code and use the information that the type Checker has to yeah just dive into an",
    "start": "1116120",
    "end": "1122840"
  },
  {
    "text": "unfamiliar part of the code base and have confidence that they're going to be able to figure out what it's doing sounds a lot like what uh Source graph",
    "start": "1122840",
    "end": "1128640"
  },
  {
    "text": "markets too they call it like codes spunking I've heard bangl talk about that like being able to jump to",
    "start": "1128640",
    "end": "1134000"
  },
  {
    "text": "definition and explore code Bas this is like uh especially if you're moving teams like jge mentioned before like if",
    "start": "1134000",
    "end": "1139320"
  },
  {
    "text": "you're moving from one shop to another you got to relearn if not just domain knowledge but also like this builtup",
    "start": "1139320",
    "end": "1146320"
  },
  {
    "text": "code knowledge of how the codebase works in an untyped world it's got to be challenging if you can't do that yeah",
    "start": "1146320",
    "end": "1152640"
  },
  {
    "text": "and it it kind of it might be a problem that you only realize is a problem at a",
    "start": "1152640",
    "end": "1158720"
  },
  {
    "text": "certain codebase size for example like even inside the sorb codebase itself it's only ever been worked on by you",
    "start": "1158720",
    "end": "1164840"
  },
  {
    "text": "know like two or three people full-time and the code B itself is only maybe 100,000 lines of code but when you get",
    "start": "1164840",
    "end": "1171640"
  },
  {
    "text": "into these code bases where it's like you know hundreds of people over millions of lines of code and the kind",
    "start": "1171640",
    "end": "1177320"
  },
  {
    "text": "of ownership of which parts of the code base are owned by which teams is fluid over time you're very rarely working",
    "start": "1177320",
    "end": "1183880"
  },
  {
    "text": "with the same you know lines of code for an extended period of time and so you're kind of always yeah doing that code",
    "start": "1183880",
    "end": "1189440"
  },
  {
    "text": "spelunking where you're jumping from one place to another and yeah that's the part in my mind where type checking gets",
    "start": "1189440",
    "end": "1195919"
  },
  {
    "text": "to be super super valuable when I think about programming languages that lend themselves towards type checking and",
    "start": "1195919",
    "end": "1202240"
  },
  {
    "text": "enforcement Ruby is like on the bottom of that list isn't it I mean this had to be a Monumental task because it's so",
    "start": "1202240",
    "end": "1208760"
  },
  {
    "text": "malleable it's so self-referential it has reflection it has metaprogramming",
    "start": "1208760",
    "end": "1214400"
  },
  {
    "text": "you can just monkey patch and redefine and change stuff all the time and despite you know the warnings of use",
    "start": "1214400",
    "end": "1221360"
  },
  {
    "text": "with care we can tend to do that when it's convenient and when sometimes we do it just because we can I know I used to",
    "start": "1221360",
    "end": "1226880"
  },
  {
    "text": "be a young Ruby who like to show off different things that he could do even if just to myself oh look what I can do",
    "start": "1226880",
    "end": "1234280"
  },
  {
    "text": "was this very difficult to build I mean are there still ways you could poke a hole through it what's that the situation with all of the Just the",
    "start": "1234280",
    "end": "1240919"
  },
  {
    "text": "weirdness of Ruby as a language yeah I will definitely agree with you that the kind of dynamism of Ruby is both of a",
    "start": "1240919",
    "end": "1248640"
  },
  {
    "text": "huge strength and that it's been what's let communities like the rails Community succeed um but also uh a big challenge",
    "start": "1248640",
    "end": "1256240"
  },
  {
    "text": "just because those sorts of um like when you can only understand what the code is doing at runtime",
    "start": "1256240",
    "end": "1262600"
  },
  {
    "text": "obviously that stands in the way of static analysis so it's definitely a big problem and it's I wouldn't say it's a",
    "start": "1262600",
    "end": "1269080"
  },
  {
    "text": "fully solved problem in sorbet by any means there's that's probably still one of the biggest reasons why you might",
    "start": "1269080",
    "end": "1275240"
  },
  {
    "text": "evaluate whether your company or your codebase should switch to using sbet and you decide against it is your team",
    "start": "1275240",
    "end": "1281000"
  },
  {
    "text": "really gets a ton of value out of the super Dynamic meta programy sorts of features of Ruby and Sor would in many",
    "start": "1281000",
    "end": "1289000"
  },
  {
    "text": "cases ask you to give that up it's interesting because stripe actually started stripe has never used rails but",
    "start": "1289000",
    "end": "1294520"
  },
  {
    "text": "it has used a lot of meta programming in especially its early history and as",
    "start": "1294520",
    "end": "1300360"
  },
  {
    "text": "people have started to adopt sorbed stripe it's kind of been this incremental rejection of of the",
    "start": "1300360",
    "end": "1305520"
  },
  {
    "text": "metaprogramming parts of of Ruby part of this is because people see the value again that they get all these features",
    "start": "1305520",
    "end": "1312200"
  },
  {
    "text": "all these you know safety guards that they get when people are using type checking in their in their files so",
    "start": "1312200",
    "end": "1319600"
  },
  {
    "text": "people will you know say here's my trade-off um I'm willing to put down the meta programming and pick up the static",
    "start": "1319600",
    "end": "1325360"
  },
  {
    "text": "analysis to dive into some like specifics if you you you can just basically like read a network request",
    "start": "1325360",
    "end": "1332520"
  },
  {
    "text": "that the static analysis tool is never going to be able to see and using the contents of that Network request you're",
    "start": "1332520",
    "end": "1337559"
  },
  {
    "text": "going to be able to Define methods in Ruby you know you could ask the user to Def for the name of a method to Define",
    "start": "1337559",
    "end": "1343279"
  },
  {
    "text": "and Define it and there's nothing that the type system is going to be ever able to do to know that that method name is",
    "start": "1343279",
    "end": "1349000"
  },
  {
    "text": "going to be available to be called so yeah stuff like that has its place and",
    "start": "1349000",
    "end": "1354679"
  },
  {
    "text": "surve basically just gives you escape hatches to be able to use that stuff so again we were talking about the type",
    "start": "1354679",
    "end": "1361200"
  },
  {
    "text": "false levels if you have a certain file that's using a lot of meta programming you can just opt to turn checking off in",
    "start": "1361200",
    "end": "1366880"
  },
  {
    "text": "that file where it's maybe super meta programming heavy and turn it on in the other files you can also silence the",
    "start": "1366880",
    "end": "1373520"
  },
  {
    "text": "type errors at an specific call site and say like okay even if I do have have typed true enabled in a given file this",
    "start": "1373520",
    "end": "1380600"
  },
  {
    "text": "one call site where we're doing a lot of meta programming I'm just going to ask the type Checker to ignore that line so",
    "start": "1380600",
    "end": "1386159"
  },
  {
    "text": "you can kind of weave it into your system where you want the the type checking to happen and where you want to",
    "start": "1386159",
    "end": "1391320"
  },
  {
    "text": "be able to use the meta programming and yeah each you know code base or team or individual will kind of make those",
    "start": "1391320",
    "end": "1397120"
  },
  {
    "text": "trade-offs knowing what they're giving up and what they're gaining are there any facilities in there to Outlaw you",
    "start": "1397120",
    "end": "1403960"
  },
  {
    "text": "know like hey no method missing for example like we're not going to have missing or maybe that's not really a",
    "start": "1403960",
    "end": "1409720"
  },
  {
    "text": "sorbet thing maybe that's like a linter I don't know I guess sorbet is kind of a linter on steroids isn't it I mean how",
    "start": "1409720",
    "end": "1415440"
  },
  {
    "text": "do you how do you picture these tools fitting together I think that yeah linters and and typee checkers are very",
    "start": "1415440",
    "end": "1420600"
  },
  {
    "text": "complimentary and the thing about linters is they're way more heuristic based and so you kind of want the",
    "start": "1420600",
    "end": "1427400"
  },
  {
    "text": "ability to say like I know better than the heuristic in this particular case in sorbet there's the rules kind of apply",
    "start": "1427400",
    "end": "1434279"
  },
  {
    "text": "universally so we are kind of more conservative with what we reject in surb like surb will",
    "start": "1434279",
    "end": "1441600"
  },
  {
    "text": "not reject method missing because if Sur rejected method missing anyone who ever wanted to use it would not be able to",
    "start": "1441600",
    "end": "1447279"
  },
  {
    "text": "use survey so you know in our code base we do have a bunch of lch I don't know if we ban method missing or not but",
    "start": "1447279",
    "end": "1454440"
  },
  {
    "text": "there's probably some method missing in there somewhere we should explain method missing for those who aren't regular Ruby programmers so briefly in Ruby if",
    "start": "1454440",
    "end": "1462559"
  },
  {
    "text": "you call a method on a module or on a class and that class or that object of",
    "start": "1462559",
    "end": "1468399"
  },
  {
    "text": "that class doesn't have the method that you just called there's a method called method missing that you can Define which",
    "start": "1468399",
    "end": "1475520"
  },
  {
    "text": "will then run other code that you have decided it will run in order to do whatever you like so you can use it to",
    "start": "1475520",
    "end": "1482279"
  },
  {
    "text": "dynamically Define a new method you can use it to run a switch statement and do a bunch of different stuff you could raise an error it's just basically a",
    "start": "1482279",
    "end": "1488760"
  },
  {
    "text": "hook for you to write some code in case the method that you called doesn't exist",
    "start": "1488760",
    "end": "1493840"
  },
  {
    "text": "and people have used that to do all kinds of things one of the nice things is to write really nice dsls and provide like top level keywords that",
    "start": "1493840",
    "end": "1500679"
  },
  {
    "text": "are kind of arbitrary or quasi arbitrary and use method Miss in order to call them but as you can imagine you can also",
    "start": "1500679",
    "end": "1507320"
  },
  {
    "text": "do some gnarly stuff in there and it's difficult to analyze because it's not defined until runtime yep so method",
    "start": "1507320",
    "end": "1514159"
  },
  {
    "text": "missing is definitely one of those uh kind of tricky parts for sorbet to analyze but it's far from the only one",
    "start": "1514159",
    "end": "1519480"
  },
  {
    "text": "we do have uh plenty of lter rules that we turn on to basically say this is okay",
    "start": "1519480",
    "end": "1525640"
  },
  {
    "text": "this is not okay and yeah kind of guide people into having the most success when using",
    "start": "1525640",
    "end": "1531960"
  },
  {
    "text": "[Music]",
    "start": "1531960",
    "end": "1536258"
  },
  {
    "text": "[Music] survey this episode is brought to you by",
    "start": "1541190",
    "end": "1548640"
  },
  {
    "text": "our friends at drada automate and accelerate your sock 2 compliance your",
    "start": "1548640",
    "end": "1554159"
  },
  {
    "text": "ISO 27001 compliance and many many many more compliance Frameworks with a suite of",
    "start": "1554159",
    "end": "1561080"
  },
  {
    "text": "more than 75 Integrations dra easily integrates with your Tech stack through",
    "start": "1561080",
    "end": "1566399"
  },
  {
    "text": "applications such as AWS Azure GitHub OCTA and cloudflare and countless",
    "start": "1566399",
    "end": "1572360"
  },
  {
    "text": "Security Professionals from companies including lemonade notion and five train have shared how crucial it has been to",
    "start": "1572360",
    "end": "1579960"
  },
  {
    "text": "have drada as a trusted partner in the compliance process they have deep native",
    "start": "1579960",
    "end": "1585520"
  },
  {
    "text": "Integrations that provide instant visit abbility into a security program and",
    "start": "1585520",
    "end": "1590840"
  },
  {
    "text": "continuous monitoring to ensure compliance is always meant dra allows companies to see all their controls",
    "start": "1590840",
    "end": "1596960"
  },
  {
    "text": "easily map them to Sock 2 ISO 27001 and many other Frameworks to gain immediate",
    "start": "1596960",
    "end": "1603799"
  },
  {
    "text": "insight into framework overlap they are the only player in the industry to build on a private database architecture from",
    "start": "1603799",
    "end": "1610720"
  },
  {
    "text": "day one meaning your data can never be accessed by anyone outside your organization it is time to say good",
    "start": "1610720",
    "end": "1617600"
  },
  {
    "text": "goodbye to manual evidence collection and hello to automated compliance by",
    "start": "1617600",
    "end": "1622960"
  },
  {
    "text": "visiting dr.com partner changelog that's dr.com",
    "start": "1622960",
    "end": "1628000"
  },
  {
    "text": "SLP partner changelog they are bringing automation to compliance at drada",
    "start": "1628000",
    "end": "1633900"
  },
  {
    "text": "[Music]",
    "start": "1633900",
    "end": "1636989"
  },
  {
    "text": "[Music]",
    "start": "1640460",
    "end": "1645049"
  },
  {
    "text": "speed",
    "start": "1646520",
    "end": "1649520"
  },
  {
    "text": "[Music] so one thing that Max brought up is like",
    "start": "1653930",
    "end": "1661840"
  },
  {
    "text": "a first party I guess Ruby official types which he says in the works I don't",
    "start": "1661840",
    "end": "1667200"
  },
  {
    "text": "know much about this I'm sure you probably know a lot about this Jake just from being in the community tell us about that how it relates to sorbet are",
    "start": "1667200",
    "end": "1673720"
  },
  {
    "text": "they wildely different are they similar could it just could they adopt sorbet if they wanted to it says he says it's",
    "start": "1673720",
    "end": "1680120"
  },
  {
    "text": "divisive so I'm sure there's lots of opinions as well about this topic yeah I think it's mostly divisive just because",
    "start": "1680120",
    "end": "1687000"
  },
  {
    "text": "typing in general is is divisive in the Ruby Community mostly right not like a specific implementation that's going on",
    "start": "1687000",
    "end": "1692960"
  },
  {
    "text": "in The Elixir Community right now as well is they're talking about types for Elixir and that's divisive because same",
    "start": "1692960",
    "end": "1699320"
  },
  {
    "text": "exact reasoning yeah and so obviously as someone who works on a type cheer and who's been interested in types for a very long time I'm super biased in in",
    "start": "1699320",
    "end": "1706720"
  },
  {
    "text": "favor of the the typing side of this and you know I hold the view that types will always win in the long term but so",
    "start": "1706720",
    "end": "1712600"
  },
  {
    "text": "you're going to get the biased view here on yeah the the state of typing in in Ruby I don't even think sorbet was the",
    "start": "1712600",
    "end": "1719399"
  },
  {
    "text": "first uh attempt at building a type checker for Ruby there were a number of research projects specifically um I",
    "start": "1719399",
    "end": "1725320"
  },
  {
    "text": "remember a couple by the kind of like research projects out of the University of Maryland I think there was also one",
    "start": "1725320",
    "end": "1731720"
  },
  {
    "text": "other type Checker that was built by a person by the name of sotaru Matsumoto",
    "start": "1731720",
    "end": "1736919"
  },
  {
    "text": "out of uh Japan and it was called steep um and so then there was one other that",
    "start": "1736919",
    "end": "1742519"
  },
  {
    "text": "was kind of like a very hobby project built by someone at GitHub in their personal time so surve kind of started",
    "start": "1742519",
    "end": "1749399"
  },
  {
    "text": "as this uh just one more type Checker sort of thing so it's always been the case that people have noticed that Ruby",
    "start": "1749399",
    "end": "1756399"
  },
  {
    "text": "didn't have types built into it and kind of decided on various ways to add their own eventually I think that the",
    "start": "1756399",
    "end": "1762760"
  },
  {
    "text": "popularity of sorbet and the kind of backing of having such a large company like stripe and Shopify behind it meant",
    "start": "1762760",
    "end": "1768840"
  },
  {
    "text": "that the Ruby core team was more willing to consider what a like first party typing support would look like so we",
    "start": "1768840",
    "end": "1774840"
  },
  {
    "text": "actually have met multiple times with the the Ruby cour we for a period in time we were meeting with them monthly",
    "start": "1774840",
    "end": "1779919"
  },
  {
    "text": "to kind of talk about what the state of typing in in Ruby would look like and over time it became apparent that the",
    "start": "1779919",
    "end": "1786799"
  },
  {
    "text": "design constraints that we were going to be working under would be no syntax changes to Ruby itself that partly this",
    "start": "1786799",
    "end": "1792640"
  },
  {
    "text": "is because Ruby is already syntactically very complex and parsing Ruby is already hard adding more syntax in service of",
    "start": "1792640",
    "end": "1799799"
  },
  {
    "text": "type annotations would have been just challenging on its own but also Matts the uh person who created Ruby and still",
    "start": "1799799",
    "end": "1807200"
  },
  {
    "text": "has a very significant you know influence in what features get at it and what don't was pretty partial to keeping",
    "start": "1807200",
    "end": "1814720"
  },
  {
    "text": "type annotations out of the core syntax so that meant that we were kind of focusing on having annotation files that",
    "start": "1814720",
    "end": "1821480"
  },
  {
    "text": "lived alongside the Ruby source code uh so kind of have this split between like header files and S files that you might",
    "start": "1821480",
    "end": "1828559"
  },
  {
    "text": "have in C and C++ so that comes with its own trade-offs um some people will say that that is already a non-starter for",
    "start": "1828559",
    "end": "1834760"
  },
  {
    "text": "them that no matter what syntax you choose for these like definition header files that it's already to device or",
    "start": "1834760",
    "end": "1840760"
  },
  {
    "text": "like it's already going to not work for them and cause a division in the community that's I think a valid concern",
    "start": "1840760",
    "end": "1846519"
  },
  {
    "text": "but let's just press forward and say that we're fine with having these annotation files the next thing that",
    "start": "1846519",
    "end": "1852279"
  },
  {
    "text": "that you're going to run up against is do you use like the same syntax as Ruby",
    "start": "1852279",
    "end": "1857919"
  },
  {
    "text": "in these annotation files or do you invent some completely new syntax so sorbet had one of its design goals was",
    "start": "1857919",
    "end": "1865399"
  },
  {
    "text": "to be backwards compatible with the syntax of Ruby and so all of the suret type annotations are actually just a",
    "start": "1865399",
    "end": "1870639"
  },
  {
    "text": "ruby DSL um so there's no transpilation step that you need to be able to use sorbet in your codebase uh it's just",
    "start": "1870639",
    "end": "1877240"
  },
  {
    "text": "kind of the magic of again the ru Ruby meta programming one of the benefits that you can get is you can Define these",
    "start": "1877240",
    "end": "1883120"
  },
  {
    "text": "ad hoc syntaxes and they're backwards compatible so s already had this type annotation syntax that was valid Ruby",
    "start": "1883120",
    "end": "1890000"
  },
  {
    "text": "code and to make these kind of header files these definition files it",
    "start": "1890000",
    "end": "1895480"
  },
  {
    "text": "repurposed that existing syntax so you only had to learn one way to declare the type of an array you only had to learn",
    "start": "1895480",
    "end": "1901679"
  },
  {
    "text": "one way to declare a signature for a method to declare an interface to declare abstract methods all these sorts",
    "start": "1901679",
    "end": "1907480"
  },
  {
    "text": "of things the fact that they lived in the source code of a ruby file or in some file alongside was just a",
    "start": "1907480",
    "end": "1915799"
  },
  {
    "text": "preference for where you want you know types to live in your code base but I think that the problem with that is that",
    "start": "1915799",
    "end": "1922840"
  },
  {
    "text": "by defining types in this DSL sytax that we had invented ourselves it was kind of",
    "start": "1922840",
    "end": "1928120"
  },
  {
    "text": "clunky like we had to go to kind of Great Lengths to be able to choose syntax that was backwards compatible",
    "start": "1928120",
    "end": "1933919"
  },
  {
    "text": "with this you know what we could build a DSL out of so at the same time that we were working on defining these separate",
    "start": "1933919",
    "end": "1941279"
  },
  {
    "text": "files we came to the realization that we don't have to be backwards compatible with Ruby in these new files we could",
    "start": "1941279",
    "end": "1946840"
  },
  {
    "text": "just throw everything out the window and design a type annotation syntax that would be a little bit more elegant but",
    "start": "1946840",
    "end": "1953039"
  },
  {
    "text": "not necessarily fully compatible with existing Ruby code so that was the approach that we ended up taking that",
    "start": "1953039",
    "end": "1959240"
  },
  {
    "text": "eventually standardized as what they call RBS files or Ruby signature files and yeah they just have a completely",
    "start": "1959240",
    "end": "1965039"
  },
  {
    "text": "different syntax but they're a lot less verbose than sorb annotations so at the",
    "start": "1965039",
    "end": "1971600"
  },
  {
    "text": "end of the day though they are just annotations and you could sorbet could one day just parse them and understand",
    "start": "1971600",
    "end": "1977559"
  },
  {
    "text": "the annotations that are in them I think that that's mostly just been we haven't quite gotten the feedback that people",
    "start": "1977559",
    "end": "1984399"
  },
  {
    "text": "would really absolutely love to use sorbet but also like the one thing holding them back is whether it parses",
    "start": "1984399",
    "end": "1990919"
  },
  {
    "text": "these RBS files versus The annotation files that survey supports so we've been",
    "start": "1990919",
    "end": "1996279"
  },
  {
    "text": "focusing on building features for the people who are using survey and those people are asking again for things like",
    "start": "1996279",
    "end": "2001360"
  },
  {
    "text": "better editor tools or better type system features so that's where we end up spending our time so it's kind of",
    "start": "2001360",
    "end": "2007440"
  },
  {
    "text": "more just like not a fundamental separation but rather just like it would be work that we have to do and we hav't",
    "start": "2007440",
    "end": "2014720"
  },
  {
    "text": "yet found that it bumps up to the top of the list okay good explainer of the state of things at least from",
    "start": "2014720",
    "end": "2021000"
  },
  {
    "text": "specifically on the Sor Bay Side what about on like the Ruby Lang side with these RB RBS is it like going to happen",
    "start": "2021000",
    "end": "2027840"
  },
  {
    "text": "is it like oh it's already happened yeah it's already out there and they shipped these annotations this this format in uh",
    "start": "2027840",
    "end": "2033600"
  },
  {
    "text": "Ruby 3.0 so okay so it's shipped and public can you can just use Ruby 3.0",
    "start": "2033600",
    "end": "2040480"
  },
  {
    "text": "plus and annotate your Ruby with the this RBS files and there's just a",
    "start": "2040480",
    "end": "2046159"
  },
  {
    "text": "built-in type Checker into the language or so it's still you have to pick and choose your third party type Checker The",
    "start": "2046159",
    "end": "2052919"
  },
  {
    "text": "annotation format is just uh okay so it's not like built-in then yeah like a spec mhm exactly okay so probably the",
    "start": "2052919",
    "end": "2060638"
  },
  {
    "text": "most popular type Checker that uses these annotations is the Steep type Checker which I mentioned earlier okay",
    "start": "2060639",
    "end": "2067000"
  },
  {
    "text": "okay there's also yeah there's a handful of other tools that that consume them it's just that sorbet kind of doesn't",
    "start": "2067000",
    "end": "2073560"
  },
  {
    "text": "and maybe that's the biggest point of division is that we haven't gone to the work to parse these files is that just",
    "start": "2073560",
    "end": "2079320"
  },
  {
    "text": "the nature of the that it's open source and you've got you know other things that are more important obviously it's",
    "start": "2079320",
    "end": "2085240"
  },
  {
    "text": "not that you don't want to it's like eventually you might yep yeah exactly so for example the sorts of things that we",
    "start": "2085240",
    "end": "2090440"
  },
  {
    "text": "would have to stopped working on right now are um we've made a number of you know improvements to just the core type",
    "start": "2090440",
    "end": "2096280"
  },
  {
    "text": "system for like what you can actually Express in the type system we've made improvements to how fast sorbet is all",
    "start": "2096280",
    "end": "2102200"
  },
  {
    "text": "sorts of things like this and so we regularly go and ask people whether that's in the open source Community or",
    "start": "2102200",
    "end": "2107880"
  },
  {
    "text": "people using sorbed stripe hey what's the the thing that you wish existed the most and it's always something else I",
    "start": "2107880",
    "end": "2114560"
  },
  {
    "text": "guess why wouldn't they just get built in that's what I don't understand because like I guess maybe you could say",
    "start": "2114560",
    "end": "2120920"
  },
  {
    "text": "well ruby gems wasn't built in either for a really long time and eventually gem became shipped with Ruby and so this",
    "start": "2120920",
    "end": "2129040"
  },
  {
    "text": "would be a similar circumstance maybe like they want a bunch of tools to be able to do this and it just seems like",
    "start": "2129040",
    "end": "2135920"
  },
  {
    "text": "if they were if they being Ruby core team was like super committed to types that they would maybe this is just step",
    "start": "2135920",
    "end": "2142359"
  },
  {
    "text": "one and they're going to do it eventually they would do this and they'd say and download Ruby 3 and it's type",
    "start": "2142359",
    "end": "2149480"
  },
  {
    "text": "checked yeah I I guess one of the benefits of having it be this third party gym is you can iterate on it and",
    "start": "2149480",
    "end": "2156079"
  },
  {
    "text": "release new versions independently of Ruby versions so Ruby kind of famously releases a new version only once a year",
    "start": "2156079",
    "end": "2161640"
  },
  {
    "text": "on Christmas but if you wanted to add a new you know revision to the RBS spec or",
    "start": "2161640",
    "end": "2168040"
  },
  {
    "text": "standard or parsing libraries for it having that be in this extra gem that you'd have to opt into makes the release",
    "start": "2168040",
    "end": "2175560"
  },
  {
    "text": "process a lot easier good point you've obviously thought about this more than I have Jake and you and of course you know",
    "start": "2175560",
    "end": "2181760"
  },
  {
    "text": "there's lots of different parties involved in these kinds of decisions it's got the wrong name though jar",
    "start": "2181760",
    "end": "2186800"
  },
  {
    "text": "what's that that's why it's not being adopted by the court team it needs to be called type Ruby or something like that oh sorbet yeah what do you think sorb is",
    "start": "2186800",
    "end": "2194319"
  },
  {
    "text": "a cool name man it is a cool name but I just wonder like if it needs to be like typescript like you know like take a oh",
    "start": "2194319",
    "end": "2200560"
  },
  {
    "text": "take a page from the typescript book and it's got to be typ Ruby or typ Ruby something I don't know I'm not saying",
    "start": "2200560",
    "end": "2206119"
  },
  {
    "text": "it's a wrong name I'm just making a joke again yeah I think like one of the other things that is set apart sorbet and",
    "start": "2206119",
    "end": "2211760"
  },
  {
    "text": "typescript is just the amount of evangelism that has been put into each project I think that Microsoft in",
    "start": "2211760",
    "end": "2217920"
  },
  {
    "text": "general is just really good at building products for developers and evangelizing",
    "start": "2217920",
    "end": "2223000"
  },
  {
    "text": "them and stripe as a company does that as well obviously stripe is an API company and and evangelizes their API",
    "start": "2223000",
    "end": "2228440"
  },
  {
    "text": "but it's never been the case that stripe really evangelized sorbet and that's",
    "start": "2228440",
    "end": "2233599"
  },
  {
    "text": "yeah just having popularity and and Community like enthusiasm behind a project would be the sort of Tipping",
    "start": "2233599",
    "end": "2239760"
  },
  {
    "text": "Point I think behind maybe more first party integration with sveet but right we're kind of fine with uh the way",
    "start": "2239760",
    "end": "2245640"
  },
  {
    "text": "things work now we we build the thing and we ship the thing and people who want to use what we've built are",
    "start": "2245640",
    "end": "2252160"
  },
  {
    "text": "completely able to do so and people who would prefer we'd prefer to ignore it can so let's talk about sorbet itself",
    "start": "2252160",
    "end": "2259280"
  },
  {
    "text": "like the implementation the design I was reading some of the docs and some of the guides just trying to see what it was",
    "start": "2259280",
    "end": "2266280"
  },
  {
    "text": "like to use I did notice pretty decent you know pure Ruby DSL you know you're",
    "start": "2266280",
    "end": "2272000"
  },
  {
    "text": "writing Ruby inside of your Ruby in order to to specify I like a method",
    "start": "2272000",
    "end": "2277960"
  },
  {
    "text": "signature and that kind of stuff there were a few phrases on the website that I was like this sounds fancy cuz I don't",
    "start": "2277960",
    "end": "2283440"
  },
  {
    "text": "know what it is now I'm not a type guy so maybe people who are all about type Checkers know these kind of things but I",
    "start": "2283440",
    "end": "2289040"
  },
  {
    "text": "read gradual type checking I read control flow sensitive typing some stuff that sound like sorbet features that I'm",
    "start": "2289040",
    "end": "2296040"
  },
  {
    "text": "sure you had a large part in that maybe you could that might be interesting to our listener you know to learn about",
    "start": "2296040",
    "end": "2301240"
  },
  {
    "text": "sorbet yeah absolutely so gradual typeing is just this idea that you don't have to type check 100% of your code",
    "start": "2301240",
    "end": "2307960"
  },
  {
    "text": "base from day one that you can like opt in opt in at a you know various levels",
    "start": "2307960",
    "end": "2313920"
  },
  {
    "text": "of granularity that's basically table Stakes if you're trying to add a type system to a language that didn't start",
    "start": "2313920",
    "end": "2320160"
  },
  {
    "text": "with the type system I don't necessarily there there will definitely be people out there who tell you that this is",
    "start": "2320160",
    "end": "2325200"
  },
  {
    "text": "actually a completely desirable property even if you're designing a language from scratch today again you're getting the",
    "start": "2325200",
    "end": "2331720"
  },
  {
    "text": "bias type system nerds View and I think that it's more just like a trade-off that you have to accept if you're adding",
    "start": "2331720",
    "end": "2337240"
  },
  {
    "text": "types to a language that didn't start with them because it means that you have these gaps you you'll always have these",
    "start": "2337240",
    "end": "2342680"
  },
  {
    "text": "gaps in the type system where it won't be able to tell you when you've messed up and so the biggest problem then is",
    "start": "2342680",
    "end": "2348920"
  },
  {
    "text": "actually figuring out and identifying where the gaps are if that's the the state of your your code base control",
    "start": "2348920",
    "end": "2355240"
  },
  {
    "text": "flow sensitive typing is really interesting and I actually think that even more traditional languages that",
    "start": "2355240",
    "end": "2361359"
  },
  {
    "text": "don't have backwards compatibility with untyped programming language could benefit from and that's just the s that",
    "start": "2361359",
    "end": "2367400"
  },
  {
    "text": "if you have something that is either nil or you know some real type like maybe an",
    "start": "2367400",
    "end": "2373200"
  },
  {
    "text": "integer or some struct some class that you've written that the type of the",
    "start": "2373200",
    "end": "2378640"
  },
  {
    "text": "variable will be aware of all of the conditional branches that you've taken through the code base so if you start",
    "start": "2378640",
    "end": "2383920"
  },
  {
    "text": "out with something that's either nil or integer and then you say is this thing nil well if you use that variable inside",
    "start": "2383920",
    "end": "2390440"
  },
  {
    "text": "of that Branch survey will be able to say you've already checked that this thing is not nil so here it's an integer",
    "start": "2390440",
    "end": "2396440"
  },
  {
    "text": "so typescript does this Mo most languages that are gradual type systems for existing untyped languages end up",
    "start": "2396440",
    "end": "2402359"
  },
  {
    "text": "building this feature just because there's so much Ruby code out there that's written this way or so much you know existing untyped code out there",
    "start": "2402359",
    "end": "2408200"
  },
  {
    "text": "written this way that you you get a lot of like ease of adoption by building this feature you don't force people to",
    "start": "2408200",
    "end": "2414319"
  },
  {
    "text": "go change their code base to you know be I don't know maybe a little bit easier to type check so it's it's this Advanced",
    "start": "2414319",
    "end": "2420680"
  },
  {
    "text": "type system feature for sure but it's one that models Ruby code as it exists in the real world and makes it easier to",
    "start": "2420680",
    "end": "2427359"
  },
  {
    "text": "start using the typee cheer okay what's an example of when that might be useful or some code that might typically hit up",
    "start": "2427359",
    "end": "2435160"
  },
  {
    "text": "against this just not knowing necessarily the value being returned yeah so for example let's say that you",
    "start": "2435160",
    "end": "2441839"
  },
  {
    "text": "are interacting with the database and you try and load some object with a specific ID you're going to either get",
    "start": "2441839",
    "end": "2447319"
  },
  {
    "text": "back nil if that object doesn't exist or you know your omm is going to give you the the model class back and if you are",
    "start": "2447319",
    "end": "2455760"
  },
  {
    "text": "writing kind of kind of good defensive code the first thing that you do when you you try and load this thing is you're going to ask whether it existed",
    "start": "2455760",
    "end": "2460880"
  },
  {
    "text": "or not and then you're going to you know handle that exception case then maybe you report an error to the user maybe you try looking for the object in a",
    "start": "2460880",
    "end": "2467400"
  },
  {
    "text": "different place maybe you do something else but in the case where you definitely know that you have it now you can start calling the methods on your",
    "start": "2467400",
    "end": "2473160"
  },
  {
    "text": "model you know you can ask for the the user's name or the user's email or whatever fields are on this uh this",
    "start": "2473160",
    "end": "2478560"
  },
  {
    "text": "model class that you got back so if sorb thought throughout the entire method body that this variable that you got",
    "start": "2478560",
    "end": "2485200"
  },
  {
    "text": "back from your uh om was either you know a nil or a user model then it's going to",
    "start": "2485200",
    "end": "2491880"
  },
  {
    "text": "say like I don't know whether this like I can't claim for sure that you calling these methods on this model exist or not",
    "start": "2491880",
    "end": "2498839"
  },
  {
    "text": "gotcha yeah I can definitely see a lot of Ruby Cod out there like that yep because there's so many like that nil",
    "start": "2498839",
    "end": "2504880"
  },
  {
    "text": "case is just always the The Edge that's just like exactly causes us to to want",
    "start": "2504880",
    "end": "2511079"
  },
  {
    "text": "types in the first place it's like but uh and so like for example this is was you know kind of famously the",
    "start": "2511079",
    "end": "2518800"
  },
  {
    "text": "Java's you know billion dollar mistake was conflating that every type could be null I think that it's obviously very",
    "start": "2518800",
    "end": "2524880"
  },
  {
    "text": "hard to to make changes to a language as widely used as as Java is now but it's the sort of thing where like if you",
    "start": "2524880",
    "end": "2530839"
  },
  {
    "text": "could solve this problem um and yeah build control flow sensitive type checking for for specifically whether a",
    "start": "2530839",
    "end": "2537400"
  },
  {
    "text": "value is null or not I think it would go a long way to making it easier to reason about yeah in Java even like whether a",
    "start": "2537400",
    "end": "2544079"
  },
  {
    "text": "value is null or not mhm so you bring up an RM which makes me think about active",
    "start": "2544079",
    "end": "2550760"
  },
  {
    "text": "record which makes me think about you know active record base as it used be call like base classes or you know makes",
    "start": "2550760",
    "end": "2556400"
  },
  {
    "text": "me think about existing Ruby libraries one of the huge advantages of typescript",
    "start": "2556400",
    "end": "2561800"
  },
  {
    "text": "being so widely evangelized and adopted is that like darn near every library has",
    "start": "2561800",
    "end": "2568240"
  },
  {
    "text": "it ships with type definitions for typescript to just work out of the box and I'm wondering if sorbet has that",
    "start": "2568240",
    "end": "2574680"
  },
  {
    "text": "kind of momentum or if there's is there a place where you can go out and say I'm going to use this ruby gem and most you",
    "start": "2574680",
    "end": "2581960"
  },
  {
    "text": "know the gems already typed by somebody yep I I definitely noticed that in typescript it's like most libraries that",
    "start": "2581960",
    "end": "2589000"
  },
  {
    "text": "you pull off of you know npm are already going to work with with typescript just out of the box and there's kind of",
    "start": "2589000",
    "end": "2595160"
  },
  {
    "text": "nowhere near that level of support for typing in in ruby gems that you'll",
    "start": "2595160",
    "end": "2600359"
  },
  {
    "text": "encounter most commonly part of that there's a number of reasons for this so part of it is like as a project we've",
    "start": "2600359",
    "end": "2606920"
  },
  {
    "text": "almost always focused on making it easier for application developers and Library developers we've always taken",
    "start": "2606920",
    "end": "2613559"
  },
  {
    "text": "less steps to making the process you know easier for them that's definitely something that would need to change and",
    "start": "2613559",
    "end": "2619400"
  },
  {
    "text": "you know partly it's just kind of we've never gotten around to it I think that despite the low investment people have",
    "start": "2619400",
    "end": "2626480"
  },
  {
    "text": "still done it and still published gems that have type annotations for them the biggest ones like rails though don't and",
    "start": "2626480",
    "end": "2632680"
  },
  {
    "text": "so if you want to be able to use a you know sveet in a project that using like active record base or something like",
    "start": "2632680",
    "end": "2638119"
  },
  {
    "text": "that you're going to need a different approach to be able to type these sorts of things and so some the way that that",
    "start": "2638119",
    "end": "2644079"
  },
  {
    "text": "is typically handled in sorbet is with third party gems that will analyze the way that you are using these gems and",
    "start": "2644079",
    "end": "2651359"
  },
  {
    "text": "generate those annotation files that we were talking about earlier and so instead of annotating the source of",
    "start": "2651359",
    "end": "2657400"
  },
  {
    "text": "active record itself you would look how active record is being used in your codebase and generate some annotation",
    "start": "2657400",
    "end": "2662520"
  },
  {
    "text": "files and rely on those annotation files to figure out what the gem is doing that seems somewhat fraught is that pretty",
    "start": "2662520",
    "end": "2668440"
  },
  {
    "text": "reliable at the end of the day or is my Spidey Sense accurate it's somewhat fraught for sure it's kind of a question",
    "start": "2668440",
    "end": "2675319"
  },
  {
    "text": "of like how much you're going to push it if you're using the very common cases um it'll be fine but if you're trying to do something more complicated especially if",
    "start": "2675319",
    "end": "2681920"
  },
  {
    "text": "you combine this with heavy use of metaprogramming then it's going to be a little bit trickier so I I think that",
    "start": "2681920",
    "end": "2687720"
  },
  {
    "text": "recently one person in the community uh it's actually someone who uh has been on this podcast before Justin Sears or S um",
    "start": "2687720",
    "end": "2696000"
  },
  {
    "text": "s yeah uh he actually maintaining this mocktail library for kind of a testing",
    "start": "2696000",
    "end": "2701839"
  },
  {
    "text": "library for Ruby and he has been posting quite a lot in the sbas slack just about",
    "start": "2701839",
    "end": "2708079"
  },
  {
    "text": "what it takes to get typing added to a gem and it's been really interesting just because it's exposed all of these",
    "start": "2708079",
    "end": "2714440"
  },
  {
    "text": "you know places that we could make the experience better just about like decisions for if you want to have type",
    "start": "2714440",
    "end": "2720640"
  },
  {
    "text": "annotations in this gym should you start with having annotations that live inside the source code and then strip those out",
    "start": "2720640",
    "end": "2727040"
  },
  {
    "text": "before you publish or should you put them inside your source code and also have files that live alongside should",
    "start": "2727040",
    "end": "2732680"
  },
  {
    "text": "you make it easier for people to just generate the RBIs on their own anyways it's like his experience has been has",
    "start": "2732680",
    "end": "2739520"
  },
  {
    "text": "been neat because every time he ran into a challenge he posted about it and ask questions and it's been kind of eye",
    "start": "2739520",
    "end": "2744920"
  },
  {
    "text": "opening to just have that experience Justin thank you for all of the the comments that you've given us that's one",
    "start": "2744920",
    "end": "2750640"
  },
  {
    "text": "of Justin's skills is communicating you know he's always willing to post those comments and whether they're more or",
    "start": "2750640",
    "end": "2758319"
  },
  {
    "text": "less salty depending on his mood just yeah he's been quite polite so um sure",
    "start": "2758319",
    "end": "2764000"
  },
  {
    "text": "that's maybe that's gone through a filter but um it's been it's been great seeing what he's been working on he's usually pretty unfilter but he's also a",
    "start": "2764000",
    "end": "2770800"
  },
  {
    "text": "kind person so when you say RBI now is that the same thing as RBS on the other",
    "start": "2770800",
    "end": "2775880"
  },
  {
    "text": "side but it's like yeah sorry that's the name that sorb uses for these annotation files that uses a different syntax but",
    "start": "2775880",
    "end": "2781960"
  },
  {
    "text": "for the same goal and then RBI just stands for Ruby interface um okay so if I was going to provide type",
    "start": "2781960",
    "end": "2788680"
  },
  {
    "text": "annotations for something I would I would produce an RBI or I guess this is what Justin is trying to figure out with",
    "start": "2788680",
    "end": "2794160"
  },
  {
    "text": "mocktail is like what do we actually what's our output as a library author yeah so as a library author like you",
    "start": "2794160",
    "end": "2800440"
  },
  {
    "text": "would either have to have sorbet read the sources of your gem files and use",
    "start": "2800440",
    "end": "2805559"
  },
  {
    "text": "that to understand what's defined but typically people will not ask the source",
    "start": "2805559",
    "end": "2811079"
  },
  {
    "text": "of the gem be type checked because obviously then it's also going to do things like actually read the method bodies and make sure that all the method",
    "start": "2811079",
    "end": "2817000"
  },
  {
    "text": "bodies type check and that's going to be particularly slow so having just the interface files will speed things up a",
    "start": "2817000",
    "end": "2823520"
  },
  {
    "text": "bit gotcha why go RBI and not RBS like why why would you create a whole new A",
    "start": "2823520",
    "end": "2829319"
  },
  {
    "text": "Whole New World in a way well so it kind of hearkens back to the conversation we were having earlier about what syntax do",
    "start": "2829319",
    "end": "2836040"
  },
  {
    "text": "you want in these files do you want the contents of these annotation files to be the same syntax as as Ruby code or do",
    "start": "2836040",
    "end": "2842079"
  },
  {
    "text": "you want them to start from this Blank Slate where you can design find the syntax that you want so the syntax of",
    "start": "2842079",
    "end": "2847680"
  },
  {
    "text": "RBI files is literally just Ruby files with no method bodies so if you wanted to annotate a method it's the same",
    "start": "2847680",
    "end": "2853680"
  },
  {
    "text": "syntax in a ruby source file as it would be in a ruby interface file whereas RBS is this streamlined syntax that you plus",
    "start": "2853680",
    "end": "2861800"
  },
  {
    "text": "the Ruby team kind of collaborated on is that correct yeah exactly you know in in defense of the uh RBI syntax I think",
    "start": "2861800",
    "end": "2868880"
  },
  {
    "text": "that one of the things that's a lot easier about it is you don't have to kind of switch between two type systems",
    "start": "2868880",
    "end": "2874599"
  },
  {
    "text": "in the docs so so if you see a type annotation anywhere in sbase docs it's",
    "start": "2874599",
    "end": "2880400"
  },
  {
    "text": "completely valid to put that both in the Ruby file or in the RBI File versus having to learn two type syntaxes if",
    "start": "2880400",
    "end": "2887559"
  },
  {
    "text": "you're trying to use sorbet with RBS files gotcha now does sorbet run faster",
    "start": "2887559",
    "end": "2892839"
  },
  {
    "text": "with RBIs than it would just in the source code or does it not matter it's",
    "start": "2892839",
    "end": "2898359"
  },
  {
    "text": "really just a function of like how many btes orbas reading so if your source files are really long then it might slow",
    "start": "2898359",
    "end": "2903960"
  },
  {
    "text": "down a little bit just to parse through and get the actual yep annotations out yeah the crazy thing though is just how",
    "start": "2903960",
    "end": "2909480"
  },
  {
    "text": "fast sorbet actually is I have gone on record many times and claimed that Stripes Ruby Cod base is the largest but",
    "start": "2909480",
    "end": "2916599"
  },
  {
    "text": "that obviously I haven't seen every R rubby code base in the world and no one has contested me on this point so I'm going to go forward and continue saying",
    "start": "2916599",
    "end": "2922359"
  },
  {
    "text": "this until someone corrects me that Stripes Ruby Cod base is the largest ruby code base in the world and bigger",
    "start": "2922359",
    "end": "2927480"
  },
  {
    "text": "than GitHub Oh by by a long shot and uh the nice thing about this if you are a user of sorbet is sorbet will like the",
    "start": "2927480",
    "end": "2935079"
  },
  {
    "text": "amount of time that it takes to type check your code base will never be longer than it like the the slowest code base to type check so you you kind of",
    "start": "2935079",
    "end": "2942240"
  },
  {
    "text": "like benefit from someone will always encounter performance problems before you will and that someone will be",
    "start": "2942240",
    "end": "2947680"
  },
  {
    "text": "striping that someone will be Jake Silverman yeah so that's kind of why a large part of the the work that we end",
    "start": "2947680",
    "end": "2953799"
  },
  {
    "text": "up doing is just optimizing and optimizing one of the fun projects that I got to work on last year was um making",
    "start": "2953799",
    "end": "2960760"
  },
  {
    "text": "sbet more incremental so the entire history of sorbet if you need did to run",
    "start": "2960760",
    "end": "2966599"
  },
  {
    "text": "surve in your editor it would basically just retype check the entire code base and it was fast enough like it would be",
    "start": "2966599",
    "end": "2971880"
  },
  {
    "text": "a little bit slow you would be able to see when it's uh doing this this retype check operation but it would only maybe",
    "start": "2971880",
    "end": "2977680"
  },
  {
    "text": "last a couple seconds and that's fine that's actually like most of the time fast enough eventually the K base got to",
    "start": "2977680",
    "end": "2983280"
  },
  {
    "text": "the point where that wasn't fast enough which meant that we had to do some work to make it faster and the way that we",
    "start": "2983280",
    "end": "2988799"
  },
  {
    "text": "did this was just being smarter about uh not doing work basically we would figure out the contents of Any Given edit edit",
    "start": "2988799",
    "end": "2995799"
  },
  {
    "text": "and say like okay well we can actually tell that in this edit only these definitions have changed and then do",
    "start": "2995799",
    "end": "3001559"
  },
  {
    "text": "some really clever things to not have to retype check the entire code base so it's those sorts of optimizations that",
    "start": "3001559",
    "end": "3008040"
  },
  {
    "text": "personally I find really fun and also people benefit from that the codebase will yet never get to the point where",
    "start": "3008040",
    "end": "3013839"
  },
  {
    "text": "it's super slow to type check because we've found the problem fixed it before it ever becomes a problem for anyone",
    "start": "3013839",
    "end": "3019559"
  },
  {
    "text": "else stripe is bigger than Shopify yep Shopify I think he's saying this like so",
    "start": "3019559",
    "end": "3024960"
  },
  {
    "text": "unequip he like yep I I I I know I know shopify's code base is one of the code",
    "start": "3024960",
    "end": "3030000"
  },
  {
    "text": "bases where I have like actually very exact numbers on on how large that Cod bases but I cuz they're using sorbet",
    "start": "3030000",
    "end": "3035839"
  },
  {
    "text": "yeah so you have they're also like one of our closest partners that we collaborate with on on improving sorbet they've made a number of contributions",
    "start": "3035839",
    "end": "3042079"
  },
  {
    "text": "themselves and we're U we meet regularly with them to figure out um how we could be making surve better so that's kind of",
    "start": "3042079",
    "end": "3048920"
  },
  {
    "text": "like one of the things that I'm always worried about is like well what if you know the performance is getting out of hands on other people's Cod base and I'm",
    "start": "3048920",
    "end": "3054520"
  },
  {
    "text": "not m able to even see um what the problems are because I can go profile AR",
    "start": "3054520",
    "end": "3059680"
  },
  {
    "text": "code base and see what the problems are is Twitter still Ruby or they still a rail shop or what I don't think Twitter's Ruby anymore I think they use",
    "start": "3059680",
    "end": "3066599"
  },
  {
    "text": "Scala a lot of Scala Scala and maybe some other languages at this point they well got them too much I guess is stripe",
    "start": "3066599",
    "end": "3073000"
  },
  {
    "text": "bigger than base camp probably is that's one of the ones I don't know of but again no one has reached out and told me",
    "start": "3073000",
    "end": "3078160"
  },
  {
    "text": "otherwise so all right listen out listener out there if you have a code base larger than stripe or you think",
    "start": "3078160",
    "end": "3083599"
  },
  {
    "text": "it's larger then you need to let us s so we can prove Jake wrong how many lines of code roughly yeah so I wrote a blog",
    "start": "3083599",
    "end": "3089839"
  },
  {
    "text": "post on the stripe engineering blog in May of 2022 I believe uh and the Cod Bas",
    "start": "3089839",
    "end": "3096200"
  },
  {
    "text": "size at that time was 15 million lines and that was a year ago roughly that was a year ago if you uh you think you can",
    "start": "3096200",
    "end": "3103319"
  },
  {
    "text": "beat 15 million lines I would be very very curious to hear now I also want to",
    "start": "3103319",
    "end": "3108400"
  },
  {
    "text": "express my condolences for having to work in a 15 million line code code basee is lines of code the best way to",
    "start": "3108400",
    "end": "3114079"
  },
  {
    "text": "quantify it though wouldn't bite be better yeah btes would be better for sure I mean you can have a long or a short line right you have like millions",
    "start": "3114079",
    "end": "3120599"
  },
  {
    "text": "of short lines then and I have half a million really long lines maybe I maybe I win yep no absolutely bites like if if",
    "start": "3120599",
    "end": "3128480"
  },
  {
    "text": "I've sniped you enough you dear listener into let's compare our code base sizes um I will try and ask if you can find",
    "start": "3128480",
    "end": "3135599"
  },
  {
    "text": "the number of bytes It's usually the uh tools that report codebase sizes are easier to measure lines of code for",
    "start": "3135599",
    "end": "3141400"
  },
  {
    "text": "whatever reason so that's usually the kind of like that also makes for nicer headlines and blog posts is Right s has",
    "start": "3141400",
    "end": "3148480"
  },
  {
    "text": "this many bites or Stripes Cod base has this many bites doesn't quite have the ring to it that c llc's are better in",
    "start": "3148480",
    "end": "3154359"
  },
  {
    "text": "that case yeah but if it's going to come down to it we'll go bite for bite that's what you're saying we we'll definitely do that okay if you're comparative on",
    "start": "3154359",
    "end": "3161319"
  },
  {
    "text": "lines of code let's go bite the bite yeah exactly okay cool man so I guess",
    "start": "3161319",
    "end": "3167079"
  },
  {
    "text": "the only thing that I'm left thinking is what is the user experience like let's just say I have a uh 12 million line",
    "start": "3167079",
    "end": "3173799"
  },
  {
    "text": "rails app out there or maybe even a 16 million line rails app out there and I'm thinking sorbet might be for me like",
    "start": "3173799",
    "end": "3180280"
  },
  {
    "text": "what do we how do we opt in or incrementally adopt what does it look like day-to-day to adopt it and use it",
    "start": "3180280",
    "end": "3185920"
  },
  {
    "text": "yep yeah so the steps to adopt it you can just go to sb.org and there'll be instructions there the instructions will",
    "start": "3185920",
    "end": "3192559"
  },
  {
    "text": "basically ask you to install a gem there's actually two gems one of them is going to be the static type Checker",
    "start": "3192559",
    "end": "3199760"
  },
  {
    "text": "that'll report all the type errors in your code and one of them is going to be that runtime library that lets to use",
    "start": "3199760",
    "end": "3206079"
  },
  {
    "text": "the DSL for annotating type syntax so you add these two gems to your codebase",
    "start": "3206079",
    "end": "3211520"
  },
  {
    "text": "you don't even need to write any annotations out of the box if you don't want to and you can start yeah type-",
    "start": "3211520",
    "end": "3216839"
  },
  {
    "text": "checking it it'll probably report a bunch of errors on your codebase you can either fix those errors or you can turn",
    "start": "3216839",
    "end": "3221920"
  },
  {
    "text": "off the type Checker in those files and that's that the thing that you're going to want to do is as quickly as possible",
    "start": "3221920",
    "end": "3227720"
  },
  {
    "text": "get it to the point where every file is at least typed false so if you have any files that don't have valid syntax or",
    "start": "3227720",
    "end": "3233760"
  },
  {
    "text": "that uh have con Conant names that sorb doesn't know about there's various ways to fix those errors but that's kind of",
    "start": "3233760",
    "end": "3240520"
  },
  {
    "text": "the the Baseline it's getting every file to be able to type check at typed false and from there you can now start using",
    "start": "3240520",
    "end": "3246680"
  },
  {
    "text": "sbet in you know CI and making sure that it continues to type check you can start",
    "start": "3246680",
    "end": "3251880"
  },
  {
    "text": "using servey in your editor and take advantage of all these jump to definition features and then gradually",
    "start": "3251880",
    "end": "3257720"
  },
  {
    "text": "again opt individual files into strict your levels start adding type syntax to",
    "start": "3257720",
    "end": "3262799"
  },
  {
    "text": "the methods that you care the most about and that's kind of it yeah what does the editor support look like so there's a vs",
    "start": "3262799",
    "end": "3270000"
  },
  {
    "text": "code extension that you can install and it'll automatically figure out where sorb is installed in your codebase and",
    "start": "3270000",
    "end": "3275559"
  },
  {
    "text": "how to run it and it'll show you the errors and you know all of the fancy vs code features will uh be wired up if you",
    "start": "3275559",
    "end": "3284319"
  },
  {
    "text": "don't use vs code there's the editor support is powered by a language server protocol server and it'll work with any",
    "start": "3284319",
    "end": "3291720"
  },
  {
    "text": "editor client that supports language server protocol which is most of them at this point Point mhm mhm I thought that might be coming because I read that",
    "start": "3291720",
    "end": "3297880"
  },
  {
    "text": "you're a Vim guy and I thought there's no way y Jake's not going to have support for his favorite editor through some sort of fashion yep no it works",
    "start": "3297880",
    "end": "3304520"
  },
  {
    "text": "completely fine in in Vim over LSP sweet what about uh tracking adoption I see",
    "start": "3304520",
    "end": "3309880"
  },
  {
    "text": "there's two documents here in your docs adopting SB which is outline as you mentioned then you also have tracking",
    "start": "3309880",
    "end": "3316160"
  },
  {
    "text": "what how important is it to track adoption when you begin to incrementally bring it in like what who's who's",
    "start": "3316160",
    "end": "3321880"
  },
  {
    "text": "tracking the adoption I'd say that the tracking adoption the metrics one is more focused for larger companies that",
    "start": "3321880",
    "end": "3328520"
  },
  {
    "text": "are going to be Staffing the effort to add types as like a proper project the nice thing is you want to give other",
    "start": "3328520",
    "end": "3335280"
  },
  {
    "text": "stakeholders at your company visibility into the progress that you're making and there's various ways to ask sorb to",
    "start": "3335280",
    "end": "3341480"
  },
  {
    "text": "report how much coverage there is in a Cod base so that you can yeah keep people involved and in the loop of like",
    "start": "3341480",
    "end": "3346920"
  },
  {
    "text": "the first thing you asked me was you know how many files does sorbet have type checked in in our in Stripes code",
    "start": "3346920",
    "end": "3352839"
  },
  {
    "text": "base and yeah it it'll print those out so that you never have to be in the dark about how much progress you're making I",
    "start": "3352839",
    "end": "3359520"
  },
  {
    "text": "also see typescript versus I guess versus or comparative to sorbet as a",
    "start": "3359520",
    "end": "3364760"
  },
  {
    "text": "document i' imagine since you all use typescript on the front end and then on the back end Ruby obviously this sorb",
    "start": "3364760",
    "end": "3371559"
  },
  {
    "text": "type check you're you're wanting to keep the mental gymnastics to a low so what",
    "start": "3371559",
    "end": "3377240"
  },
  {
    "text": "is this document outlining if you're familiar with typescript you should be somewhat familiar with the way sorb is doing are you trying to mirror a lot of",
    "start": "3377240",
    "end": "3383359"
  },
  {
    "text": "what they've done well I think that Doc is one big table that kind of like if you know this type system feature and",
    "start": "3383359",
    "end": "3388640"
  },
  {
    "text": "the name for it in typescript has this name here's the corresponding name in sbase type system because again people",
    "start": "3388640",
    "end": "3395000"
  },
  {
    "text": "are way more familiar like for a lot of people typescript is people's only experience with the typed language",
    "start": "3395000",
    "end": "3401480"
  },
  {
    "text": "especially these days so kind of anything that we can do to make it easier for people to on board to sorbet",
    "start": "3401480",
    "end": "3408640"
  },
  {
    "text": "and understand what what names we've chosen for various pieces of the type system is what that Doc is trying to provide mhm earlier in the show you said",
    "start": "3408640",
    "end": "3416480"
  },
  {
    "text": "uh I'm going to paraphrase something to the fact that uh types will win in the end or it's a type world what restate",
    "start": "3416480",
    "end": "3422599"
  },
  {
    "text": "that and and give us the synopsis of why you think that's true I just uh yeah",
    "start": "3422599",
    "end": "3428079"
  },
  {
    "text": "part of it is just a fanatical belief and part of it is I just live and breathe the benefits of of type Checkers",
    "start": "3428079",
    "end": "3433920"
  },
  {
    "text": "every day and especially yeah once you get to the point where you can't you can no longer hold the code base in one",
    "start": "3433920",
    "end": "3440799"
  },
  {
    "text": "person's head where you have to start collaborating on a code base with more than one person which which is almost all code bases that do anything",
    "start": "3440799",
    "end": "3447119"
  },
  {
    "text": "interesting these days having a type Checker to offload the burden of understanding the code and and keeping",
    "start": "3447119",
    "end": "3453359"
  },
  {
    "text": "track of relationships between various files and data structures and all these sorts of things is yeah super valuable",
    "start": "3453359",
    "end": "3460039"
  },
  {
    "text": "so just uh again we kind of talked about this at the beginning where the the language that you use changes the way",
    "start": "3460039",
    "end": "3466559"
  },
  {
    "text": "that you think and changes the ways that you approach problems and languages with type systems I think give you such",
    "start": "3466559",
    "end": "3472960"
  },
  {
    "text": "strong vocabulary for you how you you can structure your thoughts did you say types will win in the end what was the",
    "start": "3472960",
    "end": "3480359"
  },
  {
    "text": "exact phrasing Give me the give me lay it down hard we're trying to name this episode we're trying to get you mailed",
    "start": "3480359",
    "end": "3485480"
  },
  {
    "text": "down so we can name it that yeah let's uh I mean now that I know I'm on the on the book for figuring out what it is I I",
    "start": "3485480",
    "end": "3493160"
  },
  {
    "text": "will say like yeah types will win in the end just because they're so much more yeah this kind of hearkens back to my",
    "start": "3493160",
    "end": "3500079"
  },
  {
    "text": "schooling days where I had professors who were super fanatical about types and kind of instilled in in this kind of",
    "start": "3500079",
    "end": "3506839"
  },
  {
    "text": "like going to church and hearing your preachers preach about whatever gospel just kind of preaching about the values",
    "start": "3506839",
    "end": "3512319"
  },
  {
    "text": "of types so yeah types will win in the end sure there you go all right last question for me you are a type fanatic",
    "start": "3512319",
    "end": "3520799"
  },
  {
    "text": "working in a dynamic language which you seem to have much respect for at least",
    "start": "3520799",
    "end": "3525839"
  },
  {
    "text": "on display and you have a cool job so surely you want to keep it but if you were to not have to use Ruby like if you",
    "start": "3525839",
    "end": "3532160"
  },
  {
    "text": "were just like Jake Zimmerman start from scratch surely there's a programming language you like better because of the",
    "start": "3532160",
    "end": "3538119"
  },
  {
    "text": "type side of things like what would you be working in would it be something so when I was in school almost all of our",
    "start": "3538119",
    "end": "3544359"
  },
  {
    "text": "classes were either in C which is just you have everyone should learn C at some point or they were in this language",
    "start": "3544359",
    "end": "3549559"
  },
  {
    "text": "called standard ml standard is a very not very widely uh known language but it",
    "start": "3549559",
    "end": "3554760"
  },
  {
    "text": "it was kind of one of the first languages to really Pioneer algebraic data types and pattern matching and type",
    "start": "3554760",
    "end": "3561599"
  },
  {
    "text": "inference and all these other type system features that have started to gain rapid popularity in other languages",
    "start": "3561599",
    "end": "3568240"
  },
  {
    "text": "so I would probably I think that using standard ml as a language to actually write code in is almost impossible",
    "start": "3568240",
    "end": "3575359"
  },
  {
    "text": "there's no libraries for it there's no build system for it there's yeah no way to really collaborate with other people",
    "start": "3575359",
    "end": "3581880"
  },
  {
    "text": "but a lot of languages have gone to Great Lengths to copy their features and so I think that the most popular",
    "start": "3581880",
    "end": "3589280"
  },
  {
    "text": "language that has copied the most from standard ml is probably rust so I'll probably try and use rust if are",
    "start": "3589280",
    "end": "3594960"
  },
  {
    "text": "possible very cool I'm looking at the Wikipedia influenced Elm fshp fstar",
    "start": "3594960",
    "end": "3601119"
  },
  {
    "text": "hasal o camel python rust and Scala so a lot of influence like you said on other",
    "start": "3601119",
    "end": "3609039"
  },
  {
    "text": "languages I guess at the end of the day rust will win what's the what's rust will win at the end because",
    "start": "3609039",
    "end": "3616799"
  },
  {
    "text": "Jake says so cool question or Adam any other questions on your end before we",
    "start": "3616799",
    "end": "3621880"
  },
  {
    "text": "let him go I'm clear I almost uh almost brought back in cold ice cream",
    "start": "3621880",
    "end": "3627799"
  },
  {
    "text": "and hot kisses cuz sorbet but whatever ah don't do it Jake probably hasn't",
    "start": "3627799",
    "end": "3633119"
  },
  {
    "text": "don't do it Jake probably hasn't heard that episode yet H he's like what are you talking",
    "start": "3633119",
    "end": "3638480"
  },
  {
    "text": "about the the funny part about the naming of sbet is I'm not even a huge fan of sorbet I really like ice cream",
    "start": "3638480",
    "end": "3646720"
  },
  {
    "text": "better what exactly is sorbet I think it's more of like a dairyfree alternative to yeah it's likez desserts",
    "start": "3646720",
    "end": "3654039"
  },
  {
    "text": "yeah like strawberry usually or it's like uh a snow cone of sorts right it's",
    "start": "3654039",
    "end": "3660839"
  },
  {
    "text": "similar to that sort that's the other funny part is I don't think it's typically served in a cone but our logo",
    "start": "3660839",
    "end": "3666240"
  },
  {
    "text": "definitely has it with the cone yeah it does now we know what's what's holding back adoption is just this cognitive",
    "start": "3666240",
    "end": "3675079"
  },
  {
    "text": "overload what is this sorbet thing I think it's a cool name just because it's different and uh memorable it is well",
    "start": "3675079",
    "end": "3683559"
  },
  {
    "text": "that's the that's the half the battle is I mean go for example is a challenging language to operate around when it comes",
    "start": "3683559",
    "end": "3690400"
  },
  {
    "text": "to finding information cuz it's just a good name but poorly named in reference",
    "start": "3690400",
    "end": "3696599"
  },
  {
    "text": "to the fact that everything goes somewhere overlo you have to say go Lang which is basically frowned upon by",
    "start": "3696599",
    "end": "3702280"
  },
  {
    "text": "anybody who writes go daily like go langang is not part of their lexicon at all they have like weird rules around it",
    "start": "3702280",
    "end": "3708400"
  },
  {
    "text": "they do like just social norms like you can type goang but you shouldn't say goang I'm like I don't know all these",
    "start": "3708400",
    "end": "3714079"
  },
  {
    "text": "rules people there's definitely a similar problem with sorbet where if you try and search like sorbet thing that I",
    "start": "3714079",
    "end": "3719480"
  },
  {
    "text": "need to search for half the time it'll so you show you like recipe sites you're",
    "start": "3719480",
    "end": "3724559"
  },
  {
    "text": "GNA get some frozen shird or whatever it is well you do you did land sb.org which",
    "start": "3724559",
    "end": "3730760"
  },
  {
    "text": "is a sweet website considering you know 2017 most websites were taken by then but just one single word got the.org so",
    "start": "3730760",
    "end": "3738000"
  },
  {
    "text": "I mean that's good yeah good it was definitely uh I was excited to get that one just a lot of there's actually like",
    "start": "3738000",
    "end": "3744520"
  },
  {
    "text": "quite a few good domain names out there it's just kind of question of how much you have to pay for them but luckily um",
    "start": "3744520",
    "end": "3750079"
  },
  {
    "text": "it wasn't a personal project it was a stripe project so what looks expensive for me looks a lot cheaper for stripe good point Adam we should start",
    "start": "3750079",
    "end": "3757480"
  },
  {
    "text": "some stripe projects get get some good domain names",
    "start": "3757480",
    "end": "3762599"
  },
  {
    "text": "all right we're bik shedding the name I think that means we're officially done here don't you think Adam let's do it we're done all right thanks Jake Jake",
    "start": "3762599",
    "end": "3770359"
  },
  {
    "text": "thanks so much for coming on man yeah thank you for having me",
    "start": "3770359",
    "end": "3776079"
  },
  {
    "text": "so there is a bonus after Today's Show so if you're plus plus subscriber stick",
    "start": "3776079",
    "end": "3781920"
  },
  {
    "text": "around cuz we asked Jake what it's like to be in such a privileged position to",
    "start": "3781920",
    "end": "3787240"
  },
  {
    "text": "be employed by a stripe working on open source and having such a significant",
    "start": "3787240",
    "end": "3794000"
  },
  {
    "text": "impact living the dream the open source dream but if you're not a plus plus subscriber it's too easy Chang log.com",
    "start": "3794000",
    "end": "3800720"
  },
  {
    "text": "SL plus plus 10 bucks a month 100 bucks a year directly support us drop the ads",
    "start": "3800720",
    "end": "3808000"
  },
  {
    "text": "and get a little closer to the metal again Chang law.com plusus plus also",
    "start": "3808000",
    "end": "3813400"
  },
  {
    "text": "want to mention a big show coming out on Friday here on the change log an episode",
    "start": "3813400",
    "end": "3819599"
  },
  {
    "text": "of change log and Friends our new friend Jeff gearing goes deep with us on the",
    "start": "3819599",
    "end": "3825279"
  },
  {
    "text": "state of Enterprise Linux what's happening with real Oracle Linux Rocky",
    "start": "3825279",
    "end": "3832480"
  },
  {
    "text": "Linux Alma Linux all the linuxes will Red Hat Enterprise Linux Remain the",
    "start": "3832480",
    "end": "3839559"
  },
  {
    "text": "open-source Enterprise Linux standard or have they made a move that makes that",
    "start": "3839559",
    "end": "3845640"
  },
  {
    "text": "change in the near future time will tell tune in to that show on Friday of course",
    "start": "3845640",
    "end": "3851839"
  },
  {
    "text": "a big thank you to our friends and partners at fastly fly and also our friends at typ sense those beats from",
    "start": "3851839",
    "end": "3859559"
  },
  {
    "text": "break Master get better and better with age it's like a final wine or fine cheese just in audio form those beats",
    "start": "3859559",
    "end": "3867960"
  },
  {
    "text": "they're banging but hey that's it this show is done thank you for tuning in I appreciate having you here and uh we'll",
    "start": "3867960",
    "end": "3875000"
  },
  {
    "text": "see you on [Music]",
    "start": "3875000",
    "end": "3881110"
  },
  {
    "text": "[Applause] [Music]",
    "start": "3881110",
    "end": "3890650"
  },
  {
    "text": "Friday [Music] k",
    "start": "3893160",
    "end": "3900960"
  }
]