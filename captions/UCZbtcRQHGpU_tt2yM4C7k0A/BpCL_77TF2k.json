[
  {
    "text": "the best performance Improvement I remember I ever did I made something about a thousand times faster by",
    "start": "80",
    "end": "6399"
  },
  {
    "text": "removing a a Time dot sleep that I'd left in there by mistake they were thrilled they were",
    "start": "6399",
    "end": "12960"
  },
  {
    "text": "like this is really fast now I look like a hero instead I was of course an idiot",
    "start": "12960",
    "end": "18279"
  },
  {
    "text": "in the beginning so do you recommend that but some time sleeps in early and then you can take them out over time",
    "start": "18279",
    "end": "24279"
  },
  {
    "text": "maybe it's a genius move right you just put them in and then remove Tada T it's",
    "start": "24279",
    "end": "29320"
  },
  {
    "text": "an improvement yeah this episode is brought to you by",
    "start": "29320",
    "end": "36160"
  },
  {
    "text": "Source graph Source graph is universal code serves that let you move fast even in big code bases here's CTO and",
    "start": "36160",
    "end": "43160"
  },
  {
    "text": "co-founder byang luu explaining how Source graph helps you to get into that ideal state of flow and coding the ideal",
    "start": "43160",
    "end": "49879"
  },
  {
    "text": "state of software development is really being in that state of flow it's that state where all the relevant context and",
    "start": "49879",
    "end": "56840"
  },
  {
    "text": "information that you need to build whatever feature or bug that you're focused on uh building or fixing at the",
    "start": "56840",
    "end": "62760"
  },
  {
    "text": "moment that's all readily available now the question is how do you get into that state where you know you don't know anything about the code necessarily that",
    "start": "62760",
    "end": "69240"
  },
  {
    "text": "you're going to modify that's where Source graph comes in and so what you do with Source graph is you you jump into",
    "start": "69240",
    "end": "75520"
  },
  {
    "text": "Source graph it provides a single uh Cal into that universal code you search for the string literal the pattern whatever",
    "start": "75520",
    "end": "82280"
  },
  {
    "text": "it is you're looking for you dive right into the the specific part of code that you want to understand and then you have",
    "start": "82280",
    "end": "87360"
  },
  {
    "text": "all these code navigation capabilities jump your definition references that work across repository boundaries that",
    "start": "87360",
    "end": "92840"
  },
  {
    "text": "work without having to clone the code to your local machine and set up and mess around with editor config and and all",
    "start": "92840",
    "end": "99240"
  },
  {
    "text": "that everything is just designed to be seamless and to Aid in that task of you know code spelunking or or Source diving",
    "start": "99240",
    "end": "105119"
  },
  {
    "text": "and once you've acquired that understanding then you can hop back in your editor dive right back into that flow state of hey all the information I",
    "start": "105119",
    "end": "112000"
  },
  {
    "text": "need is readily accessible let me just focus on writing the code that influence the feature or fixes the bug that I'm",
    "start": "112000",
    "end": "117320"
  },
  {
    "text": "working on all right learn more at source craft.com and also check out their bonly virtual series called Dev",
    "start": "117320",
    "end": "123079"
  },
  {
    "text": "Tool Time covering all things Dev tools at source.com deev tool",
    "start": "123079",
    "end": "128369"
  },
  {
    "text": "[Music]",
    "start": "128370",
    "end": "137499"
  },
  {
    "text": "time let's do it it's go time welcome to go time your source for d diverse",
    "start": "143120",
    "end": "150120"
  },
  {
    "text": "discussions from all around the go Community this is our final episode of",
    "start": "150120",
    "end": "155280"
  },
  {
    "text": "2022 but have no fear we'll return in the first week of January with a New Year's episode that you don't want to",
    "start": "155280",
    "end": "161560"
  },
  {
    "text": "miss quick shout out to our partners at fastly for shipping go time to you super fast all around the world check them out",
    "start": "161560",
    "end": "168159"
  },
  {
    "text": "at fastly.com and to our friends at fly.io deploy your app servers close to",
    "start": "168159",
    "end": "173280"
  },
  {
    "text": "your users no Ops required learn how at fly.io okay here we go",
    "start": "173280",
    "end": "180430"
  },
  {
    "text": "[Music] hello and welcome to go time I'm M Rya",
    "start": "180430",
    "end": "188440"
  },
  {
    "text": "and today we're talking about making go more efficient and how best do we do",
    "start": "188440",
    "end": "193840"
  },
  {
    "text": "that I'm joined by BK plotka author of efficient go which was released last",
    "start": "193840",
    "end": "199319"
  },
  {
    "text": "month principal engineer at red hat and a Prometheus and Thanos maintainer hey BK welcome back hello hello everyone how",
    "start": "199319",
    "end": "206040"
  },
  {
    "text": "are you very good thank you very much and you're calling in from London right that's correct yeah yeah cool I'm also",
    "start": "206040",
    "end": "213159"
  },
  {
    "text": "joined by Kamal Akon hello M hello you're a software engineer polar signals",
    "start": "213159",
    "end": "218560"
  },
  {
    "text": "right also a Prometheus and Thanos maintainer and currently building an open source ebpf based continuous",
    "start": "218560",
    "end": "225159"
  },
  {
    "text": "profiling solution called Parker welcome hello great to see you this is your",
    "start": "225159",
    "end": "230959"
  },
  {
    "text": "first time on go time I think isn't it yeah it is yeah good A bit NOS yeah oh don't be I am a bit as well just because",
    "start": "230959",
    "end": "237959"
  },
  {
    "text": "of the sheer brain power on this episode I'm out of my depth I'm also joined by",
    "start": "237959",
    "end": "243640"
  },
  {
    "text": "Christian Simon Christian is a software engineer at grafana Labs working on observability databases like Loki mimir",
    "start": "243640",
    "end": "251319"
  },
  {
    "text": "and the new one flare hello Christian yeah hi there Matt how are you I'm good thanks welcome to go time it's nice to",
    "start": "251319",
    "end": "258239"
  },
  {
    "text": "have you here let's get to know our guests a little bit shall we Kamal what's your favorite drink I guess I",
    "start": "258239",
    "end": "266440"
  },
  {
    "text": "have two one is single M scotch and the other one is coffee oh nice yeah do you",
    "start": "266440",
    "end": "272039"
  },
  {
    "text": "have them together like there Irish coffee that we call it we mix them together no I have them separately one",
    "start": "272039",
    "end": "278199"
  },
  {
    "text": "in the morning and one in the afternoon okay we won't ask which is which what about you BK that sounds",
    "start": "278199",
    "end": "284919"
  },
  {
    "text": "pretty good doesn't it yeah definitely it's a plus one from my side as well like coffee and and whiskey and I got",
    "start": "284919",
    "end": "290600"
  },
  {
    "text": "approval from my personal trainer as well he said whiskey is it clean at least and I was like yep clean just ice",
    "start": "290600",
    "end": "297400"
  },
  {
    "text": "and she was like okay that's fine so I think it's good oh wow yeah that sounds like a good personal",
    "start": "297400",
    "end": "303759"
  },
  {
    "text": "trainer Christian do you have a favorite Tipple yeah like I think like uh when",
    "start": "303759",
    "end": "308960"
  },
  {
    "text": "I'm at home I'm definitely more on the juice surely like so with Spritz",
    "start": "308960",
    "end": "315639"
  },
  {
    "text": "basically like as I'm originally from Germany so that's drink there I see but yeah I think given the feedback from the",
    "start": "315639",
    "end": "322280"
  },
  {
    "text": "personal trainer from BK like I think I might need to change that and revisit yeah no wonder you're not ripped not",
    "start": "322280",
    "end": "329000"
  },
  {
    "text": "drinking whiskey oh you're from Germany so okay that's why we're doing an episode on making go more efficient",
    "start": "329000",
    "end": "335639"
  },
  {
    "text": "makes sense that's the classic stereotype uh everybody which I don't recommend I guess people haven't lifted",
    "start": "335639",
    "end": "342840"
  },
  {
    "text": "in Germany that I don't know well you have haven't",
    "start": "342840",
    "end": "348639"
  },
  {
    "text": "you Kamal because you live there now do you like it I really like it I like it Berlin it's been five years wow learning",
    "start": "348639",
    "end": "355280"
  },
  {
    "text": "to be a German yeah slowly nice I think I think Berlin's a great city as well",
    "start": "355280",
    "end": "360960"
  },
  {
    "text": "gophercon EU was there this year so I got to go and hang out in Berlin and uh we had a great time that's the small",
    "start": "360960",
    "end": "368120"
  },
  {
    "text": "talk over the small talk section is now finished okay so you can no more small talk now let's get down to business I",
    "start": "368120",
    "end": "375560"
  },
  {
    "text": "want to know just something initially like making code obviously more efficient I think it's kind of the case",
    "start": "375560",
    "end": "381639"
  },
  {
    "text": "for it's obvious you use you don't use as many resources it's actually sometimes like The Greener thing to do",
    "start": "381639",
    "end": "388240"
  },
  {
    "text": "as well cuz you're using lit less energy especially when you get at scale but for",
    "start": "388240",
    "end": "393680"
  },
  {
    "text": "sort of like people that are new to wrri and go or they're just getting started",
    "start": "393680",
    "end": "398759"
  },
  {
    "text": "do they have to worry about the efficiency stuff from the very beginning is this something that you should just",
    "start": "398759",
    "end": "403880"
  },
  {
    "text": "get it working first and then you can make it more efficient later so you know",
    "start": "403880",
    "end": "409919"
  },
  {
    "text": "there are two schools actually right one is that the saying that premature",
    "start": "409919",
    "end": "415319"
  },
  {
    "text": "optimization is the root of our ail it's like very old saying that got very very very popular especially in ' 80s and",
    "start": "415319",
    "end": "422599"
  },
  {
    "text": "'90s then and that was kind of claiming that Engineers are playing too much they",
    "start": "422599",
    "end": "428199"
  },
  {
    "text": "are having too much fun of making you know those optimizations and efficiency improvements that at the end didn't",
    "start": "428199",
    "end": "434160"
  },
  {
    "text": "matter and actually make things worse because the code was unreadable unmaintainable and changing it to be",
    "start": "434160",
    "end": "440599"
  },
  {
    "text": "faster for different circumstances was harder so at the end it was less efficient right so that's one school and",
    "start": "440599",
    "end": "447199"
  },
  {
    "text": "I think there are good kind of like good truth to be learned from that but nowadays I'm kind of like you know maybe",
    "start": "447199",
    "end": "454199"
  },
  {
    "text": "discussing in my book as well but also in my talks that sometimes we are too afraid of touching the efficiency topic",
    "start": "454199",
    "end": "461319"
  },
  {
    "text": "so we are always kind of putting that as a like last step in your development practices last priority and you are kind",
    "start": "461319",
    "end": "469199"
  },
  {
    "text": "of like those are excuses to not do this maybe a little bit extra additional work",
    "start": "469199",
    "end": "474319"
  },
  {
    "text": "to make things faster and more cheaper to run so we can go deeper but generally",
    "start": "474319",
    "end": "479639"
  },
  {
    "text": "yes and no generally especially if you're learning focus on readability maintainability and those kind of first",
    "start": "479639",
    "end": "486159"
  },
  {
    "text": "things that you have to learn how to make your code functionally uh running so kind of like fulfilling your",
    "start": "486159",
    "end": "493080"
  },
  {
    "text": "functional requirements and then you can optimize it later however with time and",
    "start": "493080",
    "end": "498800"
  },
  {
    "text": "with if your team is more kind of productive and more can learn more I mean can use tools that we hopefully",
    "start": "498800",
    "end": "504919"
  },
  {
    "text": "will talk about around how to make things more efficient you can kind of like move this step sooner in your",
    "start": "504919",
    "end": "510680"
  },
  {
    "text": "development process however you have to know what you are doing so if you're new to go definitely don't even aim to make",
    "start": "510680",
    "end": "516599"
  },
  {
    "text": "like code more efficient until you know you have to do it and then you can learn how to do it so that's the balance I I",
    "start": "516599",
    "end": "522599"
  },
  {
    "text": "mean for I would definitely agree I guess with with many other things I think a balance of the two is probably",
    "start": "522599",
    "end": "528880"
  },
  {
    "text": "good and kind of the better you understand your ability your team's abilities but also maybe the problem",
    "start": "528880",
    "end": "534440"
  },
  {
    "text": "space like let's say you you attempt to rewrite of something you think you understand quite good I guess then maybe",
    "start": "534440",
    "end": "540440"
  },
  {
    "text": "efficiency is some of the reason of that rewrite while maybe you're trying something completely new and you might",
    "start": "540440",
    "end": "547360"
  },
  {
    "text": "just have the wrong assumptions um what you're optimizing against so there's no one side fits at all I guess yeah I",
    "start": "547360",
    "end": "554480"
  },
  {
    "text": "totally agree for the both of the statements but I guess as BK put that I belong to the first school and like the",
    "start": "554480",
    "end": "561800"
  },
  {
    "text": "original quotes from Donal Kut and it says like 97% of the time so I think",
    "start": "561800",
    "end": "567480"
  },
  {
    "text": "that 3% sometimes makes the difference and you can always determine that 3% by measuring things",
    "start": "567480",
    "end": "575000"
  },
  {
    "text": "right and in goal we have lots of Tools around that that you can actually measure and Benchmark and decide maybe",
    "start": "575000",
    "end": "582640"
  },
  {
    "text": "even from the beginning what to optimize yeah so this is interesting then and I I kind of like what we're going to get",
    "start": "582640",
    "end": "589240"
  },
  {
    "text": "into like this idea that we don't really know what we can do to make it more efficient necessarily and sometimes even",
    "start": "589240",
    "end": "596959"
  },
  {
    "text": "experienced Engineers will have a really good good idea it'll be really obvious but it turns out that it doesn't",
    "start": "596959",
    "end": "603519"
  },
  {
    "text": "necessarily make any impact when you make certain changes so how do we know when we've got the opportunity when",
    "start": "603519",
    "end": "609640"
  },
  {
    "text": "we've found that 3% to make something more efficient how do we know well we need to make some measurements we need",
    "start": "609640",
    "end": "616279"
  },
  {
    "text": "to observe our system under load under kind of requirements we set it to to be",
    "start": "616279",
    "end": "621880"
  },
  {
    "text": "running with and essentially observe what is causing the problem and then",
    "start": "621880",
    "end": "627440"
  },
  {
    "text": "generally at what level of of efficiency we are in so those kind of like two things that generally I'm I'm in my book",
    "start": "627440",
    "end": "634240"
  },
  {
    "text": "kind of mentioning that you need to assess your efficiency you need to be able to assess your efficiency because",
    "start": "634240",
    "end": "640560"
  },
  {
    "text": "perhaps you are actually fast enough it's actually some other component that is causing the problem or something",
    "start": "640560",
    "end": "646320"
  },
  {
    "text": "might be outside of requirements maybe a request is going to your HTP server written and go and is actually you know",
    "start": "646320",
    "end": "652399"
  },
  {
    "text": "malformed request that's why things are slow so maybe some Safeguard check is enough so this assessment is one one",
    "start": "652399",
    "end": "659240"
  },
  {
    "text": "thing and you have to kind of measure that that might might be and that's generally in kind of observability space",
    "start": "659240",
    "end": "664560"
  },
  {
    "text": "we are going into you have to measure it while running either running on production or locally under your",
    "start": "664560",
    "end": "670240"
  },
  {
    "text": "benchmark we call it so test and experiment right so assessment is one",
    "start": "670240",
    "end": "675279"
  },
  {
    "text": "point and the second point is bottleneck analysis so once you know that things are too slow so you generally know you",
    "start": "675279",
    "end": "681560"
  },
  {
    "text": "are for example like one second behind your expectations of the HTP request for example you can go and find some tooling",
    "start": "681560",
    "end": "689519"
  },
  {
    "text": "around observability that will tell you the bottleneck so what part of my code is actually a main contributor for the",
    "start": "689519",
    "end": "695639"
  },
  {
    "text": "problem right maybe it's too slow maybe it's using too much memory and that's a bottleneck right and that can be",
    "start": "695639",
    "end": "701720"
  },
  {
    "text": "multiple contributors right of course it's usually multiple it's not like only one of your program using all of the",
    "start": "701720",
    "end": "707680"
  },
  {
    "text": "resources but generally there is this rule called parto which is uh saying that you know it's usually 80% of",
    "start": "707680",
    "end": "715639"
  },
  {
    "text": "resources used by 20% of your code or things like that so generally there is some bottleneck that the thing that you",
    "start": "715639",
    "end": "722000"
  },
  {
    "text": "should focus first to have the most impact and bottleneck analysis is again something you can get from observability",
    "start": "722000",
    "end": "728000"
  },
  {
    "text": "we could mention later on does anyone disagree with that everyone agrees everyone works on observability",
    "start": "728000",
    "end": "735160"
  },
  {
    "text": "and monitoring so who disagree yeah exactly good point okay so observability",
    "start": "735160",
    "end": "742480"
  },
  {
    "text": "then so this is literally like monitoring resource usage or the time it",
    "start": "742480",
    "end": "748959"
  },
  {
    "text": "takes to do things like is there a limit really how do we know what to measure I",
    "start": "748959",
    "end": "754040"
  },
  {
    "text": "guess it depends on what kind of program or service that you are writing right let's take you have an online system and",
    "start": "754040",
    "end": "760880"
  },
  {
    "text": "it's a request serving system like HTTP or grpc maybe you are like putting this",
    "start": "760880",
    "end": "767440"
  },
  {
    "text": "program as a service and then we can talk about maybe service level objectives and what actually affects",
    "start": "767440",
    "end": "773760"
  },
  {
    "text": "customer like what are your error rates what are your latencies then from that",
    "start": "773760",
    "end": "779240"
  },
  {
    "text": "we can come up with certain metrics and start measuring or instrumenting our code base this is one example but we",
    "start": "779240",
    "end": "787040"
  },
  {
    "text": "also have different type of systems maybe they are not online request based",
    "start": "787040",
    "end": "792199"
  },
  {
    "text": "systems but like they are batch processors or offline systems or some event processing system then you need to",
    "start": "792199",
    "end": "799279"
  },
  {
    "text": "consider other stuff so everything starts with knowing your basic this purpose of your system maybe I will play",
    "start": "799279",
    "end": "806480"
  },
  {
    "text": "like a devil's advocate here uh Kev and I agree with you but I think the the",
    "start": "806480",
    "end": "812320"
  },
  {
    "text": "misconception General misconception these days is that as a developer you",
    "start": "812320",
    "end": "817399"
  },
  {
    "text": "are giving me some solutions for s for devops for operator that show me some",
    "start": "817399",
    "end": "823959"
  },
  {
    "text": "kind of metrics of slos and you know service availability but I am developer I don't care if service is up or not I",
    "start": "823959",
    "end": "830560"
  },
  {
    "text": "care if my code is faster because I'm paid for making the software better right so how those tools kind of like",
    "start": "830560",
    "end": "837839"
  },
  {
    "text": "you know relate to me by tools you mean like observability signal collecting proof like metric of",
    "start": "837839",
    "end": "844480"
  },
  {
    "text": "hrp request on my SLO dashboard how can I use it for you know efficiency",
    "start": "844480",
    "end": "850519"
  },
  {
    "text": "improvements this is your not star metric right like the most important F",
    "start": "850519",
    "end": "855720"
  },
  {
    "text": "because like think about we are having a website and you are actually serving a website and the most important thing for",
    "start": "855720",
    "end": "862320"
  },
  {
    "text": "your user is like how fast it actually renders because like psychology shows us",
    "start": "862320",
    "end": "868160"
  },
  {
    "text": "like there are some attention spans and they are getting fever like lesser and lesser every day and so you need to be",
    "start": "868160",
    "end": "874519"
  },
  {
    "text": "fast right or even like before that if you are serving that request like with a",
    "start": "874519",
    "end": "881079"
  },
  {
    "text": "success so you need to know that like that's why I always advise to start with",
    "start": "881079",
    "end": "886199"
  },
  {
    "text": "these type of high level metrics but then like let's take latency right HTTP",
    "start": "886199",
    "end": "891560"
  },
  {
    "text": "request latency you're serving this website but then you can drill down like what does this mean for the system like",
    "start": "891560",
    "end": "898519"
  },
  {
    "text": "what contributes to this like latency if you think of an then tracing",
    "start": "898519",
    "end": "903800"
  },
  {
    "text": "observability signal it's a span right in that span you have different spends like different methods or different",
    "start": "903800",
    "end": "910160"
  },
  {
    "text": "components in your system that takes time and now you need to get in there and understand like why it is taking",
    "start": "910160",
    "end": "916279"
  },
  {
    "text": "that much time maybe you are doing a calculation that it's not that efficient in your hot ped or maybe you are",
    "start": "916279",
    "end": "921880"
  },
  {
    "text": "allocating too much memory you need to know about it but it always starts with your high level goal and drilling down",
    "start": "921880",
    "end": "929079"
  },
  {
    "text": "using different observability signals and maybe instrumentation yeah great so",
    "start": "929079",
    "end": "934600"
  },
  {
    "text": "exactly right I was kind of challenging you but like generally yeah I agree you can use the same metric kind of pipeline",
    "start": "934600",
    "end": "941480"
  },
  {
    "text": "so the same client instrumentation go where you are either importing some",
    "start": "941480",
    "end": "946720"
  },
  {
    "text": "library with this instrumentation or you have instrumentation built in maybe prome maybe something else maybe open",
    "start": "946720",
    "end": "952480"
  },
  {
    "text": "telet and you have that built in and the same thing that your SS are using your operators or like you know people who",
    "start": "952480",
    "end": "959440"
  },
  {
    "text": "are running your software maybe you are running that's ideal but sometimes you are not and then as a go developer you",
    "start": "959440",
    "end": "964519"
  },
  {
    "text": "could use and use exactly the same metric for example HP latency as your guidance as your assessment value if you",
    "start": "964519",
    "end": "973000"
  },
  {
    "text": "are improving your code or not so that's kind of like important part of observability slm monitoring here that",
    "start": "973000",
    "end": "980120"
  },
  {
    "text": "kind of can be composed into like something useful for efficiency so say that you've got this set up then and",
    "start": "980120",
    "end": "985279"
  },
  {
    "text": "you've got a good idea of some kind of metric on your code and hopefully what",
    "start": "985279",
    "end": "990759"
  },
  {
    "text": "it's doing in production cuz that's the the thing like having you sort of it might work great on your machine but",
    "start": "990759",
    "end": "996639"
  },
  {
    "text": "once it's running at scale for whatever reason just the way it interacts in ways you just wouldn't expect maybe so",
    "start": "996639",
    "end": "1003880"
  },
  {
    "text": "environments very similar I think it's probably a good advice so say you've got that do you like check that every time",
    "start": "1003880",
    "end": "1009880"
  },
  {
    "text": "you do a PR is that something that you keep an eye on things to see if you've made a difference or do you just do it",
    "start": "1009880",
    "end": "1017199"
  },
  {
    "text": "kind of periodically you'll just have like once a quarter you'll just have like let's do a performance check how do",
    "start": "1017199",
    "end": "1022240"
  },
  {
    "text": "you approach it like we haven't jumped into that but right now I'm working on a",
    "start": "1022240",
    "end": "1027678"
  },
  {
    "text": "continuous profiling tool right so we haven't even uh basically defined the",
    "start": "1027679",
    "end": "1033319"
  },
  {
    "text": "profiling but let's say we Define and profiling is a kind of an observability signal it's an action that you collect",
    "start": "1033319",
    "end": "1040640"
  },
  {
    "text": "the resource usages of your processes that running on your machines right and what is makes it fun is this continuous",
    "start": "1040640",
    "end": "1048480"
  },
  {
    "text": "profiling part right so you are profiling all these processes and then you release a software maybe you scale",
    "start": "1048480",
    "end": "1054720"
  },
  {
    "text": "up you scale down but you always have the snapshots of memory usage or CPU usage in a time time span right and then",
    "start": "1054720",
    "end": "1062960"
  },
  {
    "text": "you can actually check between versions if you actually change something so when",
    "start": "1062960",
    "end": "1068200"
  },
  {
    "text": "you have a continuous signal like that you can actually optimize or like do",
    "start": "1068200",
    "end": "1074120"
  },
  {
    "text": "something about any of these actions right same goes for like metric like you",
    "start": "1074120",
    "end": "1079400"
  },
  {
    "text": "have a latency metric and you can Define some SLO based alert on that and that",
    "start": "1079400",
    "end": "1086480"
  },
  {
    "text": "alerting part actually makes the difference right so all of a sudden you release a version and your latency has",
    "start": "1086480",
    "end": "1093400"
  },
  {
    "text": "spiked and it actually triggered an alert now that you know that like since",
    "start": "1093400",
    "end": "1098799"
  },
  {
    "text": "you put that Alert in there you know that you are actually exceeding your allowed boundaries your error budgets",
    "start": "1098799",
    "end": "1104919"
  },
  {
    "text": "maybe and then you can actually get in there and try to optimize try to do",
    "start": "1104919",
    "end": "1110480"
  },
  {
    "text": "something about that but is the fun part of that right we mentioned the profiling",
    "start": "1110480",
    "end": "1115880"
  },
  {
    "text": "side of that and we mentioned the metric side of that and we mentioned alert right they come all together actually",
    "start": "1115880",
    "end": "1122080"
  },
  {
    "text": "you get the alert you check what's going on with the process down to the like method and function and then you decide",
    "start": "1122080",
    "end": "1129760"
  },
  {
    "text": "to do something about it I think it's great I think you are kind of explaining the production assessment level right so",
    "start": "1129760",
    "end": "1137000"
  },
  {
    "text": "when you are actually you know willing your PR merging Everything deploys You release it to different you know",
    "start": "1137000",
    "end": "1142280"
  },
  {
    "text": "environments and finally it gets you production and that's your assessment that's IDE probably the ideal assessment",
    "start": "1142280",
    "end": "1148400"
  },
  {
    "text": "in terms of kind of how um reliable it is right because that's actual production that's what matters things",
    "start": "1148400",
    "end": "1155000"
  },
  {
    "text": "are not very easy if you maybe distribute the software to different Productions or maybe you know to",
    "start": "1155000",
    "end": "1160720"
  },
  {
    "text": "different customers so probably it varies that's why I think it's very useful to think about this problem the",
    "start": "1160720",
    "end": "1167159"
  },
  {
    "text": "same way as we think about testing about functional testing we also have unit tests that always are running on PR we",
    "start": "1167159",
    "end": "1173679"
  },
  {
    "text": "have integration tests that sometimes are running on PR depends how much you want to pay and there are production",
    "start": "1173679",
    "end": "1179400"
  },
  {
    "text": "tests or load tests maybe and end to end tests there are different kind of levels",
    "start": "1179400",
    "end": "1184480"
  },
  {
    "text": "and no one is saying you should always only Implement unit test and nothing else or only Implement end to end and",
    "start": "1184480",
    "end": "1191000"
  },
  {
    "text": "nothing else there is graduation process where things closer to the code costs",
    "start": "1191000",
    "end": "1196039"
  },
  {
    "text": "less and but it is not always always reliable and then things farther away towards production it's more reliable",
    "start": "1196039",
    "end": "1202640"
  },
  {
    "text": "but kind of sometimes too late because the feedback loop is very very large so this is exactly the same for assessment",
    "start": "1202640",
    "end": "1209159"
  },
  {
    "text": "right you have Micro Benchmark which is kind of a unit test then you have macro benchmarks which is kind of integration",
    "start": "1209159",
    "end": "1214799"
  },
  {
    "text": "end to endend and then you get we have production assessment and the problem is these days ideally we run on every PR",
    "start": "1214799",
    "end": "1221600"
  },
  {
    "text": "micro benchmarks but we don't like because it's still very expensive it's still unreliable so we hope maybe",
    "start": "1221600",
    "end": "1228600"
  },
  {
    "text": "Hardware will gets maybe I don't know cheaper I mean there are some kind of solution that do that sometimes we do that but generally it's not achievable",
    "start": "1228600",
    "end": "1236000"
  },
  {
    "text": "yet what we have in promus for example we have macro benchmarks so we spin up a test cluster with promus server which is",
    "start": "1236000",
    "end": "1243720"
  },
  {
    "text": "kind of like written go like like some time series for metrics right and then we can kind of uh spin up this setup on",
    "start": "1243720",
    "end": "1251000"
  },
  {
    "text": "the pr so we say hey prom test kind of start and then it starts it give you dashboards it give you results and then",
    "start": "1251000",
    "end": "1257679"
  },
  {
    "text": "you can shut down because it cost money for the cncf organizations so they hunt us afterwards but generally you know",
    "start": "1257679",
    "end": "1265240"
  },
  {
    "text": "ideally the space is better and we run everything on PR but that's not the case always right I guess for us we we also",
    "start": "1265240",
    "end": "1270960"
  },
  {
    "text": "have that kind of faceted tools before we cut a release like at graan Labs we",
    "start": "1270960",
    "end": "1276120"
  },
  {
    "text": "usually cut a weekly release and then go through different stages like more the",
    "start": "1276120",
    "end": "1281559"
  },
  {
    "text": "internal tools and then into production and yeah like we would really only alert on on SLO so we would kind of if we",
    "start": "1281559",
    "end": "1290279"
  },
  {
    "text": "think it's worth we would compare like our benchmarking in the PR but there's not an automated way and there's not a a",
    "start": "1290279",
    "end": "1296279"
  },
  {
    "text": "good way of kind of raising a question mark about a PR once yeah things would",
    "start": "1296279",
    "end": "1301520"
  },
  {
    "text": "go out of hand and I think like I was wondering how that works with the the prom bench like do you get a kind of",
    "start": "1301520",
    "end": "1307520"
  },
  {
    "text": "percentage assessment and then the reviewer needs to make a call or is it getting kind of hard rejected in the",
    "start": "1307520",
    "end": "1314279"
  },
  {
    "text": "kind of PR pipeline yeah it's very manual right uh right now because again it's kind of community project so it's",
    "start": "1314279",
    "end": "1320840"
  },
  {
    "text": "not like tied to any production one production kind of environment so it will be hard but it's kind of manual",
    "start": "1320840",
    "end": "1327200"
  },
  {
    "text": "these days but it's good enough right however I think that if you look on the vites project I think it's kind of in go",
    "start": "1327200",
    "end": "1334840"
  },
  {
    "text": "as well and they have amazing page around benchmarks so they do nightly",
    "start": "1334840",
    "end": "1340120"
  },
  {
    "text": "benchmarks like all micro benchmarks the code base so you know go in go benchmarks are kind of built in the",
    "start": "1340120",
    "end": "1346440"
  },
  {
    "text": "micro benchmarks so you can use go test to run your benchmarks and they are very",
    "start": "1346440",
    "end": "1351520"
  },
  {
    "text": "very nice and easy to write and if you have them in the codebase you run a specific go test command it will just",
    "start": "1351520",
    "end": "1357360"
  },
  {
    "text": "run everything and they kind of try to have Hardware so kind of virtual machines which are stable but also by",
    "start": "1357360",
    "end": "1364440"
  },
  {
    "text": "the way like running virtual machines also sometimes unreliable because there are noisy asers the characteristic is",
    "start": "1364440",
    "end": "1369559"
  },
  {
    "text": "different there are so many complexities but sometimes if you run it long enough it can give some data so on their",
    "start": "1369559",
    "end": "1375840"
  },
  {
    "text": "website they having the results or every nightly builds and it's pretty sweet",
    "start": "1375840",
    "end": "1383000"
  },
  {
    "text": "[Applause] [Music]",
    "start": "1383270",
    "end": "1392109"
  },
  {
    "text": "yeah we are go to ship in three 2 1 I'm",
    "start": "1392760",
    "end": "1398039"
  },
  {
    "text": "Garo host of ship it a show with weekly episodes about getting your best ideas",
    "start": "1398039",
    "end": "1403080"
  },
  {
    "text": "into the world and seeing what happens we talk about code Ops infrastructure and the people that make it happen like",
    "start": "1403080",
    "end": "1410039"
  },
  {
    "text": "charity Majors from honeycomb we act like great engineers make great teams and it's exactly the opposite in fact it",
    "start": "1410039",
    "end": "1417279"
  },
  {
    "text": "is great teams that make great engineers and they Farley when the founders of",
    "start": "1417279",
    "end": "1423000"
  },
  {
    "text": "continuous delivery start off assuming that we're wrong rather than assuming that we're right test our ideas try and",
    "start": "1423000",
    "end": "1428760"
  },
  {
    "text": "falsify our ideas those are better ways of doing work and it doesn't really matter what work it is that you're doing",
    "start": "1428760",
    "end": "1434640"
  },
  {
    "text": "that stuff just works better we even experiment ment on our own open- source",
    "start": "1434640",
    "end": "1439720"
  },
  {
    "text": "podcasting platform so that you can see how we Implement specific tools and services within",
    "start": "1439720",
    "end": "1446679"
  },
  {
    "text": "changelog.md knows that hammer really hurts when you strike it on your thumb I'm glad those guys did it I've learned",
    "start": "1455880",
    "end": "1462279"
  },
  {
    "text": "something instead yeah I think that's a very interesting perspective but I I don't see that",
    "start": "1462279",
    "end": "1468440"
  },
  {
    "text": "okay it's an amazing analogy but I'm not sure that applies here listen to an episode that seems interesting or",
    "start": "1468440",
    "end": "1474000"
  },
  {
    "text": "helpful and if you like it subscribe today we'd love to have you with [Music]",
    "start": "1474000",
    "end": "1481080"
  },
  {
    "text": "us I think I'm going to disagree with btek at least partially about testing",
    "start": "1481080",
    "end": "1487240"
  },
  {
    "text": "this stuff so here comes my first unpopular opinion so even though like",
    "start": "1487240",
    "end": "1492520"
  },
  {
    "text": "testing and doing endtoend tests like or synthetic benchmarks on your development machine or like on your CI your",
    "start": "1492520",
    "end": "1499480"
  },
  {
    "text": "development environment is not same with your production environment so I am a big fan on like collecting these metrics",
    "start": "1499480",
    "end": "1507200"
  },
  {
    "text": "on production or like just profiling the actual workload in the production",
    "start": "1507200",
    "end": "1512240"
  },
  {
    "text": "because the CPU the machines the network stack that actually this software runs",
    "start": "1512240",
    "end": "1517720"
  },
  {
    "text": "on is totally different than what you have in the Ci or your in your local machine so if you can do this on a",
    "start": "1517720",
    "end": "1524600"
  },
  {
    "text": "production environment that data is also like the actually Holy Grail right on",
    "start": "1524600",
    "end": "1529799"
  },
  {
    "text": "top of that like one other thing is with the prom bench or with promethus project",
    "start": "1529799",
    "end": "1534960"
  },
  {
    "text": "right we actually know what is the hot pad so that's why we have those like benchmarking tools and we know what to",
    "start": "1534960",
    "end": "1541600"
  },
  {
    "text": "optimize and we know beforeand that like what shouldn't go out of range right so",
    "start": "1541600",
    "end": "1547000"
  },
  {
    "text": "that we have that inci so it's really helpful but most of the other projects you don't have this information and you",
    "start": "1547000",
    "end": "1553480"
  },
  {
    "text": "actually don't know what to optimize so there's a lot of unknown unknowns so for those type of things I actually doing",
    "start": "1553480",
    "end": "1559720"
  },
  {
    "text": "this on production with certain metrics or like certain facilities to collect this data is more valuable to me yeah",
    "start": "1559720",
    "end": "1566919"
  },
  {
    "text": "could you have like a budget so that you say like we're going to add features we're going to add extra work so we know",
    "start": "1566919",
    "end": "1573080"
  },
  {
    "text": "that's going to slow it down but we want to set a budget for how much we could do that and something like that those kinds",
    "start": "1573080",
    "end": "1579760"
  },
  {
    "text": "of techniques does that work I think I'm always a fan of having maybe two feature",
    "start": "1579760",
    "end": "1584960"
  },
  {
    "text": "Sprints and then one Tech clean up maybe bring those new inefficiencies or newly",
    "start": "1584960",
    "end": "1591960"
  },
  {
    "text": "identified yeah hot paths maybe fix them make them more efficient like I think",
    "start": "1591960",
    "end": "1597120"
  },
  {
    "text": "that seems to work quite well I guess like and we also notice um in the project if we run too many of the",
    "start": "1597120",
    "end": "1603640"
  },
  {
    "text": "feature Sprints then like I guess we're going to pay in terms of getting a bit more red graph when we when we look at",
    "start": "1603640",
    "end": "1610440"
  },
  {
    "text": "our SLO budgets yeah that's quite nice because you can kind of free yourself",
    "start": "1610440",
    "end": "1615720"
  },
  {
    "text": "and focus on the features and then you know that at some point you'll then go back and have that dedicated time to do",
    "start": "1615720",
    "end": "1622240"
  },
  {
    "text": "the pay off the tech debt or just see what the impact is yeah of you don't know how a particular feature is used um",
    "start": "1622240",
    "end": "1629039"
  },
  {
    "text": "so in I'm now working on continuous profiling as well on flare but before on Loki we implemented deletions and we had",
    "start": "1629039",
    "end": "1636720"
  },
  {
    "text": "an idea what kind of uh requests to expect but like I guess within the first month we hit very interesting request in",
    "start": "1636720",
    "end": "1644520"
  },
  {
    "text": "terms of their size and just the number of them that we kind of yeah didn't kind",
    "start": "1644520",
    "end": "1649919"
  },
  {
    "text": "of optimize for and that then required another Sprint off",
    "start": "1649919",
    "end": "1655000"
  },
  {
    "text": "for making actually scale to that level was it just that people wanted to use a",
    "start": "1655000",
    "end": "1660159"
  },
  {
    "text": "new feature so they're like right what can we delete yeah let's do it cuz I'm like that when I get a new phone I'm like yeah I'm using all these features",
    "start": "1660159",
    "end": "1666559"
  },
  {
    "text": "because they're new and I've you know it's expensive phone so yeah let's delete every second line off your logs",
    "start": "1666559",
    "end": "1673559"
  },
  {
    "text": "yeah why not he you have your bill yeah I think it's always kind of depends on case but",
    "start": "1673559",
    "end": "1680480"
  },
  {
    "text": "I wonder you know let's say you have those weeks for the future development and then you deploy those features and",
    "start": "1680480",
    "end": "1687279"
  },
  {
    "text": "SLO is or like some kind of like this measurement assessment is threat what do you do wait until the tech dep or you",
    "start": "1687279",
    "end": "1693919"
  },
  {
    "text": "revert the feature and work on optimizations this is where this things kind of is tricky right what do you do",
    "start": "1693919",
    "end": "1699919"
  },
  {
    "text": "though Christian yeah I guess like we look at our budget and I guess as long as we are within the budget I guess we can kind of push it down the line I",
    "start": "1699919",
    "end": "1706559"
  },
  {
    "text": "would say but yeah I think if we kind of uh exceeded our era budget then this definitely becomes like not a P1 but",
    "start": "1706559",
    "end": "1713200"
  },
  {
    "text": "like definitely like will kind of drain out all the feature work yeah makes sense makes sense yeah definitely and",
    "start": "1713200",
    "end": "1718480"
  },
  {
    "text": "it's like kind of like data driven approach where you kind of like express everything in number like hey how much I",
    "start": "1718480",
    "end": "1725519"
  },
  {
    "text": "can sacrifice and however the problem is usually like people don't set the goals",
    "start": "1725519",
    "end": "1730799"
  },
  {
    "text": "don't set the performance requirements or efficiency requirements and for maybe service like yours you know you have",
    "start": "1730799",
    "end": "1736840"
  },
  {
    "text": "some Laten but what about the memory used or other cost like CPUs you know like it's so",
    "start": "1736840",
    "end": "1742960"
  },
  {
    "text": "hard sometimes and you know we don't always do it even red hat is like you have the feature but what's your",
    "start": "1742960",
    "end": "1748480"
  },
  {
    "text": "requirement what's your goal like are you happy with spending thousands or it should be $2,000 per month or it should",
    "start": "1748480",
    "end": "1755559"
  },
  {
    "text": "be 10,000 or you know it's kind of like ideally you have the goal because you can calculate those budgets then both on",
    "start": "1755559",
    "end": "1761480"
  },
  {
    "text": "latency and resources which is cost right so I think that's the trouble that many Engineers have it's really hard to",
    "start": "1761480",
    "end": "1767080"
  },
  {
    "text": "set the goals because it sets you for failure that's kind of like psychology behind that I think we should do it more",
    "start": "1767080",
    "end": "1773440"
  },
  {
    "text": "I think we should set more goals to know our budgets essentially right yeah I think it doesn't help that the billing",
    "start": "1773440",
    "end": "1778960"
  },
  {
    "text": "cycle for example from cloud providers is not really matching up maybe with your kind of release Cycles like they're",
    "start": "1778960",
    "end": "1784799"
  },
  {
    "text": "often delayed or kind of over longer periods and so like we definitely kind of got that with a bit of delay and then",
    "start": "1784799",
    "end": "1791039"
  },
  {
    "text": "was even more important because I guess it aggregated over the time frame yeah that's a CO cool problem to to to keep",
    "start": "1791039",
    "end": "1797600"
  },
  {
    "text": "in mind yeah I guess there are tools like open cost or I kind of like even cncf tools that kind of calculates",
    "start": "1797600",
    "end": "1803640"
  },
  {
    "text": "gathers you know some observability about your projects and even go applications and then you kind of try to",
    "start": "1803640",
    "end": "1809760"
  },
  {
    "text": "calculate the cost so yeah maybe that will help but yeah generally hard our problem to solve yeah so that's really",
    "start": "1809760",
    "end": "1816159"
  },
  {
    "text": "interesting Kamal you mentioned earlier like really the best way to get this data is to do it in production is there",
    "start": "1816159",
    "end": "1822279"
  },
  {
    "text": "a cost to that because you're doing extra work to get that observability data does that itself not slow things",
    "start": "1822279",
    "end": "1830440"
  },
  {
    "text": "down of course there's a cost attached to that there is no free lunch right so",
    "start": "1830440",
    "end": "1836000"
  },
  {
    "text": "that's why when it comes to observability you actually or at least I",
    "start": "1836000",
    "end": "1841080"
  },
  {
    "text": "tend to start with metrics right that's the low cost observability signal that you can collect from your systems",
    "start": "1841080",
    "end": "1847880"
  },
  {
    "text": "because it's just an aggregation and if you are actually monitoring your system",
    "start": "1847880",
    "end": "1853440"
  },
  {
    "text": "using Prometheus it's just in certain scraping intervals you just just like get your aggregated metrics and just",
    "start": "1853440",
    "end": "1860200"
  },
  {
    "text": "store them and you build your alerts or dashboards on top of that right this",
    "start": "1860200",
    "end": "1865360"
  },
  {
    "text": "like as far as I seen in most of the cases our metrics are super useful and",
    "start": "1865360",
    "end": "1870720"
  },
  {
    "text": "Sol does the job right but the most of the cases then there's this like in",
    "start": "1870720",
    "end": "1876279"
  },
  {
    "text": "depth situation maybe you need more information about your system maybe that's where the logs comes in or any",
    "start": "1876279",
    "end": "1883120"
  },
  {
    "text": "Eventing system that you collect from your system comes in and you check what what's going on with the events right if",
    "start": "1883120",
    "end": "1889480"
  },
  {
    "text": "you have tracing data this is really nice because then right now you can",
    "start": "1889480",
    "end": "1894760"
  },
  {
    "text": "actually propagate your context between other services or other context boundaries and you can have a like a",
    "start": "1894760",
    "end": "1901960"
  },
  {
    "text": "broader picture of the system this is another observability signal but again there's another cost attached to that",
    "start": "1901960",
    "end": "1908279"
  },
  {
    "text": "first of all it's really expensive to store the tracing data and the other cost is you actually need to instrument",
    "start": "1908279",
    "end": "1915159"
  },
  {
    "text": "your code right and it's like tracing instrumentation tend to be a little harder when when you compare to the",
    "start": "1915159",
    "end": "1922240"
  },
  {
    "text": "metrics because you need to go in there and you actually semantically determine which function boundary that you are",
    "start": "1922240",
    "end": "1928519"
  },
  {
    "text": "crossing and you need to just propagate that context or you need to do this all the systems that you have in your",
    "start": "1928519",
    "end": "1934880"
  },
  {
    "text": "architecture right but like metrics in that sense it's easier and we know",
    "start": "1934880",
    "end": "1939919"
  },
  {
    "text": "logging Everyone likes to omit the logs even though I find them super noisy and",
    "start": "1939919",
    "end": "1945200"
  },
  {
    "text": "it's like really hard to take actions against them when you have",
    "start": "1945200",
    "end": "1950399"
  },
  {
    "text": "uh hundreds of instances of the same process right were you the one deleting them then all that time I tend to just",
    "start": "1950399",
    "end": "1957240"
  },
  {
    "text": "not store them even though I really like writing log lines because while developing it's a single process I know",
    "start": "1957240",
    "end": "1963880"
  },
  {
    "text": "what's going on and it helps me a lot and then on top of that you have profiling right and it's really easy to",
    "start": "1963880",
    "end": "1971960"
  },
  {
    "text": "profile your applications using go but profiling is specific to Resource users",
    "start": "1971960",
    "end": "1977240"
  },
  {
    "text": "just right to actually debug and introspect and understand what's going on maybe troubleshoot a problem you",
    "start": "1977240",
    "end": "1984240"
  },
  {
    "text": "actually need to combine all of them right because every signal has its own use case yeah something that's you cover",
    "start": "1984240",
    "end": "1991399"
  },
  {
    "text": "in your book BK and by the way congrats on the book thanks I don't get a kickback from it so I can just say is",
    "start": "1991399",
    "end": "1997799"
  },
  {
    "text": "available now so if you want to learn about writing efficient go get it in",
    "start": "1997799",
    "end": "2003200"
  },
  {
    "text": "your book I know that you mention this tradeoff between features and performance and we've kind of talked",
    "start": "2003200",
    "end": "2009080"
  },
  {
    "text": "about this when you sort of build up Tech debt as you go along adding features does this argument happen a lot",
    "start": "2009080",
    "end": "2015600"
  },
  {
    "text": "where you're making the case to not have a feature because of the cost it's going to have and then what about like product",
    "start": "2015600",
    "end": "2023080"
  },
  {
    "text": "people or sales people or whatever else are working like obviously incentivized really for the opposite thing maybe How",
    "start": "2023080",
    "end": "2029720"
  },
  {
    "text": "does it go down yeah totally it's kind of everyday everyday question almost",
    "start": "2029720",
    "end": "2034760"
  },
  {
    "text": "right like if we should invest inv in some amazing feature and especially",
    "start": "2034760",
    "end": "2041360"
  },
  {
    "text": "deletion is interesting one right because we usually at least in our ecosystem of like prus and uh you know",
    "start": "2041360",
    "end": "2049480"
  },
  {
    "text": "Thanos project as well as mimir and cortex and flare even and you know all",
    "start": "2049480",
    "end": "2055158"
  },
  {
    "text": "those kind of like distributed systems or not distributed like time series database or sort of kind of like",
    "start": "2055159",
    "end": "2060760"
  },
  {
    "text": "storages for for different observability data we kind of store it in immutable storage so once you kind of like try to",
    "start": "2060760",
    "end": "2067839"
  },
  {
    "text": "delete something it can cause problems so and it can cause cost right so that's",
    "start": "2067839",
    "end": "2073800"
  },
  {
    "text": "kind of like the question when we should add how much of the flexibility in deletion we should add and sort of those",
    "start": "2073800",
    "end": "2080000"
  },
  {
    "text": "stories and it really really depends and kind of like what really helps is to",
    "start": "2080000",
    "end": "2085158"
  },
  {
    "text": "have this budget of like how much cost you you want to kind of add to the",
    "start": "2085159",
    "end": "2090200"
  },
  {
    "text": "system and you know even like developing a feature is a cost like spending engineering time and and testing and",
    "start": "2090200",
    "end": "2096878"
  },
  {
    "text": "maintaining it I really kind of try to recommend using the same pattern for",
    "start": "2096879",
    "end": "2101960"
  },
  {
    "text": "like uh discussing you know how much you want to invest in kind of efficiency of",
    "start": "2101960",
    "end": "2107720"
  },
  {
    "text": "something if we should kind of make it faster or not or we should maybe disable some feature because it was kind of",
    "start": "2107720",
    "end": "2113400"
  },
  {
    "text": "slowing the system this is exactly the same discussion as you would have should you add some feature right because again",
    "start": "2113400",
    "end": "2119720"
  },
  {
    "text": "like it just what thinking about efficiency it again it's still kind of some cost it will be some cost of like",
    "start": "2119720",
    "end": "2125280"
  },
  {
    "text": "you know maintaining and so on so everything ideally ideally in Ideal World you know the cost of it so you",
    "start": "2125280",
    "end": "2131480"
  },
  {
    "text": "know if delici is kind of um how much deletion request will cost you know kind",
    "start": "2131480",
    "end": "2138079"
  },
  {
    "text": "of roughly CPU time and and if you have the capacity in your cluster so this should be kind of like the core",
    "start": "2138079",
    "end": "2144640"
  },
  {
    "text": "discussion to have and if users are willing to pay for that sure but if for example there is no you want to kind of",
    "start": "2144640",
    "end": "2150880"
  },
  {
    "text": "minimize the cost maybe you should disable this feature it really depends on what what user you are in and what",
    "start": "2150880",
    "end": "2156800"
  },
  {
    "text": "what project this is in but generally yeah speaking about like data numbers is kind of helpful and treating everything",
    "start": "2156800",
    "end": "2163200"
  },
  {
    "text": "as the whole package right not just features as readability and maybe complexity of the code or API or",
    "start": "2163200",
    "end": "2169680"
  },
  {
    "text": "configuration but also add efficiency on top like roughly the cost essentially just helps to make the decision right",
    "start": "2169680",
    "end": "2176520"
  },
  {
    "text": "yeah and I guess it's like what the Business Leaders in the end care about I guess they they want to kind of maintain their margin and the closer I guess to",
    "start": "2176520",
    "end": "2183440"
  },
  {
    "text": "those numbers you you can get from your system from your production system like I think the easier you will be able",
    "start": "2183440",
    "end": "2189280"
  },
  {
    "text": "to kind of flag issues there I think like if if like for example that deletion feature is for free and you",
    "start": "2189280",
    "end": "2196760"
  },
  {
    "text": "actually ramp up a lot of costs I guess that that will kind of Target your whole um margin as a product and like yeah I",
    "start": "2196760",
    "end": "2203760"
  },
  {
    "text": "guess you want to know about that before it really yeah yeah turns it down into",
    "start": "2203760",
    "end": "2209160"
  },
  {
    "text": "negative yeah the best performance Improvement I remember I ever did in my whole career I did I made something",
    "start": "2209160",
    "end": "2215560"
  },
  {
    "text": "about a thousand times Faster by removing a a time do sleep that I'd left",
    "start": "2215560",
    "end": "2220839"
  },
  {
    "text": "in there by mistake they were thrilled they were like this is really fast now I look like",
    "start": "2220839",
    "end": "2227359"
  },
  {
    "text": "a hero instead I was of course an idiot in the beginning so do you recommend",
    "start": "2227359",
    "end": "2233200"
  },
  {
    "text": "that but some time sleeps in early and then you can take them out over time is that maybe it's a genius move right you",
    "start": "2233200",
    "end": "2239280"
  },
  {
    "text": "just put them in and then remove Tada T an improvement yeah I mean this is not a",
    "start": "2239280",
    "end": "2245560"
  },
  {
    "text": "joke like literally I was hearing some stories from AWS or some other service",
    "start": "2245560",
    "end": "2250640"
  },
  {
    "text": "and I would need to dig it up like what the source of it but generally they were having a service and they added sleep to",
    "start": "2250640",
    "end": "2256880"
  },
  {
    "text": "the service to not give too fast expectations for people right because",
    "start": "2256880",
    "end": "2262880"
  },
  {
    "text": "they knew they want to implement additional complexity additional features imagine they were you know doing for example like this database and",
    "start": "2262880",
    "end": "2268880"
  },
  {
    "text": "they want to add deletion later on but they didn't yet so that's why it's so fast but they know they will add it so",
    "start": "2268880",
    "end": "2274480"
  },
  {
    "text": "they added sleep so once they added this deletion or some other feature it get so slow they have to remove this sleep and",
    "start": "2274480",
    "end": "2280720"
  },
  {
    "text": "now everyone is happy so literally those things are recommended honestly because",
    "start": "2280720",
    "end": "2285800"
  },
  {
    "text": "if you are kind of like again this is again this budget and and goal thing if",
    "start": "2285800",
    "end": "2290920"
  },
  {
    "text": "you are agreeing with your customer that your service is you know responding under one second having it respond in",
    "start": "2290920",
    "end": "2298359"
  },
  {
    "text": "you know 100 milliseconds if they PID for one second sometimes it's not smart because people kind of depend on it",
    "start": "2298359",
    "end": "2305040"
  },
  {
    "text": "forever even though you kind of agreed on one second so those kind of like slowdowns on purpose they kind of make",
    "start": "2305040",
    "end": "2311240"
  },
  {
    "text": "sense sometimes right yeah but isn't that the kind of thing that it's the kind of thing that gets leaked at some",
    "start": "2311240",
    "end": "2316400"
  },
  {
    "text": "point and then there's a big outrage like and I don't know if this story is true but I heard a story of like uber",
    "start": "2316400",
    "end": "2321560"
  },
  {
    "text": "checking your battery on your phone and charging you more if your battery is really low I don't know if that's true",
    "start": "2321560",
    "end": "2327000"
  },
  {
    "text": "or not but it's a scandal imagine if they said yeah this service is",
    "start": "2327000",
    "end": "2332359"
  },
  {
    "text": "deliberately slow I mean yeah let's not go there but thews story I think it's",
    "start": "2332359",
    "end": "2338240"
  },
  {
    "text": "fair like you paid for one second and that's fair like they want to make this project sustainable but what you mention",
    "start": "2338240",
    "end": "2344040"
  },
  {
    "text": "is kind of like maybe less legal or less clear but there are things where you know um how it's called like when",
    "start": "2344040",
    "end": "2352200"
  },
  {
    "text": "companies want to you to buy a new phone and they will put time sleep into your keyboard so it's kind of slow on purpose",
    "start": "2352200",
    "end": "2358920"
  },
  {
    "text": "like things will happen like that so yeah that's unfortunate um no we are to improve efficiency in this podcast not",
    "start": "2358920",
    "end": "2365560"
  },
  {
    "text": "um problems of efficiency yeah but I guess it's legit if it doesn't exceed your",
    "start": "2365560",
    "end": "2371280"
  },
  {
    "text": "error budget or if it's in your like service level agreement so you can like read the buer levels or put a sleep in",
    "start": "2371280",
    "end": "2378319"
  },
  {
    "text": "there and slow things down yeah the problem is like now you are buying a phone and you have a list of efficiency",
    "start": "2378319",
    "end": "2384400"
  },
  {
    "text": "goals like your keyboard will be always um you know swiping from I mean going from bottom uh in half a second and you",
    "start": "2384400",
    "end": "2392200"
  },
  {
    "text": "know it's the same with slos like how much Gran are those kind of numbers can be it won't be granular to your local",
    "start": "2392200",
    "end": "2399480"
  },
  {
    "text": "library method in goang right it will be kind of like very high level so does a",
    "start": "2399480",
    "end": "2404560"
  },
  {
    "text": "problem of the requirements really and that's why every team should have some rough numbers because you are developing",
    "start": "2404560",
    "end": "2409839"
  },
  {
    "text": "your library and you know the SLO is impacted is it your fault is it somebody else's fault like how fast I should be",
    "start": "2409839",
    "end": "2416680"
  },
  {
    "text": "if one second is the goal then your program is doing many things like my library and my team is developing like",
    "start": "2416680",
    "end": "2423079"
  },
  {
    "text": "should it be you know how much of this second right so those not easy easy question but again with things like",
    "start": "2423079",
    "end": "2428839"
  },
  {
    "text": "metrics with things like profiling you could uh yeah kind of find this number easier yeah another valid use case for",
    "start": "2428839",
    "end": "2435000"
  },
  {
    "text": "sleeping in code I've seen is literally to add a random sleep to sort of Jitter requests around as well and I think that",
    "start": "2435000",
    "end": "2442040"
  },
  {
    "text": "kind of makes sense cuz then it's it's about you're really helping and as long as let you say it's within the budget",
    "start": "2442040",
    "end": "2447599"
  },
  {
    "text": "maybe it's [Music]",
    "start": "2447599",
    "end": "2452520"
  },
  {
    "text": "okay so how does go compare to other",
    "start": "2455319",
    "end": "2461599"
  },
  {
    "text": "languages and other Technologies when it comes to observability profiling and being able to actually introspect things",
    "start": "2461599",
    "end": "2469000"
  },
  {
    "text": "that's going on inside the programs is it good is it are there good things and bad things anything you wish should",
    "start": "2469000",
    "end": "2474160"
  },
  {
    "text": "change something you love Christian what do you reckon so I generally generally would say it comes with batteries",
    "start": "2474160",
    "end": "2480560"
  },
  {
    "text": "included so I think you compared to other languages when you install like the the Go version that is the the most",
    "start": "2480560",
    "end": "2488480"
  },
  {
    "text": "recent one like everything is already on your machine like you have basically",
    "start": "2488480",
    "end": "2493640"
  },
  {
    "text": "like the the runtime already kind of takes care for example of the profiling",
    "start": "2493640",
    "end": "2499680"
  },
  {
    "text": "and you basically just need to tell it to do it for your particular either mini",
    "start": "2499680",
    "end": "2504880"
  },
  {
    "text": "Benchmark I think in all languages you often rely on some external tooling or kind of intercepting somewhere and yeah",
    "start": "2504880",
    "end": "2512520"
  },
  {
    "text": "I guess that that makes it kind of available for any program build on top",
    "start": "2512520",
    "end": "2517560"
  },
  {
    "text": "of go or build with go and yeah like just sets a certain standard I would say I guess I can jump in here like we",
    "start": "2517560",
    "end": "2525040"
  },
  {
    "text": "mentioned the signals right for example one of those signals are metrics and BK",
    "start": "2525040",
    "end": "2530160"
  },
  {
    "text": "and I we maintain promethus client goang Library which is one of the first Prometheus libraries right surprised",
    "start": "2530160",
    "end": "2536720"
  },
  {
    "text": "because Prometheus written in goang good choice so from the beginning the support",
    "start": "2536720",
    "end": "2541800"
  },
  {
    "text": "for metrics for goal was like a first class season right on on top of that",
    "start": "2541800",
    "end": "2546960"
  },
  {
    "text": "goal runtime itself also provides facilities to actually make your",
    "start": "2546960",
    "end": "2552640"
  },
  {
    "text": "programs are more intros spectable or observable right one of them is profilers and go from the beginning",
    "start": "2552640",
    "end": "2560040"
  },
  {
    "text": "actually have prpr which is a project from go it uh Google itself and it's",
    "start": "2560040",
    "end": "2566040"
  },
  {
    "text": "embedded in the runtime itself and you can actually expose this profiling data pretty easily you can actually write and",
    "start": "2566040",
    "end": "2573359"
  },
  {
    "text": "when you run your tests with just addition of certain Flex you can actually dump CPU profiles memory",
    "start": "2573359",
    "end": "2579440"
  },
  {
    "text": "profiles or you you can just like add a package and add an endpoint and then you can expose a profiling peov endpoint and",
    "start": "2579440",
    "end": "2586839"
  },
  {
    "text": "then peov can scrape and collect profiling for that this was there from the beginning so like profiling go is",
    "start": "2586839",
    "end": "2594359"
  },
  {
    "text": "kind of built in profiling in mind we also mention metrics and one other thing",
    "start": "2594359",
    "end": "2599720"
  },
  {
    "text": "that we can mention there is a ongoing PR and a discussion around structural logging for example go has a standard",
    "start": "2599720",
    "end": "2607319"
  },
  {
    "text": "logging library but now they're trying to improve that and there are certain like controversial opinions around that",
    "start": "2607319",
    "end": "2613520"
  },
  {
    "text": "but still like I think as a community go always thinks about observability and",
    "start": "2613520",
    "end": "2619240"
  },
  {
    "text": "how to make the programs more observable more intros spectable so it sounds",
    "start": "2619240",
    "end": "2624400"
  },
  {
    "text": "pretty good then are there any downsides anything you wish it did differently kind of I will jump again I super",
    "start": "2624400",
    "end": "2632280"
  },
  {
    "text": "passionate about like profiling right go itself has a profiler built-in and you",
    "start": "2632280",
    "end": "2638160"
  },
  {
    "text": "can actually expose certain types of profiles out of the box right and",
    "start": "2638160",
    "end": "2644280"
  },
  {
    "text": "they're super useful but the approach that you have with the go for example",
    "start": "2644280",
    "end": "2650520"
  },
  {
    "text": "it's an in base profiler right and you are using certain operating system",
    "start": "2650520",
    "end": "2656400"
  },
  {
    "text": "facilities and I'm talking specifically about Linux in here you need to set ey timer CIS call and then you need",
    "start": "2656400",
    "end": "2663720"
  },
  {
    "text": "register a a call and then operating system itself is sending you some intrs",
    "start": "2663720",
    "end": "2669880"
  },
  {
    "text": "and in those ints you actually dump the stack of your process itself it's",
    "start": "2669880",
    "end": "2675280"
  },
  {
    "text": "actually you are changing things a little bit when you want to observe the system itself so I think this is a",
    "start": "2675280",
    "end": "2683119"
  },
  {
    "text": "downside and right now with the Improvement of our our technology in different parts of the stack you can",
    "start": "2683119",
    "end": "2689720"
  },
  {
    "text": "actually collect these profiles without having paying this cost attached to this",
    "start": "2689720",
    "end": "2695960"
  },
  {
    "text": "but I guess you could turn off those profiles those native profiles if you are a user of ebpf or some other other",
    "start": "2695960",
    "end": "2702599"
  },
  {
    "text": "solution that you know gives you those information from other sources I guess",
    "start": "2702599",
    "end": "2708160"
  },
  {
    "text": "it's not turn are you able to turn it off isn't that the solution you can definitely turn it off but I already",
    "start": "2708160",
    "end": "2713839"
  },
  {
    "text": "told you that I'm a big fan of like doing things in production right I want to profile my applications on production",
    "start": "2713839",
    "end": "2719400"
  },
  {
    "text": "so I'm always thinking about in that case right how can I actually profile this process in production without",
    "start": "2719400",
    "end": "2725240"
  },
  {
    "text": "paying any cost yeah I guess kind of like you are",
    "start": "2725240",
    "end": "2730359"
  },
  {
    "text": "you know you are profiling on production you need profiling for production use so that's your production so that's the",
    "start": "2730359",
    "end": "2735960"
  },
  {
    "text": "cost you are paying and then you kind of account for that isn't but yeah I know what you mean like the more it costs",
    "start": "2735960",
    "end": "2743040"
  },
  {
    "text": "your observability stack can sometimes cost more than your compute power on normal application so this is like very",
    "start": "2743040",
    "end": "2749240"
  },
  {
    "text": "you need to be very careful what signals you are deriving observability signals you are kind of getting out your",
    "start": "2749240",
    "end": "2754440"
  },
  {
    "text": "application because you can get crazy here so yeah things like metrics and profiles are my favorite ones for like",
    "start": "2754440",
    "end": "2761280"
  },
  {
    "text": "efficiency you can make them kind of cheap enough for it to be uh profitable still but um I know your point and and",
    "start": "2761280",
    "end": "2768800"
  },
  {
    "text": "you know all those kind of things that are happening in the profilers either moving it to Kernel or kind of like in a",
    "start": "2768800",
    "end": "2775599"
  },
  {
    "text": "go runtime making them kind of like cheaper to run more accurate in the same time are amazing things and you know in",
    "start": "2775599",
    "end": "2782240"
  },
  {
    "text": "every go release we have some improvements of that so it's pretty sweet yeah maybe we should chat a little",
    "start": "2782240",
    "end": "2787680"
  },
  {
    "text": "bit more about ebpf this is something that I see a lot and I see people",
    "start": "2787680",
    "end": "2792720"
  },
  {
    "text": "getting quite excited about it Liz rice I think has an ebpf book and it's called",
    "start": "2792720",
    "end": "2800960"
  },
  {
    "text": "it's runtime security I think wasn't it something like that yeah and you know it was on security and kind of like that",
    "start": "2800960",
    "end": "2807319"
  },
  {
    "text": "was kind of like the main maybe hype for for ebpf but definitely it's used much",
    "start": "2807319",
    "end": "2812800"
  },
  {
    "text": "more there is another book I think what is ebpf if I'm not mistaken yeah so",
    "start": "2812800",
    "end": "2818160"
  },
  {
    "text": "that's also the first Google result I found but well there's definitely a talk we'll find out and put this in the show",
    "start": "2818160",
    "end": "2826119"
  },
  {
    "text": "notes but what is ebpf what actually is it so I guess I kind of eluded that this",
    "start": "2826119",
    "end": "2832200"
  },
  {
    "text": "is the different like the ne solution in the different part of the stack right ebpf is actually yeah part is actually",
    "start": "2832200",
    "end": "2840280"
  },
  {
    "text": "showing us the book so we will let the link I guess so ebpf is a new techn",
    "start": "2840280",
    "end": "2845880"
  },
  {
    "text": "ology in the kernel space it actually invented as uh filtering certain packages but the acronym became a",
    "start": "2845880",
    "end": "2853200"
  },
  {
    "text": "technology itself basically it's a virtual machine and a verifier that",
    "start": "2853200",
    "end": "2858640"
  },
  {
    "text": "attach to your kernel and you write your C programs or you can also write the programs in Rust and you can Target this",
    "start": "2858640",
    "end": "2866119"
  },
  {
    "text": "virtual machine and then konel can load these programs in your run time when the",
    "start": "2866119",
    "end": "2871680"
  },
  {
    "text": "program is run so what it helps it actually really opens up a lot of",
    "start": "2871680",
    "end": "2877480"
  },
  {
    "text": "possibilities for absorbability tooling security tooling or network tooling since our concern is observability",
    "start": "2877480",
    "end": "2885000"
  },
  {
    "text": "tooling with BPF there are subsystems in Linux right one of them is perf which is",
    "start": "2885000",
    "end": "2891160"
  },
  {
    "text": "for collecting certain Hardware measurements from your Hardware from",
    "start": "2891160",
    "end": "2896319"
  },
  {
    "text": "your horse machine right using perf sub system you can subscribe to the perf events and using those perf events you",
    "start": "2896319",
    "end": "2903079"
  },
  {
    "text": "can actually capture the stack Trac of your running processes that is actually",
    "start": "2903079",
    "end": "2909280"
  },
  {
    "text": "like then you don't need to actually register something but you just need to subscribe to this perf event and you can",
    "start": "2909280",
    "end": "2914920"
  },
  {
    "text": "Aggregate and this happens outside the process right this happens in the kernel space so it doesn't actually change",
    "start": "2914920",
    "end": "2921319"
  },
  {
    "text": "what's going on in your program itself we cannot say that this there is no cost of course there's a cost of course it's",
    "start": "2921319",
    "end": "2928319"
  },
  {
    "text": "changing stuff because you are running some program in your CPU but it's compared to what you get from in trap",
    "start": "2928319",
    "end": "2934720"
  },
  {
    "text": "Bas profile fers this is so minimal even negligible are you excited about",
    "start": "2934720",
    "end": "2940240"
  },
  {
    "text": "abpf I am totally excited I'm going crazy about it like I'm also working as",
    "start": "2940240",
    "end": "2946880"
  },
  {
    "text": "like a promeets maintainer and mostly working as for client goang right it's an instrumentation library and recently",
    "start": "2946880",
    "end": "2954640"
  },
  {
    "text": "I gave a talk in Prometheus days and I was focusing on like how we can do stuff",
    "start": "2954640",
    "end": "2959720"
  },
  {
    "text": "using ebpf without instrumenting the code right and mixing and meshing this time those things and on top of that I'm",
    "start": "2959720",
    "end": "2967160"
  },
  {
    "text": "helping to build an open source continuous profiling project especially for go it's called parka and like we are",
    "start": "2967160",
    "end": "2973839"
  },
  {
    "text": "using ebpf to actually profile the processes so I'm all sold out I don't",
    "start": "2973839",
    "end": "2979160"
  },
  {
    "text": "know yeah you're all in I'm all in I think is going to be a popular opinion",
    "start": "2979160",
    "end": "2985599"
  },
  {
    "text": "but yeah fear not it wouldn't be go time if we didn't explore your unpopular",
    "start": "2985599",
    "end": "2991450"
  },
  {
    "text": "[Music] opinions unpop",
    "start": "2991450",
    "end": "2996880"
  },
  {
    "text": "you I actually think should probably [Music]",
    "start": "2996880",
    "end": "3002250"
  },
  {
    "text": "[Music] leave I promised last time that I would",
    "start": "3006310",
    "end": "3012559"
  },
  {
    "text": "kick us off because I forgot mine and I've brought two I've brought a serious one and a very serious one and my very",
    "start": "3012559",
    "end": "3020920"
  },
  {
    "text": "serious one is I think from now on the past tense of screenshot sh should be",
    "start": "3020920",
    "end": "3026960"
  },
  {
    "text": "screenshot so we should say like oh did you send that thing to Bobby booksmith",
    "start": "3026960",
    "end": "3032559"
  },
  {
    "text": "yeah a screenshot it to him that kind of thing if you've got no objections we can probably sign that into law now and my",
    "start": "3032559",
    "end": "3039200"
  },
  {
    "text": "other one was the optional second return arguments that you sometimes have in go like when you're checking a map or doing",
    "start": "3039200",
    "end": "3045799"
  },
  {
    "text": "typ of sessions I don't think they should be optional I think you should either have to explicitly use an",
    "start": "3045799",
    "end": "3051040"
  },
  {
    "text": "underscore to say I'm ignoring this or or you should use it because I just",
    "start": "3051040",
    "end": "3056119"
  },
  {
    "text": "don't think you should ever not use it basically I don't know if they'll be popular or unpopular but we will find",
    "start": "3056119",
    "end": "3063599"
  },
  {
    "text": "out don't forget we we test these on Twitter at gotime FM so you can vote on",
    "start": "3063599",
    "end": "3069160"
  },
  {
    "text": "a poll and decide whether this is indeed popular or not anybody else got popular",
    "start": "3069160",
    "end": "3075240"
  },
  {
    "text": "and unpopular opinions yeah I can do that so my unpopular opinion is that if you see in",
    "start": "3075240",
    "end": "3083760"
  },
  {
    "text": "some software if I see it's software three extremely generic abstractions and",
    "start": "3083760",
    "end": "3089000"
  },
  {
    "text": "they usually are together things like input processor and output Source function exporters collector processor",
    "start": "3089000",
    "end": "3096359"
  },
  {
    "text": "Publishers in most cases those mean troubles that's my opinion right if I",
    "start": "3096359",
    "end": "3101760"
  },
  {
    "text": "see this I'm running in a of different direction or try to find a replacement software and I might be kind of like um",
    "start": "3101760",
    "end": "3110440"
  },
  {
    "text": "exaggerating but one kind of example is like generic data pipeline or pop sub system systems that supports every data",
    "start": "3110440",
    "end": "3117040"
  },
  {
    "text": "format and maximum flexibility and you can configure thousands of intermediate",
    "start": "3117040",
    "end": "3122440"
  },
  {
    "text": "steps as the processor between input and output or maybe you know sometimes I saw",
    "start": "3122440",
    "end": "3127640"
  },
  {
    "text": "this like interface go interface called processor with one method do and bites",
    "start": "3127640",
    "end": "3133839"
  },
  {
    "text": "argument and those things are crazy but I saw them and the reason why it's bad",
    "start": "3133839",
    "end": "3138880"
  },
  {
    "text": "is because the best abstraction is generally opinionated and small and while the complexity of implementation",
    "start": "3138880",
    "end": "3145359"
  },
  {
    "text": "can be higher because it's hidden under this abstraction right and there is a saying even keep interface shallow",
    "start": "3145359",
    "end": "3151119"
  },
  {
    "text": "implementation deep and those things with over generic abstraction happens but they kind of cause so many problems",
    "start": "3151119",
    "end": "3157480"
  },
  {
    "text": "you know it end up you are programming in yl at the end because there are so many kind of configuration for this",
    "start": "3157480",
    "end": "3163520"
  },
  {
    "text": "input and and processor and outputs it poses limitations to implementations",
    "start": "3163520",
    "end": "3168559"
  },
  {
    "text": "it's simply inefficient at the same time you know the standard Library kind of",
    "start": "3168559",
    "end": "3173760"
  },
  {
    "text": "functions that's kind of another popular opinion I guess but standard Library sometimes are inefficient because",
    "start": "3173760",
    "end": "3179280"
  },
  {
    "text": "they're very generic it has to check different edge cases that you might not have for example paring integer from",
    "start": "3179280",
    "end": "3185480"
  },
  {
    "text": "string if you don't have negative numbers your function can be much faster if it's of course in the critical path",
    "start": "3185480",
    "end": "3191079"
  },
  {
    "text": "so things like that anyway I was just seeing so many failures so many projects",
    "start": "3191079",
    "end": "3196200"
  },
  {
    "text": "abandoned even because they were following this like very over generic abstractions and I want you to be",
    "start": "3196200",
    "end": "3204119"
  },
  {
    "text": "cautious here that's my opinion oh very nice by the way some of my best friends are yaml programmers so let's not you",
    "start": "3204119",
    "end": "3211119"
  },
  {
    "text": "know I mean if you like it sure is it not just a failing of the naming it's just that we struggle to name it or do",
    "start": "3211119",
    "end": "3217680"
  },
  {
    "text": "you is it literally like you mean about the input and output types as well like you want those to be very specific",
    "start": "3217680",
    "end": "3223240"
  },
  {
    "text": "ideally yeah it depends on the case but generally you want to to have like you know naming but also like underlying",
    "start": "3223240",
    "end": "3230240"
  },
  {
    "text": "kind of you know configuration options to be opinionated to be limited to be there has to be kind of like defined",
    "start": "3230240",
    "end": "3236480"
  },
  {
    "text": "abstraction otherwise it's you know over openen so maybe you know it kind of like",
    "start": "3236480",
    "end": "3241839"
  },
  {
    "text": "it leads to abuse of the system as well so if you want to have any arbitrary input that works with any processor you",
    "start": "3241839",
    "end": "3249200"
  },
  {
    "text": "know you end up with like reading PDF filtering using I don't know processor made for robots and then outputting as a",
    "start": "3249200",
    "end": "3255839"
  },
  {
    "text": "Helm chart I don't know like something crazy like that and people will do it and then claim success and yeah it's",
    "start": "3255839",
    "end": "3261799"
  },
  {
    "text": "just so kind of yeah it's like a um waterfall of different problems if you are naming it kind of over generic but",
    "start": "3261799",
    "end": "3269280"
  },
  {
    "text": "also yeah having the interface very generic yeah it makes sense I understand how it happens because you want to be so",
    "start": "3269280",
    "end": "3276319"
  },
  {
    "text": "flexible and really smart and you want to take on the pain so that it's easy for people to use but I kind of agree",
    "start": "3276319",
    "end": "3283280"
  },
  {
    "text": "like if you can be more specific then do that's pretty good one we'll test it and see bch and if you if it's not unpopular",
    "start": "3283280",
    "end": "3290319"
  },
  {
    "text": "you are contractually obliged to return to go time and do another episode I don't make the rules but sure okay do we",
    "start": "3290319",
    "end": "3296200"
  },
  {
    "text": "have any other unpopular opinions yes so I have a unpopular one so um basically",
    "start": "3296200",
    "end": "3301319"
  },
  {
    "text": "on the go execution Tracer so while it is very colorful and like I think you can learn a lot how maybe your program",
    "start": "3301319",
    "end": "3308040"
  },
  {
    "text": "is running like I think I've never found the problem and I I always uh started",
    "start": "3308040",
    "end": "3313640"
  },
  {
    "text": "tracing when I was just desperate and so my unpopular opinion is instead of starting it uh go outside and do a walk",
    "start": "3313640",
    "end": "3321039"
  },
  {
    "text": "in the park and then maybe you see the missing era check or whatever it is hey",
    "start": "3321039",
    "end": "3328000"
  },
  {
    "text": "that's interesting is that unpopular Kamal not in my book I",
    "start": "3328000",
    "end": "3333280"
  },
  {
    "text": "guess okay well we'll test it Christian we'll see Kamal did you bring an unpopular opinion today I brought like",
    "start": "3333280",
    "end": "3341079"
  },
  {
    "text": "bunch of them I don't know where to start but I guess maybe I can just keep it simple and focus on the things that",
    "start": "3341079",
    "end": "3347799"
  },
  {
    "text": "we talk today I'll keep btech happy yeah this one for btech so I think go should",
    "start": "3347799",
    "end": "3355640"
  },
  {
    "text": "give certain apis to control memory for certain use cases right go runtime does",
    "start": "3355640",
    "end": "3362240"
  },
  {
    "text": "a lot of assumptions for us and for the memory safety and it gives us guarantees and it's really nice with the garbage",
    "start": "3362240",
    "end": "3368599"
  },
  {
    "text": "collection but sometimes you really want to reduce the allocations there are certain ways to do that but it would be",
    "start": "3368599",
    "end": "3375760"
  },
  {
    "text": "really nice to have some granular control on certain memory parts so that you can optimize your program for your",
    "start": "3375760",
    "end": "3382839"
  },
  {
    "text": "hot path because as far as see with the go programs it's mostly about",
    "start": "3382839",
    "end": "3387880"
  },
  {
    "text": "allocations and the GC pressure I know there are some improvements recently",
    "start": "3387880",
    "end": "3394119"
  },
  {
    "text": "like actually there are some knobs that you can turn and adjust your garbage collection on top of that there's this",
    "start": "3394119",
    "end": "3400319"
  },
  {
    "text": "PR proposal about the arena support but still it would be nice to have more",
    "start": "3400319",
    "end": "3405480"
  },
  {
    "text": "control I think partic going to like this because I know for a fact that he maintains couple of packages around",
    "start": "3405480",
    "end": "3411359"
  },
  {
    "text": "these to actually make this happen I feel like our opinions were not super unpopular like because I think I agreed",
    "start": "3411359",
    "end": "3417960"
  },
  {
    "text": "with all all of this and I think there should be some legal agreement we are signing with you m that those words",
    "start": "3417960",
    "end": "3423480"
  },
  {
    "text": "cannot be used against us or something like that right but yeah I would I would agree with camel arena is especially",
    "start": "3423480",
    "end": "3429839"
  },
  {
    "text": "good but I would even like bring like rust ownership model to like portion of",
    "start": "3429839",
    "end": "3435359"
  },
  {
    "text": "your go- code so you could kind of like you know strictly control the scope of",
    "start": "3435359",
    "end": "3441440"
  },
  {
    "text": "uh living kind of life cycle of your variables of your data and maybe only for like 5% of your code",
    "start": "3441440",
    "end": "3447960"
  },
  {
    "text": "because this is the critical path that matters but and then use garbage collection for something else I I kept",
    "start": "3447960",
    "end": "3453640"
  },
  {
    "text": "kind of looking um I mean people look as crazy if I say that but I think yeah I would even go further as",
    "start": "3453640",
    "end": "3460520"
  },
  {
    "text": "that yeah so it kind of makes sense then like most people won't have to know about it or even think about it but when",
    "start": "3460520",
    "end": "3467520"
  },
  {
    "text": "you are working like when you're doing efficiency work when you really do want",
    "start": "3467520",
    "end": "3473000"
  },
  {
    "text": "to control it and optimize it it sort that sort of makes sense a bit like how you can have assembly in your go code I",
    "start": "3473000",
    "end": "3480440"
  },
  {
    "text": "guess that's a bit unusual to have uh assembly code in there and people do it sometimes for very good reasons but it's",
    "start": "3480440",
    "end": "3487920"
  },
  {
    "text": "the trade-off between this is now very difficult to maintain especially for go programmers who typically don't write",
    "start": "3487920",
    "end": "3494240"
  },
  {
    "text": "much assembly and same then yeah you'd be able to for those that need it would",
    "start": "3494240",
    "end": "3499680"
  },
  {
    "text": "be able to use it yeah I think we're going in this direction though so it's good like Arena already is claiming some",
    "start": "3499680",
    "end": "3506240"
  },
  {
    "text": "kind of part of your memory where you know it's outside of garbage collection so it's a precedence once that is done",
    "start": "3506240",
    "end": "3512000"
  },
  {
    "text": "we can go further deeper into it bad things but also nice for",
    "start": "3512000",
    "end": "3517160"
  },
  {
    "text": "efficiency sometimes yeah well these all do sound quite popular does anyone want to have a go a properly unpopular one no",
    "start": "3517160",
    "end": "3524000"
  },
  {
    "text": "before the legal contract no I can go come on come on let's dig",
    "start": "3524000",
    "end": "3529240"
  },
  {
    "text": "deep find an unpopular one yeah okay I think the go team should be an independent third part inside of",
    "start": "3529240",
    "end": "3535960"
  },
  {
    "text": "something that only go like Google people actually controls there are a lot of other kind of stakeholders actually",
    "start": "3535960",
    "end": "3543559"
  },
  {
    "text": "depends on go and for example one of the big ones is cncf cloud native Foundation",
    "start": "3543559",
    "end": "3550000"
  },
  {
    "text": "we like work on the open source project that actually donated to that foundation so it would be nice to have some",
    "start": "3550000",
    "end": "3556720"
  },
  {
    "text": "representation in the go team to adjust things right interesting I know that that has",
    "start": "3556720",
    "end": "3562599"
  },
  {
    "text": "been a subject before I think it is quite a controversial one but let's uh",
    "start": "3562599",
    "end": "3567720"
  },
  {
    "text": "yeah let's have that chat on Twitter certainly we'll put that clip of you and then vote and then and that's it that's",
    "start": "3567720",
    "end": "3573920"
  },
  {
    "text": "really how we do our observability and our data collecting excellent well thank",
    "start": "3573920",
    "end": "3579440"
  },
  {
    "text": "you so much this was great and we should do this more like you know we T touched on profiling we really we really didn't",
    "start": "3579440",
    "end": "3585960"
  },
  {
    "text": "go deep on profiling and I think that could be also great for a future episode but thank you so much BK Christian Kamal",
    "start": "3585960",
    "end": "3593240"
  },
  {
    "text": "absolute pleasure and and thanks for listening thanks to our live listeners remember this goes out live and you can",
    "start": "3593240",
    "end": "3599160"
  },
  {
    "text": "see us on YouTube and also this is edited nicely as well for your podcast",
    "start": "3599160",
    "end": "3604799"
  },
  {
    "text": "so if you're listening to it on a podcast then good for you but you there's some gold that was chopped from",
    "start": "3604799",
    "end": "3610319"
  },
  {
    "text": "it I suspect one of my unpopular opinions will have been cut out so if I said I've got two unpopular opinions and",
    "start": "3610319",
    "end": "3616880"
  },
  {
    "text": "then I only said one you'll know that one was cut out but we'll see thanks very much see you next time on go time",
    "start": "3616880",
    "end": "3626559"
  },
  {
    "text": "it just so happens that this is one of those Chang log Plus+ extended episodes",
    "start": "3629240",
    "end": "3635520"
  },
  {
    "text": "Matt and the guy stuck around for 12 minutes or so after the show ended to review how it went discuss a few things",
    "start": "3635520",
    "end": "3642079"
  },
  {
    "text": "they didn't get a chance to and answer some questions from the chat it gets a little spicy too I had to bleep mat at",
    "start": "3642079",
    "end": "3648280"
  },
  {
    "text": "one point if you aren't a Plus+ member yet this is a great time to check out our membership program directly support",
    "start": "3648280",
    "end": "3655000"
  },
  {
    "text": "our work get closer to the medal with bonuses like this and save yourself some time by making the ads disappear head to",
    "start": "3655000",
    "end": "3661599"
  },
  {
    "text": "Chang log.com Plus+ to learn more thanks once again to fastly and fly for",
    "start": "3661599",
    "end": "3667160"
  },
  {
    "text": "partnering with us to bring you go time each week to Our Mysterious friend for hooking us up with these dope beats and",
    "start": "3667160",
    "end": "3673319"
  },
  {
    "text": "to you for listening we appreciate you finally I'd like to thank all of our amazing go time panelists for making",
    "start": "3673319",
    "end": "3679359"
  },
  {
    "text": "this show so stinking good in 2022 shout outs to Matt ryer Johnny borico Natalie",
    "start": "3679359",
    "end": "3685000"
  },
  {
    "text": "panovic John Calhoun Chris Brando Angelica Hill and Ian lire go time is",
    "start": "3685000",
    "end": "3690920"
  },
  {
    "text": "good because yall are great at what you do thank you next up on the Pod it's a",
    "start": "3690920",
    "end": "3696160"
  },
  {
    "text": "New Year's party but it won't drop till 2023 I hope you have a great end of the year and we'll talk to you again real",
    "start": "3696160",
    "end": "3704078"
  },
  {
    "text": "soon h",
    "start": "3713440",
    "end": "3717400"
  }
]