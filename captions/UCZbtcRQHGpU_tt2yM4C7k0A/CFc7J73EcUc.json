[
  {
    "text": "you're listening to JS party a weekly celebration of JavaScript and the web",
    "start": "7399",
    "end": "13480"
  },
  {
    "text": "our 300th episode is right around the corner help us make it extra special and",
    "start": "13480",
    "end": "18920"
  },
  {
    "text": "earn a free t-shirt along the way learn how at JSP party. fm300 once again that's JSP party.",
    "start": "18920",
    "end": "27840"
  },
  {
    "text": "fm300 special thanks to our partner fast.com fly.io and types sense.org",
    "start": "27840",
    "end": "34840"
  },
  {
    "text": "okay hey it's party time",
    "start": "34840",
    "end": "39800"
  },
  {
    "text": "y'all what's up friends I'm here with James calling co-founder and CTO at convex they're one of our new sponsors",
    "start": "42680",
    "end": "49320"
  },
  {
    "text": "and they're building a full stack platform for the typescript era so James you have some awesome docks for convex",
    "start": "49320",
    "end": "56320"
  },
  {
    "text": "and inside those docks is a document that sort of describes the entire world the entire thinking the framework of",
    "start": "56320",
    "end": "63239"
  },
  {
    "text": "convex it's called the Zen of convex can you describe that for me from my time building large applications I believe",
    "start": "63239",
    "end": "70200"
  },
  {
    "text": "very strongly that there are certain set of abstractions Primitives and ways of solving problems that make life easy",
    "start": "70200",
    "end": "77640"
  },
  {
    "text": "forever and they compound in positive ways and ways to solve problems that make life worse every day and the things",
    "start": "77640",
    "end": "83640"
  },
  {
    "text": "you know everyone can recognize these things what makes life easy is clean abstractions information hiding",
    "start": "83640",
    "end": "90640"
  },
  {
    "text": "composability what makes life hard is conditionals you know checks everywhere Corner cases now the Zen of convex is",
    "start": "90640",
    "end": "97799"
  },
  {
    "text": "about how to build applications in a way that scales for you and in convex",
    "start": "97799",
    "end": "103040"
  },
  {
    "text": "specifically one key component of that is influence actually quite a lot by languages like hasle to think in terms",
    "start": "103040",
    "end": "109000"
  },
  {
    "text": "of transactions everything is a transaction you don't have to think about functions interacting with each",
    "start": "109000",
    "end": "114079"
  },
  {
    "text": "other CU they're transactional think in terms of deterministic execution so functions that are determinist STI so",
    "start": "114079",
    "end": "120640"
  },
  {
    "text": "they can get replayed they can get cached and if any of the inputs to the function changes we can push those",
    "start": "120640",
    "end": "126640"
  },
  {
    "text": "functions in real time the result the new results of those functions to you in real time over a websocket so the Zen of",
    "start": "126640",
    "end": "131680"
  },
  {
    "text": "comvex is about thinking about the kind of ways of building an application they're going to pay dividends to you in",
    "start": "131680",
    "end": "137560"
  },
  {
    "text": "the long run now you can use convex completely ignore the Zen if you want right you can use convex just as as a",
    "start": "137560",
    "end": "143160"
  },
  {
    "text": "Workhorse tool we think that framework designed in such a way that it encourages you to do things in the right",
    "start": "143160",
    "end": "149680"
  },
  {
    "text": "way in a way that will scale and a way that will make life simple for you in the long run okay if you're looking for a better type of backend convex is the",
    "start": "149680",
    "end": "157280"
  },
  {
    "text": "full stack typescript development platform you've been looking for replace your database server functions and glue",
    "start": "157280",
    "end": "162959"
  },
  {
    "text": "code get started at convex dodev that's con veex dodev again convex",
    "start": "162959",
    "end": "171760"
  },
  {
    "text": "[Music]",
    "start": "171760",
    "end": "178840"
  },
  {
    "text": "dodev",
    "start": "178840",
    "end": "181840"
  },
  {
    "text": "[Applause] [Music]",
    "start": "187870",
    "end": "193060"
  },
  {
    "text": "[Applause] oh yes you know what the sound of those",
    "start": "193060",
    "end": "198360"
  },
  {
    "text": "break master cylinder beats means it means it's time once again for JS party",
    "start": "198360",
    "end": "203519"
  },
  {
    "text": "I'm Jared your internet friend and I'm joined by my friend Nick nii oh Hoy Hoy",
    "start": "203519",
    "end": "208920"
  },
  {
    "text": "Nick what's up man oh Hoy Hoy how's it going Jared it's been a while it's going very well yeah where you been man I've",
    "start": "208920",
    "end": "214599"
  },
  {
    "text": "been on the Pod non-stop I went to Disney World that's right you did you",
    "start": "214599",
    "end": "219720"
  },
  {
    "text": "also went to change login friends I did yeah fun for those who missed it we did a special change login friends with Nick",
    "start": "219720",
    "end": "226239"
  },
  {
    "text": "where we talked about what we want from a web browser so if you're only a JS party listener and not a listener of the",
    "start": "226239",
    "end": "232280"
  },
  {
    "text": "change log what's wrong with you hop on over there check out the change blog feed he Nick talk about web browsers for",
    "start": "232280",
    "end": "239120"
  },
  {
    "text": "something like hours and we went deep on that episode that was fun we're here today not to talk about web browsers",
    "start": "239120",
    "end": "244640"
  },
  {
    "text": "well sort of in a sense in so far as they are the way that we access the web we're here to talk about effect a really",
    "start": "244640",
    "end": "253079"
  },
  {
    "text": "interesting project used by Johan shling the founder of Prisma a user and a",
    "start": "253079",
    "end": "259639"
  },
  {
    "text": "Community member he'll tell us more about his involvement with effect but yannes welcome to J's party hey thanks",
    "start": "259639",
    "end": "266479"
  },
  {
    "text": "so much for having me it's a pleasure to be here pleasure to have you and this is a cool new project I mean it's new to me",
    "start": "266479",
    "end": "274039"
  },
  {
    "text": "I'm not sure exactly if it's new I think you said you've been working with it for something like three years so I guess new is not the correct adjective is it",
    "start": "274039",
    "end": "281520"
  },
  {
    "text": "only new to me or is it new to a lot of people yeah I guess in JavaScript terms",
    "start": "281520",
    "end": "286880"
  },
  {
    "text": "it's it's a bit weird uh since like most JavaScript projects like uh come to exist in a very short period of time and",
    "start": "286880",
    "end": "293800"
  },
  {
    "text": "then take off like a lot of people know about it in that regard effect is a little bit it's both like been around",
    "start": "293800",
    "end": "299759"
  },
  {
    "text": "around for a long time at the same time it's still early stage so it's I think it's been around for more than 5 years",
    "start": "299759",
    "end": "305440"
  },
  {
    "text": "or it's been developed in various generations for over five years but it's just getting to a point that uh it's",
    "start": "305440",
    "end": "312000"
  },
  {
    "text": "it's ready for for adoption or getting ready for adoption like we're just uh created some docks Etc and the community",
    "start": "312000",
    "end": "318840"
  },
  {
    "text": "is growing but it's still early days so the sign on the window says the best way",
    "start": "318840",
    "end": "324880"
  },
  {
    "text": "to build robust apps in typescript so if you're wondering why had to have Nick",
    "start": "324880",
    "end": "330479"
  },
  {
    "text": "here it's because this is a typescript focused project and Nick is a typescript",
    "start": "330479",
    "end": "336160"
  },
  {
    "text": "focused person and so what exactly is effect doing for people building apps",
    "start": "336160",
    "end": "341759"
  },
  {
    "text": "with typescript so this is a question we still don't have figured out like a",
    "start": "341759",
    "end": "347160"
  },
  {
    "text": "precise pitch okay five years in we're figur we're getting there we're we're we're trying to to get it more honed in",
    "start": "347160",
    "end": "354160"
  },
  {
    "text": "so I typically explain to folks what effect is uh really dependent on what",
    "start": "354160",
    "end": "359360"
  },
  {
    "text": "their pain points with typescript or the web are so I think depending on which",
    "start": "359360",
    "end": "366039"
  },
  {
    "text": "kind of project you're working on maybe you're building a library maybe you're building an app or like a framework uh",
    "start": "366039",
    "end": "373479"
  },
  {
    "text": "depending on what your what your goal is you might be facing different kind of pain points and so effect the the way",
    "start": "373479",
    "end": "380960"
  },
  {
    "text": "how i' right now describe effect is kind of L of better words is a standard",
    "start": "380960",
    "end": "386160"
  },
  {
    "text": "library that the web never really had and so here the web is or what I mean",
    "start": "386160",
    "end": "391960"
  },
  {
    "text": "with the web can be really anywhere where JavaScript runs so this can be node bun then know like all of those new",
    "start": "391960",
    "end": "398720"
  },
  {
    "text": "runtimes it can be the browser it can be like Cloud flare workers like wherever",
    "start": "398720",
    "end": "404120"
  },
  {
    "text": "JavaScript runs and I mean JavaScript is amazing so many apps so many things are",
    "start": "404120",
    "end": "410360"
  },
  {
    "text": "built with it but compared to other languages compared to like modern",
    "start": "410360",
    "end": "416039"
  },
  {
    "text": "languages like rust or go or cotland Swift uh JavaScript leaves a lot to be desired",
    "start": "416039",
    "end": "423199"
  },
  {
    "text": "and a lot of it is like it kind of grew very organically and so we had like call",
    "start": "423199",
    "end": "428479"
  },
  {
    "text": "back hell in the past and then we had like all sorts of different evolutions",
    "start": "428479",
    "end": "433759"
  },
  {
    "text": "and JavaScript was never purposefully designed for like where it is right now and so we have kind of this organic mess",
    "start": "433759",
    "end": "441440"
  },
  {
    "text": "and so we we don't really have a good standard library to to do something to",
    "start": "441440",
    "end": "446800"
  },
  {
    "text": "do the hard things that you need to do in applications so to give you a few examples of what I think is still mostly",
    "start": "446800",
    "end": "453680"
  },
  {
    "text": "unsolved in in the world of of JavaScript when I say JavaScript I kind of mean typescript interchangeably here",
    "start": "453680",
    "end": "460680"
  },
  {
    "text": "so things like error handling or things like concurrency handling or",
    "start": "460680",
    "end": "467000"
  },
  {
    "text": "serialization of data like moving data between workers for example or when you",
    "start": "467000",
    "end": "474120"
  },
  {
    "text": "uh want to like let's say you need some sort of transactional systems that uh",
    "start": "474120",
    "end": "479280"
  },
  {
    "text": "you you need you manipulate some some state in different parts of your of your",
    "start": "479280",
    "end": "484639"
  },
  {
    "text": "app and these changes need to happen transactionally all of those are kind of like still left as an exercise to the",
    "start": "484639",
    "end": "492240"
  },
  {
    "text": "app developer and I think there's a system needed that helps in a similar",
    "start": "492240",
    "end": "497319"
  },
  {
    "text": "way how something like react helped us to build front-end apps instead of using",
    "start": "497319",
    "end": "503240"
  },
  {
    "text": "chary I think effect can be a set of Primitives that help us to build like",
    "start": "503240",
    "end": "508759"
  },
  {
    "text": "General business business logic applications at what phase in the life",
    "start": "508759",
    "end": "513800"
  },
  {
    "text": "cycle of an application or maybe even in the size or scale of an application I'm talking about lines of code not scale of",
    "start": "513800",
    "end": "521399"
  },
  {
    "text": "user base would somebody typically want to reach for something like this like Square One grab effect and get going or",
    "start": "521399",
    "end": "528839"
  },
  {
    "text": "write your own stuff for a while and then bring it in once you start to feel some pain where does it fit that that's",
    "start": "528839",
    "end": "533920"
  },
  {
    "text": "a great question so I think if you're already familiar with effect let's say you've like used it for your previous",
    "start": "533920",
    "end": "540240"
  },
  {
    "text": "project Etc I think you'd probably be reaching for it on day day one uh I",
    "start": "540240",
    "end": "545320"
  },
  {
    "text": "think there's a similar kind of getting used to it journey and dynamic similar to you would have probably not used",
    "start": "545320",
    "end": "552000"
  },
  {
    "text": "typescript from day one if you've never used it before but you've started reaching for typescript once you've",
    "start": "552000",
    "end": "558440"
  },
  {
    "text": "experienced some pain points and it was worth it for you to to get started but then in your next project you use it",
    "start": "558440",
    "end": "564000"
  },
  {
    "text": "from day one so it's similar about effect I would say you're probably start looking for something like effect when",
    "start": "564000",
    "end": "571880"
  },
  {
    "text": "you're we're dealing like with with really hairy problems building building your app let's say there's something",
    "start": "571880",
    "end": "578279"
  },
  {
    "text": "that's just too much like you're you know it's slowing you down so much so let's say uh your your app really could",
    "start": "578279",
    "end": "585360"
  },
  {
    "text": "use some better error handling but like try catch is not the answer you like you",
    "start": "585360",
    "end": "590519"
  },
  {
    "text": "can't rep every every little function every little Block in your app like with with TR catch you know your users are",
    "start": "590519",
    "end": "598000"
  },
  {
    "text": "suffering because your app doesn't have proper error handling and then you start looking for like hm what are better ways",
    "start": "598000",
    "end": "603440"
  },
  {
    "text": "to do error handling then you might be reaching for something like effect fact or let's say your app keeps failing and",
    "start": "603440",
    "end": "610640"
  },
  {
    "text": "you don't know what what is going on so you might be looking for some observability solutions and then when",
    "start": "610640",
    "end": "617279"
  },
  {
    "text": "you're thinking about hm how do I actually like instrument my app then you realize oh that's really hard in",
    "start": "617279",
    "end": "622760"
  },
  {
    "text": "JavaScript you don't have something like Tokyo tracing in JavaScript you got to do all of that by hand and uh the this",
    "start": "622760",
    "end": "629440"
  },
  {
    "text": "is also something effect helps you with so I think depending on what is your biggest pain point that becomes your",
    "start": "629440",
    "end": "635720"
  },
  {
    "text": "entry point for effect and once you've picked it up uh then you see how many other things that it can offer and then",
    "start": "635720",
    "end": "642440"
  },
  {
    "text": "I think you you just use it by default for every new thing so kind of looking at the docs uh that was the main thing",
    "start": "642440",
    "end": "648639"
  },
  {
    "text": "that kind of stuck out for me in terms of like what effect was and I'm specifically talking about like the",
    "start": "648639",
    "end": "653880"
  },
  {
    "text": "effect object or type that that you get from the library and like right in the",
    "start": "653880",
    "end": "659560"
  },
  {
    "text": "the documentation for that it talks about you know a typical function even in typescript you can Define the",
    "start": "659560",
    "end": "665040"
  },
  {
    "text": "function and you can Define the arguments that get passed to it uh so you know exactly what that is and you",
    "start": "665040",
    "end": "670240"
  },
  {
    "text": "can Define exactly what gets returned from it but there's no indication of whether that function will throw or",
    "start": "670240",
    "end": "676720"
  },
  {
    "text": "could throw uh and what it might throw and so is that what effect is really trying to do is to set you up to",
    "start": "676720",
    "end": "683079"
  },
  {
    "text": "properly type and account for uh all of the known errors uh or or failures might",
    "start": "683079",
    "end": "689519"
  },
  {
    "text": "occur within that function that is one aspect of it so I think typically the way how typescript is designed and how",
    "start": "689519",
    "end": "696560"
  },
  {
    "text": "most people build Javascript app is kind of pretending that there's only the happy path that nothing can go wrong Etc",
    "start": "696560",
    "end": "704480"
  },
  {
    "text": "and I think effect is a little bit more real realistic about what is happening when you build a pro uh when you build a",
    "start": "704480",
    "end": "710720"
  },
  {
    "text": "program and so it takes typescript a little bit beyond the happy path so",
    "start": "710720",
    "end": "715920"
  },
  {
    "text": "instead of having a promise that returns a number you get kind of a thing that",
    "start": "715920",
    "end": "721040"
  },
  {
    "text": "you can think of similarly like a like a promise I'm oversimplifying here but instead of thinking about something like",
    "start": "721040",
    "end": "727639"
  },
  {
    "text": "like a promise you think about something as an effect uh that still has like it has a few generics um so instead of just",
    "start": "727639",
    "end": "734680"
  },
  {
    "text": "a promise just having one generic it has three the last one is uh one to one the",
    "start": "734680",
    "end": "740279"
  },
  {
    "text": "same as with the promise so that's a return type but uh there's two others and there's one for the for the arror",
    "start": "740279",
    "end": "747199"
  },
  {
    "text": "type so let's say you have a function that can do something maybe it needs to act with an HTTP endpoint or maybe it",
    "start": "747199",
    "end": "753959"
  },
  {
    "text": "needs to act interact with database or it needs to interact with something um something anything that can go wrong and",
    "start": "753959",
    "end": "761240"
  },
  {
    "text": "that you want to recover from in some way or deal with deal with in a way that",
    "start": "761240",
    "end": "766360"
  },
  {
    "text": "is not completely useless to your users then you want to kind of lift that up",
    "start": "766360",
    "end": "772399"
  },
  {
    "text": "and expose it and deal with it somewhere in your program so uh lifting that up",
    "start": "772399",
    "end": "777760"
  },
  {
    "text": "into the type system is incredibly powerful and then goes a step further",
    "start": "777760",
    "end": "783120"
  },
  {
    "text": "and that the third type parameter is very similar to what react context is",
    "start": "783120",
    "end": "789920"
  },
  {
    "text": "except it's type safe so when anything in your program let's use that react analogy if any of your components have",
    "start": "789920",
    "end": "797279"
  },
  {
    "text": "somewhere in the components use context and then it uses something from the",
    "start": "797279",
    "end": "802399"
  },
  {
    "text": "context in your react program let's say you use that component somewhere you you",
    "start": "802399",
    "end": "807440"
  },
  {
    "text": "have no clue whether that component is used or not it might just like maybe you need to use the default context or it",
    "start": "807440",
    "end": "814240"
  },
  {
    "text": "throws in with effect just by using something further down it kind of",
    "start": "814240",
    "end": "819680"
  },
  {
    "text": "bubbles up in that context type and you see oh like somewhere deep down in my",
    "start": "819680",
    "end": "824920"
  },
  {
    "text": "program I'm using a database or I need a file system Etc so it kind of nicely",
    "start": "824920",
    "end": "830639"
  },
  {
    "text": "composes what can go wrong what does my program need and then still what does it return Nick how do you deal with these",
    "start": "830639",
    "end": "837279"
  },
  {
    "text": "things in your hairy TI script programs just just hope the errors don't throw or",
    "start": "837279",
    "end": "842959"
  },
  {
    "text": "you know put your head in the sand or what do you up to uh I I was laughing internally when you were talking about",
    "start": "842959",
    "end": "849560"
  },
  {
    "text": "JavaScript developers only thinking of the happy path yeah I like why were you laughing internally because I'm so",
    "start": "849560",
    "end": "855920"
  },
  {
    "text": "guilty of that all the time it's like oh I'm making a fetch call right here and I know that it could fail but I don't have",
    "start": "855920",
    "end": "862600"
  },
  {
    "text": "to do anything something up above me will catch if it really cares about that and that like the idea of like from the",
    "start": "862600",
    "end": "870600"
  },
  {
    "text": "outset setting up a way to not only like describe what could go wrong but give me",
    "start": "870600",
    "end": "877120"
  },
  {
    "text": "like give me a pattern that I can put into place for actually handling that because that's that's the thing that I",
    "start": "877120",
    "end": "882160"
  },
  {
    "text": "always run into is like oh should I catch here if I catch what am I going to do console.log and rethrow it or",
    "start": "882160",
    "end": "887240"
  },
  {
    "text": "something exactly yeah so like having more of a pattern and like the idea of just like putting you into that mindset",
    "start": "887240",
    "end": "893880"
  },
  {
    "text": "of I'm going to Define all of this everywhere really makes it so that you",
    "start": "893880",
    "end": "899279"
  },
  {
    "text": "you are thinking of that rather than just kind of like you know spraying it out there and then praying that somebody",
    "start": "899279",
    "end": "904600"
  },
  {
    "text": "up higher in the chain is going to to catch and do something with it unfortunately a lot of times who gets",
    "start": "904600",
    "end": "910440"
  },
  {
    "text": "left with a tab is your user right exactly if somebody doesn't handle it",
    "start": "910440",
    "end": "916079"
  },
  {
    "text": "the user has to handle it you know what they're not there in the pr to complain about it so and I think the worst part is",
    "start": "916079",
    "end": "922440"
  },
  {
    "text": "basically like if you go about error handling a little if you just invest a little bit of time and you just",
    "start": "922440",
    "end": "929000"
  },
  {
    "text": "distinguish between like hey something has gone wrong here we can do something useful about it and then just",
    "start": "929000",
    "end": "934759"
  },
  {
    "text": "propagating that to the user and giving them a retry Button as opposed to just",
    "start": "934759",
    "end": "940360"
  },
  {
    "text": "not doing anything about it and just giving them a 500 there's some really low hanging fruits if we could go a",
    "start": "940360",
    "end": "947279"
  },
  {
    "text": "little bit further and you mentioning about like that fetch call even worse if",
    "start": "947279",
    "end": "952800"
  },
  {
    "text": "you do that fetch call in a non Asing function and you don't await it since now if it fails you might even have like",
    "start": "952800",
    "end": "960120"
  },
  {
    "text": "an unhandled promised rejection and so there's so many ways how you can really hurt yourself and you don't think about",
    "start": "960120",
    "end": "967040"
  },
  {
    "text": "that while you're like in happy programming mode when you first build out your your app very",
    "start": "967040",
    "end": "972199"
  },
  {
    "text": "blissfully I feel like he's really describing the way I code over here Nick and you're nodding along as if he's he",
    "start": "972199",
    "end": "978920"
  },
  {
    "text": "very much knows our happy path programming Styles I just prefer not to think about other things but the happy",
    "start": "978920",
    "end": "985040"
  },
  {
    "text": "path so I mean I think this is great I think that a lot of times like you said",
    "start": "985040",
    "end": "990279"
  },
  {
    "text": "Nick I guess the hesitancy or the you kind of throw up your hands and move on is just not having like a firm what's my",
    "start": "990279",
    "end": "997800"
  },
  {
    "text": "practice in this circumstance like almost like underpinnings or underg gings for you and so something like",
    "start": "997800",
    "end": "1003360"
  },
  {
    "text": "effect which says here's how we handle these circumstances and then you're you're just enabled to make the decision",
    "start": "1003360",
    "end": "1010160"
  },
  {
    "text": "versus not just having to make the decision of what do I do but how do I do it right so that's cool what other",
    "start": "1010160",
    "end": "1015399"
  },
  {
    "text": "things does Effect bring to the table so I would say generally like doing the right thing should be easy but doing the",
    "start": "1015399",
    "end": "1022639"
  },
  {
    "text": "right thing in typescript and JavaScript is incredibly hard the more you want to do the right thing the harder it gets um",
    "start": "1022639",
    "end": "1030038"
  },
  {
    "text": "and particularly like the it gets exponentially harder let's say you want to do the right thing by doing good",
    "start": "1030039",
    "end": "1035520"
  },
  {
    "text": "error handling okay much harder like and literally visually you need to in it",
    "start": "1035520",
    "end": "1040839"
  },
  {
    "text": "indents your entire code Etc let's say you do error handling and you also want to do like uh cancellation so let's say",
    "start": "1040839",
    "end": "1048558"
  },
  {
    "text": "you're like you're uploading a file and you want to give people a button where that says like cancel now doing then uh",
    "start": "1048559",
    "end": "1055640"
  },
  {
    "text": "and we for example got like the abort controller Etc and that is just like super annoying to work with let's say we",
    "start": "1055640",
    "end": "1061760"
  },
  {
    "text": "do both of those things we want to do error handling and the aboard controller now those two like kind of add up in a",
    "start": "1061760",
    "end": "1068919"
  },
  {
    "text": "exponential complexity way uh and this is where we're just getting started let's say something has gone wrong with",
    "start": "1068919",
    "end": "1074919"
  },
  {
    "text": "the error handling and now we want to retry now we add even more complexity to this we maybe want to instrument this",
    "start": "1074919",
    "end": "1082000"
  },
  {
    "text": "with observability since if something goes wrong we want to know and all of that is just we're if we're embracing",
    "start": "1082000",
    "end": "1090200"
  },
  {
    "text": "that complexity without any further help it just it's too much to to handle just",
    "start": "1090200",
    "end": "1095880"
  },
  {
    "text": "by yourself and therefore like most JavaScript developers don't do it and so",
    "start": "1095880",
    "end": "1100919"
  },
  {
    "text": "yeah besides error handling uh I think a form like or an aspect of error handling",
    "start": "1100919",
    "end": "1106480"
  },
  {
    "text": "is retrying something which is super comosum to do it in a like non-principal",
    "start": "1106480",
    "end": "1111600"
  },
  {
    "text": "way and effect makes that literally like a oneline thing uh that you just add on",
    "start": "1111600",
    "end": "1117320"
  },
  {
    "text": "the underneath your function or underneath your effect does effect have browser and server side effects is it a",
    "start": "1117320",
    "end": "1125640"
  },
  {
    "text": "frontend thing are there limitations to where and how you can use it and then if you're shipping things to the front end",
    "start": "1125640",
    "end": "1132080"
  },
  {
    "text": "like what is this add to your to your packages yeah so uh effect at the the",
    "start": "1132080",
    "end": "1137200"
  },
  {
    "text": "core so there is like a package that's on npm called effect that runs everywhere so that's completely agnostic",
    "start": "1137200",
    "end": "1144039"
  },
  {
    "text": "to the uh to the runtime it's uh built and structured in a way that you only",
    "start": "1144039",
    "end": "1150039"
  },
  {
    "text": "kind of pay the bundle size for what you're actually using so it has a set of modules and you just just whatever",
    "start": "1150039",
    "end": "1157159"
  },
  {
    "text": "you're going to use that's going to end up in your uh in your package and so yeah you you have a whole bunch of uh",
    "start": "1157159",
    "end": "1164159"
  },
  {
    "text": "different packages and depending on your use case you use those and as a I think",
    "start": "1164159",
    "end": "1169880"
  },
  {
    "text": "by default in in a in a small setting I think effect adds around like 50",
    "start": "1169880",
    "end": "1175480"
  },
  {
    "text": "kilobytes to your app don't quote me on that I think we're still in the in the process of like shrinking that uh and",
    "start": "1175480",
    "end": "1182400"
  },
  {
    "text": "like coming up with like a proper quotable uh amount but uh the way how I",
    "start": "1182400",
    "end": "1187840"
  },
  {
    "text": "think about this is as I'm building a real app where I need some help to uh to",
    "start": "1187840",
    "end": "1194240"
  },
  {
    "text": "build all of those things I might be reaching for a whole bunch of different dependencies",
    "start": "1194240",
    "end": "1199320"
  },
  {
    "text": "uh that I no longer need I might be reaching for something like Zod for schema encoding I might be reaching for",
    "start": "1199320",
    "end": "1205080"
  },
  {
    "text": "something like rxjs for streaming I might be reaching for something like TS",
    "start": "1205080",
    "end": "1210559"
  },
  {
    "text": "results for for that error handling and all of those combined are multiple times",
    "start": "1210559",
    "end": "1216919"
  },
  {
    "text": "larger than just using effect and that's also another way to think about effect and this is what I mean by standard",
    "start": "1216919",
    "end": "1223039"
  },
  {
    "text": "Library I don't need all of those oneoff libraries anymore that all have a",
    "start": "1223039",
    "end": "1229200"
  },
  {
    "text": "different API design they that might be like a different maintenance life cycles Etc some are promise based some others",
    "start": "1229200",
    "end": "1237159"
  },
  {
    "text": "are are not uh and they don't really even though they're all JavaScript and typescript they don't really all speak",
    "start": "1237159",
    "end": "1243880"
  },
  {
    "text": "the same language they don't plug well together and this is what's so nice about using a language like rust",
    "start": "1243880",
    "end": "1250400"
  },
  {
    "text": "everything just fits like a glove and this is what we're getting here with effect and typescript finally as well",
    "start": "1250400",
    "end": "1256640"
  },
  {
    "text": "there's an example on the the website that I I was curious maybe we could walk",
    "start": "1256640",
    "end": "1262200"
  },
  {
    "text": "through it and talk about like what it's doing or what it's adding uh and it's specifically in the quick start on the",
    "start": "1262200",
    "end": "1267919"
  },
  {
    "text": "the react and uh V side and it's just taking like a a used State hook call uh",
    "start": "1267919",
    "end": "1274679"
  },
  {
    "text": "where it's setting account but then it creates a a task using used memo and",
    "start": "1274679",
    "end": "1280360"
  },
  {
    "text": "inside of that it just calls effect. sync which will hit set count and then an increment call which is just a call",
    "start": "1280360",
    "end": "1287520"
  },
  {
    "text": "back that's running something called run sync I'm I'm trying to like understand what this is adding right so this",
    "start": "1287520",
    "end": "1293320"
  },
  {
    "text": "example rather shows you this kind of like rather a hello world a hello world isn't very useful it's like it doesn't",
    "start": "1293320",
    "end": "1300679"
  },
  {
    "text": "do much for you it rather shows you ah this is how I do like Hello World in that esoteric program language so",
    "start": "1300679",
    "end": "1308000"
  },
  {
    "text": "arguably the examples that we have on the on the website and the docs right now don't do a great job yet of like",
    "start": "1308000",
    "end": "1314880"
  },
  {
    "text": "selling the uh like the the value of effect but we're actually working on a on a new website that will show a lot of",
    "start": "1314880",
    "end": "1322559"
  },
  {
    "text": "before and after this is how you do something with promises or this is how you do something with RX Jaz and this is",
    "start": "1322559",
    "end": "1328080"
  },
  {
    "text": "how you do it with with effect directly so this is rather trying to show you",
    "start": "1328080",
    "end": "1333120"
  },
  {
    "text": "like okay this is this is like a a minimal set this a minimal usage how you can use it within react or how you can",
    "start": "1333120",
    "end": "1340559"
  },
  {
    "text": "use it with within bun Etc but this doesn't show yet how how it helps you",
    "start": "1340559",
    "end": "1345720"
  },
  {
    "text": "deal with complexity okay yeah that's that's what I was curious about cuz I I wasn't sure what it was adding to the",
    "start": "1345720",
    "end": "1352679"
  },
  {
    "text": "the normal like used State call no so and I would actually say uh I think a",
    "start": "1352679",
    "end": "1357799"
  },
  {
    "text": "lot of people like it's would be interesting to to get some numbers on this based on my subjective perception",
    "start": "1357799",
    "end": "1364919"
  },
  {
    "text": "of the JavaScript ecosystem uh I think a very large percentage of JavaScript",
    "start": "1364919",
    "end": "1370480"
  },
  {
    "text": "developers are probably frontend developers and I think this is where",
    "start": "1370480",
    "end": "1375600"
  },
  {
    "text": "effect will probably see at least initially the least usage since I think you get B",
    "start": "1375600",
    "end": "1383080"
  },
  {
    "text": "you get other levers that help you with like de like getting your your job done in the front end I think in the front",
    "start": "1383080",
    "end": "1389640"
  },
  {
    "text": "end you have probably like the way how you do styling with a use something like",
    "start": "1389640",
    "end": "1394679"
  },
  {
    "text": "Tailwind or rics Etc or you might be thinking about should I use solid Etc",
    "start": "1394679",
    "end": "1400480"
  },
  {
    "text": "and then where you would rather use effect is if you do non-trivial stuff on",
    "start": "1400480",
    "end": "1405720"
  },
  {
    "text": "the front endend stuff where things can go wrong things where you need to think about like oh yeah what if this goes",
    "start": "1405720",
    "end": "1412240"
  },
  {
    "text": "wrong what should we do for for the user and so a way how you can think about where you would be reaching for effect",
    "start": "1412240",
    "end": "1419960"
  },
  {
    "text": "uh is in your react hooks when you use the use effect hook you can actually see",
    "start": "1419960",
    "end": "1428080"
  },
  {
    "text": "this as uh it can be a bit confusing but this would be actually a good place",
    "start": "1428080",
    "end": "1433559"
  },
  {
    "text": "where in the react use effect hook you could actually use effect and would be",
    "start": "1433559",
    "end": "1439919"
  },
  {
    "text": "uh a really I've done a meme about this on on Twitter um this is what they call",
    "start": "1439919",
    "end": "1445440"
  },
  {
    "text": "self-documenting yeah but uh it's can be a really nice boundary since I think in",
    "start": "1445440",
    "end": "1452080"
  },
  {
    "text": "the react Community the use effect call is is a bit like notorious for like some",
    "start": "1452080",
    "end": "1457440"
  },
  {
    "text": "people like like it some people hate it and typically things within whatever",
    "start": "1457440",
    "end": "1462919"
  },
  {
    "text": "you're going to put into the use effect call is kind of like okay now you're on your own so this is where you're like",
    "start": "1462919",
    "end": "1469919"
  },
  {
    "text": "you should be very principled like you should return something that cancels the thing that you whatever you triggering",
    "start": "1469919",
    "end": "1476720"
  },
  {
    "text": "in there but on there you're you're left to yourself and this is where you do the fetch call without the arrrow handling",
    "start": "1476720",
    "end": "1483480"
  },
  {
    "text": "Etc and so this is actually the place where you can run some effects and do",
    "start": "1483480",
    "end": "1488600"
  },
  {
    "text": "things in a more principled way if your app demands it so I would say probably",
    "start": "1488600",
    "end": "1495000"
  },
  {
    "text": "most people would rather reach for effect on uh on typescript backends just",
    "start": "1495000",
    "end": "1500480"
  },
  {
    "text": "this is where it kind of matters a bit like where you have more side Effy things where like you do more things",
    "start": "1500480",
    "end": "1506880"
  },
  {
    "text": "that can go wrong and the complexity on the front end is typically more on the",
    "start": "1506880",
    "end": "1512279"
  },
  {
    "text": "on the side of like how you build your how you compose your uis Etc but I think",
    "start": "1512279",
    "end": "1518159"
  },
  {
    "text": "if you're building an app on the order of slack or Discord then your front end",
    "start": "1518159",
    "end": "1523720"
  },
  {
    "text": "is actually very capable and you need to think a lot about concurrency and retry and like and so on and this is where",
    "start": "1523720",
    "end": "1530600"
  },
  {
    "text": "something like effect is super critical got it what would incremental adoption",
    "start": "1530600",
    "end": "1537360"
  },
  {
    "text": "look like for somebody who has an existing app and would like to use effect oh",
    "start": "1537360",
    "end": "1543960"
  },
  {
    "text": "goodness uh Nam space conflict uh yeah what would that look like how would I",
    "start": "1543960",
    "end": "1550200"
  },
  {
    "text": "adopt it you know not Whole Hog but just a little bit at a time is that I assume that's possible yeah totally so I think",
    "start": "1550200",
    "end": "1557760"
  },
  {
    "text": "you should go with whatever pain Point uh is is most critical to you right now",
    "start": "1557760",
    "end": "1564120"
  },
  {
    "text": "I think could be an example on on the on the back end could be a bit easier to to talk about uh let's say you build like a",
    "start": "1564120",
    "end": "1572360"
  },
  {
    "text": "graph endpoint or like maybe you're using something like trpc Etc let's just",
    "start": "1572360",
    "end": "1577559"
  },
  {
    "text": "pick out one however whatever Dimension you you want to choose maybe you want to",
    "start": "1577559",
    "end": "1582720"
  },
  {
    "text": "pick out a specific feature a specific request Handler so if you think about",
    "start": "1582720",
    "end": "1588360"
  },
  {
    "text": "your program in terms of like a tray you could just pick any kind of leaf uh and",
    "start": "1588360",
    "end": "1594720"
  },
  {
    "text": "that leaf could be like a promise right now and you say hey here's I want to improve something here I want to add",
    "start": "1594720",
    "end": "1602080"
  },
  {
    "text": "better error handling here or I want to add some observability here then you can",
    "start": "1602080",
    "end": "1607440"
  },
  {
    "text": "just take that thing that thing could be a promise that thing could be an asnc function or like a regular syc function",
    "start": "1607440",
    "end": "1614880"
  },
  {
    "text": "and you just rewrite that to be an effect and an effect similar to a react",
    "start": "1614880",
    "end": "1620039"
  },
  {
    "text": "component you can think about like there's some analogies there in in terms of mental model uh in that regard that",
    "start": "1620039",
    "end": "1627480"
  },
  {
    "text": "in a component you can you can compose other components so or like a asnc",
    "start": "1627480",
    "end": "1632840"
  },
  {
    "text": "function is the same way like you have a async function you call another async function and it's very similar about uh",
    "start": "1632840",
    "end": "1639240"
  },
  {
    "text": "effect there and so you just say hey this is how much uh time I have right",
    "start": "1639240",
    "end": "1644559"
  },
  {
    "text": "now to refactor and you just refactor your async function to be become an effect and then you have that boundary",
    "start": "1644559",
    "end": "1651120"
  },
  {
    "text": "and then you just call that effect from wherever that Asing function was called",
    "start": "1651120",
    "end": "1656240"
  },
  {
    "text": "before and you run that as a promise and then you have your boundary there and from there you could say okay I don't",
    "start": "1656240",
    "end": "1663399"
  },
  {
    "text": "want to go any further I just want to like let it sit there and and focus on another part or you could from there uh",
    "start": "1663399",
    "end": "1670640"
  },
  {
    "text": "kind of let effect take over more and more of your program and you get a lot of benefits through it since this is",
    "start": "1670640",
    "end": "1677519"
  },
  {
    "text": "where yeah that error handling or like observability I think observability is",
    "start": "1677519",
    "end": "1682840"
  },
  {
    "text": "also super underrated aspect in in most web development and provides so much",
    "start": "1682840",
    "end": "1688159"
  },
  {
    "text": "value this is where you get so many things in just for free so what is the observability story like what exactly",
    "start": "1688159",
    "end": "1694440"
  },
  {
    "text": "does it do for you so I'm not sure how familiar most of the audience is with um",
    "start": "1694440",
    "end": "1700679"
  },
  {
    "text": "with open Telemetry I think in other programming ecosystems it's uh quite a",
    "start": "1700679",
    "end": "1706640"
  },
  {
    "text": "bit more common I think I think the the more you kind of go in like a goang",
    "start": "1706640",
    "end": "1711760"
  },
  {
    "text": "direction or also with with rust uh this is where it's a lot more common place",
    "start": "1711760",
    "end": "1717080"
  },
  {
    "text": "that you instrument your code uh in in some sort of observable way I wish JavaScript was a little bit further",
    "start": "1717080",
    "end": "1723519"
  },
  {
    "text": "ahead there I think most apps were where it's just uh they're just seeped in",
    "start": "1723519",
    "end": "1729399"
  },
  {
    "text": "complexity this is where you typically also see uh the the absolute need for something like observability but I think",
    "start": "1729399",
    "end": "1736679"
  },
  {
    "text": "the and and the JavaScript ecosystem you also see something like Sentry but I'm",
    "start": "1736679",
    "end": "1742399"
  },
  {
    "text": "thinking about uh specifically open Telemetry which allows you to instrument",
    "start": "1742399",
    "end": "1747960"
  },
  {
    "text": "uh allows you to instrument every part of your app and you you get from your app execution you get something that's",
    "start": "1747960",
    "end": "1755559"
  },
  {
    "text": "called a a trace so you can uh think of like a trace that's basically like a",
    "start": "1755559",
    "end": "1761440"
  },
  {
    "text": "visual print of like hey this is what my program has done a trace consists of",
    "start": "1761440",
    "end": "1766640"
  },
  {
    "text": "many small spans you can one way how you can for example Design This is that like",
    "start": "1766640",
    "end": "1772440"
  },
  {
    "text": "most kind of significant functions uh you say hey that I execute that function",
    "start": "1772440",
    "end": "1777640"
  },
  {
    "text": "that should become a span and then you become this you get this this nice tree",
    "start": "1777640",
    "end": "1783200"
  },
  {
    "text": "diagram of your program execution and you see oh like this uh function has",
    "start": "1783200",
    "end": "1788760"
  },
  {
    "text": "taken 12 milliseconds oh what has it done for 12 milliseconds and then you can break it down to oh it has called",
    "start": "1788760",
    "end": "1795360"
  },
  {
    "text": "these other functions and here had written a file and writing that file took 10 milliseconds and then you can",
    "start": "1795360",
    "end": "1800880"
  },
  {
    "text": "dig in like oh why 10 milliseconds and you can like look into performance you can understand where bottlenecks are and",
    "start": "1800880",
    "end": "1808679"
  },
  {
    "text": "you also see when something goes wrong so this is just like most apps you kind",
    "start": "1808679",
    "end": "1814039"
  },
  {
    "text": "of let's say another aspect of the happy path programming you're just flying blindly you have no idea what your",
    "start": "1814039",
    "end": "1820720"
  },
  {
    "text": "program is doing as long as it behaves the way how you want but if something goes wrong then you start adding console",
    "start": "1820720",
    "end": "1828039"
  },
  {
    "text": "logs and console logs don't scale uh and this is where observability comes in",
    "start": "1828039",
    "end": "1833960"
  },
  {
    "text": "Nick are you familiar with open Telemetry are you using it on any of your apps at work or was this all new to",
    "start": "1833960",
    "end": "1840279"
  },
  {
    "text": "you I am one of the the people that is uh trying to scale console logs in a",
    "start": "1840279",
    "end": "1845799"
  },
  {
    "text": "very feudal way oh this is great I like how we just",
    "start": "1845799",
    "end": "1850960"
  },
  {
    "text": "call out Nick just periodically throughout this episode it's all right I think well I I think you're",
    "start": "1850960",
    "end": "1856000"
  },
  {
    "text": "representative I think you're representative I think so too exactly yeah and so okay so if you take one",
    "start": "1856000",
    "end": "1862679"
  },
  {
    "text": "thing away from this conversation of course take away as many things as you like but I think looking into",
    "start": "1862679",
    "end": "1867919"
  },
  {
    "text": "observability tooling for JavaScript typescript apps is something that all",
    "start": "1867919",
    "end": "1874080"
  },
  {
    "text": "y'all should be doing cuz like Yan says console log does not scale and",
    "start": "1874080",
    "end": "1879919"
  },
  {
    "text": "eventually you will need more and you'll wish you had more and if you have something like effect which helps you do",
    "start": "1879919",
    "end": "1886039"
  },
  {
    "text": "these things then you'll be happy when you comes time to debug something particularly gnarly that only happens in",
    "start": "1886039",
    "end": "1892320"
  },
  {
    "text": "production etc etc and you just have all the information that you need so okay so",
    "start": "1892320",
    "end": "1897799"
  },
  {
    "text": "that's cool I I would also point out like one thing that really helps you to do is with JavaScript we have uh",
    "start": "1897799",
    "end": "1904960"
  },
  {
    "text": "JavaScript has a bad rep that is like uh you build apps with JavaScript and they're slow and now people are starting",
    "start": "1904960",
    "end": "1911639"
  },
  {
    "text": "to to reach for rust you can actually build incredibly fast applications with",
    "start": "1911639",
    "end": "1917080"
  },
  {
    "text": "JavaScript is just hard and I think we don't have that uh that's kind of like",
    "start": "1917080",
    "end": "1922720"
  },
  {
    "text": "tribe knowledge in in the JavaScript ecosystem and so the way how we can",
    "start": "1922720",
    "end": "1927799"
  },
  {
    "text": "build fast things is by like leveraging the concurrency Primitives that we have",
    "start": "1927799",
    "end": "1934120"
  },
  {
    "text": "but this is also where JavaScript kind of leaves you on on your own like maybe",
    "start": "1934120",
    "end": "1939200"
  },
  {
    "text": "the the most sophisticated thing like application developer does in regards to",
    "start": "1939200",
    "end": "1944639"
  },
  {
    "text": "concurrency is Promised at all so you say like ha here like I do a few things",
    "start": "1944639",
    "end": "1950039"
  },
  {
    "text": "sequentially like I like do this HP call and then I do this HP call but I could",
    "start": "1950039",
    "end": "1956039"
  },
  {
    "text": "actually do them in uh could do them at the same time so then you reach for",
    "start": "1956039",
    "end": "1961639"
  },
  {
    "text": "promis atall and then you've improv some like bottleneck maybe of your app but",
    "start": "1961639",
    "end": "1967639"
  },
  {
    "text": "this is also where the other problems manifest themselves even further now",
    "start": "1967639",
    "end": "1972799"
  },
  {
    "text": "what if like one of those HP calls goes wrong what should we do with the other one should we cancel the other one",
    "start": "1972799",
    "end": "1979240"
  },
  {
    "text": "should we let the other one still finish so this is where like we could build",
    "start": "1979240",
    "end": "1984919"
  },
  {
    "text": "faster apps but we're so left on our own like how to deal with those sort of",
    "start": "1984919",
    "end": "1991000"
  },
  {
    "text": "situations that need to be designed where we just say okay we're going to build this sequentially it's easier to",
    "start": "1991000",
    "end": "1997000"
  },
  {
    "text": "reason about but then we have slower apps and this is something again effect helps you with but also where",
    "start": "1997000",
    "end": "2003480"
  },
  {
    "text": "observability comes in super critically that you like visually can see oh those two things happen at the same time this",
    "start": "2003480",
    "end": "2010840"
  },
  {
    "text": "one thing actually takes like 10 times as long as the other thing so you get",
    "start": "2010840",
    "end": "2016200"
  },
  {
    "text": "some visibility into what's going on in your in your app so uh all of those",
    "start": "2016200",
    "end": "2021279"
  },
  {
    "text": "practices we're we're like in a way effect is really trying to see hey what",
    "start": "2021279",
    "end": "2026480"
  },
  {
    "text": "what have all of those other programming ecosystems that we're now kind of envious about the for example the rust",
    "start": "2026480",
    "end": "2033120"
  },
  {
    "text": "ecosystem what kind of cool tricks are they using and how can we bring them to the JavaScript ecosystem in the same way",
    "start": "2033120",
    "end": "2041080"
  },
  {
    "text": "as I think how react has very elegantly brought some of the great ideas from",
    "start": "2041080",
    "end": "2046760"
  },
  {
    "text": "other language ecosystems and from other programming paradigms such as functional programming and made them M mainstream",
    "start": "2046760",
    "end": "2054040"
  },
  {
    "text": "kind of undercover turned all all the frontend developers into functional",
    "start": "2054040",
    "end": "2059399"
  },
  {
    "text": "[Music]",
    "start": "2059400",
    "end": "2065868"
  },
  {
    "text": "programmers what's up party people I'm here with Mor grber CTO of kyv Dev friendly headless",
    "start": "2066720",
    "end": "2074800"
  },
  {
    "text": "CMS one of the things I want to do as part of working here with you moris is to help the listeners of JS party to",
    "start": "2074800",
    "end": "2081118"
  },
  {
    "text": "narrow down their selection when looking for a headless CMS that is worth their attention Casey seems to check all the",
    "start": "2081119",
    "end": "2088040"
  },
  {
    "text": "right boxes to make a dev's toys an easy one so when you speak to devs out there",
    "start": "2088040",
    "end": "2093560"
  },
  {
    "text": "looking at a headless CMS what are the challenges they share with you when we speak to developers about the challenges",
    "start": "2093560",
    "end": "2099599"
  },
  {
    "text": "they faced adopting a hatless CMS they always mention that there have been a steep learning curve about the system",
    "start": "2099599",
    "end": "2106640"
  },
  {
    "text": "specific languages and they also want to bring their own front end they want not to be limited on a templating language",
    "start": "2106640",
    "end": "2113720"
  },
  {
    "text": "they love react they want to build and react whatever and with graphql as a single surface layer we make that very",
    "start": "2113720",
    "end": "2121079"
  },
  {
    "text": "easy be future proof and flexible but that's not all it's like most important",
    "start": "2121079",
    "end": "2126960"
  },
  {
    "text": "that you can bring your old data and that's what we solved with our bulk import export API and then if you have a",
    "start": "2126960",
    "end": "2133920"
  },
  {
    "text": "complex data structure imagine you have a author that is related to books and the books have categories you all of a",
    "start": "2133920",
    "end": "2140040"
  },
  {
    "text": "sudden have three layers of nasing and some just stop it too you can't go deeper than two layers of nasing in a",
    "start": "2140040",
    "end": "2146240"
  },
  {
    "text": "curry and that is very frustrating we've been there and we have people with those issues and that's why our API solves all",
    "start": "2146240",
    "end": "2154720"
  },
  {
    "text": "those edge cases so you don't have to build bridges in the front end and compromise your architecture just",
    "start": "2154720",
    "end": "2160839"
  },
  {
    "text": "because of the CMS okay Casey makes it easy bring your own front end react next",
    "start": "2160839",
    "end": "2167319"
  },
  {
    "text": "Astro and many others all you have to know is graphql to get flexible queries",
    "start": "2167319",
    "end": "2172599"
  },
  {
    "text": "and Rapid content retrieval the best place to begin is their free forever tier there's tons of free in that free",
    "start": "2172599",
    "end": "2179760"
  },
  {
    "text": "forever tier but for those who want a lifetime 50% discount use the code GS",
    "start": "2179760",
    "end": "2185880"
  },
  {
    "text": "party go to kc. iio that's C AIS Sy y.",
    "start": "2185880",
    "end": "2190960"
  },
  {
    "text": "iio again [Music]",
    "start": "2190960",
    "end": "2207550"
  },
  {
    "text": "kc. Nick is this something that you would consider adopting at work and if",
    "start": "2208319",
    "end": "2215200"
  },
  {
    "text": "so how would you go about that that's a great question question cuz I'm thinking that exact thing right",
    "start": "2215200",
    "end": "2221599"
  },
  {
    "text": "now well think out loud for us well I think that I don't fully understand like",
    "start": "2221599",
    "end": "2228400"
  },
  {
    "text": "the whole picture I I really like the like the Baseline thing that effects",
    "start": "2228400",
    "end": "2233760"
  },
  {
    "text": "would would give me which is just building in and like like setting a standard for how we're going to handle",
    "start": "2233760",
    "end": "2241040"
  },
  {
    "text": "all of these different things that can happen within the application so like it just brings a greater visibility to that",
    "start": "2241040",
    "end": "2246560"
  },
  {
    "text": "and if that's something that we canar like codify uh within the codebase with this but also just like in the mindset",
    "start": "2246560",
    "end": "2252119"
  },
  {
    "text": "of the developers on the team like that this is something that we have to handle and we like it's just a baseline thing that we have to do rather than assuming",
    "start": "2252119",
    "end": "2259079"
  },
  {
    "text": "the happy path that's a net win but I'm trying to understand like a bit more of what it what it can do and kind of",
    "start": "2259079",
    "end": "2264560"
  },
  {
    "text": "looking at the the website for it again you know it looks like we already talked about like concurrency with it but also",
    "start": "2264560",
    "end": "2271079"
  },
  {
    "text": "it looks like is there like composability with these things like I'm specifically looking at the the pipe I",
    "start": "2271079",
    "end": "2277280"
  },
  {
    "text": "think think the pipelines right so I mean composability is is not a feature",
    "start": "2277280",
    "end": "2283760"
  },
  {
    "text": "as such I think it's rather like a attribute that like your your overall your system has or or doesn't have and I",
    "start": "2283760",
    "end": "2292240"
  },
  {
    "text": "would say composability is is kind of like the ultimate goal that we're all",
    "start": "2292240",
    "end": "2297839"
  },
  {
    "text": "chasing about like we're as like as as developers we kind like dream about like",
    "start": "2297839",
    "end": "2303200"
  },
  {
    "text": "oh there's like this better abstraction and everything will be better with it and I think what we're aiming to to",
    "start": "2303200",
    "end": "2309280"
  },
  {
    "text": "solve there with better abstractions is composability and I think the the best",
    "start": "2309280",
    "end": "2314760"
  },
  {
    "text": "how we got closest to composability and the systems we're we're building I think is with react and just think about the",
    "start": "2314760",
    "end": "2322640"
  },
  {
    "text": "magnitude of like Improvement that react has uh Unleashed on the world like",
    "start": "2322640",
    "end": "2328640"
  },
  {
    "text": "before there was jQuery and jQuery plugins Etc sure that like it there was",
    "start": "2328640",
    "end": "2334560"
  },
  {
    "text": "an ecosystem but they didn't really like fit nicely together and with react we",
    "start": "2334560",
    "end": "2339839"
  },
  {
    "text": "have react components so you can just install one from npm and you can add it to to your app and you got a fair bit of",
    "start": "2339839",
    "end": "2347119"
  },
  {
    "text": "functionality and UI and like you made your app composable we don't really have",
    "start": "2347119",
    "end": "2352319"
  },
  {
    "text": "that for kind of like the the complement to view programming so we don't really",
    "start": "2352319",
    "end": "2358119"
  },
  {
    "text": "have that in let's say in the back end sure we have packages from mpm Etc but",
    "start": "2358119",
    "end": "2365359"
  },
  {
    "text": "uh if they're the more sophis icated they they get the more they try to do",
    "start": "2365359",
    "end": "2371359"
  },
  {
    "text": "the less they won't just work in your context so typically the more",
    "start": "2371359",
    "end": "2377319"
  },
  {
    "text": "sophisticated your requirements are the more you got to like handroll everything by yourself and so I think this is just",
    "start": "2377319",
    "end": "2384480"
  },
  {
    "text": "a testament that we don't really have composable Primitives we don't really",
    "start": "2384480",
    "end": "2390200"
  },
  {
    "text": "have a foundation that we could say like hey that thing does what I want and I just add it to to my app there's like",
    "start": "2390200",
    "end": "2397800"
  },
  {
    "text": "all of those different uh like Styles how something is is written in and then",
    "start": "2397800",
    "end": "2403480"
  },
  {
    "text": "it just doesn't work inside of your app and yeah bringing composability into an",
    "start": "2403480",
    "end": "2409440"
  },
  {
    "text": "ecosystem I think is kind of an ultimate goal and this is what has got me really",
    "start": "2409440",
    "end": "2415119"
  },
  {
    "text": "interested about looking into effect and what what is so mind-blowing to me because I haven't seen it anywhere else",
    "start": "2415119",
    "end": "2422359"
  },
  {
    "text": "are you sold Nick are you in I definitely want to dig deeper I",
    "start": "2422359",
    "end": "2428839"
  },
  {
    "text": "think and and look at it more because it like I said I think it just helps to codify some things that we Overlook and",
    "start": "2428839",
    "end": "2435880"
  },
  {
    "text": "I like that a lot so regardless of effect specifically let's go a little",
    "start": "2435880",
    "end": "2440920"
  },
  {
    "text": "bit meta because I'm interested in adoption practices and I'm curious inside of your work if you decided this",
    "start": "2440920",
    "end": "2448000"
  },
  {
    "text": "was a good direction for us or for me or for your team or whatever like what would you do how would you go about it",
    "start": "2448000",
    "end": "2454839"
  },
  {
    "text": "are you in a position where you could just pull it in into the package Json and go or would you to convince somebody",
    "start": "2454839",
    "end": "2460440"
  },
  {
    "text": "that this is a good idea how does it work at your work I'm at a bit of a the perfect place to try something like this",
    "start": "2460440",
    "end": "2467079"
  },
  {
    "text": "I guess because I am we're pretty deep into a like a completely Greenfield like",
    "start": "2467079",
    "end": "2474400"
  },
  {
    "text": "rewrite of a legacy Angular JS app and",
    "start": "2474400",
    "end": "2479599"
  },
  {
    "text": "you know we're rewriting it in react uh with typescript and it's very much like",
    "start": "2479599",
    "end": "2485760"
  },
  {
    "text": "we're getting towards the end of it but there's still still only like two devs kind of going Full Steam on it right now",
    "start": "2485760",
    "end": "2492520"
  },
  {
    "text": "and the the thing that we're really looking at right now is we kind of like you know we're we're at like 90%",
    "start": "2492520",
    "end": "2497839"
  },
  {
    "text": "completion and like one of the big focuses for me is on that hardening piece like okay we're going to have to",
    "start": "2497839",
    "end": "2503160"
  },
  {
    "text": "bring in other developers into this what let's go back and look at the the practices that we put into place because",
    "start": "2503160",
    "end": "2509359"
  },
  {
    "text": "you know three months ago when we started this these were what we thought were the best practices did they",
    "start": "2509359",
    "end": "2514440"
  },
  {
    "text": "actually play out uh properly and are we actually like running into to problems",
    "start": "2514440",
    "end": "2520680"
  },
  {
    "text": "like like you know when it comes to to air handling and things like that specifically one thing that we really",
    "start": "2520680",
    "end": "2526599"
  },
  {
    "text": "like went full-fledged on for like air handling and things like that are suspense and suspense boundaries within",
    "start": "2526599",
    "end": "2532839"
  },
  {
    "text": "react um but it's still pretty much like mostly you know happy path like here's a",
    "start": "2532839",
    "end": "2537880"
  },
  {
    "text": "fetch call here's a a used query call no air handling associated with that it'll get caught by a suspense boundary at",
    "start": "2537880",
    "end": "2544000"
  },
  {
    "text": "some point and then show some generic error but it's not very like specific to you know this specific thing failed and",
    "start": "2544000",
    "end": "2551720"
  },
  {
    "text": "we don't really account for things like you know making several requests and only one of them fails like what do we do there right now we just show the",
    "start": "2551720",
    "end": "2559680"
  },
  {
    "text": "suspense boundary and don't really retry things so like I think that it's it's",
    "start": "2559680",
    "end": "2565319"
  },
  {
    "text": "interesting and like that is the approach that I would take for like trying to adopt this into to that code",
    "start": "2565319",
    "end": "2570599"
  },
  {
    "text": "base is like how is this going to to make that like that specific piece better because yeah it's really handwavy",
    "start": "2570599",
    "end": "2576880"
  },
  {
    "text": "right now and what is what is that going to mean you know when we bring in more",
    "start": "2576880",
    "end": "2582319"
  },
  {
    "text": "developers onto the project when it's more than just myself and one other person like are we setting up the best",
    "start": "2582319",
    "end": "2587960"
  },
  {
    "text": "practices and patterns to have that carried on that makes a lot of sense and I think there's also interesting double",
    "start": "2587960",
    "end": "2594520"
  },
  {
    "text": "dedge sword there uh like learning effect has a good uh learning curve like",
    "start": "2594520",
    "end": "2600160"
  },
  {
    "text": "it took me a certain period of time to to pick it up and and I learned it when",
    "start": "2600160",
    "end": "2605400"
  },
  {
    "text": "there weren't like any docks so I had the uh the the luxury of like learning directly from the author and like I I",
    "start": "2605400",
    "end": "2611880"
  },
  {
    "text": "use that also to contribute back some ideas how to possibly simplify things but there is still a learning curve it's",
    "start": "2611880",
    "end": "2618480"
  },
  {
    "text": "going to get it's already getting a lot better and we uh there's some really great resources already the docs and",
    "start": "2618480",
    "end": "2625280"
  },
  {
    "text": "also some YouTube videos where the the community is just creating a lot of lot of those resources but learning it takes",
    "start": "2625280",
    "end": "2632720"
  },
  {
    "text": "is an investment but I think it's it's uh paying off big time but you got to bring your your team also on board to be",
    "start": "2632720",
    "end": "2639599"
  },
  {
    "text": "willing uh and to say yes this is how we're going to do it and I think that's going to take a little bit of time that",
    "start": "2639599",
    "end": "2646000"
  },
  {
    "text": "you have like maybe you have just hired a new engineer and that the likelihood of that engineer says like oh of course",
    "start": "2646000",
    "end": "2652839"
  },
  {
    "text": "I've used the effect that my previous company that's going to take a little bit of time until that is a given uh",
    "start": "2652839",
    "end": "2658480"
  },
  {
    "text": "similar to how that's given with with react right now yeah but I think you you probably find the the people who are",
    "start": "2658480",
    "end": "2665359"
  },
  {
    "text": "willing to take that step are probably the the people who just acknowledge like",
    "start": "2665359",
    "end": "2670880"
  },
  {
    "text": "Hey we're no longer in Happy Land mode like we have like all sorts of stuff",
    "start": "2670880",
    "end": "2676079"
  },
  {
    "text": "just like we we can't deal with that complexity any longer we need some help",
    "start": "2676079",
    "end": "2681240"
  },
  {
    "text": "and I think in react is actually one of the better places now in the JavaScript",
    "start": "2681240",
    "end": "2686319"
  },
  {
    "text": "ecosystem I think in the back end there we don't have any suspense boundary Etc",
    "start": "2686319",
    "end": "2691359"
  },
  {
    "text": "if stuff goes wrong it just goes wrong and there's like in it's just a 500 in the face of the user",
    "start": "2691359",
    "end": "2697559"
  },
  {
    "text": "now one one thing that as you were saying that and like talking about you know the complexities of like like it's",
    "start": "2697559",
    "end": "2703119"
  },
  {
    "text": "a it's a big investment into learning all of this uh one for a into something",
    "start": "2703119",
    "end": "2708960"
  },
  {
    "text": "like that that we've done in the past to kind of handle State Management and I my",
    "start": "2708960",
    "end": "2714319"
  },
  {
    "text": "question is I'm curious like how this relates to effect or not uh or like you know could they live together or would",
    "start": "2714319",
    "end": "2721720"
  },
  {
    "text": "they kind of do they serve separate purposes and that is like we really took to adopting State machines in xstate for",
    "start": "2721720",
    "end": "2728960"
  },
  {
    "text": "some complex State Management within uh one of our apps and uh I'm curious like",
    "start": "2728960",
    "end": "2734559"
  },
  {
    "text": "is that solving some of the similar problems in in kind of a different way by giving you those those finite states",
    "start": "2734559",
    "end": "2739640"
  },
  {
    "text": "to to have to handle or could those two projects complement each other right um",
    "start": "2739640",
    "end": "2745680"
  },
  {
    "text": "so we're actually in close contact with David uh who's the creator of X8 and uh",
    "start": "2745680",
    "end": "2752200"
  },
  {
    "text": "we want to figure out like a good integration story between effect and xade and in fact we're going to have",
    "start": "2752200",
    "end": "2757559"
  },
  {
    "text": "David over at the first effect conference in Vienna next February where we hopefully get to announce exactly",
    "start": "2757559",
    "end": "2764319"
  },
  {
    "text": "that so I hope that we uh have a good good answer for that soon and like the",
    "start": "2764319",
    "end": "2770319"
  },
  {
    "text": "the way how I think about the responsibilities of how they could work together is xstate is all about the the",
    "start": "2770319",
    "end": "2776599"
  },
  {
    "text": "state machine part it's like that you know like hey I'm currently in this state and you get a visual",
    "start": "2776599",
    "end": "2781960"
  },
  {
    "text": "representation for that you get like types inferred for that Etc all of that this is where xate shines where xate and",
    "start": "2781960",
    "end": "2790160"
  },
  {
    "text": "similar to react kind of like leaves things up as an exercise to the to the",
    "start": "2790160",
    "end": "2795640"
  },
  {
    "text": "developer is like the state transition like now you do the like in react where",
    "start": "2795640",
    "end": "2800960"
  },
  {
    "text": "you say use effect or in xate when you perform the effect now this is like",
    "start": "2800960",
    "end": "2807440"
  },
  {
    "text": "still up to you there you might still do the Fetch and this is where you're still on your own with the error handling with",
    "start": "2807440",
    "end": "2813839"
  },
  {
    "text": "the retrying with doing things concurrently or like getting some observability insights into what what's",
    "start": "2813839",
    "end": "2821040"
  },
  {
    "text": "happening and this is where they can play really nicely together Vienna in",
    "start": "2821040",
    "end": "2826119"
  },
  {
    "text": "February Nick sounds like a decent place for a remote JS party perhaps that sounds like absolutely tell us more",
    "start": "2826119",
    "end": "2834119"
  },
  {
    "text": "about this conf yeah we we have a a really interesting set of speakers already confirmed so I've mentioned we",
    "start": "2834119",
    "end": "2841640"
  },
  {
    "text": "have David from from xstate over we have G from uh from cell uh giving a talk as",
    "start": "2841640",
    "end": "2848480"
  },
  {
    "text": "well we have a lot of folks from the effect Community who going to present uh",
    "start": "2848480",
    "end": "2853760"
  },
  {
    "text": "the various projects they're working on with effect we have some some other well-known people from the from the",
    "start": "2853760",
    "end": "2860760"
  },
  {
    "text": "typescript community where like taking their their first steps with with effect and and share the experience so yeah and",
    "start": "2860760",
    "end": "2868599"
  },
  {
    "text": "what's exciting to me is like those are all of those folks have in common those are like some of the most experienced",
    "start": "2868599",
    "end": "2874960"
  },
  {
    "text": "Engineers I've I've ever I've ever met in the in the web ecosystem and they all seem to be kind of interested in in",
    "start": "2874960",
    "end": "2882119"
  },
  {
    "text": "effect and where just where where great ideas come come together very cool well",
    "start": "2882119",
    "end": "2887559"
  },
  {
    "text": "the website is effect. website there's a new website",
    "start": "2887559",
    "end": "2893040"
  },
  {
    "text": "that I assume will live at the same website soon johannas gave us a little sneak peek they are working on updating",
    "start": "2893040",
    "end": "2900160"
  },
  {
    "text": "the docs updating the examples making it more useful more approachable I think that's what this project needs because",
    "start": "2900160",
    "end": "2906319"
  },
  {
    "text": "it looks very powerful and as you said there is a learning curve and yet",
    "start": "2906319",
    "end": "2911839"
  },
  {
    "text": "probably worth that learning curve for folks who need this so the more people we can get over the learning curve into",
    "start": "2911839",
    "end": "2917839"
  },
  {
    "text": "using it and making their apps more robust more best practiced more",
    "start": "2917839",
    "end": "2923400"
  },
  {
    "text": "observable more error handled Nick the better right so uh anything else",
    "start": "2923400",
    "end": "2929520"
  },
  {
    "text": "Johannes about the project that you want to make sure we cover before we call the show no I I'm super happy that I got to",
    "start": "2929520",
    "end": "2936880"
  },
  {
    "text": "share like some some of my experience and thoughts on effect like I've been as as you mentioned initially I've been",
    "start": "2936880",
    "end": "2943079"
  },
  {
    "text": "using it for the last two and a half years and the the projects uh and products I've built over that time I",
    "start": "2943079",
    "end": "2949599"
  },
  {
    "text": "could have not have built them without effect I think this is kind of like that the highest praise I can give to a",
    "start": "2949599",
    "end": "2955680"
  },
  {
    "text": "project if it really like provides a lot of value and now it's just up to making",
    "start": "2955680",
    "end": "2960920"
  },
  {
    "text": "it more accessible easier to use uh and help people get to use it so if you're",
    "start": "2960920",
    "end": "2967119"
  },
  {
    "text": "into uh type safety and if you feel like there's too much complexity in your app",
    "start": "2967119",
    "end": "2973079"
  },
  {
    "text": "and you need some better ways to tame it feel free to to check out the website join our Discord we have a really Lively",
    "start": "2973079",
    "end": "2980599"
  },
  {
    "text": "and and helpful Discord Community where you typically get an answer in like round about 30 minutes uh and we going",
    "start": "2980599",
    "end": "2987640"
  },
  {
    "text": "to help you uh adopt effect successfully yeah sounds like you have two great",
    "start": "2987640",
    "end": "2994040"
  },
  {
    "text": "effect I had to I'm sorry I was plan on dropping a Rex in effect joke at some",
    "start": "2994040",
    "end": "2999280"
  },
  {
    "text": "point but I forgot so here it is Rex in effect look it up",
    "start": "2999280",
    "end": "3004640"
  },
  {
    "text": "kids on behalf of Nick ni I'm Jared this is JS party and we will talk to y'all on",
    "start": "3005920",
    "end": "3013440"
  },
  {
    "text": "the next",
    "start": "3013440",
    "end": "3015880"
  },
  {
    "text": "one next up on the Pod Nick and I are joined by the winners of the first ever",
    "start": "3022000",
    "end": "3028520"
  },
  {
    "text": "react Jam react Jam if you haven't heard is an online event where react",
    "start": "3028520",
    "end": "3033760"
  },
  {
    "text": "developers come together to create games in 10 days we talk about the game they built how they won it all and what",
    "start": "3033760",
    "end": "3041079"
  },
  {
    "text": "they're building for react Jam fall 2023 which just kicked off today thanks once",
    "start": "3041079",
    "end": "3046960"
  },
  {
    "text": "again to our partners check them out fast.com fly.io and types sense.org if you dig",
    "start": "3046960",
    "end": "3054440"
  },
  {
    "text": "the show share with a friend and if if you really dig it leave us a festar review social proof for the win right",
    "start": "3054440",
    "end": "3062079"
  },
  {
    "text": "that's all for me but stay tuned we'll throw another party for you next",
    "start": "3062079",
    "end": "3067290"
  },
  {
    "text": "[Music]",
    "start": "3067290",
    "end": "3077000"
  },
  {
    "text": "week",
    "start": "3077000",
    "end": "3080000"
  }
]