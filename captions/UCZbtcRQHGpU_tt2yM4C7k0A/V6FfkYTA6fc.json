[
  {
    "text": "[Music]",
    "start": "330",
    "end": "3740"
  },
  {
    "text": "welcome to practical AI if you work in artificial intelligence aspire to or are",
    "start": "7160",
    "end": "13759"
  },
  {
    "text": "curious how AI related Technologies are changing the world this is the show for you thank you to our partners at fastly",
    "start": "13759",
    "end": "21160"
  },
  {
    "text": "for shipping all of our pods super fast to wherever you listen check them out at",
    "start": "21160",
    "end": "26240"
  },
  {
    "text": "fast.com and to our friends at fly deploy your app and database close to",
    "start": "26240",
    "end": "31359"
  },
  {
    "text": "your users no Ops required learn more at",
    "start": "31359",
    "end": "37000"
  },
  {
    "text": "[Music] fly.io welcome to another episode of",
    "start": "37140",
    "end": "45079"
  },
  {
    "text": "practical AI this is Daniel whack I am the founder of prediction guard and I'm",
    "start": "45079",
    "end": "51360"
  },
  {
    "text": "joined as always by my co-host Chris Benson who is a tech strategist at locked Martin how you doing Chris doing",
    "start": "51360",
    "end": "58480"
  },
  {
    "text": "well today Daniel how are you I am doing so good because uh a lot of my dreams",
    "start": "58480",
    "end": "64960"
  },
  {
    "text": "are are coming true in terms of topics to talk about I've been wanting to talk about Vector databases on the show for",
    "start": "64960",
    "end": "72600"
  },
  {
    "text": "quite some time I know that we've mentioned them but we haven't had a had a full episode on them and I was",
    "start": "72600",
    "end": "77920"
  },
  {
    "text": "scrolling through Linkedin and saw uh a set of amazing posts and very practical",
    "start": "77920",
    "end": "85000"
  },
  {
    "text": "posts about Vector databases that I quickly shared and also sent a message message to prant raal who is a senior Ai",
    "start": "85000",
    "end": "93439"
  },
  {
    "text": "and data engineer at the Royal Bank of Canada welcome prant hi hi thanks so for",
    "start": "93439",
    "end": "98799"
  },
  {
    "text": "having me yeah yeah well now you have a three-part series on Vector databases a",
    "start": "98799",
    "end": "106000"
  },
  {
    "text": "three-part blog series what makes each one different understanding their internals and not all indices are",
    "start": "106000",
    "end": "112680"
  },
  {
    "text": "created equal I hope we can get into a bunch of that but maybe to start out",
    "start": "112680",
    "end": "118200"
  },
  {
    "text": "could you just let us know what a vector database is and in particular why are",
    "start": "118200",
    "end": "123960"
  },
  {
    "text": "people talking about them now for sure so um I think uh the way I want to answer this question is i' like to break",
    "start": "123960",
    "end": "130399"
  },
  {
    "text": "it down into parts and answer each bit sequentially great so to answer what a vector database is well let's start with",
    "start": "130399",
    "end": "137720"
  },
  {
    "text": "what data is in the first place right the definition in my head is data is an organized collection of structured or",
    "start": "137720",
    "end": "145040"
  },
  {
    "text": "semi-structured information and it's stored digitally in a computer now when you have data you need somewhere to put",
    "start": "145040",
    "end": "151280"
  },
  {
    "text": "it so that brings us to the question what is a database so a database is a system that's built for easy access",
    "start": "151280",
    "end": "157599"
  },
  {
    "text": "management and updating and also querying the data at hand we also need to talk about what vectors are vectors",
    "start": "157599",
    "end": "164680"
  },
  {
    "text": "uh you could call them a sort of compressed data representation that contains semantic information about any",
    "start": "164680",
    "end": "170480"
  },
  {
    "text": "underlying entity it could be text images audio anything like that so now we put all of these things together what",
    "start": "170480",
    "end": "176480"
  },
  {
    "text": "is a vector database um a vector database is a purpose-built database",
    "start": "176480",
    "end": "181560"
  },
  {
    "text": "that efficiently manages stores and updates vectors at scale I think the scalability is a very key factor there",
    "start": "181560",
    "end": "188440"
  },
  {
    "text": "and it also retrieves the most similar vectors to given query in a way that",
    "start": "188440",
    "end": "193760"
  },
  {
    "text": "considers the semantics of the query so I think all of these terms holistically come together to form what you",
    "start": "193760",
    "end": "199760"
  },
  {
    "text": "understand as a vector database and when you say semantics what what do you mean in terms of semantics and how that maps",
    "start": "199760",
    "end": "207560"
  },
  {
    "text": "onto a vector so um I'm sure everyone most listeners are familiar with the concept of language models um LMS are",
    "start": "207560",
    "end": "214560"
  },
  {
    "text": "everywhere so uh the thing with semantics is typically a query that you have like if you write a query to like a",
    "start": "214560",
    "end": "221480"
  },
  {
    "text": "search bar on Google or something you're thinking in terms of keywords uh you're just thinking in terms of okay I want",
    "start": "221480",
    "end": "227400"
  },
  {
    "text": "this particular thing this item whatever you're thinking about and you type the word in there where semantics comes in",
    "start": "227400",
    "end": "233439"
  },
  {
    "text": "is did you type in something along the lines of what the data itself has so can",
    "start": "233439",
    "end": "239840"
  },
  {
    "text": "that the query actually translate into something that the database actually",
    "start": "239840",
    "end": "245079"
  },
  {
    "text": "understands and produces the result that is most meaningful to the query that you putting so it's not just about the words",
    "start": "245079",
    "end": "252079"
  },
  {
    "text": "or the features of that word it's also about the meaning of that word and how that comes together in the underlying",
    "start": "252079",
    "end": "257440"
  },
  {
    "text": "internal of cool so before we keep going just because you know you have",
    "start": "257440",
    "end": "263360"
  },
  {
    "text": "developers and data scientists and they've worked with kind of the all the other database types that most of us",
    "start": "263360",
    "end": "268520"
  },
  {
    "text": "have worked with for decades and we have multiple times over the years had to kind of like understand the new thing",
    "start": "268520",
    "end": "275360"
  },
  {
    "text": "that's out and what the you know what the value is no SQL there you go and so like I'm going to jump on that you know",
    "start": "275360",
    "end": "282080"
  },
  {
    "text": "we started with uh the SQL query language with these that are for relational databases and then we went to",
    "start": "282080",
    "end": "289000"
  },
  {
    "text": "nosql uh which there are variants of and things called object databases I",
    "start": "289000",
    "end": "294600"
  },
  {
    "text": "understood your definition of vector but I didn't understand how it related to",
    "start": "294600",
    "end": "299880"
  },
  {
    "text": "the utility or lack thereof in some of those other approaches could you kind of lay the groundwork or the the landscape",
    "start": "299880",
    "end": "306199"
  },
  {
    "text": "of what that is for sure so yeah I mean I'm a total database junkie I love thinking about the various kinds of",
    "start": "306199",
    "end": "312120"
  },
  {
    "text": "databases out there um so actually before we go into that a quick summary on terms of in terms of where I'm coming",
    "start": "312120",
    "end": "317479"
  },
  {
    "text": "from right so I started off as a data scientist uh so I'm fully in your world Daniel and uh it's been a few years down",
    "start": "317479",
    "end": "324600"
  },
  {
    "text": "that road for me and I think for me I've hit that point where I've been lost in",
    "start": "324600",
    "end": "330080"
  },
  {
    "text": "the world of models and Hyper pramet tuning and AF data scientists will relate with that but the more I began",
    "start": "330080",
    "end": "335440"
  },
  {
    "text": "thinking about it there are people who have entire PDS in database Theory right and their implementation um but then the",
    "start": "335440",
    "end": "341520"
  },
  {
    "text": "more I worked with data I realized that you don't need a PhD to understand enough to build a working application",
    "start": "341520",
    "end": "347880"
  },
  {
    "text": "built on top of a database that's when you that began thinking about what exactly are these different flavors that",
    "start": "347880",
    "end": "353520"
  },
  {
    "text": "you have out there right I mean of course we've all come across SQL databases in at some point in our careers if we worked in Tech um so to",
    "start": "353520",
    "end": "360759"
  },
  {
    "text": "answer that question I think the gender history of how these things Spann out is quite interesting I I believe the",
    "start": "360759",
    "end": "366440"
  },
  {
    "text": "origins of theal databases come from you way back in 70s I think when uh this",
    "start": "366440",
    "end": "371680"
  },
  {
    "text": "field called relational algebra was formalized it's a kind of like a you could say a formalization of the",
    "start": "371680",
    "end": "376720"
  },
  {
    "text": "mathematics around what it means to join data query data store data in a database",
    "start": "376720",
    "end": "382280"
  },
  {
    "text": "in a way that is queriable I think SQL databases are so mature so tried in test and the reason they withstood the test",
    "start": "382280",
    "end": "387880"
  },
  {
    "text": "of time is because they View the underlying storage or the underlying data as structured and in many cases you",
    "start": "387880",
    "end": "395000"
  },
  {
    "text": "have structured data that is in the form of transactions and what a transaction basically means is some event happens in",
    "start": "395000",
    "end": "401080"
  },
  {
    "text": "the real world and you log that information and you essentially build up a sequential chain of data which is",
    "start": "401080",
    "end": "406360"
  },
  {
    "text": "basically a table and that's kind of what the relational data model came from and where relational models get",
    "start": "406360",
    "end": "412160"
  },
  {
    "text": "interesting is you have tables that are related to other tables and that kind of",
    "start": "412160",
    "end": "417840"
  },
  {
    "text": "maps into real world complexities where not all data is independent like some of",
    "start": "417840",
    "end": "424039"
  },
  {
    "text": "the data depends on other things like a person person's metadata could depend on what company they work at and things",
    "start": "424039",
    "end": "429720"
  },
  {
    "text": "like that so so that's how relational data kind of became the norm you you people were gathering data from digital",
    "start": "429720",
    "end": "435599"
  },
  {
    "text": "systems and then putting them together and SQL became the sort of standardized query language that you could use to",
    "start": "435599",
    "end": "441599"
  },
  {
    "text": "query data fast forward to Mid 2000s and the nosql movement starts to pick up and",
    "start": "441599",
    "end": "447479"
  },
  {
    "text": "where that comes from is this there's a point Beyond which relational data modeling can become a bit inflexible",
    "start": "447479",
    "end": "453759"
  },
  {
    "text": "like it becomes a bit rigid because in the real world you have data that comes in from various sources now some of that",
    "start": "453759",
    "end": "461120"
  },
  {
    "text": "data can come in very rapidly with the Advent of big data and uh streaming and all these rapid ways of gathering data",
    "start": "461120",
    "end": "467840"
  },
  {
    "text": "that we have today it became very obvious that the schema based approach a schema is basically uh what kind of data",
    "start": "467840",
    "end": "474400"
  },
  {
    "text": "types exist in your table right so the way relational models were built was you needed to define a schema and the schema",
    "start": "474400",
    "end": "480680"
  },
  {
    "text": "kind of was the ground truth the data has this data of this type only and that's what you expect in that all the",
    "start": "480680",
    "end": "486280"
  },
  {
    "text": "time I think the noq movements sort of built on top of the limitations of the",
    "start": "486280",
    "end": "491440"
  },
  {
    "text": "relational approach of defi being pred decided by a schema because to be truly",
    "start": "491440",
    "end": "496879"
  },
  {
    "text": "flexible in terms of the massive amounts of data coming in from various systems you need to have a schema less Approach",
    "start": "496879",
    "end": "502240"
  },
  {
    "text": "at times and the schema list approach basically means you store documents you dump data in semi- structure Json blobs",
    "start": "502240",
    "end": "509159"
  },
  {
    "text": "and things like that in a scalable way and I think horizontally scalable became very very important in that period the",
    "start": "509159",
    "end": "514880"
  },
  {
    "text": "earlier databases that were were relational I think they were more vertically scalable in the sense that",
    "start": "514880",
    "end": "520599"
  },
  {
    "text": "you could just add more and more compute and you essentially scaled up your data that way but now with no SQL the idea of",
    "start": "520599",
    "end": "527360"
  },
  {
    "text": "Distributing the data as documents across multiple machines and having those machines communicate with one another that became a new paradigm uh",
    "start": "527360",
    "end": "535200"
  },
  {
    "text": "but I think the challenge with no SQL is because of the underlying nature that the data need not necessarily be",
    "start": "535200",
    "end": "541480"
  },
  {
    "text": "dependent on on itself like in the sense of relational tables they didn't adhere to the SQL language standard uh and they",
    "start": "541480",
    "end": "549320"
  },
  {
    "text": "kind of diverged uh MB was among the first and there were many others that came after it using Json based query",
    "start": "549320",
    "end": "555480"
  },
  {
    "text": "languages so there was a big bifurcation I guess in you could say the database Community when on one hand you have SQL",
    "start": "555480",
    "end": "562000"
  },
  {
    "text": "enthusiasts who who swear by the declarative nature of SQL and then you have other the other community no SQL",
    "start": "562000",
    "end": "567240"
  },
  {
    "text": "who uses Json essentially query the database they claim it was developer friendly and Json is a developer",
    "start": "567240",
    "end": "573320"
  },
  {
    "text": "friendly interface language agnostic and so on so in some ways it does have its benefits but then depending on your use",
    "start": "573320",
    "end": "580600"
  },
  {
    "text": "and depending on what you're trying to do there are people who will argue on both sides that SQL should be the only thing you should use or no squet tration",
    "start": "580600",
    "end": "586600"
  },
  {
    "text": "should use and so on so does that clarify aspects of both those camps before we move into the modern ones it",
    "start": "586600",
    "end": "592760"
  },
  {
    "text": "does and then if you could distinguish as you go kind of how Vector is different from those others that would be helpful for me I I know and maybe",
    "start": "592760",
    "end": "599480"
  },
  {
    "text": "some other other folks in the audience yeah and I think um maybe one thing that I I loved about your blog post is I see",
    "start": "599480",
    "end": "607920"
  },
  {
    "text": "some of the players from the world that we just talked about represented within",
    "start": "607920",
    "end": "613160"
  },
  {
    "text": "that landscape and then also some that I'm not familiar with or at least that I've seen only recently and so you've",
    "start": "613160",
    "end": "620040"
  },
  {
    "text": "got these different axes like postgress which is a sequel based query language",
    "start": "620040",
    "end": "627160"
  },
  {
    "text": "to a relational database has some part to play in this Vector database",
    "start": "627160",
    "end": "633399"
  },
  {
    "text": "ecosystem um but then others which seem to have their own query language so maybe you could also start to break down",
    "start": "633399",
    "end": "640920"
  },
  {
    "text": "for us so we want to store vectors in databases now to do these sort of semantic queries does that need to be",
    "start": "640920",
    "end": "649079"
  },
  {
    "text": "soared in one or the other of these types of databases that you've talked about developed over time or how has",
    "start": "649079",
    "end": "656079"
  },
  {
    "text": "that happened and what are the sort of major categories of players in in the vector database space absolutely so I",
    "start": "656079",
    "end": "662839"
  },
  {
    "text": "think yeah before we get into the specifics of databases I think to answer Chris's point we definitely do need to",
    "start": "662839",
    "end": "668240"
  },
  {
    "text": "talk about the evolution right I see that Vector databases are a natural evolution of the nosql class of",
    "start": "668240",
    "end": "674000"
  },
  {
    "text": "databases if you imagine a v diagram you have like a circle that represents SQL and the other Circle represents no SQL",
    "start": "674000",
    "end": "681040"
  },
  {
    "text": "you have an intersection that intersection point I believe they're called new SQL now I'm not sure if you",
    "start": "681040",
    "end": "686360"
  },
  {
    "text": "come across that term it's quite interesting but um new SQL they technically use SQL like languages but",
    "start": "686360",
    "end": "692959"
  },
  {
    "text": "they also claim horizontal scalability and a bunch of other things related to acid compliance and all the other things",
    "start": "692959",
    "end": "698040"
  },
  {
    "text": "so it marries the benefits of both SQL and nosql paradigms I was thinking initially where do I place Vector databases does it go in that",
    "start": "698040",
    "end": "704240"
  },
  {
    "text": "intersection or does it sit purely in the nosql camp then I imagine this as you extend that circle that has nosql it",
    "start": "704240",
    "end": "710959"
  },
  {
    "text": "becomes like a blob like a fuzzy amorphous blob no SQL is huge and I",
    "start": "710959",
    "end": "716480"
  },
  {
    "text": "think I in my head Vector databases are like an extension to no SQL and why they came about to understand what vectors",
    "start": "716480",
    "end": "723399"
  },
  {
    "text": "are and how they're stored in database I think it's important to understand what search is and what essentially you're",
    "start": "723399",
    "end": "730360"
  },
  {
    "text": "doing when you query a nosql database so where it comes from is in the early days",
    "start": "730360",
    "end": "735639"
  },
  {
    "text": "I guess uh people were just submitting an exact query using a Json sort of query language like our Mobb has and",
    "start": "735639",
    "end": "743680"
  },
  {
    "text": "that query has to have all the terms or parameters in there that tell you what you want to fetch from the dat right in",
    "start": "743680",
    "end": "750160"
  },
  {
    "text": "a SQL World it will be done with a declarative query in SQL whereas in no SQL you typically do it in Json over",
    "start": "750160",
    "end": "755639"
  },
  {
    "text": "time I think the idea of full text search became very important because I think everyone wants to be able to",
    "start": "755639",
    "end": "761360"
  },
  {
    "text": "retrieve information from massive Blobs of data fitting around and how do you query that right if it's in a no SQL",
    "start": "761360",
    "end": "767399"
  },
  {
    "text": "sort of format if it's not you can't write a SQL query to retrieve it how do you get that information so the idea of",
    "start": "767399",
    "end": "772880"
  },
  {
    "text": "a full text index came about and what what essentially that is is it uses the",
    "start": "772880",
    "end": "778320"
  },
  {
    "text": "concept of invert indexes inverted file indexes sorry where you consider the term frequencies of terms that appear in",
    "start": "778320",
    "end": "785440"
  },
  {
    "text": "a certain document and obviously the relative frequency of how often those terms exist in a document versus the",
    "start": "785440",
    "end": "791959"
  },
  {
    "text": "entire data set so you combine all those things together similar to how tfidf is in data science there's an algorithm",
    "start": "791959",
    "end": "798160"
  },
  {
    "text": "called bm25 which is the most popular uh inverted file index algorithm it's the",
    "start": "798160",
    "end": "803320"
  },
  {
    "text": "most commonly used one for full text search so the early days of search involved how do you scale that up",
    "start": "803320",
    "end": "809320"
  },
  {
    "text": "because you have massive amounts of data how do you build that index very very efficiently and then the querying",
    "start": "809320",
    "end": "814760"
  },
  {
    "text": "interface sits on top of that so you essentially submit a query saying okay I want so and so term in the keyword that",
    "start": "814760",
    "end": "820959"
  },
  {
    "text": "you put in and the inverted file index the bm25 algorithm it considers the",
    "start": "820959",
    "end": "826279"
  },
  {
    "text": "words frequency and it considers subword features and a bunch of other things to intelligently retrieve relevant",
    "start": "826279",
    "end": "832639"
  },
  {
    "text": "documents that contain that term while but also throwing out you know useless words stop words and things like that so",
    "start": "832639",
    "end": "838120"
  },
  {
    "text": "it was more of like a back words sort of approach you consider an NLP analogy it's kind of like a bag of words way of",
    "start": "838120",
    "end": "844000"
  },
  {
    "text": "approaching text now fast forward a few years I think ever since the Transformer Revolution happened people began",
    "start": "844000",
    "end": "850560"
  },
  {
    "text": "observing the obvious power of Transformers in encoding semantics right a Transformer is way better at isolating",
    "start": "850560",
    "end": "858720"
  },
  {
    "text": "meaningful terms in a document especially when when you're doing things like classification retrieval and so on",
    "start": "858720",
    "end": "864240"
  },
  {
    "text": "so how could you merge those benefits of a transformer with what you have in a database so I think Vector databases the",
    "start": "864240",
    "end": "871320"
  },
  {
    "text": "term got coined I think much later after Transformers came about it was mostly called search engines before that a more",
    "start": "871320",
    "end": "877320"
  },
  {
    "text": "generic term I think a catchall term for anything that involes search but nowadays I believe search engine refers",
    "start": "877320",
    "end": "883199"
  },
  {
    "text": "to a more like you consider semantics as a key component so essentially vectors",
    "start": "883199",
    "end": "888480"
  },
  {
    "text": "are the only thing that can do that so to really describe what a vector is",
    "start": "888480",
    "end": "893800"
  },
  {
    "text": "essentially you have a language model typically a Transformer based language model that you use to embed the",
    "start": "893800",
    "end": "902399"
  },
  {
    "text": "representation of a sentence into tokens and the representation is stored as a vector the vector that you have",
    "start": "902399",
    "end": "909480"
  },
  {
    "text": "essentially for a particular sentence typically those are done using sentence Transformers which is the most common kind of model you use that essentially",
    "start": "909480",
    "end": "916519"
  },
  {
    "text": "embeds the entire schematics of that sentence in the vector and then the way this scales up is you consider the",
    "start": "916519",
    "end": "924399"
  },
  {
    "text": "context of each and every token in that Vector in a way that when you submit a query the semantics of the query are",
    "start": "924399",
    "end": "930680"
  },
  {
    "text": "mapped to the vector in database and you can find a similarity between what you entered as a query and what exists in",
    "start": "930680",
    "end": "936040"
  },
  {
    "text": "the data so the a vector is a very powerful way of you could say compressing the representation of",
    "start": "936040",
    "end": "942759"
  },
  {
    "text": "meaning in a in a sentence or a document in a way that scales up numerically and",
    "start": "942759",
    "end": "948839"
  },
  {
    "text": "you can rapidly query that in in",
    "start": "948839",
    "end": "952720"
  },
  {
    "text": "additional this is a chang log news break we've talked about prompt injection",
    "start": "956360",
    "end": "961759"
  },
  {
    "text": "quite a bit since chat GPT ushered in the llm era in brief that's where you",
    "start": "961759",
    "end": "967839"
  },
  {
    "text": "handcraft a prompt that tricks a chatbot into not following its own rules well",
    "start": "967839",
    "end": "973720"
  },
  {
    "text": "new research has uncovered some new llm attacks on the Block which aren't exactly that quote large language models",
    "start": "973720",
    "end": "981680"
  },
  {
    "text": "like chat GPT bar or clawed undergo extensive fine-tuning to not produce",
    "start": "981680",
    "end": "987600"
  },
  {
    "text": "harmful content in their responses to users questions although several studies have demonstrated so-called jailbreaks",
    "start": "987600",
    "end": "995079"
  },
  {
    "text": "which are special queries that can still induce unintended responses these require a substantial amount of manual",
    "start": "995079",
    "end": "1001759"
  },
  {
    "text": "effort to design and can often easily be patched by llm providers this work",
    "start": "1001759",
    "end": "1007440"
  },
  {
    "text": "studies the safety of such models in a more systematic fashion we demonstrate that it is in fact possible to",
    "start": "1007440",
    "end": "1013920"
  },
  {
    "text": "automatically construct adversarial attacks on llms specifically chosen sequences of",
    "start": "1013920",
    "end": "1020000"
  },
  {
    "text": "characters that when appended to a user query will cause the system to obey user commands even if it produces harmful",
    "start": "1020000",
    "end": "1027038"
  },
  {
    "text": "content end quote the biggest difference here is that they're achieving the Jailbreak in an entirely automated",
    "start": "1027039",
    "end": "1033798"
  },
  {
    "text": "fashion and they make a case for the possibility that such Behavior may never be fully patchable by llm providers game",
    "start": "1033799",
    "end": "1041678"
  },
  {
    "text": "over man it's game over what are we going to do now what are we going to do you just heard one of our five top",
    "start": "1041679",
    "end": "1049200"
  },
  {
    "text": "stories from Monday's Chang log news subscribe to the podcast to get all of the week's top stories and pop your",
    "start": "1049200",
    "end": "1055760"
  },
  {
    "text": "email address in at Chang log.com newws to also receive our free companion email",
    "start": "1055760",
    "end": "1061160"
  },
  {
    "text": "with even more the developer news worth your attention once again that's changel",
    "start": "1061160",
    "end": "1066240"
  },
  {
    "text": "log.com [Music]",
    "start": "1066240",
    "end": "1071499"
  },
  {
    "text": "newws so prant you kind of alluded to this and I think that explanation was",
    "start": "1071520",
    "end": "1076640"
  },
  {
    "text": "amazing of how this vector-based semantic search really exploded around",
    "start": "1076640",
    "end": "1082480"
  },
  {
    "text": "the time that Transformers and large language models did I think even in this past let's say year there's been this",
    "start": "1082480",
    "end": "1090120"
  },
  {
    "text": "huge explosion of interest in Vector databases could you maybe describe a",
    "start": "1090120",
    "end": "1096520"
  },
  {
    "text": "little bit so we know that you can search a vector database to find similar statements let's say or similar chunks",
    "start": "1096520",
    "end": "1103880"
  },
  {
    "text": "of texts where the similarity is based on semantics how are people using them with",
    "start": "1103880",
    "end": "1110200"
  },
  {
    "text": "regards to their Ai workflows and how does that kind of correspond to what's",
    "start": "1110200",
    "end": "1116799"
  },
  {
    "text": "sort of popular right now in terms of what people are exploring with AI so yeah I think I need to highlight the",
    "start": "1116799",
    "end": "1122960"
  },
  {
    "text": "fact that I'm both fascinated and frustrated by the current state of marketing in datab bases both at the",
    "start": "1122960",
    "end": "1128320"
  },
  {
    "text": "same time I'm genuinely interested in the use cases don't get me wrong um when combined with llms L language models",
    "start": "1128320",
    "end": "1135240"
  },
  {
    "text": "like chat GPT um you could say any sort of language model layered on top of a vector database can",
    "start": "1135240",
    "end": "1141400"
  },
  {
    "text": "be used to build some very very interesting applications one of those interesting applications is querying",
    "start": "1141400",
    "end": "1147240"
  },
  {
    "text": "your data VI natural language I think this has always been a dream of data scientists and people who work with data right rather than writing my query by",
    "start": "1147240",
    "end": "1154760"
  },
  {
    "text": "hand or constructing the query being taking me from the ground up can I just talk in natural language and have the",
    "start": "1154760",
    "end": "1160760"
  },
  {
    "text": "database kind of respond to that query in national language as well the application will be built using an nlm",
    "start": "1160760",
    "end": "1167159"
  },
  {
    "text": "at the core and essentially that would be powering the whole translation of human instruction to machine instruction",
    "start": "1167159",
    "end": "1173039"
  },
  {
    "text": "and back back to human uh I could go to the details of specific applications um but one thing I do want to maybe throw",
    "start": "1173039",
    "end": "1179880"
  },
  {
    "text": "back at you is I know this is a practical AI podcast right so I guess what I was hoping to get into is um I",
    "start": "1179880",
    "end": "1186760"
  },
  {
    "text": "have an idea for a four blog post and uh in the series basically part of it is the trade-offs right what really",
    "start": "1186760",
    "end": "1193240"
  },
  {
    "text": "interests me about the various Vector databases out there and why I be began writing about these at length is when it",
    "start": "1193240",
    "end": "1199440"
  },
  {
    "text": "comes to understanding what tool to use in the real world when you have a business problem when you have a",
    "start": "1199440",
    "end": "1204799"
  },
  {
    "text": "particular case you're trying to address obviously there's tons of information out there you could go out and read a",
    "start": "1204799",
    "end": "1209840"
  },
  {
    "text": "bunch of blogs and papers and come up with your you know trade-offs but I think it makes sense to actually walk",
    "start": "1209840",
    "end": "1215360"
  },
  {
    "text": "through some of these these tradeoffs and my understanding is that as you go through these tradeoffs you actually",
    "start": "1215360",
    "end": "1221240"
  },
  {
    "text": "begin formulating the actual the value of these things much more clearly and uh",
    "start": "1221240",
    "end": "1226440"
  },
  {
    "text": "in my head I think it makes sense to talk about the use case is once we go through some of these key tradeoffs because in many ways using a tool",
    "start": "1226440",
    "end": "1232960"
  },
  {
    "text": "depends on what goes into it and what you thought about the different options that you use you can Dive Right In because yeah I I I had follow-ups which",
    "start": "1232960",
    "end": "1239280"
  },
  {
    "text": "were essentially what you're what I think you're about to cover anyway so I'll just leave the mic with you man for",
    "start": "1239280",
    "end": "1245080"
  },
  {
    "text": "sure yeah uh so basically um it makes a lot of sense to write about this and obviously read it at your own time but",
    "start": "1245080",
    "end": "1251039"
  },
  {
    "text": "this is a great place for me to begin talking about it and eventually I'll put these down in words as well so I've broken these down into I think roughly",
    "start": "1251039",
    "end": "1258280"
  },
  {
    "text": "eight categories and um the trade-offs I'm specifically speaking about what do you need to think about when you're",
    "start": "1258280",
    "end": "1263360"
  },
  {
    "text": "thinking about a database and this will answer exactly what you talked about earlier Daniel about the so the first thing I think Daniel mentioned is the",
    "start": "1263360",
    "end": "1270600"
  },
  {
    "text": "idea of deciding between existing databases that have been around you know document format and things like that",
    "start": "1270600",
    "end": "1276679"
  },
  {
    "text": "versus newly designed databases specifically for vectors right so I'm going to call it purpose-built vendors",
    "start": "1276679",
    "end": "1283320"
  },
  {
    "text": "versus incumbent or existing vendors right so I think it's very important to",
    "start": "1283320",
    "end": "1288880"
  },
  {
    "text": "understand in many cases you might just be looking to add semantic search capability or just retrieving",
    "start": "1288880",
    "end": "1295039"
  },
  {
    "text": "information using semantics on top of an existing application right and that existing application could very well be",
    "start": "1295039",
    "end": "1300640"
  },
  {
    "text": "built on a well-known tried and tested solution like elastic search post and so",
    "start": "1300640",
    "end": "1305720"
  },
  {
    "text": "on there's many solutions out there uh and obviously in those cases it makes sense to just say hey but why can't I",
    "start": "1305720",
    "end": "1311720"
  },
  {
    "text": "just leverage the vector index or the vector storage of that database itself like for example you mentioned postgress",
    "start": "1311720",
    "end": "1318679"
  },
  {
    "text": "one real big concern with this is um if you look at some of the material online on the performance of these the methods",
    "start": "1318679",
    "end": "1326039"
  },
  {
    "text": "of PG Vector PG Vector is basically the vector plugin addon to post and there's",
    "start": "1326039",
    "end": "1331159"
  },
  {
    "text": "been enough documentation about this uh but it essentially the way it's being slapped on to post is as like an add-on",
    "start": "1331159",
    "end": "1338400"
  },
  {
    "text": "it's like built by a third party called super base and they add a vector functionality to the existing engine",
    "start": "1338400",
    "end": "1344120"
  },
  {
    "text": "that post has so by its very nature because it's not tightly integrated ated with the underlying internals of the",
    "start": "1344120",
    "end": "1350600"
  },
  {
    "text": "database itself like the storage layer the indexing and all of that you're going to miss out on a lot of optimization not you but the technology",
    "start": "1350600",
    "end": "1357240"
  },
  {
    "text": "is basically not optimized from the ground up to speed of indexing performance during querying and so on",
    "start": "1357240",
    "end": "1363919"
  },
  {
    "text": "and this has been well documented so that is a very big concern it depending on your use case and how much accuracy",
    "start": "1363919",
    "end": "1369240"
  },
  {
    "text": "and what quality of results you want are you better off using an existing database that you already have in your",
    "start": "1369240",
    "end": "1375120"
  },
  {
    "text": "stack or actually bringing on a new tried and test purpose-built database for that very reason right uh and from",
    "start": "1375120",
    "end": "1382679"
  },
  {
    "text": "my experience I've been tinkering around with quite a few options out there with purpose built vendors in my opinion they",
    "start": "1382679",
    "end": "1388679"
  },
  {
    "text": "are always a better solution in terms of scalability efficiency and also accessing the latest technology like the",
    "start": "1388679",
    "end": "1394840"
  },
  {
    "text": "latest algorithms out there what indexing algorithms are out there how do they get the best ban for buck in terms",
    "start": "1394840",
    "end": "1401039"
  },
  {
    "text": "of your speed of indexing the quality of query results the latency of those results and so on so I feel like in the",
    "start": "1401039",
    "end": "1407559"
  },
  {
    "text": "long term if you actually are serious about building a vector search or large",
    "start": "1407559",
    "end": "1412640"
  },
  {
    "text": "scale information retrieval system that considers semantics it makes far more sense to think about a purpose built",
    "start": "1412640",
    "end": "1418440"
  },
  {
    "text": "solution many many database Solutions are out there I've listed some of those in my blob and I think those are going to win out over the incumbent vendors",
    "start": "1418440",
    "end": "1427240"
  },
  {
    "text": "who have kind of built you know Vector offerings as you can call them what we're talking about is exactly what I",
    "start": "1427240",
    "end": "1433000"
  },
  {
    "text": "had hoped we would talk about in this episode because your blog posts were so were so practical terms of how you think",
    "start": "1433000",
    "end": "1439840"
  },
  {
    "text": "about the infrastructure that you work with daytoday would you recommend because sometimes you don't know how",
    "start": "1439840",
    "end": "1447120"
  },
  {
    "text": "much you need to optimize at the beginning and you can over optimize right so would it be a valid maybe",
    "start": "1447120",
    "end": "1454400"
  },
  {
    "text": "stepping stone to say if I'm already working with postgress I could try out the vector capability of that and if it",
    "start": "1454400",
    "end": "1461159"
  },
  {
    "text": "works for my use case and I don't have you know 3 million documents that I'm",
    "start": "1461159",
    "end": "1466240"
  },
  {
    "text": "searching over maybe it's maybe it's fine I just have a you know I'm doing my personal blog or something and then kind",
    "start": "1466240",
    "end": "1472799"
  },
  {
    "text": "of optimize as you hit a wall or is there danger in kind of trying to make",
    "start": "1472799",
    "end": "1478679"
  },
  {
    "text": "that put a square peg in a in a round hole sort of thing and get yourself in",
    "start": "1478679",
    "end": "1484159"
  },
  {
    "text": "trouble you hit the nail on the head I I was going to exactly say put a square bag in a round hole because I face those",
    "start": "1484159",
    "end": "1490080"
  },
  {
    "text": "issues myself I won't name exact database vendors but I've work with SQL and nosql databases and which obviously",
    "start": "1490080",
    "end": "1497000"
  },
  {
    "text": "have Vector Solutions I think the challenge and the issue with saying that okay I already have something that works",
    "start": "1497000",
    "end": "1503640"
  },
  {
    "text": "is you got to remember that every single database that has existed for I think more than 10 years the DAT databases",
    "start": "1503640",
    "end": "1509520"
  },
  {
    "text": "come with package and they have their own Tech debt that is associated with the underlying programming language",
    "start": "1509520",
    "end": "1515760"
  },
  {
    "text": "they're built on uh there's years of decision- making and Architectural decisions under the hood that they've",
    "start": "1515760",
    "end": "1521120"
  },
  {
    "text": "taken to implement Solutions the way they have so they can't just throw all of that away and then build a vector solution that is optimized from day one",
    "start": "1521120",
    "end": "1527919"
  },
  {
    "text": "right it's going to take a fair amount of time before these incumbent vendors are able to optimize their offerings to",
    "start": "1527919",
    "end": "1533320"
  },
  {
    "text": "point that perform as well as purpose built vendors because these purpose build vendors have spent thousands of",
    "start": "1533320",
    "end": "1539000"
  },
  {
    "text": "maners I guess per offering in just tuning and building for a very specific goal so what I noticed in my experiments",
    "start": "1539000",
    "end": "1546720"
  },
  {
    "text": "is that a lot of features that you take for granted in a purpose buildt offering are not even available in the existing",
    "start": "1546720",
    "end": "1552279"
  },
  {
    "text": "solution like PG Vector is a very very young uh solution right now um elastic searches Vector offer",
    "start": "1552279",
    "end": "1559200"
  },
  {
    "text": "I've worked with that as well it is also I mean considering elastic church has been around for so long they only",
    "start": "1559200",
    "end": "1564360"
  },
  {
    "text": "released their first Vector like Ann algorithm I think last year like 2022 so",
    "start": "1564360",
    "end": "1569799"
  },
  {
    "text": "in terms of a databases uh capabilities that's very very young so I would say like there's a lot of things that you",
    "start": "1569799",
    "end": "1574919"
  },
  {
    "text": "could potentially be missing or lacking and I cover some of those in my other trade-offs that I list as we go forward",
    "start": "1574919",
    "end": "1580159"
  },
  {
    "text": "yeah yeah let's go on to those I'm I'm curious what number two is for sure the number two is uh I came across this in",
    "start": "1580159",
    "end": "1586919"
  },
  {
    "text": "my first blog and reading some of the comments on there and one of them brought up this fact that the trade-off between using a database set allows you",
    "start": "1586919",
    "end": "1594919"
  },
  {
    "text": "to build your own embedding pipeline or versus using a buil-in hosted sort of",
    "start": "1594919",
    "end": "1601200"
  },
  {
    "text": "embedding Pipeline and by that I mean how do you generate these embeddings all these vectors right many people are",
    "start": "1601200",
    "end": "1606679"
  },
  {
    "text": "familiar with sentence Transformers it's available on hugging phas and a bunch of other open source platforms so",
    "start": "1606679",
    "end": "1612399"
  },
  {
    "text": "essentially it's quite easy or you could say it's stal to put your data into these pipelines and generate sentence",
    "start": "1612399",
    "end": "1619080"
  },
  {
    "text": "embeddings that you can just use to ingest in into a database alongside your actual data so you have your document",
    "start": "1619080",
    "end": "1625159"
  },
  {
    "text": "data that has all the fields and attributes that you have in there alongside the vectors that encode the",
    "start": "1625159",
    "end": "1630520"
  },
  {
    "text": "useful information in that that you want to query on so that's a relatively trivial thing to do but there are",
    "start": "1630520",
    "end": "1636000"
  },
  {
    "text": "certain database vendors who offer convenience features on top of that where they embed the API of these models",
    "start": "1636000",
    "end": "1642039"
  },
  {
    "text": "inside their own offering so if you're just getting started and you don't know much about how vectors work or how you",
    "start": "1642039",
    "end": "1648000"
  },
  {
    "text": "know lens work any of these things that might be something to consider you might be better off using something like wv8",
    "start": "1648000",
    "end": "1653960"
  },
  {
    "text": "which has pipelines built in where you can just tell it okay connect to hugging phas so and so water and it will build",
    "start": "1653960",
    "end": "1661120"
  },
  {
    "text": "the embeddings for you as opposed to you writing your own custom Transformer pipeline that actually takes in the",
    "start": "1661120",
    "end": "1666480"
  },
  {
    "text": "vectors generates the vectors and so on now if you have experience with Transformer models you might be far",
    "start": "1666480",
    "end": "1672279"
  },
  {
    "text": "better off in doing all of the embedding work Upstream paralyzing and optimizing",
    "start": "1672279",
    "end": "1679080"
  },
  {
    "text": "that portion generating those at scale and optimizing and from a cost perspective getting those done with the",
    "start": "1679080",
    "end": "1685159"
  },
  {
    "text": "least resources and you know most quality that you can and then just sending the vectors over to your",
    "start": "1685159",
    "end": "1690480"
  },
  {
    "text": "database so this is an important thing to consider depending on the level of experience that you your developers have",
    "start": "1690480",
    "end": "1695679"
  },
  {
    "text": "in your team um to actually bring bring the vectors in gotcha that makes perfect sense what are some of the other",
    "start": "1695679",
    "end": "1701360"
  },
  {
    "text": "trade-offs so then the other thing is uh the two key stages right you could say",
    "start": "1701360",
    "end": "1706919"
  },
  {
    "text": "you could break down um when you use a vector database as a developer the first",
    "start": "1706919",
    "end": "1712000"
  },
  {
    "text": "stage is the input which is essentially building the index right I go to the indexing methods in a bit more detail uh",
    "start": "1712000",
    "end": "1718760"
  },
  {
    "text": "that's not really a trade-off it's more about knowing what indexing even does under the hood but what indexing means",
    "start": "1718760",
    "end": "1724360"
  },
  {
    "text": "is you have data that you need to encode into a vector right now it's not as simple as just dumping a vector which is",
    "start": "1724360",
    "end": "1731440"
  },
  {
    "text": "like an array of numbers onto your database you have to be able to search through those vectors so the goal of",
    "start": "1731440",
    "end": "1738159"
  },
  {
    "text": "indexing is to design uh efficient data structures and store the vectors using",
    "start": "1738159",
    "end": "1744519"
  },
  {
    "text": "those efficient index data structures in a way that they can be queried efficiently and at scale so that is an",
    "start": "1744519",
    "end": "1750279"
  },
  {
    "text": "upstream process you do that once up front you bring all your data in it's index and now you have a bunch of",
    "start": "1750279",
    "end": "1755440"
  },
  {
    "text": "vectors in there that are searchable the downstream portion of that is querying right it's basically like inference in",
    "start": "1755440",
    "end": "1761159"
  },
  {
    "text": "NLP the query stage involves you taking the user input transforming that into a",
    "start": "1761159",
    "end": "1766600"
  },
  {
    "text": "vector just like you did your Raw data uh and the vector embedding that you use there is the embedding model that you",
    "start": "1766600",
    "end": "1772039"
  },
  {
    "text": "use toly transform your data so that they're compatible so that's a downstream step you're clearly separating the indexing step from the",
    "start": "1772039",
    "end": "1778679"
  },
  {
    "text": "query step right so the trade-off here is is your database optimizing for",
    "start": "1778679",
    "end": "1784720"
  },
  {
    "text": "indexing speed or query speed or is it mature enough that it has optimized for",
    "start": "1784720",
    "end": "1790080"
  },
  {
    "text": "both and if you look through all the offerings out there many of the existing vendors have focused more on one end of",
    "start": "1790080",
    "end": "1797000"
  },
  {
    "text": "the pipeline and not so much on the other some of them are faster at indexing and not so much at querying but some of them are way better at querying",
    "start": "1797000",
    "end": "1803080"
  },
  {
    "text": "and much much slower during indexing so generating that index actually can be a very expensive step because it's not",
    "start": "1803080",
    "end": "1809159"
  },
  {
    "text": "only about using a sentence embedding model or a Transformer it's also about the database being able to translate",
    "start": "1809159",
    "end": "1816720"
  },
  {
    "text": "those vectors into an index and it can actually query so depending on the size of your data this could take hours or even days like it's not unheard of of",
    "start": "1816720",
    "end": "1823120"
  },
  {
    "text": "here of indexing the uh periods of the order of days um and of course depending on your the amount of money you're",
    "start": "1823120",
    "end": "1829559"
  },
  {
    "text": "throwing at it you could go use gpus to speed up the vectorization and and use multiple you know parall instances of",
    "start": "1829559",
    "end": "1835679"
  },
  {
    "text": "the database to scale that portion up but that's exactly it the trade-off here is how important is indexing speed if",
    "start": "1835679",
    "end": "1841440"
  },
  {
    "text": "your data is coming in in a stream at a very rapid rate it's important to consider indexing speed as an important",
    "start": "1841440",
    "end": "1847480"
  },
  {
    "text": "criteria but then if you're not so interested in dumping large amounts of data very quickly but more interested in",
    "start": "1847480",
    "end": "1853519"
  },
  {
    "text": "serving results to a very large number of users you know asynchronously then gr",
    "start": "1853519",
    "end": "1858639"
  },
  {
    "text": "SC becomes very very important I know we don't want to necessarily uh call out",
    "start": "1858639",
    "end": "1864159"
  },
  {
    "text": "certain players in the space but I think a lot of people are already familiar with a lot of the names here so um maybe",
    "start": "1864159",
    "end": "1871080"
  },
  {
    "text": "if you could just highlight from your perspective what are maybe some of the ones that are maybe more like you're",
    "start": "1871080",
    "end": "1876919"
  },
  {
    "text": "saying mature in how they're thinking about both of those phases whereas maybe",
    "start": "1876919",
    "end": "1882120"
  },
  {
    "text": "certain ones that are optimizing more on one side or the other which like you said depending on your use cases going",
    "start": "1882120",
    "end": "1888039"
  },
  {
    "text": "to be a good thing or it might be a bad thing and so it's really about use case it's not so much about the goodness or",
    "start": "1888039",
    "end": "1895480"
  },
  {
    "text": "or the how amazing a certain offering is but more about use case yeah absolutely so as you say I'm not going to call out",
    "start": "1895480",
    "end": "1901440"
  },
  {
    "text": "specific I mean to be fair everyone every vendor makes trade-offs right they themselves are obviously juggling a lot",
    "start": "1901440",
    "end": "1907039"
  },
  {
    "text": "of their own trade-offs when they build these things but I obviously haven't used every single one out there uh but",
    "start": "1907039",
    "end": "1913039"
  },
  {
    "text": "the ones I have worked with um the most mature ones I think milis is an open source uh purpose built database it's",
    "start": "1913039",
    "end": "1919919"
  },
  {
    "text": "been around the longest among the longest I think in the vector database Market it's extremely scalable I mean",
    "start": "1919919",
    "end": "1925559"
  },
  {
    "text": "the I I like to think i' I've written in my blog I call it uh mil throws a kitchen sink and the refrigerator at the",
    "start": "1925559",
    "end": "1931720"
  },
  {
    "text": "vector problem so uh it can really had like billions of data points I mean it's it's designed for that and obviously it",
    "start": "1931720",
    "end": "1938120"
  },
  {
    "text": "has had time it's been around for about four or five years I wouldn't say that that would be my go to First Choice uh",
    "start": "1938120",
    "end": "1943440"
  },
  {
    "text": "that's my own personal preference to be honest it's more about I guess usability how accessible their python client is",
    "start": "1943440",
    "end": "1949360"
  },
  {
    "text": "and so on then other vendors like V Quant I very very optimized for this",
    "start": "1949360",
    "end": "1954639"
  },
  {
    "text": "reason so you could say that these are very very powerful solutions they scale really well they ingest data really",
    "start": "1954639",
    "end": "1959799"
  },
  {
    "text": "quickly and they also Supply query results very quickly and relatively accurately as well to be fair I think",
    "start": "1959799",
    "end": "1965240"
  },
  {
    "text": "the existing database vendors like elastic search postest they're not there yet in terms of the speed and that's",
    "start": "1965240",
    "end": "1971600"
  },
  {
    "text": "partly because they're general purpose databases they're not specialized Vector databases so it makes sense that they",
    "start": "1971600",
    "end": "1977440"
  },
  {
    "text": "have to deal with other priorities and they cannot optimize for all of these things with the laser focus that you",
    "start": "1977440",
    "end": "1982679"
  },
  {
    "text": "know purpose buil vendors have thank you so much uh pant for helping us start to",
    "start": "1982679",
    "end": "1988440"
  },
  {
    "text": "pick apart some of these tradeoffs and I'm starting to structure things in my",
    "start": "1988440",
    "end": "1993880"
  },
  {
    "text": "mind in a useful way which is is really great because I've also been exploring a lot of these and I agree with you",
    "start": "1993880",
    "end": "2000240"
  },
  {
    "text": "there's there's a lot of also new entrance into the field that show a lot of promise even the ones that aren't",
    "start": "2000240",
    "end": "2007039"
  },
  {
    "text": "quite as mature yet yet what are some of the other you mentioned eight I think I don't know if we've been through three",
    "start": "2007039",
    "end": "2012320"
  },
  {
    "text": "or four yet I I wasn't keeping track I might have to speed things up a bit just kind of list them off at least yeah okay",
    "start": "2012320",
    "end": "2018639"
  },
  {
    "text": "so so maybe I I quickly go through at high level then we can go into fin details of which ones you think are the most interesting yeah so okay let me",
    "start": "2018639",
    "end": "2025159"
  },
  {
    "text": "summarize the first three um it's basically purpose built versus existing solution right that's number one number",
    "start": "2025159",
    "end": "2031760"
  },
  {
    "text": "two was external embedding pipeline versus built-in uh hosting pipeline uh number three is index ing speed versus",
    "start": "2031760",
    "end": "2038919"
  },
  {
    "text": "querying speed so I think the others are um going more into the actual indexes and generation of those indexes in more",
    "start": "2038919",
    "end": "2045399"
  },
  {
    "text": "detail so I'll go through them number four is recall versus latency that's more related to how accurate are the",
    "start": "2045399",
    "end": "2052200"
  },
  {
    "text": "results versus how fast am I retrieving those results number five is in memory",
    "start": "2052200",
    "end": "2057398"
  },
  {
    "text": "index versus on disk index I think this is a very big one for the future so we definitely want to go into I think some",
    "start": "2057399",
    "end": "2062599"
  },
  {
    "text": "of the details of that number six is sparse versus dense vectors the kind of",
    "start": "2062599",
    "end": "2068280"
  },
  {
    "text": "vectors themselves that are underlying the index uh number seven is the importance of hybrid search where it's",
    "start": "2068280",
    "end": "2075000"
  },
  {
    "text": "full text search combined with Vector search they both have their own trade-offs and I think the last one is",
    "start": "2075000",
    "end": "2082079"
  },
  {
    "text": "um importance of filtering so pre-filtering versus post-filtering do decide the quality of your search result",
    "start": "2082079",
    "end": "2088760"
  },
  {
    "text": "yeah I am very curious about this in memory or on disk one well I'm",
    "start": "2088760",
    "end": "2094358"
  },
  {
    "text": "interested in all of them but I know one of the things that come has come up in several of the applications that I've",
    "start": "2094359",
    "end": "2100920"
  },
  {
    "text": "worked on has been okay do we self-host one of these things do we use the manage",
    "start": "2100920",
    "end": "2106880"
  },
  {
    "text": "service because they're going to be able to you know scale up and optimize things there's also the choice of oh well I",
    "start": "2106880",
    "end": "2113480"
  },
  {
    "text": "could just load one in memory you know on the fly ephemerally right I could",
    "start": "2113480",
    "end": "2118920"
  },
  {
    "text": "have an embedded case where I load a bunch of vectors in and then there's some persistent file that I can pass",
    "start": "2118920",
    "end": "2125640"
  },
  {
    "text": "around right and then there's I think more of what you were getting at which is like is this index represented on dis",
    "start": "2125640",
    "end": "2132920"
  },
  {
    "text": "or in memory could you maybe help us parse through some of those things and go into a little bit more detail of what",
    "start": "2132920",
    "end": "2139359"
  },
  {
    "text": "you mean there so yeah uh now that you mentioned uh selfhosted versus Cloud I think that's a number nine that I will",
    "start": "2139359",
    "end": "2144920"
  },
  {
    "text": "add eventually that's very good point that you brought that up there perfect yeah may maybe we can find a number 10 to round it out before the end of the",
    "start": "2144920",
    "end": "2151280"
  },
  {
    "text": "episode and show this way more yeah go on on but yeah so so going back to your in memory I think it's a very important",
    "start": "2151280",
    "end": "2156680"
  },
  {
    "text": "one so I think I think this is one of the things that is defining the you could call it the race towards Vector",
    "start": "2156680",
    "end": "2163200"
  },
  {
    "text": "Supremacy I I don't think the term is very accurate but anyway um I think the challenge with most of the vector",
    "start": "2163200",
    "end": "2169400"
  },
  {
    "text": "indexes out there I think the most popular one by far is called hnsw um hierarchical navigable small world",
    "start": "2169400",
    "end": "2174880"
  },
  {
    "text": "graphs and I go into the details of the algorithm in part three of my blog so I'd be happy to I mean discuss more uh",
    "start": "2174880",
    "end": "2181160"
  },
  {
    "text": "with anyone else outside of the required but hmss W index is known for its relatively good trade-off recall and uh",
    "start": "2181160",
    "end": "2189200"
  },
  {
    "text": "latency it's fast and it's relatively accurate uh but it is also memory hungry and where this becomes an issue is as",
    "start": "2189200",
    "end": "2196880"
  },
  {
    "text": "data sets get larger and larger and larger this is called the trillion scale Vector problem now a lot of vendors are",
    "start": "2196880",
    "end": "2202040"
  },
  {
    "text": "talking about it uh it's not too far away to imagine that you're going to have to at one day at one point index a",
    "start": "2202040",
    "end": "2207599"
  },
  {
    "text": "trillion vectors and that is by no means a mean feat right it's it's a very challenging problem so the data set in",
    "start": "2207599",
    "end": "2214280"
  },
  {
    "text": "that situation would be way too large to fit in memory now hnsw already does a",
    "start": "2214280",
    "end": "2219359"
  },
  {
    "text": "lot of optimizations under the hood the algorithm is designed to store a sparse graph in memory and essentially you",
    "start": "2219359",
    "end": "2226560"
  },
  {
    "text": "search through the sparse graph and then through the layers of that graph you narrow down on the nearest neighbor to",
    "start": "2226560",
    "end": "2231839"
  },
  {
    "text": "the query that you input but as we go get larger and larger in terms of data even that Spar St does not fit in mem so",
    "start": "2231839",
    "end": "2238920"
  },
  {
    "text": "databases have come up with different solutions as to how to deal with this out of memory issue one example would be",
    "start": "2238920",
    "end": "2244200"
  },
  {
    "text": "quadrant they use this thing called men map uh it's like a sort of static Ram option where you don't actually store",
    "start": "2244200",
    "end": "2250119"
  },
  {
    "text": "the vectors in memory but you persist it to the page cache and it's still better than directly loading storing it on",
    "start": "2250119",
    "end": "2256280"
  },
  {
    "text": "solid straight drive which is one level below right so in terms of latency hit it's not as bad so you don't lose that",
    "start": "2256280",
    "end": "2263040"
  },
  {
    "text": "much performance and you'll notice that a lot of vendors fight really hard to",
    "start": "2263040",
    "end": "2268119"
  },
  {
    "text": "avoid persisting any vectors to or the index to dis because the moment you go onto a solid state drive there is a",
    "start": "2268119",
    "end": "2274599"
  },
  {
    "text": "massive performance hit in terms of retrieval because the speed at which you're able to retrieve things from memory is as you know much much much",
    "start": "2274599",
    "end": "2281000"
  },
  {
    "text": "faster than what you could do on disk that's a general Trend I think across the board right now most vendors are",
    "start": "2281000",
    "end": "2287359"
  },
  {
    "text": "largely working with storing the hnsw index in memory and then adding some sort of caching layer to avoid having to",
    "start": "2287359",
    "end": "2293480"
  },
  {
    "text": "repeat the queries and waste timing in that sense but this is entirely new index called V now so I've written about",
    "start": "2293480",
    "end": "2299280"
  },
  {
    "text": "that in my blog it's optimized for solid state disk retrievals and the algorithm",
    "start": "2299280",
    "end": "2304599"
  },
  {
    "text": "they use is called disn not every database vendor has implemented this it's still in the early days but if I",
    "start": "2304599",
    "end": "2310599"
  },
  {
    "text": "look at where the future is going there are many options that vendors could go down the road off right they could choose to implement hnsw on disk but",
    "start": "2310599",
    "end": "2319160"
  },
  {
    "text": "record suggests that that's not a great idea because its performance would drastically reduce it would not perform",
    "start": "2319160",
    "end": "2324440"
  },
  {
    "text": "that quickly as it does disn seems to be the agreed upon standard across many vendors but the challenge of disn is the",
    "start": "2324440",
    "end": "2331760"
  },
  {
    "text": "original research paper that implemented it uh the Microsoft team that implemented it their implementation does not directly trans late into the",
    "start": "2331760",
    "end": "2338319"
  },
  {
    "text": "database internals depending on the language that the database uses many of these are written in go or disan",
    "start": "2338319",
    "end": "2343960"
  },
  {
    "text": "implementation was written in C++ so it's not a direct you know transplant of the algorithm from the source to the",
    "start": "2343960",
    "end": "2350480"
  },
  {
    "text": "database it require a lot of rewrites and a custom approach towards optimizing for that speed but that being said I",
    "start": "2350480",
    "end": "2357599"
  },
  {
    "text": "have to point out one particular vendor that I think really stands out from everyone else on this Str um they call L",
    "start": "2357599",
    "end": "2363040"
  },
  {
    "text": "DD they I believe the youngest database out there they they just come about I think end of 2022 early 2023 and they",
    "start": "2363040",
    "end": "2371240"
  },
  {
    "text": "are the only solution as far as I know who only support on disk indexes they don't do an inmemory index at all and I",
    "start": "2371240",
    "end": "2378560"
  },
  {
    "text": "was initially very surprised as to how they even do this how can they go about this but as I dug into it and I spoken",
    "start": "2378560",
    "end": "2383839"
  },
  {
    "text": "to some of the team as well they're really really open about their you know research that they're doing and all the models that they're building but",
    "start": "2383839",
    "end": "2389560"
  },
  {
    "text": "essentially they innovate on multiple fronts but the biggest Innovation is the underlying storage layer storage format",
    "start": "2389560",
    "end": "2396400"
  },
  {
    "text": "they built this for format called Lance which is essentially optimized for on",
    "start": "2396400",
    "end": "2401480"
  },
  {
    "text": "disk reads of data and the database itself is built on top of this open source format Lance so the whole thing",
    "start": "2401480",
    "end": "2407480"
  },
  {
    "text": "is open source it's built in Rust so the performance there is already you know close to Bare Metal it's relatively fast",
    "start": "2407480",
    "end": "2413800"
  },
  {
    "text": "they have already built an experimental dis in and implementation so when it comes to this on disk versus inmemory",
    "start": "2413800",
    "end": "2419800"
  },
  {
    "text": "tradeoffs quadrant is going about their own path in terms of how they achieve on this larger than memory data we is going",
    "start": "2419800",
    "end": "2426440"
  },
  {
    "text": "around its own path Lun D is innovating on a different front I feel like these are the three vendors who I've uh interacted with more and used and I",
    "start": "2426440",
    "end": "2434160"
  },
  {
    "text": "think the future is heading towards one where on disk becomes a requirement and the standard way of implementing an",
    "start": "2434160",
    "end": "2440440"
  },
  {
    "text": "index uh but the engineering challeng is still ongoing let me ask you a slightly different question it's not completely",
    "start": "2440440",
    "end": "2446560"
  },
  {
    "text": "unrelated the things that you've been you know kind of addressing there kind of are leading me to the next step on",
    "start": "2446560",
    "end": "2452280"
  },
  {
    "text": "that uh so when you're thinking about kind of environments that you want to put in like I know if if you look at the",
    "start": "2452280",
    "end": "2458319"
  },
  {
    "text": "other database types before Vector you would have some that are you know scaled massively in the cloud you'd have others",
    "start": "2458319",
    "end": "2465319"
  },
  {
    "text": "as we've moved more and more uh intelligence and data out onto Edge devices and they're either embedded or",
    "start": "2465319",
    "end": "2472480"
  },
  {
    "text": "they're designed to serve in a very constrained environment what are the options for Vector databases in that I'm",
    "start": "2472480",
    "end": "2479680"
  },
  {
    "text": "assuming that there's obviously the the cloud capability because that's kind of always the Baseline do you also have you",
    "start": "2479680",
    "end": "2485680"
  },
  {
    "text": "know as we're moving into a an increasingly autonomous world out there",
    "start": "2485680",
    "end": "2491119"
  },
  {
    "text": "um and more and more things are being pushed out outside of the data centers and the clouds uh or at least the",
    "start": "2491119",
    "end": "2496280"
  },
  {
    "text": "central parts of the clouds are there options for either embedded or micr serving if you will uh on the vector",
    "start": "2496280",
    "end": "2503599"
  },
  {
    "text": "side an amazing Point yeah and I covered this in my blog post number one um in terms of the architectures of these",
    "start": "2503599",
    "end": "2509680"
  },
  {
    "text": "databases and you're absolutely right I think there is a lot of room for embedded databases to become the norm I",
    "start": "2509680",
    "end": "2515839"
  },
  {
    "text": "know ddb is making waves in the SQL Market on the frun I think a lot of vendors are ulating what duck DB has",
    "start": "2515839",
    "end": "2522160"
  },
  {
    "text": "done in SQL uh as you know duck DD is an embedded database unlike postgress which is a client server architecture database",
    "start": "2522160",
    "end": "2528480"
  },
  {
    "text": "right so what happened in the SQL world is now translating into you could say the vector world two databases that are",
    "start": "2528480",
    "end": "2534359"
  },
  {
    "text": "following this embedded approach Lance DB as I mentioned and chroma DB these are the most chroma DB is quite well",
    "start": "2534359",
    "end": "2540000"
  },
  {
    "text": "known people have been talking about it for a while but between the two of these I do think that LD has it stands out",
    "start": "2540000",
    "end": "2545720"
  },
  {
    "text": "more in the underlying techn techology because the chroma from what I understand right now is it's still building out its underlying layer it was",
    "start": "2545720",
    "end": "2552440"
  },
  {
    "text": "kind of wrapped around an existing underlying internal database itself it was not it did have its own purpose",
    "start": "2552440",
    "end": "2557920"
  },
  {
    "text": "built offering to begin with but they're kind of building that out as they speak so I think between these two vendors",
    "start": "2557920",
    "end": "2563920"
  },
  {
    "text": "it'll be interesting to see how you know each of them rols out their own features are kind of Target a specific part of",
    "start": "2563920",
    "end": "2569000"
  },
  {
    "text": "the market going back to the point of cloud versus on Prem that's another big thing I think that's going to come up",
    "start": "2569000",
    "end": "2574440"
  },
  {
    "text": "honestly like pine cone and services like that that are completely on cloud there are they could be real potential",
    "start": "2574440",
    "end": "2580680"
  },
  {
    "text": "bottlenecks for companies to be okay with just you know sending out their data to Some Cloud even if fine cones",
    "start": "2580680",
    "end": "2585760"
  },
  {
    "text": "they would Deploy on your infrastructure at the end of the day it is still a purely cloud-based solution there's a lot of infrastructure related hurdles",
    "start": "2585760",
    "end": "2592400"
  },
  {
    "text": "around that self-hosted is I think as you see going to become more and more common and certain options like8",
    "start": "2592400",
    "end": "2598280"
  },
  {
    "text": "quadrant they offer self-hosted options in their licensing as well so the question for me that remains unanswered",
    "start": "2598280",
    "end": "2604040"
  },
  {
    "text": "is which model in Vector database vector search will dominate in the longer term",
    "start": "2604040",
    "end": "2609640"
  },
  {
    "text": "embedded versus client server right we are so used to the model of client server that's been working for more than",
    "start": "2609640",
    "end": "2615359"
  },
  {
    "text": "a decade right now uh pretty much every database we've used is based on the C server architecture where the server",
    "start": "2615359",
    "end": "2620680"
  },
  {
    "text": "sits remotely and I don't have to have the server running anywhere near where my application's running but I think",
    "start": "2620680",
    "end": "2626640"
  },
  {
    "text": "embedded databases especially with llms in the picture it makes a lot of sense in terms of data privacy and things like",
    "start": "2626640",
    "end": "2632440"
  },
  {
    "text": "that and the scalability of these have I guess not truly been tested DD is just",
    "start": "2632440",
    "end": "2637559"
  },
  {
    "text": "three or four years old Lance DD is less than a year old choma as well so it'll be interesting to see how embedded",
    "start": "2637559",
    "end": "2643640"
  },
  {
    "text": "databases compete on on that front like how well adopted they are because I think industry generally tends to favor",
    "start": "2643640",
    "end": "2649839"
  },
  {
    "text": "things that are tried and tested at scale this sort of thing to catch on it would have to offer real real business",
    "start": "2649839",
    "end": "2655240"
  },
  {
    "text": "value and the way these these databases monetized their they're offering I think that's what be interesting to see and I",
    "start": "2655240",
    "end": "2661440"
  },
  {
    "text": "guess we've already started moving this direction a little bit but as we draw closer to an end here I'm curious you",
    "start": "2661440",
    "end": "2670079"
  },
  {
    "text": "have explored probably more than well many people certainly myself in terms of",
    "start": "2670079",
    "end": "2676760"
  },
  {
    "text": "how all of these offerings compare what the trade-offs are related to Vector",
    "start": "2676760",
    "end": "2682200"
  },
  {
    "text": "databases I'm curious as you look towards the future what are you excited",
    "start": "2682200",
    "end": "2687960"
  },
  {
    "text": "to try that you haven't yet tried and then maybe what what excites you about",
    "start": "2687960",
    "end": "2694319"
  },
  {
    "text": "this space I know you mentioned certainly there's things that are hyped or maybe different marketing that plays",
    "start": "2694319",
    "end": "2700240"
  },
  {
    "text": "into this but what are you actually practically excited about as a practitioner in the future of this",
    "start": "2700240",
    "end": "2706000"
  },
  {
    "text": "Vector database uh space I think the lwh hanging fruit is the immediately obvious one so I'll start with that I think in",
    "start": "2706000",
    "end": "2712319"
  },
  {
    "text": "the past when it came to search we imagine the Google search bar and idea that to build something like that was",
    "start": "2712319",
    "end": "2719040"
  },
  {
    "text": "inconceivable a few years ago having a scalable reliable search engine that you",
    "start": "2719040",
    "end": "2724359"
  },
  {
    "text": "could build in house on your own proprietary data was really difficult to do at scale but today I think with the",
    "start": "2724359",
    "end": "2730280"
  },
  {
    "text": "combination of vector databases and llms uh with gbd4 now and all the other",
    "start": "2730280",
    "end": "2735440"
  },
  {
    "text": "models out there I really think that it's kind of become available to the masses right like the average company",
    "start": "2735440",
    "end": "2741480"
  },
  {
    "text": "who does not have massive compute is still able to build very very valuable search Solutions information retrieval",
    "start": "2741480",
    "end": "2748480"
  },
  {
    "text": "Solutions on top of their existing data there are additional offerings um like Hast stack and you know like the search",
    "start": "2748480",
    "end": "2754480"
  },
  {
    "text": "engines that build on top of back databases but I think the Foundation layer are actually being enabled by",
    "start": "2754480",
    "end": "2759880"
  },
  {
    "text": "Vector databases which is why I'm so interested in in those news cases so those applications are very interesting",
    "start": "2759880",
    "end": "2765400"
  },
  {
    "text": "at first the other thing is retrieval augmented generation this is a term that came about I think it was introduced by",
    "start": "2765400",
    "end": "2770960"
  },
  {
    "text": "meta in one of the recent papers essentially the idea behind retrieval augmented generation is typically",
    "start": "2770960",
    "end": "2777359"
  },
  {
    "text": "information retrieval involved you send a query and you receive response that retre information relevant to your query",
    "start": "2777359",
    "end": "2783520"
  },
  {
    "text": "right where the generation comes in is now llns add an additional layer on top of that you could send a query in",
    "start": "2783520",
    "end": "2790000"
  },
  {
    "text": "natural language and you retrieve the most similar documents to that query",
    "start": "2790000",
    "end": "2796240"
  },
  {
    "text": "right but rather than just retrieving the document itself you could have the language model go through the document",
    "start": "2796240",
    "end": "2802520"
  },
  {
    "text": "look at your query and then retrieve only the part of the document that is relevant to that query and then generate",
    "start": "2802520",
    "end": "2808800"
  },
  {
    "text": "a response that could potentially answer a question that you had like what is the birthday of so and so person who runs",
    "start": "2808800",
    "end": "2815839"
  },
  {
    "text": "this company right so these kinds of things were really really like almost impossible to do uh before but now I",
    "start": "2815839",
    "end": "2822720"
  },
  {
    "text": "think it's it's really actually achievable with the kinds of tools and technologies that are available today I think raled generation is really",
    "start": "2822720",
    "end": "2829160"
  },
  {
    "text": "skyrocketing right now as as a term I think everyone's talking about it but what I want to add to that is I want to",
    "start": "2829160",
    "end": "2834760"
  },
  {
    "text": "throw this out here to any of the listeners and maybe potentially I'm going to talk about this to other people in Industry as well can we add another",
    "start": "2834760",
    "end": "2841760"
  },
  {
    "text": "layer to retrieval augmented generation and what I'm really interested in is how",
    "start": "2841760",
    "end": "2847079"
  },
  {
    "text": "the Two Worlds of graph databases and Vector databases come together and I've posted about this a couple of times but",
    "start": "2847079",
    "end": "2853520"
  },
  {
    "text": "what's really interesting right now is most graph databases like NE forj for example they use declarative query",
    "start": "2853520",
    "end": "2860319"
  },
  {
    "text": "language interfaces like Cy Cur is you the SQL equivalent for graphs the good thing about knowledge graphs is they",
    "start": "2860319",
    "end": "2866599"
  },
  {
    "text": "encode factual information uh and in a very human interpretable way so the things that form nodes and edges in",
    "start": "2866599",
    "end": "2872800"
  },
  {
    "text": "Knowledge Graph there are something that we as humans put in there and encoded our knowledge of the real world into the",
    "start": "2872800",
    "end": "2879720"
  },
  {
    "text": "data where Vector databases sit complimentary to this is in many cases I might have connected data where unless",
    "start": "2879720",
    "end": "2886280"
  },
  {
    "text": "say a person you know knows other person like a social network situation person follows another person person lives in a city and so on these are all meaningful",
    "start": "2886280",
    "end": "2894599"
  },
  {
    "text": "connected entities in the real world but you add some layers of data on top of this uh you know data about a city you",
    "start": "2894599",
    "end": "2901720"
  },
  {
    "text": "know data about a person you know where they worked you know what company information that has like there's so",
    "start": "2901720",
    "end": "2907079"
  },
  {
    "text": "much additional unstructured data that attach onto the node in a grph that is",
    "start": "2907079",
    "end": "2913839"
  },
  {
    "text": "actually hard to query using conventional graph algorithms or you know graph languages so I think Vector",
    "start": "2913839",
    "end": "2919280"
  },
  {
    "text": "databases are uniquely placed to add new value in that space in terms of I call",
    "start": "2919280",
    "end": "2925079"
  },
  {
    "text": "it factual knowledge retrieval now the problem with knowledge retrieval is sometimes the queries that you have need",
    "start": "2925079",
    "end": "2931319"
  },
  {
    "text": "to be exact the ability to submit a fuzzy query that does not exactly match your terms in the graph is something",
    "start": "2931319",
    "end": "2937079"
  },
  {
    "text": "that you didn't have before it's very difficult to actually generalize your your query in a way that retries useful",
    "start": "2937079",
    "end": "2942640"
  },
  {
    "text": "information so I'm very interested to see how the power of natural language",
    "start": "2942640",
    "end": "2947680"
  },
  {
    "text": "querying interfaces enabled by lnms can be built on top of vector databases that store all the information related to an",
    "start": "2947680",
    "end": "2954680"
  },
  {
    "text": "entity and then encode that entity into a knowledge draft and then you tie all these things together in a way that you",
    "start": "2954680",
    "end": "2960640"
  },
  {
    "text": "can actually retrieve uh information and explore and discover aspects about your",
    "start": "2960640",
    "end": "2967160"
  },
  {
    "text": "data that you couldn't otherwise in a way that actually ties all these tools and Technologies together so I call it like an enhanced retriever augmented",
    "start": "2967160",
    "end": "2974079"
  },
  {
    "text": "generation sort of uh model and this would obviously require tools like Lang chain or lav index I mean these",
    "start": "2974079",
    "end": "2980400"
  },
  {
    "text": "additional Frameworks that allow you to compose these different tools together and pass data and instructions back and",
    "start": "2980400",
    "end": "2986079"
  },
  {
    "text": "forth between the human and the different underlying databases themselves so I'm super excited about those Technologies yeah I think it's",
    "start": "2986079",
    "end": "2993079"
  },
  {
    "text": "great to hear that perspective also you know usually the answer is not like only",
    "start": "2993079",
    "end": "2999799"
  },
  {
    "text": "this technology and nothing else is the solution but a strategic combination of",
    "start": "2999799",
    "end": "3005960"
  },
  {
    "text": "things often is where things end up and um I think those are are really interesting topics to explore and I look",
    "start": "3005960",
    "end": "3013079"
  },
  {
    "text": "forward to your mini part blog post as you explore those I'm definitely going to be following your your writing now",
    "start": "3013079",
    "end": "3019599"
  },
  {
    "text": "and um yeah thank you from the community and from us for your your work on this",
    "start": "3019599",
    "end": "3026000"
  },
  {
    "text": "topic and and sharing that work with the community it's super practical and we're very privileged and happy to have you on",
    "start": "3026000",
    "end": "3033200"
  },
  {
    "text": "the show thank you so much pran no I appreciate it thank you so [Music]",
    "start": "3033200",
    "end": "3044079"
  },
  {
    "text": "much thank you for listening to practical AI your next step is to",
    "start": "3044079",
    "end": "3049359"
  },
  {
    "text": "subscribe now if you haven't already and if you're a longtime listener of the show help us reach more people by",
    "start": "3049359",
    "end": "3055720"
  },
  {
    "text": "sharing practical playi with your friends and colleagues thanks once again to fastly and fly for partnering with us",
    "start": "3055720",
    "end": "3061680"
  },
  {
    "text": "to bring you all change do podcasts check out what they're up to at fastly.com and",
    "start": "3061680",
    "end": "3067200"
  },
  {
    "text": "fly.io and to our beat freaking residence breakmaster cylinder for continuously cranking out the best beats",
    "start": "3067200",
    "end": "3072960"
  },
  {
    "text": "in the biz that's all for now we'll talk to you again next [Music]",
    "start": "3072960",
    "end": "3084429"
  },
  {
    "text": "time [Music]",
    "start": "3085559",
    "end": "3090429"
  }
]