[
  {
    "text": "B with for change log is provided by fastly learn more at fastly.com we move",
    "start": "80",
    "end": "6040"
  },
  {
    "text": "fast and fix things here at change log because of rollbar check them out at rar.com and we're hosted on Leno servers",
    "start": "6040",
    "end": "12799"
  },
  {
    "text": "head to lin.com changelog this episode is brought to you by Gage gagee is a free and open- Source",
    "start": "12799",
    "end": "19680"
  },
  {
    "text": "test automation tool by thoughtworks with a goal of taking the pain out of test automation for acceptance tests to",
    "start": "19680",
    "end": "26039"
  },
  {
    "text": "help with this gauge supports specifications and markdown which are easy to read and easy to write reusable",
    "start": "26039",
    "end": "31679"
  },
  {
    "text": "specifications to simplify your code which makes refactoring easier and less code means less time maintaining your",
    "start": "31679",
    "end": "38960"
  },
  {
    "text": "code and finally Integrations use gauge with your favorite tools and idees in",
    "start": "38960",
    "end": "44160"
  },
  {
    "text": "the ecosystem of your choice like selenia and sahi pro CI and CD tools",
    "start": "44160",
    "end": "49840"
  },
  {
    "text": "like go CD Jenkins Travis and IDE support for visual studio VSS code",
    "start": "49840",
    "end": "55079"
  },
  {
    "text": "intellig and more the team behind gauge believes in using web technology to test to web applications head to g.org sjsp",
    "start": "55079",
    "end": "63440"
  },
  {
    "text": "party to learn more and give it a try once again g.org JS",
    "start": "63440",
    "end": "69330"
  },
  {
    "text": "[Music]",
    "start": "69330",
    "end": "72370"
  },
  {
    "text": "party welcome to JS party a weekly celebration of JavaScript and the web tune in live on Thursdays at 1:00 p.m.",
    "start": "81720",
    "end": "89479"
  },
  {
    "text": "Eastern 10 a.m. Pacific at changel law.com join the community and slack",
    "start": "89479",
    "end": "94600"
  },
  {
    "text": "with us in real time during the show at Chang law.com Community follow us on Twitter we're at JSP party FM and now on",
    "start": "94600",
    "end": "102040"
  },
  {
    "text": "to the show hello and welcome to another week",
    "start": "102040",
    "end": "107880"
  },
  {
    "text": "of JS party where every week we are throwing a party about JavaScript and the web I your host for this week kall",
    "start": "107880",
    "end": "114719"
  },
  {
    "text": "and I'm joined with our regular panelists Nick nii hello and Christopher Hiller AKA bone skull hello I love that",
    "start": "114719",
    "end": "123159"
  },
  {
    "text": "moniker we also have a special guest with us today Jeremy Daly is joining us he is the CTO of alert me. newws and a",
    "start": "123159",
    "end": "130759"
  },
  {
    "text": "longtime advocate of serverless which will be our topic for the day hey guys thanks for having me thanks for joining",
    "start": "130759",
    "end": "136680"
  },
  {
    "text": "us Jeremy uh so let's kind of kick things off with a question which is what the heck is serverless because I mean",
    "start": "136680",
    "end": "144160"
  },
  {
    "text": "just coming at this longtime guy like obviously there's still a server involved right there is yeah so it's",
    "start": "144160",
    "end": "149920"
  },
  {
    "text": "sort of one of those things where a lot of people I don't want to say get upset but a lot of people you know use the uh",
    "start": "149920",
    "end": "156360"
  },
  {
    "text": "semantics of the term to kind of argue against it which is kind of silly because if you think about Wireless",
    "start": "156360",
    "end": "161560"
  },
  {
    "text": "technology and I know this is used multiple times but there's still wires in Wireless technology it's just you as",
    "start": "161560",
    "end": "167280"
  },
  {
    "text": "the end user don't have to deal with those wires and so I like to look at serverless similar to that where",
    "start": "167280",
    "end": "173040"
  },
  {
    "text": "obviously there's servers behind the scenes that are doing things but you as a developer you don't have to worry",
    "start": "173040",
    "end": "179159"
  },
  {
    "text": "about provision in server so the difference between provisioning something like an ec2 instance for",
    "start": "179159",
    "end": "184560"
  },
  {
    "text": "example where you have to launch that you have to pay for it 24 hours a day you have to install the updates you have",
    "start": "184560",
    "end": "190799"
  },
  {
    "text": "to worry about all the permissions and everything that's going on there with serverless you actually just write some",
    "start": "190799",
    "end": "195920"
  },
  {
    "text": "code and you tell AWS or Google Cloud platform or whoever to say hey when this",
    "start": "195920",
    "end": "202159"
  },
  {
    "text": "particular thing happens I want you to take it in run my code and then spit something back out so you're only paying",
    "start": "202159",
    "end": "209319"
  },
  {
    "text": "when your code is actually executing and you don't have to worry about having that all those servers backing that for",
    "start": "209319",
    "end": "215799"
  },
  {
    "text": "you yep that makes a ton of sense I've heard it described also as kind of functions that as a service we've gone",
    "start": "215799",
    "end": "221799"
  },
  {
    "text": "from all these different layers but if I just have my functions yeah well so just something about functions as a service",
    "start": "221799",
    "end": "227879"
  },
  {
    "text": "so functions as a service sometimes people equate those to serverless and it's it's not functions as a service as",
    "start": "227879",
    "end": "234720"
  },
  {
    "text": "part of serverless I mean that's why we we look at serverless sometimes people call it serviceful because the idea is",
    "start": "234720",
    "end": "240799"
  },
  {
    "text": "to say that yes functions as a service are these little you know containers that will run for you they'll execute your code you don't have to worry about",
    "start": "240799",
    "end": "247400"
  },
  {
    "text": "it but then you need to interact with other services in order to make something valuable happen so whether",
    "start": "247400",
    "end": "252560"
  },
  {
    "text": "you're writing to a database or you're writing to some sort of a a stream or you're reading information in from",
    "start": "252560",
    "end": "258079"
  },
  {
    "text": "something there's a bunch of other services that are involved there but again those are all managed services so",
    "start": "258079",
    "end": "264600"
  },
  {
    "text": "sometimes people say functions as a service kind of acts as the glue that kind of sticks all that stuff together",
    "start": "264600",
    "end": "269759"
  },
  {
    "text": "together but it does go beyond just the function aspect of it how does this term differentiate from microservices or is",
    "start": "269759",
    "end": "275479"
  },
  {
    "text": "this just a way to facilitate microservices so that's actually kind of interesting where serverless takes us",
    "start": "275479",
    "end": "281680"
  },
  {
    "text": "and without getting maybe too deep so microservices obviously are taking a larger application finding the seams in",
    "start": "281680",
    "end": "287800"
  },
  {
    "text": "it and splitting it up so that your building service is separate from your catalog service or something like that",
    "start": "287800",
    "end": "293440"
  },
  {
    "text": "so serverless is a way in which you can deploy microservices and you can certainly take a number of functions or",
    "start": "293440",
    "end": "299039"
  },
  {
    "text": "a single function with some additional managed services and create a micros service there and of",
    "start": "299039",
    "end": "304360"
  },
  {
    "text": "course it's much easier to communicate between functions using uh using something like you know Lambda for",
    "start": "304360",
    "end": "310759"
  },
  {
    "text": "example because you can call them from each other but the difference between microservices is that microservices are",
    "start": "310759",
    "end": "316880"
  },
  {
    "text": "sort of Monolithic applications in themselves so they're not distributed and they usually have to be replicated",
    "start": "316880",
    "end": "323319"
  },
  {
    "text": "either horizontally or you got to up the up the the server requirements in order to get more performance out of them",
    "start": "323319",
    "end": "328919"
  },
  {
    "text": "whereas with with something like serverless there's this new concept of Nano Services where you're basically",
    "start": "328919",
    "end": "334720"
  },
  {
    "text": "saying parts of my microservice might need to scale more than other parts of it so maybe I have an image processing",
    "start": "334720",
    "end": "341199"
  },
  {
    "text": "component or some sort of uh machine learning component and that requires more resources in order to process that",
    "start": "341199",
    "end": "348160"
  },
  {
    "text": "with if I had all of that package into a single microservice in like a container for example I would have to scale the",
    "start": "348160",
    "end": "353840"
  },
  {
    "text": "entire container so all parts of that application would have to scale or that service would have to scale in order to",
    "start": "353840",
    "end": "359400"
  },
  {
    "text": "handle it now with this idea of Nano Services you can take that microservice put it out there in a serous environment",
    "start": "359400",
    "end": "365800"
  },
  {
    "text": "and then when an individual component of that microservice needs to scale that's where we sort of consider those Nano",
    "start": "365800",
    "end": "371840"
  },
  {
    "text": "services and those can scale just independently even though they're part of that larger service I think you just",
    "start": "371840",
    "end": "377440"
  },
  {
    "text": "blew my mind with this Nano Services thing either that or or I'm just horrified but basically so so you're",
    "start": "377440",
    "end": "384199"
  },
  {
    "text": "saying that we have these microservices and basically what they're doing is they're they're calling out to functions",
    "start": "384199",
    "end": "389720"
  },
  {
    "text": "as a service well yeah so I mean a microservice if you think about it is just a small is a a small monolithic",
    "start": "389720",
    "end": "396199"
  },
  {
    "text": "application right so it does something specific it's your billing service so it keeps The Ledger it uh creates invoices",
    "start": "396199",
    "end": "403240"
  },
  {
    "text": "it does all that kind of stuff so you can build a series of individual functions so rather than having that all",
    "start": "403240",
    "end": "409319"
  },
  {
    "text": "in one big Java app or PHP or whatever you use node if you're writing a node whatever that rather than having that",
    "start": "409319",
    "end": "415319"
  },
  {
    "text": "all in one giant function or one giant app you can split that up in to individual functions and again functions",
    "start": "415319",
    "end": "422240"
  },
  {
    "text": "is probably the wrong term here because a function in serverless could run multiple sub routines if you want to",
    "start": "422240",
    "end": "428360"
  },
  {
    "text": "think about it that way so it's like functions within functions but the idea is a function is this individual unit",
    "start": "428360",
    "end": "433560"
  },
  {
    "text": "that can execute any amount of code on its own so you take five or six functions or whatever it is and that can",
    "start": "433560",
    "end": "440520"
  },
  {
    "text": "be your entire billing service uh and so that you sort of consider your microservice but you don't you don't",
    "start": "440520",
    "end": "446720"
  },
  {
    "text": "have to launch that microservice into a container or onto a server you launch",
    "start": "446720",
    "end": "452240"
  },
  {
    "text": "all of those components of the microservice independently into the serverless environment like Lambda or",
    "start": "452240",
    "end": "458639"
  },
  {
    "text": "Zur or something like that and now those all act as one service they can",
    "start": "458639",
    "end": "463720"
  },
  {
    "text": "communicate with one another but then they can also scale individually and then of course you can communicate",
    "start": "463720",
    "end": "469280"
  },
  {
    "text": "across other services using you know whether they're message buses or sqs or SNS or Lambda or I mean or excuse me or",
    "start": "469280",
    "end": "476879"
  },
  {
    "text": "Kinesis or any of those things to actually communicate between not only your Individual",
    "start": "476879",
    "end": "482039"
  },
  {
    "text": "Services your individual functions but also the larger microservices if that",
    "start": "482039",
    "end": "487400"
  },
  {
    "text": "makes sense so we had this Evolution we where we had this monolithic application which was like all the things are in one",
    "start": "487400",
    "end": "494120"
  },
  {
    "text": "bundle and that turned out to be hard to scale from both a technical perspective",
    "start": "494120",
    "end": "499159"
  },
  {
    "text": "of this is a very expensive thing that we need to put more servers on and if one piece needs to scale we scale it all",
    "start": "499159",
    "end": "506560"
  },
  {
    "text": "and also from kind of a management perspective of like team working on different pieces so then we split that",
    "start": "506560",
    "end": "511840"
  },
  {
    "text": "and we said okay now we're going to go to microservices where each one of these sort of vertical slices can scale",
    "start": "511840",
    "end": "518880"
  },
  {
    "text": "independently and it can scale have a different team but it can also have different services and what I'm hearing",
    "start": "518880",
    "end": "523959"
  },
  {
    "text": "from you uh now Jeremy is this idea of serverless is taking that final thing",
    "start": "523959",
    "end": "530839"
  },
  {
    "text": "and saying you know what maybe a microservice is the wrong concept because that's still like at the level",
    "start": "530839",
    "end": "536320"
  },
  {
    "text": "of here's a self-contained thing it's just we've sliced it apart what if we just take any piece of functionality and",
    "start": "536320",
    "end": "542839"
  },
  {
    "text": "split that out and let that scale independently and be worked on potentially independently and just kind",
    "start": "542839",
    "end": "547959"
  },
  {
    "text": "of go all the way down to the bare atoms that we're making up our program and",
    "start": "547959",
    "end": "553040"
  },
  {
    "text": "have each of those independent is that yeah fair I think that's actually a great way to look at it the only thing I",
    "start": "553040",
    "end": "558600"
  },
  {
    "text": "would add to that is and again this is probably more confusing because of the implementation than it is from actually",
    "start": "558600",
    "end": "564480"
  },
  {
    "text": "doing it in practice but typically with a microservice you'd have a a small team own microservice all the way everything",
    "start": "564480",
    "end": "570920"
  },
  {
    "text": "from the database to the code you know to the implementation so uh and that's still possible here it's just that",
    "start": "570920",
    "end": "576880"
  },
  {
    "text": "there's no sort of application Level division or microservice division when",
    "start": "576880",
    "end": "582240"
  },
  {
    "text": "you put functions uh like I'll use AWS Lambda for example when you upload five",
    "start": "582240",
    "end": "588399"
  },
  {
    "text": "functions that you say are part of this microservice into AWS Lambda they just go into one big giant list of functions",
    "start": "588399",
    "end": "594760"
  },
  {
    "text": "that are available but you can tag those functions and and and AWS actually just launch their applications tab which",
    "start": "594760",
    "end": "600720"
  },
  {
    "text": "tries to kind of consolidate functions that are part of the same service but what you would do is your microservice",
    "start": "600720",
    "end": "607519"
  },
  {
    "text": "team that's working on again to go back to the example of the billing function you might be working on five functions",
    "start": "607519",
    "end": "612600"
  },
  {
    "text": "plus you have an RDS Aurora database that backs it you would want those functions to be sort of contained in a",
    "start": "612600",
    "end": "621000"
  },
  {
    "text": "sense that one team would manage them you'd probably put them into one git repository or something like that and all of the interaction with that billing",
    "start": "621000",
    "end": "627160"
  },
  {
    "text": "database would happen from those five functions but you then upload those five functions that can scale independently",
    "start": "627160",
    "end": "633800"
  },
  {
    "text": "but the idea is that you might have other teams that are uploading other functions but your microservice team would own those five functions in the",
    "start": "633800",
    "end": "640480"
  },
  {
    "text": "database and anything else that supports it so would you build functions that um that like manage your database",
    "start": "640480",
    "end": "646519"
  },
  {
    "text": "connections or or talking to the specific database and then would other functions talk through that or would",
    "start": "646519",
    "end": "651680"
  },
  {
    "text": "they somehow have how would you share functionality between that if say another set of functions needed to",
    "start": "651680",
    "end": "656800"
  },
  {
    "text": "communicate with that database yeah no that's great question so that's and that's what I was trying to kind of get the point across is so if you build a",
    "start": "656800",
    "end": "663079"
  },
  {
    "text": "function that is sort of the uh the Gateway into your billing function you would want other services to communicate",
    "start": "663079",
    "end": "669680"
  },
  {
    "text": "with that function now you can communicate with it directly without ever having to leave you know the the environment you could put an API Gateway",
    "start": "669680",
    "end": "676880"
  },
  {
    "text": "in front of it so that it could actually be accessible you know using like a rest API but the point is is that if you have",
    "start": "676880",
    "end": "683079"
  },
  {
    "text": "your catalog service and your catalog service needs to get some sort of billing information you wouldn't write",
    "start": "683079",
    "end": "689320"
  },
  {
    "text": "any of your functions in the catalog service to access the database that supplies information to the billing",
    "start": "689320",
    "end": "695720"
  },
  {
    "text": "service instead you would use you would communicate with a function in the billing service that would then",
    "start": "695720",
    "end": "701760"
  },
  {
    "text": "communicate with the database so that way you can keep those separations of concerns and then you don't have to worry about you know one team trying to",
    "start": "701760",
    "end": "709320"
  },
  {
    "text": "share a database or two teams trying to share the same database interesting so typically what you would do for a",
    "start": "709320",
    "end": "715000"
  },
  {
    "text": "microservice it's just it it's just the it breaks down into these Nano Services now which it can become confusing",
    "start": "715000",
    "end": "721279"
  },
  {
    "text": "because now you've got individual components but you still want to kind of have them all part of a larger",
    "start": "721279",
    "end": "727480"
  },
  {
    "text": "microservice so that a team can own them and can own the data that supports them got it so where previously your team",
    "start": "727480",
    "end": "734120"
  },
  {
    "text": "scaling and your technical scaling we're along the same lines this is saying let's break out the technical scaling",
    "start": "734120",
    "end": "739839"
  },
  {
    "text": "but we still want to kind of group these things for team scaling purposes yeah yeah quick question as you've been",
    "start": "739839",
    "end": "745760"
  },
  {
    "text": "talking uh there's been some parts that sound like they're probably kind of generic to server lless and some things where you're talking about you know",
    "start": "745760",
    "end": "751639"
  },
  {
    "text": "something in specific like Lambda or something like that are there ways that the different implementations differ",
    "start": "751639",
    "end": "757760"
  },
  {
    "text": "across these different Cloud providers or have we more or less converged to the same functionality so there is certainly",
    "start": "757760",
    "end": "764279"
  },
  {
    "text": "differentiation between AWS and IBM and Google Cloud platform the most of it's",
    "start": "764279",
    "end": "770800"
  },
  {
    "text": "the same I mean the general idea is you write some sort of you write some code and you upload it into a function and it",
    "start": "770800",
    "end": "777120"
  },
  {
    "text": "it's a vent driven architecture right so event comes in and that could be that could be somebody uploads a file into an",
    "start": "777120",
    "end": "783639"
  },
  {
    "text": "S3 bucket or somebody know posts something to an API Gateway or you know",
    "start": "783639",
    "end": "789120"
  },
  {
    "text": "there's a message that comes in from a message bus or something like that so whatever those events are that come in",
    "start": "789120",
    "end": "794240"
  },
  {
    "text": "the basic idea of servus is it's a function that receives an event does something with it and then returns",
    "start": "794240",
    "end": "800519"
  },
  {
    "text": "something back and so pretty much all implementations of it are the same in that regard but like Lambda for example",
    "start": "800519",
    "end": "807760"
  },
  {
    "text": "was out in4 14 way ahead of pretty much anybody else so they've got a number of",
    "start": "807760",
    "end": "813480"
  },
  {
    "text": "services that really complement it right so you have you know their cloudwatch function to easily do or Cloud watch to",
    "start": "813480",
    "end": "819639"
  },
  {
    "text": "easily log data they've got their uh simple Q service which uh allows you to do you know like a message bus or cues",
    "start": "819639",
    "end": "826680"
  },
  {
    "text": "they have SNS which is the ability to multicast events to multiple lambdas or other or other locations they have their",
    "start": "826680",
    "end": "833880"
  },
  {
    "text": "Kinesis streams uh and then they of course have Aurora serverless and and Dynamo DB which is they're highly",
    "start": "833880",
    "end": "839680"
  },
  {
    "text": "scalable serverless you know sort of nosql database so they have a lot more services that you can use in that regard",
    "start": "839680",
    "end": "846800"
  },
  {
    "text": "but then you know open whisk and Google Cloud functions and um Microsoft Reserve",
    "start": "846800",
    "end": "852120"
  },
  {
    "text": "functions they're all very very similar and they all have slightly different implementations some of them run for",
    "start": "852120",
    "end": "857800"
  },
  {
    "text": "longer Google Cloud functions AO automatically has a built-in HTTP rest API so that that's how you can access",
    "start": "857800",
    "end": "864880"
  },
  {
    "text": "those functions as well as access them you know through other events but for the most part it's it's pretty much the",
    "start": "864880",
    "end": "870680"
  },
  {
    "text": "same and there's actually and speaking of servess Inc uh capital S there is a",
    "start": "870680",
    "end": "875959"
  },
  {
    "text": "uh a committee out there that's working to standardize um events for serous",
    "start": "875959",
    "end": "881040"
  },
  {
    "text": "functions so um that's um that's being that's out there now and so hopefully that'll kind of push all the providers",
    "start": "881040",
    "end": "887600"
  },
  {
    "text": "to at least standardize the way that events are received which I think would be a good point in kind of consolidating",
    "start": "887600",
    "end": "893920"
  },
  {
    "text": "the market that's kind of what I was going to ask I I don't have a ton of experience with serverless functionality but I have played around with um netlify",
    "start": "893920",
    "end": "901000"
  },
  {
    "text": "a little bit and I think with like the JavaScript API to tie into that you you basically like create a function that",
    "start": "901000",
    "end": "907240"
  },
  {
    "text": "accepts the event that's happening I think maybe a context and then it gives you a call back as an argument to it and",
    "start": "907240",
    "end": "913000"
  },
  {
    "text": "that call back is how you respond with something is that what they're working to standardize is basically like how you",
    "start": "913000",
    "end": "919199"
  },
  {
    "text": "define a function and how it will be run and receive the the inputs from like a a",
    "start": "919199",
    "end": "924279"
  },
  {
    "text": "rest call or from some other event that might be happening and then how you respond to that yeah I think that's I",
    "start": "924279",
    "end": "929480"
  },
  {
    "text": "think that's the basic idea is to say that when an event comes in that is for x or for y or whatever that event is",
    "start": "929480",
    "end": "935600"
  },
  {
    "text": "that it would be in a a similar format so similar maybe to what they did with rdf standards and things like that to",
    "start": "935600",
    "end": "941519"
  },
  {
    "text": "try to say when you're representing a product that this is what a product should look like these should be the fields this should be the uh this should",
    "start": "941519",
    "end": "947399"
  },
  {
    "text": "be the nomenclature that you use to describe these things and so right now obviously function the functionality or",
    "start": "947399",
    "end": "954199"
  },
  {
    "text": "the event that comes in from an sqs which would be a simple Q serice",
    "start": "954199",
    "end": "959560"
  },
  {
    "text": "uh is different than even within Amazon is different than it is when you get a messaging from Kinesis or when you get",
    "start": "959560",
    "end": "966240"
  },
  {
    "text": "Dynamo DB stream or something coming in so the idea here I think is to say if",
    "start": "966240",
    "end": "971399"
  },
  {
    "text": "you're going to say hey an image or a file was added here or here is a an a",
    "start": "971399",
    "end": "976800"
  },
  {
    "text": "rest API call that was made uh this is what it should look like these these this is the the data it should contain",
    "start": "976800",
    "end": "983040"
  },
  {
    "text": "so that you could then say I'm going to take my function from provider a and move it to provider B with not as much",
    "start": "983040",
    "end": "989839"
  },
  {
    "text": "uh with not as much pain as kind of changing you know changing how it processes those events yeah that' be",
    "start": "989839",
    "end": "995079"
  },
  {
    "text": "great all right this is probably a good time to roll into a quick break after",
    "start": "995079",
    "end": "1000160"
  },
  {
    "text": "the break we'll come back and keep uh drilling into your brain of how this stuff actually works and maybe start",
    "start": "1000160",
    "end": "1005759"
  },
  {
    "text": "digging into what is the value proposition we've talked a lot about how this things Works how it's different but",
    "start": "1005759",
    "end": "1012480"
  },
  {
    "text": "let's let's look at the value once we get back from the [Music]",
    "start": "1012480",
    "end": "1017839"
  },
  {
    "text": "break this episode is sponsored by our friends",
    "start": "1017839",
    "end": "1024240"
  },
  {
    "text": "at rollbar how important is it for you to catch errors before your users do what if you could resolve those errors",
    "start": "1024240",
    "end": "1030038"
  },
  {
    "text": "in minutes and then deploy with confidence that's exactly what robar enables for software teams one of the",
    "start": "1030039",
    "end": "1035400"
  },
  {
    "text": "most frustrating things we all deal with is errors most teams either a rely on their users to report errors or B use",
    "start": "1035400",
    "end": "1042678"
  },
  {
    "text": "log files and lists of Errors to debug problems that's such a waste of time instantly know what's broken and why",
    "start": "1042679",
    "end": "1049320"
  },
  {
    "text": "with rollar reduce time wasted debugging and automatically capture errors alongside Rich diagnostic data to help",
    "start": "1049320",
    "end": "1056280"
  },
  {
    "text": "you defeat impactful errors you can integrate rollar into your existing workflow it integrates with your source",
    "start": "1056280",
    "end": "1061799"
  },
  {
    "text": "code repository and deployment system to give you deep insights into exactly what changes caused each error give rollar a",
    "start": "1061799",
    "end": "1068679"
  },
  {
    "text": "try today at no cost to you no credit card is required our listeners get access to the bootstrap plan with",
    "start": "1068679",
    "end": "1074640"
  },
  {
    "text": "100,000 events for free for 90 days to get started head to rar.com changel",
    "start": "1074640",
    "end": "1082960"
  },
  {
    "text": "[Music]",
    "start": "1083570",
    "end": "1086690"
  },
  {
    "text": "loock all right welcome back so just before the break we talked about getting into value unfortunately one of our",
    "start": "1091480",
    "end": "1098679"
  },
  {
    "text": "panelists hadded his internet go out due to construction but he sent in a question um and I want to kind of put it",
    "start": "1098679",
    "end": "1103960"
  },
  {
    "text": "there so we talked about how this is kind of like taking this concept that we had of microservices and taking it down",
    "start": "1103960",
    "end": "1109880"
  },
  {
    "text": "even more and he was bringing up the point of you know what is the value prop of this as compared to just continuing",
    "start": "1109880",
    "end": "1115799"
  },
  {
    "text": "to split down microservices into more microservices I think it's a bit of a different model but can we sort of",
    "start": "1115799",
    "end": "1121919"
  },
  {
    "text": "explore like what's the point of serverless yeah so I mean for me and I think this is true of a lot of people",
    "start": "1121919",
    "end": "1128559"
  },
  {
    "text": "the the speed of development uh is really really fast right so if you think about well and also take a step back so",
    "start": "1128559",
    "end": "1136000"
  },
  {
    "text": "this puts developers a lot closer sort of to the operational side of things so if you figure your traditional you know",
    "start": "1136000",
    "end": "1142840"
  },
  {
    "text": "sort of uh development firm or or development team you usually have you know we've invented this thing called",
    "start": "1142840",
    "end": "1148440"
  },
  {
    "text": "devops where you know you try to get these developers or also do operations and they try to you know get you through the cicd process and get get things",
    "start": "1148440",
    "end": "1155720"
  },
  {
    "text": "deployed you still have to deploy a server or if you want to go down you know the container orchestration route",
    "start": "1155720",
    "end": "1161480"
  },
  {
    "text": "and you want to you know do uh kubernetes or something like that now you've got labels and pods and all these",
    "start": "1161480",
    "end": "1167280"
  },
  {
    "text": "other things that have to be created and orchestrated and containers built in order to run code and so it gets really",
    "start": "1167280",
    "end": "1173600"
  },
  {
    "text": "really complicated and you can spend months just trying to set up your environment in order to do something as",
    "start": "1173600",
    "end": "1180400"
  },
  {
    "text": "simple as again bad example but process an image or convert an image so with servess you can write a function that",
    "start": "1180400",
    "end": "1187400"
  },
  {
    "text": "converts an image or does a simple uh transformation for an ETL task for example and if you use a framework like",
    "start": "1187400",
    "end": "1194080"
  },
  {
    "text": "servus capital s or you use AWS Sam or you know Claudia Js or some of these",
    "start": "1194080",
    "end": "1199200"
  },
  {
    "text": "other ones you type a couple of commands in the command line and that deploys that application or that function to",
    "start": "1199200",
    "end": "1206240"
  },
  {
    "text": "Lambda or to open whisk or wherever to wherever you want it to go and then it's immediately available so you can build",
    "start": "1206240",
    "end": "1213919"
  },
  {
    "text": "applications and of course like we said The more functions you write or the the more complex you make your applications",
    "start": "1213919",
    "end": "1219600"
  },
  {
    "text": "you know the more robust they get but uh you can go ahead and build these things in minutes as opposed to potentially",
    "start": "1219600",
    "end": "1226640"
  },
  {
    "text": "waiting quite some time for an operation team or a devops team to set up an environment for you to actually launch",
    "start": "1226640",
    "end": "1233080"
  },
  {
    "text": "code and the benefit of that there comes with autoscaling as well so if I have to",
    "start": "1233080",
    "end": "1240480"
  },
  {
    "text": "write an ETL task or I'll give you an example I had a startup several years ago right about the time that AWS was",
    "start": "1240480",
    "end": "1247480"
  },
  {
    "text": "starting to get popular uh and they didn't have any of this stuff so we actually did an image processing",
    "start": "1247480",
    "end": "1252960"
  },
  {
    "text": "component and our image processing component would reach out to Facebook and Instagram and to Picassa would",
    "start": "1252960",
    "end": "1259080"
  },
  {
    "text": "download all your images that were associated with your accounts and we would run them through a series of processing scripts we had two giant",
    "start": "1259080",
    "end": "1266640"
  },
  {
    "text": "image servers that were just chugging that if we had a lot of activity they would basically choke right and so you'd",
    "start": "1266640",
    "end": "1273440"
  },
  {
    "text": "have a bunch of backed up things that needed to run so the same is actually kind of true now if you think about even",
    "start": "1273440",
    "end": "1278480"
  },
  {
    "text": "Auto scaling if I have you know something like elastic bean stock or I'm using opsw work or something where I I",
    "start": "1278480",
    "end": "1284960"
  },
  {
    "text": "have horizontally scaled Services I have to scale those up physical servers or",
    "start": "1284960",
    "end": "1290279"
  },
  {
    "text": "virtual servers but essentially have to launch more servers in order to in order to scale those up and that's not a",
    "start": "1290279",
    "end": "1296799"
  },
  {
    "text": "difficult thing to do it's just it takes you know 5 minutes to start up a new server or a new virtual machine and by",
    "start": "1296799",
    "end": "1302080"
  },
  {
    "text": "the time that happens I've already kind of lost the uh the real-time aspect of it with kubernetes or with Docker or if",
    "start": "1302080",
    "end": "1309520"
  },
  {
    "text": "you're using like ECS or even the EK eks Service uh at Amazon those will launch very quickly so it it's a little bit",
    "start": "1309520",
    "end": "1316039"
  },
  {
    "text": "better but with serverless I could just write image processing system now I could write that in an hour maybe and",
    "start": "1316039",
    "end": "1322840"
  },
  {
    "text": "launch it and I wouldn't have to worry about any operational stuff because that will just continue to scale as more",
    "start": "1322840",
    "end": "1328440"
  },
  {
    "text": "concurrent requests come in having spent about a month wrapping my head around kubernetes and trying to get stuff up",
    "start": "1328440",
    "end": "1334279"
  },
  {
    "text": "and all of that that sounds pretty darn appealing I got to say yeah and and if you look at it from the business case",
    "start": "1334279",
    "end": "1339600"
  },
  {
    "text": "which is is sort of the way I like to look at it so I'm a you know I traditionally been I started as a developer had my own web development",
    "start": "1339600",
    "end": "1346080"
  },
  {
    "text": "company you know grew that then I started some startups and so I've been in the CTO role in a number of positions",
    "start": "1346080",
    "end": "1352000"
  },
  {
    "text": "and when you're in the CTO role you're forced to think about the business value of things and just thinking about how",
    "start": "1352000",
    "end": "1357919"
  },
  {
    "text": "much money past companies I've worked for or started have invested in operations it's kind of crazy right I",
    "start": "1357919",
    "end": "1364799"
  },
  {
    "text": "mean we lost a lot of time just trying to figure out how to get our database to scale correctly or how to you know",
    "start": "1364799",
    "end": "1371320"
  },
  {
    "text": "distribute the workload for um our retail Tas or something like that um and so some people say well serverless is no",
    "start": "1371320",
    "end": "1378520"
  },
  {
    "text": "Ops which is not true but it certainly is less Ops right so most of what you need to do the developer can actually",
    "start": "1378520",
    "end": "1384640"
  },
  {
    "text": "handle and you might want a cloud guy that can or a cloud professional that can come in and say all right well we",
    "start": "1384640",
    "end": "1390400"
  },
  {
    "text": "want these I am roles or we want you know some tweak there's some tweaking of knobs you can do but uh for the most",
    "start": "1390400",
    "end": "1396799"
  },
  {
    "text": "part the idea is to say you don't have to worry about 95% of the infrastructure",
    "start": "1396799",
    "end": "1401919"
  },
  {
    "text": "anymore you just upload that code and it it goes live which saves your development teams a ton of money saves",
    "start": "1401919",
    "end": "1407440"
  },
  {
    "text": "you a ton of money you know or a ton of time to solve business problems as opposed to technical problems and then",
    "start": "1407440",
    "end": "1413919"
  },
  {
    "text": "the cost aspect of it is huge if you have spikes in traffic you can certainly plan your scaling so that you know when",
    "start": "1413919",
    "end": "1421279"
  },
  {
    "text": "you know you get heavy traffic maybe around noon time or certain times you can you sort of pre-warm your servers or",
    "start": "1421279",
    "end": "1428240"
  },
  {
    "text": "your your infrastructure so that you scale out a little bit so you can handle that load but you are wasting a ton of",
    "start": "1428240",
    "end": "1434559"
  },
  {
    "text": "money spending especially when it it isn't under that heavy Lo load so you just got all this idle time with",
    "start": "1434559",
    "end": "1440960"
  },
  {
    "text": "serverless you're only paying for when it executes which saves a lot of money",
    "start": "1440960",
    "end": "1446200"
  },
  {
    "text": "and so if you factor in you know 95% reduction or whatever it is in operational costs plus you're not paying",
    "start": "1446200",
    "end": "1453400"
  },
  {
    "text": "for any idle time serverless if you run it at scale might cost you a little bit",
    "start": "1453400",
    "end": "1458559"
  },
  {
    "text": "more than just running a a couple of ec2 servers but if you factor in total cost",
    "start": "1458559",
    "end": "1464120"
  },
  {
    "text": "of ownership and get rid of all of that other work all of that operation work and all of that planning and things like",
    "start": "1464120",
    "end": "1470279"
  },
  {
    "text": "that the value is is huge so your actual cost savings are you know gigantic",
    "start": "1470279",
    "end": "1475480"
  },
  {
    "text": "compared to you know sort of going that standard route by the way I see that uh Chris managed to get his internet back",
    "start": "1475480",
    "end": "1480600"
  },
  {
    "text": "so he is back with us cool so this sounds exciting you know as somebody who does deal with a lot of business",
    "start": "1480600",
    "end": "1485919"
  },
  {
    "text": "management what are the downsides like is local development hard are there any pain points like what what does this",
    "start": "1485919",
    "end": "1492159"
  },
  {
    "text": "cost us yeah so I think that is actually a really good point in terms of local",
    "start": "1492159",
    "end": "1498360"
  },
  {
    "text": "work flows it's easy to write a single function there's plenty of uh of Frameworks out there again serverless",
    "start": "1498360",
    "end": "1504320"
  },
  {
    "text": "capital S being one of the most popular ones AWS their serverless application model or Sam they have a local",
    "start": "1504320",
    "end": "1510360"
  },
  {
    "text": "development capabilities excuse me and there's a bunch of other ones out there as well so you can write a function and",
    "start": "1510360",
    "end": "1516399"
  },
  {
    "text": "you can execute it locally and everything is great you can simulate an event and it will spit back something for you but as soon as you say well I",
    "start": "1516399",
    "end": "1523399"
  },
  {
    "text": "need to write to this queue or I need to access information from Dynamo DB or",
    "start": "1523399",
    "end": "1529080"
  },
  {
    "text": "I've got to do you know some other calculation where I'm interacting with maybe I'm writing a function that",
    "start": "1529080",
    "end": "1534520"
  },
  {
    "text": "interacts with three other functions or a couple of other services whether it's through API calls or through direct",
    "start": "1534520",
    "end": "1539720"
  },
  {
    "text": "function calls so now it starts to get a little bit complicated and again there's tools out there that people are working",
    "start": "1539720",
    "end": "1545080"
  },
  {
    "text": "on better tools to do it uh sometimes you have to do a lot of mocking and stubbing in order to make the local",
    "start": "1545080",
    "end": "1550799"
  },
  {
    "text": "aspect of this work uh a little bit better but there's also um a lot of cloud-based solutions to this as well so",
    "start": "1550799",
    "end": "1558320"
  },
  {
    "text": "you know stackery and AWS has their Cloud9 service that allows you know sort of an online or web- based IDE that you",
    "start": "1558320",
    "end": "1565000"
  },
  {
    "text": "can do some of that stuff with so it it's getting better but it's certainly that aspect of it local development is",
    "start": "1565000",
    "end": "1571120"
  },
  {
    "text": "sort of a is sort of a pain but beyond the idea of just kind of working locally",
    "start": "1571120",
    "end": "1576320"
  },
  {
    "text": "servus right now does have its limits so uh AWS just announced that you can now run a function for 15 minutes as opposed",
    "start": "1576320",
    "end": "1583760"
  },
  {
    "text": "to the traditional five and I think IBM those run for 10 minutes but Google",
    "start": "1583760",
    "end": "1589159"
  },
  {
    "text": "Cloud functions I think is still five so there's some limitations there there's limitations on the amount of memory you",
    "start": "1589159",
    "end": "1594640"
  },
  {
    "text": "can use there's limitations on the number of CPU cycles that you kind of get with each function so there are some",
    "start": "1594640",
    "end": "1601159"
  },
  {
    "text": "limitations and that means it isn't necessarily perfect for every workload",
    "start": "1601159",
    "end": "1606240"
  },
  {
    "text": "but they're also sort of arbitrary limits right so just because it can only run for 15 minutes is probably more of a",
    "start": "1606240",
    "end": "1614679"
  },
  {
    "text": "provisioning or a sort of a a resource planning restraint that or constraint",
    "start": "1614679",
    "end": "1620279"
  },
  {
    "text": "that AWS has because they say well we can't just run servers with enough capacity that somebody could you know",
    "start": "1620279",
    "end": "1626799"
  },
  {
    "text": "tie one up for an hour and a half we need to kind of we need to kind of balance that because they're paying for",
    "start": "1626799",
    "end": "1632480"
  },
  {
    "text": "idle time you're not which I kind of mentioned the last point about the cost savings is now the cloud provider is",
    "start": "1632480",
    "end": "1639240"
  },
  {
    "text": "taking the risk on idle time as opposed to the the company that's buying that",
    "start": "1639240",
    "end": "1645320"
  },
  {
    "text": "time so there's a there's a huge win there obviously but again with some of those limitations serverless isn't",
    "start": "1645320",
    "end": "1652360"
  },
  {
    "text": "necessarily right for everything so to run it locally uh sorry to go to go back to that you said that you'd either have",
    "start": "1652360",
    "end": "1658000"
  },
  {
    "text": "to run all of the functions that you that the one you're working on may need to hit or you might need to mock those in some way is there any like helpers",
    "start": "1658000",
    "end": "1665320"
  },
  {
    "text": "with that and I assume that they would be specific to like the types of functions whether they're Lambda functions or or Google cloud or the",
    "start": "1665320",
    "end": "1672320"
  },
  {
    "text": "other whatever other provider are they specific to those yeah I mean and so also sort of be clear about how these",
    "start": "1672320",
    "end": "1679039"
  },
  {
    "text": "functions work essentially what it is is it's just a Handler so it's actually so there's a Handler function within your",
    "start": "1679039",
    "end": "1685559"
  },
  {
    "text": "code and when the function gets triggered the system knows to call that",
    "start": "1685559",
    "end": "1690640"
  },
  {
    "text": "function within your code and then from there you can call other functions and have other requirements and things like",
    "start": "1690640",
    "end": "1695679"
  },
  {
    "text": "that but the basic idea is you're just running whatever code you're running so you're running you know JavaScript or",
    "start": "1695679",
    "end": "1701840"
  },
  {
    "text": "your or node you're running python or go those applications will just run locally on your machine so you have to have",
    "start": "1701840",
    "end": "1708320"
  },
  {
    "text": "obviously that um you have to have that runtime installed so that you can execute that code but so when you do",
    "start": "1708320",
    "end": "1714200"
  },
  {
    "text": "that these other Cloud providers where you're going to host the code really doesn't matter when you run it locally",
    "start": "1714200",
    "end": "1721200"
  },
  {
    "text": "it's when you are trying to reach out to another service that needs to exist so if you're using Dynamo DB for example",
    "start": "1721200",
    "end": "1728000"
  },
  {
    "text": "there's a local version of Dynamo DB that you can download and run but let's say you're accessing MySQL or postgress",
    "start": "1728000",
    "end": "1734679"
  },
  {
    "text": "you can just run a local copy of that and then locally point to it so that you don't have to you know connect remotely",
    "start": "1734679",
    "end": "1740240"
  },
  {
    "text": "one of the things that I do in my development a lot is especially because I interact with you know I do a lot with microservices I will write a",
    "start": "1740240",
    "end": "1746559"
  },
  {
    "text": "microservice and you know test it locally and have it do what it needs to do and then I'll publish that you know",
    "start": "1746559",
    "end": "1751919"
  },
  {
    "text": "whether it's in Dev or in staging or sometimes in production depending on what we're doing with it and then the",
    "start": "1751919",
    "end": "1757080"
  },
  {
    "text": "great thing is is that when you run another microservice locally you can make that remote call to that live",
    "start": "1757080",
    "end": "1765440"
  },
  {
    "text": "microservice so you know so it it does give you the ability of course if you lose your internet connection or the",
    "start": "1765440",
    "end": "1770960"
  },
  {
    "text": "function becomes unavailable for some reason then obviously it's harder to test but I mean I'm a big proponent of writing a lot of stubbed tests um doing",
    "start": "1770960",
    "end": "1777679"
  },
  {
    "text": "a lot of unit testing and things like that and then sort of running a full integration test that actually will",
    "start": "1777679",
    "end": "1783120"
  },
  {
    "text": "access live Services uh in order to do it but there are some things you can do you know you can run local apis you can",
    "start": "1783120",
    "end": "1789559"
  },
  {
    "text": "run um you know local versions like I said of of of Dynamo DB or some other services but it is it's not I'd say it's",
    "start": "1789559",
    "end": "1796399"
  },
  {
    "text": "not any more difficult than trying to test microservices written in you know",
    "start": "1796399",
    "end": "1801760"
  },
  {
    "text": "in a more traditional sense one restriction that that I noticed when doing um some Lambda development was",
    "start": "1801760",
    "end": "1808320"
  },
  {
    "text": "basically the the version of of node that you want to use is uh not necessarily the version of node that",
    "start": "1808320",
    "end": "1815279"
  },
  {
    "text": "that Amazon is running I imagine um platforms like I don't know if that's",
    "start": "1815279",
    "end": "1821240"
  },
  {
    "text": "the same for Google cloud or Azure but I think with with open whisk anyway you have some sort of at the very least you",
    "start": "1821240",
    "end": "1827760"
  },
  {
    "text": "can run your own sance of it and and kind of have a better more granular control over over your environment but",
    "start": "1827760",
    "end": "1835480"
  },
  {
    "text": "um yeah that's one problem I ran into and it's like why isn't AWS upgrading",
    "start": "1835480",
    "end": "1840600"
  },
  {
    "text": "node you know nodes this version of node that they're running is about to become unmaintained you know yeah no well no",
    "start": "1840600",
    "end": "1847720"
  },
  {
    "text": "that's a good question and actually I that was one of the things that frustrated me quite a bit because I was",
    "start": "1847720",
    "end": "1853200"
  },
  {
    "text": "writing node functions with you know async and A8 when I first started using using Lambda because you could polyfill",
    "start": "1853200",
    "end": "1859960"
  },
  {
    "text": "or you could um you know you could uh run the latest version and when AWS",
    "start": "1859960",
    "end": "1865120"
  },
  {
    "text": "launches Lambda it was at like 4.3 and so you couldn't do quite a bit quite a bit of things then they upgraded to 6.1",
    "start": "1865120",
    "end": "1872200"
  },
  {
    "text": "and they still didn't have async a weight which made me when I switched to writing a lot of things for serverless I",
    "start": "1872200",
    "end": "1878240"
  },
  {
    "text": "had to switch back to promises and so I was writing a lot of things with Bluebird and and things like that in",
    "start": "1878240",
    "end": "1884159"
  },
  {
    "text": "order to manage um you know the uh the processes there quite a while ago they've upgraded to eight uh this is",
    "start": "1884159",
    "end": "1890200"
  },
  {
    "text": "Lambda and I know that Google Cloud functions is now on eight so most of that new functionality is there but I",
    "start": "1890200",
    "end": "1896880"
  },
  {
    "text": "think part of the reason why they do that is it needs to be highly stable and I think they may need to make some",
    "start": "1896880",
    "end": "1903039"
  },
  {
    "text": "adjustments to it in terms of how it operates in terms of how much uh memory it uses and I guess you know they're",
    "start": "1903039",
    "end": "1908559"
  },
  {
    "text": "running it through their hypervisors and all kinds of things like that so I think they just need to be smart about it and that's why it takes a little bit of time",
    "start": "1908559",
    "end": "1914440"
  },
  {
    "text": "to upgrade but I will say that node 8 you know there's some new things that have come out but Note 8 is and it's 8.1",
    "start": "1914440",
    "end": "1921240"
  },
  {
    "text": "that they're running on Lambda I found I can do pretty much anything I want with it so it would be nice if they always",
    "start": "1921240",
    "end": "1927559"
  },
  {
    "text": "were up to date but um it's at a point now where you know I know node's getting better but uh version 8.1 is is pretty",
    "start": "1927559",
    "end": "1934600"
  },
  {
    "text": "good gives us async AE gives us classes you know gives us some of those more modern things that makes development",
    "start": "1934600",
    "end": "1940200"
  },
  {
    "text": "easier right yeah I I had resorted to actually transpiling my code and with",
    "start": "1940200",
    "end": "1945840"
  },
  {
    "text": "Babble and then just like uploading a bundle um so yeah I'm glad to hear that",
    "start": "1945840",
    "end": "1952360"
  },
  {
    "text": "that things have have moved forward I think one other benefit that uh that you might have mentioned that I didn't",
    "start": "1952360",
    "end": "1958240"
  },
  {
    "text": "really realize until you said it is that with with you being able to kind of have",
    "start": "1958240",
    "end": "1963519"
  },
  {
    "text": "functions or or services that are just oriented to one specific thing and aren't really Reliant maybe on other",
    "start": "1963519",
    "end": "1970000"
  },
  {
    "text": "ones in except for on the edges and the ways that you communicate in and out of them uh it does allow you to diversify",
    "start": "1970000",
    "end": "1976360"
  },
  {
    "text": "your the technology you're using where whether you want to switch between languages or switch between like",
    "start": "1976360",
    "end": "1981639"
  },
  {
    "text": "Frameworks or or start migrating to a new a new language or framework that's um a benefit that I hadn't really",
    "start": "1981639",
    "end": "1987200"
  },
  {
    "text": "considered yeah no actually that's one of the that's one of the huge benefits there so again you think about your traditional microservice everything you",
    "start": "1987200",
    "end": "1993919"
  },
  {
    "text": "do in that microservice you're usually going to choose sort of one runtime right you're going to say we're going to write everything in python or",
    "start": "1993919",
    "end": "1999679"
  },
  {
    "text": "everything's going to be in node or whatever and you do that because again you don't want your containers or your",
    "start": "1999679",
    "end": "2005039"
  },
  {
    "text": "services or the services servers that the service are running on you don't want them to have too many run times",
    "start": "2005039",
    "end": "2010559"
  },
  {
    "text": "installed so they can do all these different things so but with something like serverless you can say look the",
    "start": "2010559",
    "end": "2016399"
  },
  {
    "text": "tool that accesses or the function that accesses the database and writes this stuff here you know node is fine for",
    "start": "2016399",
    "end": "2021600"
  },
  {
    "text": "that that that's okay but then we have maybe some sort of uh number crunching thing that we need to do in order to",
    "start": "2021600",
    "end": "2027440"
  },
  {
    "text": "compile some reports and and maybe python would be better in order to write that in so now within one microservice",
    "start": "2027440",
    "end": "2033320"
  },
  {
    "text": "you could have multiple languages being used and those functions can communicate with one another you know just through a",
    "start": "2033320",
    "end": "2039399"
  },
  {
    "text": "simple HTTP call through the um you know through the sdks so it's very very easy",
    "start": "2039399",
    "end": "2044639"
  },
  {
    "text": "for you to diversify that way so that's within a single service but even more",
    "start": "2044639",
    "end": "2050040"
  },
  {
    "text": "practical probably is to say look we have a team that is writing this particular service and they think it's",
    "start": "2050040",
    "end": "2055800"
  },
  {
    "text": "better to write it in Java or uh net or whatever and then we've got another team",
    "start": "2055800",
    "end": "2061000"
  },
  {
    "text": "that is a is a JavaScript team or whatever so that's really great because now you can have a diverse set of um you",
    "start": "2061000",
    "end": "2067480"
  },
  {
    "text": "know Technologies uh you don't want to get too many but you could have a diverse set of Technologies but what's really great about this idea of",
    "start": "2067480",
    "end": "2074000"
  },
  {
    "text": "splitting up functions into really small units is to say okay somebody wrote this function in Python a year ago and we",
    "start": "2074000",
    "end": "2081158"
  },
  {
    "text": "have a new guy came in and we need to make some changes to it could probably rewrite that entire function in a couple",
    "start": "2081159",
    "end": "2087000"
  },
  {
    "text": "of hours because it's so small you know it's a couple hundred lines of code not even maybe 100 lines of code so you could rewrite that function in a new in",
    "start": "2087000",
    "end": "2093919"
  },
  {
    "text": "a new uh language and then run your unit test against it and yeah it work does exactly what we needed to do so that's",
    "start": "2093919",
    "end": "2100400"
  },
  {
    "text": "another great thing about this is where you're really minimizing this you know this the code surface right so you do",
    "start": "2100400",
    "end": "2106280"
  },
  {
    "text": "less and less in code and more with these managed services that it connects to then it makes it extremely efficient",
    "start": "2106280",
    "end": "2113160"
  },
  {
    "text": "for developers to kind of go in and make changes swap things out and then you're also not looking through you know that",
    "start": "2113160",
    "end": "2119000"
  },
  {
    "text": "uh that Library file that is you know 10,000 lines long with no comments and",
    "start": "2119000",
    "end": "2124119"
  },
  {
    "text": "things that aren't even being used anymore but you're afraid to remove them because you don't know if they're not being used anymore this is just much",
    "start": "2124119",
    "end": "2129520"
  },
  {
    "text": "more obvious when you take this approach feel like you're calling out my codebase right now we all have",
    "start": "2129520",
    "end": "2135560"
  },
  {
    "text": "them that actually raises kind of an interesting question which is how do you manage these code bases like is this a",
    "start": "2135560",
    "end": "2141599"
  },
  {
    "text": "bunch of folders in a single repo do you have repos for every function like how are you think even thinking about these",
    "start": "2141599",
    "end": "2147560"
  },
  {
    "text": "things so actually that is one of the things that's sort of the downside to this so what I do and what a lot of",
    "start": "2147560",
    "end": "2153560"
  },
  {
    "text": "people recommend is to create a separate G repository for each microservice that",
    "start": "2153560",
    "end": "2158920"
  },
  {
    "text": "you're creating and then if you're using so serverless for example framework seress framework capital S uses um a",
    "start": "2158920",
    "end": "2166319"
  },
  {
    "text": "serverless do yaml file which you specify all the functions and you can also specify specify Cloud um cloud",
    "start": "2166319",
    "end": "2173839"
  },
  {
    "text": "formation templates in there as well so if you need to generate an sqsq or you need to generate a um SNS or any other",
    "start": "2173839",
    "end": "2181040"
  },
  {
    "text": "services you need a Dynamo DB table you can do that all in one file so you typically have your service",
    "start": "2181040",
    "end": "2188119"
  },
  {
    "text": "all sort of defined within one serverless yaml file it's very similar",
    "start": "2188119",
    "end": "2193960"
  },
  {
    "text": "when you're doing a Sam template you define all your functions everything in a single Sam template along with your",
    "start": "2193960",
    "end": "2199040"
  },
  {
    "text": "cloud formation resources and so you have all those functions in and I like to split out my functions into separate",
    "start": "2199040",
    "end": "2205119"
  },
  {
    "text": "files too sometimes people will identify a function that points to a Handler",
    "start": "2205119",
    "end": "2210599"
  },
  {
    "text": "within a larger file that has multiple functions in it so you have a lot of flexibility there but I always separate",
    "start": "2210599",
    "end": "2215680"
  },
  {
    "text": "them into into smaller ones so now you have just this folder this git repo that has this set of functionality in it you",
    "start": "2215680",
    "end": "2223000"
  },
  {
    "text": "tag your functions so you know that it's part of a particular service and so forth but that's the best in my opinion",
    "start": "2223000",
    "end": "2228960"
  },
  {
    "text": "that's how I do it I found that to be the best way to do it if you start kind of co-mingling them in a larger mono",
    "start": "2228960",
    "end": "2234280"
  },
  {
    "text": "repo or something like that then it just kind of gets confusing in terms of which service does which but if you own that",
    "start": "2234280",
    "end": "2241200"
  },
  {
    "text": "git repo and again this can get difficult to manage because sometimes you have 100 microservices so now have",
    "start": "2241200",
    "end": "2247800"
  },
  {
    "text": "100 git repos which seems a little bit crazy but I still found this to be the best so now you can go in and you can",
    "start": "2247800",
    "end": "2253599"
  },
  {
    "text": "document that you can uh specify what the you know the well-defined interface how people are supposed to communicate",
    "start": "2253599",
    "end": "2259359"
  },
  {
    "text": "with it what the events should look like going in what events will look like coming out so you can really own that",
    "start": "2259359",
    "end": "2264839"
  },
  {
    "text": "and give that to one team and then version it separately and of course with microservices you know you can have 100 microservices running and then I can go",
    "start": "2264839",
    "end": "2271280"
  },
  {
    "text": "ahead and swap services in and out so long as I you know if I've made a contract with any other microservice I",
    "start": "2271280",
    "end": "2277240"
  },
  {
    "text": "know that um I know that it's going to accept the input and it's going to respond in a way that it can understand",
    "start": "2277240",
    "end": "2284200"
  },
  {
    "text": "yeah I worry a little bit and I don't have much experience actually implementing serve Lo but I worry a little bit that we're going to have you",
    "start": "2284200",
    "end": "2289839"
  },
  {
    "text": "know the old joke about microservices right which is like you have a problem so you implement microservices now you",
    "start": "2289839",
    "end": "2295079"
  },
  {
    "text": "have 100 problems exactly this might take that even to another level at least",
    "start": "2295079",
    "end": "2300359"
  },
  {
    "text": "in terms of like conceptual management of the code yeah I mean I totally agree with you and I mean I had kind of gone",
    "start": "2300359",
    "end": "2307000"
  },
  {
    "text": "back and about you know the best way to to organize stuff cuz in some cases if you think about just think about simple",
    "start": "2307000",
    "end": "2313200"
  },
  {
    "text": "rest API so a lot of times there's this argument for serverless functions to say okay so if I have a a rest API that",
    "start": "2313200",
    "end": "2320760"
  },
  {
    "text": "looks up a customer then I should point that to a serverless function that just",
    "start": "2320760",
    "end": "2325839"
  },
  {
    "text": "looks up the customer and then if I need to add a new customer I should have another endpoint there and that should",
    "start": "2325839",
    "end": "2331599"
  },
  {
    "text": "point to a different function that handles just adding a customer and so the the idea is to keep these functions",
    "start": "2331599",
    "end": "2337680"
  },
  {
    "text": "as small as possible but the problem is is that then you end up if you've got a complex API you may have you know 40",
    "start": "2337680",
    "end": "2344680"
  },
  {
    "text": "functions as part of a single API as part of a single microservice and that",
    "start": "2344680",
    "end": "2350160"
  },
  {
    "text": "becomes to me a little bit unwieldy and there's a lot of shared code you want in there you know the database connection",
    "start": "2350160",
    "end": "2356599"
  },
  {
    "text": "information or configuration information so there's a lot of that that you want to share uh and you can certainly have a",
    "start": "2356599",
    "end": "2361839"
  },
  {
    "text": "shared Library between those different functions um that get deployed when you deploy the function but like to",
    "start": "2361839",
    "end": "2367720"
  },
  {
    "text": "consolidate sometimes so I like to say look if I've got an API that needs to do maybe an admin of a user so it can add a",
    "start": "2367720",
    "end": "2374720"
  },
  {
    "text": "new user can remove user it can update their profile image whatever you want to do there sometimes I'll stick all of",
    "start": "2374720",
    "end": "2380520"
  },
  {
    "text": "those routes into a single into a single lamba function because you also have this problem of cold starts which we",
    "start": "2380520",
    "end": "2387000"
  },
  {
    "text": "haven't even really talked about yet but when a new function that isn't warm that hasn't been used in a while when",
    "start": "2387000",
    "end": "2392640"
  },
  {
    "text": "somebody tries to access that function it might take a couple of seconds sometimes before that function becomes",
    "start": "2392640",
    "end": "2397760"
  },
  {
    "text": "available and so if you're using functions as the backend for an API uh",
    "start": "2397760",
    "end": "2402960"
  },
  {
    "text": "you want to keep those functions warm you you don't want those to get cold because then it could take some time and",
    "start": "2402960",
    "end": "2408400"
  },
  {
    "text": "there'd be higher latency in order to get a response back so by consolidating functions or routes into a single",
    "start": "2408400",
    "end": "2414160"
  },
  {
    "text": "function that again accesses a library and so forth I've still found the performance to be extremely good um and",
    "start": "2414160",
    "end": "2419680"
  },
  {
    "text": "then the management of it is a heck of a lot easier has anyone created some sort of maybe if you have this situation",
    "start": "2419680",
    "end": "2425079"
  },
  {
    "text": "where you have this microservice for instance and and maybe it does you know the four crud operations or or what have",
    "start": "2425079",
    "end": "2432400"
  },
  {
    "text": "you has anyone created some sort of abstraction that that says okay you just write your code and you pretend it's a",
    "start": "2432400",
    "end": "2437760"
  },
  {
    "text": "single code base but what we're going to do is essentially split this up into you",
    "start": "2437760",
    "end": "2442800"
  },
  {
    "text": "know like basically there's like a tool or or something that would uh split it",
    "start": "2442800",
    "end": "2448240"
  },
  {
    "text": "up behind the scenes based on the endpoint and so it kind of like allows",
    "start": "2448240",
    "end": "2453640"
  },
  {
    "text": "you as a developer to look at it as a single entity uh like basically just so you can reason about it a little better",
    "start": "2453640",
    "end": "2459760"
  },
  {
    "text": "and then maybe it implements say sharing of code between things and then but it",
    "start": "2459760",
    "end": "2466079"
  },
  {
    "text": "actually kind of so you don't have to think about it it it would split up your service into multiple multiple functions",
    "start": "2466079",
    "end": "2472720"
  },
  {
    "text": "has anyone attempted anything like that or is there anything out there that does this well so to some degree I mean if",
    "start": "2472720",
    "end": "2478200"
  },
  {
    "text": "you think about uh like a web framework like um Express for example you know so the idea is Express is generally you",
    "start": "2478200",
    "end": "2485119"
  },
  {
    "text": "define all your routes and then you kind of offload those to separate files that will actually do the the processing of",
    "start": "2485119",
    "end": "2491200"
  },
  {
    "text": "those routes and you would share your library there so I actually wrote um an open source project it's called Lambda",
    "start": "2491200",
    "end": "2497960"
  },
  {
    "text": "API and you can go to bitly bit.ly Lambda API and it's specifically for uh",
    "start": "2497960",
    "end": "2503880"
  },
  {
    "text": "AWS and Lambda but what it is is it's essentially a very very lightweight version of Express and so when I am",
    "start": "2503880",
    "end": "2511280"
  },
  {
    "text": "writing apis as I just you know said about kind of consolidating all the routes into one Lambda function what",
    "start": "2511280",
    "end": "2517200"
  },
  {
    "text": "what I'll do is I'll do that and then use Lambda API which Maps the you know Maps the routes just like it would for",
    "start": "2517200",
    "end": "2524280"
  },
  {
    "text": "Express or restify or any of those and then I'll break the the actual business",
    "start": "2524280",
    "end": "2529680"
  },
  {
    "text": "logic out into separate Library files and so if I want to be able to access",
    "start": "2529680",
    "end": "2535680"
  },
  {
    "text": "the service from an API from the rest API I have one file that will do all that routing for me so it makes it a",
    "start": "2535680",
    "end": "2542559"
  },
  {
    "text": "little bit easier from a sort of a an original or initial setup standpoint and of course I can I can communicate with",
    "start": "2542559",
    "end": "2548920"
  },
  {
    "text": "those uh individual functions but then I also would potentially launch those uh",
    "start": "2548920",
    "end": "2554280"
  },
  {
    "text": "as separate functions so that I could communicate with them directly through the SDK so it's not exactly what you're",
    "start": "2554280",
    "end": "2560160"
  },
  {
    "text": "talking about but but I I see what you're saying where you just want to kind of write an application then have it split it up automatically for you I",
    "start": "2560160",
    "end": "2565800"
  },
  {
    "text": "think there's just a lot of code sharing that needs to happen there and so I think that you want to know where those",
    "start": "2565800",
    "end": "2572559"
  },
  {
    "text": "where those separations are but again the the part of the and I don't want to get too deep into this but one of the",
    "start": "2572559",
    "end": "2578280"
  },
  {
    "text": "things that you often find with microservices and teams that are building microservices are shared code",
    "start": "2578280",
    "end": "2583680"
  },
  {
    "text": "bases where you know there might be some sort of a database connection layer and whether you're connecting to a different",
    "start": "2583680",
    "end": "2588839"
  },
  {
    "text": "database or not isn't the point there's just somebody wrote code that does the the databased connection so in a",
    "start": "2588839",
    "end": "2594200"
  },
  {
    "text": "monolithic application you just include that and that's available for every service that you kind of have running in",
    "start": "2594200",
    "end": "2599319"
  },
  {
    "text": "the monolith when you break that out now sometimes you have to have you know 10 different services that need to share",
    "start": "2599319",
    "end": "2605200"
  },
  {
    "text": "code in order to do this database connection and so the problem with doing that is obviously if somebody changes",
    "start": "2605200",
    "end": "2611079"
  },
  {
    "text": "the code because they need to do something there then all of a sudden you get all this code that's out of sync so you can you know go down the road of",
    "start": "2611079",
    "end": "2616599"
  },
  {
    "text": "versioning and and and things like that so that everybody could have their own version of it but you're always working on the on the main repository if you",
    "start": "2616599",
    "end": "2623559"
  },
  {
    "text": "need to update that but within an individual microservice you can write your own shared libraries right so if",
    "start": "2623559",
    "end": "2629960"
  },
  {
    "text": "you write a Lambda function that accesses you know let's say does some process where it finds some matches in a",
    "start": "2629960",
    "end": "2636240"
  },
  {
    "text": "database if there's a a snippet of code that does that you can have that snippet of code be triggered when somebody calls",
    "start": "2636240",
    "end": "2643240"
  },
  {
    "text": "that from an API and an API event comes in and you can have it trigger that bit of code but then you could also share",
    "start": "2643240",
    "end": "2649599"
  },
  {
    "text": "that code with another Lambda function that's meant to uh respond when there is",
    "start": "2649599",
    "end": "2656000"
  },
  {
    "text": "a when there's a Kinesis event that comes in or some other event that comes in or it's called directly from another",
    "start": "2656000",
    "end": "2661640"
  },
  {
    "text": "function So within the microservice reusing code uh is pretty simple and",
    "start": "2661640",
    "end": "2666880"
  },
  {
    "text": "when you deploy your microservice you generally redeploy all of your functions so that any new updates are part of it",
    "start": "2666880",
    "end": "2673319"
  },
  {
    "text": "but because it's all owned by the same team or should be owned by the same team managing that is is a lot easier I don't",
    "start": "2673319",
    "end": "2679359"
  },
  {
    "text": "know if that answered your question in any way shape or form it's hard to say I'm I'm I need to look at this this",
    "start": "2679359",
    "end": "2684440"
  },
  {
    "text": "Lambda API thing but uh I'll check it out here I think we're at a good spot to take another quick break and then when",
    "start": "2684440",
    "end": "2691559"
  },
  {
    "text": "we come back we will dive a little bit deeper into this concept of architecture what does it look like like to implement",
    "start": "2691559",
    "end": "2698280"
  },
  {
    "text": "an application using serverless and do you build your hold application how does",
    "start": "2698280",
    "end": "2703960"
  },
  {
    "text": "how does one architect to take advantage of this but we'll see you after the [Music]",
    "start": "2703960",
    "end": "2713909"
  },
  {
    "text": "break this episode is brought to you by digital ocean the simplest Cloud platform for developers and teams deploy",
    "start": "2714240",
    "end": "2722079"
  },
  {
    "text": "manage scale faster and more efficiently on digital ocean managing infrastructure",
    "start": "2722079",
    "end": "2727599"
  },
  {
    "text": "is easy for teams whether you're running one virtual machine or thousands use our special link to get a $100 credit for",
    "start": "2727599",
    "end": "2733760"
  },
  {
    "text": "digital ocean and try it today for free head to do. co/ changelog once again",
    "start": "2733760",
    "end": "2742280"
  },
  {
    "text": "do. change log so I have some pretty awesome news to share we are now partnered with agolia if you've ever",
    "start": "2742280",
    "end": "2749240"
  },
  {
    "text": "searched Hacker News Teespring medium twitch or even product hunt then you've",
    "start": "2749240",
    "end": "2754400"
  },
  {
    "text": "experienced the results of aolia search API and as we expand our content we knew",
    "start": "2754400",
    "end": "2759880"
  },
  {
    "text": "that one day we'd have to either roll our own search Solution on top of postgress or we can partner up with aolia and I'm happy to report that phase",
    "start": "2759880",
    "end": "2767319"
  },
  {
    "text": "one of our search is now Power by agolia we're able to fine-tune our indexing gain insights from search patterns and",
    "start": "2767319",
    "end": "2774240"
  },
  {
    "text": "analytics we can create custom query rules to influence ranking Behavior as well as improve our search experience by",
    "start": "2774240",
    "end": "2780079"
  },
  {
    "text": "adding synonyms and alternative corrections to queries sure we could build search ourselves but that would mean we would be busy doing that instead",
    "start": "2780079",
    "end": "2786520"
  },
  {
    "text": "of shipping shows like you're listening to right now huge thanks to our friends at aolia for working with us check the",
    "start": "2786520",
    "end": "2792160"
  },
  {
    "text": "show notes for a link to get started for free or learn more by heading to aia.com",
    "start": "2792160",
    "end": "2798078"
  },
  {
    "text": "[Music]",
    "start": "2802140",
    "end": "2808400"
  },
  {
    "text": "okay welcome back everyone back on JS party talking about serverless I want to",
    "start": "2808400",
    "end": "2813839"
  },
  {
    "text": "explore with you Jeremy a little bit of a question of how do we use this in the",
    "start": "2813839",
    "end": "2819000"
  },
  {
    "text": "broader ecosystem of product development you know if we're starting to flot in serverless is this something that is",
    "start": "2819000",
    "end": "2826040"
  },
  {
    "text": "like you're going to rearchitecturing",
    "start": "2826040",
    "end": "2829400"
  },
  {
    "text": "out for little pieces like how does this play into the way that we fully build applications yeah so first of all I",
    "start": "2834319",
    "end": "2840480"
  },
  {
    "text": "would highly suggest about you know version 2 syndrome and saying hey let's just rewrite our whole application",
    "start": "2840480",
    "end": "2847040"
  },
  {
    "text": "because chances are most of your application is probably running just fine or you know it's at least it's at least running so an important thing to",
    "start": "2847040",
    "end": "2854040"
  },
  {
    "text": "remember with serverless too or I mean really any technology you want to integrate in sort of slowly is it's not",
    "start": "2854040",
    "end": "2859440"
  },
  {
    "text": "an All or Nothing proposition so it's not like everything has to be serous and uh or vice versa so the way that I would",
    "start": "2859440",
    "end": "2866599"
  },
  {
    "text": "suggest especially if you're a new team and you're looking at this whether you're already running microservices or you're running a monolith or whatever",
    "start": "2866599",
    "end": "2872960"
  },
  {
    "text": "you're doing you know look at what parts of your application that you know you want to improve pick a small part of it",
    "start": "2872960",
    "end": "2879319"
  },
  {
    "text": "maybe it's an ETL task maybe it's some sort of processing task and then you can build out you know a serverless or small",
    "start": "2879319",
    "end": "2885440"
  },
  {
    "text": "serverless microservice or application that handles that piece of your of your system and then using something like the",
    "start": "2885440",
    "end": "2892040"
  },
  {
    "text": "Strangler pattern where you would you know maybe use API Gateway to send you know most of your traffic most of your",
    "start": "2892040",
    "end": "2898319"
  },
  {
    "text": "API traffic goes to your old monolith or your other microservices uh and then you take one route and you route that into",
    "start": "2898319",
    "end": "2905400"
  },
  {
    "text": "your uh your server list you the serverless application that you built so again that it's an important piece of it",
    "start": "2905400",
    "end": "2910480"
  },
  {
    "text": "because I do think that over time you might look and say well we have a problem scaling this one particular",
    "start": "2910480",
    "end": "2915760"
  },
  {
    "text": "piece of our application and maybe my monolith works perfectly fine for everything else but when I have to do X",
    "start": "2915760",
    "end": "2921760"
  },
  {
    "text": "I get bottleneck so maybe that would be a good candidate to split out and take advantage of that sort of near Limitless",
    "start": "2921760",
    "end": "2927200"
  },
  {
    "text": "scaling that cus gives us interesting I had to quickly Google the Strangler pattern because that was that's a new",
    "start": "2927200",
    "end": "2933520"
  },
  {
    "text": "one to me so that's essentially if I'm understanding it properly it's like basically giving you a way to migrate",
    "start": "2933520",
    "end": "2941200"
  },
  {
    "text": "pieces at a time via having a routing layer in between your application and and other things is that right correct",
    "start": "2941200",
    "end": "2946559"
  },
  {
    "text": "that's correct yeah okay cool okay so coming from an existing thing pick a piece that you want to scale better or",
    "start": "2946559",
    "end": "2953040"
  },
  {
    "text": "something and tackle that what about when you're thinking about building an application from scratch uh is this you",
    "start": "2953040",
    "end": "2959319"
  },
  {
    "text": "know is serverless something where you would for example build a whole web app that's all serverless or is this",
    "start": "2959319",
    "end": "2965799"
  },
  {
    "text": "something that fits into a broader ecosystem like how do you deal with things like authentication and all that",
    "start": "2965799",
    "end": "2971280"
  },
  {
    "text": "other kind of nonsense yeah so I mean it all depends obviously on what you're building but if I if if I'm working on a",
    "start": "2971280",
    "end": "2977200"
  },
  {
    "text": "new Green Field application I'm going to ask myself the question can this be",
    "start": "2977200",
    "end": "2982359"
  },
  {
    "text": "built in serus if the answer is yes then you build it in servus uh if the answer is no then you ask yourself that",
    "start": "2982359",
    "end": "2988359"
  },
  {
    "text": "question can I build it in serverless because you probably can so it's sort of a a thing to me where I can't see many",
    "start": "2988359",
    "end": "2995040"
  },
  {
    "text": "applications that the majority of them couldn't be built in serverless I do think there are some limitations again",
    "start": "2995040",
    "end": "3001520"
  },
  {
    "text": "especially with long running tasks and things like that but servis Inc is launching V2 of their framework which is",
    "start": "3001520",
    "end": "3008960"
  },
  {
    "text": "going to be Cloud agnostic and one of the features they have there is you can actually launch your functions either as",
    "start": "3008960",
    "end": "3014680"
  },
  {
    "text": "Lambda functions which would be the traditional serverless or you can launch them as fargate functions or fargate",
    "start": "3014680",
    "end": "3020280"
  },
  {
    "text": "containers so it would actually launch your function into a fargate container so you are using fargate into a",
    "start": "3020280",
    "end": "3026319"
  },
  {
    "text": "container so that you could run that as long as you wanted to so basically would build the container and launch a little",
    "start": "3026319",
    "end": "3031640"
  },
  {
    "text": "server for you and scale that so that's Al kind of a new thing where where serverless might be heading where",
    "start": "3031640",
    "end": "3036760"
  },
  {
    "text": "containers might be part of this but anyway so if I'm building a new application though there's pretty much everything I would I would look at it",
    "start": "3036760",
    "end": "3042599"
  },
  {
    "text": "and say you know what do I need to actually process what are the business rules that I or the what's the business",
    "start": "3042599",
    "end": "3049160"
  },
  {
    "text": "logic that I have to write because I think a lot of times people start planning an application they say okay well what database should we use or what",
    "start": "3049160",
    "end": "3055720"
  },
  {
    "text": "programming language should be write it and with serus I think you can just basically say okay what do I what do I want to solve and then you can find a",
    "start": "3055720",
    "end": "3062720"
  },
  {
    "text": "bunch of managed services and pieces that you can kind of glue together and you really don't have to write that much",
    "start": "3062720",
    "end": "3068240"
  },
  {
    "text": "code in order to get a working application and if you're obviously going to well most likely have a front",
    "start": "3068240",
    "end": "3074480"
  },
  {
    "text": "end to your application whether it's react app or view or angular whatever you're using then you start thinking",
    "start": "3074480",
    "end": "3080880"
  },
  {
    "text": "about okay how can I have serverless back my CDN right so how can I how can I",
    "start": "3080880",
    "end": "3086359"
  },
  {
    "text": "put stuff out on um in an S3 bucket or um on um one of the other uh CDN",
    "start": "3086359",
    "end": "3092200"
  },
  {
    "text": "providers and say that can be my single page app maybe that can get that can go",
    "start": "3092200",
    "end": "3097240"
  },
  {
    "text": "beyond a single page app because another component I'm rambling here a bit but like this talking about this gets me",
    "start": "3097240",
    "end": "3103640"
  },
  {
    "text": "sort of excited because I think this is definitely the future if you look at something like cloudflare workers or",
    "start": "3103640",
    "end": "3109119"
  },
  {
    "text": "Lambda Edge which is sort of the global distributed CDN that will call",
    "start": "3109119",
    "end": "3115960"
  },
  {
    "text": "serverless functions as different events happen so you can call a serverless function when somebody tries to access a",
    "start": "3115960",
    "end": "3123079"
  },
  {
    "text": "cached object somewhere and that can change the headers it can detect you",
    "start": "3123079",
    "end": "3128119"
  },
  {
    "text": "know where uh what region they are and Route them differently it can perform AB routing so that it goes different places",
    "start": "3128119",
    "end": "3135240"
  },
  {
    "text": "it can know that it's a um a mobile app or a mobile device that's accessing it so do something different there but not",
    "start": "3135240",
    "end": "3141359"
  },
  {
    "text": "only that it can actually wait for the response from the origin and then do something with the response from the",
    "start": "3141359",
    "end": "3147280"
  },
  {
    "text": "origin to say okay I've loaded an image but now I want to add you know these five or six headers to it or I want to",
    "start": "3147280",
    "end": "3153200"
  },
  {
    "text": "change the caching behavior of it because it's being accessed from a mobile device or being accessed from the",
    "start": "3153200",
    "end": "3160079"
  },
  {
    "text": "EU rather than being accessed from the United States or something like that so you you start layering in this now where",
    "start": "3160079",
    "end": "3166160"
  },
  {
    "text": "you have all of these backend services that are glued together with servis and then you have all of these front-end",
    "start": "3166160",
    "end": "3172799"
  },
  {
    "text": "Cloud you know or excuse me these cdns that are out there that uh that can host the front end of it and not only can",
    "start": "3172799",
    "end": "3179480"
  },
  {
    "text": "they make API calls and do things like that but they can also interact just as part of the just as part of the",
    "start": "3179480",
    "end": "3185680"
  },
  {
    "text": "execution of loading something there so you can handle your SEO you can I there just the the the possibilities are are",
    "start": "3185680",
    "end": "3191799"
  },
  {
    "text": "quite Limitless when it comes to that stuff and I'll talk about authentication but I'll stop in case you you had any",
    "start": "3191799",
    "end": "3197280"
  },
  {
    "text": "questions in between well you might be about to cover this but one question I had is like how much of your application",
    "start": "3197280",
    "end": "3204319"
  },
  {
    "text": "logic can you actually even push out to the edge cuz one of the things that gets me thinking about is like you one of the",
    "start": "3204319",
    "end": "3209599"
  },
  {
    "text": "major limitations on performance where we've gotten to is literally the speed of light right like you can't speed up",
    "start": "3209599",
    "end": "3216000"
  },
  {
    "text": "the speed of light so if somebody's over in the EU or in Africa or wherever accessing your application back on you",
    "start": "3216000",
    "end": "3223640"
  },
  {
    "text": "know in the US somewhere like that's built in a whole bunch of latency but if you can actually push a lot of that",
    "start": "3223640",
    "end": "3229839"
  },
  {
    "text": "logic out all the way to the CDN like when I first saw stuff about Lambda at Edge I was just my mind was blown I was",
    "start": "3229839",
    "end": "3236079"
  },
  {
    "text": "like you mean I can actually be running my application where the user is not where I am correct I mean it's to a",
    "start": "3236079",
    "end": "3241799"
  },
  {
    "text": "certain extent and so you certainly don't want your Lambda function that is",
    "start": "3241799",
    "end": "3247440"
  },
  {
    "text": "is being accessed um you know in in Tokyo or something like that you don't want that to be calling a database",
    "start": "3247440",
    "end": "3254960"
  },
  {
    "text": "that's hosted in Us East one you know that's hosted in Virginia because you're going to have you're going to have latency there so you've got a very",
    "start": "3254960",
    "end": "3261599"
  },
  {
    "text": "limited set of time in which you can execute some sort of code but the great thing about it is if you are let's say",
    "start": "3261599",
    "end": "3267799"
  },
  {
    "text": "that you want to um you know globally distribute content right so if you're if",
    "start": "3267799",
    "end": "3272960"
  },
  {
    "text": "you if it's a blog or it's a content on your website or whatever you know even a response from the API which might be a",
    "start": "3272960",
    "end": "3278920"
  },
  {
    "text": "Json some sort of Json that has um you know formatted you know your formatted blog post in it or something like that",
    "start": "3278920",
    "end": "3285240"
  },
  {
    "text": "even a call back to the origin originally to load that the first time you can then cach it so you could from",
    "start": "3285240",
    "end": "3292160"
  },
  {
    "text": "The Edge make a API call to your API that runs in Oregon or that runs in Ohio or",
    "start": "3292160",
    "end": "3298799"
  },
  {
    "text": "wherever you're running um your data center where that runs that can make that call and so yeah maybe the first",
    "start": "3298799",
    "end": "3304599"
  },
  {
    "text": "time somebody accesses that page and it's got to load that Json file it's going to or the the API response yeah",
    "start": "3304599",
    "end": "3311440"
  },
  {
    "text": "maybe it takes a second to to load that but then every other time until it",
    "start": "3311440",
    "end": "3316559"
  },
  {
    "text": "expires or you know and you can set that you can set that on each individual piece of content got a lot of power uh",
    "start": "3316559",
    "end": "3322359"
  },
  {
    "text": "on the edge there you know that will load instantaneously the next time it comes around the next time it gets",
    "start": "3322359",
    "end": "3327920"
  },
  {
    "text": "loaded so you want to be careful about how much you're doing in you know how much you're trying to do in real time on",
    "start": "3327920",
    "end": "3334119"
  },
  {
    "text": "the edge because you'll lose that the benefit of that uh of the sav latency but you certainly can cash bits of your",
    "start": "3334119",
    "end": "3340480"
  },
  {
    "text": "data I mean I think about my own blog I don't it loads it from a mySQL database every time you load a page which is",
    "start": "3340480",
    "end": "3347520"
  },
  {
    "text": "ridiculously inefficient and again it's just WordPress so that's you know kind of played by that but it would be so",
    "start": "3347520",
    "end": "3353319"
  },
  {
    "text": "much easier for me to just cash that information um and have it as a cash static page because 99% of that page",
    "start": "3353319",
    "end": "3360760"
  },
  {
    "text": "doesn't change and if I did have to change something small well then I could make an API call but the page would load",
    "start": "3360760",
    "end": "3367160"
  },
  {
    "text": "and then if it takes you know 500 milliseconds for it to load some bit of dynamic you know display because it has",
    "start": "3367160",
    "end": "3373359"
  },
  {
    "text": "to make an API call even if it's from The Edge well then then let it but uh but yeah you can put a lot of that",
    "start": "3373359",
    "end": "3378599"
  },
  {
    "text": "functionality right you know right out there on all those Edge servers essentially like you could run the equivalent of a service worker with a",
    "start": "3378599",
    "end": "3385039"
  },
  {
    "text": "little proxy there except instead of it being per browser it's like per location on the CDN correct yeah it's very it's",
    "start": "3385039",
    "end": "3391160"
  },
  {
    "text": "very exciting there's a lot of very cool things that can be done with that would functions typically be authenticated",
    "start": "3391160",
    "end": "3396920"
  },
  {
    "text": "before their their run or is that something that the function itself would have to handle yeah so that's actually another good question so the way that",
    "start": "3396920",
    "end": "3402799"
  },
  {
    "text": "authentication works at least in AWS and I'm more familiar with AWS that's the primary one that I use so if you're",
    "start": "3402799",
    "end": "3410079"
  },
  {
    "text": "accessing functions from one another so if you're calling your billing service from your catalog service something like",
    "start": "3410079",
    "end": "3416079"
  },
  {
    "text": "that the I am roles are all built in right so you have to give a function permission to access uh you know to call",
    "start": "3416079",
    "end": "3422640"
  },
  {
    "text": "the Lambda SDK and so forth the invoke function permission but if it's outside there is no access to your Lambda",
    "start": "3422640",
    "end": "3429720"
  },
  {
    "text": "functions from the outside they actually all run behind a control plane where there's no direct network access to them",
    "start": "3429720",
    "end": "3437440"
  },
  {
    "text": "which makes them highly secure so in order for you to uh load or trigger a",
    "start": "3437440",
    "end": "3442720"
  },
  {
    "text": "Lambda function from the outside you have to Route it through something like API Gateway so API Gateway has a whole",
    "start": "3442720",
    "end": "3448960"
  },
  {
    "text": "bunch of built-in functionality where you can have that load and authentication function so the first",
    "start": "3448960",
    "end": "3454799"
  },
  {
    "text": "time somebody tries to make a call to one of your endpoints that will actually go and run a Lambda function that can",
    "start": "3454799",
    "end": "3461200"
  },
  {
    "text": "you know look at a a JS you know a web token or it can look at you know it can do oath or something like that where it",
    "start": "3461200",
    "end": "3467640"
  },
  {
    "text": "can read whatever types of authentication headers you're sending in and then make the decision as to whether",
    "start": "3467640",
    "end": "3473160"
  },
  {
    "text": "or not that has access to specific routes and then you basically just send",
    "start": "3473160",
    "end": "3478240"
  },
  {
    "text": "it back a you know just a policy document and then then aw then the AWS API Gateway will decide whether or not",
    "start": "3478240",
    "end": "3485160"
  },
  {
    "text": "you can access specific routes so that's a it's a really great way to do it where your Lambda functions can be pretty dumb",
    "start": "3485160",
    "end": "3491960"
  },
  {
    "text": "they don't have to know whether or not somebody has access to it they just know that if the API Gateway allows them to",
    "start": "3491960",
    "end": "3498480"
  },
  {
    "text": "route an event to it then they're authenticated and of course you could add in you you get access to all the",
    "start": "3498480",
    "end": "3504240"
  },
  {
    "text": "headers and everything that gets sent to you within that Lambda function so if there was some including the policy",
    "start": "3504240",
    "end": "3509640"
  },
  {
    "text": "document so if there was something in there where it's like they have the ability to read but they don't have the ability to write then within your",
    "start": "3509640",
    "end": "3515480"
  },
  {
    "text": "function you may want to add you know those ACLS there but for the most part you would handle that at the Gateway",
    "start": "3515480",
    "end": "3520880"
  },
  {
    "text": "level awesome so we're going to have to wrap pretty soon are there any major things going on in the serverless world",
    "start": "3520880",
    "end": "3527839"
  },
  {
    "text": "that you know either sort of big advancements that happened recently that people might not have heard about or",
    "start": "3527839",
    "end": "3533200"
  },
  {
    "text": "stuff that's you know in progress about to hit uh that you want to share well so a couple things I want to mention a few",
    "start": "3533200",
    "end": "3539160"
  },
  {
    "text": "companies that are doing some really interesting work with serverless observability so with our traditional",
    "start": "3539160",
    "end": "3544920"
  },
  {
    "text": "applications uh if we're running servers or even if we're running containers we can install all kinds of Damons and Bots",
    "start": "3544920",
    "end": "3551039"
  },
  {
    "text": "and all kinds of things that are running there that can listen and know what our CPU usage is and know if we're you know",
    "start": "3551039",
    "end": "3557039"
  },
  {
    "text": "exceeding memory or if there's something happening there and that just gives us a whole bunch of reporting uh with serverless obviously the functions",
    "start": "3557039",
    "end": "3563440"
  },
  {
    "text": "themselves are ephemeral so they spin up and then when no one's using them they they go to sleep again or they actually",
    "start": "3563440",
    "end": "3569079"
  },
  {
    "text": "Disappear Completely so you can log information to um uh you can log",
    "start": "3569079",
    "end": "3574640"
  },
  {
    "text": "information to Cloud watch logs and then kind of go through it but seeing the whole sort of process from request to",
    "start": "3574640",
    "end": "3581599"
  },
  {
    "text": "processing and then maybe through a couple of different Services manage services and then being able to see the result and then if there's something",
    "start": "3581599",
    "end": "3587680"
  },
  {
    "text": "that happens there tracking the billing there's just all kinds of things that you really don't have good access into",
    "start": "3587680",
    "end": "3593880"
  },
  {
    "text": "other than sort of pouring through the logs yourself and even that is sort of a pain so there's a bunch of companies um",
    "start": "3593880",
    "end": "3599400"
  },
  {
    "text": "dashb bird is one that has an observability platform epsagon just launched their product uh yesterday",
    "start": "3599400",
    "end": "3606200"
  },
  {
    "text": "actually which is a serous observability and tracing platform and they do some pretty cool things in the space there's",
    "start": "3606200",
    "end": "3612799"
  },
  {
    "text": "a company called thundra which was a spin-off of Ops Genie which just got bought by uh atlassian so there's a",
    "start": "3612799",
    "end": "3618599"
  },
  {
    "text": "bunch of companies in the space plus there's a whole security aspect around this which we didn't really talk about",
    "start": "3618599",
    "end": "3623720"
  },
  {
    "text": "and a company called purec they're out of Israel as well orri Sagal is the CTO over there and they're doing some really",
    "start": "3623720",
    "end": "3629440"
  },
  {
    "text": "great work in terms of building tools that help with things like event injection and and other things that",
    "start": "3629440",
    "end": "3634559"
  },
  {
    "text": "could potentially you know remote code execution other things that are still possible and are attack vectors against",
    "start": "3634559",
    "end": "3640319"
  },
  {
    "text": "uh cous so there are a lot of companies that are building some really really cool stuff a lot of companies getting",
    "start": "3640319",
    "end": "3645720"
  },
  {
    "text": "funded so purec just got funded um with another $7 million I think so and then",
    "start": "3645720",
    "end": "3651119"
  },
  {
    "text": "obviously cus has raised money and a couple others so there's some interesting things happening some cool tools being built AWS Lambda just",
    "start": "3651119",
    "end": "3659000"
  },
  {
    "text": "announced their 15minute execution times which is kind of a big thing as well as that application View and one of the",
    "start": "3659000",
    "end": "3665599"
  },
  {
    "text": "guys I know at AWS has said you know look reinvent is coming up in couple of weeks here five weeks or whatever it is",
    "start": "3665599",
    "end": "3672359"
  },
  {
    "text": "and they haven't even scratched the surface of what they're going to you know what they're going to launch they said they're basically going to blow people's minds with new stuff that's",
    "start": "3672359",
    "end": "3678880"
  },
  {
    "text": "coming down the pike for uh for serverless so it should be some exciting times very very soon or it already is",
    "start": "3678880",
    "end": "3685280"
  },
  {
    "text": "but there'll be more more exciting times very cool and what's the if someone wants to get started with this and just",
    "start": "3685280",
    "end": "3690559"
  },
  {
    "text": "kind of play around it what is the easiest way in your opinion to to do that yeah so pleas don't say Lambda I'm",
    "start": "3690559",
    "end": "3696520"
  },
  {
    "text": "not going to say Lambda I'm going to say seress framework because I do think that the seress framework version one that uh",
    "start": "3696520",
    "end": "3703680"
  },
  {
    "text": "that's out now it's very easy for you just to say I want to launch to Lambda I want to launch to Aur I want to launch",
    "start": "3703680",
    "end": "3709200"
  },
  {
    "text": "to Google Cloud functions or whatever um they're all different levels of functionality that you can do obviously",
    "start": "3709200",
    "end": "3715319"
  },
  {
    "text": "again is light years ahead of some of these and there are a lot more capabilities there but certainly if you",
    "start": "3715319",
    "end": "3721160"
  },
  {
    "text": "just want to kind of play around with it and and write a couple of functions and and see how they kind of all work with one another any of the cloud platform",
    "start": "3721160",
    "end": "3728240"
  },
  {
    "text": "providers are great I mean the major ones are are are doing some great work Microsoft has got uh some good stuff",
    "start": "3728240",
    "end": "3733559"
  },
  {
    "text": "with the Zur and uh the IBM open wh stuff is um is very very good and they've got some cool stuff with durable",
    "start": "3733559",
    "end": "3739359"
  },
  {
    "text": "functions and and there's all kinds of great stuff that's kind of happening which is why we do need some consolidation or not consolidation but",
    "start": "3739359",
    "end": "3745359"
  },
  {
    "text": "some standard ization so that it'll be easier to kind of go between different um providers but I would say download",
    "start": "3745359",
    "end": "3751799"
  },
  {
    "text": "the serverless framework serverless doom and there's a bunch of help guides out there there's a bunch of get starting",
    "start": "3751799",
    "end": "3757920"
  },
  {
    "text": "you know get uh get it started guides and things like that super simple to play around with but there is don't be",
    "start": "3757920",
    "end": "3764400"
  },
  {
    "text": "afraid of the of the Frameworks don't be afraid of the deployment and stuff like that it's just writing code so write",
    "start": "3764400",
    "end": "3770680"
  },
  {
    "text": "some code that takes the event in and do something with it spit something back out uh and and you'll be surprised how",
    "start": "3770680",
    "end": "3777079"
  },
  {
    "text": "easy it is to uh to get started with this and what's nice about serverless framework is once you're ready to",
    "start": "3777079",
    "end": "3782520"
  },
  {
    "text": "actually put it up on the web and you want to actually see it in in real time uh you just SLS deploy or serverless",
    "start": "3782520",
    "end": "3790200"
  },
  {
    "text": "space deploy and it just puts it up there for you handles all the deployment all of the configuration and then you",
    "start": "3790200",
    "end": "3796160"
  },
  {
    "text": "just you you get a URL endpoint back and then you can go ahead and start playing around with it one last question that",
    "start": "3796160",
    "end": "3801640"
  },
  {
    "text": "came in from the slack if somebody's listened this far is there anything that we haveen covered that they should not",
    "start": "3801640",
    "end": "3807480"
  },
  {
    "text": "leave without knowing like particular resources talks to go listen to other types of things uh yeah so there is a",
    "start": "3807480",
    "end": "3815359"
  },
  {
    "text": "ton of there's a ton of information out there and I we probably just scratch the service of uh most of the stuff with",
    "start": "3815359",
    "end": "3821000"
  },
  {
    "text": "serverless but there are there were a number of conferences uh that have been",
    "start": "3821000",
    "end": "3826079"
  },
  {
    "text": "based around servus which if you want to watch some videos serverless comp which",
    "start": "3826079",
    "end": "3831359"
  },
  {
    "text": "was they just had their last one in San Francisco I think it was in August if you search for servus Comp San Francisco",
    "start": "3831359",
    "end": "3839400"
  },
  {
    "text": "2018 or something like that you should be able to find on a cloud a cloud. guru",
    "start": "3839400",
    "end": "3844920"
  },
  {
    "text": "all of the videos from it and there's a bunch of 30 minute talks a few five minute lightning talks and they talk",
    "start": "3844920",
    "end": "3850279"
  },
  {
    "text": "about everything and you've got everyone from Simon wardley speaking to um you know I think Ben kho was there I mean",
    "start": "3850279",
    "end": "3856559"
  },
  {
    "text": "there's just a whole bunch of guys in the space that really really know their stuff that would be a great place to kind of go and and watch uh a number a",
    "start": "3856559",
    "end": "3864079"
  },
  {
    "text": "number of videos uh that would really go deep into you know some of the challenges and some of the benefits and",
    "start": "3864079",
    "end": "3869640"
  },
  {
    "text": "and all the other things around serus awesome well thank you Jeremy for joining us for this week's JS party uh",
    "start": "3869640",
    "end": "3877160"
  },
  {
    "text": "Nick and Chris awesome as always and we'll catch you all next week thank you guys",
    "start": "3877160",
    "end": "3883359"
  },
  {
    "text": "thanks all right thank you for tuning in to JS party this week tuning live on Thursdays at 1 p.m. us Eastern at",
    "start": "3883359",
    "end": "3891119"
  },
  {
    "text": "changel law.com join the community and slack with us in real time during the shows head to change.com community and",
    "start": "3891119",
    "end": "3898119"
  },
  {
    "text": "do us a favor share this show with a friend we just app a podcast go into overcast and favored it and thank you to",
    "start": "3898119",
    "end": "3904599"
  },
  {
    "text": "fastly our bandwidth partner head to fastly.com to learn more and we move fast to fix things right here at change",
    "start": "3904599",
    "end": "3910160"
  },
  {
    "text": "law because of rbar check them out at roar.com we're hosted on Lino Cloud servers at the lin.com changelog check",
    "start": "3910160",
    "end": "3917440"
  },
  {
    "text": "them out and support this show our music is produced by break master cylinder and you can find more shows just like this",
    "start": "3917440",
    "end": "3923480"
  },
  {
    "text": "at change.com thanks for tuning in we'll see you next",
    "start": "3923480",
    "end": "3928480"
  },
  {
    "text": "[Music] week",
    "start": "3928710",
    "end": "3936680"
  }
]