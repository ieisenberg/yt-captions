[
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "9120",
    "end": "16278"
  },
  {
    "text": "from all around the go Community connect with us on Mastadon at gotime at changel",
    "start": "16279",
    "end": "22039"
  },
  {
    "text": "log. on Twitter at go time FM and follow Chang log on YouTube for clips and",
    "start": "22039",
    "end": "28439"
  },
  {
    "text": "highlights from all of our pods head to youtube.com/ changelog And subscribe today big thanks to our partners at",
    "start": "28439",
    "end": "35120"
  },
  {
    "text": "fastly for ensuring go time reaches you super fast all around the world check them out at fastly.com and to our",
    "start": "35120",
    "end": "41360"
  },
  {
    "text": "friends at fly host your app servers and database close to your users no Ops",
    "start": "41360",
    "end": "46879"
  },
  {
    "text": "required learn more at fly.io okay here we",
    "start": "46879",
    "end": "53480"
  },
  {
    "text": "[Music] go hello and welcome to go time I'm Matt",
    "start": "54220",
    "end": "60920"
  },
  {
    "text": "ryer today we're talking about the bits of go that we tend to avoid whether",
    "start": "60920",
    "end": "66000"
  },
  {
    "text": "deliberately or by happen stance perhaps we've been burned in the past or maybe",
    "start": "66000",
    "end": "71080"
  },
  {
    "text": "there's just an alternative that we prefer what's wrong with that well to help me find out what's so wrong with it",
    "start": "71080",
    "end": "77520"
  },
  {
    "text": "I'm joined by John Calhoun hello John hey Matt how are you good uh good to see",
    "start": "77520",
    "end": "82680"
  },
  {
    "text": "you mate as always how have you been pretty good we're also joined by Carl Johnson Carl's back hello Carl hi it's",
    "start": "82680",
    "end": "89320"
  },
  {
    "text": "great to be back you know today I did not wash my hair with Red Bull so maybe I will be",
    "start": "89320",
    "end": "95280"
  },
  {
    "text": "slightly coherent in this episode we'll see no promises we'll see indeed okay so we'll",
    "start": "95280",
    "end": "102360"
  },
  {
    "text": "kick off with an ice breaker it's a new section I was thinking about we could do like ice breakers that's probably just",
    "start": "102360",
    "end": "108000"
  },
  {
    "text": "the theme like it's probably me just saying that but with Reverb added so it's",
    "start": "108000",
    "end": "114200"
  },
  {
    "text": "like ice breakers and that's that's enough just waiting for like a copper or trademark",
    "start": "114200",
    "end": "120640"
  },
  {
    "text": "infringement isn't that like a mint yeah it could be if that's if that is a mint uh depending on how litigious that that",
    "start": "120640",
    "end": "127399"
  },
  {
    "text": "section may get renamed in the future but fingers crossed for ice breakers John people say to me we love",
    "start": "127399",
    "end": "134480"
  },
  {
    "text": "it when you make a joke and then John carries on as if nothing has happened like some kind of robotic Android I know",
    "start": "134480",
    "end": "141080"
  },
  {
    "text": "you're not a robot mate because they can actually appear quite human these days but if you were a robot what would be",
    "start": "141080",
    "end": "147599"
  },
  {
    "text": "the one robotic superpower that you look forward to using I don't know if it's a superpower",
    "start": "147599",
    "end": "153840"
  },
  {
    "text": "but uh some anti virus software would be pretty sweet right now since I uh currently have Co oh no that's terrible",
    "start": "153840",
    "end": "161239"
  },
  {
    "text": "sorry to hear that oh no it's all good something like that would be pretty sweet um it would also suck to get",
    "start": "161239",
    "end": "167480"
  },
  {
    "text": "somebody like Hey we're going to disable the use of your arms unless you send crypto to this",
    "start": "167480",
    "end": "172920"
  },
  {
    "text": "address yeah that's just pros and cons because you've got that those problems but also you can jump really high so can",
    "start": "173239",
    "end": "180239"
  },
  {
    "text": "they though yeah you've seen them I I I got to get back into looking at these whoever makes all those crazy robots oh",
    "start": "180239",
    "end": "186599"
  },
  {
    "text": "the Boston Dynamics but yeah Boston Dynamics yeah I don't know if they have any videos of their dogs jumping really",
    "start": "186599",
    "end": "192959"
  },
  {
    "text": "high but maybe yeah they they'll get there I mean this is I'm talking in five",
    "start": "192959",
    "end": "199319"
  },
  {
    "text": "years we're not I'm not talking today technology oh okay I'm talking about the kind of robotic technology we're going to have in five years time probably",
    "start": "199319",
    "end": "206120"
  },
  {
    "text": "brilliant really strong legs good strong backs just the whole package probably",
    "start": "206120",
    "end": "212519"
  },
  {
    "text": "and you can do anything Carl what would you do if you when you've got eventually your robot body and you've you've had any Consciousness done loaded into it I",
    "start": "212519",
    "end": "219360"
  },
  {
    "text": "think what I would do is I would be like really literal about common expressions",
    "start": "219360",
    "end": "224720"
  },
  {
    "text": "and idioms so just like extremely literal about it you know if somebody's",
    "start": "224720",
    "end": "231319"
  },
  {
    "text": "like oh I can't even think of an idiom now but uh you know if somebody's like get out and then I would be like okay",
    "start": "231319",
    "end": "237560"
  },
  {
    "text": "I'm getting out and then I would just leave the room you know right yeah like you're about to go do a play and",
    "start": "237560",
    "end": "243280"
  },
  {
    "text": "somebody says break a leg yeah then I would break their leg physically with my robot strength yeah you got to be careful when",
    "start": "243280",
    "end": "251000"
  },
  {
    "text": "you're talking to these robots I think what what I've been learning from chat GPT is all the stuff in science fiction",
    "start": "251000",
    "end": "257400"
  },
  {
    "text": "that like struck me as like totally implausible and you know it's like you can't really have the three laws of",
    "start": "257400",
    "end": "264360"
  },
  {
    "text": "robotics that doesn't make any sense or like you know robots wouldn't be confused used by Liars paradoxes and",
    "start": "264360",
    "end": "271400"
  },
  {
    "text": "riddles and stuff and like with chat PT it's like oh no that's all real yeah robots are like totally confused by this",
    "start": "271400",
    "end": "277680"
  },
  {
    "text": "stuff I I I did a thing where I asked chat GPT um you know the classic riddle",
    "start": "277680",
    "end": "283600"
  },
  {
    "text": "uh of the Sphinx is what has four legs in the morning and two legs in the day",
    "start": "283600",
    "end": "288960"
  },
  {
    "text": "and three legs at night but I asked it what has three legs in the morning and two legs a day and four legs at night",
    "start": "288960",
    "end": "295000"
  },
  {
    "text": "and it was like it not only answered it as if I had asked the normal riddle which is fine like if you if you said",
    "start": "295000",
    "end": "301680"
  },
  {
    "text": "that to a person probably they would get confused and like say Oh you mean a person but then it was like yes you mean",
    "start": "301680",
    "end": "309039"
  },
  {
    "text": "a person because a person has three legs when they are a baby and crawling on their hands and knees and four legs when",
    "start": "309039",
    "end": "315639"
  },
  {
    "text": "they're an old person and using a cane and it's like it like not only explains it but it explains it wrong but using",
    "start": "315639",
    "end": "322600"
  },
  {
    "text": "like the wrong things it just gets like tripped up on it so yeah I'm really looking forward to like robots who can't",
    "start": "322600",
    "end": "328280"
  },
  {
    "text": "use contractions and like just have to be very formal all the time and it's",
    "start": "328280",
    "end": "334199"
  },
  {
    "text": "they're not really supposed to be formal it's just that that's how the human reinforced learning made them",
    "start": "334199",
    "end": "340120"
  },
  {
    "text": "be I love that though I think that kind of way of talking that's the way you want to go it reminds me of Genies like",
    "start": "340120",
    "end": "346000"
  },
  {
    "text": "you got to be really careful when you're talking to a genie oh yeah super literal yeah they and they're like you need a",
    "start": "346000",
    "end": "351759"
  },
  {
    "text": "lawyer you need to have a lawyer with you when you if you ever come across a gen cuz they will get you they you'll be",
    "start": "351759",
    "end": "356800"
  },
  {
    "text": "like I want to have a million dollars and then they'll Crush you with a million something yeah know they'll put a million pennies around in your head my",
    "start": "356800",
    "end": "362360"
  },
  {
    "text": "thought for the genie is you you use your first two wishes to like set up your third so like your first wish is",
    "start": "362360",
    "end": "368840"
  },
  {
    "text": "like I wish to know what the perfect wish is and then like your second wish",
    "start": "368840",
    "end": "373880"
  },
  {
    "text": "is like I wish to say the perfect wish without messing it up somehow or getting",
    "start": "373880",
    "end": "379319"
  },
  {
    "text": "Tongue Tied or ruining it and then finally you do it you know but you got to you can't just jump straight to the",
    "start": "379319",
    "end": "385759"
  },
  {
    "text": "perfect wish you kind of got to Tee It Up with the first two yeah but you shouldn't have to do that you shouldn't",
    "start": "385759",
    "end": "391199"
  },
  {
    "text": "need to waste two wishes just to get around these loopholes that you know he's going to try and find but it's the",
    "start": "391199",
    "end": "397720"
  },
  {
    "text": "same like with the chat GPT you have to like I just like how even though Genies are completely imaginary John you're",
    "start": "397720",
    "end": "403840"
  },
  {
    "text": "you're ruining it you're BR I'm just saying they're completely imaginary but like we've decided we've decided the rules that they're going to be like",
    "start": "403840",
    "end": "410280"
  },
  {
    "text": "these like not evil but they're like they're intentionally like taking anything we say and twisting it like",
    "start": "410280",
    "end": "415639"
  },
  {
    "text": "we've just decided that's what all Genies would do if they if we found one I think that's the thing thing though is like chat GPT because it's trained on",
    "start": "415639",
    "end": "422879"
  },
  {
    "text": "the internet and it's trained on fiction it like I think at some level is like I should behave like a Genie or I should",
    "start": "422879",
    "end": "430080"
  },
  {
    "text": "behave like a you know a a computer and a story or something like that's what it thinks is normal it doesn't have like",
    "start": "430080",
    "end": "436720"
  },
  {
    "text": "eyes or hands or legs it doesn't interact with the real world it doesn't know the difference between truth and",
    "start": "436720",
    "end": "442360"
  },
  {
    "text": "fiction other than people saying this is truth and this is fiction which sometimes they say wrong for example",
    "start": "442360",
    "end": "448800"
  },
  {
    "text": "fictional that say that they're true when they're not and stuff so anyway just I feel like this Genie stuff is",
    "start": "448800",
    "end": "454759"
  },
  {
    "text": "important because now chat GPT is going to be like all right when somebody asks for a million dollars I'm going to pour",
    "start": "454759",
    "end": "459960"
  },
  {
    "text": "a million pennies on their head until they're crushed flat as a pancake because that's what you're supposed to do as a magical AI genie that's what's",
    "start": "459960",
    "end": "467400"
  },
  {
    "text": "bound to happen uh my elderly neighbor recently uh she she just said to me",
    "start": "467400",
    "end": "472479"
  },
  {
    "text": "maybe I'll be back she's like maybe I'll be back like a like some kind of tentative Terminator and it's like that",
    "start": "472479",
    "end": "479039"
  },
  {
    "text": "I quite like the idea of that the machine's going the other way and being very uncertain and not sure and stuff",
    "start": "479039",
    "end": "485280"
  },
  {
    "text": "it's like even even at the at the point of like booleans it's like H I can't decide I'm not sure just so they become",
    "start": "485280",
    "end": "491759"
  },
  {
    "text": "more human I mean that would make coding very weird you'd have like if true if maybe true like if you feel like it no",
    "start": "491759",
    "end": "499120"
  },
  {
    "text": "it's just like with a regular person you go if you feel like it you know if you feel like it handled the API request no",
    "start": "499120",
    "end": "505560"
  },
  {
    "text": "but that that's a good way to do it cuz sometimes it doesn't work and sometimes it doesn't feel like it and you have to",
    "start": "505560",
    "end": "510639"
  },
  {
    "text": "be like all right if you don't feel like doing that wait a little bit then try again like it could be a new kind of",
    "start": "510639",
    "end": "515959"
  },
  {
    "text": "programming that is just sort of very kind based not kind based but like you",
    "start": "515959",
    "end": "521599"
  },
  {
    "text": "know nice so Matt if you had a robotic super power what would yours be I would",
    "start": "521599",
    "end": "527040"
  },
  {
    "text": "love to be able to just randomly fax people if I could just be like figure out their number I feel like you picked",
    "start": "527040",
    "end": "533600"
  },
  {
    "text": "the one superpower that like it's a terrible time to have it no no like I can fax anyone and there's no fax",
    "start": "533600",
    "end": "538880"
  },
  {
    "text": "machine in the world well but if it's like someone's there and they're they're checking like I'm just going to check",
    "start": "538880",
    "end": "544120"
  },
  {
    "text": "this security camera and they're going to see me doing something on it I'll quickly in the back of my head just be",
    "start": "544120",
    "end": "550240"
  },
  {
    "text": "like and I'll fax that and they'll be like oh hang on I'll just check that in a minute I'm getting a fax through and",
    "start": "550240",
    "end": "555839"
  },
  {
    "text": "they go and read the facts and then I've got enough time to delete the footage yeah cuz it the facts are so slow like",
    "start": "555839",
    "end": "561800"
  },
  {
    "text": "they're they're basically taken out for like five whole minutes handling the fact exactly and they've got to turn the",
    "start": "561800",
    "end": "567399"
  },
  {
    "text": "wheel on the fax machine to make it go so it's busy busy busy busy oh what's",
    "start": "567399",
    "end": "573160"
  },
  {
    "text": "going on meanwhile just me clicking in the back deleting footage I don't know what fax",
    "start": "573160",
    "end": "578800"
  },
  {
    "text": "machines have a wheel youturn I'm so confused right now I can't remember them really I've not done any",
    "start": "578800",
    "end": "584880"
  },
  {
    "text": "research Carl got another ice breaker for you ice breaker patent pending um",
    "start": "584880",
    "end": "590040"
  },
  {
    "text": "lawsuits possibly pending cuz we think that might already be a thing but assuming not Carl you're Icebreaker you",
    "start": "590040",
    "end": "597399"
  },
  {
    "text": "are in a cave dark dank cave stinks",
    "start": "597399",
    "end": "602839"
  },
  {
    "text": "there's a little lamp on the floor it's got a Apple logo on it so you rub it and it's like oh what's this bloody Tim Cook",
    "start": "602839",
    "end": "610079"
  },
  {
    "text": "Genie pops out and says right you can have three wishes what do you want for your next iPhone or the next phone",
    "start": "610079",
    "end": "617320"
  },
  {
    "text": "feature you can have any features you want you get to pick the next three oh or you can just pick one what's the top",
    "start": "617320",
    "end": "623760"
  },
  {
    "text": "feature you want you for your phone I think the top feature would be to bring back the uh the headphone jack on the",
    "start": "623760",
    "end": "630560"
  },
  {
    "text": "iPhone 7 shape I guess iPhone SE yeah just bring back the iPhone se but put on",
    "start": "630560",
    "end": "636880"
  },
  {
    "text": "it a real headphone jack I'm still mad at them for taking it away so cuz they had I think they needed to take it away",
    "start": "636880",
    "end": "643480"
  },
  {
    "text": "on the iPhone 10 cuz the iPhone 10 was like bigger and edge to edge and whatever but they knew people would get",
    "start": "643480",
    "end": "650240"
  },
  {
    "text": "mad at them when they did that so they were like okay we'll just re we'll",
    "start": "650240",
    "end": "655440"
  },
  {
    "text": "remove the headphone jack on the iPhone 7 first first and we'll have a year of people being mad about the headphone",
    "start": "655440",
    "end": "661880"
  },
  {
    "text": "jack and then the next year we'll release the 10 and people will have forgotten about the the headphone jack",
    "start": "661880",
    "end": "668000"
  },
  {
    "text": "by then which totally worked it was like a completely successful approach of",
    "start": "668000",
    "end": "673200"
  },
  {
    "text": "theirs but uh I'm still mad about the headphone jack I want it back I wouldn't even use it I just want it yeah it's",
    "start": "673200",
    "end": "680480"
  },
  {
    "text": "weird how they've probably got models like modeling how angry everyone's going to be about stuff and they'll use that",
    "start": "680480",
    "end": "687680"
  },
  {
    "text": "to sort of inform it won't make decisions based on that yeah I guess it it's probably going to happen",
    "start": "687680",
    "end": "694760"
  },
  {
    "text": "so it's not a funny one it's like the USBC thing it's like yeah I guess it would be good if they went to USBC just",
    "start": "694760",
    "end": "700800"
  },
  {
    "text": "so it uses the same charger as some other stuff but that's going to happen",
    "start": "700800",
    "end": "705920"
  },
  {
    "text": "so I wouldn't want to waste my wish on something that will happen anyway right yeah I don't well you're wasting your",
    "start": "705920",
    "end": "711240"
  },
  {
    "text": "first two wishes normally just propping up your third one and Tim Cook's got a lot of legal power behind him to be fair",
    "start": "711240",
    "end": "717600"
  },
  {
    "text": "so you probably do want to be careful in this case well talking about wishing things here and gone let's get into the",
    "start": "717600",
    "end": "725360"
  },
  {
    "text": "meat of our subject of or you know plant-based protein uh depending on your",
    "start": "725360",
    "end": "731760"
  },
  {
    "text": "preferences what we're going to talk about what we would get rid of or at least what we don't use what we avoid in",
    "start": "731760",
    "end": "738440"
  },
  {
    "text": "go and part of this I think is interesting cuz you know all this stuff we have to learn and if we if we can cut",
    "start": "738440",
    "end": "746760"
  },
  {
    "text": "out some of that we can save that some of that learning process maybe there's advantages there but also it probably",
    "start": "746760",
    "end": "753839"
  },
  {
    "text": "comes for me more down to writing maintainable things so it's always about being very explicit and clear so that",
    "start": "753839",
    "end": "761040"
  },
  {
    "text": "when I come back later I don't have to decode anything it's all kind of laid out in front of me uh and in that Spirit",
    "start": "761040",
    "end": "767800"
  },
  {
    "text": "the first one I would probably I probably don't ever use is the new keyword the new keyword and this is the",
    "start": "767800",
    "end": "774839"
  },
  {
    "text": "thing that makes you know makes things how can you do without it well of course there are other formats like you use the",
    "start": "774839",
    "end": "782199"
  },
  {
    "text": "the structure name with the curly braces immediately after to instantiate it usually taking a pointer sometimes at",
    "start": "782199",
    "end": "787880"
  },
  {
    "text": "the start of that and I like that pattern more because even if you're not setting any Fields explicitly it's the",
    "start": "787880",
    "end": "795000"
  },
  {
    "text": "same as if you do so it's the same format both ways it's not like a different format just because you're not",
    "start": "795000",
    "end": "800160"
  },
  {
    "text": "setting any Fields how do you feel about that do you use new uh I do use new but",
    "start": "800160",
    "end": "806680"
  },
  {
    "text": "I mostly use it in generic code where I'm trying to make this catch on I think",
    "start": "806680",
    "end": "812800"
  },
  {
    "text": "maybe this was on my Twitter I don't remember if I tweeted this or I masted da it but one way or the other I I tried",
    "start": "812800",
    "end": "819240"
  },
  {
    "text": "to make it a thing to call this construct the the go winking",
    "start": "819240",
    "end": "824800"
  },
  {
    "text": "noot uh so in generic go right so as of the last year go has had generics uh one",
    "start": "824800",
    "end": "831959"
  },
  {
    "text": "of the kind of issues which I I hope that they fix sometime is that there's no good way to say return the zero value",
    "start": "831959",
    "end": "839519"
  },
  {
    "text": "of whatever type I'm dealing with right so inside of a generic code statement",
    "start": "839519",
    "end": "845000"
  },
  {
    "text": "you might say like my type is T and I just want you to return whatever the zero value of T is and so there's a",
    "start": "845000",
    "end": "852000"
  },
  {
    "text": "couple ways you can get around it and the way that I think most people get around it is they end up typing you know",
    "start": "852000",
    "end": "858079"
  },
  {
    "text": "VAR X or whatever T So then now you've got an X which is of type T and it's the",
    "start": "858079",
    "end": "865320"
  },
  {
    "text": "zero value and then you just say return X or you know VAR 0 t return zero um and",
    "start": "865320",
    "end": "871560"
  },
  {
    "text": "that's what most people do but another thing you can do which is hard to talk about on a podcast because talking about syntax on a podcast is always death is",
    "start": "871560",
    "end": "878959"
  },
  {
    "text": "you can do return Star new parentheses T",
    "start": "878959",
    "end": "885399"
  },
  {
    "text": "parentheses uh and so it's like the Winking n the star n uh and if you say",
    "start": "885399",
    "end": "891959"
  },
  {
    "text": "that that will return the zero value of whatever T is so like if you think about it logically what it's doing is it uses",
    "start": "891959",
    "end": "898720"
  },
  {
    "text": "is new T to create a pointer to T and then the star means dreference the pointer to T and since you had just",
    "start": "898720",
    "end": "905440"
  },
  {
    "text": "created it it's the zero value and so it's like this weird little idiom that's popping up in generic go code and that's",
    "start": "905440",
    "end": "912079"
  },
  {
    "text": "basically the only time I use new is in that particular construct and really I'm",
    "start": "912079",
    "end": "918240"
  },
  {
    "text": "just doing it because it's it's kind of cheeky that it's it's a little N I assume you also just want like a",
    "start": "918240",
    "end": "924079"
  },
  {
    "text": "oneliner like return this versus like having to declare the variable up front and then have it available yeah it's",
    "start": "924079",
    "end": "929199"
  },
  {
    "text": "it's all you can do it as an expression yeah you don't have to like set it up by first having a line for VAR z t you can",
    "start": "929199",
    "end": "935560"
  },
  {
    "text": "just do it right in line Aster New te yeah cuz it's no more efficient is it uh",
    "start": "935560",
    "end": "941440"
  },
  {
    "text": "I think if you look at the disassembly it's it's identical yeah yeah but you can do it in line well",
    "start": "941440",
    "end": "948759"
  },
  {
    "text": "quite a good use of new there but I really I have an issue open on the go issue tracker or maybe it's not my issue",
    "start": "948759",
    "end": "954639"
  },
  {
    "text": "there's an issue open on the go issue tracker oh I tried to open a one and they closed it as a duplicate that's the",
    "start": "954639",
    "end": "960279"
  },
  {
    "text": "answer uh but there's an issue to try to create a new identifier called zero and",
    "start": "960279",
    "end": "966240"
  },
  {
    "text": "so you would just type out you know z r o and it would return the zero type of",
    "start": "966240",
    "end": "971519"
  },
  {
    "text": "the value so hopefully someday that'll be a thing and we can stop having the the crossy N but until then it you have",
    "start": "971519",
    "end": "979440"
  },
  {
    "text": "to use the crossy N so with the zero value thing you're talking about was that proposed only for generics or for",
    "start": "979440",
    "end": "985959"
  },
  {
    "text": "everything it was proposed I think before generics there was like some talk about how you can use nil in some places",
    "start": "985959",
    "end": "993040"
  },
  {
    "text": "but not others and maybe you should be able to use nil everywhere yeah or yeah if you're doing return whatever and then",
    "start": "993040",
    "end": "1000120"
  },
  {
    "text": "an error it's nice to be able to just say return zero comma air um something",
    "start": "1000120",
    "end": "1005639"
  },
  {
    "text": "like that and then the use case that I also really want it for is um for comparison and the last episode I was on",
    "start": "1005639",
    "end": "1012120"
  },
  {
    "text": "I talked about comparable types and how some types are comparable and some are not if you have like a function you're",
    "start": "1012120",
    "end": "1018639"
  },
  {
    "text": "allowed to compare it to nil but you're not allowed to compare it to other functions so then when you're writing",
    "start": "1018639",
    "end": "1024959"
  },
  {
    "text": "generic code there's no good way to say compare this to nil like you you have to",
    "start": "1024959",
    "end": "1031319"
  },
  {
    "text": "use reflection so if there was a zero value then you could just say all right compare this to its zero value and then",
    "start": "1031319",
    "end": "1038400"
  },
  {
    "text": "it would be okay okay cool John why don't you tell us about something you barely ever use in your whole life so",
    "start": "1038400",
    "end": "1046400"
  },
  {
    "text": "one of them is uh full slice expressions I don't know if you've seen those or use them at all but normally when you do a",
    "start": "1046400",
    "end": "1051799"
  },
  {
    "text": "slice like you have uh when you're trying to like get a slice of an array you might do like a and then the square",
    "start": "1051799",
    "end": "1057440"
  },
  {
    "text": "bracket then like the starting index the ending IND or coal and then the ending index you can actually add like a third",
    "start": "1057440",
    "end": "1062760"
  },
  {
    "text": "value there which I believe is the essentially the capacity of the new slice you're creating oh yeah inside the",
    "start": "1062760",
    "end": "1069120"
  },
  {
    "text": "square brackets right yeah so I I've seen cases where it's useful I'm not trying to say like this definitely",
    "start": "1069120",
    "end": "1074919"
  },
  {
    "text": "shouldn't exist in the language but I don't ever use it because in my mind most people have never seen it in their",
    "start": "1074919",
    "end": "1080799"
  },
  {
    "text": "life so if you put it in code the first time they see it they're going to be like what is going on right now and I don't tend to like things like that",
    "start": "1080799",
    "end": "1087280"
  },
  {
    "text": "where people are going to see it and just have no idea what's going on unless there's a really good reason for it yeah and I think a lot of people are going to",
    "start": "1087280",
    "end": "1093440"
  },
  {
    "text": "see it and they would like just naively you would assume that oh there's a third thing in there maybe the third thing is",
    "start": "1093440",
    "end": "1099400"
  },
  {
    "text": "like the Stride Right like so the idea of like you're skipping or you're doing",
    "start": "1099400",
    "end": "1104960"
  },
  {
    "text": "something like I don't know I would guess it would be like maybe this makes it go back backwards through the slice or reverses it or something I don't know",
    "start": "1104960",
    "end": "1112840"
  },
  {
    "text": "I wouldn't I wouldn't just like naively guess like oh this is what controls the capacity you really have to like look it",
    "start": "1112840",
    "end": "1118880"
  },
  {
    "text": "up or like be told it before you see it yeah the only clue to that is in the make because you get the the extra",
    "start": "1118880",
    "end": "1126159"
  },
  {
    "text": "arguments but that's so different to this yeah I don't know it looks like you're saying yeah one to three",
    "start": "1126159",
    "end": "1133440"
  },
  {
    "text": "definitely three I promise like you're just being very clear again setting that variable twice but yeah it does look",
    "start": "1133440",
    "end": "1140280"
  },
  {
    "text": "quite weird I genuinely had forgotten that was even there John I forget I saw it at one point where it can be useful",
    "start": "1140280",
    "end": "1146760"
  },
  {
    "text": "for like I for I think it was like the data structure type thing like if you're doing a heap or something it can be a useful way to make sure you're not one",
    "start": "1146760",
    "end": "1153039"
  },
  {
    "text": "overriding existing values in a slice when you just want to get a sub slice of it but two to like sort of make sure",
    "start": "1153039",
    "end": "1158720"
  },
  {
    "text": "that you can keep on essentially adding to a new SLI I think it was adding to a slice without like making the capacity",
    "start": "1158720",
    "end": "1163799"
  },
  {
    "text": "too big I think that was one of the cases but it's been a while so I'd have to go check yeah yeah pretty much in all",
    "start": "1163799",
    "end": "1169679"
  },
  {
    "text": "the cases where you want to use it it's the thing that you want to do is to say if anybody appends to this slice they",
    "start": "1169679",
    "end": "1176520"
  },
  {
    "text": "should get a copy and not keep using the same backing and there's a there's a",
    "start": "1176520",
    "end": "1181559"
  },
  {
    "text": "function in the uh the experimental generics slices package which has actually been approved to be added to go",
    "start": "1181559",
    "end": "1188159"
  },
  {
    "text": "121 next fall there's a a function in there called slices. clip and what that",
    "start": "1188159",
    "end": "1194039"
  },
  {
    "text": "does is it basically it sets the capacity of the slice to whatever the current length of the slices and so that",
    "start": "1194039",
    "end": "1200360"
  },
  {
    "text": "way if anybody does aen to it they'll get a copy instead of rewriting the existing one uh and I feel like that's",
    "start": "1200360",
    "end": "1206720"
  },
  {
    "text": "so much clearer like uh if you're reading some code and you see slices. clip it's like okay that's what they're",
    "start": "1206720",
    "end": "1212559"
  },
  {
    "text": "doing they're just like making sure nobody overwrites the end of the slice but like if you if you see the three",
    "start": "1212559",
    "end": "1219640"
  },
  {
    "text": "syntax version it's yeah it's pretty weird I think I also don't like that performance-wise I feel like somebody",
    "start": "1219640",
    "end": "1226039"
  },
  {
    "text": "could I'm assuming that whenever you do like a slice and you set the capacity that at that point if you go to a pend",
    "start": "1226039",
    "end": "1231400"
  },
  {
    "text": "it then has to copy to a new slice at that point so you know like a new underlying array so I think if people",
    "start": "1231400",
    "end": "1236880"
  },
  {
    "text": "aren't aware of sort of the performance impact it could lead to weird code whereas like if you do it like you said where you call slice. Cap I feel like",
    "start": "1236880",
    "end": "1243320"
  },
  {
    "text": "it's a little bit more logical to look at the docs and be like okay this is actually going to have a performance um",
    "start": "1243320",
    "end": "1249159"
  },
  {
    "text": "impact if we do it a lot or if we do it in the wrong way or something have you got one call uh yeah I've got a couple",
    "start": "1249159",
    "end": "1256120"
  },
  {
    "text": "um one I have an issue that's open in in the the go tracker uh when did I open",
    "start": "1256120",
    "end": "1261400"
  },
  {
    "text": "this issue uh does it say what's the issue number so the issue number",
    "start": "1261400",
    "end": "1268640"
  },
  {
    "text": "21291 proposal go to remove bare return uh and this says August 3rd uh 2017 so",
    "start": "1268640",
    "end": "1276520"
  },
  {
    "text": "it's been a little while uh I don't think the go team is rushing to implement this one but they haven't",
    "start": "1276520",
    "end": "1281559"
  },
  {
    "text": "closed it so it could still happen there's still a chance remove be return um so in go uh there's this idea of",
    "start": "1281559",
    "end": "1289200"
  },
  {
    "text": "named returns right so a named return what you can do is in the same way that you name your arguments that go into the",
    "start": "1289200",
    "end": "1296120"
  },
  {
    "text": "function you can name the the arguments that come out of the function especially when there's more than one but you could also do it if there's just one so with",
    "start": "1296120",
    "end": "1303600"
  },
  {
    "text": "bare return what you do is you can only use it when your function arguments are named you can instead of like saying",
    "start": "1303600",
    "end": "1310720"
  },
  {
    "text": "return X comma y just say return and since it knows that X and Y are the",
    "start": "1310720",
    "end": "1316880"
  },
  {
    "text": "return value use it'll just automatically return X and Y um so I",
    "start": "1316880",
    "end": "1323559"
  },
  {
    "text": "think that having named returns is really nice like you can set it up it's part of the documentation it helps for",
    "start": "1323559",
    "end": "1329559"
  },
  {
    "text": "cases where you need to um where you want to like overwrite the return value",
    "start": "1329559",
    "end": "1334679"
  },
  {
    "text": "in a defer um it's good for that but then the naked return it's nice in",
    "start": "1334679",
    "end": "1339720"
  },
  {
    "text": "interfaces sometimes to describe the outcoming arguments oh yeah yeah if you have an interface you can be really",
    "start": "1339720",
    "end": "1345559"
  },
  {
    "text": "clear or just anytime you're returning two of the same type like just make it clear okay the first one is the Min and",
    "start": "1345559",
    "end": "1351520"
  },
  {
    "text": "the second one is the max or whatever but yeah but the bare return I feel like",
    "start": "1351520",
    "end": "1356559"
  },
  {
    "text": "is just like yeah you probably shouldn't do it you should just go ahead and be explicit about what you're returning you",
    "start": "1356559",
    "end": "1362520"
  },
  {
    "text": "don't need to just have the bare return keyword so with that do you find",
    "start": "1362520",
    "end": "1367960"
  },
  {
    "text": "yourself using name return values less often because you're worried somebody might use a naked return uh no I still",
    "start": "1367960",
    "end": "1374039"
  },
  {
    "text": "end up using named return values a lot but yeah be the bare return par I I",
    "start": "1374039",
    "end": "1379120"
  },
  {
    "text": "don't use very often yeah I I asked because I think it's just a weird head game with myself where I liked named",
    "start": "1379120",
    "end": "1386640"
  },
  {
    "text": "returns because they make a lot of code much much clear but I like weirdly avoid them sometimes because I'm like well I",
    "start": "1386640",
    "end": "1392960"
  },
  {
    "text": "don't want somebody to like start using you know a naked return at this point and I don't know why cuz I'm like it's",
    "start": "1392960",
    "end": "1399279"
  },
  {
    "text": "not like I'm working in a code base where I'm not going to see the code and like you know be like hey let's put a name or put the actual return values",
    "start": "1399279",
    "end": "1405440"
  },
  {
    "text": "here but just for whatever reason I could see that being like a a head game type thing yeah you can run into trouble",
    "start": "1405440",
    "end": "1411279"
  },
  {
    "text": "with it too if you have like nested Scopes like let's say you're you name the return air for error and uh you're",
    "start": "1411279",
    "end": "1419919"
  },
  {
    "text": "you're like inside of a nested scope and you say you know if eror colon equals",
    "start": "1419919",
    "end": "1425880"
  },
  {
    "text": "whatever and error is not nil then return well you don't realize it but you",
    "start": "1425880",
    "end": "1431919"
  },
  {
    "text": "have created a new scope and your air there the air variable is an is a",
    "start": "1431919",
    "end": "1437360"
  },
  {
    "text": "different one than the return variable like you've actually created a new scope and you didn't actually change the",
    "start": "1437360",
    "end": "1443679"
  },
  {
    "text": "return variable but now you do a bare return and uh it Returns the return",
    "start": "1443679",
    "end": "1449480"
  },
  {
    "text": "variable and not the one anyway so you can run into these bugs like that and probably your linter or some static",
    "start": "1449480",
    "end": "1456000"
  },
  {
    "text": "typer or something can catch that but you know it's just better not to have the issue at all yeah I do wonder if",
    "start": "1456000",
    "end": "1463960"
  },
  {
    "text": "with like some of these things if we got together and just made a new linter that",
    "start": "1463960",
    "end": "1469880"
  },
  {
    "text": "was just extremely opinionated about stuff like this and it was just like the",
    "start": "1469880",
    "end": "1475039"
  },
  {
    "text": "most strict linter like one that really gets in your kitchen like really gets up in your business mhm cuz I'd have it",
    "start": "1475039",
    "end": "1482120"
  },
  {
    "text": "deban double uh vertical lines if I ever see two vertical lines in code that's a",
    "start": "1482120",
    "end": "1488520"
  },
  {
    "text": "pet peeve of mine like like an AA statement two empty lines oh I see two blank lines two blank lines that's it",
    "start": "1488520",
    "end": "1495320"
  },
  {
    "text": "yeah I forgot what um blank the word blank my mind went into a state where I",
    "start": "1495320",
    "end": "1501039"
  },
  {
    "text": "couldn't remember the word what if you just want to tell somebody like Hey we're really doing something different now yeah pop it in a different function",
    "start": "1501039",
    "end": "1508360"
  },
  {
    "text": "probably because it just looks like a mistake to me well what if you could do a comment I guess no then yeah fill the",
    "start": "1508360",
    "end": "1514120"
  },
  {
    "text": "space with a comment I'm just messing around I don't I'm sure I probably have code with two lines but I I don't think",
    "start": "1514120",
    "end": "1519840"
  },
  {
    "text": "it's ever really intentional yeah but you'd be fine if the linta's like uh uh uh John what are you doing do you guys",
    "start": "1519840",
    "end": "1526039"
  },
  {
    "text": "ever do those comments where like you have like a lot of asky Art in them or like a bunch of stars and like it's set",
    "start": "1526039",
    "end": "1531640"
  },
  {
    "text": "off on all sides by stars and like if you ever have to change the comment it's really annoying because uh it gets all",
    "start": "1531640",
    "end": "1538240"
  },
  {
    "text": "uneven I guess you could put your your keyboard into like insert mode or whatever instead so it doesn't have a",
    "start": "1538240",
    "end": "1543960"
  },
  {
    "text": "problem but yeah those are great those are terrible the only thing I'll do is um",
    "start": "1543960",
    "end": "1549799"
  },
  {
    "text": "with comments like if I want them to have like a Max 80 character width or something uh you can set up like an",
    "start": "1549799",
    "end": "1555559"
  },
  {
    "text": "extension in vs code or whatever to just sort of break it up for you oh that's nice so I like know that shortcut in my",
    "start": "1555559",
    "end": "1561279"
  },
  {
    "text": "in vs code for the extension that I have but that's the only one and I don't care",
    "start": "1561279",
    "end": "1566799"
  },
  {
    "text": "as much like if I'm reading somebody else's code and they have a really long comment I just have word wap on so it doesn't make a difference to me but it's",
    "start": "1566799",
    "end": "1572279"
  },
  {
    "text": "whenever I'm like recording videos that other people are going to watch or doing other things like that for whatever reason I'm kind of anal about that I",
    "start": "1572279",
    "end": "1578640"
  },
  {
    "text": "guess I just want it to be broken up but I I don't do like the any other fancy stuff because like you said anytime you",
    "start": "1578640",
    "end": "1584760"
  },
  {
    "text": "want to change anything which to me feels like all the time it's just obnoxious to do yeah I think that's a",
    "start": "1584760",
    "end": "1590520"
  },
  {
    "text": "good practice design for change like stuff will change we always I think too",
    "start": "1590520",
    "end": "1595640"
  },
  {
    "text": "often think of like we're building the final thing here and instead of remembering we're building something for",
    "start": "1595640",
    "end": "1601679"
  },
  {
    "text": "now and we'll probably change it at some point so designed for that that's partly",
    "start": "1601679",
    "end": "1607080"
  },
  {
    "text": "why um I like another I I mentioned not using struct for field names anytime you",
    "start": "1607080",
    "end": "1613640"
  },
  {
    "text": "can be very explicit in code I always prefer that uh one other thing is I'll will never I",
    "start": "1613640",
    "end": "1620080"
  },
  {
    "text": "don't use panics do you ever use panics in your projects I think it depends on",
    "start": "1620080",
    "end": "1625960"
  },
  {
    "text": "what you're doing yeah so like if I'm just writing if I'm writing like a 100 line script to do something real quick I",
    "start": "1625960",
    "end": "1631640"
  },
  {
    "text": "don't mind having panics in there like I've seen like how you can set up a main function that calls a run function and",
    "start": "1631640",
    "end": "1636799"
  },
  {
    "text": "returns an error and I agree that that arguably could be just as easy but sometimes I will find myself just",
    "start": "1636799",
    "end": "1642679"
  },
  {
    "text": "throwing a panic in there and just not caring because of what it is but like if I'm building an actual application I",
    "start": "1642679",
    "end": "1648240"
  },
  {
    "text": "very very rarely am using panic I find that panics I will use uh if it's",
    "start": "1648240",
    "end": "1654159"
  },
  {
    "text": "something where it's like a programmatic error it's like let's say you have a function and you're supposed to take the",
    "start": "1654159",
    "end": "1660679"
  },
  {
    "text": "number of things and negative numbers don't work you could just use like a",
    "start": "1660679",
    "end": "1665919"
  },
  {
    "text": "uint for it but I it's usually better just to um use a regular int and say if",
    "start": "1665919",
    "end": "1671760"
  },
  {
    "text": "the number is less than one or less than zero then Panic things like that where",
    "start": "1671760",
    "end": "1677200"
  },
  {
    "text": "it's like like because you're being called programmatically you know what the correct answer is um so like in the",
    "start": "1677200",
    "end": "1684039"
  },
  {
    "text": "standard Library there's uh rex. must and uh template. must there's a couple",
    "start": "1684039",
    "end": "1691000"
  },
  {
    "text": "things in the standard library that are must and the idea is like you have have",
    "start": "1691000",
    "end": "1696399"
  },
  {
    "text": "pre-coded these you know at compile you know you know based on the static source",
    "start": "1696399",
    "end": "1701640"
  },
  {
    "text": "code that this should be correct uh and so you don't really care about checking for an error if if there's an error then",
    "start": "1701640",
    "end": "1708679"
  },
  {
    "text": "it means that you've you've created some sort of error in your the error can't be",
    "start": "1708679",
    "end": "1714080"
  },
  {
    "text": "recovered from it's it's a programming error I think a good example of this which I think you sort of mentioned Carl",
    "start": "1714080",
    "end": "1719600"
  },
  {
    "text": "was like if you're using a slice and you use an out of- bound index you always get a panic or runtime erir at that point so like if I was creating like a",
    "start": "1719600",
    "end": "1727960"
  },
  {
    "text": "linked list type or something and somebody tried to access something out of bounds like having that return on error every single time is kind of",
    "start": "1727960",
    "end": "1733960"
  },
  {
    "text": "annoying to deal with in the code when in reality like that's somebody's logical error on their code it's not really something you can recover from",
    "start": "1733960",
    "end": "1741200"
  },
  {
    "text": "yeah so this is I like I like the pattern of if it's a message to the engineer or to the developer then a",
    "start": "1741200",
    "end": "1748399"
  },
  {
    "text": "panic makes sense and if it's you know if it's to the person doing the programming but in both of those",
    "start": "1748399",
    "end": "1754120"
  },
  {
    "text": "examples though it's possible that that that those values were coming from the user so it's like in a way even if you",
    "start": "1754120",
    "end": "1762720"
  },
  {
    "text": "are on the side of Errors even if it's not coming from the user like it's you get used to that same mechanism of it",
    "start": "1762720",
    "end": "1768200"
  },
  {
    "text": "bubbling but yeah I mean the other ter I will use a panic is if if something's",
    "start": "1768200",
    "end": "1773640"
  },
  {
    "text": "going to panic anyway and I want to sort of get in there before it and sort of panic before it it's like in in the real",
    "start": "1773640",
    "end": "1780320"
  },
  {
    "text": "life if you're in a situation with your friend and it's a bad situation the",
    "start": "1780320",
    "end": "1785559"
  },
  {
    "text": "first person to panic like the other person can't also just Panic they have to be like no calm down don't worry I",
    "start": "1785559",
    "end": "1791559"
  },
  {
    "text": "mean and then and then if you're not really panicking then you're like okay I've calmed down now and no one's panicking so it's a good trick that",
    "start": "1791559",
    "end": "1798039"
  },
  {
    "text": "but if you're calling a method and it's going to panic because it could be nil or something in there could be nil I",
    "start": "1798039",
    "end": "1803320"
  },
  {
    "text": "might check if it's nil and if it is panic cuz it's going to panic anyway because sometimes it's nice to avoid",
    "start": "1803320",
    "end": "1809200"
  },
  {
    "text": "having that second error argument you can build more composable things sometimes so yeah okay um probably still",
    "start": "1809200",
    "end": "1817200"
  },
  {
    "text": "won't Panic though much I feel like if you see a case where Panic is okay like it's rare but I feel like when you see",
    "start": "1817200",
    "end": "1823159"
  },
  {
    "text": "it and discuss it it's a little bit easier to be like okay that makes sense in that one case but don't make a habit of it I've seen some things where people",
    "start": "1823159",
    "end": "1829960"
  },
  {
    "text": "are are really opposed to panics and they they want there to be errors on things like slice out of bounds and",
    "start": "1829960",
    "end": "1837519"
  },
  {
    "text": "whatnot and I just feel like that's that's too far it's like if you if every",
    "start": "1837519",
    "end": "1842720"
  },
  {
    "text": "single time you used a slice you had to say comma air there would be too much",
    "start": "1842720",
    "end": "1848080"
  },
  {
    "text": "yeah interesting yeah you're probably right probably agree with that okay John is there something else you avoiding go",
    "start": "1848080",
    "end": "1855440"
  },
  {
    "text": "so I'm assuming everybody well maybe not everybody but I think Matt you've talked about this in the past using like labels",
    "start": "1855440",
    "end": "1862159"
  },
  {
    "text": "or anything that sort of reminds you of that like goto 10 type stuff that you saw in like basic programming I pretty",
    "start": "1862159",
    "end": "1868559"
  },
  {
    "text": "much never use it and I'm I'm like of the mindset that if I was teaching like an introduction to go course I don't",
    "start": "1868559",
    "end": "1874240"
  },
  {
    "text": "think I'd ever bring it up because like they might see it at some point and then they could be like hey what is this and that's fine but I don't think I'd want",
    "start": "1874240",
    "end": "1880880"
  },
  {
    "text": "to encourage people to use that and I feel like when you're showing them that stuff early on they're going to want to start using it more and I just like if",
    "start": "1880880",
    "end": "1887200"
  },
  {
    "text": "if I was teaching you know for like somebody new to go I don't think I'd even bring that up I'd be like you can",
    "start": "1887200",
    "end": "1892279"
  },
  {
    "text": "when you see it you'll know it's there if you run into a case where you need it you can figure it out but for now you don't need to know about it I think the",
    "start": "1892279",
    "end": "1898240"
  },
  {
    "text": "main time when uh I uh I end up wanting to use a label is if you have like a double nested Loop or like a loop with a",
    "start": "1898240",
    "end": "1905519"
  },
  {
    "text": "switch statement inside of it or something and then you want to break out of the switch statement but I agree that",
    "start": "1905519",
    "end": "1911880"
  },
  {
    "text": "in most of those cases what you can do instead is like to just have a subf function and you return from the sub",
    "start": "1911880",
    "end": "1917480"
  },
  {
    "text": "function instead and it's much more clear than having to use a a label yeah",
    "start": "1917480",
    "end": "1923080"
  },
  {
    "text": "I agree that's how I always get around it just because you can create little Anonymous functions in your other",
    "start": "1923080",
    "end": "1928120"
  },
  {
    "text": "functions and they're sometimes very nice to just just kind of Storytelling",
    "start": "1928120",
    "end": "1933559"
  },
  {
    "text": "explain what you're doing break things up but you don't have to necessarily build a type and have you know State and",
    "start": "1933559",
    "end": "1941000"
  },
  {
    "text": "or all that stuff you can sort of have it all locally I I love stuff like that and I use that actually for I use HTTP",
    "start": "1941000",
    "end": "1948519"
  },
  {
    "text": "Handler Funk a lot more than I use HTTP Handler even though I think if I was",
    "start": "1948519",
    "end": "1954039"
  },
  {
    "text": "doing a package for that was part like some middleware thing it would probably be both like you would provide both but",
    "start": "1954039",
    "end": "1961960"
  },
  {
    "text": "just in everyday usage I like to I prefer the Handler Funk because you can",
    "start": "1961960",
    "end": "1967039"
  },
  {
    "text": "just do things with functions very easily including middleware and things you just have a function that you call that returns a new Handler Funk and you",
    "start": "1967039",
    "end": "1973399"
  },
  {
    "text": "pass in the other one things like that and you all the having everything you",
    "start": "1973399",
    "end": "1978440"
  },
  {
    "text": "need even like sometimes request response objects inside that one function you know you do end up with a",
    "start": "1978440",
    "end": "1984840"
  },
  {
    "text": "quite a meaty function or you know plant-based protein packed function so",
    "start": "1984840",
    "end": "1990120"
  },
  {
    "text": "there's a lot in there but when you're maintaining it you're like oh what's going to happen I'm going to go to this endo and have a look and then you have",
    "start": "1990120",
    "end": "1997039"
  },
  {
    "text": "everything you need in that in that Endo there's no side quests Mark chorus",
    "start": "1997039",
    "end": "2002639"
  },
  {
    "text": "grafana someone I work with has this idea of like you go you have to go off on side quests and you get distracted",
    "start": "2002639",
    "end": "2009559"
  },
  {
    "text": "and you get to not do that if we keep everything together and verbatim and Vose right up front yeah I think a lot",
    "start": "2009559",
    "end": "2016919"
  },
  {
    "text": "of times in an application you can end up with um like you could just do it with global state right there's no",
    "start": "2016919",
    "end": "2023120"
  },
  {
    "text": "reason not that you couldn't just say like all right I'll I'll have all my my variables at the package level AS Global",
    "start": "2023120",
    "end": "2029760"
  },
  {
    "text": "State because you know it's just a single application and it's not a big deal but it's better to use them as",
    "start": "2029760",
    "end": "2036919"
  },
  {
    "text": "struct variables just because it puts them in one place and then you can see them and you it just conceptually makes",
    "start": "2036919",
    "end": "2042679"
  },
  {
    "text": "it a lot easier to deal with if it's like app. database versus database right",
    "start": "2042679",
    "end": "2049079"
  },
  {
    "text": "if database is just floating around at the package level you're like what did where did that come from what does that mean versus like if it's app. database",
    "start": "2049079",
    "end": "2055878"
  },
  {
    "text": "you're like oh it came from the app even if there's only ever going to be one app and you couldn't have two at the same time yeah completely agree I I would",
    "start": "2055879",
    "end": "2062520"
  },
  {
    "text": "actually do away with global State altogether I get it for like if you're writing quick little scripts it's it's",
    "start": "2062520",
    "end": "2068720"
  },
  {
    "text": "that's I think where it came from it was just very easy to start doing things but if you just you know there's so just by",
    "start": "2068720",
    "end": "2075398"
  },
  {
    "text": "being explicit about everything makes the code so much more readable and think",
    "start": "2075399",
    "end": "2080720"
  },
  {
    "text": "about like testing like if you've just got one thing in global State your test code often if you're going to try and",
    "start": "2080720",
    "end": "2087679"
  },
  {
    "text": "sort of mock it or something it'll interfere with it in weird ways and it's",
    "start": "2087679",
    "end": "2092919"
  },
  {
    "text": "it's sort of bit too magic so yeah I I would say avoid global State Al together",
    "start": "2092919",
    "end": "2098599"
  },
  {
    "text": "and just have I mean obviously variables and constants and stuff like that but not State that's like like errors I",
    "start": "2098599",
    "end": "2104960"
  },
  {
    "text": "would probably keep there you know if they're part of the package level if it's part of the API design but other",
    "start": "2104960",
    "end": "2111040"
  },
  {
    "text": "stuff i' I'd probably pop it somewhere else do you write much code that uses like like templates or like embedded",
    "start": "2111040",
    "end": "2118520"
  },
  {
    "text": "files yeah I do cuz like one pattern I've seen is basically like you'll have",
    "start": "2118520",
    "end": "2123839"
  },
  {
    "text": "a directory that you want to like maybe it's your like templates or something and essentially you'll have one go file",
    "start": "2123839",
    "end": "2130400"
  },
  {
    "text": "in that package that basically just has a global State like embed FS type a file system there just so you can put it into",
    "start": "2130400",
    "end": "2136599"
  },
  {
    "text": "your binary and have it there so like I think for things like that and templates and stuff like that that it's very",
    "start": "2136599",
    "end": "2141960"
  },
  {
    "text": "useful I I only mention this because I don't want people to listen and then be like I should never use these because I I definitely think there are cases where",
    "start": "2141960",
    "end": "2147960"
  },
  {
    "text": "like okay it's a lot easier to do this than to be like every time I start my app I have to go like tell it where all",
    "start": "2147960",
    "end": "2153160"
  },
  {
    "text": "my email templates and everything else are versus like just import those has a file embedded file system and use",
    "start": "2153160",
    "end": "2159079"
  },
  {
    "text": "them I think that the key is with the usages of of global state that aren't",
    "start": "2159079",
    "end": "2165040"
  },
  {
    "text": "bad is they're essentially constant so some of those you can't actually use the const keyword because for example the",
    "start": "2165040",
    "end": "2172760"
  },
  {
    "text": "the file store has to be a FS variable and it can't be a there's no such thing as an FS constant but once the",
    "start": "2172760",
    "end": "2179920"
  },
  {
    "text": "application starts up you're not changing it you're not modifying it you're not yeah and I I think that's",
    "start": "2179920",
    "end": "2185200"
  },
  {
    "text": "pretty much a a very clear bright line of if you're going to have to modify it",
    "start": "2185200",
    "end": "2190440"
  },
  {
    "text": "then it probably shouldn't live at the package level after if you're modifying",
    "start": "2190440",
    "end": "2196000"
  },
  {
    "text": "it after startup I think that also extends to the use of init I think init's okay if you're just using it to",
    "start": "2196000",
    "end": "2202720"
  },
  {
    "text": "set up some basically constants or just variables that are need to be calculated",
    "start": "2202720",
    "end": "2208160"
  },
  {
    "text": "but they are unchangeable probably throughout the app that that's it but in a way they're kind of that's not really",
    "start": "2208160",
    "end": "2215680"
  },
  {
    "text": "Global state in the the sense of like storing State there that's going to change I think I think the mutability of",
    "start": "2215680",
    "end": "2221160"
  },
  {
    "text": "it might be quite important in this it'd be quite nice if you could do the same things you can do in variables in",
    "start": "2221160",
    "end": "2226720"
  },
  {
    "text": "constants but they just work slightly differently but you could do it with syntactic sugar probably couldn't you",
    "start": "2226720",
    "end": "2232079"
  },
  {
    "text": "Carl pop that PR out in the morning there was a really interesting proposal",
    "start": "2232079",
    "end": "2238240"
  },
  {
    "text": "by uh this guy the morovia have you guys ever run into him online he's like he's a Super Genius about programming",
    "start": "2238240",
    "end": "2244800"
  },
  {
    "text": "languages like he's this German maybe Swiss German guy who um he just",
    "start": "2244800",
    "end": "2250240"
  },
  {
    "text": "understands the go type system in this really intensely intricate way uh and he had one blog post where he said what we",
    "start": "2250240",
    "end": "2256880"
  },
  {
    "text": "should do about package level state is to have Dynamic variables and it's ever",
    "start": "2256880",
    "end": "2262200"
  },
  {
    "text": "since then I've always like looked at it and thought it should be a dynamic variable yeah uh and so the way Dynamic",
    "start": "2262200",
    "end": "2268520"
  },
  {
    "text": "variables work is it it was in like some older languages like bash and um I think",
    "start": "2268520",
    "end": "2274240"
  },
  {
    "text": "maybe in Pearl if you don't use the my keyword it ends up being a dynamic",
    "start": "2274240",
    "end": "2279319"
  },
  {
    "text": "variable but but basically no no programming languages that are around anymore use Dynamic variables because they stink they're like totally unusable",
    "start": "2279319",
    "end": "2286520"
  },
  {
    "text": "except for this one use case and the what the way that it works is when you call a function and then you look at the",
    "start": "2286520",
    "end": "2293319"
  },
  {
    "text": "global what you see depends on who called it and it's like it would it would paste over the value with the new",
    "start": "2293319",
    "end": "2299760"
  },
  {
    "text": "value anyway it's it's this really crazy idea uh if you Google for it I think you can find it or we can put it in the show",
    "start": "2299760",
    "end": "2305680"
  },
  {
    "text": "notes but it's yeah it's this really crazy idea and if there's ever like a go-to I would be",
    "start": "2305680",
    "end": "2311800"
  },
  {
    "text": "really interested to see an idea like that make it into the language but uh definitely it's not something that's",
    "start": "2311800",
    "end": "2317800"
  },
  {
    "text": "going to change anytime soon so I think it was Dave Cheney that wrote the blog",
    "start": "2317800",
    "end": "2323119"
  },
  {
    "text": "post about it about making errors that are constants but you have to like basically make strings and then you",
    "start": "2323119",
    "end": "2328800"
  },
  {
    "text": "essentially make a type that's really a string underneath the hood and then you add the air like function to it do you guys find yourself actually using that a",
    "start": "2328800",
    "end": "2334880"
  },
  {
    "text": "lot in code like to actually make sure it's an error a constant error versus a variable error no I don't worry about it",
    "start": "2334880",
    "end": "2341720"
  },
  {
    "text": "if somebody's screwing with the variables that should be constant then they have their own problem yeah for the",
    "start": "2341720",
    "end": "2349119"
  },
  {
    "text": "errors thing for a while I got into having a function or that would check so you'd say like is you know you kind of",
    "start": "2349119",
    "end": "2356040"
  },
  {
    "text": "inspect the error even if it is like just checking to see if it's that type",
    "start": "2356040",
    "end": "2361280"
  },
  {
    "text": "but yeah I don't know if i' do that these days with the new error stuff it's I've done it in the past and and every",
    "start": "2361280",
    "end": "2367040"
  },
  {
    "text": "time I've done it I've just basically thought the same thing as Carl like if somebody's like intentionally coming",
    "start": "2367040",
    "end": "2372839"
  },
  {
    "text": "through here and trying to change these errors like they're going to screw something else up almost certainly what they're changing them to I've never seen",
    "start": "2372839",
    "end": "2379160"
  },
  {
    "text": "somebody do it so I think it's one of those like oh these can change so somebody could do it and I'm like who just Imports a package in their own",
    "start": "2379160",
    "end": "2385400"
  },
  {
    "text": "package and then changes the errors like that I've never seen that happen Counterpoint John let's do it let's",
    "start": "2385400",
    "end": "2391079"
  },
  {
    "text": "let's do it see what happens like we have to get a popular enough package that people are importing it and then they somehow have to to not realize that",
    "start": "2391079",
    "end": "2397119"
  },
  {
    "text": "we're changing one of the errors cuz you could change it in a different package in an in it yeah when you import testify",
    "start": "2397119",
    "end": "2404000"
  },
  {
    "text": "make it so that it changes io. eof to be something like really funny like instead",
    "start": "2404000",
    "end": "2409240"
  },
  {
    "text": "of saying end of file it says like you've been pranked by the prankster King prank King of the pranks that's",
    "start": "2409240",
    "end": "2415960"
  },
  {
    "text": "what you get for not reading King prank yeah this would be a good YouTube prank YouTube prank challenge yeah so you need",
    "start": "2415960",
    "end": "2422400"
  },
  {
    "text": "a major release just for that and then you need another major release is that a breaking change I assume that's a breaking change oh oh it will break a",
    "start": "2422400",
    "end": "2428800"
  },
  {
    "text": "few things I'll say it's a breaking change You' be like nothing in my package changed I don't know what you're talking",
    "start": "2428800",
    "end": "2435560"
  },
  {
    "text": "about what would happen to me in the community if it just be shunned if I did something like that I think everybody",
    "start": "2435560",
    "end": "2441599"
  },
  {
    "text": "would immediately be like was Matt hacked I think that's probably what would happen no they would I would not assume you were hacked I assume you had",
    "start": "2441599",
    "end": "2448000"
  },
  {
    "text": "just done it done it as a prank yeah King of the pranks King of the pranks you did it for the upvotes well hey",
    "start": "2448000",
    "end": "2453839"
  },
  {
    "text": "maybe that could be a regular section that could be a new section of our show pranks it's go pranks and we just do",
    "start": "2453839",
    "end": "2461480"
  },
  {
    "text": "loads of go pranks like phone phone Dave Cheney and say oh hello sir uh your pizza's on its way and he'll be like I",
    "start": "2461480",
    "end": "2468319"
  },
  {
    "text": "didn't order a pizza and we be like ah go pranks we got you big time Dave big time and then hang up on him I don't",
    "start": "2468319",
    "end": "2475280"
  },
  {
    "text": "think they work very well I don't know many people's numbers and they really stopped giving",
    "start": "2475280",
    "end": "2480319"
  },
  {
    "text": "them to us if we started doing that and there are no Genies that's true there's no Genies in that I've got some other",
    "start": "2480319",
    "end": "2486359"
  },
  {
    "text": "ideas for new sections of the show uh cleaning your Tech time we just spend 10 minutes and everyone cleans their Tech",
    "start": "2486359",
    "end": "2493640"
  },
  {
    "text": "get some an like antiseptic wipes clean your keyboards clean your trackpads your mouse give you you know I mean give you",
    "start": "2493640",
    "end": "2500680"
  },
  {
    "text": "nice give your workspace a nice clean that'd be a nice section we just play some music I think that's the most",
    "start": "2500680",
    "end": "2505880"
  },
  {
    "text": "important thing I learned at my first job was uh you know I I came to work every day and I I just ate my my lunch",
    "start": "2505880",
    "end": "2512599"
  },
  {
    "text": "at my desk and at the end of the year my laptop was completely f filthy it was just disgusting and what I learned from",
    "start": "2512599",
    "end": "2518560"
  },
  {
    "text": "that is never ever ever under any circumstances eat in front of a keyboard",
    "start": "2518560",
    "end": "2523800"
  },
  {
    "text": "no matter what even if there's like a hostage situation never just don't do it",
    "start": "2523800",
    "end": "2529040"
  },
  {
    "text": "I just like move my keyboard off like off to the side so I'm like all right this is all my eating space hang on Carl",
    "start": "2529040",
    "end": "2535200"
  },
  {
    "text": "what whatever have you ever read the news and they said oh there's a hostage",
    "start": "2535200",
    "end": "2540440"
  },
  {
    "text": "situation and the gunman has made people eat their lunch in front of their keyboards people are livid I've never",
    "start": "2540440",
    "end": "2547000"
  },
  {
    "text": "heard that on I don't know yeah that doesn't happen in Britain because you guys have good gun control laws this",
    "start": "2547000",
    "end": "2552680"
  },
  {
    "text": "country is terrible I but I could see it where like there's the hostage situation and they bring in the pizza for all the",
    "start": "2552680",
    "end": "2558079"
  },
  {
    "text": "hostages and he's like no you can't leave this room just eat at your desk eat at your desk and everyone's like this is the worst hostage this is the",
    "start": "2558079",
    "end": "2564319"
  },
  {
    "text": "worst time I've ever been kidnapped or held a gunpoint because of this normally at least could have my lunch outside",
    "start": "2564319",
    "end": "2571119"
  },
  {
    "text": "like people saying it pissed off trying to trying to say it so the guards hear them still but not quite so can I tell a",
    "start": "2571119",
    "end": "2578359"
  },
  {
    "text": "story related to this oh related to this it has to be unrelated sorry no related to like the cleaning your Hardware oh",
    "start": "2578359",
    "end": "2584040"
  },
  {
    "text": "yeah yeah okay so a few weeks ago a friend of mine had me come he's like hey my video",
    "start": "2584040",
    "end": "2590359"
  },
  {
    "text": "card's having issues can you come help me figure out what's going on so I go to his house pull his computer apart and it",
    "start": "2590359",
    "end": "2595599"
  },
  {
    "text": "is just packed with like dust cuz he's never cleaned it out didn't really I don't think he thought about it whatever",
    "start": "2595599",
    "end": "2600800"
  },
  {
    "text": "M so I took the video card and I guess one of the fans in it had like I don't know if stuff had packed up it so it",
    "start": "2600800",
    "end": "2606480"
  },
  {
    "text": "became uneven or what but basically one of the fans was like wobbling around so it like wasn't Cooling and like I think",
    "start": "2606480",
    "end": "2612119"
  },
  {
    "text": "one of the fans was basically popping out essentially so I'm like yeah your your video card's probably overheating at this point because that fan is just",
    "start": "2612119",
    "end": "2619319"
  },
  {
    "text": "not doing anything so yeah definitely take some time to clean your equipment people oh yeah whoa how how many years",
    "start": "2619319",
    "end": "2625599"
  },
  {
    "text": "do you think that was oh I think that computer was probably seven plus years wow and it's video card I don't think he",
    "start": "2625599",
    "end": "2631200"
  },
  {
    "text": "built it I think uh another friend like helped him build it at one point and he just doesn't do a lot of hard Ware stuff",
    "start": "2631200",
    "end": "2636559"
  },
  {
    "text": "he's done more lately but he just didn't really think about it or anything and it also went through a couple different",
    "start": "2636559",
    "end": "2642480"
  },
  {
    "text": "moves so between all of that it's not really shocking but yeah but yeah it was just kind of funny getting in there and",
    "start": "2642480",
    "end": "2648559"
  },
  {
    "text": "I'm like yeah uh this is uh going to be an issue yeah okay well there you go Tech",
    "start": "2648559",
    "end": "2655200"
  },
  {
    "text": "cleaning time not about not about out is there anything else you do without so",
    "start": "2655200",
    "end": "2660240"
  },
  {
    "text": "one of the things on my list of things to avoid and go which is kind of new is",
    "start": "2660240",
    "end": "2666079"
  },
  {
    "text": "is uh this idea of useless uses of generics so if you guys aren't familiar",
    "start": "2666079",
    "end": "2671119"
  },
  {
    "text": "there's um a classic uh Unix uh shell blog post called useless uses of cat uh",
    "start": "2671119",
    "end": "2678920"
  },
  {
    "text": "and what it is is it's just somebody having like a sort of humorous rant about when you're using uh command line",
    "start": "2678920",
    "end": "2684839"
  },
  {
    "text": "shell and you use the cat command the concatenate command a lot of those cases you can just eliminate it instead use",
    "start": "2684839",
    "end": "2691599"
  },
  {
    "text": "shell redirection and it's like sort of an old Unix joke so useless uses of generics this is a thing that I see a",
    "start": "2691599",
    "end": "2697680"
  },
  {
    "text": "lot uh recently where people they make a generic function but then that generic",
    "start": "2697680",
    "end": "2702839"
  },
  {
    "text": "function calls a function that takes the any type and so then the generics aren't providing any type safety so",
    "start": "2702839",
    "end": "2709680"
  },
  {
    "text": "specifically this happens a lot where people will write a thing that that calls uh json. unmarshall or json.",
    "start": "2709680",
    "end": "2716119"
  },
  {
    "text": "Marshall and it's like json. Marshall and unmarshall they just take the any type so you haven't added any type",
    "start": "2716119",
    "end": "2723400"
  },
  {
    "text": "safety you've just added like this wrapper that's generic for no reason uh",
    "start": "2723400",
    "end": "2728480"
  },
  {
    "text": "and so my does it make him feel better I think it does I think people like they see that genericness and they're like oh",
    "start": "2728480",
    "end": "2735200"
  },
  {
    "text": "this is good this is generic but then it's like but then you're just calling the function that takes the any type",
    "start": "2735200",
    "end": "2741400"
  },
  {
    "text": "anyway so it's not actually generic so are you referring to cases",
    "start": "2741400",
    "end": "2747520"
  },
  {
    "text": "where they're they're like passing data in to like turn it into Json and they're not actually getting anything back yeah",
    "start": "2747520",
    "end": "2753400"
  },
  {
    "text": "or like uh somebody will be writing like an API hand and they'll say Okay given type T that",
    "start": "2753400",
    "end": "2759400"
  },
  {
    "text": "I'm going to call this data and turn it into Json and send it over HTTP and it's",
    "start": "2759400",
    "end": "2764839"
  },
  {
    "text": "like okay but as soon as you take the data and you turn it into Json you've lost all the type safety so you could",
    "start": "2764839",
    "end": "2770880"
  },
  {
    "text": "just say take the any type and you don't need generics for this this is just like",
    "start": "2770880",
    "end": "2776000"
  },
  {
    "text": "regular code that would have worked without generics okay so you're not referring to cases like in my head I'm",
    "start": "2776000",
    "end": "2781319"
  },
  {
    "text": "thinking I could write a wrapper around sync. map that uses generics and now all of a sudden I can like actually create a",
    "start": "2781319",
    "end": "2787040"
  },
  {
    "text": "typed like sync. map wrapper essentially that actually gives me back the types that are already in that type I don't",
    "start": "2787040",
    "end": "2792599"
  },
  {
    "text": "have to go through all those Hoops of converting from any back to my type but I feel like that's very different than what you're explaining yeah that's a",
    "start": "2792599",
    "end": "2799200"
  },
  {
    "text": "different case because what you're doing with the sync. map is you're trying to make it so that all of the variables",
    "start": "2799200",
    "end": "2806520"
  },
  {
    "text": "inside of the map have the same type and so the fact that it has an any type is kind of like hidden or whatever but then",
    "start": "2806520",
    "end": "2814440"
  },
  {
    "text": "with like the Json one it's it's not like you're trying to get all of the calls to the Json function to",
    "start": "2814440",
    "end": "2819800"
  },
  {
    "text": "have the same type I don't know or like all of the yeah I think I get what you're saying though like if you're if",
    "start": "2819800",
    "end": "2825880"
  },
  {
    "text": "you're responding to a web request and you're going to call that and you're not actually going to like return that same type to them it doesn't really make a",
    "start": "2825880",
    "end": "2831520"
  },
  {
    "text": "difference or even if you are going to return the same type with generics a lot of time it's better just because of the",
    "start": "2831520",
    "end": "2837280"
  },
  {
    "text": "way the type inference Works to do things as like if you pass it as an argument then you don't have to",
    "start": "2837280",
    "end": "2842559"
  },
  {
    "text": "explicitly declare the types but then once you're pass things as arguments then it's like oh you could just uh you",
    "start": "2842559",
    "end": "2849839"
  },
  {
    "text": "know the way that like json. on Marshall Works where you just pass like the pointer in and get the pointer out again",
    "start": "2849839",
    "end": "2856680"
  },
  {
    "text": "and that works too you don't actually need a generic for that okay I think we've got time for one more John I heard",
    "start": "2856680",
    "end": "2864280"
  },
  {
    "text": "a rumor little birdie told me you don't use internal packages is that true not",
    "start": "2864280",
    "end": "2869559"
  },
  {
    "text": "really ever I can't think of a time that I've actually used it but I think this is also like a byproduct of like where",
    "start": "2869559",
    "end": "2876160"
  },
  {
    "text": "you're working and that sort of stuff and I think it's a good example of like the type of feature where like generics",
    "start": "2876160",
    "end": "2881599"
  },
  {
    "text": "were an example of this too when they were coming where a lot of people are like I've never needed them we shouldn't add them to the language and I think",
    "start": "2881599",
    "end": "2887520"
  },
  {
    "text": "they ignore the fact that there's probably a whole subset of the go community that could really benefit from them and internal packages to me are",
    "start": "2887520",
    "end": "2893720"
  },
  {
    "text": "like that in the sense that if I was at a big company with like a big mono like mono repo I could see internal packages",
    "start": "2893720",
    "end": "2900280"
  },
  {
    "text": "being very useful but since that's not how I'm working right now it's just never been something I've needed to use",
    "start": "2900280",
    "end": "2906200"
  },
  {
    "text": "or even messed around with Yeah Carl do you use them in your day today yeah I",
    "start": "2906200",
    "end": "2913319"
  },
  {
    "text": "basically everything I do I open source unless there's some reason I really can't open source it and so for that I",
    "start": "2913319",
    "end": "2919839"
  },
  {
    "text": "do like to use the internal just sort of to Mark like this is the boundary of stuff that you can look at and this is",
    "start": "2919839",
    "end": "2926960"
  },
  {
    "text": "the boundary of stuff you can't look at like I have a request packages and",
    "start": "2926960",
    "end": "2932000"
  },
  {
    "text": "inside of that there's an internal that uh does the the testing stuff M and it's",
    "start": "2932000",
    "end": "2937520"
  },
  {
    "text": "like okay I don't want you to start relying on requests. you know test just use requests and don't mess with the",
    "start": "2937520",
    "end": "2944119"
  },
  {
    "text": "test stuff in there but other than that yeah I so are you doing it so that you can still export the stuff and use it",
    "start": "2944119",
    "end": "2950599"
  },
  {
    "text": "throughout your code but you are basically telling anybody who's going to consume that API that or that library",
    "start": "2950599",
    "end": "2956079"
  },
  {
    "text": "that hey you shouldn't rely on this to stay constant because it's something that I might change yeah it's just like",
    "start": "2956079",
    "end": "2961960"
  },
  {
    "text": "whatever the internal details of that package are but it's not something that I want anybody else to really look at",
    "start": "2961960",
    "end": "2967599"
  },
  {
    "text": "it's like i' I've put this online as open source but just because everything is open source but I I don't vouch for",
    "start": "2967599",
    "end": "2974079"
  },
  {
    "text": "it in any way and you shouldn't use it but so John maybe because you don't do enough open source like you're not such",
    "start": "2974079",
    "end": "2980119"
  },
  {
    "text": "a hero like Carl well that maybe that's the issue or I I maybe it's just the way",
    "start": "2980119",
    "end": "2985400"
  },
  {
    "text": "I'm testing stuff too it's hard to say yeah but I think it's it's right if you've got a package people will depend",
    "start": "2985400",
    "end": "2990880"
  },
  {
    "text": "on anything they can get their grubby mitts on so um having internal stuff you",
    "start": "2990880",
    "end": "2996720"
  },
  {
    "text": "literally can't import that can you what happens if you try and import an internal package call uh I assume it",
    "start": "2996720",
    "end": "3002200"
  },
  {
    "text": "gives you an error message I don't know I don't know what the error message is I'd assume the compiler like throw an",
    "start": "3002200",
    "end": "3008680"
  },
  {
    "text": "error but I don't know I was expecting you to know the exact error message yeah I should have memorized it before the show but you guys told me at the last",
    "start": "3008680",
    "end": "3015520"
  },
  {
    "text": "minute so I didn't go down my list of things otherwise you would have definitely checked when you use internal",
    "start": "3015520",
    "end": "3020599"
  },
  {
    "text": "Carl are you um do you use like nested internals if that makes sense where you could have like ABC as like different",
    "start": "3020599",
    "end": "3027280"
  },
  {
    "text": "folders and then internal and then have more below that no I only ever just have the one yeah I know what you mean like",
    "start": "3027280",
    "end": "3033160"
  },
  {
    "text": "maybe I would like want to protect this from that and that from the other thing but no I just only ever set up one and",
    "start": "3033160",
    "end": "3039160"
  },
  {
    "text": "it's like whatever is in the internal is part of my project for like some projects that's the one that threw me",
    "start": "3039160",
    "end": "3044599"
  },
  {
    "text": "off a bit too cuz it's like you're protecting your code from yourself from like you importing your own stuff somewhere else and like a big mono repo",
    "start": "3044599",
    "end": "3051359"
  },
  {
    "text": "with a big company I could see that but like if it's me and one other person working on a small open source project",
    "start": "3051359",
    "end": "3056720"
  },
  {
    "text": "I'm like I don't know if we really need this to do that yeah you get you get a lot for free by having small little",
    "start": "3056720",
    "end": "3063040"
  },
  {
    "text": "teams like when you scale and have more people collaborating you know it's just",
    "start": "3063040",
    "end": "3068359"
  },
  {
    "text": "the nature of it there tradeoffs things are different you do extra work to",
    "start": "3068359",
    "end": "3073799"
  },
  {
    "text": "protect things like that probably I think you're right yeah okay well it's",
    "start": "3073799",
    "end": "3078839"
  },
  {
    "text": "that time dear listener it's your favorite time it's everyone's favorite",
    "start": "3078839",
    "end": "3083920"
  },
  {
    "text": "time it's time for unpopular [Music]",
    "start": "3083920",
    "end": "3089319"
  },
  {
    "text": "opinions unpop opinion you I actually think should probably",
    "start": "3089319",
    "end": "3096400"
  },
  {
    "text": "[Music]",
    "start": "3096670",
    "end": "3100229"
  },
  {
    "text": "leave do you use browsers to remember your passwords fellas this is a trick",
    "start": "3103000",
    "end": "3109760"
  },
  {
    "text": "you're trying to trick me into giving up operational security details this is a long con Fishing Job",
    "start": "3109760",
    "end": "3116000"
  },
  {
    "text": "and you've just been buttering me up for episode after episode oh Carl your jokes are so funny come back on the show and",
    "start": "3116000",
    "end": "3122200"
  },
  {
    "text": "tell me your mother's made name I get it I see where this is going yeah no I'm",
    "start": "3122200",
    "end": "3127520"
  },
  {
    "text": "absolutely not Carl but what is your favorite six-digit verification code that you've had oh yeah I think the",
    "start": "3127520",
    "end": "3133720"
  },
  {
    "text": "favorite one I've ever had uh that was probably the time that I got 1 2 3 4 5 6",
    "start": "3133720",
    "end": "3138760"
  },
  {
    "text": "that was just great couldn't believe it that would be amazing if you ever got that if it's truly random that's as like",
    "start": "3138760",
    "end": "3145440"
  },
  {
    "text": "as any other combination but mind you're not in that order if any other combination in an order in a specific",
    "start": "3145440",
    "end": "3151520"
  },
  {
    "text": "order but just feels special doesn't it um I once got mostly one I got one once",
    "start": "3151520",
    "end": "3157400"
  },
  {
    "text": "it was just zeros and ones like a little binary one and i' never i' never had so much fun verifying a thing just got to",
    "start": "3157400",
    "end": "3165280"
  },
  {
    "text": "Type Tap that in like oh I loved it now I'm thinking like browsers sometimes",
    "start": "3165280",
    "end": "3170799"
  },
  {
    "text": "it'll say oh I use a a password manager so I use a thing where I put all my",
    "start": "3170799",
    "end": "3177880"
  },
  {
    "text": "passwords in one thing so if that gets hacked then that's the end of",
    "start": "3177880",
    "end": "3184079"
  },
  {
    "text": "end but the assumption is that's quite safe but sometimes also browsers will",
    "start": "3184079",
    "end": "3190040"
  },
  {
    "text": "remember passwords it'll say like oh remember this and I'm like yeah sure just remember it that'd be great and",
    "start": "3190040",
    "end": "3195680"
  },
  {
    "text": "then sometimes you it'll change for some reason because you have to go through a different device you change your",
    "start": "3195680",
    "end": "3200960"
  },
  {
    "text": "password then you come back and it's remembered your previous password which is fine the first time I can't expect it",
    "start": "3200960",
    "end": "3206400"
  },
  {
    "text": "to read mines yet but I then change the password and submit through successfully",
    "start": "3206400",
    "end": "3212920"
  },
  {
    "text": "and it doesn't update it doesn't update its memory it doesn't update the password it's left and then every time I",
    "start": "3212920",
    "end": "3219480"
  },
  {
    "text": "come through that same route it remembers the old one and that's my unpopular opinion browsers shouldn't do",
    "start": "3219480",
    "end": "3225200"
  },
  {
    "text": "that they should update or they should go away any objections this was",
    "start": "3225200",
    "end": "3230599"
  },
  {
    "text": "different than I expected is how I'd put it it's different than how anyone expected I will say that what you're",
    "start": "3230599",
    "end": "3235960"
  },
  {
    "text": "describing is exactly why I don't store any passwords in Chrome anymore right like I just felt like it got so annoying",
    "start": "3235960",
    "end": "3242040"
  },
  {
    "text": "that it would constantly have the wrong password for different things so I just use one external tool that I can have on",
    "start": "3242040",
    "end": "3247920"
  },
  {
    "text": "all my devices and I like it actually frustrates me when Chrome tries to suggest something cuz I'm like I don't",
    "start": "3247920",
    "end": "3253440"
  },
  {
    "text": "use your password thing anymore like I thought I disabled this stop trying to do stuff yeah but why don't you just use",
    "start": "3253440",
    "end": "3259200"
  },
  {
    "text": "one password instead and then if it'll remember it right won't it so I use one",
    "start": "3259200",
    "end": "3264480"
  },
  {
    "text": "password and and what is it like that's where all my stuff is so I'm saying like whenever I had Chrome I don't care if",
    "start": "3264480",
    "end": "3270040"
  },
  {
    "text": "you know which one I use but whenever I was using Chrome stuff like I feel like I'd have them stored in both like you said you'd try to update it wouldn't",
    "start": "3270040",
    "end": "3275960"
  },
  {
    "text": "update it was just frustrating so I just disabled it so like I almost feel like browser just on one hand I like that",
    "start": "3275960",
    "end": "3281599"
  },
  {
    "text": "they do it because there's a whole class of people who are never going to use like one password last pass or any of those types of",
    "start": "3281599",
    "end": "3287079"
  },
  {
    "text": "software but at the same time it's it leads to cases like that which I think might turn people off of it especially",
    "start": "3287079",
    "end": "3293000"
  },
  {
    "text": "if you got somebody who runs on an iPhone running Safari and then they go jump on a computer and run Chrome or",
    "start": "3293000",
    "end": "3298839"
  },
  {
    "text": "something I've run into things where um my passwords on my iPad weren't sinking",
    "start": "3298839",
    "end": "3304319"
  },
  {
    "text": "to my iPhone and I didn't realize this for like some number of months it was like the the iPad was just becoming like",
    "start": "3304319",
    "end": "3311640"
  },
  {
    "text": "yeah well cuz how often do you have a new iPad password like you know I only ever use the iPad to browse in bed like",
    "start": "3311640",
    "end": "3318319"
  },
  {
    "text": "before I go to bed I'll read Hacker News and then I have Hacker News setup there's like an anti-procrastination feature in Hacker News where you can",
    "start": "3318319",
    "end": "3325240"
  },
  {
    "text": "tell it to um to disable itself after a certain amount of time and the message comes up and it says go back to work",
    "start": "3325240",
    "end": "3331520"
  },
  {
    "text": "you've set your answer and it's like no it's not go back to work it's go back to doing more entertaining entertainment",
    "start": "3331520",
    "end": "3336799"
  },
  {
    "text": "options like that's why it's there is because otherwise I'll just spend the whole night reading comments instead of",
    "start": "3336799",
    "end": "3342280"
  },
  {
    "text": "like doing things that are actually fun but yeah so I my iPad for some number of",
    "start": "3342280",
    "end": "3347440"
  },
  {
    "text": "months it was like all the passwords I made on it like just got stuck in this island and never got out and I had to",
    "start": "3347440",
    "end": "3353039"
  },
  {
    "text": "reset all those it was very annoying M no that does sound annoying but you got through it I got through it I survived",
    "start": "3353039",
    "end": "3359799"
  },
  {
    "text": "I'm a Survivor just like that time they took me hostage and made me eat a pizza at my desk yeah they will do that yeah",
    "start": "3359799",
    "end": "3365720"
  },
  {
    "text": "no my startup idea was basically you know one password M it's good password security and that same thing but two",
    "start": "3365720",
    "end": "3372680"
  },
  {
    "text": "passwords twice as secure you just put two passwords in to get through that first thing and then you can have all",
    "start": "3372680",
    "end": "3378599"
  },
  {
    "text": "your passwords I think you're not going to be able to sell it I think the way that you sell it is half a password go",
    "start": "3378599",
    "end": "3384640"
  },
  {
    "text": "small zero passwords negative one passwords we tell you the password and you tell us if",
    "start": "3384640",
    "end": "3390359"
  },
  {
    "text": "that's okay that's how you sign in I like it you tell us yeah if if we sent you the right password or not you could",
    "start": "3390359",
    "end": "3396599"
  },
  {
    "text": "do a multiple choice we'll send you three passwords and you click on the one that's real yeah isn't that how like",
    "start": "3396599",
    "end": "3403160"
  },
  {
    "text": "certain background checks work for stuff they like when you're going through it or whatever it's like which of these",
    "start": "3403160",
    "end": "3408319"
  },
  {
    "text": "addresses did you live at oh I hate those because uh it's like this is not top secret information well one it's not",
    "start": "3408319",
    "end": "3413839"
  },
  {
    "text": "top secret information and then two it's like wrong it'll like give me information that it's like it's tangled",
    "start": "3413839",
    "end": "3418960"
  },
  {
    "text": "up with my spouse or something and it's like I never lived in that City I don't know what they're talking about maybe my",
    "start": "3418960",
    "end": "3424799"
  },
  {
    "text": "spouse lived there 20 years ago who knows but you have to lie then cuz you think you know what it what it's getting",
    "start": "3424799",
    "end": "3431680"
  },
  {
    "text": "at but yeah you have to guess what it is it's like I don't know even if it's wrong I thought you were saying oh yeah",
    "start": "3431680",
    "end": "3437960"
  },
  {
    "text": "but it gets it wrong but it's supposed to isn't it two of them are supposed to be wrong call you're like I didn't live",
    "start": "3437960",
    "end": "3444200"
  },
  {
    "text": "at these three addresses these two are wrong but that's the point of the check no all three are wrong sometimes",
    "start": "3444200",
    "end": "3451480"
  },
  {
    "text": "all three are wrong oh yeah if all three are wrong yeah it was second when it says click all the bicycles and it's just a picture of a dog and it's like",
    "start": "3451480",
    "end": "3458400"
  },
  {
    "text": "why can't how do I get past and then you takes a couple of hours and then you think I can just click click verify now",
    "start": "3458400",
    "end": "3465880"
  },
  {
    "text": "or whatever it was a trick one and it worked I can't believe it that's when I",
    "start": "3465880",
    "end": "3471440"
  },
  {
    "text": "got my zeros and ones verification code there so that chit up after well dear",
    "start": "3471440",
    "end": "3477640"
  },
  {
    "text": "listener I'm afraid that's all the time we have today I hope you enjoyed this episode of go time if you did please",
    "start": "3477640",
    "end": "3484000"
  },
  {
    "text": "tell all your friends about it if you didn't tell your enemies either way let's talk about it and then you know",
    "start": "3484000",
    "end": "3490480"
  },
  {
    "text": "you can tell them about Carl and then they'll say what no that's not real and",
    "start": "3490480",
    "end": "3495880"
  },
  {
    "text": "you say no listen and they'll put it on and then they'll get to meet Carl in real life so that'd be lovely for them",
    "start": "3495880",
    "end": "3503160"
  },
  {
    "text": "well that's it thanks Carl for coming back really appreciate good great to see you as usual Matt I love that you uh you",
    "start": "3503160",
    "end": "3509960"
  },
  {
    "text": "needed somebody to be on a a kind of wacky episode where uh we just sort of goof around and you thought of me so",
    "start": "3509960",
    "end": "3517440"
  },
  {
    "text": "thanks yep and of course John Calhoun I don't think you thought of me let's not",
    "start": "3517440",
    "end": "3522559"
  },
  {
    "text": "let's not pretend here pretty sure Jared just forced me in here he needed somebody to be the straight man he's like look I can't let Matt go on his",
    "start": "3522559",
    "end": "3528760"
  },
  {
    "text": "Zone we got to put somebody there it's got to be some adult supervision okay well I'm afraid that is all the time we",
    "start": "3528760",
    "end": "3534920"
  },
  {
    "text": "have we'll see you next time on go time bye everybody",
    "start": "3534920",
    "end": "3539720"
  },
  {
    "text": "bye all right that's go time for this week thanks for listening and thank you to listener Steve nichan for suggesting",
    "start": "3543480",
    "end": "3550760"
  },
  {
    "text": "the topic for this episode if you enjoyed the show pass it on to someone else who might dig it too we appreciate",
    "start": "3550760",
    "end": "3557680"
  },
  {
    "text": "you helping us spread the word thanks once again to our partners fastly and fly for helping us bring go time to you",
    "start": "3557680",
    "end": "3563720"
  },
  {
    "text": "each and every week check out what they're up to at fast.com and",
    "start": "3563720",
    "end": "3568960"
  },
  {
    "text": "fly.io thanks also to our beatmaster in Residence we love you BMC next time on",
    "start": "3568960",
    "end": "3574960"
  },
  {
    "text": "go time Natalie and Johnny reconvene for part four of our hacking and go series",
    "start": "3574960",
    "end": "3581280"
  },
  {
    "text": "guests Justice rage and Jags also returned to share with us their hard-earned infos SEC knowledge stay",
    "start": "3581280",
    "end": "3587640"
  },
  {
    "text": "tuned right here we'll drop that episode in your podcast feed next",
    "start": "3587640",
    "end": "3593559"
  },
  {
    "text": "week",
    "start": "3593640",
    "end": "3596640"
  },
  {
    "text": "[Music]",
    "start": "3599830",
    "end": "3605349"
  },
  {
    "text": "Ang",
    "start": "3616480",
    "end": "3619480"
  }
]