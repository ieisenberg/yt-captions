[
  {
    "text": "the adoption has been very solid and the feedback from the community is telling me I used to hate Redux and Redux",
    "start": "120",
    "end": "6279"
  },
  {
    "text": "toolkit made me love it again or you know I just migrated our code from plane Redux to Redux toolkit and I cut the",
    "start": "6279",
    "end": "12960"
  },
  {
    "text": "number of lines of code in half and so on so that very very enthusiastic",
    "start": "12960",
    "end": "18199"
  },
  {
    "text": "positive response tells me we're headed in the right direction B with for change log is",
    "start": "18199",
    "end": "23320"
  },
  {
    "text": "provided by fastly learn more at fastly.com we move fast and fix things",
    "start": "23320",
    "end": "28480"
  },
  {
    "text": "here at change law because of Rob check them out at roar.com and we're hosted on Leno Cloud servers at the lin.com",
    "start": "28480",
    "end": "37399"
  },
  {
    "text": "changelog this episode of JZ party is brought to you by rbar deploy with confidence more often spend less time",
    "start": "38520",
    "end": "45280"
  },
  {
    "text": "worrying and more time on improving your code you can feel safe knowing every errors reported in real time with",
    "start": "45280",
    "end": "51520"
  },
  {
    "text": "rollbar check them out at rar.com [Music]",
    "start": "51520",
    "end": "63359"
  },
  {
    "text": "welcome back everyone this is JS party your weekly celebration of java script",
    "start": "63359",
    "end": "68560"
  },
  {
    "text": "and the web we record live each and every Thursday at 1: p.m. us Eastern",
    "start": "68560",
    "end": "74240"
  },
  {
    "text": "join in on the H jings at Chang log.com commmunity it's totally free and we have",
    "start": "74240",
    "end": "79759"
  },
  {
    "text": "a lot of fun so come hang with us be silly talk JavaScript what's not to love right this episode's a good one so let's",
    "start": "79759",
    "end": "86320"
  },
  {
    "text": "get right into it hey it's party time y'all [Applause]",
    "start": "86320",
    "end": "93869"
  },
  {
    "text": "oo guess what time it is Friends it is JS party time once again my name is",
    "start": "99159",
    "end": "104479"
  },
  {
    "text": "Jared Santo I'm your internet friend and I am joined by my internet friend AML Hussein what's up AML hey everybody and",
    "start": "104479",
    "end": "112079"
  },
  {
    "text": "we have a very special guest here to talk about Redux Redux toolkit and I hear rumors of redux's demise are",
    "start": "112079",
    "end": "118320"
  },
  {
    "text": "greatly exaggerated we're joined by Redux maintainer Mark Erikson Mark thanks for joining us hi very glad to be",
    "start": "118320",
    "end": "125200"
  },
  {
    "text": "here we are glad to have you it blows my mind AML has just informed me that Redux",
    "start": "125200",
    "end": "130440"
  },
  {
    "text": "has been around for over five years now that's crazy to me I mean that's like 30",
    "start": "130440",
    "end": "135680"
  },
  {
    "text": "in Internet Library Dogg ears absolutely and it's still alive and kicking and you are now maintaining this can you uh",
    "start": "135680",
    "end": "142440"
  },
  {
    "text": "introduce yourself in so far as how you came to be here on J's party today in terms of redux's History how did you get",
    "start": "142440",
    "end": "148599"
  },
  {
    "text": "involved with the project and become the maintainer of this very popular Library sure uh so Redux as as most people know",
    "start": "148599",
    "end": "156120"
  },
  {
    "text": "was originally created by Dan abov and Andrew Clark in the summer of 2015 and I was actually just getting",
    "start": "156120",
    "end": "164920"
  },
  {
    "text": "started learning react myself right about that same time and I was reading",
    "start": "164920",
    "end": "172519"
  },
  {
    "text": "blog posts and hanging out in chat channels and I'd seen some other flux-like libraries being discussed at",
    "start": "172519",
    "end": "178920"
  },
  {
    "text": "the time and this Redux thing kept popping up I started reading about it a",
    "start": "178920",
    "end": "184440"
  },
  {
    "text": "bit other people were asking questions about it and I I kind of kept seeing the same questions popping up everywhere",
    "start": "184440",
    "end": "191920"
  },
  {
    "text": "like stack Overflow and Reddit and you know the the reactif flex chat channels",
    "start": "191920",
    "end": "197000"
  },
  {
    "text": "and whatnot and I think it was around January 2016 I actually kind of half",
    "start": "197000",
    "end": "203959"
  },
  {
    "text": "volunteered to write an FAQ page for Redux based on all the stuff that I've been seeing asked",
    "start": "203959",
    "end": "210439"
  },
  {
    "text": "and I did it and Dan abov gave me commit rights to the repo after that spent the",
    "start": "210439",
    "end": "217120"
  },
  {
    "text": "next few months just sort of helping triage issues and tweak the docks some",
    "start": "217120",
    "end": "222239"
  },
  {
    "text": "and about that time Dan got hired on to work on the react team at Facebook and he messaged myself and",
    "start": "222239",
    "end": "229920"
  },
  {
    "text": "another guy named Tim Door and basically said hey congratulations here are the maintainers now here are the keys have",
    "start": "229920",
    "end": "236599"
  },
  {
    "text": "fun and it actually took a little while to really feel like I actually had any",
    "start": "236599",
    "end": "243720"
  },
  {
    "text": "permission to have an opinion on what the code itself should be",
    "start": "243720",
    "end": "250000"
  },
  {
    "text": "like but it kind of became my thing after that yeah and U Mark is actually again",
    "start": "250000",
    "end": "257079"
  },
  {
    "text": "being very humble uh because in addition to kind of really taking just having a",
    "start": "257079",
    "end": "262720"
  },
  {
    "text": "lot of really great leadership over this incredibly important project for our ecosystem because Redux has has although",
    "start": "262720",
    "end": "269400"
  },
  {
    "text": "it kind of of maybe was popularized in the via the react Community uh via because it was um uh I think the most",
    "start": "269400",
    "end": "275880"
  },
  {
    "text": "popular implementation of the flux architecture it it really grew legs and you know it it kind of quickly got",
    "start": "275880",
    "end": "282479"
  },
  {
    "text": "adopted with lots of other communities and I think what Mark has really done a a great job of doing is I think",
    "start": "282479",
    "end": "288840"
  },
  {
    "text": "practicing I would say a resistance and and and and you might be wondering what is resistance well he's practicing",
    "start": "288840",
    "end": "295520"
  },
  {
    "text": "resistance yeah because he's he's resisted the urge to change Redux right",
    "start": "295520",
    "end": "301360"
  },
  {
    "text": "it's like it's has such a small footprint and the API has really been fairly consistent over many many years",
    "start": "301360",
    "end": "307639"
  },
  {
    "text": "um and you know of course like the wonderful thing about Redux is you know it has this wonderful pluggable",
    "start": "307639",
    "end": "313199"
  },
  {
    "text": "architecture and so there's this just vast ecosystem within Redux that's just",
    "start": "313199",
    "end": "318360"
  },
  {
    "text": "incredible I mean how many packages are like Redux plugins um Mark there's like hundreds right yeah like for a while I",
    "start": "318360",
    "end": "325560"
  },
  {
    "text": "was keeping up a a running catalog of basically every Redux related library",
    "start": "325560",
    "end": "330800"
  },
  {
    "text": "and add-on that I could find and that got up to about probably about 2,000",
    "start": "330800",
    "end": "336680"
  },
  {
    "text": "different packages before I I just had to stop adding to that list because I",
    "start": "336680",
    "end": "342600"
  },
  {
    "text": "needed to focus on other things yeah yeah so to say that it had",
    "start": "342600",
    "end": "347880"
  },
  {
    "text": "legs is is is being you know maybe even like it's an understatement yeah but um",
    "start": "347880",
    "end": "354919"
  },
  {
    "text": "but I think one of the things I really kind of want to take a shout out uh take take a minute to kind of shout out Mark for is the fact that he is kind of this",
    "start": "354919",
    "end": "363199"
  },
  {
    "text": "um I would say tech support for the react community at large uh that's the best way to put him like he you know",
    "start": "363199",
    "end": "369680"
  },
  {
    "text": "reactive flux is a wonderful community that we'll link to in the show notes um it's a Discord server where you can you",
    "start": "369680",
    "end": "375840"
  },
  {
    "text": "know uh there's different channels on different kind of uh popular react Frameworks libraries or just you know",
    "start": "375840",
    "end": "382759"
  },
  {
    "text": "areas of expertise um and and mark really is very active there answering questions and he's very patient because",
    "start": "382759",
    "end": "389000"
  },
  {
    "text": "he's answering the same questions like multiple times again and again and again and again again like he's been answering",
    "start": "389000",
    "end": "394160"
  },
  {
    "text": "the same questions like as this community grows and we have you have all these newcomers entering the community",
    "start": "394160",
    "end": "399440"
  },
  {
    "text": "Mark is just patiently like he's not even like linking them to the answer anymore he's just like answering the same questions and I just really want to",
    "start": "399440",
    "end": "406120"
  },
  {
    "text": "thank you for that Mark because you're such a good custodian and teacher and you're so patient and we're just really",
    "start": "406120",
    "end": "411919"
  },
  {
    "text": "lucky to have you and I just wanted to say thanks you know for everything you do really I will freely admit that I",
    "start": "411919",
    "end": "417560"
  },
  {
    "text": "have a number of pre-written anwers that I routinely copy paste there you go in response to these questions text",
    "start": "417560",
    "end": "423520"
  },
  {
    "text": "expansion okay so now now we know the secret yeah so Mark do you feel like your what I'm saying Rings true I know",
    "start": "423520",
    "end": "429520"
  },
  {
    "text": "you're you want to be humble but you feel like you've been like tech support for the react Community I mean that's a that's a big role in a lot of ways yeah",
    "start": "429520",
    "end": "436199"
  },
  {
    "text": "I've not act not entirely jokingly said that I answer questions about react and",
    "start": "436199",
    "end": "441400"
  },
  {
    "text": "Redux like literally everywhere there's a comment box on the internet um and it",
    "start": "441400",
    "end": "447000"
  },
  {
    "text": "it is a very significant portion of my free time at this point and it's I I",
    "start": "447000",
    "end": "452199"
  },
  {
    "text": "like answering questions almost too much like there's been times when I've seen someone ask a question that I know the",
    "start": "452199",
    "end": "458879"
  },
  {
    "text": "answer to and I've actually kind of had to restrain myself from taking the time to answer it it's like just because a",
    "start": "458879",
    "end": "464720"
  },
  {
    "text": "question exists doesn't mean I have to take the time to answer it myself personally right now right that's",
    "start": "464720",
    "end": "471520"
  },
  {
    "text": "amazing it's just amazing that you want to do that because most of us can't be bothered it's like oh another question",
    "start": "471520",
    "end": "477080"
  },
  {
    "text": "like you know rtfm dudes but like you want you know like that's T",
    "start": "477080",
    "end": "482560"
  },
  {
    "text": "that's the typical respon but like you're like no I am the manual here here's the you know I already read the",
    "start": "482560",
    "end": "488080"
  },
  {
    "text": "manual let me tell you what it says It's amazing well I actually just saw a really really good blog post just",
    "start": "488080",
    "end": "493680"
  },
  {
    "text": "yesterday I was just going to talk about it I just I retweeted that tweet that was amazing such a good blog post a blog",
    "start": "493680",
    "end": "499759"
  },
  {
    "text": "post from NED belder who has been very active in the python community and I've seen a bunch of good posts over the",
    "start": "499759",
    "end": "505919"
  },
  {
    "text": "years about how to ask a good question you know stack over has their guidance you know minimal runable example and all",
    "start": "505919",
    "end": "513080"
  },
  {
    "text": "that kind of stuff but this was actually a post that tries to give guidelines on",
    "start": "513080",
    "end": "518159"
  },
  {
    "text": "how to best answer questions online like try",
    "start": "518159",
    "end": "524039"
  },
  {
    "text": "and be positive in the way you say in the way you respond don't you know focus on their question instead of you know",
    "start": "524039",
    "end": "530279"
  },
  {
    "text": "sniping about the formatting or other stuff a lot of really really good advice in that post yeah we definitely I read",
    "start": "530279",
    "end": "537560"
  },
  {
    "text": "that one as well I thought was spectacular we'll link that that one up for sure real quick mark just in the spirit of inclusion and accessibility we",
    "start": "537560",
    "end": "544279"
  },
  {
    "text": "know Redux has been around for a very long time and since you answer all the questions about it uh there are probably people listening who are like they're",
    "start": "544279",
    "end": "550480"
  },
  {
    "text": "just coming to JavaScript or they're just like JS curious and maybe they don't know what Redux is so can you do a",
    "start": "550480",
    "end": "556160"
  },
  {
    "text": "Redux 101 for us and just kind of like lay the groundwork so we can build a conversation around it sure so Facebook",
    "start": "556160",
    "end": "564720"
  },
  {
    "text": "announced react publicly in 2013 and at the time there were a lot of very like",
    "start": "564720",
    "end": "570360"
  },
  {
    "text": "objectoriented approaches to managing data in web applications like backbone",
    "start": "570360",
    "end": "576000"
  },
  {
    "text": "and in 2014 Facebook announced a pattern that they had come up with internally",
    "start": "576000",
    "end": "581959"
  },
  {
    "text": "which they called the flux architecture and the idea was to simplify the data",
    "start": "581959",
    "end": "587640"
  },
  {
    "text": "flow patterns within an app by kind of centralizing where when and how your",
    "start": "587640",
    "end": "593440"
  },
  {
    "text": "state can actually get updated rather than having a bunch of object models that can trigger events all over the",
    "start": "593440",
    "end": "598839"
  },
  {
    "text": "place the rest of the application calls a central object",
    "start": "598839",
    "end": "604160"
  },
  {
    "text": "called a dispatcher and passes in an object that describes some event that",
    "start": "604160",
    "end": "609640"
  },
  {
    "text": "happened in the app and that object is called an action and so over the next",
    "start": "609640",
    "end": "615360"
  },
  {
    "text": "year dozens of different flux libraries came out across the ecosystem experimenting with this pattern in",
    "start": "615360",
    "end": "621320"
  },
  {
    "text": "different ways and in mid 2015 Dan abov uh who had picked up a bit",
    "start": "621320",
    "end": "627839"
  },
  {
    "text": "of notoriety in the react ecosystem for some of the other things he' worked on started creating his own flux related",
    "start": "627839",
    "end": "634760"
  },
  {
    "text": "Library called Redux for a conference talk and that Library very quickly took off far more than he ever thought it",
    "start": "634760",
    "end": "642040"
  },
  {
    "text": "would and it basically killed off all the other flux libraries uh I refer to it as it kind of won the flux",
    "start": "642040",
    "end": "649040"
  },
  {
    "text": "Wars and it basically is now the only largely used implementation of the fux",
    "start": "649040",
    "end": "655720"
  },
  {
    "text": "architecture so the idea is that you write all of your state updating code in",
    "start": "655720",
    "end": "662480"
  },
  {
    "text": "functions called reducers which look at the existing state and some action",
    "start": "662480",
    "end": "667519"
  },
  {
    "text": "object that describes something that happened like user clicked a button or fetch some data from the server and the",
    "start": "667519",
    "end": "674320"
  },
  {
    "text": "reducer then decides what the new state should be in response and so the rest of",
    "start": "674320",
    "end": "681000"
  },
  {
    "text": "the application is not allowed to just modify the existing state instead it has",
    "start": "681000",
    "end": "686560"
  },
  {
    "text": "to say here's a thing that happened and it calls store. dispatch where the store",
    "start": "686560",
    "end": "693160"
  },
  {
    "text": "contains a single Global set of data that all of the app can refer to so",
    "start": "693160",
    "end": "699760"
  },
  {
    "text": "there's a deliberate level of indirection here compared to just saying you know my object. value equals 1 2 3",
    "start": "699760",
    "end": "707360"
  },
  {
    "text": "but there's a lot of value in trying to centralize some of this management as well as separating the process of what",
    "start": "707360",
    "end": "714440"
  },
  {
    "text": "happened in the app from how does my state update in the application mhm yeah",
    "start": "714440",
    "end": "720560"
  },
  {
    "text": "I mean it this this kind of shift of like pubsub bringing pubsub and oneway",
    "start": "720560",
    "end": "725760"
  },
  {
    "text": "data flow into front-end applications was just like gamechanging right because",
    "start": "725760",
    "end": "731200"
  },
  {
    "text": "you you know previously event and State Management inside of front-end apps was just like a nightmare it was this like",
    "start": "731200",
    "end": "736639"
  },
  {
    "text": "rub Goldberg there was no real organization or cha or or no Organization no Direction no nothing",
    "start": "736639",
    "end": "743040"
  },
  {
    "text": "right um it's one of the reasons why I I personally think like two-way binding in angular was also popularized because I",
    "start": "743040",
    "end": "748279"
  },
  {
    "text": "think it just took away some of the headaches around event and State Management you know were like just link",
    "start": "748279",
    "end": "753639"
  },
  {
    "text": "to the thing you know real time exactly yeah so Redux is and was just really",
    "start": "753639",
    "end": "759079"
  },
  {
    "text": "amazing uh in in in all the benefits that it brought but there was also kind of pain points around uh adoption you",
    "start": "759079",
    "end": "766720"
  },
  {
    "text": "know I think if you can kind of do you mind maybe kind of speaking to some of that because I think that's a really good segue into why Redux toolkit was",
    "start": "766720",
    "end": "774240"
  },
  {
    "text": "created was to to kind of address some of the pain points around using Redux sure so really since it's",
    "start": "774240",
    "end": "781760"
  },
  {
    "text": "Inception Redux has been known for requiring you to write a fair amount of boiler plate code in some form Dan abov",
    "start": "781760",
    "end": "790360"
  },
  {
    "text": "tweeted back in 2015 to the effect that flux and Redux were never intended to be",
    "start": "790360",
    "end": "796199"
  },
  {
    "text": "the shortest way to write code they were intended to make it very straightforward and clear to understand when where why",
    "start": "796199",
    "end": "803399"
  },
  {
    "text": "and how your state is changing throughout the app and if you look at the Redux Docs there is a page called",
    "start": "803399",
    "end": "810199"
  },
  {
    "text": "reducing boilerplate and that page has been in there since if you check the history late 2015 like right after Dan",
    "start": "810199",
    "end": "818040"
  },
  {
    "text": "was writing the original docs and and it shows some patterns for some little abstractions that you can create",
    "start": "818040",
    "end": "824199"
  },
  {
    "text": "yourself for common use cases and as Redux got a lot more",
    "start": "824199",
    "end": "830199"
  },
  {
    "text": "popular and a lot of people were adopting it either deliberately or because someone else told them to that",
    "start": "830199",
    "end": "836839"
  },
  {
    "text": "refrain of Redux requires a lot of boiler plate has been a a very very",
    "start": "836839",
    "end": "842680"
  },
  {
    "text": "constant theme and we we mentioned like the number of packages that the the community has come up with and a lot of",
    "start": "842680",
    "end": "849120"
  },
  {
    "text": "those were trying to solve the same kinds of problems but everyone was just making their own little version of",
    "start": "849120",
    "end": "856040"
  },
  {
    "text": "various utilities and you kept seeing the same patterns repeated over and over and there are some other pain",
    "start": "856040",
    "end": "862920"
  },
  {
    "text": "points like Redux was built to be extensible but because of that the core Library includes almost nothing built in",
    "start": "862920",
    "end": "871920"
  },
  {
    "text": "um even the most common approach for writing async logic was broken out into",
    "start": "871920",
    "end": "877120"
  },
  {
    "text": "a separate package called Redux thunk and it's only like 12 lines of code but the idea was we're not going to force",
    "start": "877120",
    "end": "883160"
  },
  {
    "text": "you to have to use this one approach in case you want to do something else and",
    "start": "883160",
    "end": "889240"
  },
  {
    "text": "and a lot of other people do along with that the process because",
    "start": "889240",
    "end": "894320"
  },
  {
    "text": "there's all these different ways you could set things up the code that you",
    "start": "894320",
    "end": "899839"
  },
  {
    "text": "have to write to configure and set up a Redux store involves a number of steps",
    "start": "899839",
    "end": "906120"
  },
  {
    "text": "and granted you only have to do that once per application but frankly it was annoying to have to write that every",
    "start": "906120",
    "end": "912519"
  },
  {
    "text": "time you started a new app so these were all very common pain points that people",
    "start": "912519",
    "end": "918240"
  },
  {
    "text": "pointed to as reasons why Redux was hard to use or or they didn't like it and",
    "start": "918240",
    "end": "923880"
  },
  {
    "text": "even as far back as 2017 I had filed a discussion issue asking what what are",
    "start": "923880",
    "end": "929240"
  },
  {
    "text": "some ways that we can offer some better built-in abstractions make it easier to use Redux make it easier to teach",
    "start": "929240",
    "end": "937279"
  },
  {
    "text": "Redux and it took a while for some of these ideas to kind of percolate through the system but where we ended up is that",
    "start": "937279",
    "end": "945360"
  },
  {
    "text": "in late 18 early 19 uh we began working on an official package that we",
    "start": "945360",
    "end": "951399"
  },
  {
    "text": "originally dubbed Redux starter kit and the idea was we would add some official",
    "start": "951399",
    "end": "957440"
  },
  {
    "text": "utilities for these most common use cases of things like setting up the store writing reducers action creators",
    "start": "957440",
    "end": "965199"
  },
  {
    "text": "action types and trying to handle immutable updates in a way that's easier",
    "start": "965199",
    "end": "970560"
  },
  {
    "text": "to read and write so we officially published that uh as 1.no in last",
    "start": "970560",
    "end": "977000"
  },
  {
    "text": "October and right about that same time people were also pointing out to us that",
    "start": "977000",
    "end": "983639"
  },
  {
    "text": "the name starter kit had its own issues like people assumed that it was either",
    "start": "983639",
    "end": "989519"
  },
  {
    "text": "a pre-built boiler plate that you were supposed to clone or it was only good",
    "start": "989519",
    "end": "995040"
  },
  {
    "text": "when you were setting up a project or it was only good for people who were beginners and had never used Redux",
    "start": "995040",
    "end": "1001319"
  },
  {
    "text": "before and none of those was true so we ended up renaming it to Redux to I think",
    "start": "1001319",
    "end": "1007680"
  },
  {
    "text": "I was in that camp by the way I was in the camp of like uh this is like a training wheels I don't need this you",
    "start": "1007680",
    "end": "1013880"
  },
  {
    "text": "know I'm a pro like I was in that camp for the record right I think I just",
    "start": "1013880",
    "end": "1019480"
  },
  {
    "text": "assumed that it was just for newbies yeah yeah and the intent was that it should be helpful for both people who",
    "start": "1019480",
    "end": "1025880"
  },
  {
    "text": "are starting with Redux but also experts who have written lots of Redux code so",
    "start": "1025880",
    "end": "1031918"
  },
  {
    "text": "we officially named it to Redux toolkit and switched to a different package name at Redux JS toolkit on",
    "start": "1031919",
    "end": "1039600"
  },
  {
    "text": "npm and it's working out wonderfully we are now officially recommending it as",
    "start": "1039600",
    "end": "1045798"
  },
  {
    "text": "the way to write Redux code you can still write code by hand if you want to",
    "start": "1045799",
    "end": "1051240"
  },
  {
    "text": "but the point is you don't have to and we're no longer teaching that you should do that and the if you look at the",
    "start": "1051240",
    "end": "1057760"
  },
  {
    "text": "downloads rate it's just a very very steady growth on a nice well straight",
    "start": "1057760",
    "end": "1064600"
  },
  {
    "text": "line angled upwards uh I think it actually just broke the 50,000 downloads",
    "start": "1064600",
    "end": "1070600"
  },
  {
    "text": "a day mark on a on a consistent basis so it it's still nowhere close to the",
    "start": "1070600",
    "end": "1076280"
  },
  {
    "text": "actual downloads of the core Redux package but the adoption has been very",
    "start": "1076280",
    "end": "1081480"
  },
  {
    "text": "solid and the feedback from the community is telling me that you know I I used to hate Redux and Redux toolkit",
    "start": "1081480",
    "end": "1088799"
  },
  {
    "text": "made me love it again or you know I just migrated our code from playing Redux to",
    "start": "1088799",
    "end": "1093840"
  },
  {
    "text": "Redux toolkit and I cut the number of lines of code in half and so on so that very very enthusiastic positive response",
    "start": "1093840",
    "end": "1101440"
  },
  {
    "text": "tells me we're headed in the right direction that sounds great we're going to dive deep into Redux toolkit after",
    "start": "1101440",
    "end": "1106679"
  },
  {
    "text": "the break before that I want to throw a bit of a curve at you here uhoh you are a maintainer of these things and so you",
    "start": "1106679",
    "end": "1112280"
  },
  {
    "text": "came into a project and you said let's improve what currently exists Dan wrote",
    "start": "1112280",
    "end": "1117840"
  },
  {
    "text": "the library in such a way that it was modular and really unopinionated because it can be used in all these different",
    "start": "1117840",
    "end": "1123559"
  },
  {
    "text": "ways and that caused this particular challenge that you tried to fix if you",
    "start": "1123559",
    "end": "1128840"
  },
  {
    "text": "were going to go back and write it yourself like do you think he made the right choices that he made then or would",
    "start": "1128840",
    "end": "1134400"
  },
  {
    "text": "you have more training wheels built in or more opinions or do you think modularity and the the generality of it",
    "start": "1134400",
    "end": "1141799"
  },
  {
    "text": "made it successful I I think given the constraints and the design goals at that",
    "start": "1141799",
    "end": "1147480"
  },
  {
    "text": "point in time in the summer of 2015 Dan and Andrew made some amazingly good",
    "start": "1147480",
    "end": "1153679"
  },
  {
    "text": "design choices in a twomon span that worked out amazingly well now given what",
    "start": "1153679",
    "end": "1160760"
  },
  {
    "text": "we now know and how we saw like Redux toolkit could not have been created if we hadn't seen the thousands of other",
    "start": "1160760",
    "end": "1168200"
  },
  {
    "text": "packages that people created the patterns that people were working with the problems they were trying to solve",
    "start": "1168200",
    "end": "1175400"
  },
  {
    "text": "the pain points they were running into and especially if a particular package called immer hadn't been created so a",
    "start": "1175400",
    "end": "1183360"
  },
  {
    "text": "quick explanation of that Redux requires that you write your updates immutably",
    "start": "1183360",
    "end": "1188400"
  },
  {
    "text": "which means you always have to make copies of objects and update the copies rather than modifying The Originals and",
    "start": "1188400",
    "end": "1195159"
  },
  {
    "text": "writing immutable update code in JavaScript is a royal pain because you end up having to do lots of nested",
    "start": "1195159",
    "end": "1202440"
  },
  {
    "text": "object spread operators and concat and map your arrays and it's very long and it's very",
    "start": "1202440",
    "end": "1209200"
  },
  {
    "text": "verbose and hard to read and really easy to make mistakes and the number one",
    "start": "1209200",
    "end": "1215039"
  },
  {
    "text": "mistake that I see people making with Redux has been accidentally mutating their state either in or out of the",
    "start": "1215039",
    "end": "1222159"
  },
  {
    "text": "reducer functions meanwhile uh Michelle westr the creator of the mobx library",
    "start": "1222159",
    "end": "1229159"
  },
  {
    "text": "made a separate package called immer which uses JavaScript proxies to wrap",
    "start": "1229159",
    "end": "1237080"
  },
  {
    "text": "some data and you provide a callback function that receives a draft object",
    "start": "1237080",
    "end": "1242840"
  },
  {
    "text": "that looks like your original data but it's actually been wrapped in a proxy",
    "start": "1242840",
    "end": "1247880"
  },
  {
    "text": "and you can actually write mutating code like state. value equals 123 inside of",
    "start": "1247880",
    "end": "1255799"
  },
  {
    "text": "the Callback emmer tracks the attempted changes and internally converts them",
    "start": "1255799",
    "end": "1261880"
  },
  {
    "text": "into safe immutable updates so that the return result of this function is a new",
    "start": "1261880",
    "end": "1268480"
  },
  {
    "text": "immutably updated object as if you'd written all that spread operator code by hand yourself and so Redux toolkit was",
    "start": "1268480",
    "end": "1276520"
  },
  {
    "text": "built around using emmer from the very first prototype that I wrote and while",
    "start": "1276520",
    "end": "1282000"
  },
  {
    "text": "we could have written some of the other utilities well earlier using emmer as of",
    "start": "1282000",
    "end": "1288080"
  },
  {
    "text": "core to how Redux toolkit works and one of the key ways that makes it a lot easier to write your Redux",
    "start": "1288080",
    "end": "1294760"
  },
  {
    "text": "logic right so to go back and answer answer your question there's probably a",
    "start": "1294760",
    "end": "1299919"
  },
  {
    "text": "few things that Dan and Andrew could have done differently like say at least including the thunk package out of the box so you don't have to install a",
    "start": "1299919",
    "end": "1306159"
  },
  {
    "text": "separate library but given what they're aiming for and the constraints at the time it was frankly a brilliant",
    "start": "1306159",
    "end": "1313930"
  },
  {
    "text": "[Music] design",
    "start": "1313930",
    "end": "1320520"
  },
  {
    "text": "[Music] what's up JS party people have you ever wondered if you could be offering a",
    "start": "1322160",
    "end": "1328080"
  },
  {
    "text": "faster less buggy experience for your customers well with Ray Gun error and performance monitoring you have all the",
    "start": "1328080",
    "end": "1334360"
  },
  {
    "text": "information you need at your fingertips to quickly find and fix errors and performance issues across your Tex Stack",
    "start": "1334360",
    "end": "1340760"
  },
  {
    "text": "Down to the line of code ray gun makes it easy to monitor the impact of your performance improvements quickly identify issues across web and mobile",
    "start": "1340760",
    "end": "1347320"
  },
  {
    "text": "apps and see see how your code performs in the hands of your customers this saves you time this saves you money and",
    "start": "1347320",
    "end": "1353679"
  },
  {
    "text": "this saves your sanity head to Ray gun.com to join thousands of customers and software teams who use ray gun every",
    "start": "1353679",
    "end": "1359000"
  },
  {
    "text": "single day again Ray gun.com to get them a try with a free 14-day",
    "start": "1359000",
    "end": "1364130"
  },
  {
    "text": "[Music]",
    "start": "1364130",
    "end": "1367259"
  },
  {
    "text": "[Music]",
    "start": "1372280",
    "end": "1375400"
  },
  {
    "text": "trial [Music]",
    "start": "1377440",
    "end": "1388360"
  },
  {
    "text": "so mark that was that was really a a wonderful backstory into the reasons behind Redux toolkits creation um kind",
    "start": "1388360",
    "end": "1395640"
  },
  {
    "text": "of going back to the problems of Redux right I think with trying to serve the",
    "start": "1395640",
    "end": "1400960"
  },
  {
    "text": "JavaScript Community you're always trying to serve like the widest base possible right because JavaScript is",
    "start": "1400960",
    "end": "1406720"
  },
  {
    "text": "like so ubiquitous everybody's always writing JavaScript Java devs are writing JavaScript python devs are writing",
    "start": "1406720",
    "end": "1412200"
  },
  {
    "text": "JavaScript or maybe I should say Java devs are attempting to write JavaScript you know",
    "start": "1412200",
    "end": "1419279"
  },
  {
    "text": "sorry anyway just saying you know sometimes you know javascript's accessibility lends to problems of foot",
    "start": "1419279",
    "end": "1426000"
  },
  {
    "text": "gunning you know yeah but anyway so like it appeals to so many people but then obviously like there were certain things",
    "start": "1426000",
    "end": "1432120"
  },
  {
    "text": "around boilerplate for example that was a problem but but quite frankly like that was part of the design in the sense",
    "start": "1432120",
    "end": "1438039"
  },
  {
    "text": "that from my understanding G Dan abov was really trying to achieve something that was greable and so to kind of coin",
    "start": "1438039",
    "end": "1445000"
  },
  {
    "text": "the term grep Factor right the GP factor of Redux is high because you have this like constant action Creator and you",
    "start": "1445000",
    "end": "1451240"
  },
  {
    "text": "just GP for it and you can see everywhere it's being used you can very easily just scrap your code and just see",
    "start": "1451240",
    "end": "1457080"
  },
  {
    "text": "where this one action is like how it's being traced throughout your source code and for me that's like just huge",
    "start": "1457080",
    "end": "1462919"
  },
  {
    "text": "especially in terms of like the readability maintainability right uh and I'm always kind of one to kind of air on",
    "start": "1462919",
    "end": "1469200"
  },
  {
    "text": "the side of being a little more verbose because for code that's like supposed to be maintained by multiple people over",
    "start": "1469200",
    "end": "1475039"
  },
  {
    "text": "many years and so I'd rather have more readable code than like short abstracted",
    "start": "1475039",
    "end": "1480279"
  },
  {
    "text": "code and so my question is like with Redux toolkit you've built these abstractions but like what have we lost",
    "start": "1480279",
    "end": "1487000"
  },
  {
    "text": "uh for power users or for people who want more of that like grab factor and then also more so like from reading the",
    "start": "1487000",
    "end": "1494000"
  },
  {
    "text": "docs we have abstractions but we also have like more power right like things like",
    "start": "1494000",
    "end": "1499159"
  },
  {
    "text": "also like they bring a lot more to the table outside of the like right out the gate than previously and so can you kind",
    "start": "1499159",
    "end": "1504919"
  },
  {
    "text": "of just speak to this dichotomy of like giving people a jetpack but then also giving them like guard rails you know",
    "start": "1504919",
    "end": "1511640"
  },
  {
    "text": "sure so the redex core like literally the the library and the functions",
    "start": "1511640",
    "end": "1517760"
  },
  {
    "text": "themselves are are so minimal that you can use them in lots of different ways and that this has been both a a strength",
    "start": "1517760",
    "end": "1524360"
  },
  {
    "text": "and a weakness and I actually wrote uh two very long Long blog posts that",
    "start": "1524360",
    "end": "1529799"
  },
  {
    "text": "talked about the intent behind redux's design what the library literally",
    "start": "1529799",
    "end": "1536679"
  },
  {
    "text": "requires you to do in terms of how you write your code but then why a lot of",
    "start": "1536679",
    "end": "1542600"
  },
  {
    "text": "common usage patterns actually exist uh I I dubbed these posts the tow of Redux",
    "start": "1542600",
    "end": "1548919"
  },
  {
    "text": "part one implementation and intent and part two practice and philosophy and let's look at one of the",
    "start": "1548919",
    "end": "1555799"
  },
  {
    "text": "common examples so one of the most common complaints about boilerplate is I have to write my action types and my",
    "start": "1555799",
    "end": "1563880"
  },
  {
    "text": "reducer code in my action Creator functions in separate files and I have",
    "start": "1563880",
    "end": "1570000"
  },
  {
    "text": "to write my action types as const variables where both the name of the",
    "start": "1570000",
    "end": "1576520"
  },
  {
    "text": "variable and the text of the string are all uppercase you know or Screaming snake case",
    "start": "1576520",
    "end": "1583559"
  },
  {
    "text": "capitalization the Redux Library actually requires none of that it doesn't care about your folder structure",
    "start": "1583559",
    "end": "1589320"
  },
  {
    "text": "it doesn't care whether you've defined your action types as const variables or written them in line it doesn't care",
    "start": "1589320",
    "end": "1596039"
  },
  {
    "text": "whether they're case uppercase lowercase dashes whatever but these are all common",
    "start": "1596039",
    "end": "1602399"
  },
  {
    "text": "conventions that existed and were shown in the docs for a reason as developers we often put code of different types",
    "start": "1602399",
    "end": "1609320"
  },
  {
    "text": "into different files or different areas of the code base so let's split up our",
    "start": "1609320",
    "end": "1614720"
  },
  {
    "text": "action Creator functions which aren't required but are a common pattern from our reducer functions which are",
    "start": "1614720",
    "end": "1620279"
  },
  {
    "text": "definitely required okay they they both need to refer to the same action type",
    "start": "1620279",
    "end": "1626120"
  },
  {
    "text": "strings well we don't want to to copy paste the strings in multiple places",
    "start": "1626120",
    "end": "1632159"
  },
  {
    "text": "because maybe you make a typo or something so you want to Define it in one place or maybe you want to reuse it",
    "start": "1632159",
    "end": "1638480"
  },
  {
    "text": "yeah yeah so let's define those as variables and if the variable is needed by two other files and it needs to be in",
    "start": "1638480",
    "end": "1645360"
  },
  {
    "text": "its own file and like there's a very logical train of thought for why these",
    "start": "1645360",
    "end": "1650559"
  },
  {
    "text": "patterns exist but at the same time the default patterns that were always shown in the",
    "start": "1650559",
    "end": "1656480"
  },
  {
    "text": "docs did tend towards some very verbose examples and I've I've seen Dan",
    "start": "1656480",
    "end": "1662240"
  },
  {
    "text": "say that he didn't necessarily think people would actually write code the way it was shown in the docs and as as much",
    "start": "1662240",
    "end": "1668080"
  },
  {
    "text": "as I love Dan I think that was maybe a slightly naive opinion because of course",
    "start": "1668080",
    "end": "1673279"
  },
  {
    "text": "people are going to do what you showed but people also love Dan like let's be real so I think people people if Dan",
    "start": "1673279",
    "end": "1679240"
  },
  {
    "text": "published his like food and like music and like clothing schedule or like",
    "start": "1679240",
    "end": "1684559"
  },
  {
    "text": "whatever I think people would just do it they would just like like npm install Dan abov like I think he's got a very",
    "start": "1684559",
    "end": "1689640"
  },
  {
    "text": "serious fan club you know you think he has a clothing schedule ml or like yeah like what what I wear this on Monday oh",
    "start": "1689640",
    "end": "1697559"
  },
  {
    "text": "or his uh or his like the brands that he wears I just thought I was like oh it's 8:30 a.m. but I put on my pants got a",
    "start": "1697559",
    "end": "1703159"
  },
  {
    "text": "following that too I mean I mean let's be honest though these these days it's like Monday Tuesday any day like you",
    "start": "1703159",
    "end": "1709880"
  },
  {
    "text": "know any day is a pants free day these days speaking of which actually I don't",
    "start": "1709880",
    "end": "1715720"
  },
  {
    "text": "know about you though but you said that you put your code in different files like I I I don't do that uh I don't do",
    "start": "1715720",
    "end": "1722440"
  },
  {
    "text": "that I don't do that I just put it all in one file called bundle.js",
    "start": "1722440",
    "end": "1729600"
  },
  {
    "text": "yeah I'm a minimalist all my code goes in one file across multiple projects",
    "start": "1729600",
    "end": "1735039"
  },
  {
    "text": "yeah even different languages just all one file you just use name spaces and iies you",
    "start": "1735039",
    "end": "1742600"
  },
  {
    "text": "know anyways so I mean the the thing is like the the docs showed a pattern of",
    "start": "1742600",
    "end": "1748559"
  },
  {
    "text": "organizing your different types of code into different files and then organizing those files into folders by type so you",
    "start": "1748559",
    "end": "1756240"
  },
  {
    "text": "have a reducers folder actions folder constants folder Etc a guy named Eric rasmason actually came up with a pattern",
    "start": "1756240",
    "end": "1763440"
  },
  {
    "text": "for putting all the logic for a given feature into one file which he named the",
    "start": "1763440",
    "end": "1768480"
  },
  {
    "text": "duck pattern and like a small segment of the Redux Community adopted it but we",
    "start": "1768480",
    "end": "1773559"
  },
  {
    "text": "didn't officially suggest it I and I always had a couple concerns about it particularly about how it kind of",
    "start": "1773559",
    "end": "1780519"
  },
  {
    "text": "suggests that only one reducer can ever handle an action of a given type when",
    "start": "1780519",
    "end": "1785760"
  },
  {
    "text": "really the intent was any reducer can respond to any action so given that",
    "start": "1785760",
    "end": "1791679"
  },
  {
    "text": "these are specific pain points that people talked about how does Redux toolkit try to address them so the docs",
    "start": "1791679",
    "end": "1799960"
  },
  {
    "text": "say that I created Redux toolkit really to solve three different problems it's too hard to set up a store you have to",
    "start": "1799960",
    "end": "1805840"
  },
  {
    "text": "add a bunch of extra packages to do anything useful like Redux th and reselect and whatnot and it requires too",
    "start": "1805840",
    "end": "1812120"
  },
  {
    "text": "much boiler plate code so item one Redux toolkit has a function called configure",
    "start": "1812120",
    "end": "1817960"
  },
  {
    "text": "store that is a oneline call you provide either the reducer function you've",
    "start": "1817960",
    "end": "1823200"
  },
  {
    "text": "already built yourself or the slice reducers for the different features",
    "start": "1823200",
    "end": "1828559"
  },
  {
    "text": "and it will assemble them itself it automatically sets up the Redux Dev",
    "start": "1828559",
    "end": "1833720"
  },
  {
    "text": "tools browser extension setup that is needed and it automatically adds the",
    "start": "1833720",
    "end": "1839120"
  },
  {
    "text": "Redux thunk middleware and in development mode a couple of Dev check",
    "start": "1839120",
    "end": "1844279"
  },
  {
    "text": "middleware that will throw errors if you do things like accidentally mutate any state in the store so protecting against",
    "start": "1844279",
    "end": "1851640"
  },
  {
    "text": "by far the most common mistake that people make when using Redux uh from there there's a couple",
    "start": "1851640",
    "end": "1857600"
  },
  {
    "text": "util ities like create action which generates action creators based on a",
    "start": "1857600",
    "end": "1863120"
  },
  {
    "text": "given typ string and create reducer which allows you to Define reducers using an object",
    "start": "1863120",
    "end": "1870360"
  },
  {
    "text": "lookup table syntax rather than a switch statement because for some reason a lot of people really hate switch statements",
    "start": "1870360",
    "end": "1877480"
  },
  {
    "text": "and create reducer also uses this immer library inside to let you write what looks like mutating syntax in your",
    "start": "1877480",
    "end": "1885360"
  },
  {
    "text": "reducers but it's actually turned into into safe correct immutable updates",
    "start": "1885360",
    "end": "1891320"
  },
  {
    "text": "internally so from there we have an API called create slice and we've",
    "start": "1891320",
    "end": "1897559"
  },
  {
    "text": "traditionally used the word slice to refer to the reducer for a single part",
    "start": "1897559",
    "end": "1903480"
  },
  {
    "text": "of your Redux state so for example if I have a blogging app with state. users",
    "start": "1903480",
    "end": "1909039"
  },
  {
    "text": "state. posts and state. comments the user's reducer and the user's actions",
    "start": "1909039",
    "end": "1916240"
  },
  {
    "text": "represent a slice of your state so create slice Builds on",
    "start": "1916240",
    "end": "1922159"
  },
  {
    "text": "create action and create reducer you give it a set of reducer functions in an",
    "start": "1922159",
    "end": "1927559"
  },
  {
    "text": "object and you give them meaningful names like you know giving the class too",
    "start": "1927559",
    "end": "1934080"
  },
  {
    "text": "app example so you know to-do added you know to-do toggled you know you know",
    "start": "1934080",
    "end": "1939799"
  },
  {
    "text": "change filter stuff like that and it automatically generates the action",
    "start": "1939799",
    "end": "1944960"
  },
  {
    "text": "creators and the action types internally based on the names of the reducer",
    "start": "1944960",
    "end": "1951000"
  },
  {
    "text": "functions that you provided and this actually gets to that grep ability factor that you were asking about",
    "start": "1951000",
    "end": "1957120"
  },
  {
    "text": "earlier so one of the advantages of having all those action types as constant variables in the code base was",
    "start": "1957120",
    "end": "1964600"
  },
  {
    "text": "that you could look at the Redux Dev tools and see okay I dispatched the uppercase addore too action type and now",
    "start": "1964600",
    "end": "1974279"
  },
  {
    "text": "I can control shift F search the whole code base textually for uses of that action type well we're",
    "start": "1974279",
    "end": "1982039"
  },
  {
    "text": "actually now recommending that people use a naming pattern where the string is",
    "start": "1982039",
    "end": "1989639"
  },
  {
    "text": "lower camel cased and you you define it as like domain slash event name so for",
    "start": "1989639",
    "end": "1997399"
  },
  {
    "text": "example maybe the domain is to-dos slash to-do added rather than",
    "start": "1997399",
    "end": "2004279"
  },
  {
    "text": "like upper upper screaming snake case add Todo mhm that feels very like rpt",
    "start": "2004279",
    "end": "2009880"
  },
  {
    "text": "it's like where the shift from rest to RPC like you know or just like event you know um it's it's a very similar to like",
    "start": "2009880",
    "end": "2017480"
  },
  {
    "text": "graphql right like it's graphql is just it lets you kind of structure your uh",
    "start": "2017480",
    "end": "2023039"
  },
  {
    "text": "the data that you get from the server in an events like driven way right as opposed to Resource driven and so this",
    "start": "2023039",
    "end": "2029200"
  },
  {
    "text": "kind of feels a little more in line with that I like the idea of like using domain and then action you know as is is",
    "start": "2029200",
    "end": "2035960"
  },
  {
    "text": "kind of one thing for your action type yeah and and i' I've seen a lot of different naming conventions like the",
    "start": "2035960",
    "end": "2041279"
  },
  {
    "text": "angular the ngrx folks actually use like square brackets domain space like an",
    "start": "2041279",
    "end": "2047320"
  },
  {
    "text": "actual sentence describing things so in this case we picked a new convention and",
    "start": "2047320",
    "end": "2053280"
  },
  {
    "text": "we're encouraging it and Redux toolkit uses that convention internally but create slice generates that action typ",
    "start": "2053280",
    "end": "2060000"
  },
  {
    "text": "string Based On A String name that you provide for the slice like quote to-dos",
    "start": "2060000",
    "end": "2067040"
  },
  {
    "text": "and it and then it just just concatenates that with the name of the reducer function that you provided like",
    "start": "2067040",
    "end": "2074240"
  },
  {
    "text": "to-do add it so if I look at the dev tools and I see a to-dos SL too added",
    "start": "2074240",
    "end": "2080158"
  },
  {
    "text": "action type I should still be able to grip for the to-do added name and find",
    "start": "2080159",
    "end": "2087079"
  },
  {
    "text": "the exact reducer function in the code base that resulted in that action type being generated but the nice thing",
    "start": "2087079",
    "end": "2094760"
  },
  {
    "text": "is action type strings are almost now in implementation detail you no longer have",
    "start": "2094760",
    "end": "2100839"
  },
  {
    "text": "to write them in your code you don't refer to the action type anywhere it's",
    "start": "2100839",
    "end": "2106000"
  },
  {
    "text": "just the string that shows up in the dev tools when you're looking at the history of the actions H yeah I mean that that's",
    "start": "2106000",
    "end": "2113680"
  },
  {
    "text": "pretty cool I mean I think it's very interesting that you've even included apis like the adapter what's it called",
    "start": "2113680",
    "end": "2119640"
  },
  {
    "text": "The Entity adap create entity entity adapter yeah like can you tell us about that one like what what is that meant to",
    "start": "2119640",
    "end": "2126839"
  },
  {
    "text": "what problem is that solving so after writing the Redux FAQ in the spring of 2016 I followed that with a",
    "start": "2126839",
    "end": "2133880"
  },
  {
    "text": "recipes section called structuring reducers which gives some guidelines on things like like why do we split up",
    "start": "2133880",
    "end": "2141280"
  },
  {
    "text": "reducer logic into multiple functions what are some ways that you can organize that reducer logic and one of the",
    "start": "2141280",
    "end": "2147720"
  },
  {
    "text": "patterns that I'd seen being used just in the first year of redux's existence was this idea of normalizing your state",
    "start": "2147720",
    "end": "2155480"
  },
  {
    "text": "which generally has two aspects of it one is that you don't want to have duplicate copies of data being kept in",
    "start": "2155480",
    "end": "2163240"
  },
  {
    "text": "the store if we go back to that blogging example so we've got users posts and",
    "start": "2163240",
    "end": "2168480"
  },
  {
    "text": "comments every post probably has the user who created it and if we fetch that",
    "start": "2168480",
    "end": "2173839"
  },
  {
    "text": "data from the server every post object might have a separate copy of the user's",
    "start": "2173839",
    "end": "2179599"
  },
  {
    "text": "object nested inside we don't want to store you know 50 copies of the user",
    "start": "2179599",
    "end": "2185599"
  },
  {
    "text": "object in the Redux state we just want to have one copy of the object per each",
    "start": "2185599",
    "end": "2192400"
  },
  {
    "text": "user and there's a lot of cases where we want to be able to find a given user a given post a given comment by their ID",
    "start": "2192400",
    "end": "2200839"
  },
  {
    "text": "so normalizing State generally implies that you're going to store things as a lookup table where the keys are the",
    "start": "2200839",
    "end": "2208319"
  },
  {
    "text": "IDS and the values are the items themselves rather than storing them as",
    "start": "2208319",
    "end": "2213720"
  },
  {
    "text": "an array and so I wrote a docs page called normalizing shape that describes",
    "start": "2213720",
    "end": "2219200"
  },
  {
    "text": "what this pattern is and specifically suggests it as a good idea despite that we never included",
    "start": "2219200",
    "end": "2226200"
  },
  {
    "text": "anything in the Redux Library itself that ever helped you with the process of",
    "start": "2226200",
    "end": "2232520"
  },
  {
    "text": "normalizing State in any way there's a very popular Library that's been used with Redux called normalizer which I",
    "start": "2232520",
    "end": "2239359"
  },
  {
    "text": "think Dan either started or helped maintain for a while there's also a library called Redux om which provides",
    "start": "2239359",
    "end": "2247599"
  },
  {
    "text": "it's kind of like a class model like facade over the plane data in your Redux",
    "start": "2247599",
    "end": "2253160"
  },
  {
    "text": "store and I did use that on one of my projects but there was no nothing built into the core Library",
    "start": "2253160",
    "end": "2259520"
  },
  {
    "text": "itself so after we built out the initial apis for Redux toolkit earlier this year",
    "start": "2259520",
    "end": "2265440"
  },
  {
    "text": "I was starting to think about that idea of normalization as a problem space that we ought to supply something to help",
    "start": "2265440",
    "end": "2272240"
  },
  {
    "text": "with and so I was looking over various packages and you know third party libraries that other people had created",
    "start": "2272240",
    "end": "2278280"
  },
  {
    "text": "that help with that in some way and I ran across something that the ngrx store",
    "start": "2278280",
    "end": "2284200"
  },
  {
    "text": "people had created so ngrx is basically a reimplementation of Redux for the",
    "start": "2284200",
    "end": "2290119"
  },
  {
    "text": "angular ecosystem built around the rxjs package and because of that there",
    "start": "2290119",
    "end": "2297319"
  },
  {
    "text": "there's a lot of overlap in the kinds of things that both Redux and ngx do and",
    "start": "2297319",
    "end": "2302720"
  },
  {
    "text": "the ngrx maintainers had created a an add-on called create entity adapter",
    "start": "2302720",
    "end": "2310119"
  },
  {
    "text": "which basically it provides a set of pre-built reducer functions for things",
    "start": "2310119",
    "end": "2317839"
  },
  {
    "text": "like add one add many set all upsert one",
    "start": "2317839",
    "end": "2325240"
  },
  {
    "text": "remove all Etc like you the typical crud type operations you would do on a set of",
    "start": "2325240",
    "end": "2332119"
  },
  {
    "text": "data and I looked at it I'm like you know what this this package only has",
    "start": "2332119",
    "end": "2338079"
  },
  {
    "text": "like one or two references to ngrx at all it's almost Library agnostic is",
    "start": "2338079",
    "end": "2344720"
  },
  {
    "text": "there any way we could like make this reusable so we could start using it with Redux toolkit and I started looking at",
    "start": "2344720",
    "end": "2351400"
  },
  {
    "text": "it and I started playing around with it myself and I ended up actually kind of porting it over and half rewriting it I",
    "start": "2351400",
    "end": "2358520"
  },
  {
    "text": "I added the use of emmer inside um the arguments for their functions were in",
    "start": "2358520",
    "end": "2363720"
  },
  {
    "text": "the update comma State order in instead of State comma update so I switched them",
    "start": "2363720",
    "end": "2370640"
  },
  {
    "text": "around so we could actually use them as reducer functions so ultimately I ended up porting it but none of that would",
    "start": "2370640",
    "end": "2377000"
  },
  {
    "text": "have existed if the ngrx folks hadn't created it in the first place and it's really cool to see that cross-pollination of ideas going back",
    "start": "2377000",
    "end": "2383720"
  },
  {
    "text": "and forth because ngrx was inspired by Redux our create entity adapter was a port of theirs so it allows you to skip",
    "start": "2383720",
    "end": "2392680"
  },
  {
    "text": "having to write reducer logic in a lot of cases for the most kind common kind of update scenarios that you might be",
    "start": "2392680",
    "end": "2400079"
  },
  {
    "text": "dealing with when dealing with a collection of some items and you can either use them as the entire reducer",
    "start": "2400079",
    "end": "2407560"
  },
  {
    "text": "function for a given action type or you can use them as helpers within a larger",
    "start": "2407560",
    "end": "2413240"
  },
  {
    "text": "reducer function as part of the logic that you're writing yeah no that that I mean so I love how like you're just like",
    "start": "2413240",
    "end": "2420960"
  },
  {
    "text": "this Uber nerd about like everything uh Mark it's awesome um but no so so",
    "start": "2420960",
    "end": "2429000"
  },
  {
    "text": "there's so many interesting points there just um one is a really good segue into what we're going to get into next which is really like not only the ecosystem",
    "start": "2429000",
    "end": "2436240"
  },
  {
    "text": "but more specifically like State Management as a whole inside of front-end applications and like the",
    "start": "2436240",
    "end": "2442200"
  },
  {
    "text": "age-old debate of like when to use what right local state versus application",
    "start": "2442200",
    "end": "2447760"
  },
  {
    "text": "State vers you know and um then there's the whole data management and fetching and Apollo client and like there's so",
    "start": "2447760",
    "end": "2454760"
  },
  {
    "text": "many kind of I would say um new things in the ecosystem uh specifically",
    "start": "2454760",
    "end": "2460880"
  },
  {
    "text": "even just react right react has some interesting new apis with like reducer uh like the reducer hook and it's just",
    "start": "2460880",
    "end": "2468440"
  },
  {
    "text": "very cool stuff so um we'll get into that next but just really quickly I I wanted to set say that one of the things",
    "start": "2468440",
    "end": "2475359"
  },
  {
    "text": "that a lot of people complain about so we talked about like the three reasons being okay uh configuring a Redux store",
    "start": "2475359",
    "end": "2481319"
  },
  {
    "text": "is too complicated um the second thing being I have to add a lot of Redux packages to get Redux to do anything",
    "start": "2481319",
    "end": "2487760"
  },
  {
    "text": "useful and the third complaint being Redux requires too much boiler like too much boiler plate code I would say all",
    "start": "2487760",
    "end": "2493640"
  },
  {
    "text": "of those things speak to my nerd heart in the sense that like I feel very attacked when I read that um because for",
    "start": "2493640",
    "end": "2499920"
  },
  {
    "text": "me it's like I I just love the open architecture of Redux right the like Linux it like the fact that it stood",
    "start": "2499920",
    "end": "2506920"
  },
  {
    "text": "this long and is still relevant it just goes to show it's the open architecture that and the clean architecture that it",
    "start": "2506920",
    "end": "2513319"
  },
  {
    "text": "has that uses plugins Etc like that's why it's stood the test of time and you know for me like the most fun",
    "start": "2513319",
    "end": "2521240"
  },
  {
    "text": "part of setting up any new project when I had when I um set up my Redux stores and everything it's it's it's it's",
    "start": "2521240",
    "end": "2526440"
  },
  {
    "text": "adding all of those packages and and for me like I love the fact that I know exactly what's going into Redux every",
    "start": "2526440",
    "end": "2533079"
  },
  {
    "text": "time I configure my applications like depending on what it needs it's a little different you know and one size",
    "start": "2533079",
    "end": "2539359"
  },
  {
    "text": "definitely never fits all right and I I get that people have you know okay",
    "start": "2539359",
    "end": "2544440"
  },
  {
    "text": "there's this Baseline of packages that everybody always wants so just let's just ship Redux toolkit with with it but",
    "start": "2544440",
    "end": "2550640"
  },
  {
    "text": "I have to say like I do like there is a nice Beauty to just building your own ecosystem you know very much like",
    "start": "2550640",
    "end": "2556920"
  },
  {
    "text": "Minecraft or very much like node.js right where you're just importing all of your modules because you want them and",
    "start": "2556920",
    "end": "2564119"
  },
  {
    "text": "you you know exactly what's going into your into your lasagna right like yeah so you know the lasagna factors is yeah",
    "start": "2564119",
    "end": "2571640"
  },
  {
    "text": "the one that I'm sad about losing but you can still add things with Red's tool kit yep yeah it ites doesn't take",
    "start": "2571640",
    "end": "2577760"
  },
  {
    "text": "anything away in terms of the ability of how you can configure your store you're",
    "start": "2577760",
    "end": "2583000"
  },
  {
    "text": "still saying here's the reducer that I want it adds some middleware by default",
    "start": "2583000",
    "end": "2588079"
  },
  {
    "text": "but you can choose to insert additional middleware or just drop the defaults and",
    "start": "2588079",
    "end": "2594839"
  },
  {
    "text": "say exactly here's here's exactly the ones that I want you can still add store enhancers various kinds so it's",
    "start": "2594839",
    "end": "2603599"
  },
  {
    "text": "everything you could do with create store already but it's actually got an easier API",
    "start": "2603599",
    "end": "2611240"
  },
  {
    "text": "because you know create store takes three positional arguments of the reducer the initial State and The One",
    "start": "2611240",
    "end": "2617720"
  },
  {
    "text": "and Only Store enhancer which means that you are responsible for combining",
    "start": "2617720",
    "end": "2623359"
  },
  {
    "text": "together say apply middleware and Dev tools enhancer into a single composed",
    "start": "2623359",
    "end": "2629280"
  },
  {
    "text": "enhancer yourself and passing them positionally whereas configure store has an",
    "start": "2629280",
    "end": "2635559"
  },
  {
    "text": "object-based options argument and you say here's the reducer",
    "start": "2635559",
    "end": "2641240"
  },
  {
    "text": "here's an array of middleware here's an array of enhancers here's an option",
    "start": "2641240",
    "end": "2646800"
  },
  {
    "text": "straight up front for turn on the dev tools yes or no and even that right",
    "start": "2646800",
    "end": "2651839"
  },
  {
    "text": "there makes it easier to see what's going on with how you set it up yeah no",
    "start": "2651839",
    "end": "2656920"
  },
  {
    "text": "absolutely well ladies and gentlemen Redux definitely not dead yet and we're going to hear a lot more about when to",
    "start": "2656920",
    "end": "2664760"
  },
  {
    "text": "use what and why uh in the next section [Music]",
    "start": "2664760",
    "end": "2676079"
  },
  {
    "text": "what's up party people I want to introduce AWS amplify as a new sponsor here at JS party amplify is a suite of",
    "start": "2676079",
    "end": "2683440"
  },
  {
    "text": "tools and services that enable developers to build full stack serverless and cloud-based web and mobile apps using their framework and",
    "start": "2683440",
    "end": "2689800"
  },
  {
    "text": "Tech of choice amplify is built to make front Ender successful because you can use your existing skill set to build",
    "start": "2689800",
    "end": "2695559"
  },
  {
    "text": "full stack apps that in the past would require deep knowledge around backend devops and scalable infrastructure",
    "start": "2695559",
    "end": "2702200"
  },
  {
    "text": "amplify simplifies all of that amplify gives you easy access to hosting authentication manage graphql serverless",
    "start": "2702200",
    "end": "2709880"
  },
  {
    "text": "functions apis machine learning chat Bots and storage for files like images videos and PDFs check the link in the",
    "start": "2709880",
    "end": "2716559"
  },
  {
    "text": "show Nots for details or head to AWS amplified. info JSP party again AWS",
    "start": "2716559",
    "end": "2724640"
  },
  {
    "text": "[Music]",
    "start": "2726000",
    "end": "2737209"
  },
  {
    "text": "so in the spirit of making your own lasagna maybe you follow a recipe but the stuff that AEL was talking about",
    "start": "2738119",
    "end": "2743319"
  },
  {
    "text": "where you know she's a Redux junkie and she wants to do it the way that she does it and she loves to twiddle the bits and",
    "start": "2743319",
    "end": "2749359"
  },
  {
    "text": "configure it just so is it advisable Mark to use Redux toolcut in a recipe",
    "start": "2749359",
    "end": "2755280"
  },
  {
    "text": "style reference so like what I used to to do back in the day was with HTML 5 boilerplate not sure if you guys remember that awesome project from Paul",
    "start": "2755280",
    "end": "2761800"
  },
  {
    "text": "Irish and the gang is I would never actually use the boilerplate code I would generate the boilerplate code and",
    "start": "2761800",
    "end": "2768280"
  },
  {
    "text": "then I would stare at it as I wrote my own and just picked and choosed what I liked and what I thought was good I just",
    "start": "2768280",
    "end": "2774200"
  },
  {
    "text": "discarded the rest could you use this project that way and not actually install it itself but just use Redux and",
    "start": "2774200",
    "end": "2781680"
  },
  {
    "text": "maybe pick and choose and use it as like a best practi guide but not the code or",
    "start": "2781680",
    "end": "2787119"
  },
  {
    "text": "is it better just to use the code and go from there so Redux toolkit is a set of",
    "start": "2787119",
    "end": "2794040"
  },
  {
    "text": "distinct API functions right um each each one for a different purpose configure store create action reducer",
    "start": "2794040",
    "end": "2801760"
  },
  {
    "text": "slice uh create async thunk and create entity entity adapter um as well",
    "start": "2801760",
    "end": "2809040"
  },
  {
    "text": "as including the reselect create selector API out of the box and we use",
    "start": "2809040",
    "end": "2816280"
  },
  {
    "text": "it with create entity adapter and we certainly suggest that you should be",
    "start": "2816280",
    "end": "2821720"
  },
  {
    "text": "using all of them as the default approaches in your Redux application but",
    "start": "2821720",
    "end": "2827440"
  },
  {
    "text": "they are all pick and choose your own adventure okay so certainly there's a lot of benefit from using Create store",
    "start": "2827440",
    "end": "2834119"
  },
  {
    "text": "or configure store to set up your store catch accidental mutations Etc um and I",
    "start": "2834119",
    "end": "2840160"
  },
  {
    "text": "I personally would say that should be the first thing you should do on when either setting up a new Redux project or",
    "start": "2840160",
    "end": "2846920"
  },
  {
    "text": "for starting to migrate an existing one but nothing says you have to uh and you",
    "start": "2846920",
    "end": "2851960"
  },
  {
    "text": "can really migrate an existing app to Redux toolkit very incrementally so say",
    "start": "2851960",
    "end": "2857200"
  },
  {
    "text": "you've got a large existing Redux app and you want to start using a Redux toolkit so you swap out your store setup",
    "start": "2857200",
    "end": "2864680"
  },
  {
    "text": "code for configure store once you pick a reducer and the associated action types",
    "start": "2864680",
    "end": "2871960"
  },
  {
    "text": "you replace them with a call to create slice you swap out hooking up the reducer function and dispatching those",
    "start": "2871960",
    "end": "2878240"
  },
  {
    "text": "actions all the rest of the existing code works just fine as is and then you",
    "start": "2878240",
    "end": "2884040"
  },
  {
    "text": "just keep migrating one reducer and its related actions at a time well actually",
    "start": "2884040",
    "end": "2889559"
  },
  {
    "text": "Mark that brings me to a question like is there a diff out there that is like viewable to the public where it's like",
    "start": "2889559",
    "end": "2895359"
  },
  {
    "text": "here's an actual app that used Redux and here's the commit diff to like use Redux",
    "start": "2895359",
    "end": "2901240"
  },
  {
    "text": "toolkit and like here's all the like that be awesome plus here's all the negative like you know lines of code",
    "start": "2901240",
    "end": "2907000"
  },
  {
    "text": "removed or whatever I'm just curious is that something that's available somewhere on the interwebs so in fact when I wrote a set",
    "start": "2907000",
    "end": "2914319"
  },
  {
    "text": "of tutorials for the Redux tool kit.org or J.J s.org docs I actually did exactly",
    "start": "2914319",
    "end": "2921559"
  },
  {
    "text": "that with what I dubbed the intermediate tutorial so it takes the standard Redux",
    "start": "2921559",
    "end": "2927119"
  },
  {
    "text": "to-do app with react example that has you know your object spread operators",
    "start": "2927119",
    "end": "2932440"
  },
  {
    "text": "and the reducers and stuff and it shows how to incrementally migrate it over to",
    "start": "2932440",
    "end": "2937839"
  },
  {
    "text": "use Redux toolkit now granted this is not a large app and so it's not there's going to be huge huge diffs but it does",
    "start": "2937839",
    "end": "2945520"
  },
  {
    "text": "show how to migrate and in fact I did set it up in a way that there is an example repo and I I literally did link",
    "start": "2945520",
    "end": "2952040"
  },
  {
    "text": "to specific commits throughout the tutorial demonstrating the step-by-step process of migrating over nice that's",
    "start": "2952040",
    "end": "2959160"
  },
  {
    "text": "awesome we'll have to link that in the show notes that sounds great and the reason why I asked that is because I think you know I I I feel like as much",
    "start": "2959160",
    "end": "2966559"
  },
  {
    "text": "as is like I I love tutorials that are like very granular and like you know kind of go through things step by step",
    "start": "2966559",
    "end": "2973119"
  },
  {
    "text": "but I think when developers are learning something new from something old right that like mental map that they need to",
    "start": "2973119",
    "end": "2979640"
  },
  {
    "text": "do um it's just so much nicer to look at the diffs you know in like a real project like here's like how it worked",
    "start": "2979640",
    "end": "2986200"
  },
  {
    "text": "here and now here's the diff you know and then I think it's just much easier to kind of digest that information so we'll definitely have to have to link",
    "start": "2986200",
    "end": "2992119"
  },
  {
    "text": "that in the show notes one other thought on that topic the Redux to it docks are currently written under the especially",
    "start": "2992119",
    "end": "2998799"
  },
  {
    "text": "the tutorials are written under the assumption that you do already know what Redux is how to and how to write that",
    "start": "2998799",
    "end": "3005400"
  },
  {
    "text": "code by hand but I'm actually working on changing that assumption in general you",
    "start": "3005400",
    "end": "3012880"
  },
  {
    "text": "we we now recommend that people use Redux toolkit as the default Syntax for",
    "start": "3012880",
    "end": "3018119"
  },
  {
    "text": "writing Redux code and so along with that a lot of people have have noted",
    "start": "3018119",
    "end": "3024160"
  },
  {
    "text": "that the core Redux documentation like if you look at the existing tutorial sequence it's like here's a to-do app",
    "start": "3024160",
    "end": "3030880"
  },
  {
    "text": "here's a Reddit app go have fun bye and there's not really any good realworld",
    "start": "3030880",
    "end": "3036319"
  },
  {
    "text": "examples in the docs themselves so I actually spent the first half of this",
    "start": "3036319",
    "end": "3041559"
  },
  {
    "text": "year working on a brand new tutorial sequence for the Redux docs that I've",
    "start": "3041559",
    "end": "3046599"
  },
  {
    "text": "dubbed the Redux Essentials tutorial and it has a few different goals uh one is",
    "start": "3046599",
    "end": "3053559"
  },
  {
    "text": "that it is a it is more focused on a top down here is the right way to use it",
    "start": "3053559",
    "end": "3061799"
  },
  {
    "text": "approach to learning Redux whereas the existing tutorial sequence is bottom up",
    "start": "3061799",
    "end": "3067160"
  },
  {
    "text": "kind of here's how it works another is that it does teach Redux toolkit and the",
    "start": "3067160",
    "end": "3072599"
  },
  {
    "text": "react Redux hooks API as the default standard way to write Redux",
    "start": "3072599",
    "end": "3079040"
  },
  {
    "text": "code the demo application that it builds is a small social media type app that",
    "start": "3079040",
    "end": "3085160"
  },
  {
    "text": "demonstrates some crud type behavior and it also has a a good amount of",
    "start": "3085160",
    "end": "3091640"
  },
  {
    "text": "explanation for like why does redex exist when does it make sense to use it",
    "start": "3091640",
    "end": "3097480"
  },
  {
    "text": "and so like it's the intent is that someone could read through that and start building some kind of a meaningful",
    "start": "3097480",
    "end": "3104040"
  },
  {
    "text": "app using Redux toolkit without necessarily knowing all the details of what is actually going on behind the",
    "start": "3104040",
    "end": "3110799"
  },
  {
    "text": "scenes now Redux toolkit certainly does work best if you understand how to write",
    "start": "3110799",
    "end": "3117040"
  },
  {
    "text": "that code by hand so that you know what those abstractions are doing for you but",
    "start": "3117040",
    "end": "3122880"
  },
  {
    "text": "my goal was that you should be able to use it without necessarily knowing what's going on under under the hood",
    "start": "3122880",
    "end": "3128680"
  },
  {
    "text": "yeah I mean that that's like our favorite thing right as JavaScript developers we just it just works we",
    "start": "3128680",
    "end": "3133839"
  },
  {
    "text": "don't need to know how let's just keep moving I got tickets to close I got users to users to make happy you know",
    "start": "3133839",
    "end": "3141760"
  },
  {
    "text": "just get out of our way like yeah so that's really great so Mark I want to get on get back like the age old problem",
    "start": "3141760",
    "end": "3148040"
  },
  {
    "text": "again of of this kind of this this this Paradigm came out right application State",
    "start": "3148040",
    "end": "3154680"
  },
  {
    "text": "Management what lives where now we have react now we have Apollo client you know",
    "start": "3154680",
    "end": "3160240"
  },
  {
    "text": "we have uh you know just all these just I think competing uh things which really",
    "start": "3160240",
    "end": "3165839"
  },
  {
    "text": "make it very difficult for I would say the average person who's coming in uh to a new project who needs to make some",
    "start": "3165839",
    "end": "3171880"
  },
  {
    "text": "decisions like there's a lot of research and contextual knowledge and there's just like there's a manual here um of",
    "start": "3171880",
    "end": "3178599"
  },
  {
    "text": "like you know what to do when and what to use when and something that's like",
    "start": "3178599",
    "end": "3183640"
  },
  {
    "text": "objective because in the sense that I think it should be objective because it's not about trying to get people to",
    "start": "3183640",
    "end": "3188880"
  },
  {
    "text": "use this tool versus that tool it's about making sure that you're using the right tool for the problem that you're",
    "start": "3188880",
    "end": "3194040"
  },
  {
    "text": "trying to solve right and ultimately that's what it comes down that's what it always comes down to like quite frankly as much as I love Redux if I find",
    "start": "3194040",
    "end": "3200559"
  },
  {
    "text": "another tool that meets my needs in a better way like by all means I'll abandon you know but that day is Yet to",
    "start": "3200559",
    "end": "3206760"
  },
  {
    "text": "Come careful Mark she's going to jump to come that day is yet to come people you",
    "start": "3206760",
    "end": "3212960"
  },
  {
    "text": "know but when it does it'll be exciting and I will Embrace that with open arms",
    "start": "3212960",
    "end": "3218119"
  },
  {
    "text": "because quite frankly like the web is is a very unforgiving place right like you",
    "start": "3218119",
    "end": "3223720"
  },
  {
    "text": "you go like it leaves no person beh like no person it leaves maybe it leaves many",
    "start": "3223720",
    "end": "3228960"
  },
  {
    "text": "people behind right like if you need to adopt and you need to change and be and",
    "start": "3228960",
    "end": "3234520"
  },
  {
    "text": "adopt yeah to kind of stay current yeah new tools sure did you say mo tools or I said I said Mo tools oh boy yeah",
    "start": "3234520",
    "end": "3243559"
  },
  {
    "text": "it's funny that M tools rhymes with new new tools right that's ironic any yeah",
    "start": "3243559",
    "end": "3249200"
  },
  {
    "text": "that is ironic um but anyways so so can we talk about that real quick because really I mean we could do a whole episode on this and maybe we should in",
    "start": "3249200",
    "end": "3255480"
  },
  {
    "text": "the future but really like what are what are some kind of guiding principles because I have heard you say you know",
    "start": "3255480",
    "end": "3263920"
  },
  {
    "text": "you do not need to use rudu if you have YZ right like for example if you already have an an app that does that uses",
    "start": "3263920",
    "end": "3270880"
  },
  {
    "text": "Apollo for data fetching you don't need to bring in Redux to do data fetching you know and people's code is always in",
    "start": "3270880",
    "end": "3276680"
  },
  {
    "text": "like various States right like so I you know they're always adopting tools at various stages in their application life",
    "start": "3276680",
    "end": "3282280"
  },
  {
    "text": "cycle and so there's just yeah anyways I'm I'm I'm I'm done ranting I'd love to hear your thoughts sure so I I am a a",
    "start": "3282280",
    "end": "3292240"
  },
  {
    "text": "huge proponent of of a couple specific ideas one is that you should always try",
    "start": "3292240",
    "end": "3299559"
  },
  {
    "text": "to understand what problems a specific tool is trying to solve and part of that",
    "start": "3299559",
    "end": "3307319"
  },
  {
    "text": "is what is the time and the context and the reason why this tool was even",
    "start": "3307319",
    "end": "3313839"
  },
  {
    "text": "invented in the first place and another is that you need to understand exactly",
    "start": "3313839",
    "end": "3319760"
  },
  {
    "text": "what problems you are trying to solve in your own application right now and pick",
    "start": "3319760",
    "end": "3325240"
  },
  {
    "text": "the tools that solve your problem best not because someone else said you should",
    "start": "3325240",
    "end": "3330599"
  },
  {
    "text": "use them not because they're popular but because this is what works best for me",
    "start": "3330599",
    "end": "3336319"
  },
  {
    "text": "in this particular situation so in the case of Redux it was",
    "start": "3336319",
    "end": "3341359"
  },
  {
    "text": "invented as an implementation of the fux architecture which was in turn created",
    "start": "3341359",
    "end": "3347839"
  },
  {
    "text": "to deal with limitations people had found in event trigger based State",
    "start": "3347839",
    "end": "3355119"
  },
  {
    "text": "Management like backb specifically so I set user. first name it triggers a quote name you know change",
    "start": "3355119",
    "end": "3362920"
  },
  {
    "text": "first name event some other codes listening to that it triggers another event next thing you know you're like 15",
    "start": "3362920",
    "end": "3369119"
  },
  {
    "text": "events down one big synchronous call stack and you have no idea why this happened in the first place that's what",
    "start": "3369119",
    "end": "3375839"
  },
  {
    "text": "flux was invented to solve and Redux basically perfected that particular",
    "start": "3375839",
    "end": "3381760"
  },
  {
    "text": "approach and that was the problem people were trying to solve in 2015",
    "start": "3381760",
    "end": "3386960"
  },
  {
    "text": "now it also happens that because react Redux used the old style react context",
    "start": "3386960",
    "end": "3394760"
  },
  {
    "text": "API from its beginning using Redux in a react app",
    "start": "3394760",
    "end": "3399920"
  },
  {
    "text": "also kind of happened to somewhat accidentally solve another common problem which is that a many different",
    "start": "3399920",
    "end": "3407200"
  },
  {
    "text": "parts of my app need to use the same state at the same time and I would",
    "start": "3407200",
    "end": "3412559"
  },
  {
    "text": "normally have to lift that state up maybe all the way to the to the root app",
    "start": "3412559",
    "end": "3418400"
  },
  {
    "text": "component in order for many components to share the data but if I do that I would then have to prop drill and pass",
    "start": "3418400",
    "end": "3426480"
  },
  {
    "text": "that data as props through every level of the component Tre which is a royal pain and so using Redux with react let",
    "start": "3426480",
    "end": "3434760"
  },
  {
    "text": "people sidestep that issue and that is a reason why many people picked Redux in",
    "start": "3434760",
    "end": "3442160"
  },
  {
    "text": "15 16 17 well with react 15.3 react came out",
    "start": "3442160",
    "end": "3448079"
  },
  {
    "text": "with a new improved context API which unlike the old one was recommended for",
    "start": "3448079",
    "end": "3453640"
  },
  {
    "text": "production usage from the day it came out and the only purpose of context is",
    "start": "3453640",
    "end": "3459400"
  },
  {
    "text": "to act as a dependency injection mechanism scoped to some portion of your",
    "start": "3459400",
    "end": "3466680"
  },
  {
    "text": "subtree where you say here is a value and any portion of that sub component",
    "start": "3466680",
    "end": "3472920"
  },
  {
    "text": "subtree can ask to read the value that's literally all it does and so if the only thing you needed",
    "start": "3472920",
    "end": "3480400"
  },
  {
    "text": "to do with Redux was avoid passing data as props through 15 levels your of your",
    "start": "3480400",
    "end": "3486280"
  },
  {
    "text": "components well that's literally what context was invented to do and so if that's all you need then context you",
    "start": "3486280",
    "end": "3494160"
  },
  {
    "text": "don't have to add Redux just to get that capability use context instead now I I'll go off on a specific",
    "start": "3494160",
    "end": "3502240"
  },
  {
    "text": "point here I am constantly seeing people compare should I I use context or should",
    "start": "3502240",
    "end": "3507680"
  },
  {
    "text": "I use Redux and they seem to think that context itself is a state management",
    "start": "3507680",
    "end": "3514960"
  },
  {
    "text": "system it's not it's a dependency injection mechanism and you can put",
    "start": "3514960",
    "end": "3520520"
  },
  {
    "text": "whatever value you want in context and most often you are the one managing that",
    "start": "3520520",
    "end": "3526799"
  },
  {
    "text": "state in a react component with the used State hook or the used reducer hook and",
    "start": "3526799",
    "end": "3532160"
  },
  {
    "text": "you're the one deciding where the state lives hand how to update it and then",
    "start": "3532160",
    "end": "3538520"
  },
  {
    "text": "putting the value into context for distribution so yeah use reducer plus use context together kind of make up a",
    "start": "3538520",
    "end": "3547160"
  },
  {
    "text": "state management system and that one is more equivalent to what Redux does with",
    "start": "3547160",
    "end": "3553240"
  },
  {
    "text": "react but context by itself is not a state management system and on the flip",
    "start": "3553240",
    "end": "3558920"
  },
  {
    "text": "side almost everyone is needing to Cache some server state in their apps you know",
    "start": "3558920",
    "end": "3564559"
  },
  {
    "text": "let's let's go fetch some data on our users and our posts and our comments and then display them and traditionally you",
    "start": "3564559",
    "end": "3571440"
  },
  {
    "text": "know that's that's been done by like rest apis and whatnot but you know these days we have graphql and while not",
    "start": "3571440",
    "end": "3579079"
  },
  {
    "text": "everyone is using graphql a lot of people are and while graphql by itself is just a data",
    "start": "3579079",
    "end": "3586000"
  },
  {
    "text": "transfer protocol here's how I format my request here's how I format my response",
    "start": "3586000",
    "end": "3591039"
  },
  {
    "text": "the assumption is you're probably using a sophisticated client like Apollo client to manage that data an Apollo",
    "start": "3591039",
    "end": "3598480"
  },
  {
    "text": "client has a lot of features built in like handling a normalized cache of all",
    "start": "3598480",
    "end": "3606240"
  },
  {
    "text": "the data and if I ask for the same thing it's already there and it gives you this",
    "start": "3606240",
    "end": "3611640"
  },
  {
    "text": "nice little interface where it's just like use Query and it gives you back data is loading error in your component",
    "start": "3611640",
    "end": "3620200"
  },
  {
    "text": "so you can decide what to render and so similarly if the only thing you were",
    "start": "3620200",
    "end": "3626079"
  },
  {
    "text": "doing with Redux was storing cast data from the server and you choose to use graphql and",
    "start": "3626079",
    "end": "3632920"
  },
  {
    "text": "you choose to use Apollo client then you've just fulfilled the use case that you were previously choosing to use",
    "start": "3632920",
    "end": "3639640"
  },
  {
    "text": "Redux for and for that situation you don't need Redux similarly uh there's",
    "start": "3639640",
    "end": "3646640"
  },
  {
    "text": "there's a new a couple new libraries um s SWR and react query which do the same",
    "start": "3646640",
    "end": "3651960"
  },
  {
    "text": "kind of thing but focused around more of a rest API it's just here's my UR fetch it give me back data is loading",
    "start": "3651960",
    "end": "3660039"
  },
  {
    "text": "error and they cash the stuff officially and can kind of share it some and again if that's the only thing you were doing",
    "start": "3660039",
    "end": "3666799"
  },
  {
    "text": "with Redux and you choose to use these other tools then they replace that use case and you don't really need Redux at",
    "start": "3666799",
    "end": "3674200"
  },
  {
    "text": "that point on the other hand while you can do some limited bits of client State",
    "start": "3674200",
    "end": "3681160"
  },
  {
    "text": "Management with Apollo or maybe with react query that's really not the use",
    "start": "3681160",
    "end": "3686559"
  },
  {
    "text": "cases they were meant for so the way I would distinguish it is Redux is a very",
    "start": "3686559",
    "end": "3692200"
  },
  {
    "text": "generic State Management tool that can be used for a broad array of use cases",
    "start": "3692200",
    "end": "3697400"
  },
  {
    "text": "Ser you caching state from a server UI State other complex data management on",
    "start": "3697400",
    "end": "3703119"
  },
  {
    "text": "the client but it's probably not going to be the best or most efficient tool at",
    "start": "3703119",
    "end": "3708839"
  },
  {
    "text": "any of those use cases other tools like react query or Apollo are much more",
    "start": "3708839",
    "end": "3714440"
  },
  {
    "text": "specialized for these specific case of data fetching so you can do many things",
    "start": "3714440",
    "end": "3719920"
  },
  {
    "text": "with Redux it might not be quite the best at all of them but you can do lots of different things you can do server",
    "start": "3719920",
    "end": "3726279"
  },
  {
    "text": "cach caching with Apollo and react query they're going to be very good at those but you can't do some of these other",
    "start": "3726279",
    "end": "3732799"
  },
  {
    "text": "things so it's really a question of what specific problems are you trying to",
    "start": "3732799",
    "end": "3738200"
  },
  {
    "text": "solve what problems do these tools solve and where's the overlap between those",
    "start": "3738200",
    "end": "3745000"
  },
  {
    "text": "yeah I know that makes perfect sense I mean we this is such a deep topic really it's it's it's fascinating and it's",
    "start": "3745000",
    "end": "3750680"
  },
  {
    "text": "really nice to see how like the ecosystem is also evolved I think to kind of specialize in areas of State",
    "start": "3750680",
    "end": "3756680"
  },
  {
    "text": "Management I think which is kind of also nice but I I I would say that I think we're all kind of standing on the",
    "start": "3756680",
    "end": "3762079"
  },
  {
    "text": "shoulders of giants and I think Redux and the patterns from that flux architecture in general have really",
    "start": "3762079",
    "end": "3767839"
  },
  {
    "text": "paved the way for just serer State Management overall you know so I'd say um it's just very exciting it's very",
    "start": "3767839",
    "end": "3775279"
  },
  {
    "text": "exciting to see where we how far we've come even just the existence of the Redux Dev",
    "start": "3775279",
    "end": "3780760"
  },
  {
    "text": "tools basically is table Stakes at this point like if you're introducing a new library you either have to have your own",
    "start": "3780760",
    "end": "3787359"
  },
  {
    "text": "Dev tools or find a way to integrate your library with the Redux Dev tools as a",
    "start": "3787359",
    "end": "3793079"
  },
  {
    "text": "Baseline and and I've seen lots of libraries try to do that yeah yeah know that I mean what is it Jared raise the",
    "start": "3793079",
    "end": "3799440"
  },
  {
    "text": "tide for all boats am I saying it correctly Rising tide raises All Ships the rising yes thank you there we go",
    "start": "3799440",
    "end": "3805960"
  },
  {
    "text": "much better yeah so thank you so much for your time yeah absolutely Mark you have definitely I think ra rised the",
    "start": "3805960",
    "end": "3812760"
  },
  {
    "text": "tide I don't know I don't know how you rise the tide but rised we we English good we English good around here that's",
    "start": "3812760",
    "end": "3818880"
  },
  {
    "text": "why we podcast um we're thankful to you for coming on JS party Sharon you have",
    "start": "3818880",
    "end": "3824400"
  },
  {
    "text": "an amazing amount of depth of knowledge about not just Redux but application architecture thanks so much for sharing",
    "start": "3824400",
    "end": "3830680"
  },
  {
    "text": "it with us and for all the work you do the often thankless work of answering people's questions on the internet we're",
    "start": "3830680",
    "end": "3835880"
  },
  {
    "text": "here to thank you on their behalf uh that is super cool what's the best way folks can hook up with you and maybe tap",
    "start": "3835880",
    "end": "3841200"
  },
  {
    "text": "your wisdom and maybe say thanks for all the work you do on Redux and in the community sure uh so I my blog is at",
    "start": "3841200",
    "end": "3849520"
  },
  {
    "text": "blog. isqu software.com uh I've got a lot of react",
    "start": "3849520",
    "end": "3855319"
  },
  {
    "text": "and Redux and some other stuff on there as well probably my most popular recent",
    "start": "3855319",
    "end": "3861119"
  },
  {
    "text": "post was a 6,000 word tretis on how react",
    "start": "3861119",
    "end": "3867880"
  },
  {
    "text": "rendering Behavior works like when does react render what stops react from",
    "start": "3867880",
    "end": "3873760"
  },
  {
    "text": "rendering how do you optimize it how do context and react Redux interact with",
    "start": "3873760",
    "end": "3879319"
  },
  {
    "text": "that uh I I also just put up a couple new posts in the last couple days with some bits of coding career advice on",
    "start": "3879319",
    "end": "3886920"
  },
  {
    "text": "things that I've found useful in my career as a developer uh one post was on the value of keeping a daily work",
    "start": "3886920",
    "end": "3893039"
  },
  {
    "text": "journal and another was some tips for how to correctly evaluate thirdparty libraries and software tools so lots and",
    "start": "3893039",
    "end": "3900760"
  },
  {
    "text": "lots of writing on my blog uh I'm pretty much active on Twitter at as Mary uh",
    "start": "3900760",
    "end": "3907760"
  },
  {
    "text": "also in the reactiflux Discord chat channels same handle I'm I'm generally",
    "start": "3907760",
    "end": "3912960"
  },
  {
    "text": "either at Asar e or Mark Ericson in various places on the",
    "start": "3912960",
    "end": "3918839"
  },
  {
    "text": "internet yeah you know Mark I I'm doing a talk for uh at not Compu on dependency",
    "start": "3918839",
    "end": "3924119"
  },
  {
    "text": "management at scale and that's one of the things I'm going to be talking about is the rubrics that I use for when I'm",
    "start": "3924119",
    "end": "3929599"
  },
  {
    "text": "picking packages and so I I I'm now going to add your blog as a as a list of",
    "start": "3929599",
    "end": "3934760"
  },
  {
    "text": "resources for my talk so thanks for that sure thank you absolutely I did",
    "start": "3934760",
    "end": "3940680"
  },
  {
    "text": "find that one a mostly complete guide to react rendering all the links to all the",
    "start": "3940680",
    "end": "3945839"
  },
  {
    "text": "things are in the show notes for your clicking enjoyment thanks so much for listening that's JZ party for this week",
    "start": "3945839",
    "end": "3952279"
  },
  {
    "text": "hey stay tuned next week it's our big front-end Feud game show it's going to be an extravaganza you don't want to",
    "start": "3952279",
    "end": "3958079"
  },
  {
    "text": "miss it comment on this and every episode of",
    "start": "3958079",
    "end": "3963839"
  },
  {
    "text": "JSP party on changel log.com just pop open in your show notes click the discuss on changelog news link and let",
    "start": "3963839",
    "end": "3970839"
  },
  {
    "text": "us know what you think of course you can chat with us in real time during the show as well join for free at chain.com",
    "start": "3970839",
    "end": "3977599"
  },
  {
    "text": "community and hop in the JS party channel of our community slack thanks again to Mark Ericson for joining the",
    "start": "3977599",
    "end": "3984079"
  },
  {
    "text": "show to Amel Hussein for co-hosting with me to break master cylinder on music fastly on bandwidth Leno on hosting and",
    "start": "3984079",
    "end": "3990920"
  },
  {
    "text": "rollar on bugs and thanks to you for listening we appreciate your time that's all for now front and Feud next",
    "start": "3990920",
    "end": "3998070"
  },
  {
    "text": "[Music]",
    "start": "3998070",
    "end": "4014520"
  },
  {
    "text": "week [Music]",
    "start": "4014520",
    "end": "4027880"
  },
  {
    "text": "JavaScript developers love um I would say no code right like in the sense that",
    "start": "4027880",
    "end": "4033359"
  },
  {
    "text": "like less code is good what developer likes more code I I nobody but like",
    "start": "4033359",
    "end": "4040400"
  },
  {
    "text": "sometimes that to the Java folks okay I was waiting for that one sometimes yeah no no some sometimes that a more code is",
    "start": "4040400",
    "end": "4048880"
  },
  {
    "text": "yeah I feel like sometimes more code is like so brevity is the soul of wit but",
    "start": "4048880",
    "end": "4054279"
  },
  {
    "text": "it's not necessarily the soul of readability it's not or maintainability right that's the thing exactly it's",
    "start": "4054279",
    "end": "4061599"
  },
  {
    "text": "really easy to over abstract and I've been guilty of that thank you thank you that's exactly it all right so it' be",
    "start": "4061599",
    "end": "4068520"
  },
  {
    "text": "good to get into that and then obviously some of the some of the superpowers that you've built into every Dex to Kit like the fact that it's supercharged but",
    "start": "4068520",
    "end": "4075119"
  },
  {
    "text": "there's rails like anyways okay love it so a can you resay that uh work on the",
    "start": "4075119",
    "end": "4081960"
  },
  {
    "text": "brevity side tighten it up okay I'll work on the brevity side we'll we'll start the show and I'll just say you",
    "start": "4081960",
    "end": "4088279"
  },
  {
    "text": "know go and then we'll you you open that back up and we'll just go as if it's not",
    "start": "4088279",
    "end": "4093559"
  },
  {
    "text": "we didn't just say it out loud we can just say it on the show okay yeah yeah say it on the show yes all right",
    "start": "4093559",
    "end": "4099560"
  },
  {
    "text": "go I hate almost all code",
    "start": "4099560",
    "end": "4105000"
  }
]