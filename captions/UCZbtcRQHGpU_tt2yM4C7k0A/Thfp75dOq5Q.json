[
  {
    "text": "when money is involved you really want to have the safety net of tests don't you I've had lots of situations never",
    "start": "80",
    "end": "7680"
  },
  {
    "text": "that's impacted billing but lots of situations where I'm so supremely",
    "start": "7680",
    "end": "13080"
  },
  {
    "text": "confident in a little tweak I just make and then I just push it then break something and it's always a big surprise",
    "start": "13080",
    "end": "20119"
  },
  {
    "text": "you know and that's the thing I like about testing is it stops you being surprised so often but I've been kind of",
    "start": "20119",
    "end": "26359"
  },
  {
    "text": "obsessed with testing for ages so if anything I've gone the other way of over testing and I'm sure we'll talk a bit",
    "start": "26359",
    "end": "32119"
  },
  {
    "text": "about that big thanks to our partners Leno fastly and launch Darkly we love Leno",
    "start": "32119",
    "end": "38600"
  },
  {
    "text": "they keep it fast and simple check them out at lin.com changelog our bandwidth is provided by fastly learn more at",
    "start": "38600",
    "end": "45600"
  },
  {
    "text": "fastly.com and get your feature Flags powered by launch darkley get a demo at launch dark.com what's up Gophers our",
    "start": "45600",
    "end": "52600"
  },
  {
    "text": "friends over gravitational made a big transition at the end of 2020 to Rebrand",
    "start": "52600",
    "end": "57960"
  },
  {
    "text": "as teleport and shared a new product announcement to showcase the direction they're taking teleport is operating",
    "start": "57960",
    "end": "63559"
  },
  {
    "text": "from a vision of being able to run and access software anywhere in a secure and compliant manner something they call",
    "start": "63559",
    "end": "70240"
  },
  {
    "text": "environment free Computing with teleport engineering teams can quickly access any resource anywhere using a unified access",
    "start": "70240",
    "end": "78000"
  },
  {
    "text": "plane that consolidates access controls and auditing across all environments infrastructure applications as well as",
    "start": "78000",
    "end": "85040"
  },
  {
    "text": "data teleport server access let you Sate securely into Linux servers and smart",
    "start": "85040",
    "end": "90280"
  },
  {
    "text": "devices with a complete audit Trail teleport kubernetes access let you access kubernetes cluster securely with",
    "start": "90280",
    "end": "96119"
  },
  {
    "text": "complete visibility to access and behavior and finally teleport application access let you access web",
    "start": "96119",
    "end": "102159"
  },
  {
    "text": "apps running behind natat and firewalls with security and compliance try teleport today in the cloud self-hosted",
    "start": "102159",
    "end": "108360"
  },
  {
    "text": "or open source head to go teleport.to learn more and get started again go",
    "start": "108360",
    "end": "115439"
  },
  {
    "text": "teleport.to [Music]",
    "start": "118840",
    "end": "124270"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "135040",
    "end": "141599"
  },
  {
    "text": "from around the go Community follow go time on Twitter and keep up with the polling to find out which unpopular",
    "start": "141599",
    "end": "148040"
  },
  {
    "text": "opinions are actually unpopular and which ones aren't we are at gotime FM",
    "start": "148040",
    "end": "154000"
  },
  {
    "text": "okay let's talk testing here we",
    "start": "154000",
    "end": "158800"
  },
  {
    "text": "[Music]",
    "start": "160740",
    "end": "167619"
  },
  {
    "text": "go welcome to go time today we are going to be talking about testing we've done",
    "start": "168599",
    "end": "175440"
  },
  {
    "text": "episodes before about testing but testing is hard and there are many open questions so we thought we would revisit",
    "start": "175440",
    "end": "181800"
  },
  {
    "text": "the topic I am very excited to be joined by a wonderful panelist summer regulars",
    "start": "181800",
    "end": "187480"
  },
  {
    "text": "and a new guest who I will be introducing shortly so welcome everyone",
    "start": "187480",
    "end": "192760"
  },
  {
    "text": "we have the wonderful Chris Hi how are you hello I'm doing well how are you I'm",
    "start": "192760",
    "end": "199239"
  },
  {
    "text": "very well I'm very apprehensively excited about hosting this episode but I thought it'll be fine because you know",
    "start": "199239",
    "end": "204799"
  },
  {
    "text": "we're just you know swapping Matt out with me and we'll see if anyone can tell the difference speaking of Matt we have",
    "start": "204799",
    "end": "211599"
  },
  {
    "text": "the wonderful Matt ryer who is turning into a panelist today in terms of this episode he is the co-creator of testify",
    "start": "211599",
    "end": "218680"
  },
  {
    "text": "writes tdd go and has recently launched a package called is which is like testify off steroids and Mock and",
    "start": "218680",
    "end": "226159"
  },
  {
    "text": "interface subing code generation tool hello Matt hello how are you I'm good",
    "start": "226159",
    "end": "231959"
  },
  {
    "text": "I'm very excited I'm very happy to hear that cuz I don't have any responsibility you don't have any responsib no I have",
    "start": "231959",
    "end": "238599"
  },
  {
    "text": "all the responsibility it's all on you today so if it goes wrong great exciting and then finally we have John sabados",
    "start": "238599",
    "end": "245799"
  },
  {
    "text": "who is a senior software engineer at the New York Times and a fan of test driven development so hi John he good to be",
    "start": "245799",
    "end": "252799"
  },
  {
    "text": "here do you want to give our lovely listeners a little bit more about you do you want to give a little intro I am a",
    "start": "252799",
    "end": "258239"
  },
  {
    "text": "fairly recent go convert come from the land of java but been slinging go for",
    "start": "258239",
    "end": "264280"
  },
  {
    "text": "well coming up on 2 3 years now that's kind of me you might also see my cat make an appearance here since he's very",
    "start": "264280",
    "end": "271199"
  },
  {
    "text": "helpful like that well we're very very happy to have you on show I'm extra excited given that side note John is",
    "start": "271199",
    "end": "278320"
  },
  {
    "text": "actually on my team so he gets to listen to me be ere excited all the time so we're going to Dive Right In and I'd",
    "start": "278320",
    "end": "284199"
  },
  {
    "text": "love to hear from any of you a time that you regret not having testing in place",
    "start": "284199",
    "end": "291479"
  },
  {
    "text": "and when it really kind of bite you in the butt so there was this one time back at a prior company where we did a lot of",
    "start": "291479",
    "end": "297560"
  },
  {
    "text": "financial transactions and we had routines for doing rebills and at some",
    "start": "297560",
    "end": "302639"
  },
  {
    "text": "point some change got introduced that caused a null pointer exception so it was a production defect and everybody",
    "start": "302639",
    "end": "309160"
  },
  {
    "text": "rushed to fix the issue immediately during the fix the assignment of a",
    "start": "309160",
    "end": "314199"
  },
  {
    "text": "variable got dropped we computed tax properly without an NP but then never actually recorded that result and failed",
    "start": "314199",
    "end": "321560"
  },
  {
    "text": "to charge tax on rebuilds for like a month which if we had had a proper test",
    "start": "321560",
    "end": "326639"
  },
  {
    "text": "in place that would have been good there multiple people were scared for their job when we discovered that Matt Chris",
    "start": "326639",
    "end": "333440"
  },
  {
    "text": "when money is involved you really want to have that the safety net of tests don't you I've had lots of situations",
    "start": "333440",
    "end": "341840"
  },
  {
    "text": "never that's impacted billing but lots of situations where I'm so supremely",
    "start": "341840",
    "end": "348680"
  },
  {
    "text": "confident in a little tweak I just make and then I just push it then breaks something and it's always a big surprise",
    "start": "348680",
    "end": "356680"
  },
  {
    "text": "you know and that's the thing I like about testing is it stops you being surprised so often but I've been kind of",
    "start": "356680",
    "end": "362919"
  },
  {
    "text": "obsessed with testing for ages so if anything I've gone the other way of over testing and I'm sure we'll talk a bit",
    "start": "362919",
    "end": "368919"
  },
  {
    "text": "about that are you Chris any testing nightmares any horror stories I think I'm kind of in the same boat as Matt",
    "start": "368919",
    "end": "374680"
  },
  {
    "text": "where it's more been over testing that's been my problem or I guess the only time I've really been upset about not having",
    "start": "374680",
    "end": "381000"
  },
  {
    "text": "tests is when I've written something and then needed to write tests and I like waited too long and now I have to like",
    "start": "381000",
    "end": "387160"
  },
  {
    "text": "spend 3 days writing tests and it's just super miserable cuz no one really likes",
    "start": "387160",
    "end": "392280"
  },
  {
    "text": "writing test code so I think that's like the times I've most regretted not having testing is when it's now my job to go",
    "start": "392280",
    "end": "398080"
  },
  {
    "text": "wrate a bunch of tests for sure I mean honestly so I have a kind of a starter question for people who are more My",
    "start": "398080",
    "end": "405440"
  },
  {
    "text": "Level kind of newbies Baseline like why is testing important because honestly like I was pottering through go writing",
    "start": "405440",
    "end": "411960"
  },
  {
    "text": "these mini applications loving it and my way of testing was just let me you know run my app does it work great yes",
    "start": "411960",
    "end": "419560"
  },
  {
    "text": "awesome so why is testing important yeah you can manually test things but that takes time and every time you know you",
    "start": "419560",
    "end": "426319"
  },
  {
    "text": "develop new features and whatnot do you want to have to go through and do all the regressions for all the various",
    "start": "426319",
    "end": "431840"
  },
  {
    "text": "previous tests that you've had in place or would it be nice to be able to have a automated tests that cover a lot of",
    "start": "431840",
    "end": "437840"
  },
  {
    "text": "basis of those things and that's never going to be complete and I'm not going to say that you don't ever have to do manual testing because that's important",
    "start": "437840",
    "end": "444240"
  },
  {
    "text": "as well but it helps there now personally I also find Value in testing outside of just assuring that the code's",
    "start": "444240",
    "end": "451199"
  },
  {
    "text": "going to work because you do have to write code in a certain way to for it in order for it to be testable and I've",
    "start": "451199",
    "end": "456800"
  },
  {
    "text": "found that when you start with your test from the get-go it makes it a lot harder to write convoluted code that mixes",
    "start": "456800",
    "end": "463319"
  },
  {
    "text": "responsibilities and Buzz does a bunch of different things it makes it harder to test so a nice side benefit from",
    "start": "463319",
    "end": "468360"
  },
  {
    "text": "writing testable code is you generally end up with more well organized code that does a single thing and does it",
    "start": "468360",
    "end": "474960"
  },
  {
    "text": "well yeah I find the same thing to be true and you know you hear people people talk about test driven development and",
    "start": "474960",
    "end": "481840"
  },
  {
    "text": "one of the arguments against it is that it changes the way you write your programs and in my experience that just",
    "start": "481840",
    "end": "488520"
  },
  {
    "text": "isn't the case like it does change it but usually in a good way usually in a way that you kind of appreciate later",
    "start": "488520",
    "end": "495000"
  },
  {
    "text": "but for me yeah the point is you get to kind of declare what your program is expected to do and then you can run that",
    "start": "495000",
    "end": "502240"
  },
  {
    "text": "automatically but you know there's so many benefits like when you're looking at a package you're going to import a package if it's got good test code you",
    "start": "502240",
    "end": "509520"
  },
  {
    "text": "can see how you're supposed to use that package from the test code so the test",
    "start": "509520",
    "end": "515479"
  },
  {
    "text": "code is really the first user of that code that you'll program so you put",
    "start": "515479",
    "end": "521200"
  },
  {
    "text": "yourself in the mind of the user and I think as software developers anytime you can do that you're going to have good",
    "start": "521200",
    "end": "528279"
  },
  {
    "text": "results it's a good thing to do because ultimately we're writing our programs",
    "start": "528279",
    "end": "534320"
  },
  {
    "text": "for somebody to use and it might be ourselves it might be other people in the team but putting yourself s in the",
    "start": "534320",
    "end": "539640"
  },
  {
    "text": "mind of the user is just kind of pays dividends all the time it's a great way to think about what you're doing I think",
    "start": "539640",
    "end": "545959"
  },
  {
    "text": "from my perspective like it doesn't really make sense to me to build something and then not make sure that it does what you want it to do um like that",
    "start": "545959",
    "end": "553920"
  },
  {
    "text": "seems really silly it's like I'm just going to go build something and like I don't know it doesn't work but that",
    "start": "553920",
    "end": "559079"
  },
  {
    "text": "that's okay we don't need to know if it works and I guess I see testing on like a a few different levels I think it",
    "start": "559079",
    "end": "565519"
  },
  {
    "text": "definitely does it can help you with your design but I think like I've definitely found that it only really",
    "start": "565519",
    "end": "572160"
  },
  {
    "text": "works well for that in like specific types of circumstances like I know what I'm going to build I've gotten into",
    "start": "572160",
    "end": "578079"
  },
  {
    "text": "messes where it's like I wrote too much test code when I didn't know what I was trying to build and now I have all this test code I have to Wrangle with so I",
    "start": "578079",
    "end": "584440"
  },
  {
    "text": "think it can definitely be a sort of double-edged sword in a lot of ways so I think it's like really fundamentally",
    "start": "584440",
    "end": "590240"
  },
  {
    "text": "it's like about making sure that what you write is what you wanted to write and what you implemented is what you wanted to implement I have this kind of",
    "start": "590240",
    "end": "597160"
  },
  {
    "text": "saying that that more relates to design than it relates to testing but I think it kind of falls together that like if",
    "start": "597160",
    "end": "603480"
  },
  {
    "text": "you haven't said what it is you're trying to do then your application is all bugs you don't have features because",
    "start": "603480",
    "end": "609000"
  },
  {
    "text": "bugs are like things that you didn't expect to happen and if you haven't declared what you expect to happen then",
    "start": "609000",
    "end": "615920"
  },
  {
    "text": "everything is stuff you didn't expect to happen declaring what you want to have happen apart from just you know",
    "start": "615920",
    "end": "621519"
  },
  {
    "text": "declaring what you have want to have happen it also helps document the code because I can't count the number of times that I've gone into an old Legacy",
    "start": "621519",
    "end": "627079"
  },
  {
    "text": "piece of code and I've been refactoring or whatever adding something and you come across a thing and you're like wait",
    "start": "627079",
    "end": "632320"
  },
  {
    "text": "is this really doing what the original author intended what is the intent behind this code because it looks broken to me but maybe it's right if there had",
    "start": "632320",
    "end": "639320"
  },
  {
    "text": "been a test there asserting that behavior at least you know it's intentional I mean I'm interested to hear a little bit about kind of the",
    "start": "639320",
    "end": "646000"
  },
  {
    "text": "process of when you're writing a program like do you can currently write like a little bit of your code and then write",
    "start": "646000",
    "end": "651959"
  },
  {
    "text": "you know test for it like how do you think through how to write tests along with your actual you know main",
    "start": "651959",
    "end": "658360"
  },
  {
    "text": "application well when Chris was talking then about sometimes depending on the",
    "start": "658360",
    "end": "663399"
  },
  {
    "text": "kind of problem sometimes you can't write the tests because you don't really know enough about it and there are",
    "start": "663399",
    "end": "670200"
  },
  {
    "text": "definitely times like that when it's completely new and you really have to",
    "start": "670200",
    "end": "675240"
  },
  {
    "text": "kind of knock some things together first to get a sense of what you're doing but I actually find writing tests can help",
    "start": "675240",
    "end": "681800"
  },
  {
    "text": "with that process too and so I tend to do a lot of tdd wherever it's appropriate I will write the test code",
    "start": "681800",
    "end": "688680"
  },
  {
    "text": "first and usually I'll just imagine like I I know the kind of problem I want to",
    "start": "688680",
    "end": "693760"
  },
  {
    "text": "solve so I just imagine it exists and I start to write code that uses it and of course it's just errors everywhere",
    "start": "693760",
    "end": "700079"
  },
  {
    "text": "because nothing's implemented but that then gives me a kind of to-do list you know what I mean so I have my test code",
    "start": "700079",
    "end": "708040"
  },
  {
    "text": "it's broken usually with errors first so I just try and make those errors pass",
    "start": "708040",
    "end": "713519"
  },
  {
    "text": "usually it's like oh this function doesn't exist or this type is not there so I'll just go and add the type and and",
    "start": "713519",
    "end": "719079"
  },
  {
    "text": "I try not to jump too far ahead when it comes to putting the program code in I",
    "start": "719079",
    "end": "724760"
  },
  {
    "text": "try and wait for the tests to guide me there because that red green they call it red green testing because you want to",
    "start": "724760",
    "end": "731040"
  },
  {
    "text": "see the test fail first and then you know that you're saying something about",
    "start": "731040",
    "end": "736120"
  },
  {
    "text": "your program and then when you make it green when you make the test pass you know that you've then progressed your",
    "start": "736120",
    "end": "742360"
  },
  {
    "text": "system in the right way but I do find that tdd helps depending on the kind of",
    "start": "742360",
    "end": "748000"
  },
  {
    "text": "problem but if I was was going to write a package that was going to PA some text and produce some output and some data",
    "start": "748000",
    "end": "754320"
  },
  {
    "text": "then absolutely I would start with a unit test and looking at it from that user's point of view and in go if you",
    "start": "754320",
    "end": "761240"
  },
  {
    "text": "put your test code in an outside package you can put it into like if you've got a main program you can have main test can",
    "start": "761240",
    "end": "767560"
  },
  {
    "text": "be the package for your test code in normal go programs it's it's an error if you have multiple packages in one folder",
    "start": "767560",
    "end": "773920"
  },
  {
    "text": "but with test code it's okay and that then allows you to call your code really",
    "start": "773920",
    "end": "779920"
  },
  {
    "text": "as though you are an actual user of it and so you even include the package name in your test code and what that does is",
    "start": "779920",
    "end": "787360"
  },
  {
    "text": "lets you see the API very early so you can see the kind of API You're Building",
    "start": "787360",
    "end": "793680"
  },
  {
    "text": "or designing or that's emerging and that's a nice way to make sure that even just like naming things make sense and",
    "start": "793680",
    "end": "800480"
  },
  {
    "text": "other things like that having the test code can really guide that towards good",
    "start": "800480",
    "end": "805680"
  },
  {
    "text": "design I think I'd say I'm in a fairly similar boat like if I'm doing doing something where I'd call it more of a lab situation where I have no idea like",
    "start": "805680",
    "end": "812639"
  },
  {
    "text": "I'm working with a new service from AWS or gcp or something yeah I'm not going to write test there because I have no",
    "start": "812639",
    "end": "818040"
  },
  {
    "text": "idea what I'm doing I'm going to write my code and figure out how I'm going to do it first but then yeah if I'm doing a",
    "start": "818040",
    "end": "823399"
  },
  {
    "text": "if I'm fixing a bug in existing code a test is going to be to duplicate the bug is going to be the first way that I do",
    "start": "823399",
    "end": "829639"
  },
  {
    "text": "it makes it easy to solve I can just run the test repeatedly instead of firing up the application and also if I'm",
    "start": "829639",
    "end": "835360"
  },
  {
    "text": "modifying existing code without tests writing test for the existing code gives me confidence that I haven't broken",
    "start": "835360",
    "end": "840720"
  },
  {
    "text": "those existing things if I'm doing Green Field then yeah ideally I'm going to start out with writing tests as well",
    "start": "840720",
    "end": "846839"
  },
  {
    "text": "because I found for me when I do that I'll write out all my various different test cases think through them and think",
    "start": "846839",
    "end": "851959"
  },
  {
    "text": "through the scenarios I need to address it gives me a blueprint I almost turn off my brain when I'm doing the implementation of the code and I'm just",
    "start": "851959",
    "end": "858680"
  },
  {
    "text": "fulfilling what the test needs how far do you write tests then do you tend to write a lot of test code before you get",
    "start": "858680",
    "end": "865920"
  },
  {
    "text": "started on your program code it can depend it depends on what I'm doing usually I'm very rarely standing up an",
    "start": "865920",
    "end": "871720"
  },
  {
    "text": "entire new project Greenfield because that usually you know just adding new new things so usually have a fairly",
    "start": "871720",
    "end": "877839"
  },
  {
    "text": "constrained problem set that I'm dealing with and what I'll probably do is I'll oftentimes think through what's going to",
    "start": "877839",
    "end": "884240"
  },
  {
    "text": "need to happen and I'll build out stubs for you know do X do y and the various different things and then I will attack",
    "start": "884240",
    "end": "890759"
  },
  {
    "text": "one section at a time and write the tests and complete the imputation for of piece and of course you know there's as",
    "start": "890759",
    "end": "896759"
  },
  {
    "text": "you go along you might see oh this piece actually interacts differently so I'm going to have to go back and test go back and tweak some things and it does",
    "start": "896759",
    "end": "903759"
  },
  {
    "text": "add a little bit of churning time with the I've got to adjust the tests that I've written before but for me it's",
    "start": "903759",
    "end": "909079"
  },
  {
    "text": "worth the tradeoff uh because there isn't that massive I've been in a hole for three days writing code and oh now",
    "start": "909079",
    "end": "914720"
  },
  {
    "text": "I've got to write test code for a week uh because that's never fun yeah writing",
    "start": "914720",
    "end": "920000"
  },
  {
    "text": "test code is just something that already exists is soul destroying isn't it y I",
    "start": "920000",
    "end": "925560"
  },
  {
    "text": "have to say that I think I fall on a different side of things than uh you John and Matt from the way I tend to",
    "start": "925560",
    "end": "931839"
  },
  {
    "text": "approach things I'm much more of a top down kind of designer than a bottom up so I find like writing test is usually",
    "start": "931839",
    "end": "938959"
  },
  {
    "text": "too granular for what I'm trying to do which is why I basically never do test driven development still write test",
    "start": "938959",
    "end": "946480"
  },
  {
    "text": "don't use an excuse not to write test tests are important but I definitely find like the way that my brain works",
    "start": "946480",
    "end": "951880"
  },
  {
    "text": "it's much easier for me to like hold the high Lev things in place and start sketching them out and I've just found",
    "start": "951880",
    "end": "957920"
  },
  {
    "text": "that that's like super incompatible with test driven development and it usually leads me to write like way too many",
    "start": "957920",
    "end": "964240"
  },
  {
    "text": "specific tests then just immediately become uh debt that I have to kind of",
    "start": "964240",
    "end": "969600"
  },
  {
    "text": "deal with become like garbage in my code base that I have to like kind of toss out eventually and I also think that the",
    "start": "969600",
    "end": "975920"
  },
  {
    "text": "style of test that you write really depends on the type of thing that you're writing I think kind of in a lot of",
    "start": "975920",
    "end": "982720"
  },
  {
    "text": "these conversations too often we take this perspective as if there's one proper way to test and you should use it",
    "start": "982720",
    "end": "987839"
  },
  {
    "text": "for all of the code you're right but I have found that uh especially for things that are like services like",
    "start": "987839",
    "end": "992959"
  },
  {
    "text": "microservices that I much prefer a model of testing where I kind of write the",
    "start": "992959",
    "end": "998600"
  },
  {
    "text": "test not just like underscore test package but their actual separate package that's like oh this is the test",
    "start": "998600",
    "end": "1005120"
  },
  {
    "text": "that's going to do tests through this API and everything is not just external from like the go API perspective but",
    "start": "1005120",
    "end": "1011759"
  },
  {
    "text": "external from like the process perspective so it's using the same avenues that all of the requests are",
    "start": "1011759",
    "end": "1017319"
  },
  {
    "text": "going to come through and I found that this like does a couple things it enables me to separate out like the",
    "start": "1017319",
    "end": "1023079"
  },
  {
    "text": "serialization logic and storage components without having to duplicate all of the test code between them and it",
    "start": "1023079",
    "end": "1029558"
  },
  {
    "text": "has also helped me eliminate a lot of dead logic that I'm like oh I think I probably need this and if you just kind",
    "start": "1029559",
    "end": "1036199"
  },
  {
    "text": "of like write tests around it then you'll see that as covered and you'll be like oh okay this is good but if it's like dead logic within your service then",
    "start": "1036199",
    "end": "1043079"
  },
  {
    "text": "you should probably get rid of it and if you need it later you can like dig it out of git or just rewrite it when you need it so I've found that that really",
    "start": "1043079",
    "end": "1049720"
  },
  {
    "text": "helps me write much more concise and compact Services while also you know",
    "start": "1049720",
    "end": "1055360"
  },
  {
    "text": "making my test code look pretty good because when it's a separate package you have you know all of the linters and",
    "start": "1055360",
    "end": "1061160"
  },
  {
    "text": "things that yell at you if you write gross test code M yeah that's a good point you make you know whenever there's",
    "start": "1061160",
    "end": "1067480"
  },
  {
    "text": "a time and you see this in testing a lot where devs have such strong disagreements about things whenever that",
    "start": "1067480",
    "end": "1075159"
  },
  {
    "text": "happens it's a sign that it really does depend depend on the sort of thing you're doing if you're writing a go",
    "start": "1075159",
    "end": "1082280"
  },
  {
    "text": "package to do something I think that's a very different proposition to writing a",
    "start": "1082280",
    "end": "1087440"
  },
  {
    "text": "new service that's going to integrate with lots of other different services and similarly all the way up to the UI",
    "start": "1087440",
    "end": "1094159"
  },
  {
    "text": "when you've got a UI there having tests in UI code is also a kind of entirely",
    "start": "1094159",
    "end": "1099600"
  },
  {
    "text": "different Beast so yeah I think I agree that your testing should change",
    "start": "1099600",
    "end": "1105440"
  },
  {
    "text": "depending on what you're doing that you can't learn a just a single blueprint of",
    "start": "1105440",
    "end": "1110480"
  },
  {
    "text": "testing and apply it to everything I'd even extend that to per project depending on the project even if it's",
    "start": "1110480",
    "end": "1116679"
  },
  {
    "text": "very similar to another project the testing needs are probably going to be different so testing is really a skill",
    "start": "1116679",
    "end": "1123720"
  },
  {
    "text": "and a somewhat almost like an art form that you kind of have to learn and apply",
    "start": "1123720",
    "end": "1129000"
  },
  {
    "text": "it to give you that sort of confidence that you need that your program is doing what you want it to",
    "start": "1129000",
    "end": "1135120"
  },
  {
    "text": "do [Music]",
    "start": "1137320",
    "end": "1143289"
  },
  {
    "text": "[Music] this episode is brought to you by launch",
    "start": "1146880",
    "end": "1152880"
  },
  {
    "text": "darkley feature management for the modern Enterprise power experimentation in production here's how it works launch",
    "start": "1152880",
    "end": "1159640"
  },
  {
    "text": "Darkly enables development and operation teams to deploy code at any time even if",
    "start": "1159640",
    "end": "1164760"
  },
  {
    "text": "a feature isn't ready to be released to users wrapping code with feature Flags gives you the safety to test new",
    "start": "1164760",
    "end": "1170360"
  },
  {
    "text": "features and infrastructure in your production environments without impacting the wrong end users when",
    "start": "1170360",
    "end": "1175880"
  },
  {
    "text": "you're ready to release more Wy simply update the feature flag and the changes are made instantaneously by the",
    "start": "1175880",
    "end": "1182200"
  },
  {
    "text": "real-time streaming architecture eliminate risk deliver value get started for free today at launchdarkly decom",
    "start": "1182200",
    "end": "1188760"
  },
  {
    "text": "again launchd dark.com [Music]",
    "start": "1188760",
    "end": "1195349"
  },
  {
    "text": "I would love it if maybe you could chat a little bit for those who aren't maybe aware about testify what is it how did",
    "start": "1202960",
    "end": "1210120"
  },
  {
    "text": "it come about give us that intro for those who may not be as familiar yeah so testify way back in the beginning one of",
    "start": "1210120",
    "end": "1217240"
  },
  {
    "text": "the things about go I think is great is that testing is a first class concern",
    "start": "1217240",
    "end": "1222520"
  },
  {
    "text": "rubyan rails had this too where testing was just something that already existed",
    "start": "1222520",
    "end": "1227640"
  },
  {
    "text": "Within the programs that you were writing it was kind of there from the beginning a lot of other languages",
    "start": "1227640",
    "end": "1234360"
  },
  {
    "text": "testing came later you know you have other Frameworks or things that you then use so the go standard Library comes",
    "start": "1234360",
    "end": "1241039"
  },
  {
    "text": "with testing the go tooling has support for tests it knows what tests are and expects you to write them and things and",
    "start": "1241039",
    "end": "1247600"
  },
  {
    "text": "so when I came from a kind of Ruby and a c world where I was very used to this",
    "start": "1247600",
    "end": "1253679"
  },
  {
    "text": "pattern of making assertions so just like saying okay I'm going to call this method meod it's a greeter I'm going to",
    "start": "1253679",
    "end": "1260000"
  },
  {
    "text": "pass in my name and I'm going to make an assertion that what comes out of that says hello Matt and if it doesn't that's",
    "start": "1260000",
    "end": "1266480"
  },
  {
    "text": "then a failed test and you can do that in the standard library and what you do is you just write normal go code so",
    "start": "1266480",
    "end": "1273080"
  },
  {
    "text": "you'll just call the method and check the result and if it's not right you then use a special error F method on",
    "start": "1273080",
    "end": "1280000"
  },
  {
    "text": "that t that you get and go the T that gets passed in from the testing package and then you can fail that test and it",
    "start": "1280000",
    "end": "1287520"
  },
  {
    "text": "was just too much repeating myself at the time when in the beginning and so we wanted",
    "start": "1287520",
    "end": "1294200"
  },
  {
    "text": "to be able to just write single line assertions and have the tests just fail in that way so it's really just a kind",
    "start": "1294200",
    "end": "1300120"
  },
  {
    "text": "of style thing really and it didn't exist no one had made that before so me",
    "start": "1300120",
    "end": "1305279"
  },
  {
    "text": "and a few friends just made this little package called testify and you know it was just kind of like I think it was",
    "start": "1305279",
    "end": "1311679"
  },
  {
    "text": "just a around from very early so it became the de facto way to do it it's",
    "start": "1311679",
    "end": "1317360"
  },
  {
    "text": "massive actually like loads of people use testify and I don't now you don't no",
    "start": "1317360",
    "end": "1325000"
  },
  {
    "text": "what do you use I use now that is one okay it's a much smaller one the thing",
    "start": "1325000",
    "end": "1330480"
  },
  {
    "text": "about testify is one of the patterns for the open source thing was if somebody made a contribution then they were just",
    "start": "1330480",
    "end": "1336039"
  },
  {
    "text": "added as a contributor to the project this was an idea that was a bit popular at the time a bit trendy so anybody that",
    "start": "1336039",
    "end": "1343480"
  },
  {
    "text": "needed to assert some things like I want to assert that this slice of string contains a particular value or I need to",
    "start": "1343480",
    "end": "1350960"
  },
  {
    "text": "assert that this value is within an average within a range of values and all",
    "start": "1350960",
    "end": "1356200"
  },
  {
    "text": "the sort of things the kind of floodgates were open to some extent and they all got added and if you look at",
    "start": "1356200",
    "end": "1361679"
  },
  {
    "text": "testify today it's a massive API footprint it's just has kind of",
    "start": "1361679",
    "end": "1367400"
  },
  {
    "text": "everything the nice thing is it all works really well because it's it's been used a lot and tested a lot but I just",
    "start": "1367400",
    "end": "1374120"
  },
  {
    "text": "found it was too big even I couldn't really figure out what I would need to use and I ended up just using two or",
    "start": "1374120",
    "end": "1380760"
  },
  {
    "text": "three of them and so that is Project is basically taking just the few it's like a really minimalist version of testify",
    "start": "1380760",
    "end": "1388159"
  },
  {
    "text": "but it's really the same thing gives you single line assertions that's it so I tend to do that or if it's a simpler",
    "start": "1388159",
    "end": "1395000"
  },
  {
    "text": "package I may just use the standard Library you know if it's suitable one of the other things that with the standard",
    "start": "1395000",
    "end": "1401320"
  },
  {
    "text": "library is when it fails you have to kind of provide an error message and include the values and things that's",
    "start": "1401320",
    "end": "1407240"
  },
  {
    "text": "where it gets bit repetitive because you're saying I expected this but I got this that's what you care about when a",
    "start": "1407240",
    "end": "1413240"
  },
  {
    "text": "test fails and so these packages let you just pass in the two values and it will",
    "start": "1413240",
    "end": "1419440"
  },
  {
    "text": "print out if there's a failure so that's really all it's doing to help but there are some people Frances campo's classic",
    "start": "1419440",
    "end": "1426600"
  },
  {
    "text": "has has a go at me for testify all the time he really doesn't like these assertion patterns and stuff so how",
    "start": "1426600",
    "end": "1433799"
  },
  {
    "text": "about Chris John do you use testify yeah when I first started into somebody pointed at me a testify and actually the",
    "start": "1433799",
    "end": "1440760"
  },
  {
    "text": "whole team because we have bunch of Java developers and we're like testify this looks like the way we should do assertions um and so started out using",
    "start": "1440760",
    "end": "1448559"
  },
  {
    "text": "it and then when I've actually came time to do manual assertions with go and the",
    "start": "1448559",
    "end": "1454080"
  },
  {
    "text": "API pragmatically it's like what this is miserable especially like doing deep equalities on objects and like if you're",
    "start": "1454080",
    "end": "1460400"
  },
  {
    "text": "testing marshalling and whatnot and there's a million different things you want to compare and seeing the difference doing that by hand is",
    "start": "1460400",
    "end": "1466440"
  },
  {
    "text": "terrible so having test where it gives you a nice print out it shows you the diff of What fields are",
    "start": "1466440",
    "end": "1471799"
  },
  {
    "text": "wrong and whatnot is wonderful to me I already know this isn't going to go well for me this",
    "start": "1471799",
    "end": "1476840"
  },
  {
    "text": "one I definitely kind of sit on the side of the fence with Frances yeah I think it's like I watched a talk from Years",
    "start": "1476840",
    "end": "1484640"
  },
  {
    "text": "Ago by Blake misini where he kind of went on this journey of like why you don't really need assertions in a go and",
    "start": "1484640",
    "end": "1492840"
  },
  {
    "text": "that kind of like fit with the kind of mentality I already had going forward with like how I wanted to rate test uh I",
    "start": "1492840",
    "end": "1499080"
  },
  {
    "text": "was very much in the just do a kind of simple assertion with your code I do",
    "start": "1499080",
    "end": "1504200"
  },
  {
    "text": "feel the pain of the reflect package and using reflect. deep like that's absolute garbage it just does not compare things",
    "start": "1504200",
    "end": "1510360"
  },
  {
    "text": "in the way that you want them compared but I think like the go CMP package makes up for that in some really really",
    "start": "1510360",
    "end": "1516480"
  },
  {
    "text": "strong ways where that's kind of like if I have something Advanced that I need to get the equ equality for I typically",
    "start": "1516480",
    "end": "1523520"
  },
  {
    "text": "lean on that because it is very small and concise and and really just does one thing and does it well and I've also",
    "start": "1523520",
    "end": "1529960"
  },
  {
    "text": "kind of seen that like back when I used to use a lot more assertions I kind of wrote worse test code because it was so",
    "start": "1529960",
    "end": "1537520"
  },
  {
    "text": "easy to just like throw some things in and assert and I wasn't really thinking of why is this painful for me assert",
    "start": "1537520",
    "end": "1544399"
  },
  {
    "text": "like am I writing this like in a way that you know makes it difficult to actually compare these values do I",
    "start": "1544399",
    "end": "1550480"
  },
  {
    "text": "perhaps need some sort of method on my types that allows me to compare them with ease is that comparison something",
    "start": "1550480",
    "end": "1557000"
  },
  {
    "text": "users might want and should this not just be in my test package but should actually be part of my API so that users can do this as well and I so I think",
    "start": "1557000",
    "end": "1563919"
  },
  {
    "text": "like once I started also thinking down that path it made even less sense to kind of lean on testify and and similar",
    "start": "1563919",
    "end": "1571240"
  },
  {
    "text": "libraries and I definitely agree that testify is API is just like way too huge and I think like there was this thing",
    "start": "1571240",
    "end": "1576840"
  },
  {
    "text": "with a lot of the testing packages where they would mess with the output of go test which messed with you know people",
    "start": "1576840",
    "end": "1582880"
  },
  {
    "text": "that were trying to parse and kind of process the output I think a lot of that has been resolved but it was definitely",
    "start": "1582880",
    "end": "1588360"
  },
  {
    "text": "a problem for a little bit so I think I fall on the side of like wanting smaller more Direct Tools like the compare",
    "start": "1588360",
    "end": "1595760"
  },
  {
    "text": "library that kind of satisfy the needs I have uh and kind of sticking to kind of as Bare Bones as possible but I also",
    "start": "1595760",
    "end": "1603279"
  },
  {
    "text": "realized that like that's a lot to ask of someone that's new to go so I think it's like perfectly fine if you're like",
    "start": "1603279",
    "end": "1608360"
  },
  {
    "text": "new to the language and you're like I'm so used to having assertions and I'm overwhelmed with all this other stuff I'm learning like please go use",
    "start": "1608360",
    "end": "1614559"
  },
  {
    "text": "testifier or is or or whatever it is that you need to like write test because it's more important that you write test",
    "start": "1614559",
    "end": "1619720"
  },
  {
    "text": "and don't get super frustrated and leave go than it is for you to like be writing you know pristine beautiful test code",
    "start": "1619720",
    "end": "1626720"
  },
  {
    "text": "like write test test your stuff do what works for you but try to evolve that perspective as time goes on don't just",
    "start": "1626720",
    "end": "1633240"
  },
  {
    "text": "be like well I've always used assertions so I should keep using assertions it's like I don't know question that",
    "start": "1633240",
    "end": "1638320"
  },
  {
    "text": "sometimes see how you feel feel the same way okay continue using it but I think over time you'll probably find that you",
    "start": "1638320",
    "end": "1643880"
  },
  {
    "text": "feel a bit differently yeah it's really interesting this was back in like 2013",
    "start": "1643880",
    "end": "1649799"
  },
  {
    "text": "2014 where I was seeing a lot of people complaining about the lack of just being",
    "start": "1649799",
    "end": "1656000"
  },
  {
    "text": "able to make simple assertions and so they were not testing code there were",
    "start": "1656000",
    "end": "1661279"
  },
  {
    "text": "projects that were they were just like well it's broken you know it's incomplete so we're going to wait for it",
    "start": "1661279",
    "end": "1667519"
  },
  {
    "text": "to be complete and then we're going to add tests and there were people making the case you know and I think Chris you",
    "start": "1667519",
    "end": "1673000"
  },
  {
    "text": "you nailed it really whatever you can do to have your code code tested whatever",
    "start": "1673000",
    "end": "1678559"
  },
  {
    "text": "you need to do is okay like the important thing is having tested code",
    "start": "1678559",
    "end": "1684480"
  },
  {
    "text": "that really is important and so yeah I am very like flexible with anyone's",
    "start": "1684480",
    "end": "1690080"
  },
  {
    "text": "approach to that whatever that means to them so yeah I think testing is the important bit which package you use or",
    "start": "1690080",
    "end": "1696600"
  },
  {
    "text": "how you do that I don't mind and probably is different again depending on all the things we talked about Chris you",
    "start": "1696600",
    "end": "1703799"
  },
  {
    "text": "kind of start and Matt you touched on this a little bit but I would be interested to hear how is testing and",
    "start": "1703799",
    "end": "1710120"
  },
  {
    "text": "the way you go about it different in go as opposed to other languages I someone like myself like I've only lived in the",
    "start": "1710120",
    "end": "1716640"
  },
  {
    "text": "go world like so I'm learning testing from you know zero but for people coming",
    "start": "1716640",
    "end": "1722000"
  },
  {
    "text": "from other languages into go and wanting to start testing how is it different",
    "start": "1722000",
    "end": "1727039"
  },
  {
    "text": "what are the kind of I guess tips you can give for people new to the language but who have maybe heavily tested prior",
    "start": "1727039",
    "end": "1733279"
  },
  {
    "text": "testing is part of the language built in which is nice and most other languages is you're using some other random",
    "start": "1733279",
    "end": "1739279"
  },
  {
    "text": "framework it's hard to say direct comparison without saying you know what language you're talking about um because",
    "start": "1739279",
    "end": "1745880"
  },
  {
    "text": "you know if you're coming from Scola land you're doing some sort of like bdd driven it's been forever since I worked",
    "start": "1745880",
    "end": "1750960"
  },
  {
    "text": "in Scola but they had their own little framework outside of like Jun junits very similar in some ways to go test",
    "start": "1750960",
    "end": "1756640"
  },
  {
    "text": "where you define test cases and it's there's no like magic but then there's a bunch of other there's a ton of",
    "start": "1756640",
    "end": "1763320"
  },
  {
    "text": "different testing Frameworks out there and they're all kind of different so I don't know if you can just say from",
    "start": "1763320",
    "end": "1768480"
  },
  {
    "text": "another language you'd have to say from a specific language okay yeah but in my experience the principles are all",
    "start": "1768480",
    "end": "1774919"
  },
  {
    "text": "basically the same you're calling your code and making somehow you know some",
    "start": "1774919",
    "end": "1781200"
  },
  {
    "text": "statements some tests about the response you get from some code that you call and",
    "start": "1781200",
    "end": "1786919"
  },
  {
    "text": "that's you know I think it's quite interesting to see the different styles of that bdd Jud mentioned where is kind",
    "start": "1786919",
    "end": "1793960"
  },
  {
    "text": "of you get to write these like sentences you almost like it's writing test code in Pros almost and so when you see",
    "start": "1793960",
    "end": "1801159"
  },
  {
    "text": "failures it's very kind of expressive explaining what's gone wrong and things and to me it's all kind of like they",
    "start": "1801159",
    "end": "1807919"
  },
  {
    "text": "just different styles of it but essentially being able to automatically run a test Suite against your code",
    "start": "1807919",
    "end": "1815840"
  },
  {
    "text": "whatever that looks like that's really the valuable bit but I find them to be very similar I mean in C in Ruby I mean",
    "start": "1815840",
    "end": "1822799"
  },
  {
    "text": "they had the assertions like testify has in that case it was very very similar I",
    "start": "1822799",
    "end": "1828080"
  },
  {
    "text": "think with experience I've changed the way I think about testing over time",
    "start": "1828080",
    "end": "1834519"
  },
  {
    "text": "that's more different and so even years ago in go code the test code that I",
    "start": "1834519",
    "end": "1840000"
  },
  {
    "text": "would have written then is probably very different to the test code I've written now so there's probably more difference",
    "start": "1840000",
    "end": "1845360"
  },
  {
    "text": "with me over time than between languages I would agree with that too like I've been writing go for a long time as my",
    "start": "1845360",
    "end": "1851880"
  },
  {
    "text": "primary language so it's been a long time since I came from another language to go but I've definitely seen very",
    "start": "1851880",
    "end": "1858960"
  },
  {
    "text": "large change in the way that I approach testing as I've written more and more go",
    "start": "1858960",
    "end": "1864080"
  },
  {
    "text": "and as I've read more and more go I think kind of early on I was very focused on like on the low level on just",
    "start": "1864080",
    "end": "1871639"
  },
  {
    "text": "like you know okay I wrote this function Let's test every single bit about it and then let's move to the next function",
    "start": "1871639",
    "end": "1877039"
  },
  {
    "text": "test every single bit about it and then I I'd still wind up with some pretty brittle code and some pretty like awful",
    "start": "1877039",
    "end": "1882760"
  },
  {
    "text": "designs but I think that's like the initial thing that kind of disillusioned me to writing so so much just like",
    "start": "1882760",
    "end": "1888760"
  },
  {
    "text": "writing so much test code and writing test code first I guess I was trying to like make it a design process and I feel",
    "start": "1888760",
    "end": "1894600"
  },
  {
    "text": "like this is sort of what happens a lot for a lot of people is that we kind of sub out a design process with testing",
    "start": "1894600",
    "end": "1902080"
  },
  {
    "text": "and testing is like a very poor method of designing software I think I think it",
    "start": "1902080",
    "end": "1907880"
  },
  {
    "text": "can be useful as part of the design process but if it's like the main thing that you're doing for the design unless",
    "start": "1907880",
    "end": "1914200"
  },
  {
    "text": "you like understand really well what you're trying to build it winds up leading you to having a lot of code that",
    "start": "1914200",
    "end": "1920120"
  },
  {
    "text": "then becomes more difficult to get rid of and I think like early on it's like pretty easy it's like okay well I don't",
    "start": "1920120",
    "end": "1925880"
  },
  {
    "text": "have a lot of test I don't have a lot of code so changing things is pretty easy but I think when you're embarking on a larger project if you don't do that",
    "start": "1925880",
    "end": "1932320"
  },
  {
    "text": "design work up front you wind up with bugs in your design that you wind up reinforcing with test code so now you",
    "start": "1932320",
    "end": "1938240"
  },
  {
    "text": "have this like Behemoth of code that you're then trying to go through and trying to wa through and be like I want to change this design now and if I'd sat",
    "start": "1938240",
    "end": "1945279"
  },
  {
    "text": "down and kind of thought through this a little bit more I probably would have designed it this way in the first place but I was trying to like get this thing",
    "start": "1945279",
    "end": "1952039"
  },
  {
    "text": "out the door and trying to like write all the the test for it and do all the other things and all these kind of Ceremonies that we have and now I've",
    "start": "1952039",
    "end": "1958639"
  },
  {
    "text": "wound up in this kind of rough spot so I'm definitely not saying we should write less test code but I'm definitely",
    "start": "1958639",
    "end": "1963960"
  },
  {
    "text": "saying that we should see testing as part of the larger process of design and make sure that we are testing our",
    "start": "1963960",
    "end": "1970600"
  },
  {
    "text": "designs which is like related but different testing your design is definitely more of a mental exercise of kind of looking at it and being like",
    "start": "1970600",
    "end": "1977159"
  },
  {
    "text": "does this actually make sense so yeah that's like kind of where I stand on that yeah I've definitely I used to over",
    "start": "1977159",
    "end": "1984360"
  },
  {
    "text": "test so over testing for me is where I've done a lot of work writing my test",
    "start": "1984360",
    "end": "1990320"
  },
  {
    "text": "code to make sure that it describes in every detail what my program code is you",
    "start": "1990320",
    "end": "1996120"
  },
  {
    "text": "know because at that point in time my program code is working and I want to make sure it stays working but the",
    "start": "1996120",
    "end": "2002760"
  },
  {
    "text": "problem is Chris you mentioned brittle tests and this is really interesting so if every time you make a change in your",
    "start": "2002760",
    "end": "2008919"
  },
  {
    "text": "program code it breaks tests that isn't necessarily a good thing that that can",
    "start": "2008919",
    "end": "2013960"
  },
  {
    "text": "be a sign that you've over tested because you know you really want to be testing like the behavior of your code",
    "start": "2013960",
    "end": "2022120"
  },
  {
    "text": "not really exactly how it's doing everything and so that is kind of tricky",
    "start": "2022120",
    "end": "2027919"
  },
  {
    "text": "but one example is if I have some code which is going to pause a string and",
    "start": "2027919",
    "end": "2033240"
  },
  {
    "text": "turn that into a data structure uh so that I can then go on and and use that in some other way I want to make sure",
    "start": "2033240",
    "end": "2040159"
  },
  {
    "text": "that I pass the string in and I get the certain things out if inside my function",
    "start": "2040159",
    "end": "2045880"
  },
  {
    "text": "I happen to be using something on disk to kind of keep a cache maybe a dictionary on disk or something that's",
    "start": "2045880",
    "end": "2052919"
  },
  {
    "text": "an implementation detail that may not matter to this particular test and so",
    "start": "2052919",
    "end": "2058760"
  },
  {
    "text": "you would of course if that is part of your program you would want tests to cover that in some way but if you",
    "start": "2058760",
    "end": "2063919"
  },
  {
    "text": "describe in every point that you're using this fun if you describe the exact IO operations that are going on and",
    "start": "2063919",
    "end": "2070079"
  },
  {
    "text": "you're making assertions about it if you then decide to change that and in fact maybe we store this in memory now",
    "start": "2070079",
    "end": "2075919"
  },
  {
    "text": "because it's more efficient or something your test code is kind of bound to that program code's",
    "start": "2075919",
    "end": "2082079"
  },
  {
    "text": "implementation and you then have a lot of work potentially to do to go and and and that's when tests start to be feel",
    "start": "2082079",
    "end": "2089320"
  },
  {
    "text": "like a burden that you know maintaining this test Suite that is just fighting you all the time whereas if you can take",
    "start": "2089320",
    "end": "2095800"
  },
  {
    "text": "a view that okay some of these implementation details aren't important really to this particular test so I'm",
    "start": "2095800",
    "end": "2101359"
  },
  {
    "text": "going to just test what's important and that what's important difficult thing to come to then you're free to change the",
    "start": "2101359",
    "end": "2108160"
  },
  {
    "text": "implementation and the tests just keep they're happy they're like yeah yeah you've changed it sure you've made loads of changes but actually all the promises",
    "start": "2108160",
    "end": "2114880"
  },
  {
    "text": "are still kept so no probs so I can think this is somewhere where I actually find myself potentially at odds with the",
    "start": "2114880",
    "end": "2121240"
  },
  {
    "text": "go community in general when it comes to testing because if I had something like that where I've got you know this system",
    "start": "2121240",
    "end": "2127160"
  },
  {
    "text": "that deals with a potential cash the way that I would address that is I would abstract that cash out to its own thing",
    "start": "2127160",
    "end": "2134079"
  },
  {
    "text": "and inject it in and so the code dealing with the cash would have no idea how the",
    "start": "2134079",
    "end": "2140079"
  },
  {
    "text": "cash operates and it would just trust the contract to that and I would test it with a mock because who cares how it's",
    "start": "2140079",
    "end": "2146040"
  },
  {
    "text": "going to the cash it's just writing to a cash and reading from a cash that cash can have its own tests and that keeps",
    "start": "2146040",
    "end": "2152920"
  },
  {
    "text": "that implementation divorced from that but that is very much at odds with the don't rely on mocks and whatnot that you",
    "start": "2152920",
    "end": "2159880"
  },
  {
    "text": "see evangelize quite a bit within go yeah I mean I will mock code I mean",
    "start": "2159880",
    "end": "2165000"
  },
  {
    "text": "mocking is a thing this is another time where I feel like it depends really matters here because I will mock code in",
    "start": "2165000",
    "end": "2171839"
  },
  {
    "text": "certain situations you want to make sure something is happening U Mark helps you",
    "start": "2171839",
    "end": "2177359"
  },
  {
    "text": "do that but you are tying that test code to the implementation detail of that",
    "start": "2177359",
    "end": "2183640"
  },
  {
    "text": "maybe that's okay in each case but you know what they say is like endtoend testing as an alternative to doing that",
    "start": "2183640",
    "end": "2191359"
  },
  {
    "text": "is nice so a bit like how Chris mentioned he will have almost an external process so you know we did this",
    "start": "2191359",
    "end": "2197040"
  },
  {
    "text": "too in our Pace project where our test code would spin up the server using the",
    "start": "2197040",
    "end": "2203680"
  },
  {
    "text": "exec command so it literally spins up the process and then that's going to listen to a port and then it makes calls",
    "start": "2203680",
    "end": "2211040"
  },
  {
    "text": "through the API using the client also that I expect users to use so in a way",
    "start": "2211040",
    "end": "2216359"
  },
  {
    "text": "that's nice because your test code is also using the actual client that's you",
    "start": "2216359",
    "end": "2221440"
  },
  {
    "text": "want other people to use too so he sort of validates that at the same time and then you may if it's a caching situation",
    "start": "2221440",
    "end": "2227560"
  },
  {
    "text": "you may make the request wait a bit and then what you do you make another request and it's the same and then you",
    "start": "2227560",
    "end": "2234880"
  },
  {
    "text": "might change something you know what I mean like it it gets really strange when you're testing things like that in that",
    "start": "2234880",
    "end": "2240240"
  },
  {
    "text": "case you mentioned John where there's a cache I think it is quite reasonable to make the case that you would want to",
    "start": "2240240",
    "end": "2245960"
  },
  {
    "text": "stub that cash out and just make sure that your program code is using it it doesn't matter really like you're not",
    "start": "2245960",
    "end": "2251680"
  },
  {
    "text": "testing that cache in this case it is tough yeah because like those end to end tests are great when they work because",
    "start": "2251680",
    "end": "2257640"
  },
  {
    "text": "it does it solves a lot you don't have to worry about the internals and you have absolute confidence in it well especially the problem space that we",
    "start": "2257640",
    "end": "2263960"
  },
  {
    "text": "work in where we don't really care about the output from a thing because we're doing a bunch of things behind the scenes and like sending push",
    "start": "2263960",
    "end": "2269680"
  },
  {
    "text": "notifications and emails and whatnot and we really care about those interactions that happen with those external entities",
    "start": "2269680",
    "end": "2276400"
  },
  {
    "text": "and they're very complex and hard to like stand up mock servers for and that's where I find like the direct unit",
    "start": "2276400",
    "end": "2282319"
  },
  {
    "text": "tests on like the section of code needs to do this thing and if it fails it's going to retry like this and back off",
    "start": "2282319",
    "end": "2288000"
  },
  {
    "text": "like this because that matters with API rate limiting and yada yada yada I mean honestly i' be with you on that one in",
    "start": "2288000",
    "end": "2293760"
  },
  {
    "text": "that case I think yeah if what you're building uses or sends emails and it",
    "start": "2293760",
    "end": "2299160"
  },
  {
    "text": "matters to you that this code ultimately sends an email you don't really want to be sending emails every time someone",
    "start": "2299160",
    "end": "2305520"
  },
  {
    "text": "runs your test code unless you know perhaps you've got an enemy and you pop there you're address it I don't know it's then it's",
    "start": "2305520",
    "end": "2312359"
  },
  {
    "text": "reasonable yeah so I guess like up front I generally dislike mocking I think in",
    "start": "2312359",
    "end": "2318119"
  },
  {
    "text": "the case we've been talking about I think it's okay but I also think it's a at least to me seems like a big design",
    "start": "2318119",
    "end": "2324680"
  },
  {
    "text": "problem with the way that we currently have things operating right like I definitely dislike when we have to",
    "start": "2324680",
    "end": "2331599"
  },
  {
    "text": "basically not talk to real things because those things are built in a way where where it's not practical to talk",
    "start": "2331599",
    "end": "2337800"
  },
  {
    "text": "to them like that's us taking on responsibility for something that we're not really in control of which I always",
    "start": "2337800",
    "end": "2342960"
  },
  {
    "text": "think is like a little bit dangerous um but I think the big thing I I dislike when it comes to to mocking is that",
    "start": "2342960",
    "end": "2349000"
  },
  {
    "text": "people try to do it for things that they do control and it gets people in a habit of doing it for things they control and",
    "start": "2349000",
    "end": "2354280"
  },
  {
    "text": "then they do it poorly like I think whenever I see something using SQL Mock and I've been guilty of this before too",
    "start": "2354280",
    "end": "2360400"
  },
  {
    "text": "of just like writing garbage SQL that doesn't actually work but then you're like you know you've been unit testing",
    "start": "2360400",
    "end": "2366119"
  },
  {
    "text": "it's like working then you go to use an actual database and you're like oh crap none of this actually works the reaction",
    "start": "2366119",
    "end": "2372000"
  },
  {
    "text": "that I think would be like oh well that's just a bad habit you shouldn't do it but that you know that's a discipline",
    "start": "2372000",
    "end": "2377200"
  },
  {
    "text": "that you have to build that is uh mental energy that you are expending to remember like okay when I'm doing it",
    "start": "2377200",
    "end": "2382920"
  },
  {
    "text": "this way I have to remember to not accidentally write bad SQL or I have to remember to like test it in this right",
    "start": "2382920",
    "end": "2388640"
  },
  {
    "text": "way like that's extra energy that you're expending and I've just never really found that that energy is like worth it",
    "start": "2388640",
    "end": "2393800"
  },
  {
    "text": "to expense in that place um so I think like mocks are a useful tool when you",
    "start": "2393800",
    "end": "2400400"
  },
  {
    "text": "need them but I'd much prefer like in the example we're talking about that like the email service provider has a",
    "start": "2400400",
    "end": "2405440"
  },
  {
    "text": "Sandbox or if it is a big enough thing where this is crucial to what we're doing that we have a proxy or an API of",
    "start": "2405440",
    "end": "2412880"
  },
  {
    "text": "some sort that we have internally that all of the other different components can talk to and we make sure that there's a sandbox mode for that and then",
    "start": "2412880",
    "end": "2419400"
  },
  {
    "text": "it kind of acts as the gateway to the outside world so then at least when we're doing the mocking it's kind of",
    "start": "2419400",
    "end": "2424599"
  },
  {
    "text": "sectioned off to one little thing and I kind of feel like we should spend more time trying to design those types of",
    "start": "2424599",
    "end": "2431079"
  },
  {
    "text": "systems cuz I feel like in the long term it winds up with us having once again like less brittle testing so I also",
    "start": "2431079",
    "end": "2437800"
  },
  {
    "text": "think like you know if you mock something and then the implementation changes your unit test aren't going to",
    "start": "2437800",
    "end": "2442839"
  },
  {
    "text": "catch that and then just like okay well I have my integration test to catch that or my end end test to catch that and then I come back around to like well if",
    "start": "2442839",
    "end": "2449440"
  },
  {
    "text": "you're going to use your integration test to catch that why can't you just use your integration test all the time so it's kind of like this Catch 22 and",
    "start": "2449440",
    "end": "2455720"
  },
  {
    "text": "this like Road you're kind of navigating and trying to figure okay like how often do I need to run my anent integration",
    "start": "2455720",
    "end": "2461480"
  },
  {
    "text": "test and how much can I rely on my unit test and that's like a lot of energy that we're expending it makes sense in a",
    "start": "2461480",
    "end": "2467680"
  },
  {
    "text": "lot of circumstances but I think we have to think through it a little bit more it shouldn't be like our go-to thing like I see far too often people are like of",
    "start": "2467680",
    "end": "2475040"
  },
  {
    "text": "course I need to mock this thing that I'm using we're going to use go mock we're going to generate the mocks that's what we're going to do and I also think",
    "start": "2475040",
    "end": "2482200"
  },
  {
    "text": "that leads to kind of hyper abstraction where we start abstracting a lot of things and shoving interfaces all over",
    "start": "2482200",
    "end": "2488079"
  },
  {
    "text": "the place so that we can have these mocks and then they're extremely leaky abstractions and they're kind of gross",
    "start": "2488079",
    "end": "2494599"
  },
  {
    "text": "and difficult to deal with and they add a lot of indirection to your code so it's harder to read and that comes with a whole host of problems so I think it's",
    "start": "2494599",
    "end": "2501319"
  },
  {
    "text": "a lot like channels and some other things that we brought up on the show before that are like use these sparingly and understand all of the implications",
    "start": "2501319",
    "end": "2508359"
  },
  {
    "text": "of using them I feel like mocks and interfaces definitely fall into that uh as well as abstractions and I feel like",
    "start": "2508359",
    "end": "2514440"
  },
  {
    "text": "your default mode of thinking should shouldn't be to run and go create an abstraction because the best abstractions that we have especially in",
    "start": "2514440",
    "end": "2521200"
  },
  {
    "text": "go are ones that have been very thoroughly thought through and change very very infrequently like I think the",
    "start": "2521200",
    "end": "2528480"
  },
  {
    "text": "io package has some really great abstractions that are true abstractions like you don't care what's on the other",
    "start": "2528480",
    "end": "2534240"
  },
  {
    "text": "side of it you're not going to think about the implementation details those don't matter to you and I think a lot of",
    "start": "2534240",
    "end": "2539319"
  },
  {
    "text": "the time we wind up creating abstractions that are not at all like that that you dig in and you go grasp",
    "start": "2539319",
    "end": "2544720"
  },
  {
    "text": "that implementation detail because it makes your life easier or because you just can so I think like we should avoid",
    "start": "2544720",
    "end": "2551079"
  },
  {
    "text": "abstracting until like we actually need it but once again if you're new to go and you're like this is easier for me it",
    "start": "2551079",
    "end": "2558359"
  },
  {
    "text": "requires less mental energy for me to use Mock and to do it this way i' say write the code and learn as you go",
    "start": "2558359",
    "end": "2564720"
  },
  {
    "text": "obviously work with your team if you're on a team of a bunch of like more senior go engineers and they're like we're not doing mocks well that's going to be a",
    "start": "2564720",
    "end": "2570359"
  },
  {
    "text": "little rough for you but I think if you're just kind of learning things and you're like mocking makes it easier for me to understand these other Concepts",
    "start": "2570359",
    "end": "2576599"
  },
  {
    "text": "I'm trying to learn go use mocking this isn't like a no Thou shalt not mock but",
    "start": "2576599",
    "end": "2582079"
  },
  {
    "text": "I think it's we we should really consider how much effort it really does take at the end of the day to use these",
    "start": "2582079",
    "end": "2587319"
  },
  {
    "text": "things I think often we just assume that they don't take much effort at all yeah the thing is when you find an",
    "start": "2587319",
    "end": "2592599"
  },
  {
    "text": "abstraction the best abstractions for me emerge from when I've solved the problem a few times then an abstraction might",
    "start": "2592599",
    "end": "2600440"
  },
  {
    "text": "emerge from that and when it does especially if it's a tiny little single method interface of something like we",
    "start": "2600440",
    "end": "2606720"
  },
  {
    "text": "see in the standard Library it's such a good feeling that it gets sort of addicted to that which is why I think we",
    "start": "2606720",
    "end": "2614160"
  },
  {
    "text": "start there because that's what we want we want these abstractions to exist because it unlocks so much power you can",
    "start": "2614160",
    "end": "2620880"
  },
  {
    "text": "plug anything into this if in a good abstraction the trouble is they are hard",
    "start": "2620880",
    "end": "2627480"
  },
  {
    "text": "to find and they're hard to get right and so I'm With You Chris me and David I",
    "start": "2627480",
    "end": "2632520"
  },
  {
    "text": "work a lot with David Hernandez we even have reached the point where where we won't do any abstractions until it's too",
    "start": "2632520",
    "end": "2640480"
  },
  {
    "text": "painful for us to carry on so that usually means having the same thing copied and pasted three or four times",
    "start": "2640480",
    "end": "2648920"
  },
  {
    "text": "and only then is it like we can't fight this anymore there is an abstraction here that's worth then going and",
    "start": "2648920",
    "end": "2655520"
  },
  {
    "text": "retrofitting and our code generally is better for it for resisting those",
    "start": "2655520",
    "end": "2660599"
  },
  {
    "text": "abstractions another thing on test code that I'll say is it's a principle I",
    "start": "2660599",
    "end": "2666280"
  },
  {
    "text": "found which John you mentioned this earlier is to really only test your code",
    "start": "2666280",
    "end": "2673119"
  },
  {
    "text": "only test one thing like if you can in a unit test like here's an example if",
    "start": "2673119",
    "end": "2678800"
  },
  {
    "text": "you're going to unmarshal some Json you're probably going to use the standard libraries Json package or one",
    "start": "2678800",
    "end": "2684760"
  },
  {
    "text": "of the other Json packages to do the UNM marshing it's not your responsibility to",
    "start": "2684760",
    "end": "2690000"
  },
  {
    "text": "test that thing you know what I mean so I used to in the past and this is a",
    "start": "2690000",
    "end": "2695599"
  },
  {
    "text": "mistake I've made a lot I would have some object and I would unmarshal it and",
    "start": "2695599",
    "end": "2701559"
  },
  {
    "text": "then I would have an assertion for every field that was unmarshal and that kind of gives me the confidence that this is",
    "start": "2701559",
    "end": "2708000"
  },
  {
    "text": "working now really what I'm doing there is testing the Jason on marshala or and",
    "start": "2708000",
    "end": "2713559"
  },
  {
    "text": "marshala I'm not really testing my code which just uses that and so you know",
    "start": "2713559",
    "end": "2718640"
  },
  {
    "text": "I'll tend to now I'll have a slightly more relaxed attitude to it I'll test a",
    "start": "2718640",
    "end": "2724319"
  },
  {
    "text": "field to make sure that it work worked and then I can sort of trust that it works that has bited me before where one",
    "start": "2724319",
    "end": "2731000"
  },
  {
    "text": "of the names was wrong in the Json thing but doesn't happen very often but when that then did happen then I add added",
    "start": "2731000",
    "end": "2737839"
  },
  {
    "text": "you know more tests to that you can't really have strong rules that you can just always follow but I do find being a",
    "start": "2737839",
    "end": "2745720"
  },
  {
    "text": "bit more relaxed about testing still gives me enough confidence so that I can",
    "start": "2745720",
    "end": "2750880"
  },
  {
    "text": "sleep at night without it being me basically just repeating my program code",
    "start": "2750880",
    "end": "2756200"
  },
  {
    "text": "it's tough though isn't it makes sense yeah well and it can be difficult so like using marshalling as an example",
    "start": "2756200",
    "end": "2761520"
  },
  {
    "text": "incident where um the output format from our things very much so mattered and it actually mattered with the go tags",
    "start": "2761520",
    "end": "2767839"
  },
  {
    "text": "because yeah we knew that we could Marshall stuff correctly but if there was a field that had a mid empty on it",
    "start": "2767839",
    "end": "2773599"
  },
  {
    "text": "in it it would actually break the Android readers of stuff because in other languages an empty set is not or",
    "start": "2773599",
    "end": "2779839"
  },
  {
    "text": "an empty list is very different from a null list and so it was actually really important that we have this automation",
    "start": "2779839",
    "end": "2786599"
  },
  {
    "text": "on our output contract that asserts this is our output yeah we're kind of testing the Json marshalling but really that's",
    "start": "2786599",
    "end": "2793119"
  },
  {
    "text": "not what we're testing we're testing that we actually had The annotation well we're testing that the rendering was correct and we it doesn't matter how it",
    "start": "2793119",
    "end": "2800160"
  },
  {
    "text": "was done but just that a response Marshall gets there but yes you can see yeah we don't necessarily need to do that for everything we got to find the",
    "start": "2800160",
    "end": "2806000"
  },
  {
    "text": "right scenarios I think where I find the end to end testing was specifically using SQL as an example gets hard is in",
    "start": "2806000",
    "end": "2813960"
  },
  {
    "text": "Failure scenarios and so again and maybe this comes from working just in environments that I've worked in or one",
    "start": "2813960",
    "end": "2820160"
  },
  {
    "text": "company is working with virtual cell phone car you know you're integrating with Sprint and whatnot but like where you're writing with multiple different",
    "start": "2820160",
    "end": "2826359"
  },
  {
    "text": "data stores participations in transactions and like when to roll a transaction back might be very important",
    "start": "2826359",
    "end": "2832599"
  },
  {
    "text": "um while simulating those failures with a a local DB that's impossible to do when you're actually talking well I",
    "start": "2832599",
    "end": "2838800"
  },
  {
    "text": "shouldn't say impossible but incredibly challenging to do so again I guess those are the scenarios I run into where yeah",
    "start": "2838800",
    "end": "2844440"
  },
  {
    "text": "it's very painful that the go SQL Library can't be mocked because I want to make sure that this transaction gets",
    "start": "2844440",
    "end": "2850960"
  },
  {
    "text": "rolled back when this other right fails um but I can't really do that with the stock Library I feel like with with SQL",
    "start": "2850960",
    "end": "2859280"
  },
  {
    "text": "though that's a good example where like we do have a really good abstraction so it's like you can just write a fake",
    "start": "2859280",
    "end": "2866000"
  },
  {
    "text": "driver and you're like okay I'm going to use this driver to test a specific scenario and it enact that scenario",
    "start": "2866000",
    "end": "2871280"
  },
  {
    "text": "quite easily and I I kind of see that a little differently than like generic mocking because you're not actually",
    "start": "2871280",
    "end": "2877839"
  },
  {
    "text": "really changing the implementation that you're handing the code in a way that it needs to care about what the code needs",
    "start": "2877839",
    "end": "2883440"
  },
  {
    "text": "to care about is like I'm using the you know SQL DB and SQL TX and all of the stuff to make these queries and then it",
    "start": "2883440",
    "end": "2889040"
  },
  {
    "text": "goes somewhere and then I get some result back and then I do other things I often hold up the database SQL package",
    "start": "2889040",
    "end": "2895559"
  },
  {
    "text": "as a really good example of how we got the abstracting right in the standard",
    "start": "2895559",
    "end": "2900800"
  },
  {
    "text": "library and I think often times I'll use an example and people kind of point out to me they're like oh but SQL is an",
    "start": "2900800",
    "end": "2906000"
  },
  {
    "text": "interface I'm like no it's not it's a it's a stru type the driver is the interface and that's the thing you got to implement and then it's like you can",
    "start": "2906000",
    "end": "2911960"
  },
  {
    "text": "do what you want with it after that I think that does require more tooling that we might not really have it's",
    "start": "2911960",
    "end": "2918440"
  },
  {
    "text": "definitely easier to use SQL mock to do that kind of stuff but I think also if that's like if those types of failure",
    "start": "2918440",
    "end": "2924760"
  },
  {
    "text": "modes are something you really care about then that's something you should be investing in and perhaps even investing in a type of database that",
    "start": "2924760",
    "end": "2931160"
  },
  {
    "text": "allows you to do the kinds of failures within the database",
    "start": "2931160",
    "end": "2936200"
  },
  {
    "text": "I've worked on databases before that have these types of fail points within them where you kind of set it up in a specific way and then you make a query",
    "start": "2936200",
    "end": "2943119"
  },
  {
    "text": "and then boom it'll fail in a in a way that you expect it to fail in kind of a certain production scenario so I think",
    "start": "2943119",
    "end": "2949240"
  },
  {
    "text": "like once again it's like that a solution is to use mocking but I think that also is something we can fix with",
    "start": "2949240",
    "end": "2955520"
  },
  {
    "text": "the technologies that we're using and and making them get better and I also realize that that's like a huge ask like",
    "start": "2955520",
    "end": "2960760"
  },
  {
    "text": "I don't know adding failure points to postgres is probably a giant nightmare so not something that's really practical",
    "start": "2960760",
    "end": "2967440"
  },
  {
    "text": "but I think it's something that can help us as a as a community and as an industry think better about the types of",
    "start": "2967440",
    "end": "2973760"
  },
  {
    "text": "products that we're building so maybe the next time you're building a product you can say well maybe I should have a way for people to induce failures so",
    "start": "2973760",
    "end": "2980680"
  },
  {
    "text": "they don't necessarily have to Mock and they can just use the actual real implementation to get those failures",
    "start": "2980680",
    "end": "2986119"
  },
  {
    "text": "that they want at the time that they want them obviously a lot of extra design cost there it's it's not an easy",
    "start": "2986119",
    "end": "2991640"
  },
  {
    "text": "thing to do it's extremely difficult but you know we don't get paid big bucks because we just do things easy all of",
    "start": "2991640",
    "end": "2998280"
  },
  {
    "text": "the time like we get paid big bucks to solve difficult problems I don't get paid anything at",
    "start": "2998280",
    "end": "3004200"
  },
  {
    "text": "the [Music]",
    "start": "3004200",
    "end": "3017200"
  },
  {
    "text": "moment this episode is brought to you by Source graph Source graph is code search",
    "start": "3017200",
    "end": "3022440"
  },
  {
    "text": "for every developer in team easily search across all the codes that matters to you and your organization find",
    "start": "3022440",
    "end": "3027720"
  },
  {
    "text": "example code explore and read code debug issues and so much more and I talk about bangl CTO and co-founder of source graph",
    "start": "3027720",
    "end": "3035640"
  },
  {
    "text": "and asked him to share what code search is what developers and teams are missing out on and how Source graph provides",
    "start": "3035640",
    "end": "3041559"
  },
  {
    "text": "code search to every developer in the world if you've worked inside a Google or Facebook or any one of these really",
    "start": "3041559",
    "end": "3048319"
  },
  {
    "text": "big well respected technology companies chances are you've used something like code search before and you know the",
    "start": "3048319",
    "end": "3054520"
  },
  {
    "text": "value that provides to your team you know that almost every single engineer inside these organizations uses it on a",
    "start": "3054520",
    "end": "3060960"
  },
  {
    "text": "a daily basis if you've never had that experience chances are you may not know what you're missing out on you know the",
    "start": "3060960",
    "end": "3067640"
  },
  {
    "text": "term code search sounds a lot like you know grep or the search inside your editor and that's what a lot of people",
    "start": "3067640",
    "end": "3072880"
  },
  {
    "text": "think when they first hear it but it's really about much more than that it's really about connecting you as a",
    "start": "3072880",
    "end": "3077920"
  },
  {
    "text": "developer to the broader Universe of code and code related data that's relevant to you that you need at hand in",
    "start": "3077920",
    "end": "3084720"
  },
  {
    "text": "order to enter that you know magical Flow State of you know being your editor writing code quickly making rapid",
    "start": "3084720",
    "end": "3091400"
  },
  {
    "text": "progress towards that feature bug fix that you're working on it's really about making all that contextual information accessible at your fingertips and what",
    "start": "3091400",
    "end": "3098599"
  },
  {
    "text": "that means is think about every single repository every single file and every single language uh every single diff and",
    "start": "3098599",
    "end": "3106000"
  },
  {
    "text": "every single open source dependency or maybe closed Source dependency that's shared across your organization all that",
    "start": "3106000",
    "end": "3112000"
  },
  {
    "text": "is searchable through a single text box and that's really powerful because because it means all this friction is",
    "start": "3112000",
    "end": "3117079"
  },
  {
    "text": "eliminated between you and understanding that broader world of code you don't have to clone stuff down to your local machine you don't have to mess around",
    "start": "3117079",
    "end": "3122559"
  },
  {
    "text": "with editor config you don't have to be constantly bugging people on other teams who may not even know who you are in",
    "start": "3122559",
    "end": "3129440"
  },
  {
    "text": "order to teach yourself how all that code Works what source graph is is really a way for the rest of us the",
    "start": "3129440",
    "end": "3137119"
  },
  {
    "text": "people who don't work inside the Googles the Facebooks to get a tool that gives us access to that sort of information",
    "start": "3137119",
    "end": "3144799"
  },
  {
    "text": "readily and add our fingertips it's really about bringing this this type of tool that a lot of the larger technology",
    "start": "3144799",
    "end": "3150359"
  },
  {
    "text": "companies have developed and invested hundreds of millions of dollars into making for the productivity of their own",
    "start": "3150359",
    "end": "3155880"
  },
  {
    "text": "engineers and making that accessible to every single developer in the world all right if code search powered by Source",
    "start": "3155880",
    "end": "3161520"
  },
  {
    "text": "graph sounds like something you and your team can use head to info. source.com changelog and click the button that says",
    "start": "3161520",
    "end": "3167480"
  },
  {
    "text": "try Source graph now you can install locally deploy it to a server or to a cluster they have a quick start guide",
    "start": "3167480",
    "end": "3173040"
  },
  {
    "text": "that takes less than 5 minutes to install Source graph using dock or so it's too easy to give a try again head",
    "start": "3173040",
    "end": "3178119"
  },
  {
    "text": "to info. source.com [Music]",
    "start": "3178119",
    "end": "3204160"
  },
  {
    "text": "changelog the interesting thing about errors",
    "start": "3204160",
    "end": "3209280"
  },
  {
    "text": "because that's another thing I think with code coverage you know you can measure code coverage and it gives you a",
    "start": "3209280",
    "end": "3215480"
  },
  {
    "text": "percentage and so whenever you've got a percentage we want it to be 100% don't",
    "start": "3215480",
    "end": "3221240"
  },
  {
    "text": "we everyone is very natural I think 100% code coverage is not what you should go",
    "start": "3221240",
    "end": "3228119"
  },
  {
    "text": "for in go specifically and honestly I don't test the if error equals nil",
    "start": "3228119",
    "end": "3234400"
  },
  {
    "text": "things unless it's part of my API design you know if I have a special kind of error like a sentinel error as Dave",
    "start": "3234400",
    "end": "3240880"
  },
  {
    "text": "Cheney coined that is part of the API so in this particular case I get back this",
    "start": "3240880",
    "end": "3246760"
  },
  {
    "text": "error I can then I will then test those but if it's program code that's doing",
    "start": "3246760",
    "end": "3252359"
  },
  {
    "text": "things and I have a lot of checks for errors and I return the error in an error case I'll just maybe test a few of",
    "start": "3252359",
    "end": "3259720"
  },
  {
    "text": "the key error cases and then I trust myself I trust that we've done errors",
    "start": "3259720",
    "end": "3265160"
  },
  {
    "text": "properly that probably won't be appropriate for every case but I think",
    "start": "3265160",
    "end": "3270400"
  },
  {
    "text": "shooting for kind of 100% coverage means you have to try and get everything to",
    "start": "3270400",
    "end": "3276280"
  },
  {
    "text": "error like we're talking about like the OS package if you're going to open a file how do you get that to give you an",
    "start": "3276280",
    "end": "3282200"
  },
  {
    "text": "error as part of a test it doesn't really matter in a way like if you're",
    "start": "3282200",
    "end": "3288559"
  },
  {
    "text": "handling that error properly so I tend to Omit that from unit tests another",
    "start": "3288559",
    "end": "3294520"
  },
  {
    "text": "thing you can sometimes address these problems with different design too so",
    "start": "3294520",
    "end": "3299599"
  },
  {
    "text": "one example is idempotency or idempotency I don't know how you say",
    "start": "3299599",
    "end": "3304799"
  },
  {
    "text": "that how do you say that Angelica you speak very properly I say em potency yeah I would say em potency em potency I",
    "start": "3304799",
    "end": "3312079"
  },
  {
    "text": "always try to just type it out that way I don't have to what even if you're talking to someone in real life just",
    "start": "3312079",
    "end": "3318040"
  },
  {
    "text": "write it on a Post-It note and hold it up yeah even in real life situations you",
    "start": "3318040",
    "end": "3323640"
  },
  {
    "text": "do that John totally yeah this should be idempotent idempotent I don't know idempotent well",
    "start": "3323640",
    "end": "3331000"
  },
  {
    "text": "this idea that if you've got something that could go wrong and if it goes wrong",
    "start": "3331000",
    "end": "3336079"
  },
  {
    "text": "if it fails you can then retry it and you're not going to end up in a strange State because no matter how many times",
    "start": "3336079",
    "end": "3342240"
  },
  {
    "text": "you run the code it's the idea is you end up in the same place that as a principle really helps because suddenly",
    "start": "3342240",
    "end": "3348799"
  },
  {
    "text": "your testing can be simpler because you don't have to check if the database might give you an error or the file",
    "start": "3348799",
    "end": "3354599"
  },
  {
    "text": "system might give you an error or the email sending things going to give you an error or something that's hard to make ident poent though so sometimes I",
    "start": "3354599",
    "end": "3361359"
  },
  {
    "text": "think there are design things you can do and also I think you can trust yourselves to some extent that you're",
    "start": "3361359",
    "end": "3366599"
  },
  {
    "text": "going to write the code properly if you don't then it's kind of obvious but maybe not how do you feel about that do",
    "start": "3366599",
    "end": "3372920"
  },
  {
    "text": "you want to test all those if error checks generally not I'll second like shooting for I would say there is no",
    "start": "3372920",
    "end": "3380280"
  },
  {
    "text": "correct coverage number that you should shoot for I've actually had things go horribly wrong in the past developers",
    "start": "3380280",
    "end": "3385559"
  },
  {
    "text": "like putting everything on one line to meet coverage requirements and yeah no it's not important to test like every",
    "start": "3385559",
    "end": "3391079"
  },
  {
    "text": "single error check there are conditions where you know it is important to have a test to ensure that an error check",
    "start": "3391079",
    "end": "3397559"
  },
  {
    "text": "happens but that's going to be a case-by casee basis and determining whether or not it really matters you know like",
    "start": "3397559",
    "end": "3404119"
  },
  {
    "text": "should you be testing for the right to the output stream fail no that's never going to fail or if it is it's you know",
    "start": "3404119",
    "end": "3410599"
  },
  {
    "text": "it's a request that the network connection went wrong whatever it's not the end of the world but you know example that I got today is I routine",
    "start": "3410599",
    "end": "3417920"
  },
  {
    "text": "that has to read from one system read from another and then if they're different right to them well so writing through those tests it might be",
    "start": "3417920",
    "end": "3423799"
  },
  {
    "text": "important to you know if the read from one fails well yeah we shouldn't do a write um type thing I usually end up",
    "start": "3423799",
    "end": "3429680"
  },
  {
    "text": "getting to that point where I'm writing those tests though because I've written out a string of code and I'm putting in my test and I find that building those I",
    "start": "3429680",
    "end": "3436160"
  },
  {
    "text": "haven't done tdd so I'm building a test on existing code well I've got to build through all these scenarios anyways and",
    "start": "3436160",
    "end": "3442760"
  },
  {
    "text": "so that just happens by happen stance it's not so important I would go as far as to say that 100% test coverage is",
    "start": "3442760",
    "end": "3448799"
  },
  {
    "text": "impossible um if you have any definition that makes sense for test coverage I think like running all of the lines is",
    "start": "3448799",
    "end": "3455119"
  },
  {
    "text": "insufficient for actually understanding if you've covered your code and then once you start bringing into branching",
    "start": "3455119",
    "end": "3460760"
  },
  {
    "text": "and things like that if you have even a moderately sized application it's it's not really possible um to test",
    "start": "3460760",
    "end": "3466760"
  },
  {
    "text": "everything but I also think like test coverage I found to be a really bad heris as far as is your code actually",
    "start": "3466760",
    "end": "3473440"
  },
  {
    "text": "doing what you want it to to do uh it's just too easy to just like I'm running the code and not really testing it for",
    "start": "3473440",
    "end": "3478599"
  },
  {
    "text": "Reales and I think that's back to where like we should be doing design we should be defining what we mean by these things",
    "start": "3478599",
    "end": "3484480"
  },
  {
    "text": "like something we're not really good at doing as software Engineers which is kind of ironic because we're pedantic",
    "start": "3484480",
    "end": "3490079"
  },
  {
    "text": "about almost everything but like you know that's something that goes into design dock of like what is our testing plan what things do we need to test and",
    "start": "3490079",
    "end": "3496839"
  },
  {
    "text": "how do we need to test them and to do that upfront it's a failure of our industry that we kind of go in tdd sort",
    "start": "3496839",
    "end": "3504359"
  },
  {
    "text": "of helps that but I think it's a failure of Industry that we go in and we don't know what we're supposed to do until we've done it and then we say oh look we",
    "start": "3504359",
    "end": "3511720"
  },
  {
    "text": "did the thing I don't think tdd is sufficiently large enough in granularity",
    "start": "3511720",
    "end": "3516920"
  },
  {
    "text": "to kind of handle that situation and I think what that kind of runs us into is the Eternal question of is this a",
    "start": "3516920",
    "end": "3522920"
  },
  {
    "text": "feature or is this a bug well we don't really know because we didn't Define really concretely what our features were",
    "start": "3522920",
    "end": "3529240"
  },
  {
    "text": "up front yeah so you've mentioned this before Chris we differ on this because you have a lot of success I think with",
    "start": "3529240",
    "end": "3535920"
  },
  {
    "text": "the design process up front and thinking ahead and I don't have the same experience I'm much more effective kind",
    "start": "3535920",
    "end": "3543079"
  },
  {
    "text": "of improvising my way through it and doing it as I go um obviously that's",
    "start": "3543079",
    "end": "3548160"
  },
  {
    "text": "just broad Strokes I'm saying that generally speaking sometimes of course you can't really beat a good design but",
    "start": "3548160",
    "end": "3555039"
  },
  {
    "text": "that's an interesting difference so I think sometimes maybe personality type or something else that may even play",
    "start": "3555039",
    "end": "3561920"
  },
  {
    "text": "into that like the Dynamics of a team and and how you think about things I think that probably comes into this too",
    "start": "3561920",
    "end": "3568640"
  },
  {
    "text": "I would suspect that we probably are more in agreement than we think we are but our semantics are differing and",
    "start": "3568640",
    "end": "3575960"
  },
  {
    "text": "that's where the difference comes in oh really cuz the way I think about kind of upfront design and what kind of goes",
    "start": "3575960",
    "end": "3582039"
  },
  {
    "text": "into a design I think is very different from what most people conceptualize as like a what do you do when you write a",
    "start": "3582039",
    "end": "3589240"
  },
  {
    "text": "design document I think there's so much Nuance that really really goes into it like I expect that during a design you",
    "start": "3589240",
    "end": "3594799"
  },
  {
    "text": "will be writing code you will be prototyping this is not like a I'm going to sit there and theorize things it's",
    "start": "3594799",
    "end": "3599880"
  },
  {
    "text": "like no you need to write real code you need to see if your ideas actually work this is not like I'm going to write a design in the abstract and hope that it",
    "start": "3599880",
    "end": "3607440"
  },
  {
    "text": "works I think the main thing for me is like do you ship that code and the answer is always no it's prototype code",
    "start": "3607440",
    "end": "3613599"
  },
  {
    "text": "you do not ship that you write it again once you understand the space better and I think that's where TD can be very very",
    "start": "3613599",
    "end": "3619559"
  },
  {
    "text": "helpful because now you know what you're writing and what you're doing yeah so I think a lot of where we have different",
    "start": "3619559",
    "end": "3624799"
  },
  {
    "text": "is here is likely down to semantics and Nuance which is okay that's like part of",
    "start": "3624799",
    "end": "3629839"
  },
  {
    "text": "the process of like understanding and evolving ideas is like coming coming together having conversations yeah okay",
    "start": "3629839",
    "end": "3636000"
  },
  {
    "text": "that's really interesting I'd love to see a talk if you wouldn't mind doing one at some point and showing your",
    "start": "3636000",
    "end": "3641839"
  },
  {
    "text": "process there because it it sound kind of very interesting but you're right I mean I will often rewrite basically I",
    "start": "3641839",
    "end": "3647720"
  },
  {
    "text": "rewrite everything like I'll write something once and I do use tests because for me that really just helps me",
    "start": "3647720",
    "end": "3654160"
  },
  {
    "text": "uh think about it but then I will rewrite it almost 100% of the stuff I've",
    "start": "3654160",
    "end": "3659359"
  },
  {
    "text": "done is is a rewrite because you learn so much in that process and usually you",
    "start": "3659359",
    "end": "3665559"
  },
  {
    "text": "learn like oh all these things I was thinking are unnecessary you know hopefully a nice much simpler design has",
    "start": "3665559",
    "end": "3671960"
  },
  {
    "text": "emerged by the time you've been through that process and it's actually quite easy to rewrite once you've got",
    "start": "3671960",
    "end": "3677079"
  },
  {
    "text": "something cuz like you say you know then what it is and you can usually like copy bit you know there's probably chunks",
    "start": "3677079",
    "end": "3683240"
  },
  {
    "text": "that are great that you would keep and you can copy them across but I do rewrite a lot that is something that I",
    "start": "3683240",
    "end": "3689520"
  },
  {
    "text": "find myself doing I find it to be kind of really great and actually I get complimented sometimes on not very often",
    "start": "3689520",
    "end": "3697000"
  },
  {
    "text": "not often enough if I'm honest but I do sometimes get complemented on like API",
    "start": "3697000",
    "end": "3703039"
  },
  {
    "text": "design and people usually ask that like how have you designed that so well and it's basically it's a rewrite it's like",
    "start": "3703039",
    "end": "3708680"
  },
  {
    "text": "it's a version two already before anyone else has ever seen it Angelica yes I have many views but I'm",
    "start": "3708680",
    "end": "3716559"
  },
  {
    "text": "I'm honestly this is the best podcast ever in that I am just sitting and soaking it in and having the best",
    "start": "3716559",
    "end": "3721799"
  },
  {
    "text": "masterclass of my life it's brilliant but we are actually serendipitously",
    "start": "3721799",
    "end": "3727799"
  },
  {
    "text": "going to be turning over and cooling our beans on the wonderful testing fire that is this conversation and we'll be",
    "start": "3727799",
    "end": "3734640"
  },
  {
    "text": "talking a little bit about your unpopular [Music]",
    "start": "3734640",
    "end": "3741099"
  },
  {
    "text": "opinions you want actually think you should probably [Music]",
    "start": "3742480",
    "end": "3753079"
  },
  {
    "text": "leave as our wonderful guest John I'm probably going to turn over to you first",
    "start": "3753079",
    "end": "3758880"
  },
  {
    "text": "we would love to hear an an popular opinion it does not need to be go related it does not need to be testing",
    "start": "3758880",
    "end": "3764039"
  },
  {
    "text": "related it can be World related it can be duck related it can be anything",
    "start": "3764039",
    "end": "3769160"
  },
  {
    "text": "related well so this will probably make me some enemies uh but chocolate's kind of nasty is nasty well I have one to say",
    "start": "3769160",
    "end": "3776880"
  },
  {
    "text": "about that you mean American chocolate is nasty because I'm sorry but British chocolate's on point they're different",
    "start": "3776880",
    "end": "3783680"
  },
  {
    "text": "yeah actually milk CH like Hershey's milk chocolate actually I don't know if that's even American or what not that's",
    "start": "3783680",
    "end": "3789079"
  },
  {
    "text": "the only chocolate that I like you know the stuff that people normally think is good like the dark chocolates and whatnot oh no okay that Hershey's",
    "start": "3789079",
    "end": "3795960"
  },
  {
    "text": "chocolate contains no chocolate did you know okay that's probably why I like it pure sugar yeah I don't know what it is",
    "start": "3795960",
    "end": "3803599"
  },
  {
    "text": "don't know what it is it's true American chocolate is weird I feel like Easter's just around the corner",
    "start": "3803599",
    "end": "3809760"
  },
  {
    "text": "what are you going to have for Easter I'll still eat cadberry Easter eggs cuz you know you take the top off that lick",
    "start": "3809760",
    "end": "3815160"
  },
  {
    "text": "all the goodness out of it and then you just kind of stomach the the chocolate that's kind of like you know the crust",
    "start": "3815160",
    "end": "3820480"
  },
  {
    "text": "around a peanut butter and jelly sandwich get that out of the way for the good stuff in the middle well cabri is a",
    "start": "3820480",
    "end": "3826920"
  },
  {
    "text": "whole other situation I am 100% behind cabri I went to the Cab's Factory when I",
    "start": "3826920",
    "end": "3832119"
  },
  {
    "text": "was 12 changed my life forever I am surprised that I am not the size of",
    "start": "3832119",
    "end": "3838319"
  },
  {
    "text": "a whale the amount of chocolate I eat well I should probably share this on go time but whatever too late I had a whole",
    "start": "3838319",
    "end": "3845440"
  },
  {
    "text": "dairy milk chocolate bar like that big like family pack size for breakfast this",
    "start": "3845440",
    "end": "3850640"
  },
  {
    "text": "morning just cuz I fancied it that was a shock I had my coffee and I had my",
    "start": "3850640",
    "end": "3856599"
  },
  {
    "text": "chocolate bar and then I rocked up to our team stand up full of Happiness nice",
    "start": "3856599",
    "end": "3863200"
  },
  {
    "text": "wired ready to go yeah I'm with you on that one actually about chocolate generally um but I do like kind of like",
    "start": "3863200",
    "end": "3872440"
  },
  {
    "text": "dark like fancy if it's fancy kind of chocolate I couldn't eat a full bar of",
    "start": "3872440",
    "end": "3878000"
  },
  {
    "text": "it for breakfast I'm that's something else not",
    "start": "3878000",
    "end": "3882920"
  },
  {
    "text": "psychotic this is not like a regularity this is like a I thought I treat myself this morning right that's a treat so I",
    "start": "3884240",
    "end": "3891279"
  },
  {
    "text": "went for it how did you feel after it very happy I mean I was full of energy I had very productive morning many a",
    "start": "3891279",
    "end": "3897839"
  },
  {
    "text": "meeting that I got what I needed to get done done and then I had a bit of a crash before go time and been pushing",
    "start": "3897839",
    "end": "3905440"
  },
  {
    "text": "through since I do you live a very healthy life",
    "start": "3905440",
    "end": "3911559"
  },
  {
    "text": "John I wish I didn't like chocolate just because I don't like chocolate doesn't mean I don't have other vices like you",
    "start": "3911559",
    "end": "3916799"
  },
  {
    "text": "know Mountain Dew generally you know yeah anything super high in sugar I'm a huge fan of",
    "start": "3916799",
    "end": "3923440"
  },
  {
    "text": "like pure heart candy good stuff Skittles actually like my favorite candy",
    "start": "3923440",
    "end": "3929039"
  },
  {
    "text": "is actually what is it the rock sugar or whatever where you basically dip a string and sugar water and pull it out and it builds up a crystal of just",
    "start": "3929039",
    "end": "3936640"
  },
  {
    "text": "sugar I had those things that you got at Halloween that was just like packs of colored sugar that you had like a a",
    "start": "3936640",
    "end": "3943160"
  },
  {
    "text": "dippy thing that you were supposed to dip in it but I used to just like get rid of the dippy thing and just like lick my finger and just nice that dippy",
    "start": "3943160",
    "end": "3951640"
  },
  {
    "text": "thing was also sugar wasn't it yeah yeah yeah I don't know you got two PES of",
    "start": "3951640",
    "end": "3957039"
  },
  {
    "text": "sugar some fruit is too sweet for me oh okay so I've like really don't have a sweet tooth or tooth for me it's like",
    "start": "3957039",
    "end": "3964920"
  },
  {
    "text": "one of those things where like once I start working out I often do running in the summer I just I can't do as much",
    "start": "3964920",
    "end": "3971319"
  },
  {
    "text": "sugar anymore like I sto craving it because my body's just like you know this does not do well for us when we",
    "start": "3971319",
    "end": "3976920"
  },
  {
    "text": "need to like work out the next day you are miserable so you're just not going to want to eat any of this like highly",
    "start": "3976920",
    "end": "3981960"
  },
  {
    "text": "sugaru so like when I'm not working out it's just like yes give me I will eat an entire pinea ice cream in like one sitting but like now I will like not do",
    "start": "3981960",
    "end": "3989200"
  },
  {
    "text": "that I'll be like I'll have a spoonful now and that that'll be good that's that's it that's good isn't it the complete opposite the chocolate bar was",
    "start": "3989200",
    "end": "3995720"
  },
  {
    "text": "a little bit of a well done cuz I actually went for like a run and when I say a run I mean like 10 minutes on the",
    "start": "3995720",
    "end": "4001319"
  },
  {
    "text": "treadmill and I got back and I was like I really burned some calories this morning Chocolate I really deserve an",
    "start": "4001319",
    "end": "4006520"
  },
  {
    "text": "entire rectangle of chocolate for that wow you made me regret telling you",
    "start": "4006520",
    "end": "4014119"
  },
  {
    "text": "all this I thought we were in a safe space Chris do you have an unpopular",
    "start": "4014119",
    "end": "4019799"
  },
  {
    "text": "opinion that you would like to share oh okay sure here's a hot",
    "start": "4019799",
    "end": "4025640"
  },
  {
    "text": "take o maybe this will actually be un I'm trying to get an actual unpopular thing so I think agile's time is done",
    "start": "4025640",
    "end": "4032640"
  },
  {
    "text": "and over with and we need to move on wait so you think we shouldn't do Agile nope no more agile no more scrum move on",
    "start": "4032640",
    "end": "4039880"
  },
  {
    "text": "no more Sprints how are we going to stay organized on track and meet our kpis and",
    "start": "4039880",
    "end": "4046000"
  },
  {
    "text": "are okay that my product management brain is just going to explode I'm not saying we have nothing I'm saying it's",
    "start": "4046000",
    "end": "4051960"
  },
  {
    "text": "time for us to to figure out something I will say that I have never worked on a",
    "start": "4051960",
    "end": "4057000"
  },
  {
    "text": "team where like scrum specifically like Sprints and story points never went aam where that functions well it just it",
    "start": "4057000",
    "end": "4064079"
  },
  {
    "text": "just never never does MH and I know it works for some people and I don't some",
    "start": "4064079",
    "end": "4069119"
  },
  {
    "text": "very specific circumstances but I just think in general it's like we just do wonky things to try and make the process",
    "start": "4069119",
    "end": "4076039"
  },
  {
    "text": "work and you know it's something that you know a couple people came or a small group of people came up with you know 20",
    "start": "4076039",
    "end": "4083680"
  },
  {
    "text": "years ago and we should probably kind of evolve the way we do things so it's like",
    "start": "4083680",
    "end": "4088920"
  },
  {
    "text": "we don't do things in the way that we did them 20 years ago and I think there's a little bit of an argument too when it gets to what kind of software",
    "start": "4088920",
    "end": "4096719"
  },
  {
    "text": "engineering processes were we're using that led to Agile and how we're doing things differently now and how those two things are rather incompatible with each",
    "start": "4096719",
    "end": "4103040"
  },
  {
    "text": "other but I think the simple thing is just like let's use that Innovation we claim we have so much and and innovate",
    "start": "4103040",
    "end": "4108838"
  },
  {
    "text": "toward something new and please don't use silly an allergies anymore no one trains for anything by sprinting all of",
    "start": "4108839",
    "end": "4115679"
  },
  {
    "text": "the time you take breaks like if you're an athlete and all you do is like work out all the time you will hurt yourself",
    "start": "4115679",
    "end": "4122120"
  },
  {
    "text": "and you will not do well uh and I think that fits with software as well we don't write good software when we don't take breaks so take breaks let's move on from",
    "start": "4122120",
    "end": "4129040"
  },
  {
    "text": "agile and let's do something something new we all jokes aside despite my initi IAL visual reaction you have a point",
    "start": "4129040",
    "end": "4136560"
  },
  {
    "text": "yeah see that's the problem is I keep explaining my unpopular opinions and then they become populars I wouldn't classify as popular in my brain I would",
    "start": "4136560",
    "end": "4143920"
  },
  {
    "text": "classify it as worth a discussion is what I would say if you had said we should go to Waterfall strictly that",
    "start": "4143920",
    "end": "4151318"
  },
  {
    "text": "might be unpopular yeah that would but every single team I've been on it",
    "start": "4151319",
    "end": "4157199"
  },
  {
    "text": "eventually devolves into some form of uncontrolled combon with the pretending of Sprint ceremonies on top of it M but",
    "start": "4157199",
    "end": "4164679"
  },
  {
    "text": "without the whip limits and everything they make pbon work yeah other than on our team obviously John we it perfectly",
    "start": "4164679",
    "end": "4170960"
  },
  {
    "text": "smoothly and Incredibly absolutely I think it's again a bit like",
    "start": "4170960",
    "end": "4176520"
  },
  {
    "text": "with what we said about testing the kind of thing you're doing the Dynamics the",
    "start": "4176520",
    "end": "4181798"
  },
  {
    "text": "people in the team all of that should influence how you operate so anytime you",
    "start": "4181799",
    "end": "4186838"
  },
  {
    "text": "try and have a a framework that you're going to stick to no matter what rigidly and ironically people do do that that",
    "start": "4186839",
    "end": "4193880"
  },
  {
    "text": "with agile um you know I think you you are in trouble it has to be slightly",
    "start": "4193880",
    "end": "4199440"
  },
  {
    "text": "more flexible and the other thing that teams need is you need to trust the people in the team that you can cut out",
    "start": "4199440",
    "end": "4207000"
  },
  {
    "text": "a lot of overhead if you trust the people you're working with you know and",
    "start": "4207000",
    "end": "4212800"
  },
  {
    "text": "you can save a lot of time and some sometimes unfortunately people don't feel like they do trust the people in",
    "start": "4212800",
    "end": "4218360"
  },
  {
    "text": "the team and I think you know that they've got different problems probably bigger problems but yeah I mean",
    "start": "4218360",
    "end": "4224239"
  },
  {
    "text": "again team size I tend to work in kind of quite small teams I really I'm a fan",
    "start": "4224239",
    "end": "4229760"
  },
  {
    "text": "of small teams and everything's a little bit easier when the team's kind of tiny",
    "start": "4229760",
    "end": "4235199"
  },
  {
    "text": "so yeah it probably isn't unpopular with me that one G plus you do explain it so",
    "start": "4235199",
    "end": "4240840"
  },
  {
    "text": "well so yeah they all become popular you're just changing Minds you know when",
    "start": "4240840",
    "end": "4246520"
  },
  {
    "text": "you yeah changing Minds to your pure eloquence and explanations I keep trying",
    "start": "4246520",
    "end": "4252280"
  },
  {
    "text": "for these unpopular things so then I do the poll and it's like 80% popular I keep failing like come on yeah um",
    "start": "4252280",
    "end": "4260520"
  },
  {
    "text": "awesome I think we're actually a time uh regrettably I've absolutely loved chatting to you all it's been so fun uh",
    "start": "4260520",
    "end": "4267800"
  },
  {
    "text": "hosting my first go Time episode um I'm excited to do many more and thanks again",
    "start": "4267800",
    "end": "4274400"
  },
  {
    "text": "see you all soon thank you thanks for having me",
    "start": "4274400",
    "end": "4279960"
  },
  {
    "text": "on shout out to Angelica for your first time hosting excellent work my friend",
    "start": "4282560",
    "end": "4288120"
  },
  {
    "text": "she has another episode coming up it's called what makes wonderful workshops",
    "start": "4288120",
    "end": "4293280"
  },
  {
    "text": "don't forget we have a back catalog for you to dig through it lives atg go time. FM there you'll find our recommended",
    "start": "4293280",
    "end": "4299639"
  },
  {
    "text": "episodes the most popular listener episodes and more go time is produced by Jared Santo with music by our beat",
    "start": "4299639",
    "end": "4306920"
  },
  {
    "text": "freaking residents breake master cylinder we are brought to you by awesome sponsors special thanks to fastly launch darkley and Leno next time",
    "start": "4306920",
    "end": "4315239"
  },
  {
    "text": "on go time a special episode Chris Brando will be delivering his Ultimate Guide to crafting your gophercon",
    "start": "4315239",
    "end": "4321679"
  },
  {
    "text": "proposals stay tuned for that one it's coming at you next [Music]",
    "start": "4321679",
    "end": "4342480"
  },
  {
    "text": "week [Music]",
    "start": "4342480",
    "end": "4358020"
  },
  {
    "text": "King",
    "start": "4360000",
    "end": "4363000"
  }
]