[
  {
    "text": "bandwidth for change log is provided by fastly learn more at fastly.com we move",
    "start": "40",
    "end": "5520"
  },
  {
    "text": "fast and fix things here at change log because of rbar check them out at roar.com and we're hosted on linode",
    "start": "5520",
    "end": "11480"
  },
  {
    "text": "cloud servers head to lin.com changelog this episode is brought to you",
    "start": "11480",
    "end": "17199"
  },
  {
    "text": "by digital ocean digital ocean makes it super simple to launch a kubernetes cluster in minutes the digital ocean",
    "start": "17199",
    "end": "24039"
  },
  {
    "text": "kubernetes platform empowers developers to launch their containerized applications into a managed production",
    "start": "24039",
    "end": "30160"
  },
  {
    "text": "cluster without having to maintain or configure the underlying infrastructure they seamlessly integrate everything",
    "start": "30160",
    "end": "36520"
  },
  {
    "text": "with the rest of the digital ocean stack including low balancers firewalls object storage spaces and block storage volumes",
    "start": "36520",
    "end": "44200"
  },
  {
    "text": "they even have built-in support for public and private image Registries like dockerhub and qu. developers can now run",
    "start": "44200",
    "end": "51559"
  },
  {
    "text": "and scale container-based workloads with ease with the digital ocean platform learn more get started for free with a",
    "start": "51559",
    "end": "56600"
  },
  {
    "text": "$50 credit at do. co/ changelog again again do. co/",
    "start": "56600",
    "end": "62990"
  },
  {
    "text": "[Music]",
    "start": "62990",
    "end": "66400"
  },
  {
    "text": "[Music] changelog welcome to go time a podcast",
    "start": "72650",
    "end": "79159"
  },
  {
    "text": "featuring a diverse panel and special guests discussing Cloud infrastructure distributed systems microservices",
    "start": "79159",
    "end": "85520"
  },
  {
    "text": "kubernetes Docker oh and also go we record live every Tuesday Tuesday at 3:00 p.m. Eastern noon Pacific join the",
    "start": "85520",
    "end": "92520"
  },
  {
    "text": "community slack with us in real time during the show in the go time FM channel in go for slack follow us on",
    "start": "92520",
    "end": "97960"
  },
  {
    "text": "Twitter we atg gotime FM listen live at Chang law.com or subscribe at changel",
    "start": "97960",
    "end": "103759"
  },
  {
    "text": "law.com gotime and now on to the",
    "start": "103759",
    "end": "108240"
  },
  {
    "text": "show hello and welcome to go time I'm Matt ryer today we're talking about",
    "start": "109479",
    "end": "115240"
  },
  {
    "text": "graph databases joining me it's Johnny borico hello Hello Johnny hello man",
    "start": "115240",
    "end": "122039"
  },
  {
    "text": "we're also joined by Jana Bogen hello Jana hello how are you good welcome back",
    "start": "122039",
    "end": "128440"
  },
  {
    "text": "it's been a while it's been quite a while yes well it's good to have you back we're also joined by a special",
    "start": "128440",
    "end": "134840"
  },
  {
    "text": "guest it's only Frances campoy hello Frances hey how's it going how are you",
    "start": "134840",
    "end": "141400"
  },
  {
    "text": "pretty good that was a decent pronunciation of my name oh EXC thank you that's means a lot um well I'd like",
    "start": "141400",
    "end": "148840"
  },
  {
    "text": "to start with one of the first questions that gets asked every time I mention you is from uh pontis on slack asks when is",
    "start": "148840",
    "end": "157959"
  },
  {
    "text": "just for Funk coming back uh eventually great it's eventually cool",
    "start": "157959",
    "end": "166480"
  },
  {
    "text": "eventually yeah eventually com back maybe next year maybe do you need do you need help I need yeah I need extra time",
    "start": "166480",
    "end": "174800"
  },
  {
    "text": "that's the only thing I need no but now I finally moved to a new house and everything and settling down and I will",
    "start": "174800",
    "end": "181040"
  },
  {
    "text": "have a little studio so I'll be able to start again I now I just need the energy",
    "start": "181040",
    "end": "186239"
  },
  {
    "text": "so you know couple months couple months of relaxing and then back great for anyone who doesn't know which probably",
    "start": "186239",
    "end": "192599"
  },
  {
    "text": "nobody there's a great video series that Frances does called just for Funk um",
    "start": "192599",
    "end": "198840"
  },
  {
    "text": "which and I'm fine that you picked that name I suggested go Funk",
    "start": "198840",
    "end": "204760"
  },
  {
    "text": "yourself I didn't like that one yeah you know but back then I used to work at Google not sure how that H would have",
    "start": "205000",
    "end": "211840"
  },
  {
    "text": "been accepted Funk that F",
    "start": "211840",
    "end": "217760"
  },
  {
    "text": "that one that got rejected So today we're gonna we're",
    "start": "217760",
    "end": "223400"
  },
  {
    "text": "going to talk about graph databases and this is a a really interesting area and it's feels very new and we're going to",
    "start": "223400",
    "end": "232040"
  },
  {
    "text": "dig into that a little bit more but maybe we could start off with a simple overview Frances of like what you're",
    "start": "232040",
    "end": "239439"
  },
  {
    "text": "doing doing and and then we can go into what what actually is a graph database",
    "start": "239439",
    "end": "244680"
  },
  {
    "text": "yeah so uh I mean I can talk a little bit about how I got involved with grab databases so um after I left Google I",
    "start": "244680",
    "end": "252280"
  },
  {
    "text": "joined this company Source where uh I started doing code analysis and when you",
    "start": "252280",
    "end": "258720"
  },
  {
    "text": "think about it like if you think about how you pass code you end up with a with a tree right uh syntactic trick uh and",
    "start": "258720",
    "end": "265320"
  },
  {
    "text": "the idea is once you start adding annotations on top like this function is called in the code in there or this",
    "start": "265320",
    "end": "271199"
  },
  {
    "text": "variable was declared up there or this is the type of whatever uh you start having like a graph right and then you",
    "start": "271199",
    "end": "277919"
  },
  {
    "text": "think about how are you going to store this and you look up relational databases and uh it's a bad match uh it",
    "start": "277919",
    "end": "284560"
  },
  {
    "text": "doesn't really work is super hard to do and as soon as you start adding more things it just breaks the schema needs",
    "start": "284560",
    "end": "291120"
  },
  {
    "text": "to be very um it's it's to strict right so then you go into no SQL databases and",
    "start": "291120",
    "end": "297080"
  },
  {
    "text": "then uh you have the issue of how much do you replicate right like do you want",
    "start": "297080",
    "end": "302520"
  },
  {
    "text": "to replicate the same information over a bunch of times for performance but then you need to take into account the",
    "start": "302520",
    "end": "308919"
  },
  {
    "text": "consistency or do you want to put everything into little pieces but then it's going to be super slow and uh",
    "start": "308919",
    "end": "315880"
  },
  {
    "text": "that's when I started looking into graphity bases and you know you're right it sounds like it's somehow new um that",
    "start": "315880",
    "end": "322120"
  },
  {
    "text": "said how how old do you think Neo for J is O that's a good one Johnny what do",
    "start": "322120",
    "end": "328319"
  },
  {
    "text": "you think I'd say at least 10 years it is if not mistaken 19 years old wow wow",
    "start": "328319",
    "end": "337120"
  },
  {
    "text": "yeah so you know they've been they've been going at it for a while uh near drink yeah I mean in Spain it can",
    "start": "337120",
    "end": "345280"
  },
  {
    "text": "definitely definitely drink yeah yeah no and so so it's not a",
    "start": "345280",
    "end": "351639"
  },
  {
    "text": "completely new technology but uh you know it's it's something that has been evolving over time little by little and",
    "start": "351639",
    "end": "357800"
  },
  {
    "text": "and I started looking around and there's not that many graph databases um actually like pure graph databases",
    "start": "357800",
    "end": "364280"
  },
  {
    "text": "databases that have a graph layer there's a bunch of them there's uh there's you know like a a bunch of",
    "start": "364280",
    "end": "370400"
  },
  {
    "text": "different competitors Etc but the problem is that storing things as a graph is actually something not that",
    "start": "370400",
    "end": "377440"
  },
  {
    "text": "easy to do and it's something that brings a lot of flexibility because the idea is that instead of having to you",
    "start": "377440",
    "end": "383520"
  },
  {
    "text": "know it's like if you think about a graph let's say you know uh Twitter the people that you follow and like the",
    "start": "383520",
    "end": "389479"
  },
  {
    "text": "tweets and like the tags and hashtags and all that stuff right if if you store that in a graph database the same way",
    "start": "389479",
    "end": "396360"
  },
  {
    "text": "you would draw it in a in a whiteboard that's what you store right you store noes and you st relationships and that's",
    "start": "396360",
    "end": "403039"
  },
  {
    "text": "pretty much it uh as soon as you need to start thinking about oh how do I model",
    "start": "403039",
    "end": "408120"
  },
  {
    "text": "this so it fits my database you are adding complexity from the point of view of like the developer like you need to",
    "start": "408120",
    "end": "414360"
  },
  {
    "text": "think about these things right which which is an important cost people do not take that into account but you know",
    "start": "414360",
    "end": "419520"
  },
  {
    "text": "complexity that you add to your system means that once you you're going to start debugging it's going to be harder",
    "start": "419520",
    "end": "424599"
  },
  {
    "text": "to debug because there's extra layers of abstraction uh and then on the other side is also performance- wise uh the",
    "start": "424599",
    "end": "430960"
  },
  {
    "text": "way you're going to be able to retrieve things if you need to do Transformations like if you think about a relational",
    "start": "430960",
    "end": "437720"
  },
  {
    "text": "database and and we have like people that follow people right if I tell you oh find all the people that F like uh",
    "start": "437720",
    "end": "445280"
  },
  {
    "text": "all the people that I follow and then they're followers and then they followers or something like that right like you're going to go quite deep uh",
    "start": "445280",
    "end": "450879"
  },
  {
    "text": "it's going to be a bunch of different requests and this is what people call the N plus one problem the idea of if I",
    "start": "450879",
    "end": "457360"
  },
  {
    "text": "fetch something and then I want to fetch something related to those things that I just fetched you going have to do a",
    "start": "457360",
    "end": "463360"
  },
  {
    "text": "query get with start with a that data set and then for every single item in the data set do one more query and this",
    "start": "463360",
    "end": "470440"
  },
  {
    "text": "keep keeps multiplying so it doesn't really scale so you know it's like the idea of GRA dat basis is solving that",
    "start": "470440",
    "end": "476039"
  },
  {
    "text": "problem specifically and uh so I started looking around and uh I decided to join",
    "start": "476039",
    "end": "481840"
  },
  {
    "text": "the graph partly you know uh the raining go which is kind of cool I think that uh people might my let go in this in this",
    "start": "481840",
    "end": "488720"
  },
  {
    "text": "podcast and also it's completely open source it's distributed and it's also in",
    "start": "488720",
    "end": "494280"
  },
  {
    "text": "San Francisco which is nice because I didn't want to travel that much so so that's interesting then and I",
    "start": "494280",
    "end": "500240"
  },
  {
    "text": "want to talk more about this later but you said it's dist it's distributed y um because my so I as I",
    "start": "500240",
    "end": "507080"
  },
  {
    "text": "understood it one of the things that makes graph databases quick is that it's kind of all stored in the format that it",
    "start": "507080",
    "end": "515120"
  },
  {
    "text": "like you don't it doesn't it doesn't get transformed very much does it it's kind of stored in the format that that you",
    "start": "515120",
    "end": "521560"
  },
  {
    "text": "then use it with does that make sense yeah yeah so the the whole idea like uh there's this term that uh people like to",
    "start": "521560",
    "end": "528680"
  },
  {
    "text": "throw around even though most people do not really understand what it means it's called index free agency and index free",
    "start": "528680",
    "end": "534839"
  },
  {
    "text": "adjacency just means that when you actually uh there's a very good metaphor that I like to use so you know uh in",
    "start": "534839",
    "end": "542120"
  },
  {
    "text": "index free adjacency uh when I'm so imagine that I I'm in Frances and I'm",
    "start": "542120",
    "end": "548279"
  },
  {
    "text": "trying to go to someone's house I just know their address and go there right that is index free agency I you just",
    "start": "548279",
    "end": "554680"
  },
  {
    "text": "have all the information for the beginning while in normal databases the way it's going to work is I have a key",
    "start": "554680",
    "end": "560120"
  },
  {
    "text": "that allows me to go check it out where this information is and then you go find it right so it's more like I go to some",
    "start": "560120",
    "end": "566760"
  },
  {
    "text": "place like phone book or something we're going to find this is the name of the person I can find the address and then go get it right so that extra step that",
    "start": "566760",
    "end": "573839"
  },
  {
    "text": "that is a little bit the main difference of how things are stored but at the end of the day uh the way we store data it's",
    "start": "573839",
    "end": "580560"
  },
  {
    "text": "key value right like it's just key Value Store um that is extra fancy with a",
    "start": "580560",
    "end": "586680"
  },
  {
    "text": "bunch of things on top and raft raft consensus protocols and things like that right but the way we store things at the",
    "start": "586680",
    "end": "592839"
  },
  {
    "text": "end of the day just key values and the distributive part of things is the fact",
    "start": "592839",
    "end": "598399"
  },
  {
    "text": "that you know many databases uh neo4j is one example they in order to be efficient they need",
    "start": "598399",
    "end": "604640"
  },
  {
    "text": "to store everything in the same machine right uh a dgraph what we do is instead",
    "start": "604640",
    "end": "610000"
  },
  {
    "text": "we we partition data set by by the predicate right so say there are many predicates like name or age or friends",
    "start": "610000",
    "end": "617760"
  },
  {
    "text": "those that information is separate so we're going to store it in potentially different machines not necessarily like",
    "start": "617760",
    "end": "622880"
  },
  {
    "text": "you can run off everything in this same machine but it could be potentially multiple machines and the idea is that",
    "start": "622880",
    "end": "628079"
  },
  {
    "text": "by by uh separating the data like that no matter how much data you're fetching",
    "start": "628079",
    "end": "633880"
  },
  {
    "text": "uh the number of Phone of phone calls I guess going say the the number of network request that you're sending is",
    "start": "633880",
    "end": "640519"
  },
  {
    "text": "proportional to the number of predicates that you're fetching not the amount of data so it scals really well otherwise",
    "start": "640519",
    "end": "647000"
  },
  {
    "text": "if you end up partition any in any other way at least the ones that we have tried you end up with as you go with more data",
    "start": "647000",
    "end": "653440"
  },
  {
    "text": "you end up having to send queries to all of the computers that are involved and then that kills performance again",
    "start": "653440",
    "end": "659560"
  },
  {
    "text": "can I ask a more fundamental question because I think I'm super unqualified to be on this podcast so",
    "start": "659560",
    "end": "666160"
  },
  {
    "text": "uh so compared to for example like column based DBS like what is the overall you know underlying storage",
    "start": "666160",
    "end": "672560"
  },
  {
    "text": "structure for a graph DB in in the same note like let's say like everything is just like on one machine yeah so uh I",
    "start": "672560",
    "end": "680240"
  },
  {
    "text": "mean it's kind of cool because we use an open source project that was also created by dgra it's called Badger uh",
    "start": "680240",
    "end": "685320"
  },
  {
    "text": "and it's the thing it's the project that gives name to our mascot which is Badger dig Badger uh and this this just a key",
    "start": "685320",
    "end": "693839"
  },
  {
    "text": "value store right so uh you're storing uh it actually works with uh so it's a",
    "start": "693839",
    "end": "699720"
  },
  {
    "text": "key value store so you could think about like you know ssds and things like that like sorted string tables and all that",
    "start": "699720",
    "end": "705079"
  },
  {
    "text": "stuff that we use at Google but the idea is that from a high high level point of",
    "start": "705079",
    "end": "711120"
  },
  {
    "text": "view you just have keys and values the way this is actually implemented internally it's an",
    "start": "711120",
    "end": "717040"
  },
  {
    "text": "lstm which it's a log structure tree ah what it was uh log structure",
    "start": "717040",
    "end": "725920"
  },
  {
    "text": "tree mer merge yes merge tree it's it's a I I always mix it with lsdm with long",
    "start": "725920",
    "end": "733360"
  },
  {
    "text": "shortterm memory which is an AI thing so it's it's just I mix everything uh but",
    "start": "733360",
    "end": "738920"
  },
  {
    "text": "yeah like this structure what allows you to do is to have a very good insert time and also very good uh retrial time so",
    "start": "738920",
    "end": "746079"
  },
  {
    "text": "it's just you know a different kind of tree that we use and uh if you ever heard about Rox DB it's somehow similar",
    "start": "746079",
    "end": "753240"
  },
  {
    "text": "to Rox DB uh the two biggest difference is one the values are not stored inside",
    "start": "753240",
    "end": "758680"
  },
  {
    "text": "of the tree which means that it's more efficient from the point of view of storage and also uh when you're",
    "start": "758680",
    "end": "764120"
  },
  {
    "text": "iterating over Keys is much faster because you don't need to fix the values and then the second one which is more",
    "start": "764120",
    "end": "769399"
  },
  {
    "text": "important it's actually ring go and uh that for us was very important because otherwise we had to use SEO and SEO is",
    "start": "769399",
    "end": "776279"
  },
  {
    "text": "great but not really necessarily performant so it was actually important to be able to to have something that was",
    "start": "776279",
    "end": "782920"
  },
  {
    "text": "working natively go but yeah it's just a fancy key Value Store at the end so one",
    "start": "782920",
    "end": "788720"
  },
  {
    "text": "of the examples we've already sort of touched on um is sort of the the social graph right because that's an easy sort",
    "start": "788720",
    "end": "795160"
  },
  {
    "text": "of thing to wrap your head around I'm interested to hear what some of the basically The Uncommon sort of examples",
    "start": "795160",
    "end": "801040"
  },
  {
    "text": "that you've come across right or or dgraph has come across maybe it's customer based basically for for for using this type of Technology what is it",
    "start": "801040",
    "end": "807519"
  },
  {
    "text": "really really good at Beyond just social graph so yeah social graph is the traditional example because as soon as",
    "start": "807519",
    "end": "813480"
  },
  {
    "text": "you talk you know about graphs people's like oh you know Facebook and Twitter and all that stuff uh which is great",
    "start": "813480",
    "end": "819399"
  },
  {
    "text": "like it actually works PR well for those use cases uh but in general uh that is a",
    "start": "819399",
    "end": "824920"
  },
  {
    "text": "kind uh a class of uh knowledge graphs right like graphs where you storing information uh so for instance dgraph uh",
    "start": "824920",
    "end": "832360"
  },
  {
    "text": "actually comes from technology developed by Google uh I think that internally the project was also called degraph which is",
    "start": "832360",
    "end": "838519"
  },
  {
    "text": "weird weird but it's okay because Google never uses the internal name externally or something like that so it it was cool",
    "start": "838519",
    "end": "844759"
  },
  {
    "text": "but yeah like it is the same technology and the idea is when you're storing information for you know like movies and",
    "start": "844759",
    "end": "850880"
  },
  {
    "text": "actors and all that stuff like if you think about the the I think it's called one box uh which is when you search",
    "start": "850880",
    "end": "856880"
  },
  {
    "text": "something and you have on the right side of the search like this extra information telling you like oh the",
    "start": "856880",
    "end": "863120"
  },
  {
    "text": "actor and the movies they've been in and stuff like that that actually Serve by a graph right so the idea is in order to",
    "start": "863120",
    "end": "869639"
  },
  {
    "text": "store that information and being able to retrieve things quite easily graphs are the best way to do it but then uh on top",
    "start": "869639",
    "end": "876160"
  },
  {
    "text": "of that that Knowledge Graph could be something that changes really fast we've seen people doing knowledge graphs on or",
    "start": "876160",
    "end": "882440"
  },
  {
    "text": "it's more like a visibility layer more than anything on top of kubernetes right so you have if you think about",
    "start": "882440",
    "end": "889199"
  },
  {
    "text": "kubernetes you have services and and pods and all of these things they're all related in many different ways right",
    "start": "889199",
    "end": "895600"
  },
  {
    "text": "like there are tax there are like traffic and like service sending things around uh you can visualize that inside",
    "start": "895600",
    "end": "902320"
  },
  {
    "text": "of uh kubernetes inside of a a graph database and then query things like hey",
    "start": "902320",
    "end": "907839"
  },
  {
    "text": "what are the things that could impact this service right if this service goes down or the other way around right like if this service goes down what pieces of",
    "start": "907839",
    "end": "914639"
  },
  {
    "text": "my system will be impacted and that is a graph problem uh there is actually an open source project created by VMware",
    "start": "914639",
    "end": "921000"
  },
  {
    "text": "it's called um Purser p r SE Purser I",
    "start": "921000",
    "end": "926279"
  },
  {
    "text": "think but yeah uh and there's many others there's things like actually Geographic",
    "start": "926279",
    "end": "931480"
  },
  {
    "text": "graphs so uh we we have Geo uh uh geolocation so you can do things like",
    "start": "931480",
    "end": "937720"
  },
  {
    "text": "funel of the hotels that are uh you know at less than 50 miles from downtown of",
    "start": "937720",
    "end": "945240"
  },
  {
    "text": "San Francisco and then from there do more craft stuff so you can you can go",
    "start": "945240",
    "end": "950600"
  },
  {
    "text": "quite deep into um finding things about your data set that otherwise it's just",
    "start": "950600",
    "end": "957000"
  },
  {
    "text": "very hard right cuz if you think about but all of these queries you can you could definitely do them anywhere right like you could do them on a on a normal",
    "start": "957000",
    "end": "964160"
  },
  {
    "text": "database on a relational database the problem is that it's going to be way way slower so it's just I don't know if you",
    "start": "964160",
    "end": "970800"
  },
  {
    "text": "ever use a big query uh with big query you end up like writing queries that run",
    "start": "970800",
    "end": "975959"
  },
  {
    "text": "across terabytes of data and it's not about the fact that it's easier to write it's just that short developer Loop uh",
    "start": "975959",
    "end": "983160"
  },
  {
    "text": "that uh it's just much better you get the feedback and you keep on playing uh while you know if you need to wait for",
    "start": "983160",
    "end": "988720"
  },
  {
    "text": "minutes it's going to be way way slower and more painful and then yeah one other data set that uh one other uh use case",
    "start": "988720",
    "end": "995440"
  },
  {
    "text": "that we see very often is since there's no need for a schema you can actually integrate bunch of different data sets",
    "start": "995440",
    "end": "1002040"
  },
  {
    "text": "together very easily so data set integration or data set unification uh happens pretty often so if you see like",
    "start": "1002040",
    "end": "1008959"
  },
  {
    "text": "imagine you have a really large you know telom company that has been acquiring",
    "start": "1008959",
    "end": "1015040"
  },
  {
    "text": "different companies and for every single one of those companies acquire probably there's a user base right there's",
    "start": "1015040",
    "end": "1021120"
  },
  {
    "text": "there's an account database with a bunch of different things and what you want to do is being able to integrate all of",
    "start": "1021120",
    "end": "1026678"
  },
  {
    "text": "those systems together into one uh graph databases are great for that if you think about how would you do it with a",
    "start": "1026679",
    "end": "1033280"
  },
  {
    "text": "relational database the number of foreign keys that are going to be flying around is going to be pain right so that",
    "start": "1033280",
    "end": "1040280"
  },
  {
    "text": "kind of things is also very useful it's very simple it works really well so you talked earlier about indexes and this is",
    "start": "1040280",
    "end": "1046640"
  },
  {
    "text": "kind of uh doesn't have those that same kind of pattern because like in I was playing around recently with fir store",
    "start": "1046640",
    "end": "1053720"
  },
  {
    "text": "which is the Firebase uh schem ofus data and if you if you do",
    "start": "1053720",
    "end": "1059480"
  },
  {
    "text": "queries um that that you haven't done before you actually get an error and it says I",
    "start": "1059480",
    "end": "1065840"
  },
  {
    "text": "can't serve this because there's no index that matches the order of those fields or whatever the filter is you're",
    "start": "1065840",
    "end": "1072000"
  },
  {
    "text": "doing and so you kind of have to know in advance what you're going to be asking",
    "start": "1072000",
    "end": "1077880"
  },
  {
    "text": "of this database is that different in graph databases by because of its nature",
    "start": "1077880",
    "end": "1083640"
  },
  {
    "text": "so n naturally uh the whole ad indexes are not necessary to Traverse",
    "start": "1083640",
    "end": "1089480"
  },
  {
    "text": "relationships right so if I start from a given node going around that node will not requireing an index the place where",
    "start": "1089480",
    "end": "1096480"
  },
  {
    "text": "you might need an index is to find that first node the whole idea is that while you will not need indexes to Traverse",
    "start": "1096480",
    "end": "1103200"
  },
  {
    "text": "relationships you might still need indexes to find those first initial nodes that you're going to use to start your your uh traversal and uh there's a",
    "start": "1103200",
    "end": "1111400"
  },
  {
    "text": "bunch of different things like for instance if you want to find all of the orders all of the products that have",
    "start": "1111400",
    "end": "1117600"
  },
  {
    "text": "been ordered by a given user right all of that does not require an index but actually finding the user from their",
    "start": "1117600",
    "end": "1125000"
  },
  {
    "text": "username that will require one so you do have indexes right and those indexes",
    "start": "1125000",
    "end": "1130280"
  },
  {
    "text": "need need to be built so they will not be built until you you ask for them but uh the idea if you're using dgraph I'm",
    "start": "1130280",
    "end": "1136720"
  },
  {
    "text": "actually not that sure about all the all the graph datab basis but for dgraph at least the way it works is that you start",
    "start": "1136720",
    "end": "1141799"
  },
  {
    "text": "just using you start inserting data you don't care about the schema but there's a schema there's a schema that is being",
    "start": "1141799",
    "end": "1147880"
  },
  {
    "text": "created as you go and then if you try to do a query that requires an index and it's not there it will indeed fail and",
    "start": "1147880",
    "end": "1154280"
  },
  {
    "text": "tell you hey you need to build this you click a button now you have an index and then the idea is that while you're",
    "start": "1154280",
    "end": "1160200"
  },
  {
    "text": "developing that scheme is going to evolve over time and then at the end that schemat something that you're",
    "start": "1160200",
    "end": "1165280"
  },
  {
    "text": "actually going to put in your source code right say okay this is the schema that I'm going to be using and then when",
    "start": "1165280",
    "end": "1170320"
  },
  {
    "text": "you set it in production normally what I recommend is uh there's a strict mode for mutation so when you putting new",
    "start": "1170320",
    "end": "1176679"
  },
  {
    "text": "data you can actually say hey if there's if that data does not follow the schema that I already have reject it right it",
    "start": "1176679",
    "end": "1183679"
  },
  {
    "text": "it's a much safer way to do it uh for development I think that free like schema schema free schema less uh",
    "start": "1183679",
    "end": "1191120"
  },
  {
    "text": "databases is great but then as soon as you get in production i' be a little bit more careful with that I had the same",
    "start": "1191120",
    "end": "1197600"
  },
  {
    "text": "thing I used to do do mongod DB stuff and it was the same like when I first had I couldn't believe that I didn't",
    "start": "1197600",
    "end": "1204039"
  },
  {
    "text": "need to think about schemas I can just do anything and actually documents don't even have to look the same or even",
    "start": "1204039",
    "end": "1210559"
  },
  {
    "text": "similar and that freedom just felt so powerful then once I'd built a few things I realized I could really use",
    "start": "1210559",
    "end": "1217440"
  },
  {
    "text": "some errors about now yeah so the idea for us right is that you have you can",
    "start": "1217440",
    "end": "1223919"
  },
  {
    "text": "start with no schema at all but we also have a type system on top so the idea is you start adding things and then you're",
    "start": "1223919",
    "end": "1230280"
  },
  {
    "text": "going to say oh this node has this type and this type is supposed to have these fields it doesn't mean they have the",
    "start": "1230280",
    "end": "1237200"
  },
  {
    "text": "fields it just means that they should right so if you have a person you could say it's supposed to have a name in an H",
    "start": "1237200",
    "end": "1243559"
  },
  {
    "text": "so then when you're fetching things you're going to say fetch all the fields of type person or things like that right",
    "start": "1243559",
    "end": "1248799"
  },
  {
    "text": "so you can actually have a type system on top and that is something completely optional right so you can start from Z",
    "start": "1248799",
    "end": "1255080"
  },
  {
    "text": "paying zero attention to the data you're storing in your database see how it goes end up with a schema and then from that",
    "start": "1255080",
    "end": "1261480"
  },
  {
    "text": "schema that contains all of the kinds all of the predicates or all the kind of information that you stored name age",
    "start": "1261480",
    "end": "1267320"
  },
  {
    "text": "friends all of those things then you're going to go and say okay is this actually the type that I want do I need",
    "start": "1267320",
    "end": "1272600"
  },
  {
    "text": "indexes on this so like a username I'm going to find exact I'm going to use hash for to find these things and then",
    "start": "1272600",
    "end": "1278679"
  },
  {
    "text": "group those in into types and then you can start doing more like Advanced things and the cool thing is that once",
    "start": "1278679",
    "end": "1284320"
  },
  {
    "text": "you get there then you can present that uh we have a graph C layer so then you can actually start sting sending queries",
    "start": "1284320",
    "end": "1290600"
  },
  {
    "text": "in graphql to your graph database which makes it so you know front and Engineers are much much happier when you tell them",
    "start": "1290600",
    "end": "1297039"
  },
  {
    "text": "that they can use graphql instead of having to learn a new language one [Music]",
    "start": "1297039",
    "end": "1312200"
  },
  {
    "text": "more how often do you think about internal tooling I'm talking about the back office apps the tool the customer",
    "start": "1312200",
    "end": "1318840"
  },
  {
    "text": "service team uses to access your databases the S3 upload you built last year for the marketing team that quick",
    "start": "1318840",
    "end": "1325520"
  },
  {
    "text": "Firebase admin panel that let you monitor key kpis and maybe even the tool",
    "start": "1325520",
    "end": "1330640"
  },
  {
    "text": "that your data science team had together so they can provide custom ad spend insights literally every line of",
    "start": "1330640",
    "end": "1336440"
  },
  {
    "text": "business relies upon internal tooling but if I'm being honest I don't know many Engineers out there who enjoy",
    "start": "1336440",
    "end": "1342279"
  },
  {
    "text": "building internal tools let alone getting them excited about maintaining or even supporting them and this is",
    "start": "1342279",
    "end": "1348840"
  },
  {
    "text": "where retool comes in companies like door Dash brex plaid and even Amazon",
    "start": "1348840",
    "end": "1354159"
  },
  {
    "text": "they use retool to build internal tooling super fast the idea is that almost all internal tools look the same",
    "start": "1354159",
    "end": "1360720"
  },
  {
    "text": "they're made of tables dropdowns buttons text inputs and retool gives you a point click drag and drop interface that makes",
    "start": "1360720",
    "end": "1367760"
  },
  {
    "text": "it super simple to build these types of interfaces in hours not days retool connects to any database or API for",
    "start": "1367760",
    "end": "1374760"
  },
  {
    "text": "example to pull data from postgress just write a sequence query and drag and drop a table onto the canvas and if you want",
    "start": "1374760",
    "end": "1381760"
  },
  {
    "text": "to search across those fields add a search input bar and update your query save it share it it's too easy reto is",
    "start": "1381760",
    "end": "1389720"
  },
  {
    "text": "built by Engineers explicitly for engineers and for those concerned about data security retool can even be set up",
    "start": "1389720",
    "end": "1396159"
  },
  {
    "text": "on premise in about 15 minutes using Docker kubernetes or Heroku learn more",
    "start": "1396159",
    "end": "1401200"
  },
  {
    "text": "and try it free at ret.com changelog again ret.com",
    "start": "1401200",
    "end": "1406880"
  },
  {
    "text": "changelog [Music]",
    "start": "1406880",
    "end": "1421940"
  },
  {
    "text": "is there any additional cost of um going completely simulus because you know the",
    "start": "1423440",
    "end": "1428640"
  },
  {
    "text": "indexes are going to be effective and like how rebuilding the index kind of works if you change the schema is this",
    "start": "1428640",
    "end": "1435960"
  },
  {
    "text": "one of the reasons that like on production you want to actually lock this lock the schem out so not necess I'd say uh so the idea is that you can",
    "start": "1435960",
    "end": "1443919"
  },
  {
    "text": "change your scheme as you go right like it's s fine uh if you are a schema if you're an index to something that didn't",
    "start": "1443919",
    "end": "1450000"
  },
  {
    "text": "have an index it will be computer on the Fly and it's fine it's really fast also but if you have terabytes of data it",
    "start": "1450000",
    "end": "1455840"
  },
  {
    "text": "might take a couple minutes during those minutes you will not be able to change your data you will be able to only",
    "start": "1455840",
    "end": "1461000"
  },
  {
    "text": "retrieve data but not do mutations right uh which is fine but the idea is while",
    "start": "1461000",
    "end": "1466360"
  },
  {
    "text": "you're doing the development you're actually working normally with a smaller data set and at that point it's great because then you can click and it's",
    "start": "1466360",
    "end": "1472559"
  },
  {
    "text": "basically instantaneous right so while you're developing that developer experience of schales I really like it",
    "start": "1472559",
    "end": "1478880"
  },
  {
    "text": "right like it's somehow like when you're writing in a you're writing code and you're writing in Python the fact that",
    "start": "1478880",
    "end": "1485240"
  },
  {
    "text": "you can just put things together and it just works like that is great but at the same time when I'm going to production I",
    "start": "1485240",
    "end": "1491080"
  },
  {
    "text": "want to have a little bit more like rigidity and make sure that the schema is working for me so I'm going to start",
    "start": "1491080",
    "end": "1497159"
  },
  {
    "text": "adding things things that will make it so if I do something wrong which is totally possible I will be I will be",
    "start": "1497159",
    "end": "1503440"
  },
  {
    "text": "notified right some error even if it's just a log or warning or something like that is much better than silently",
    "start": "1503440",
    "end": "1509720"
  },
  {
    "text": "failing right so that's a little bit the idea of of why I want like I like the schema less and it's super useful but",
    "start": "1509720",
    "end": "1517080"
  },
  {
    "text": "once I'm in production I rather be you know it's like I rather be right and go",
    "start": "1517080",
    "end": "1522320"
  },
  {
    "text": "with a decent type system that be riding C uh that and I will end up having weird",
    "start": "1522320",
    "end": "1527840"
  },
  {
    "text": "things happening if I'm do something wrong right I have zero trust in me it really happened to me when I was working",
    "start": "1527840",
    "end": "1534159"
  },
  {
    "text": "like uh with you know document DVS um since there's no schema I would just like end up like having all these like",
    "start": "1534159",
    "end": "1540520"
  },
  {
    "text": "embedded you know types like embedded like objects um so you can just like end",
    "start": "1540520",
    "end": "1546080"
  },
  {
    "text": "up like just really doing a lot of things wrong and like um if especially like the references are like referring",
    "start": "1546080",
    "end": "1552520"
  },
  {
    "text": "like large objects or whatever everything kind of like just gets into the database so it's kind of nice to have that like option to you know",
    "start": "1552520",
    "end": "1559279"
  },
  {
    "text": "restrict it to a schema yeah I've I've had issues where uh after debugging for",
    "start": "1559279",
    "end": "1564760"
  },
  {
    "text": "10 minutes I realized that the the data I was storing had a typo in the name of the field and that took me forever so",
    "start": "1564760",
    "end": "1572320"
  },
  {
    "text": "you know I was like that is the kind of thing I just don't want it to happen I just if I can avoid that much better for",
    "start": "1572320",
    "end": "1577960"
  },
  {
    "text": "me so yeah that's that's why like having a schema that is that optionally enforced makes a lot of sense yeah I'm",
    "start": "1577960",
    "end": "1586039"
  },
  {
    "text": "trying to wrap my relational modeling head around sort of not having to have a",
    "start": "1586039",
    "end": "1591600"
  },
  {
    "text": "schema and that's that's proving quite hard for me so like H how how do you",
    "start": "1591600",
    "end": "1598080"
  },
  {
    "text": "model relationships that are not just like oh this you know piece is connected",
    "start": "1598080",
    "end": "1604000"
  },
  {
    "text": "to this other piece by some sort of loose relationship between them how do I model things like actual relationships",
    "start": "1604000",
    "end": "1610120"
  },
  {
    "text": "right maybe I have I have an invoice with line items on it right these this is kind of like a parent child",
    "start": "1610120",
    "end": "1615360"
  },
  {
    "text": "relationship you can't have the line item just just floating out and about it it belongs to something right it doesn't",
    "start": "1615360",
    "end": "1620559"
  },
  {
    "text": "have meaning without the sort of the the parent relationship right so how do you model these kinds of things or rather do",
    "start": "1620559",
    "end": "1626480"
  },
  {
    "text": "you have to throw that sort of approach out you know the door leave it at the door before you enter the world of schemas and the world of graph databases",
    "start": "1626480",
    "end": "1633679"
  },
  {
    "text": "I mean you don't to really need to get rid of all of the concept that you have from before especially if you're coming",
    "start": "1633679",
    "end": "1639320"
  },
  {
    "text": "from a document database uh if you come from a document database imagine getting instead of having a document that is",
    "start": "1639320",
    "end": "1645919"
  },
  {
    "text": "just a big Json you basically explode That Into You know uh instead of having",
    "start": "1645919",
    "end": "1652039"
  },
  {
    "text": "an object that has name and age and then put a friends that points to an array of people that have name and age you're",
    "start": "1652039",
    "end": "1659159"
  },
  {
    "text": "going to explode that into little facts so you're going to say this ID has name",
    "start": "1659159",
    "end": "1664480"
  },
  {
    "text": "Frances and then age whatever and then friends is a list of different IDs and",
    "start": "1664480",
    "end": "1670240"
  },
  {
    "text": "then those IDs also have their name and age so you're going to break that into into triplets right like triplet is a",
    "start": "1670240",
    "end": "1676760"
  },
  {
    "text": "subject no wait uh yeah subject verb and object right so you're saying things",
    "start": "1676760",
    "end": "1681880"
  },
  {
    "text": "about things and that's what you store at the end right like you literally store just that so uh once you take that",
    "start": "1681880",
    "end": "1688120"
  },
  {
    "text": "into account you realize that all of the order all of the ordering that you had is gone so then if you have something",
    "start": "1688120",
    "end": "1694279"
  },
  {
    "text": "like an an order with items and you want those items to be stored in in some way",
    "start": "1694279",
    "end": "1699640"
  },
  {
    "text": "in in a specific order then you actually need to store that there right you need to say that uh the order like and and",
    "start": "1699640",
    "end": "1705760"
  },
  {
    "text": "you have you have different way of doing this you can create something like the way you would do it in a in a in a",
    "start": "1705760",
    "end": "1712120"
  },
  {
    "text": "traditional relational database where you're going to have like these item line table that points to both the order",
    "start": "1712120",
    "end": "1720320"
  },
  {
    "text": "and the and the product that they have and then also has like the in the item number in there or something right",
    "start": "1720320",
    "end": "1727279"
  },
  {
    "text": "there's a way to do it but for us you could do it just as a node itself is a",
    "start": "1727279",
    "end": "1732399"
  },
  {
    "text": "node which is something similar to what you would think about uh the the relational database or you can also",
    "start": "1732399",
    "end": "1737679"
  },
  {
    "text": "attach things you can attach data to the relationships themselves so you could say this item belongs to this order and",
    "start": "1737679",
    "end": "1746080"
  },
  {
    "text": "that relationship you're tagging it saying it's it item order number one so there there's a there's multiple places",
    "start": "1746080",
    "end": "1752960"
  },
  {
    "text": "where you can St that kind of information and it's the whole idea is very flexible so you can do whatever you",
    "start": "1752960",
    "end": "1758480"
  },
  {
    "text": "want which means that you need to be a little bit more strict about like you need to really think about how do you store this and that's why having a",
    "start": "1758480",
    "end": "1765360"
  },
  {
    "text": "schema is going to help you with those things but at the end of the day um what we see is people modeling in a very in",
    "start": "1765360",
    "end": "1772960"
  },
  {
    "text": "the most straightforward way possible like simplifying as as much as possible and then they start sending queries and",
    "start": "1772960",
    "end": "1779200"
  },
  {
    "text": "then start to see okay this is the performance issues I'm hitting because depending on what the way you're storing",
    "start": "1779200",
    "end": "1784360"
  },
  {
    "text": "data uh you're going to get more more or less performance right so that's when you start tuning your database but you",
    "start": "1784360",
    "end": "1790880"
  },
  {
    "text": "know in general I'd say that just storing the data the most natural way",
    "start": "1790880",
    "end": "1796039"
  },
  {
    "text": "possible has it is the best way to go because you know it's like when you're writing go right like you're not",
    "start": "1796039",
    "end": "1801519"
  },
  {
    "text": "supposed to be thinking about cash locality right away if you're doing that your codee's going to be really ugly",
    "start": "1801519",
    "end": "1807559"
  },
  {
    "text": "right write code that makes sense to you and that makes sense to everyone that is easy to maintain and then if we need to",
    "start": "1807559",
    "end": "1814320"
  },
  {
    "text": "find a hack somewhere to fix it and make it much faster then let's do that then but not not not from the beginning and",
    "start": "1814320",
    "end": "1820600"
  },
  {
    "text": "for data modeling I would stays the same find something that is obvious and very clear and if that doesn't work first",
    "start": "1820600",
    "end": "1827600"
  },
  {
    "text": "file an issue right let us know like cuz maybe there's an issue or something like that but also at that point we're going",
    "start": "1827600",
    "end": "1833320"
  },
  {
    "text": "to start looking into performance tuning and you know doing actual debugging and figuring out how much data are we",
    "start": "1833320",
    "end": "1840159"
  },
  {
    "text": "fetching cuz sometimes you know it may be something as silly as like oh you're actually not using this index and",
    "start": "1840159",
    "end": "1845360"
  },
  {
    "text": "instead of loading one item you're actually loading all of your database that's not good right so that is the",
    "start": "1845360",
    "end": "1851159"
  },
  {
    "text": "kind of thing that you need to look into as you're writing your thing but data modeling should be as uh straightforward",
    "start": "1851159",
    "end": "1857320"
  },
  {
    "text": "and as natural as possible because at the end of the day you're going to you're going to have to maintain that over time so if you start getting smart",
    "start": "1857320",
    "end": "1864919"
  },
  {
    "text": "you're going to need to be at least as smart as you are now in a month which I'm not convinced I can",
    "start": "1864919",
    "end": "1871240"
  },
  {
    "text": "so yeah good point so Al along those lines like would you say in my",
    "start": "1871240",
    "end": "1878760"
  },
  {
    "text": "experience you you can go pretty far you know with a relational database uh um",
    "start": "1878760",
    "end": "1883799"
  },
  {
    "text": "before you start noticing you know that oh I didn't have the proper you know index and right column you know like you",
    "start": "1883799",
    "end": "1890799"
  },
  {
    "text": "you can kind of go far right before you realize okay I have to do something about this I have I have a problem with my actual um data and how it's being",
    "start": "1890799",
    "end": "1898000"
  },
  {
    "text": "stored like it sounds like with with you know uh key value stores with with graph",
    "start": "1898000",
    "end": "1903639"
  },
  {
    "text": "databases you kind of have to put a bit more sort of a forethought into how you structure your data like where it goes",
    "start": "1903639",
    "end": "1909320"
  },
  {
    "text": "how you going to Shard and things like that I would actually it's the other way around I I would say that uh graph",
    "start": "1909320",
    "end": "1915320"
  },
  {
    "text": "databases the and and document database is true right like the fact that the schema is so flexible makes it so",
    "start": "1915320",
    "end": "1922000"
  },
  {
    "text": "eventually like you go for the simplest way and if you then need to migrate to something else because you find",
    "start": "1922000",
    "end": "1927919"
  },
  {
    "text": "something that was not uh taken into account from the beginning you can right it is actually doing transformations in",
    "start": "1927919",
    "end": "1933679"
  },
  {
    "text": "the data and everything it's pretty straightforward uh while if you think about uh relational database right like",
    "start": "1933679",
    "end": "1940159"
  },
  {
    "text": "I have this example of you know uh you have movie and director and what you're saying is a movie has a director so what",
    "start": "1940159",
    "end": "1946519"
  },
  {
    "text": "I'm going to do is I'm going to put in the movie a foreign key pointing to the director that directed that movie right",
    "start": "1946519",
    "end": "1952320"
  },
  {
    "text": "and you're like great you start working on that and then you figure out that guess what there's movies that have",
    "start": "1952320",
    "end": "1957480"
  },
  {
    "text": "multiple directors and now you need to refactor your database and that is hard",
    "start": "1957480",
    "end": "1963240"
  },
  {
    "text": "because the way you're storing the whole thing it's going to be much harder to move out into different pieces you're going to need to come up with a new",
    "start": "1963240",
    "end": "1969679"
  },
  {
    "text": "concept movie director or something like that is somehow in between cuz now you go from one to many to many to many",
    "start": "1969679",
    "end": "1976159"
  },
  {
    "text": "right so all of those things are way harder to do while for us if you say oh this is a one to one to many",
    "start": "1976159",
    "end": "1982440"
  },
  {
    "text": "relationship and then it's like oh never mind was many to many it's literally just changing the the type of the",
    "start": "1982440",
    "end": "1988600"
  },
  {
    "text": "predicate in one place that's it migration wise I think it's much easier the the whole idea is that you get to",
    "start": "1988600",
    "end": "1995279"
  },
  {
    "text": "make those decisions once you have the information that you need to make those decisions rather than from the beginning",
    "start": "1995279",
    "end": "2000919"
  },
  {
    "text": "and trying to get it right so that's that has a massive development Advantage",
    "start": "2000919",
    "end": "2006080"
  },
  {
    "text": "because actually I think we sort of fall ourselves into thinking we can design these things",
    "start": "2006080",
    "end": "2012480"
  },
  {
    "text": "perfectly in the beginning and then we just then there's an implementation phase or whatever and it's never like",
    "start": "2012480",
    "end": "2018399"
  },
  {
    "text": "that you learn so much by doing it that actually being able to be adaptive and to migrate the data and things becomes",
    "start": "2018399",
    "end": "2025200"
  },
  {
    "text": "very uh very valuable um Andy Walker in the slack Channel Andy Walker is my new",
    "start": "2025200",
    "end": "2030880"
  },
  {
    "text": "uh Twitter enemy um he was asking about",
    "start": "2030880",
    "end": "2036200"
  },
  {
    "text": "um what that switch what the switch between Dev mode and prod mode kind of looks like he asks do I need a corpus of",
    "start": "2036200",
    "end": "2043360"
  },
  {
    "text": "seed data that represents everything I care about and then sort of clear that out in some way and and you know",
    "start": "2043360",
    "end": "2050118"
  },
  {
    "text": "snapshot it or something what's the what's the actual process so so the way I normally do this uh and there's",
    "start": "2050119",
    "end": "2056240"
  },
  {
    "text": "different options but the idea is that while you're while you're inserting data uh into the database uh by default you",
    "start": "2056240",
    "end": "2063599"
  },
  {
    "text": "can insert any data and everything will be accepted right so you start putting things in there and it's going to be",
    "start": "2063599",
    "end": "2069878"
  },
  {
    "text": "creating as you go a schema so say I store something saying my name is",
    "start": "2069879",
    "end": "2075280"
  },
  {
    "text": "Frances it's going to store something saying oh there's a thing called name and it points to a type and maybe",
    "start": "2075280",
    "end": "2082599"
  },
  {
    "text": "guesses a string you send it as Json or if you send it as an rdf it's going to say it's default we don't know what it",
    "start": "2082599",
    "end": "2088560"
  },
  {
    "text": "is but you can store things in there right uh as you go you're going to start uh tuning that up and saying actually",
    "start": "2088560",
    "end": "2095158"
  },
  {
    "text": "you know name is it needs to be a string and not only that but also going to need an index right or then you get age and",
    "start": "2095159",
    "end": "2102240"
  },
  {
    "text": "you get whatever and you keep on adding more and more data as you go the whole idea is that eventually you have all of",
    "start": "2102240",
    "end": "2108280"
  },
  {
    "text": "the data that you need that is already in that schema and then on top of that you also have designed uh your database",
    "start": "2108280",
    "end": "2115280"
  },
  {
    "text": "with all of the indexes that you need to do the queries that you're going to need to do right at that point that schema",
    "start": "2115280",
    "end": "2120760"
  },
  {
    "text": "that has been created automatically you can literally copy paste it into your code and call it you know like DG graph.",
    "start": "2120760",
    "end": "2126480"
  },
  {
    "text": "schema and now what you're going to do is when you start your program if the database didn't exist right like it's a",
    "start": "2126480",
    "end": "2132880"
  },
  {
    "text": "completely blank database you're going to send that schema and then lock it and say okay from now on this schema is not",
    "start": "2132880",
    "end": "2140079"
  },
  {
    "text": "allowed to change so if I want to send data that match as that that's totally fine but if you try to send data that",
    "start": "2140079",
    "end": "2146040"
  },
  {
    "text": "instead of name it uses first name which is not something that said that you could use it will just rejected so",
    "start": "2146040",
    "end": "2151880"
  },
  {
    "text": "that's the idea of it is literally just uh when you start the database you have this this switch that says it's the",
    "start": "2151880",
    "end": "2158839"
  },
  {
    "text": "serving mode and it's serving mode is standard or strict and the other one is",
    "start": "2158839",
    "end": "2164400"
  },
  {
    "text": "completely nothing you cannot mutate anything you cannot change the data it's like you got a A read only database so",
    "start": "2164400",
    "end": "2170640"
  },
  {
    "text": "it's somewhere in between you can write things but you can modify your your schema just because you mentioned read",
    "start": "2170640",
    "end": "2176359"
  },
  {
    "text": "only databases is there any sort of like replication of data uh can I have like multiple read notes for example and have",
    "start": "2176359",
    "end": "2182800"
  },
  {
    "text": "like one write note or yeah so that's actually uh that's a very good Point uh so D graph the d stands for distributed",
    "start": "2182800",
    "end": "2190040"
  },
  {
    "text": "right so the idea is that uh you you are supposed to be running multiple servers",
    "start": "2190040",
    "end": "2195240"
  },
  {
    "text": "for every single uh function so it is designed so it doesn't have any uh",
    "start": "2195240",
    "end": "2200359"
  },
  {
    "text": "single point of failure and it follows a lot what if you think about how kubernetes works so you have multiple",
    "start": "2200359",
    "end": "2206319"
  },
  {
    "text": "replicas and those replicas in a group they host the same information right they they do the same thing and we use",
    "start": "2206319",
    "end": "2212640"
  },
  {
    "text": "raft to decide which one is the leader if one of them dies we don't care there",
    "start": "2212640",
    "end": "2217720"
  },
  {
    "text": "like if you have three of them but like one of them dies you still have Quorum you have two of them the databas is going to continue working and then once",
    "start": "2217720",
    "end": "2224680"
  },
  {
    "text": "it comes back it's going to be uh notified hey you're part of this group this is the data that you you should be",
    "start": "2224680",
    "end": "2230359"
  },
  {
    "text": "serving right so it catches up so uh the data will be replicated but on top of",
    "start": "2230359",
    "end": "2235800"
  },
  {
    "text": "that if that the amount of data that you have doesn't fit in a single machine",
    "start": "2235800",
    "end": "2240960"
  },
  {
    "text": "then you can start adding more groups and then the data will be sharded across all of those groups but again uh they",
    "start": "2240960",
    "end": "2248280"
  },
  {
    "text": "will have their own replicas and everything so you're going to have like what we call Alphas which are the servers that host that uh that hold the",
    "start": "2248280",
    "end": "2254680"
  },
  {
    "text": "data you can have as many groups as you want and in every group you can you",
    "start": "2254680",
    "end": "2259960"
  },
  {
    "text": "normally have three or five replicas depending on the uh availability expectations that you have and then the",
    "start": "2259960",
    "end": "2266319"
  },
  {
    "text": "same for uh the zeros and the zero is actually basically like the uh I think",
    "start": "2266319",
    "end": "2271839"
  },
  {
    "text": "it's called kubernetes master or something like that but like the controller that manages the whole cluster",
    "start": "2271839",
    "end": "2277319"
  },
  {
    "text": "that one also we don't have one you can replicate and have three so if one goes down still the the cluster is working",
    "start": "2277319",
    "end": "2282839"
  },
  {
    "text": "Yeah you mentioned earlier graphql um and I've seen graphql implementations that I was surprised to",
    "start": "2282839",
    "end": "2290000"
  },
  {
    "text": "learn was kind of just it was backed by postgress yeah but the interface is",
    "start": "2290000",
    "end": "2295839"
  },
  {
    "text": "graphql um and like you said JavaScript developers love that because I mean I",
    "start": "2295839",
    "end": "2302040"
  },
  {
    "text": "think you know that there's something nice about being able to specify exactly the kind of data that you want back and",
    "start": "2302040",
    "end": "2307760"
  },
  {
    "text": "nothing more and also in quite a natural way because the graphql is kind of adjacent format adjacent is um so what",
    "start": "2307760",
    "end": "2316160"
  },
  {
    "text": "do you think about that having the graph interface into traditional databases so",
    "start": "2316160",
    "end": "2322000"
  },
  {
    "text": "I think that graphql is a great alternative to rest like I really sincerely like it uh it it makes it so",
    "start": "2322000",
    "end": "2331119"
  },
  {
    "text": "there's a schema so when you're requesting things you know what you're allowed to be requesting but but also at",
    "start": "2331119",
    "end": "2337000"
  },
  {
    "text": "the same time you also have not only the data but also operations so you have mutations and queries and things like",
    "start": "2337000",
    "end": "2342839"
  },
  {
    "text": "that so it's kind of like a nice modern way of doing grpc like if you ever used",
    "start": "2342839",
    "end": "2349400"
  },
  {
    "text": "grpc where you have the data which is represented as procal buffers but then you also have all of the different um",
    "start": "2349400",
    "end": "2356920"
  },
  {
    "text": "they called Services yeah all the different Services right so it's kind of the similar idea for graphql right so so",
    "start": "2356920",
    "end": "2364359"
  },
  {
    "text": "that I like it a lot that said the the problem is that it's a beautiful abstraction that is super hard not to",
    "start": "2364359",
    "end": "2371359"
  },
  {
    "text": "make it leak right like if you have uh if you have a very beautiful abstraction",
    "start": "2371359",
    "end": "2376680"
  },
  {
    "text": "of oh it's all one graph right like everything is a graph everything you're just going to use everything as craft",
    "start": "2376680",
    "end": "2383560"
  },
  {
    "text": "okay first problem authentication huh fun right like if you start considering",
    "start": "2383560",
    "end": "2388960"
  },
  {
    "text": "these things there's actually many many issues of implementing that in a very natural way uh there's a lot of adapters",
    "start": "2388960",
    "end": "2396079"
  },
  {
    "text": "uh so so you know like Prisma AP poo and uh hura are examples of different",
    "start": "2396079",
    "end": "2401960"
  },
  {
    "text": "companies that provide adapters on top of existing databases uh that is great right because it means that you can",
    "start": "2401960",
    "end": "2409079"
  },
  {
    "text": "create a graphql layer on top of your uh old system and then eventually little by",
    "start": "2409079",
    "end": "2414720"
  },
  {
    "text": "little start replacing things and say oh you know this are going to move it to this uh more graphical native environment or I'm going to break this",
    "start": "2414720",
    "end": "2421760"
  },
  {
    "text": "monolith into microservices and use a federation on top like all of these things work and they're very useful that",
    "start": "2421760",
    "end": "2428880"
  },
  {
    "text": "said every single time I go to a graph kale Summit people talk about the same issues of caching the N plus1 problem",
    "start": "2428880",
    "end": "2435920"
  },
  {
    "text": "but like if you're fetching a lot of information uh and you're based on top of you know a relational database you're",
    "start": "2435920",
    "end": "2442400"
  },
  {
    "text": "fetching all the data in the table uh basically no matter what so you're going to be fetching that information and then",
    "start": "2442400",
    "end": "2449480"
  },
  {
    "text": "from there you're going to get a lot of data and then before you send it oh",
    "start": "2449480",
    "end": "2454560"
  },
  {
    "text": "guess what like on top of customers now I want to get all the orders so you're going need to get those IDs and go down",
    "start": "2454560",
    "end": "2460359"
  },
  {
    "text": "and get the information for the orders and then go down again so it's like that n plus one problem and then in order to",
    "start": "2460359",
    "end": "2466720"
  },
  {
    "text": "fix it there's things like prefetching some things and like basically playing with caches and things like that and it",
    "start": "2466720",
    "end": "2473280"
  },
  {
    "text": "becomes really rough it is I mean it works uh which is great but it is it is",
    "start": "2473280",
    "end": "2480280"
  },
  {
    "text": "hard to understand and hard to even harder to debug right uh so so that's why I was like when it's for us for",
    "start": "2480280",
    "end": "2486960"
  },
  {
    "text": "dgraph right like the graphql is it was super easy to adapt because uh our",
    "start": "2486960",
    "end": "2492160"
  },
  {
    "text": "previous language that we support and we will support for a long time it's graphql plus minus because it's more or",
    "start": "2492160",
    "end": "2498599"
  },
  {
    "text": "less graphql and uh it's basically graphql but adding some extra things to make it a better cor language for a",
    "start": "2498599",
    "end": "2504960"
  },
  {
    "text": "database and then removing some things that didn't make that much sense right so adopting graphql was super easy it's",
    "start": "2504960",
    "end": "2510880"
  },
  {
    "text": "basically the same language and now what we're doing is figuring out how can we bring the things that we added that make",
    "start": "2510880",
    "end": "2516440"
  },
  {
    "text": "the language andc compatible with graphql how can we add them back to graphql in a compatible way and there",
    "start": "2516440",
    "end": "2523040"
  },
  {
    "text": "are ways it's super interesting actually like a lot of language design and apis but like inside of graphql uh super cool",
    "start": "2523040",
    "end": "2530280"
  },
  {
    "text": "just because you mentioned debuging um in relational databases for example there's a huge culture around like you",
    "start": "2530280",
    "end": "2536280"
  },
  {
    "text": "know analysis tools uh they can like an analyze or query and so on do you have",
    "start": "2536280",
    "end": "2542240"
  },
  {
    "text": "anything for D graph so not right now we're actually working on uh having a a",
    "start": "2542240",
    "end": "2547400"
  },
  {
    "text": "query planner uh right now the only places like the thing is that the way",
    "start": "2547400",
    "end": "2553000"
  },
  {
    "text": "the data is structured quy planners do not make that much sense except on how you use indexes right so that is where",
    "start": "2553000",
    "end": "2560319"
  },
  {
    "text": "we're starting working uh because sometimes using the index is not necessarily the best way to do it uh if",
    "start": "2560319",
    "end": "2565800"
  },
  {
    "text": "you it's basically like you know they have you have joints of two tables in relational databases uh if one of them",
    "start": "2565800",
    "end": "2572400"
  },
  {
    "text": "is much smaller than the other there's better operations that you can do than just doing the full to join right so it's kind of the same idea of like",
    "start": "2572400",
    "end": "2578760"
  },
  {
    "text": "depending on the size of the data sets Sometimes using an index is better sometimes just going and iterating over",
    "start": "2578760",
    "end": "2585000"
  },
  {
    "text": "all the items might be faster so that's a little bit the kind of thing we're looking into uh that said we and in the",
    "start": "2585000",
    "end": "2591240"
  },
  {
    "text": "latest version uh that we published we have an extra a new thing that allows you to have an idea of how many notes",
    "start": "2591240",
    "end": "2597839"
  },
  {
    "text": "have been fetched how many keys how many how much data from the disk uh you had to to get how many uh Network calls you",
    "start": "2597839",
    "end": "2605119"
  },
  {
    "text": "had to go through and then on top of that I'm sure you'll love it y we have open sensors absolutely everywhere so",
    "start": "2605119",
    "end": "2612240"
  },
  {
    "text": "yeah so it's like tracing congratulations yeah thank you it is it it works surprisingly well like uh when",
    "start": "2612240",
    "end": "2619839"
  },
  {
    "text": "you when you go into like okay so this is slow what is going on and you just open open sensors and you can see all of",
    "start": "2619839",
    "end": "2626160"
  },
  {
    "text": "the traces hitting the different machines hitting the disc and say this this was really slow what is going on in",
    "start": "2626160",
    "end": "2631839"
  },
  {
    "text": "here right like that makes it so you know the tooling that we're developing on top will be useful for the end user",
    "start": "2631839",
    "end": "2638599"
  },
  {
    "text": "but for any uh knowledgeable person that already knows open sensus there's a lot",
    "start": "2638599",
    "end": "2644240"
  },
  {
    "text": "already in there thanks you know open source it's also a knowledge tool I really like distributed traces as a",
    "start": "2644240",
    "end": "2649960"
  },
  {
    "text": "knowledge Tool uh even you can probably like it's so hard for everyone on the team to understand everything end to end",
    "start": "2649960",
    "end": "2656119"
  },
  {
    "text": "so like they can just basically you know use distributed traces to learn more about their project right yeah yeah and",
    "start": "2656119",
    "end": "2662760"
  },
  {
    "text": "and that's also something that you know is like that is uh where I enjoy having uh control from you know if you let's",
    "start": "2662760",
    "end": "2670119"
  },
  {
    "text": "say you you're serving a graphql layer right you have graphql that is transforming into things that are sent",
    "start": "2670119",
    "end": "2676240"
  },
  {
    "text": "to the alphas and then talk to the zeros and then go to Badger and get some from",
    "start": "2676240",
    "end": "2681400"
  },
  {
    "text": "something from an SSD we own all of that code so we're able to put open sensors",
    "start": "2681400",
    "end": "2686559"
  },
  {
    "text": "across the whole thing and have a very clear view of what's going on that's if you try to do something like that with",
    "start": "2686559",
    "end": "2692000"
  },
  {
    "text": "an adapter and you have like an adapter over some other database is actually that integration is going to be super",
    "start": "2692000",
    "end": "2698119"
  },
  {
    "text": "hard so you know the the fact that we simplify everything and everything is kind of like built by us it's everything",
    "start": "2698119",
    "end": "2704079"
  },
  {
    "text": "in go everything open sensors every everything I'm going to go with the word cloud native right like the idea of",
    "start": "2704079",
    "end": "2710440"
  },
  {
    "text": "everything is supposed to be running continuously and if something crashes whatever just restart it and keep going",
    "start": "2710440",
    "end": "2717319"
  },
  {
    "text": "right all of those things make it so at the end of the day it is much easier to use cuz there's there's fewer moving",
    "start": "2717319",
    "end": "2723400"
  },
  {
    "text": "pieces somebody on Twitter the other day said vetes was basically turning things off and on again at scale yeah and it",
    "start": "2723400",
    "end": "2731890"
  },
  {
    "text": "[Music]",
    "start": "2731890",
    "end": "2739349"
  },
  {
    "text": "works this episode is brought to you by ghost CD with Native Integrations for kubernetes and a Helm chart to quickly",
    "start": "2741200",
    "end": "2748319"
  },
  {
    "text": "get started ghost CD is an easy choice for cloud native teams with ghost CD running on kubernetes you define your",
    "start": "2748319",
    "end": "2754720"
  },
  {
    "text": "build workflow and and let go CD provision and scale build infrastructure on the Fly for you go CD installs as a",
    "start": "2754720",
    "end": "2761920"
  },
  {
    "text": "kubernetes native application which allows for ease of operations easily upgrade and maintain go C using Helm",
    "start": "2761920",
    "end": "2768720"
  },
  {
    "text": "scale your build infrastructure elastically with a new elastic agent that uses kubernetes conventions to",
    "start": "2768720",
    "end": "2774240"
  },
  {
    "text": "dynamically scale go C agents go CD also has first class integration with Docker Registries easily compose track and",
    "start": "2774240",
    "end": "2782440"
  },
  {
    "text": "visualize deployments on kubernetes learn more and get started at go.org kubernetes again go.org",
    "start": "2782440",
    "end": "2791280"
  },
  {
    "text": "[Music]",
    "start": "2793420",
    "end": "2802200"
  },
  {
    "text": "kubernetes we should talk a bit about what you wouldn't use a graph database for as well because it it you know it's",
    "start": "2802200",
    "end": "2809559"
  },
  {
    "text": "I mean I think a lot of our listeners and I for certainly will be doing this I'm going to go and play with this now",
    "start": "2809559",
    "end": "2815480"
  },
  {
    "text": "cuz I want want to really see because I still I still don't have a kind of full",
    "start": "2815480",
    "end": "2820520"
  },
  {
    "text": "understanding of um from from the what we've talked about really what this actually can do and what it feels like",
    "start": "2820520",
    "end": "2827920"
  },
  {
    "text": "when you use it but are there are there problems where you just would wouldn't even think of using a graph database I",
    "start": "2827920",
    "end": "2835359"
  },
  {
    "text": "mean we the way we buil degraph was uh with uh you know like General use cases",
    "start": "2835359",
    "end": "2841280"
  },
  {
    "text": "in mind right like you're storing data like the same way you're using a a document database document databases you",
    "start": "2841280",
    "end": "2847960"
  },
  {
    "text": "can you can use them for basically everything right so it's it's a very general field uh we trying to make it so",
    "start": "2847960",
    "end": "2853800"
  },
  {
    "text": "you know you can have graph algorithms and fancy things but at the same time the normal use case of just storing data",
    "start": "2853800",
    "end": "2860599"
  },
  {
    "text": "and then ref like getting it back and making sure that everything is stable and performant that's what we're going",
    "start": "2860599",
    "end": "2865760"
  },
  {
    "text": "for that said there are things like uh if you're doing uh uh time serious data right is",
    "start": "2865760",
    "end": "2873839"
  },
  {
    "text": "there are much better much uh more efficient solutions for this because you know it's a very specific field that has",
    "start": "2873839",
    "end": "2880480"
  },
  {
    "text": "amazing Solutions right so time series is one of those uh I would say analytics",
    "start": "2880480",
    "end": "2885880"
  },
  {
    "text": "is something that we're able to do depending on how much data you're throwing at it right like uh if you're",
    "start": "2885880",
    "end": "2891040"
  },
  {
    "text": "doing analytics in real time I think that dph is actually really good for that if you're doing analytics on larger",
    "start": "2891040",
    "end": "2897200"
  },
  {
    "text": "data that you're basically batching and just going over it all the data at the same time you know big query is great",
    "start": "2897200",
    "end": "2903720"
  },
  {
    "text": "right like why would you like implementing that is going to be really hard so some tools are going to be",
    "start": "2903720",
    "end": "2908960"
  },
  {
    "text": "better as some specific use cases uh I do think that people still have a very",
    "start": "2908960",
    "end": "2915559"
  },
  {
    "text": "um uh clear tendency to use relational databases for everything and relational",
    "start": "2915559",
    "end": "2920680"
  },
  {
    "text": "databases are really great for you know when you need to fetch a lot of information that it's always the same",
    "start": "2920680",
    "end": "2926359"
  },
  {
    "text": "schema and things like that unfortunately that's not the case that often and you know uh relational",
    "start": "2926359",
    "end": "2932599"
  },
  {
    "text": "databases are somehow quite bad at stor relations even though you know it's in their name uh it they're not really good",
    "start": "2932599",
    "end": "2939640"
  },
  {
    "text": "at that North Korea is called the Democratic People's Republic of North Korea I mean yeah yeah we are canel in",
    "start": "2939640",
    "end": "2947319"
  },
  {
    "text": "North Korea oops oh thanks Matt someone at least someone in North",
    "start": "2947319",
    "end": "2953640"
  },
  {
    "text": "Korea had sense of humor you know that's something yeah no but like uh it is it",
    "start": "2953640",
    "end": "2959880"
  },
  {
    "text": "is hard to manage relations in a relational database sometimes and uh",
    "start": "2959880",
    "end": "2965319"
  },
  {
    "text": "that's why people enjoy document databases it just makes it easier you just store your data and that's it and I",
    "start": "2965319",
    "end": "2971359"
  },
  {
    "text": "think that graph databases could be you know somehow like a substitute for",
    "start": "2971359",
    "end": "2977079"
  },
  {
    "text": "document databases that it's going to scale much better so so that's where I think it could go yeah do you think that",
    "start": "2977079",
    "end": "2982559"
  },
  {
    "text": "people are going to end up with um running kind of different types of database in some cases still having I",
    "start": "2982559",
    "end": "2989920"
  },
  {
    "text": "probably if people are transitioning or if a team thinks this is a perfect use case for this but we still have this",
    "start": "2989920",
    "end": "2996000"
  },
  {
    "text": "existing system that we have to live with because you can't you're not allowed to just delete everything and",
    "start": "2996000",
    "end": "3001319"
  },
  {
    "text": "start again sometimes yeah yeah so would could you imagine that that there's going to be situations where you would",
    "start": "3001319",
    "end": "3008359"
  },
  {
    "text": "actually have your relational database or whatever your existing data store already is still running but you also",
    "start": "3008359",
    "end": "3014079"
  },
  {
    "text": "maintain the the graph for those extra special specific cases yeah that's actually something that we see pretty",
    "start": "3014079",
    "end": "3020040"
  },
  {
    "text": "often uh where you know you already have a very large data set and what you want",
    "start": "3020040",
    "end": "3025079"
  },
  {
    "text": "to do is not get rid of that because you already have so many programs so many uh systems already using that database",
    "start": "3025079",
    "end": "3032000"
  },
  {
    "text": "right so replacing that database means that you need to replace all of the software on top of that and that's a lot",
    "start": "3032000",
    "end": "3037920"
  },
  {
    "text": "of work sometimes impossible to do but uh what we try to do in those cases is to get you know a graph database next to",
    "start": "3037920",
    "end": "3046319"
  },
  {
    "text": "your traditional database and S them together so uh many databases are able to send like uh like a CFA stream of",
    "start": "3046319",
    "end": "3054319"
  },
  {
    "text": "mutations so I hate this has changed this has changed so you can keep the graph database up to date completely",
    "start": "3054319",
    "end": "3060319"
  },
  {
    "text": "with the with the relational database and then use the graph database for the things that graph Devas are good at right so a traditional example if you",
    "start": "3060319",
    "end": "3067760"
  },
  {
    "text": "have you know like you have a Blog system and you want to fetch all of the comments for a given blog and that was",
    "start": "3067760",
    "end": "3073920"
  },
  {
    "text": "big data right uh that is actually really hard if you store it as you know a comment comments on something and that",
    "start": "3073920",
    "end": "3080400"
  },
  {
    "text": "could be either a comment or a post uh having to do that it's going to be",
    "start": "3080400",
    "end": "3085920"
  },
  {
    "text": "you're going to have to have an extra index for sure but you're basically going backwards into how relational",
    "start": "3085920",
    "end": "3093160"
  },
  {
    "text": "datab business work so it's going to be really hard and not very performant so you could use that to just keep the",
    "start": "3093160",
    "end": "3098880"
  },
  {
    "text": "metadata of like all of the indexes inside of the graph database and then fetch all of the noes or fetch all of",
    "start": "3098880",
    "end": "3104960"
  },
  {
    "text": "the IDS of the things that you that you want keep that structure and then the made a data of the text and images and",
    "start": "3104960",
    "end": "3111119"
  },
  {
    "text": "whatever still in your relational database so using as an index IND database that is going to enhance what",
    "start": "3111119",
    "end": "3117200"
  },
  {
    "text": "you can build rather than having to replace the whole thing that's that's totally a normal thing cuz you know if",
    "start": "3117200",
    "end": "3122640"
  },
  {
    "text": "you go to a CTO and you're like hey I have this brand new database replace yours with this one they're going to be",
    "start": "3122640",
    "end": "3128480"
  },
  {
    "text": "like yes no no no yeah we're just going to control a and then delete on everything we've got that's all right",
    "start": "3128480",
    "end": "3135680"
  },
  {
    "text": "just store your data in this floppy disc and then we go from there you know yeah so if we if we actually looked if we",
    "start": "3135680",
    "end": "3142119"
  },
  {
    "text": "poked around in the files that are stored by DeGraff there what what does it actually look like I mean what is it",
    "start": "3142119",
    "end": "3149079"
  },
  {
    "text": "literally when it's on disk what does it look like so uh you're going to see that there are uh three directories uh PW and",
    "start": "3149079",
    "end": "3157000"
  },
  {
    "text": "ZW or ZW depending on how wrong you say things in English uh so Z yeah I know uh",
    "start": "3157000",
    "end": "3164200"
  },
  {
    "text": "zebra uh so whatever like uh so uh the",
    "start": "3164200",
    "end": "3169280"
  },
  {
    "text": "the P is where all the data is going to be stored uh so uh you're actually going",
    "start": "3169280",
    "end": "3175079"
  },
  {
    "text": "to to have lstm files so basically what Badger stores so there a bunch of different key value stores represent an",
    "start": "3175079",
    "end": "3181520"
  },
  {
    "text": "lstm in disk right so you have a bunch of those and then you have uh W which is",
    "start": "3181520",
    "end": "3187319"
  },
  {
    "text": "a r aead log so every single time out operation is sent to the database they're going to we're going to store it",
    "start": "3187319",
    "end": "3193240"
  },
  {
    "text": "there just in case just in case it crashes right so if it crashes then we can tell oh this is where we were these",
    "start": "3193240",
    "end": "3199520"
  },
  {
    "text": "are the operations that we need to keep on applying right and then there's one more folder which is the ZW and ZW is",
    "start": "3199520",
    "end": "3206319"
  },
  {
    "text": "the zero R ahead log so it's the r Ahad log for the cluster itself is the zeros",
    "start": "3206319",
    "end": "3211960"
  },
  {
    "text": "are the ones that manage the cluster themselves so you're going to have those three folders and yeah everything in",
    "start": "3211960",
    "end": "3217359"
  },
  {
    "text": "that in in there it's just you know binary uh binary files you could",
    "start": "3217359",
    "end": "3223000"
  },
  {
    "text": "technically um copy those and send them around and start a new database uh but the problem is that these files are",
    "start": "3223000",
    "end": "3229480"
  },
  {
    "text": "actually uh the way they work they contain things like how many machines you have in your database cluster and",
    "start": "3229480",
    "end": "3235440"
  },
  {
    "text": "things like that so over time if you change that probably you're going to end up having crashes and you know that's",
    "start": "3235440",
    "end": "3242079"
  },
  {
    "text": "not the way to go but we also have things that you can export all of your data to Json or rdf or even you have",
    "start": "3242079",
    "end": "3247720"
  },
  {
    "text": "binary backups which store in uh protocol buffers is a file system is the only way to store data or can I just",
    "start": "3247720",
    "end": "3255119"
  },
  {
    "text": "write an adapter to just send it to like some blob store somewhere so uh it needs",
    "start": "3255119",
    "end": "3262359"
  },
  {
    "text": "to be so the idea is that uh badger the key value store is designed to work on ssds right if you're not running on an",
    "start": "3262359",
    "end": "3269960"
  },
  {
    "text": "SSD it will still work but it will be way slower right so uh the idea is that ssds need to be there uh when you're",
    "start": "3269960",
    "end": "3277400"
  },
  {
    "text": "doing a backup that yeah you can totally store that in like uh in uh cloud storage or whatever that's totally fine",
    "start": "3277400",
    "end": "3284359"
  },
  {
    "text": "the the interesting thing is there was actually uh someone that was asking about how could they do it to store all",
    "start": "3284359",
    "end": "3291720"
  },
  {
    "text": "the data in memory and this is something that we're doing for Badger for the key Value Store where we're going to have the dis dis class mode where you",
    "start": "3291720",
    "end": "3298880"
  },
  {
    "text": "everything is stored in memory and then you would be able to run everything on RAM which is not a great idea for a",
    "start": "3298880",
    "end": "3305760"
  },
  {
    "text": "graph database that it's supposed to s a lot of data but if you have something really small that you want really high performance on it's definitely something",
    "start": "3305760",
    "end": "3312359"
  },
  {
    "text": "that you could try is it possible to use MFS uh or do you have to like write a new adapter oh yeah it's already built",
    "start": "3312359",
    "end": "3319720"
  },
  {
    "text": "so uh it's like the what we're doing is not adding a lot of things we're",
    "start": "3319720",
    "end": "3325240"
  },
  {
    "text": "basically removing some checks that we had like there was some blocks that were throwing in disc and some small things",
    "start": "3325240",
    "end": "3330599"
  },
  {
    "text": "that we had to remove by default yeah we already have adapters to write everything directly in memory you don't",
    "start": "3330599",
    "end": "3335799"
  },
  {
    "text": "need to do anything that's cool so if the sorry Johnny if the data set I don't know I apologize to you because the",
    "start": "3335799",
    "end": "3341680"
  },
  {
    "text": "listeners didn't know you had hand up did they I think no this job is",
    "start": "3341680",
    "end": "3347760"
  },
  {
    "text": "hard um and to top it off I've forgotten what I was going to say so over to you",
    "start": "3347760",
    "end": "3353559"
  },
  {
    "text": "Johnny what a great host I'm telling you London Calling it's",
    "start": "3353559",
    "end": "3359200"
  },
  {
    "text": "like there's a big delay as well although there isn't this is amazing sorry we'll cut this bit out I'm just",
    "start": "3359200",
    "end": "3364599"
  },
  {
    "text": "sometimes I just get amazed that technology works so this is one of those times Johnny no this bit this bit will",
    "start": "3364599",
    "end": "3370839"
  },
  {
    "text": "be left in I promise you anything where I look stupid stays in that seems to be the",
    "start": "3370839",
    "end": "3378240"
  },
  {
    "text": "policy so so uh um on episode 103 actually uh we had um some folks from",
    "start": "3378240",
    "end": "3384559"
  },
  {
    "text": "from gra um on the show um we had Manish and we had um Carl Carl Manish Jane um",
    "start": "3384559",
    "end": "3391680"
  },
  {
    "text": "and uh they they we talked about a lot of things including sort of a",
    "start": "3391680",
    "end": "3397119"
  },
  {
    "text": "uhto I'm not I'm sure I'm butchering that retto like you can correct me when",
    "start": "3397119",
    "end": "3402319"
  },
  {
    "text": "you when you answer this but uh uh what is what is um I believe the idea was to",
    "start": "3402319",
    "end": "3407799"
  },
  {
    "text": "introduce um like a a really really good cache that could serve you know um sort",
    "start": "3407799",
    "end": "3413119"
  },
  {
    "text": "of the needs of degraph under the hood I'm interested in hearing sort of the state of that transition whether it's",
    "start": "3413119",
    "end": "3418720"
  },
  {
    "text": "been done already or and how it's how things are going how things are performing um yeah kind of kind of interested in hearing about that yeah so",
    "start": "3418720",
    "end": "3425039"
  },
  {
    "text": "uh I mean yeah technically you pronounce it if you want to go Italian you goto but uh otherwise we say RTO and uh it's",
    "start": "3425039",
    "end": "3433400"
  },
  {
    "text": "much easier and uh so RTO is this cashing mechanism that we're integrating",
    "start": "3433400",
    "end": "3438559"
  },
  {
    "text": "at a at different levels uh so one of the levels is actually in the key Value Store we're going to have an integration",
    "start": "3438559",
    "end": "3444880"
  },
  {
    "text": "with Badger directly and the idea here is that uh We've added uh encryption and",
    "start": "3444880",
    "end": "3451079"
  },
  {
    "text": "compression to the key value store which makes it uh harder in the CPU right so",
    "start": "3451079",
    "end": "3456599"
  },
  {
    "text": "uh when you need to decrypt things uh before you can you can read them that's that's a CPU taking uh extra Cycles so",
    "start": "3456599",
    "end": "3463640"
  },
  {
    "text": "the idea is that by having a a um a cache we will uh make it be as fast as",
    "start": "3463640",
    "end": "3469359"
  },
  {
    "text": "before by using a little bit more memory right uh then on top of that we're also",
    "start": "3469359",
    "end": "3474440"
  },
  {
    "text": "having it at the at dgraph level and uh we're even thinking about using it at",
    "start": "3474440",
    "end": "3480240"
  },
  {
    "text": "graph level so then we could have like cashing at many different levels and trying to see what is the uh the most",
    "start": "3480240",
    "end": "3487480"
  },
  {
    "text": "performing option right uh the interesting thing about vredo is that running a Cash and Go is actually really",
    "start": "3487480",
    "end": "3495280"
  },
  {
    "text": "hard like it is surprisingly hard questions like you know if I give you a",
    "start": "3495280",
    "end": "3500400"
  },
  {
    "text": "pointer to a struct that has a bunch of things how how much memory does it take",
    "start": "3500400",
    "end": "3505799"
  },
  {
    "text": "in memory like how much space does it take in memory that is super hard to answer well the point no not like what",
    "start": "3505799",
    "end": "3513640"
  },
  {
    "text": "is behind the pointer right like you have a stru but then of course it's the sum of the fields sure plus aligning and",
    "start": "3513640",
    "end": "3520880"
  },
  {
    "text": "things like that and then what is the size of a map uh well you know it's the",
    "start": "3520880",
    "end": "3525920"
  },
  {
    "text": "size of all of the keys plus some extra stuff what is the size of a slice well it's the array plus some extra stuff",
    "start": "3525920",
    "end": "3533000"
  },
  {
    "text": "right so you get like plus some extra stuff in so many places that actually figuring out given for instance you know",
    "start": "3533000",
    "end": "3539039"
  },
  {
    "text": "if you have a a Json file and you want to pass it and say with you know certain",
    "start": "3539039",
    "end": "3547359"
  },
  {
    "text": "accuracy how big is this going to be once I pass it in memory that is surprisingly hard so when you're doing",
    "start": "3547359",
    "end": "3554359"
  },
  {
    "text": "this for a cash uh if you don't get that right the problem is that you cannot really tell whether this new object fits",
    "start": "3554359",
    "end": "3560720"
  },
  {
    "text": "in memory or not so should should you drop something before you this one or not it is hard uh and even grpc you know",
    "start": "3560720",
    "end": "3569000"
  },
  {
    "text": "it's like uh grpc works really well but grpc doesn't really do this either in go",
    "start": "3569000",
    "end": "3574920"
  },
  {
    "text": "uh for C++ there's this concept of Arenas where you can decode objects directly into a memory space but uh in",
    "start": "3574920",
    "end": "3582760"
  },
  {
    "text": "go it doesn't do this it doesn't support it right so all of these things like memory management in go are surprisingly",
    "start": "3582760",
    "end": "3590720"
  },
  {
    "text": "complicated uh which is fun but also it's it's like I've seen some issues",
    "start": "3590720",
    "end": "3596039"
  },
  {
    "text": "that was like I literally have no idea I don't know how to help you with this so good luck and of course no none of your",
    "start": "3596039",
    "end": "3601440"
  },
  {
    "text": "old Google friends will talk to anymore so can't even ask them why am I hear on this",
    "start": "3601440",
    "end": "3609359"
  },
  {
    "text": "show that's a good question my",
    "start": "3610079",
    "end": "3615359"
  },
  {
    "text": "God but yeah all in all you know like uh restle the whole idea is to to make",
    "start": "3615359",
    "end": "3621359"
  },
  {
    "text": "Badger better and digra better and uh being able ble to use memory in a way",
    "start": "3621359",
    "end": "3626599"
  },
  {
    "text": "that compensates for the extra cost in CPU uh but also at the same time we wanted to make it open source so anyone",
    "start": "3626599",
    "end": "3632880"
  },
  {
    "text": "can use it for whatever they feel like it and it's it's pretty successful like it's a lot of people have been adopting",
    "start": "3632880",
    "end": "3638280"
  },
  {
    "text": "it uh filing issues and uh feature requests and things like that which is really nice to see yeah I'm actually",
    "start": "3638280",
    "end": "3643839"
  },
  {
    "text": "using it now in a project uh oh nice yeah it is great and it's such a simple kind of uh API as well so it's it's",
    "start": "3643839",
    "end": "3651760"
  },
  {
    "text": "really easy to just plug in and what's it's so satisfying when you suddenly",
    "start": "3651760",
    "end": "3657119"
  },
  {
    "text": "just your application just gets extremely fast it's very satisfying I don't look at the ram I'll just get more",
    "start": "3657119",
    "end": "3663000"
  },
  {
    "text": "RAM if I need some more RAM that's my Approach but others like like to be a little bit more scientific um just so",
    "start": "3663000",
    "end": "3670520"
  },
  {
    "text": "how do you I'll just spell that out then for anyone interested and we will post these links in the show now but it's",
    "start": "3670520",
    "end": "3676039"
  },
  {
    "text": "Resto RTO that's right isn't it r i s t r e tto do you know what our shway is at",
    "start": "3676039",
    "end": "3682839"
  },
  {
    "text": "least is it a type of master and that's not I'm not being",
    "start": "3682839",
    "end": "3688200"
  },
  {
    "text": "rude genu genuinely it's made me hungry",
    "start": "3688200",
    "end": "3694599"
  },
  {
    "text": "because it sounds Italian it's pasta I thought it was I no arredo is",
    "start": "3694599",
    "end": "3701760"
  },
  {
    "text": "like a very very short espresso so it's like a tiny coffee yeah that is es is",
    "start": "3701760",
    "end": "3707520"
  },
  {
    "text": "very tiny there is it yeah so rred is even smaller yeah it's like couple it's",
    "start": "3707520",
    "end": "3713079"
  },
  {
    "text": "couple drops of coffee really like an espresso for kids I think that if you fed your kids with shred you end",
    "start": "3713079",
    "end": "3719760"
  },
  {
    "text": "up with someone like you at the end like I would not fed to my kids yeah it's like same",
    "start": "3719760",
    "end": "3725920"
  },
  {
    "text": "amount of coffee I think it's like same amount of coffee but it's like shorter so it's like really dense right yeah",
    "start": "3725920",
    "end": "3732319"
  },
  {
    "text": "like something like that it's compressed coffee yeah sorry I got I got I got told",
    "start": "3732319",
    "end": "3737520"
  },
  {
    "text": "off for suggesting it was pasta but it turns out it's coffee come on I mean but",
    "start": "3737520",
    "end": "3743839"
  },
  {
    "text": "yeah that's that's the the whole adaa is to make something very small that works well so R is a good name yeah it it is",
    "start": "3743839",
    "end": "3750200"
  },
  {
    "text": "great I recommend people try it it's so easy to plug into your existing go projects as well indeed thank you so",
    "start": "3750200",
    "end": "3757000"
  },
  {
    "text": "much for educating us Frances and what's the what's the domain name for people that want to find out more about what",
    "start": "3757000",
    "end": "3763119"
  },
  {
    "text": "you're doing so uh dgraph AO so DJ r a",
    "start": "3763119",
    "end": "3769039"
  },
  {
    "text": "P.O and uh also before we finish actually I wanted to mention something",
    "start": "3769039",
    "end": "3774160"
  },
  {
    "text": "uh uh so uh there's F them coming up uh",
    "start": "3774160",
    "end": "3779440"
  },
  {
    "text": "you may have heard about it this uh open conference in Belgium that happens in",
    "start": "3779440",
    "end": "3785480"
  },
  {
    "text": "February 1st and 2nd if I'm not mistaken and uh uh this year again I'm",
    "start": "3785480",
    "end": "3791039"
  },
  {
    "text": "co-managing it with uh Mar from uh Mar iins from uh women hug go so the cfp is",
    "start": "3791039",
    "end": "3798240"
  },
  {
    "text": "open so please apply we want to have as many proposals as possible so at the end",
    "start": "3798240",
    "end": "3804359"
  },
  {
    "text": "will get really good high quality talks uh they end up being giving uh given at",
    "start": "3804359",
    "end": "3810119"
  },
  {
    "text": "a very small venue because uh the conference is always super crowded and it's fun but then also we end up with a",
    "start": "3810119",
    "end": "3816960"
  },
  {
    "text": "very nice video so you know even if it's your first time speaking it's a great place to try it out uh and also um you",
    "start": "3816960",
    "end": "3823160"
  },
  {
    "text": "know you will you will have people helping you uh mentoring you uh reviewing your slides and helping you",
    "start": "3823160",
    "end": "3829599"
  },
  {
    "text": "rehearse whatever it needs so you know uh firsttime speakers uh totally welcome",
    "start": "3829599",
    "end": "3835240"
  },
  {
    "text": "and actually encouraged to apply brilliant thank you very much we will post all of these links in the show",
    "start": "3835240",
    "end": "3841400"
  },
  {
    "text": "notes so don't worry and that leaves me all that leaves is for me to say goodbye",
    "start": "3841400",
    "end": "3848720"
  },
  {
    "text": "thank you everybody thanks for listening we'll see you next",
    "start": "3848720",
    "end": "3853279"
  },
  {
    "text": "time all right thank you for tuning into to this week's episode of go time if you're not yet hang with us in go for",
    "start": "3855319",
    "end": "3861480"
  },
  {
    "text": "slack we have a channel called go time FM look it up you'll find us hang with us during the live shows connect with",
    "start": "3861480",
    "end": "3867960"
  },
  {
    "text": "other members of the community share stories share code share coffee recipes whatever it's a lot of fun also we have",
    "start": "3867960",
    "end": "3875000"
  },
  {
    "text": "discussions at changel law.com on every episode head to changel law.com gotime",
    "start": "3875000",
    "end": "3880520"
  },
  {
    "text": "find this episode and discuss it with the community also thanks to fasty our bandwidth partner rbar for helping us",
    "start": "3880520",
    "end": "3886680"
  },
  {
    "text": "move fast and fix things and luno for hosting the change law platform our music is produced by the mysterious",
    "start": "3886680",
    "end": "3893000"
  },
  {
    "text": "break master cylinder and if you want to hear more awesome podcasts like this subscribe to our Master feed it's one",
    "start": "3893000",
    "end": "3899000"
  },
  {
    "text": "feed to rule them all plus some extras that only hit the master feed head to Chang law.com or search for Chang lawm",
    "start": "3899000",
    "end": "3906960"
  },
  {
    "text": "in your podcast client you'll find us thanks for tuning in we'll see you next",
    "start": "3906960",
    "end": "3912060"
  },
  {
    "text": "[Music]",
    "start": "3912060",
    "end": "3919380"
  },
  {
    "text": "week [Music]",
    "start": "3923079",
    "end": "3951650"
  },
  {
    "text": "come",
    "start": "3953079",
    "end": "3956079"
  }
]