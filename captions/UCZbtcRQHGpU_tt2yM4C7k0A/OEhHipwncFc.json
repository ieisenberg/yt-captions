[
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "9120",
    "end": "16039"
  },
  {
    "text": "from all around the go Community thanks to our partners for helping us bring you awesome pods each and every week check",
    "start": "16039",
    "end": "23720"
  },
  {
    "text": "them out at fastly.com fly.io and typ sense.org",
    "start": "23720",
    "end": "30119"
  },
  {
    "text": "okay here we [Music]",
    "start": "30119",
    "end": "41049"
  },
  {
    "text": "go hello and welcome to go time I'm your friendly neighborhood Matt ryer today",
    "start": "43960",
    "end": "50600"
  },
  {
    "text": "we're talking about the files and folders of your go projects big and",
    "start": "50600",
    "end": "55800"
  },
  {
    "text": "small does the Holy Grail exist of this perfect single structure to rule them",
    "start": "55800",
    "end": "61199"
  },
  {
    "text": "all or are we doomed to just be figuring this out for the rest of our miserable lives joining me today to figure this",
    "start": "61199",
    "end": "68560"
  },
  {
    "text": "out my co-host Chris Brando hey Chris hello how are you doing today Matt oh",
    "start": "68560",
    "end": "73799"
  },
  {
    "text": "very good thank you I'm excited to learn about files and folders actually and I suspect there is a lot to learn even",
    "start": "73799",
    "end": "80079"
  },
  {
    "text": "though it's one of those things we kind of take for granted don't we yeah for sure we've got a couple of experts in",
    "start": "80079",
    "end": "85560"
  },
  {
    "text": "with us today to tell us about files and folders in your go projects Ben Johnson's here staff engineer at flyo",
    "start": "85560",
    "end": "92840"
  },
  {
    "text": "flyo Ben yeah yeah nailed it there thank you yeah thanks for having me welcome yeah I know you're the author of Bolt DB",
    "start": "92840",
    "end": "99680"
  },
  {
    "text": "uh live stream and you're working on a distributed SQL light implementation that's right yeah it's called a light FS",
    "start": "99680",
    "end": "106600"
  },
  {
    "text": "yeah nice trying to get all the SQL light everywhere yeah SQL light all the things and do you use files and folders",
    "start": "106600",
    "end": "112640"
  },
  {
    "text": "I mean SQL light famously does no no no no yeah we do yeah just single file uh",
    "start": "112640",
    "end": "118000"
  },
  {
    "text": "database is great oh just one file file interesting what is it though what is a file we're going to find out don't worry",
    "start": "118000",
    "end": "124000"
  },
  {
    "text": "Chris James is also here Chris last time you were on go time you said you were an unemployed bum but now that's not true",
    "start": "124000",
    "end": "131000"
  },
  {
    "text": "anymore is it no I'm an employed bum now uh I'm working at Spring and nature um who are a scientific publisher and yeah",
    "start": "131000",
    "end": "138640"
  },
  {
    "text": "I'm excited to be here to talk about files and folders nice Springer nature is it sort of Jerry Springer based kind",
    "start": "138640",
    "end": "145560"
  },
  {
    "text": "of science debate show yeah it's just like that yeah yeah scientists just come",
    "start": "145560",
    "end": "150800"
  },
  {
    "text": "out and they're like say controversial things and then people are like fighting and then they bring out the",
    "start": "150800",
    "end": "156040"
  },
  {
    "text": "brother-in-law yeah it's somewhat like that yeah yeah all right cool so let's just take a step back a minute but first",
    "start": "156040",
    "end": "162680"
  },
  {
    "text": "of all like this question probably of all the questions I get this is probably the one I get the most which is how do I",
    "start": "162680",
    "end": "170040"
  },
  {
    "text": "lay out my projects and you know if you think back to Ruby on Rails days rubyan rails did something very interesting",
    "start": "170040",
    "end": "176280"
  },
  {
    "text": "where they basically didn't give you a choice in the file structure and the folders everything was by convention so",
    "start": "176280",
    "end": "183560"
  },
  {
    "text": "if you wanted to put it had kind of model view controller pattern models were all in a folder called models views",
    "start": "183560",
    "end": "189680"
  },
  {
    "text": "were in views controllers were in controllers and actually it had meaning the folder structure had meaning then",
    "start": "189680",
    "end": "196319"
  },
  {
    "text": "there's other other Tech and other languages that where that's not the case at all and you really do all your",
    "start": "196319",
    "end": "202519"
  },
  {
    "text": "linking and your sort of stitching it together somewhat manually and you can kind of do anything goes somewhere in in",
    "start": "202519",
    "end": "209159"
  },
  {
    "text": "the middle I think of those two but if we take a big old step back do we",
    "start": "209159",
    "end": "214680"
  },
  {
    "text": "actually know what files and folders are like what what literally are they on the computer no no we don't I don't I don't",
    "start": "214680",
    "end": "220680"
  },
  {
    "text": "think any of us do no I mean it's a great convention that we've built you know for sure I mean Chris has mentioned this before but yeah just like it's",
    "start": "220680",
    "end": "227040"
  },
  {
    "text": "something we just don't think about dayto day yeah they're just there but like when you when you make a folder",
    "start": "227040",
    "end": "232439"
  },
  {
    "text": "what happens does a folder exists somewhere is it just like in a table of contents how does it literally work yeah",
    "start": "232439",
    "end": "239159"
  },
  {
    "text": "I mean basically we have file systems and metadata and they're all pointed to",
    "start": "239159",
    "end": "244280"
  },
  {
    "text": "iodes and there's all kinds of stuff in there that it's all hidden away but you know at the end of the day they just look like these simple constructs for us",
    "start": "244280",
    "end": "251840"
  },
  {
    "text": "it's great yeah sounds like you don't know as well Ben yeah that was all just made up on a spot no but I know I've",
    "start": "251840",
    "end": "258479"
  },
  {
    "text": "I've heard of I've used I've I've touched these Concepts as well in various projects you tend to become an",
    "start": "258479",
    "end": "263639"
  },
  {
    "text": "expert in them when you need to but when you're doing SQL light work you mentioned that it's just a single f",
    "start": "263639",
    "end": "270440"
  },
  {
    "text": "so do you have to sort of know are you seeking across the file do you do you like keep track of like distances and",
    "start": "270440",
    "end": "278160"
  },
  {
    "text": "offsets and things like that in in the file yeah so a lot of file systems are you know page based so sqlite kind of",
    "start": "278160",
    "end": "285520"
  },
  {
    "text": "Builds on top of that file system pages so a lot of times they're like 4K pages and they're evenly distributed through a",
    "start": "285520",
    "end": "291080"
  },
  {
    "text": "database and then internally they're kind of structured you know or logically they're structured as like a a b tree so",
    "start": "291080",
    "end": "297120"
  },
  {
    "text": "there's a lot of like jumping around in these fixed blocks bolt DB was the same way 4K blocks and yeah like with the",
    "start": "297120",
    "end": "303479"
  },
  {
    "text": "sqlite stuff a lot of the stuff I actually do a a fuse implementation so it's like a file system in user space so",
    "start": "303479",
    "end": "309120"
  },
  {
    "text": "we actually intercept calls to SQL light so we can extract out where the the transactions work at or or start and end",
    "start": "309120",
    "end": "315880"
  },
  {
    "text": "so there's a lot of yeah jumping around and there's a lot of little Concepts and file systems you really don't learn until it like bites you and you're like",
    "start": "315880",
    "end": "322080"
  },
  {
    "text": "oh that's really good to know that you know this file name can point to the same iode across two different files and",
    "start": "322080",
    "end": "327600"
  },
  {
    "text": "weird little things like you can delete a file but it's still you can still have a handle to it because you're just deleting the name of the pointer to it",
    "start": "327600",
    "end": "333720"
  },
  {
    "text": "so and that differs by file systems and good stuff yeah yeah same I've done I've",
    "start": "333720",
    "end": "339560"
  },
  {
    "text": "done projects before where using iodes at Sim links and hard links like you know digging into all that stuff like",
    "start": "339560",
    "end": "346479"
  },
  {
    "text": "turns out there is quite a lot going on but it is nice I guess we just don't have to worry about it Go gives us",
    "start": "346479",
    "end": "353520"
  },
  {
    "text": "standard Library packages to for dealing with the file system now how how does that work since you mentioned that there",
    "start": "353520",
    "end": "359319"
  },
  {
    "text": "are it's different on every kind of machine like mac files and directories",
    "start": "359319",
    "end": "365120"
  },
  {
    "text": "and things work differently on a Mac to Windows does go literally just have an implementation per supported",
    "start": "365120",
    "end": "373280"
  },
  {
    "text": "architecture yeah it tries to abstract away a lot of that stuff and I know we haven't gotten to unpopular opinions yet",
    "start": "373280",
    "end": "379400"
  },
  {
    "text": "but you know Rusk actually does some better things around those different implementations whereas in go you kind",
    "start": "379400",
    "end": "384479"
  },
  {
    "text": "of have to know some of those tricks where like if you're going to remove a file on Unix that'll work great even if",
    "start": "384479",
    "end": "390599"
  },
  {
    "text": "you have it open but if you do it on Windows and you still have the file handle open a lot of times it'll uh error out so it's one of those things",
    "start": "390599",
    "end": "397120"
  },
  {
    "text": "you just kind of learn when you you know actually dive in and start running stuff in production Chris James have you heard",
    "start": "397120",
    "end": "403440"
  },
  {
    "text": "of the term iode before no no could you please explain to me what an iode is it",
    "start": "403440",
    "end": "408960"
  },
  {
    "text": "sounds like an apple thing but I assume it isn't yeah it does it sounds like a new new project what would it be though",
    "start": "408960",
    "end": "415639"
  },
  {
    "text": "a node it's too generic maybe when they do teleport ation yeah sounds like a",
    "start": "415639",
    "end": "422319"
  },
  {
    "text": "that kind of thing yeah yeah yeah they probably they probably already reserved the name to be honest in anticipation of",
    "start": "422319",
    "end": "428199"
  },
  {
    "text": "that uh I look forward to it um what do you keep in your files Chris computer codes yeah mainly my poems song lyrics",
    "start": "428199",
    "end": "438240"
  },
  {
    "text": "my diary meeting notes any novels no yeah lots of stuff really I mean I think",
    "start": "438240",
    "end": "444520"
  },
  {
    "text": "for me like as Ben mentioned I think files is such a wonderful abstraction in General that most of the time you really",
    "start": "444520",
    "end": "452120"
  },
  {
    "text": "don't have to care about the details like we should all dream to make an abstraction that so kind of uous and",
    "start": "452120",
    "end": "458000"
  },
  {
    "text": "easy to understand like I remember when I first used a computer when I was like 12 or whatever and the idea of files and",
    "start": "458000",
    "end": "465000"
  },
  {
    "text": "folders clicked for me instantly like it was like this is obvious I'm just putting files of text here and there and",
    "start": "465000",
    "end": "470639"
  },
  {
    "text": "it all makes sense so I think it's a whoever came up with it uh did a good job I assume it was a number of people",
    "start": "470639",
    "end": "476520"
  },
  {
    "text": "really but yeah yeah it's funny do you use like the the physical paper files in your real life still uh not so much I",
    "start": "476520",
    "end": "484000"
  },
  {
    "text": "think they mainly just stuffed away in a drawer somewhere and certainly not as organized as my computer files I'd say",
    "start": "484000",
    "end": "490319"
  },
  {
    "text": "MH nice so go files and folders are meaningful in go I think the obvious",
    "start": "490319",
    "end": "496360"
  },
  {
    "text": "thing is you know our go files are are Dogo they have the Dogo extension",
    "start": "496360",
    "end": "501560"
  },
  {
    "text": "there's also of course uncore test. go files and they're different aren't they to normal go files that's where test",
    "start": "501560",
    "end": "507800"
  },
  {
    "text": "code goes and when you build that stuff's ignored and when you run your test that stuff is included are there",
    "start": "507800",
    "end": "514919"
  },
  {
    "text": "any other rules that we need to be aware of for people there's also the uh underscore operating system or",
    "start": "514919",
    "end": "520880"
  },
  {
    "text": "underscore architecture if you put that at the end of a file just like underscore test it'll only compile or",
    "start": "520880",
    "end": "526760"
  },
  {
    "text": "only be included for that operating system or architecture so don't name things underscore Windows unless you",
    "start": "526760",
    "end": "533040"
  },
  {
    "text": "only want them to uh be imported for Windows yeah that's interesting how do",
    "start": "533040",
    "end": "538200"
  },
  {
    "text": "you feel about that cuz you can do it with build tags as well can't you yeah I heard an argument once that there's like a good reason for having that instead of",
    "start": "538200",
    "end": "544800"
  },
  {
    "text": "build tags I I don't remember at the top of my head it can certainly keep your files like a little bit cleaner overall",
    "start": "544800",
    "end": "551240"
  },
  {
    "text": "but then when you're actually looking at a file you can kind of forget that oh this one's only for Windows or this one's only for a Mac OS yeah it can be",
    "start": "551240",
    "end": "557440"
  },
  {
    "text": "awkward if you're if you edit the wrong file and then it sort of doesn't take any effect because it's not for that",
    "start": "557440",
    "end": "563560"
  },
  {
    "text": "architecture so it's worth definitely knowing about that one another one of course folder is a package of it's a",
    "start": "563560",
    "end": "569600"
  },
  {
    "text": "package in go so this the the go files inside a folder they are grouped in a",
    "start": "569600",
    "end": "574959"
  },
  {
    "text": "meaningful way in go aren't they yeah the one exception there is the underscore test package which I think is",
    "start": "574959",
    "end": "581040"
  },
  {
    "text": "very underutilized in the community um that's one of my favorite features just kind of being able to separate your test code out actually to explain what it is",
    "start": "581040",
    "end": "587800"
  },
  {
    "text": "so if you have files uh you know at the top you put package yada yada yada and",
    "start": "587800",
    "end": "593000"
  },
  {
    "text": "you can also have test files in there and you can have those test files being in a separate package but in the same folder so they can be pack you know at",
    "start": "593000",
    "end": "599640"
  },
  {
    "text": "the top it'll say package yada yada Yore test and I think it's a great way you can kind of use your your package code",
    "start": "599640",
    "end": "606760"
  },
  {
    "text": "as an external package so you're still you know treating it as you're just like a user of that code so you can only use",
    "start": "606760",
    "end": "613200"
  },
  {
    "text": "exported stuff you can only do you have to prefix everything with package names I think it's a great way to kind of abstract away your tests from your",
    "start": "613200",
    "end": "619600"
  },
  {
    "text": "actual code yeah so they're still inside the same folder but they can they're allowed a different package and is that",
    "start": "619600",
    "end": "626360"
  },
  {
    "text": "because the underscore test code is kind of explicitly handled differently is it yeah so it's a is that a side effect or",
    "start": "626360",
    "end": "632880"
  },
  {
    "text": "was that a design decision do you know no it was I believe it's a designed decision I mean that's the only um name",
    "start": "632880",
    "end": "638720"
  },
  {
    "text": "you can actually use as a separate package inside of a single directory i i find I definitely try to do that by",
    "start": "638720",
    "end": "645560"
  },
  {
    "text": "default when I'm writing tests and reason for that because yeah it puts the kind of really healthy constraints that",
    "start": "645560",
    "end": "651480"
  },
  {
    "text": "Ben was talking about and I've definitely been through an experience where you know we started project and I just think we weren't aware of the",
    "start": "651480",
    "end": "657760"
  },
  {
    "text": "underscore test thing so Weare bunch of tests and things and we're like oh this is a cool thing so we add the underscore",
    "start": "657760",
    "end": "663200"
  },
  {
    "text": "tests and then we realize how like bad the design of our package was because",
    "start": "663200",
    "end": "668600"
  },
  {
    "text": "our tests were coupled to so much stuff that it just didn't need to be right so for me that's why it's a really good to",
    "start": "668600",
    "end": "675320"
  },
  {
    "text": "e because you know tests act as documentation for your code so therefore you really want to consume it the same",
    "start": "675320",
    "end": "681800"
  },
  {
    "text": "constraints that someone Import in your package to use your code for Real uh you know make sure they have the same",
    "start": "681800",
    "end": "687279"
  },
  {
    "text": "constraints as well I also think another thing that's quite underutilized is the internal folder which is another thing I",
    "start": "687279",
    "end": "693959"
  },
  {
    "text": "only really learned about I maybe like two years ago and now I'm struggling to think how to explain it but basically",
    "start": "693959",
    "end": "699240"
  },
  {
    "text": "what it means is if you have a package which has an internal folder within it only the parent of that internal package",
    "start": "699240",
    "end": "705519"
  },
  {
    "text": "can import things from the internal thing I feel like I really butchered explaining that but I hope it makes",
    "start": "705519",
    "end": "711200"
  },
  {
    "text": "sense what that means is that it gives you another kind of um way of sharing code without having to share it with the",
    "start": "711200",
    "end": "717680"
  },
  {
    "text": "entire code base right so without this you can make sharable code but it means anything can import it unless you have",
    "start": "717680",
    "end": "724000"
  },
  {
    "text": "circular dependencies so internal gives you kind another way of just having share code but just not with everything",
    "start": "724000",
    "end": "730839"
  },
  {
    "text": "which is a really powerful technique I do feel that internal is heavily overused inside closed source code bases",
    "start": "730839",
    "end": "737800"
  },
  {
    "text": "which I I don't like like people instead of fixing whatever internal problems you're having where people are importing",
    "start": "737800",
    "end": "743279"
  },
  {
    "text": "code they're not supposed to people are like I will just make it very painful for you to import this and i' like it's",
    "start": "743279",
    "end": "750199"
  },
  {
    "text": "like you should probably solve those internal problems instead of trying to like force your codebase into some sort",
    "start": "750199",
    "end": "755240"
  },
  {
    "text": "of way of functioning I do think it's useful for external like if you if",
    "start": "755240",
    "end": "760880"
  },
  {
    "text": "you're a library maintainer I think it could be very useful but still it's like of limited use most of the time but I",
    "start": "760880",
    "end": "767360"
  },
  {
    "text": "think if you're like in a spot where you're like for some reason political or otherwise you can't get people to stop importing your code it's a very useful",
    "start": "767360",
    "end": "773680"
  },
  {
    "text": "tool but I shudder every time I see someone using it like the that's the first thing they do that they make a new",
    "start": "773680",
    "end": "778920"
  },
  {
    "text": "repo and they're like I'm going to put everything under internal and I'm like that no please stop please hold don't do that yeah I find you have to make like a",
    "start": "778920",
    "end": "785360"
  },
  {
    "text": "PR to pull out a piece of code and then also you have to rename all the Imports that that code has in the in the code",
    "start": "785360",
    "end": "791279"
  },
  {
    "text": "base just to be able to use that piece of code so I agree with you like in close Source I don't think it makes a lot of sense but is it not a good signal",
    "start": "791279",
    "end": "797800"
  },
  {
    "text": "though that this is kind of logically contained in this world and should and isn't expected to be used outside of it",
    "start": "797800",
    "end": "804800"
  },
  {
    "text": "cuz there is something about the blast radius of these internal packages if you change them you know if hopefully if",
    "start": "804800",
    "end": "812160"
  },
  {
    "text": "you've only used them in packages alongside that folder then you know you're quite safe that it won't be you",
    "start": "812160",
    "end": "818600"
  },
  {
    "text": "know it's at least in one place whereas if it's has been imported elsewhere you might be breaking things without",
    "start": "818600",
    "end": "824680"
  },
  {
    "text": "realizing it so in a way it's a nice signal but Chris James do you do that by default then do you use internal by",
    "start": "824680",
    "end": "831519"
  },
  {
    "text": "default no so I'm trying to recall an example where we used it um I think we were I know we had some kind of like HP",
    "start": "831519",
    "end": "838320"
  },
  {
    "text": "Handler stuff uh you know code that was to do of HP handlers that we reuse around a bunch",
    "start": "838320",
    "end": "844320"
  },
  {
    "text": "of HP handlers but was totally inappropriate to import elsewhere in a",
    "start": "844320",
    "end": "849519"
  },
  {
    "text": "project now you could argue well just make it prior to the package but there was definitely a reason that we had like",
    "start": "849519",
    "end": "854839"
  },
  {
    "text": "we wanted to share it with some multiple bits but only within a certain part of our system you know I agreed like just",
    "start": "854839",
    "end": "860399"
  },
  {
    "text": "sticking internal at to start of your project I think anything by default is a bit dangerous because you're kind of",
    "start": "860399",
    "end": "865800"
  },
  {
    "text": "turning off your brain and just going well I'll just do this by default um I I think there are very few things in this",
    "start": "865800",
    "end": "871160"
  },
  {
    "text": "world where you should do things by default I think sadly as Engineers we have to engage our brains sometime I I",
    "start": "871160",
    "end": "878240"
  },
  {
    "text": "also think on a level it encourages people like it encourages package sprawl in a way that I that I tend to dislike",
    "start": "878240",
    "end": "885000"
  },
  {
    "text": "CU I think people are like oh well I don't want people to use you know this package externally and it's like well does that need to be its own separate",
    "start": "885000",
    "end": "891000"
  },
  {
    "text": "package or could you just have one larger package instead of like splitting things out so I think there is a slight",
    "start": "891000",
    "end": "896360"
  },
  {
    "text": "tendency among some go Engineers to just like I'm going to have like a bunch of little tiny packages and it's like this",
    "start": "896360",
    "end": "901680"
  },
  {
    "text": "isn't Java your package is not like you don't need to make them small you just need to make them like appropriately",
    "start": "901680",
    "end": "907040"
  },
  {
    "text": "scoped and what that means like is is different for each person but if you know I tend to see that if you're using",
    "start": "907040",
    "end": "912120"
  },
  {
    "text": "internal a lot you might have Miss scoped your packages a little bit and that's something that you might want to",
    "start": "912120",
    "end": "917199"
  },
  {
    "text": "address and fix uh one thing I actually like internal for that I haven't seen I guess a whole lot like I like using it",
    "start": "917199",
    "end": "923399"
  },
  {
    "text": "for almost like utility functions for packages that I use like especially like standard Library packages so I might",
    "start": "923399",
    "end": "929360"
  },
  {
    "text": "have like a testing Ule uh package inside internal where I don't necessarily want anyone else to use it",
    "start": "929360",
    "end": "934399"
  },
  {
    "text": "and all my you know test code might use these helper functions that that kind of thing I don't use it extensively but I",
    "start": "934399",
    "end": "940319"
  },
  {
    "text": "do find those kind of things are helpful to kind of push it out you know somewhere that's not just dumped in a",
    "start": "940319",
    "end": "945759"
  },
  {
    "text": "package in my code kind of cleans up the rest of the code I feel like but that's kind of a more of a side suggestion but",
    "start": "945759",
    "end": "951519"
  },
  {
    "text": "Chris you said something interesting too which was if you have lots of these folders that could be a sign that you're sort of overdoing it so that's tells me",
    "start": "951519",
    "end": "959120"
  },
  {
    "text": "then that that the files and folders that we end up with in a go project are are or should be influenced by the",
    "start": "959120",
    "end": "967040"
  },
  {
    "text": "design of our system and that might sound like an obvious thing but I think I don't know if uh if that's always the",
    "start": "967040",
    "end": "974000"
  },
  {
    "text": "case for different languages but there's something meaningful isn't there about what folders We Choose and therefore",
    "start": "974000",
    "end": "981360"
  },
  {
    "text": "what packages we're creating yeah yeah I think go is you know on the spectrum of",
    "start": "981360",
    "end": "986839"
  },
  {
    "text": "you can kind of put files where ever and you can like write some shell scripts to make it figure out to the like you're",
    "start": "986839",
    "end": "991920"
  },
  {
    "text": "using rails and everything is very prescriptive uh I think go tends to skew more toward the lad side of that you",
    "start": "991920",
    "end": "999240"
  },
  {
    "text": "know I remember in like PHP you'd have like class autoloading where you like put things in a special place and it automatically load them from that place",
    "start": "999240",
    "end": "1005560"
  },
  {
    "text": "or things like that I think with go you have much more flexibility there to just",
    "start": "1005560",
    "end": "1010759"
  },
  {
    "text": "kind of bunch everything together and be be kind of fine in the beginning stages",
    "start": "1010759",
    "end": "1016160"
  },
  {
    "text": "and I think that's like generally what people should Embrace along along that you know you starting a new project you",
    "start": "1016160",
    "end": "1022720"
  },
  {
    "text": "know just start with one package and kind of grow it from there and then figure out what the boundaries of the",
    "start": "1022720",
    "end": "1028120"
  },
  {
    "text": "packages you need are after you've already kind of written them or after you've developed them I think there's a",
    "start": "1028120",
    "end": "1033160"
  },
  {
    "text": "lot of people will in the way that rails is set up think like oh I got to you know split off my hdp handlers over here",
    "start": "1033160",
    "end": "1038600"
  },
  {
    "text": "and my database access over here and this other thing over here and it's like well you don't have to start with that if that's where your project leads and",
    "start": "1038600",
    "end": "1046360"
  },
  {
    "text": "that makes sense as division then sure go do that but there's other styles that your project might you know fall into",
    "start": "1046360",
    "end": "1053400"
  },
  {
    "text": "that maybe you want all those things together instead and you want to do more domain specific packages where you have",
    "start": "1053400",
    "end": "1059400"
  },
  {
    "text": "all of those you know the htb handlers the database access all of that grouped into a package and you have multiple packages like there's there's many",
    "start": "1059400",
    "end": "1065520"
  },
  {
    "text": "different options you have and that is because of the flexibility that go has which just like oh your packages mean",
    "start": "1065520",
    "end": "1071120"
  },
  {
    "text": "whatever you like them to mean please define them for yourself yeah and aside from internal interestingly subf folders",
    "start": "1071120",
    "end": "1078919"
  },
  {
    "text": "aren't sub packages in any way this is another thing that I've seen in other languages where you have a subfolder and",
    "start": "1078919",
    "end": "1086600"
  },
  {
    "text": "that that is to you know it's to do with the scoping it's a bit like the how the internal thing limits what's able to",
    "start": "1086600",
    "end": "1091720"
  },
  {
    "text": "then import it but we we have to include the full path of course but there's no",
    "start": "1091720",
    "end": "1097120"
  },
  {
    "text": "special relationship between a parent and a child package is there no just relationship on the file system yeah so",
    "start": "1097120",
    "end": "1104200"
  },
  {
    "text": "that's interesting I think yeah it's mostly just communicating like you might be grouping things like in standard Library you see stuff in like the",
    "start": "1104200",
    "end": "1110080"
  },
  {
    "text": "encoding package or the uh the archive package it's not a strict relationship just it helps people to understand the",
    "start": "1110080",
    "end": "1115760"
  },
  {
    "text": "groups yeah in a way there's sub packages you could say but there's no nothing enforced by the tools yeah",
    "start": "1115760",
    "end": "1122320"
  },
  {
    "text": "that's the term I usually use subpackage it's easier than just I don't I don't know what else you call them yeah they're they're semantic things not",
    "start": "1122320",
    "end": "1129200"
  },
  {
    "text": "syntactic things it's just like oh this is we it's a subpackage because we've decided it's a subpackage not because of",
    "start": "1129200",
    "end": "1136400"
  },
  {
    "text": "where it sits necessarily what they I'll touch on with uh what Chris was saying was like we don't have there's you know",
    "start": "1136400",
    "end": "1142400"
  },
  {
    "text": "there's some flexibility in go but I think a lot of package structure is really derived by the the Restriction of",
    "start": "1142400",
    "end": "1148720"
  },
  {
    "text": "you know no circular dependencies like in most langu like a lot of languages like Ruby or Java you can kind of go",
    "start": "1148720",
    "end": "1155039"
  },
  {
    "text": "willy-nilly and put your packages anywhere or modules whatever you want to call them and you know at the end of the",
    "start": "1155039",
    "end": "1160640"
  },
  {
    "text": "day it's kind of bike shutting it doesn't really matter you know there's nice groupings everyone has their own taste but in go there's actually",
    "start": "1160640",
    "end": "1166799"
  },
  {
    "text": "consequences to how you structure your packages and because of that circular dependency issue I think that's a really",
    "start": "1166799",
    "end": "1173360"
  },
  {
    "text": "wonderful thing about go I think I reflect on go a lot and it's and it kind of subtly enforces a lot of sort of",
    "start": "1173360",
    "end": "1180400"
  },
  {
    "text": "design lessons learnt over the past like you know 50 years and people often don't",
    "start": "1180400",
    "end": "1186000"
  },
  {
    "text": "appreciate that right because for a long time I've been taught you know dependen feure you go one way right like your",
    "start": "1186000",
    "end": "1192480"
  },
  {
    "text": "Handler can like depend on your domain but your domain shouldn't be coupled to",
    "start": "1192480",
    "end": "1198240"
  },
  {
    "text": "HTP right and that's just something that's been drilled into me since the start but go I think is the first",
    "start": "1198240",
    "end": "1203320"
  },
  {
    "text": "language I've used where it's actually properly enforced that like it just won't let you do it you know a lot of people get frustrated with that Circ",
    "start": "1203320",
    "end": "1209400"
  },
  {
    "text": "dependency eror and you see lots of people asking questions about it but to me it's just a wonderful signal like there's something fish in your design",
    "start": "1209400",
    "end": "1215640"
  },
  {
    "text": "you need to think about this and go yeah apply that rule dependencies should go",
    "start": "1215640",
    "end": "1220960"
  },
  {
    "text": "in One Direction yeah so tell us a little bit about that that problem that happens with this you know you have",
    "start": "1220960",
    "end": "1226799"
  },
  {
    "text": "these two packages and they are interacting in some way maybe you've got some interfaces so that they interact in",
    "start": "1226799",
    "end": "1233480"
  },
  {
    "text": "a sort of nice decoupled way but sometimes you find that one of them does",
    "start": "1233480",
    "end": "1239360"
  },
  {
    "text": "then need to depend on the other and vice versa and so what's the if you have that there's two packages and they both",
    "start": "1239360",
    "end": "1245000"
  },
  {
    "text": "kind of need to depend on each other how do you solve that sure yeah so I mean there's different takes on this in the",
    "start": "1245000",
    "end": "1250600"
  },
  {
    "text": "community I think that you know one common thing when you see two packages that need to depend on each other people",
    "start": "1250600",
    "end": "1256320"
  },
  {
    "text": "will kind of split off a third package to put the the other thing in there and then both those packages can depend on",
    "start": "1256320",
    "end": "1261400"
  },
  {
    "text": "that one third package and then that kind of explodes over time you keep doing that over and over again and that's when you get a ton of packages so",
    "start": "1261400",
    "end": "1268200"
  },
  {
    "text": "for me the way I structure things is I try to start from what I call the application domain uh just kind of like",
    "start": "1268200",
    "end": "1274080"
  },
  {
    "text": "the things in your application that are you know they don't depend on a technology they're not related to your database or your web handlers or",
    "start": "1274080",
    "end": "1280480"
  },
  {
    "text": "anything like that it's just like your user your customer your those kind of objects I put those in the root",
    "start": "1280480",
    "end": "1285559"
  },
  {
    "text": "directory and then everything all the other subpackages kind of reference that",
    "start": "1285559",
    "end": "1291240"
  },
  {
    "text": "so you know your your database can it might have like a user database Service",
    "start": "1291240",
    "end": "1297279"
  },
  {
    "text": "uh where it can actually fetch users and you know communicate like that and that can Implement an interface inside of",
    "start": "1297279",
    "end": "1302440"
  },
  {
    "text": "your your domain package your root package um and then your HTTP package",
    "start": "1302440",
    "end": "1308520"
  },
  {
    "text": "might your web package might then depend on your interface inside that root package so you're not depending directly on the database or your database isn't",
    "start": "1308520",
    "end": "1315919"
  },
  {
    "text": "depending directly on your uh your web Handler so there's some disconnect there and you can do some interesting things",
    "start": "1315919",
    "end": "1321880"
  },
  {
    "text": "around mocking around that as well if you need to you know depends how that that fits your use case and I think",
    "start": "1321880",
    "end": "1327559"
  },
  {
    "text": "there you know that works well generally I think that you don't have to be super strict around that I think you can start",
    "start": "1327559",
    "end": "1334080"
  },
  {
    "text": "depending down the stack so your your web Handler can depend on the the database but you don't necessarily want",
    "start": "1334080",
    "end": "1339799"
  },
  {
    "text": "your database to depend on your web handlers so it really depends on yeah how you structuring your project how",
    "start": "1339799",
    "end": "1345240"
  },
  {
    "text": "complicated it gets what dependencies you have uh you know mocking things like your database isn't always that useful mocking things like S3 is super useful",
    "start": "1345240",
    "end": "1352240"
  },
  {
    "text": "when it costs a lot of money so you know it just depends on the again in the use case yeah I feel like when you have uh",
    "start": "1352240",
    "end": "1358240"
  },
  {
    "text": "multiple like if you have two packages that are kind of depending on each other I tend to see that as a signal that maybe those shouldn't be two different",
    "start": "1358240",
    "end": "1364200"
  },
  {
    "text": "packages and maybe you should try and merge them and merging is definitely more challenging because you got to go",
    "start": "1364200",
    "end": "1369760"
  },
  {
    "text": "rename a bunch of stuff decide like what the new packageing will be and all of that but that helps prevent that kind of",
    "start": "1369760",
    "end": "1375679"
  },
  {
    "text": "package explosion that Ben was talking about where you just wind up with like more and more and more and more packages",
    "start": "1375679",
    "end": "1380760"
  },
  {
    "text": "as things tend to like grow over time and it's easier to merge it now than to",
    "start": "1380760",
    "end": "1386200"
  },
  {
    "text": "merge you know three or five or seven or 50 packages later when you realize you're kind of stuck definitely had code",
    "start": "1386200",
    "end": "1392960"
  },
  {
    "text": "bases I've been in before where it's just like okay well we can just not avoid this circular dependency and I've",
    "start": "1392960",
    "end": "1398559"
  },
  {
    "text": "had to do some pretty egregious stuff to to just make it work and then try to",
    "start": "1398559",
    "end": "1404840"
  },
  {
    "text": "unwind all of that and kind of get everything back into a better so even though it might be painful now to try",
    "start": "1404840",
    "end": "1410240"
  },
  {
    "text": "and merge these two packages merging two packages is going to be a lot easier than trying to merge you know many other",
    "start": "1410240",
    "end": "1415360"
  },
  {
    "text": "packages down the line yeah so Chris Brando then do you air on the side of",
    "start": "1415360",
    "end": "1421080"
  },
  {
    "text": "having sort of one folder and everything just sort of merged in the beginning and break it out later or do you try and do",
    "start": "1421080",
    "end": "1427520"
  },
  {
    "text": "something based on your experience of of what what you think would work it depends usually if I'm building an",
    "start": "1427520",
    "end": "1434600"
  },
  {
    "text": "application of some sort like some sort of executable or something like like a microservice is going to run on a server I just start with one package and then",
    "start": "1434600",
    "end": "1442279"
  },
  {
    "text": "as we as I need to break things out I start breaking things out if it's a library and I have an understanding of",
    "start": "1442279",
    "end": "1448640"
  },
  {
    "text": "the shape that that Library ultimately needs to take I might start breaking out packages early but I do tend to start",
    "start": "1448640",
    "end": "1454799"
  },
  {
    "text": "with just one package and then kind of break things out over time and go from",
    "start": "1454799",
    "end": "1460480"
  },
  {
    "text": "there so unless it's like you you super understand the domain of what you're trying to build and like maybe something",
    "start": "1460480",
    "end": "1465520"
  },
  {
    "text": "you've already built before and you're building like a new version of it to clean everything up then sure start with",
    "start": "1465520",
    "end": "1470600"
  },
  {
    "text": "multiple packages but I think for anything else especially if you're just exploring just it's it's okay to just",
    "start": "1470600",
    "end": "1475960"
  },
  {
    "text": "have one package it's okay to have one package with even a lot of files in it like that's that's not necessarily a bad",
    "start": "1475960",
    "end": "1481440"
  },
  {
    "text": "thing at least I tend to think there's not like a a golden number of files for a package it all just depends on the",
    "start": "1481440",
    "end": "1487919"
  },
  {
    "text": "context yeah they can actually be easier to find things and I find out cu I do the same thing I have a usually quite a",
    "start": "1487919",
    "end": "1494880"
  },
  {
    "text": "big main folder um whether it's called well yeah it usually is called main if",
    "start": "1494880",
    "end": "1500279"
  },
  {
    "text": "it's the main command we can talk about that in a minute I'll often have that",
    "start": "1500279",
    "end": "1505320"
  },
  {
    "text": "lots and lots of files and then use file names to group them up into something that's kind of meaningful and logical",
    "start": "1505320",
    "end": "1511880"
  },
  {
    "text": "and yeah the tooling is just is no there's just no problem I remember on older machines there were limits on",
    "start": "1511880",
    "end": "1517840"
  },
  {
    "text": "files probably still are but I'm sure they're just Way Beyond anything we're going to get to probably yeah I think",
    "start": "1517840",
    "end": "1523840"
  },
  {
    "text": "like maybe with your fat file systems where was like a 4 gig Max but if you",
    "start": "1523840",
    "end": "1529440"
  },
  {
    "text": "have a 4 gig file that's yeah 4 gig code file break that into a couple of",
    "start": "1529440",
    "end": "1535320"
  },
  {
    "text": "packages for some older machines I found that you not even that much older but like running like gof fumed on like a",
    "start": "1535320",
    "end": "1541120"
  },
  {
    "text": "10,000 line file takes like that just like Split Second that's just a little",
    "start": "1541120",
    "end": "1546200"
  },
  {
    "text": "too long and I save a lot so uh it just annoys me every time it has to like catch itself 10,000 for a single file is",
    "start": "1546200",
    "end": "1553240"
  },
  {
    "text": "definitely a point at which you should be exploring and me I have run across code bases that I think like have 20,000",
    "start": "1553240",
    "end": "1560039"
  },
  {
    "text": "lines of code in one file which is just like that's much okay we need to we need to do something about this yeah I",
    "start": "1560039",
    "end": "1567679"
  },
  {
    "text": "sometimes feel like people take the don't do premature abstraction thing a little too far sometimes I don't think",
    "start": "1567679",
    "end": "1573679"
  },
  {
    "text": "you know a file with 5,000 lines of it is acceptable in my view like just break it out a little bit particularly because",
    "start": "1573679",
    "end": "1579520"
  },
  {
    "text": "with files and go like it's not like you can import from two files in the same",
    "start": "1579520",
    "end": "1585320"
  },
  {
    "text": "folder right like it's not it's not a big deal difference almost cut a file in half and just put it in a different file",
    "start": "1585320",
    "end": "1591520"
  },
  {
    "text": "you know just have part one and part two would you yeah yeah that's fine part one. goo and part two. go I like that I",
    "start": "1591520",
    "end": "1598320"
  },
  {
    "text": "would had to C as long as like the you know the 5,000 lines is like one type for some reason please don't split",
    "start": "1598320",
    "end": "1604240"
  },
  {
    "text": "across files because I've run into that as well where people have split types across files and go and it's like one of",
    "start": "1604240",
    "end": "1610520"
  },
  {
    "text": "the most frustrating things like where is this method this method is I can't I cannot oh it's in this other file that's",
    "start": "1610520",
    "end": "1617120"
  },
  {
    "text": "that's annoy and you want up with these smaller files that's a pretty good tip there then for people like put the stuff that's related",
    "start": "1617120",
    "end": "1624080"
  },
  {
    "text": "together in one file I think it's a usability thing like we are users of our",
    "start": "1624080",
    "end": "1629480"
  },
  {
    "text": "codebase so think about the user experience of the codebase I think that that's quite a healthy way to think",
    "start": "1629480",
    "end": "1635240"
  },
  {
    "text": "about this but yeah so with the internal folder we know is is different and special there's also I've seen the CMD",
    "start": "1635240",
    "end": "1642559"
  },
  {
    "text": "folder and PKG folders for the command and for the packages what are those",
    "start": "1642559",
    "end": "1648240"
  },
  {
    "text": "folders can someone just explain what they are sure yeah uh so the the CMD folder a lot of times it's that's the",
    "start": "1648240",
    "end": "1655720"
  },
  {
    "text": "subdirectory off the root and then inside of that you have other subdirectories um based on the name of",
    "start": "1655720",
    "end": "1660840"
  },
  {
    "text": "the actual binary you want to produce uh and this super helpful just to kind of if you want to abstract or separate out",
    "start": "1660840",
    "end": "1666399"
  },
  {
    "text": "your command your binary from your actual root domain package that's how I do it or if you have multiple binaries",
    "start": "1666399",
    "end": "1672559"
  },
  {
    "text": "you want to produce so a lot of times if you see like like in kubernetes you have like C cuddle you know like a control",
    "start": "1672559",
    "end": "1678760"
  },
  {
    "text": "binary that you might produce and you might actually have a server as well so that's a good instance where you have two separate binaries so that's a great",
    "start": "1678760",
    "end": "1684760"
  },
  {
    "text": "way to split them out one caveat there is that stuff that you have in one of those binaries you can't necessarily you",
    "start": "1684760",
    "end": "1691039"
  },
  {
    "text": "can't import from the other binary from the other because they're both main packages and that's another restriction on um packages as far as the PKG folder",
    "start": "1691039",
    "end": "1698440"
  },
  {
    "text": "though uh that's I don't like the PKG folder personally I think a lot of people in the community generally don't",
    "start": "1698440",
    "end": "1704320"
  },
  {
    "text": "it's you know your your structure your folder structure is is your packages so I don't think there's a usefulness to",
    "start": "1704320",
    "end": "1709720"
  },
  {
    "text": "necessarily separa it out kind of Library packages from your binary packages just put it all on the root I",
    "start": "1709720",
    "end": "1715559"
  },
  {
    "text": "wondered if PKG originally they were supposed to be imported where others",
    "start": "1715559",
    "end": "1721399"
  },
  {
    "text": "perhaps weren't and like years and years and years and years ago like before like even before Depp like in the old days I",
    "start": "1721399",
    "end": "1727679"
  },
  {
    "text": "ran across a code base that used PKG but it used it specifically so that so that",
    "start": "1727679",
    "end": "1733559"
  },
  {
    "text": "you could have Imports that didn't have like the the qualified name on it they wind up looking like standard Library",
    "start": "1733559",
    "end": "1740320"
  },
  {
    "text": "packages which was very annoying but the way that you could do that is by having a PKG folder and then basically pointing",
    "start": "1740320",
    "end": "1746760"
  },
  {
    "text": "your go path at the uh or adding to your go path the repository you're working on",
    "start": "1746760",
    "end": "1752080"
  },
  {
    "text": "and so people did that sometimes um very annoying to work on that I've seen that actually yeah cuz you you come across a",
    "start": "1752080",
    "end": "1758559"
  },
  {
    "text": "package that's just like oh it's just like a single word or like a word and a subdirector and you're like I don't",
    "start": "1758559",
    "end": "1763720"
  },
  {
    "text": "think that's in the standard Library like what is that it's like oh no that's not a that's just one of things cuz we have this PKG folder here so I bet you",
    "start": "1763720",
    "end": "1770200"
  },
  {
    "text": "that's where it came from cuz it's an unusual thing but that makes sense because the old gopath used to when you",
    "start": "1770200",
    "end": "1776159"
  },
  {
    "text": "just did an import used to look in all the goath folders for a PKG folder so",
    "start": "1776159",
    "end": "1782600"
  },
  {
    "text": "that's probably where it came from and there is something aesthetic about just doing that but one",
    "start": "1782600",
    "end": "1788760"
  },
  {
    "text": "of the great things about importing things in go I think is the fact you see the full URL of the project often it's a",
    "start": "1788760",
    "end": "1795840"
  },
  {
    "text": "shame they don't match exactly for sub packages honestly and actually I wish GitHub would in fact they could they",
    "start": "1795840",
    "end": "1802000"
  },
  {
    "text": "could fix that I think if they wanted to so just shout out there to get our GitHub friends you know yeah but like",
    "start": "1802000",
    "end": "1807720"
  },
  {
    "text": "having it when you open a file and you've got github.com your favorite",
    "start": "1807720",
    "end": "1812840"
  },
  {
    "text": "package in there you you know exactly where it is you know it's an external package it's a nice signal I agree with",
    "start": "1812840",
    "end": "1818640"
  },
  {
    "text": "you Chris that just having the package name uh although I can see the aesthetic",
    "start": "1818640",
    "end": "1824320"
  },
  {
    "text": "appeal it's confusing you'd think it was a standard Library package Ben do you wish that main was importable",
    "start": "1824320",
    "end": "1831120"
  },
  {
    "text": "uh yes U I actually do I find that like I always think of my application kind of in layers and then kind of the outermost",
    "start": "1831120",
    "end": "1838720"
  },
  {
    "text": "layer is that that binary it's one of the most outer layers is the binary and then outside of that is the main underscore test which will test that",
    "start": "1838720",
    "end": "1845760"
  },
  {
    "text": "main program but if you have multiple binaries sometimes you want to integrate your integration test them all together",
    "start": "1845760",
    "end": "1852360"
  },
  {
    "text": "and that would be nice to be able to import to you know another layer kind of another package to test those",
    "start": "1852360",
    "end": "1858080"
  },
  {
    "text": "so that's my main annoyance I mean you can just compile out the binaries and run the binaries themselves but it's",
    "start": "1858080",
    "end": "1863960"
  },
  {
    "text": "it's a minor annoyance really yeah but that is a bit annoying I I feel like that has led also to to people having",
    "start": "1863960",
    "end": "1871720"
  },
  {
    "text": "very small very thin main packages where it's just like oh I'm just calling into another package that is my actual",
    "start": "1871720",
    "end": "1878039"
  },
  {
    "text": "application and that's all it does it's just like package Main and then you have a funk Main and just calls the thing and",
    "start": "1878039",
    "end": "1883880"
  },
  {
    "text": "then returns cuz you can't import Main and that's kind can be annoying I think",
    "start": "1883880",
    "end": "1889039"
  },
  {
    "text": "it's nice because I definitely strive to keep main as Tiny as possible and to",
    "start": "1889039",
    "end": "1895480"
  },
  {
    "text": "have you know some kind of function that you know takes like standard in and standard out and then it means I can",
    "start": "1895480",
    "end": "1901320"
  },
  {
    "text": "actually test my main well my application if not the actual compiled",
    "start": "1901320",
    "end": "1906960"
  },
  {
    "text": "binary as a separate thing I'm actually quite a fan of that sort of thing so I I do that with a run function or something",
    "start": "1906960",
    "end": "1913320"
  },
  {
    "text": "but that's inside the same file do you have all your stuff pulled out into a different package well to be honest I",
    "start": "1913320",
    "end": "1919440"
  },
  {
    "text": "don't been particularly consistent with it either way I think I in some projects I have just had it a run function just",
    "start": "1919440",
    "end": "1924799"
  },
  {
    "text": "living in the same pack in the main package sometimes I felt the need to have it separately but yeah it it's just",
    "start": "1924799",
    "end": "1931679"
  },
  {
    "text": "in terms of just you know peeling away as much as I can so I can write tests around as much as I can without having",
    "start": "1931679",
    "end": "1937600"
  },
  {
    "text": "to actually compile like the big scary program I think it's quite nice but it's",
    "start": "1937600",
    "end": "1942679"
  },
  {
    "text": "again you know it seems so TR to say but context is important right like if you're just building a fairly small",
    "start": "1942679",
    "end": "1948039"
  },
  {
    "text": "program like a script or something it's probably not worth going through all these hoops to do that if you're building something there I say a little",
    "start": "1948039",
    "end": "1954720"
  },
  {
    "text": "more enterpris then maybe you do want to do that yeah if you're building something that's like production level",
    "start": "1954720",
    "end": "1960240"
  },
  {
    "text": "then you might want to have more of the just to get some more testing or ease the testing of it but if you're just",
    "start": "1960240",
    "end": "1965799"
  },
  {
    "text": "like doing a proof of concept or a prototype like you could just shove everything into a main function if you want like you know like don't get fancy",
    "start": "1965799",
    "end": "1972919"
  },
  {
    "text": "before you need to get fancy [Music]",
    "start": "1972919",
    "end": "1980760"
  },
  {
    "text": "I'm Jared and this is a change log news break in what appears to be a",
    "start": "1980760",
    "end": "1986480"
  },
  {
    "text": "particularly security unaware move Google has added eight new top level",
    "start": "1986480",
    "end": "1991600"
  },
  {
    "text": "domains two of which are quite concerning zip",
    "start": "1991600",
    "end": "1996679"
  },
  {
    "text": "andov yikes RS Technica writes quote while Google marketers say the aim is to",
    "start": "1996679",
    "end": "2003840"
  },
  {
    "text": "designate tying things together or moving really fast and moving pictures and whatever moves",
    "start": "2003840",
    "end": "2010159"
  },
  {
    "text": "you these suffixes are already widely used to designate something all together",
    "start": "2010159",
    "end": "2015279"
  },
  {
    "text": "different specifically zip is an extension used in archive files that use a compression format known as zip the",
    "start": "2015279",
    "end": "2022000"
  },
  {
    "text": "format mov meanwhile appears at the end of video files usually when they were created in Apple's QuickTime format end",
    "start": "2022000",
    "end": "2028960"
  },
  {
    "text": "quote Fishers and scammers Rejoice the rest of us beware and be ready to help",
    "start": "2028960",
    "end": "2035639"
  },
  {
    "text": "protect your family and friends from this otherwise completely avoidable new Threat Vector the link RS Technica",
    "start": "2035639",
    "end": "2043159"
  },
  {
    "text": "article demonstrates a few URLs scammers could now craft and they're darn near indistinguishable from the legit URL",
    "start": "2043159",
    "end": "2050440"
  },
  {
    "text": "even to someone like myself with trained eyes one such URL in the example is a",
    "start": "2050440",
    "end": "2056800"
  },
  {
    "text": "kubernetes release which yes is distributed as a zip file you just heard",
    "start": "2056800",
    "end": "2062839"
  },
  {
    "text": "one of our five top stories from Monday's Chang log news subscribe to the",
    "start": "2062839",
    "end": "2067919"
  },
  {
    "text": "podcast to get all of the week's top stories and pop your email address in at Chang blog.com newws to also receive our",
    "start": "2067919",
    "end": "2075079"
  },
  {
    "text": "free companion email with even more developer news worth your attention once",
    "start": "2075079",
    "end": "2080200"
  },
  {
    "text": "again that's [Music]",
    "start": "2080200",
    "end": "2089179"
  },
  {
    "text": "cases is just good and and like with gof fump how you know we we like the fact",
    "start": "2097079",
    "end": "2103040"
  },
  {
    "text": "that all our go code looks the same Would we not benefit if we could all just agree on this is the single",
    "start": "2103040",
    "end": "2108760"
  },
  {
    "text": "structure of how we do all our things and this leads me on to the project layout package which is quite an",
    "start": "2108760",
    "end": "2115400"
  },
  {
    "text": "interesting uh it's the it's on GitHub and there's a kind of go standards uh",
    "start": "2115400",
    "end": "2121000"
  },
  {
    "text": "repo for package layout tell us a little bit about this cuz it's quite a popular package yeah it's it's a package on",
    "start": "2121000",
    "end": "2127720"
  },
  {
    "text": "GitHub that has been it's a point of contention I would say in the community there's a lot of questions like people",
    "start": "2127720",
    "end": "2133839"
  },
  {
    "text": "will come to the the go for slack I've seen a lot of questions on there I know like Tim Heckman answers a lot of these",
    "start": "2133839",
    "end": "2139200"
  },
  {
    "text": "questions and other people where people will come and say hey I found this standards repo out here this is how I'm",
    "start": "2139200",
    "end": "2144599"
  },
  {
    "text": "supposed to do my project layout and there's a lot of things that people in the community disagree with that are in that repo you know it's not all wrong or",
    "start": "2144599",
    "end": "2151720"
  },
  {
    "text": "anything and by no means I think that there's like a single one packet structure for everyone but I think that",
    "start": "2151720",
    "end": "2157240"
  },
  {
    "text": "the kind of community guidelines we've kind of come together on I think it can lead people astray in some ways and",
    "start": "2157240",
    "end": "2162440"
  },
  {
    "text": "confuse people especially with the name of goang Standards I think is gives the impression that it is you know a",
    "start": "2162440",
    "end": "2168839"
  },
  {
    "text": "sanctioned repo and it's not yeah yeah I think Russ Cox even wrote or commented",
    "start": "2168839",
    "end": "2174560"
  },
  {
    "text": "about this little bit of drama for you and we'll pop this in the show notes for you you can go down that thread",
    "start": "2174560",
    "end": "2180760"
  },
  {
    "text": "yourselves but it does have some interesting points in it and actually one of the folders it mentions it talks",
    "start": "2180760",
    "end": "2186520"
  },
  {
    "text": "about internal the CMD the package folder vendor folders as well are they",
    "start": "2186520",
    "end": "2191760"
  },
  {
    "text": "still a thing uh yeah they can be it I mean I've seen people that will use vendor one interesting use I had for",
    "start": "2191760",
    "end": "2198440"
  },
  {
    "text": "vendor recently was I had a uh a project that would pull in a private repo and I needed to build it up on a third party",
    "start": "2198440",
    "end": "2205000"
  },
  {
    "text": "service and you can actually the way that some of these things work you can push up your project structure your",
    "start": "2205000",
    "end": "2210240"
  },
  {
    "text": "local structure and it'll run it like Heroku kind of thing it can push up whatever code is in your local repo so",
    "start": "2210240",
    "end": "2215480"
  },
  {
    "text": "it's nice to just be able to vendor that in and then it pushes the whole thing up instead of having to pull down and you know send up Keys like API keys for",
    "start": "2215480",
    "end": "2223040"
  },
  {
    "text": "GitHub you know that's one option I don't know that that's super common but generally I I generally avoid it for",
    "start": "2223040",
    "end": "2228599"
  },
  {
    "text": "most open source projects it feels like vendor is like a a relic of the past as well like it was that we really really",
    "start": "2228599",
    "end": "2235680"
  },
  {
    "text": "needed something what was it like six seven years ago when we had you know the battle days of you know it just pulls",
    "start": "2235680",
    "end": "2242000"
  },
  {
    "text": "whatever is on Main like good luck uh vendor definitely helped with dependency management but now that we have modules",
    "start": "2242000",
    "end": "2249240"
  },
  {
    "text": "it doesn't seem like it's as useful as it was in the past mhm yeah i' agree",
    "start": "2249240",
    "end": "2254880"
  },
  {
    "text": "with you I think unless you have a really good use for it a really good use case you should probably avoid it I find like some CI systems sometimes it works",
    "start": "2254880",
    "end": "2261599"
  },
  {
    "text": "better for those but yeah I'd avoid it generally so are there any signs that",
    "start": "2261599",
    "end": "2267800"
  },
  {
    "text": "we've got our structure wrong like are there sort of things we find ourselves doing again and again that are red flags",
    "start": "2267800",
    "end": "2274680"
  },
  {
    "text": "that we should pay attention to yeah like when this was brought up in on the twitters it's all about files and",
    "start": "2274680",
    "end": "2280319"
  },
  {
    "text": "folders and things um what I believe is that when we say things like context is important that's not a particularly",
    "start": "2280319",
    "end": "2286760"
  },
  {
    "text": "actionable piece of advice to people right like context is important what does that mean right I think a more",
    "start": "2286760",
    "end": "2293520"
  },
  {
    "text": "useful things to talk about are how do you know that your structure is working for you and if you can get used to",
    "start": "2293520",
    "end": "2300480"
  },
  {
    "text": "understanding those signs and listening for those signals you'll be able to design the packages and things that you",
    "start": "2300480",
    "end": "2305800"
  },
  {
    "text": "need for your context so when I'm coaching less experienced people about this this is a thing I really lean on I",
    "start": "2305800",
    "end": "2312280"
  },
  {
    "text": "don't like prescribe a particular structure or anything like that I just say look let's just listen to the signals you get so for instance if you",
    "start": "2312280",
    "end": "2319200"
  },
  {
    "text": "find yourself having to constantly rework your tests you know when you change your packages and things that",
    "start": "2319200",
    "end": "2324280"
  },
  {
    "text": "probably means that your package design isn't quite right and maybe things are couples of things that they shouldn't be or maybe you actually your cohesions",
    "start": "2324280",
    "end": "2330960"
  },
  {
    "text": "loss and you need to bring things closer together like U another thing I I love to look at is um",
    "start": "2330960",
    "end": "2337119"
  },
  {
    "text": "the blast radius are change so how often have you worked on a project where someone's asking you to make what sounds like a small change and then by the end",
    "start": "2337119",
    "end": "2344880"
  },
  {
    "text": "of it you've like changeed up 20 files and you think to yourself is this reasonable like is it reasonable I have to change so many things just to do this",
    "start": "2344880",
    "end": "2352000"
  },
  {
    "text": "tiny change and quite often it's just easy to ignore that signal and just kind of move on and okay I'll go pick up the",
    "start": "2352000",
    "end": "2357359"
  },
  {
    "text": "next ticket of jur and just get on with my life right but you should listen to those signals like there's a lack of cohesion in your cbase things are often",
    "start": "2357359",
    "end": "2364200"
  },
  {
    "text": "too scattered apart and you need to think about bring things together and and finally the other thing is having a",
    "start": "2364200",
    "end": "2370160"
  },
  {
    "text": "sense of locality so if Engineers come into the cbase and again they don't know they've been asked to do something and",
    "start": "2370160",
    "end": "2376280"
  },
  {
    "text": "they just have no idea where to go or where to start you're not giving enough signals with your codebase you know we",
    "start": "2376280",
    "end": "2382079"
  },
  {
    "text": "talked earlier about how fars of folders are a wonderful metaphor and metaphors are such a powerful thing for software",
    "start": "2382079",
    "end": "2387400"
  },
  {
    "text": "engineers and quite often we can use uh folders and things to to create these metaphors in people's minds so that they",
    "start": "2387400",
    "end": "2394119"
  },
  {
    "text": "can find the correct thing to change whatever it needs to change and lots of other syles like that but for me that's",
    "start": "2394119",
    "end": "2400079"
  },
  {
    "text": "the thing I I try to get Engineers to focus on just listening to your code and trying to understand why is it difficult",
    "start": "2400079",
    "end": "2406240"
  },
  {
    "text": "to make the changes that we need to do and then using that feedback loop to change your design yeah I'd agree with",
    "start": "2406240",
    "end": "2412119"
  },
  {
    "text": "everything Chris is saying um I think those are great signals I think that some concrete ways as well that are good",
    "start": "2412119",
    "end": "2418359"
  },
  {
    "text": "for kind of code smells I think that if you have a lot of the same prefix on different types that could be an example",
    "start": "2418359",
    "end": "2425040"
  },
  {
    "text": "of where things might need to be split up off you know we look at like the standard Library I think everyone really likes the standard Library layout the",
    "start": "2425040",
    "end": "2430760"
  },
  {
    "text": "package layout uh it all just kind of fit fits because they all kind of layer on top of each other really well and I",
    "start": "2430760",
    "end": "2436480"
  },
  {
    "text": "think a useful exercise is like one example where I think it kind of did poorly in my opinion is the net package",
    "start": "2436480",
    "end": "2442800"
  },
  {
    "text": "where you have just this gigantic package where it has like every Network related thing ever put into it and not",
    "start": "2442800",
    "end": "2448839"
  },
  {
    "text": "trying to critique the go team they're great but I think that in hindsight I think that you could split things out if you see like you know there's IP address",
    "start": "2448839",
    "end": "2455319"
  },
  {
    "text": "there's IP listeners or not the TCP listener TCP address all those things I",
    "start": "2455319",
    "end": "2460520"
  },
  {
    "text": "think those could be split out into a tcp/ip a TCP TCP package because you",
    "start": "2460520",
    "end": "2466880"
  },
  {
    "text": "know like in the you have a network stack where it kind of layers those things naturally and that you know IP",
    "start": "2466880",
    "end": "2472720"
  },
  {
    "text": "doesn't depend on a TCP it's vice versa you know that kind of single dependency",
    "start": "2472720",
    "end": "2478599"
  },
  {
    "text": "so I think that's a good way to look at it and kind of as a code smell yeah that's an interesting point I like Chris",
    "start": "2478599",
    "end": "2484760"
  },
  {
    "text": "what you said you know when you when you do a PR that's got 20 files have changed because of your structure you know those",
    "start": "2484760",
    "end": "2491599"
  },
  {
    "text": "PRS even are harder to review it's harder to really understand what's going on and it's harder to just just by",
    "start": "2491599",
    "end": "2497400"
  },
  {
    "text": "reading it really have a sense of what's going on but that's probably true for any kind of abstractions like that is a",
    "start": "2497400",
    "end": "2503359"
  },
  {
    "text": "price we pay by doing an abstraction so it's like yeah we try not to do loads of abstractions but also you know thing is",
    "start": "2503359",
    "end": "2510599"
  },
  {
    "text": "the abstractions are really what unlocks kind of phenomenal things when we get",
    "start": "2510599",
    "end": "2516880"
  },
  {
    "text": "them right so I think yeah that's quite important and yeah Ben your point was interesting with the net package being",
    "start": "2516880",
    "end": "2523040"
  },
  {
    "text": "so big if it's an API that people are going to be consuming you can't really do that trick of start with a main and",
    "start": "2523040",
    "end": "2529400"
  },
  {
    "text": "break it out later when things become obvious because people are going to be kind of relying on the structures there",
    "start": "2529400",
    "end": "2536560"
  },
  {
    "text": "are there other downsides Ben to just having one folder with everything in um",
    "start": "2536560",
    "end": "2542079"
  },
  {
    "text": "I mean I think understanding kind of how things are structured and how they relate to each other and project I think",
    "start": "2542079",
    "end": "2547119"
  },
  {
    "text": "you can you don't really get a sense of that necessarily just with a single you know go do page that goes forever so I",
    "start": "2547119",
    "end": "2553280"
  },
  {
    "text": "think that can be an issue but no I mean I think that I don't think there's anything wrong with starting with a single one and even with go like there's",
    "start": "2553280",
    "end": "2559960"
  },
  {
    "text": "no real guarantees up until we got to 1.0 what was it 10 11 years ago so before then you know weed depending on",
    "start": "2559960",
    "end": "2566119"
  },
  {
    "text": "all kinds of things that changed but you know once you actually get to that 1.0 part you're really just saying hey you know what this is the structure we're",
    "start": "2566119",
    "end": "2572440"
  },
  {
    "text": "running with it it's not going to change and I think that's the the most important piece I think there are like tools now or there's more tooling than",
    "start": "2572440",
    "end": "2579040"
  },
  {
    "text": "there was before to help migrate so I think like like go fix isn't as big of a thing as it was in the in the early days",
    "start": "2579040",
    "end": "2586240"
  },
  {
    "text": "but having tooling like that that can help to Auto migrate your code if you do like okay I've taken this type and now",
    "start": "2586240",
    "end": "2591720"
  },
  {
    "text": "I've moved it to this other package now you can just run this thing and it just does all that for you that can be helpful along with like aliases and and",
    "start": "2591720",
    "end": "2598280"
  },
  {
    "text": "that sort of thing so it's not I think over the past few years we've gotten tools to make it a bit easier to do",
    "start": "2598280",
    "end": "2604359"
  },
  {
    "text": "those migrations of things out out of packages and breaking larger packages into smaller ones but I think uh on the",
    "start": "2604359",
    "end": "2611160"
  },
  {
    "text": "question of like how do you know if your package structure is like wrong or if things are wrong I think that really it",
    "start": "2611160",
    "end": "2616319"
  },
  {
    "text": "comes down to like can you justify why things are the way they are and do you like that cuz if you don't like that",
    "start": "2616319",
    "end": "2622640"
  },
  {
    "text": "then it's wrong and you should change it but like you know if when you put in a single PR you touch 20 files and you're",
    "start": "2622640",
    "end": "2628040"
  },
  {
    "text": "like oh yeah but like this is the reason why it's like this and it's like a coherent explainable thing then it's like okay well then it's not wrong it's",
    "start": "2628040",
    "end": "2635119"
  },
  {
    "text": "it's annoying but that's like a trade-off that you've chosen so I think like you know the term wrong really depends on like have you sat down and",
    "start": "2635119",
    "end": "2641640"
  },
  {
    "text": "analyze the circumstances that you're in and are you happy with those circumstances or not yeah I that's a",
    "start": "2641640",
    "end": "2647559"
  },
  {
    "text": "really good point I think it's useful too like to go back to code you haven't touched in six months and you're it just looks God awful you're like oh yeah that",
    "start": "2647559",
    "end": "2654079"
  },
  {
    "text": "package structure was not right and like it gives you a lot of sense of what feels right and what doesn't yeah I did",
    "start": "2654079",
    "end": "2659280"
  },
  {
    "text": "that once recently went back to an old package and there was just a folder in there called folder so did to deal with",
    "start": "2659280",
    "end": "2666400"
  },
  {
    "text": "folders though if it was a folder management package then that might be okay yeah no comment well speak of no",
    "start": "2666400",
    "end": "2673319"
  },
  {
    "text": "comment it's that time again it's time for our unpopular",
    "start": "2673319",
    "end": "2678950"
  },
  {
    "text": "[Music] opinions opion you what I actually think",
    "start": "2678950",
    "end": "2685920"
  },
  {
    "text": "should probably leave un",
    "start": "2685920",
    "end": "2692510"
  },
  {
    "text": "[Music] opinion okay who's got a delicious juicy",
    "start": "2692510",
    "end": "2700359"
  },
  {
    "text": "controversial opinion for us what this is the internet we need controversy did",
    "start": "2700359",
    "end": "2706839"
  },
  {
    "text": "you say controversy or controversy uh controversy is the correct way to say it okay Chris",
    "start": "2706839",
    "end": "2712839"
  },
  {
    "text": "brandoo I I don't even controversy I think I say you're not Chris BR it's it's it's controversy like come on okay",
    "start": "2712839",
    "end": "2720599"
  },
  {
    "text": "yeah see controversial isn't it or controversial as I say all right who's",
    "start": "2720599",
    "end": "2726599"
  },
  {
    "text": "got an unpopular opinion for us uh I'm happy to start yes please Ben um my unpopular opinion is that like the most",
    "start": "2726599",
    "end": "2733520"
  },
  {
    "text": "wiely touted features in go so like channels interfaces um I think are some",
    "start": "2733520",
    "end": "2738599"
  },
  {
    "text": "of the not the worst features but kind of the most misused features of the language and that I feel like people",
    "start": "2738599",
    "end": "2745400"
  },
  {
    "text": "that come into the language they hear about those things and then they just they can get confused on like a lot of times channels are not the right answer",
    "start": "2745400",
    "end": "2751760"
  },
  {
    "text": "for things like a mutex is awesome you should probably use a mutex or like kicking off a thousand go routines is",
    "start": "2751760",
    "end": "2757480"
  },
  {
    "text": "probably not a good idea you should you know there's a lot of management around those constructs that I think that people don't see so I think those those",
    "start": "2757480",
    "end": "2764079"
  },
  {
    "text": "popular ideas and constructs are not always great but those go routines are really cheap to make and you can make",
    "start": "2764079",
    "end": "2770960"
  },
  {
    "text": "just a million of them really easy Ben I'm sure why you wouldn't they're super easy to make I agree yeah yeah and then",
    "start": "2770960",
    "end": "2777520"
  },
  {
    "text": "those ooms are great too I think it's it's interesting I think most of the time when you're using channels or or",
    "start": "2777520",
    "end": "2783319"
  },
  {
    "text": "good routines it's like something else is in for you so you don't need to do it yourself like yeah use go routines all",
    "start": "2783319",
    "end": "2788599"
  },
  {
    "text": "the time in like an HTTP server but you don't need to spawn go routines I think like they are good features to have in",
    "start": "2788599",
    "end": "2795000"
  },
  {
    "text": "the language but not necessarily features that you should be clamoring to use I agree with you B I think that is",
    "start": "2795000",
    "end": "2801119"
  },
  {
    "text": "should be a popular opinion don't use don't don't make atrocious packages or applications filled with channels we've",
    "start": "2801119",
    "end": "2807760"
  },
  {
    "text": "all made that mistake please stop yes I mean I'm I'm with you actually I tend to",
    "start": "2807760",
    "end": "2814760"
  },
  {
    "text": "all the old code I had that was channels I've I've tend to end up refactoring away in favor of just a simple mutex or",
    "start": "2814760",
    "end": "2822559"
  },
  {
    "text": "something I just find the semantics actually a lot easier to deal with and I always one t top tip I always keep the",
    "start": "2822559",
    "end": "2830960"
  },
  {
    "text": "Locking and all that code very local so it's you can see where things are locked",
    "start": "2830960",
    "end": "2836559"
  },
  {
    "text": "where they're released probably in one in one function if I can and break and break out the actual execution elsewhere",
    "start": "2836559",
    "end": "2843280"
  },
  {
    "text": "and the other thing I like to say is for packages it's so tempting to want to",
    "start": "2843280",
    "end": "2848880"
  },
  {
    "text": "like if you're delivering a package that's going to do some work it is so tempting to want to solve that problem",
    "start": "2848880",
    "end": "2855040"
  },
  {
    "text": "of doing loads of that work and you know filling up the CPU and just really",
    "start": "2855040",
    "end": "2860319"
  },
  {
    "text": "blasting through it but actually that's harder for people to use it's easier I",
    "start": "2860319",
    "end": "2866680"
  },
  {
    "text": "think for people to implement their own concurrency and their own kinds of things because they they they're going",
    "start": "2866680",
    "end": "2872000"
  },
  {
    "text": "to understand it more their situation just writing as long as you have type safe like you know thread safe types and",
    "start": "2872000",
    "end": "2880040"
  },
  {
    "text": "things which you can get with the atomic package yeah I think it's worth doing it's not a very good bad opinion sorry",
    "start": "2880040",
    "end": "2886359"
  },
  {
    "text": "yeah it might be really popular that one but we'll see yeah still yeah appreciate it just so add to that like I think",
    "start": "2886359",
    "end": "2892520"
  },
  {
    "text": "quite often counterintuitively adding concurrency slows things down right like because concurrency isn't free like you",
    "start": "2892520",
    "end": "2899440"
  },
  {
    "text": "might think that like something you've made your computer do things four times faster or whatever but actually in practice it's slower I mean that's why",
    "start": "2899440",
    "end": "2906000"
  },
  {
    "text": "it's always best to Benchmark things first and then then you can kind of indulge Yourself by playing with the",
    "start": "2906000",
    "end": "2911800"
  },
  {
    "text": "toys uh and then going oh actually maybe this wasn't worth it actually one other thing I actually found interesting like",
    "start": "2911800",
    "end": "2917000"
  },
  {
    "text": "on topic of go routines is like uh you know rust came along and rust is supposed to be the Super safe language",
    "start": "2917000",
    "end": "2922440"
  },
  {
    "text": "and nothing ever goes wrong in Rust I find that like a lot of the the things they fix things like concurrency things",
    "start": "2922440",
    "end": "2928359"
  },
  {
    "text": "like some type safety stuff I don't find as usually the most like the bugs I hit the most and go like the bugs I hit the",
    "start": "2928359",
    "end": "2934920"
  },
  {
    "text": "most and go are like things that will go out of memory and then just the whole program dies so I've actually been",
    "start": "2934920",
    "end": "2940319"
  },
  {
    "text": "really fascinated with like Zig lately because they do all explicit allocations so I think that's a that's an aside",
    "start": "2940319",
    "end": "2946760"
  },
  {
    "text": "really yeah I think that people tend to optimize the wrong parts of their application because it's like there's a",
    "start": "2946760",
    "end": "2952720"
  },
  {
    "text": "place where you think it's like oh here's the place where the actual performance problems are happening and",
    "start": "2952720",
    "end": "2957760"
  },
  {
    "text": "then here's the other place where there's a bunch of fun stuff to do and those are usually not overlapping spaces",
    "start": "2957760",
    "end": "2964079"
  },
  {
    "text": "so people tend to optimize things you spent all this time optimizing this and you haven't really gotten any extra",
    "start": "2964079",
    "end": "2969480"
  },
  {
    "text": "performance but there's that giant ugly thing over there that no one wants to touch where like 90% of our performance",
    "start": "2969480",
    "end": "2975240"
  },
  {
    "text": "problems are okay do we have any other unpopular opinions all right I'll go yeah go so just let me preface this with",
    "start": "2975240",
    "end": "2982760"
  },
  {
    "text": "like I love the go Community but you are you're allowed to criticize those you love right it's okay you know um I hope",
    "start": "2982760",
    "end": "2990440"
  },
  {
    "text": "it's Chris hope you're about to have a go at Chris and not me yeah so I think a lot of figures in the go Community like",
    "start": "2990440",
    "end": "2997160"
  },
  {
    "text": "reject past teachings as like over engineering or actually I'm sad to say Chris he said oh that's Java thinking",
    "start": "2997160",
    "end": "3003400"
  },
  {
    "text": "and I was having some light bedtime reading a few months ago I was reading Martin Fowler's patterns of Enterprise",
    "start": "3003400",
    "end": "3009200"
  },
  {
    "text": "architecture and I can feel all the go Community cringing because Enterprise",
    "start": "3009200",
    "end": "3014640"
  },
  {
    "text": "architecture doesn't sound very goish does it uh and it was written like 23 years ago or something silly like that",
    "start": "3014640",
    "end": "3020880"
  },
  {
    "text": "but I was reading through it and I was realizing that a lot of the stuff that has been discovered in terms like",
    "start": "3020880",
    "end": "3025920"
  },
  {
    "text": "patterns and best practices within go they're all written in that book and I",
    "start": "3025920",
    "end": "3031400"
  },
  {
    "text": "think a lot of Engineers could do with reading some of these past teachings like some of it you sort it you",
    "start": "3031400",
    "end": "3037680"
  },
  {
    "text": "shouldn't like bik shed it entirely like you need to process it and understand it and and apply into the context but I",
    "start": "3037680",
    "end": "3044000"
  },
  {
    "text": "think there are lots of valuable lessons there that don't need to be relearned you can pick up these books and look at",
    "start": "3044000",
    "end": "3049119"
  },
  {
    "text": "them so for instance the classic thing that everyone kind of discovers or has to do some Googling about is how to",
    "start": "3049119",
    "end": "3055000"
  },
  {
    "text": "structure my HP handlers right you know I think Matt you've written a post about it and I've put a thing in my thing",
    "start": "3055000",
    "end": "3060920"
  },
  {
    "text": "about it you know Martin Fowler wrote about the pattern that basically everyone's kind of agreed upon as I say",
    "start": "3060920",
    "end": "3066839"
  },
  {
    "text": "like 23 years ago so mainly my unpopular opinion is read patterns of Enterprise",
    "start": "3066839",
    "end": "3072040"
  },
  {
    "text": "architecture and it will make you a better go developer I don't disagree with the take itself I think my caveat",
    "start": "3072040",
    "end": "3077640"
  },
  {
    "text": "to that is that I really don't want to hear people just like dropping all the pattern names of like Singleton and",
    "start": "3077640",
    "end": "3082760"
  },
  {
    "text": "Abstract Factory and like I think that I think you lose a lot of context when people start using these um these",
    "start": "3082760",
    "end": "3088359"
  },
  {
    "text": "special terms instead of staying within the context of you know yeah kind nure of the language itself yeah I totally",
    "start": "3088359",
    "end": "3093599"
  },
  {
    "text": "agree like um you know we're talking about files and folders right so I I tend to use ports and adapters right which is a very kind of enterpris",
    "start": "3093599",
    "end": "3100359"
  },
  {
    "text": "sounding thing but when I'm doing in go I don't have a ports package because",
    "start": "3100359",
    "end": "3105880"
  },
  {
    "text": "like go is structurally typed rather nominally typed so that means I don't have to say this thing implements this",
    "start": "3105880",
    "end": "3112440"
  },
  {
    "text": "port it just does right I can can just plug this thing in and it works right so",
    "start": "3112440",
    "end": "3118960"
  },
  {
    "text": "I think when people doing PS and thats and go cool that's a valid idea for some context but don't I I really don't see",
    "start": "3118960",
    "end": "3125520"
  },
  {
    "text": "the value making a ports folder with a bunch of interfaces in them like that you just don't need that Ino yeah the",
    "start": "3125520",
    "end": "3131319"
  },
  {
    "text": "knowledge is the thing that is useful I I feel like our industry tends to get very dogmatic about things even when",
    "start": "3131319",
    "end": "3138359"
  },
  {
    "text": "like especially about older stuff like I think it's always incredible how people for for a lot of stuff we're doing now",
    "start": "3138359",
    "end": "3144400"
  },
  {
    "text": "people like this is incred technology we're building and it's like yeah we built this in the 60s and 7s and then forgot about it for 40 years like",
    "start": "3144400",
    "end": "3150520"
  },
  {
    "text": "it's it's not new it's cool that we discovered it again but I think a lot of the times we mistakenly take things from",
    "start": "3150520",
    "end": "3156960"
  },
  {
    "text": "the past misunderstand them and like dogmatically apply them I think that's the problem like the pattern of four",
    "start": "3156960",
    "end": "3162319"
  },
  {
    "text": "book I don't think is a bad book I think the way that people or the gang of four book sorry isn't a bad book but I think",
    "start": "3162319",
    "end": "3167720"
  },
  {
    "text": "the way people apply it is bad so let me just take a bunch of patterns and slap them in my code and then I'll have a",
    "start": "3167720",
    "end": "3172920"
  },
  {
    "text": "good code base or when people don't understand like why something is the way it is or like associate it with",
    "start": "3172920",
    "end": "3179240"
  },
  {
    "text": "something else like my forever example of this is XML like people are like XML is so terrible like XML is actually",
    "start": "3179240",
    "end": "3184920"
  },
  {
    "text": "quite fantastic it's like far better than like Jason and other other similar types for like a whole host of reasons",
    "start": "3184920",
    "end": "3191920"
  },
  {
    "text": "and like the reasons they have to see un popular opinion yeah the reasons I mean I guess it might be an unpopular opinion",
    "start": "3191920",
    "end": "3197920"
  },
  {
    "text": "but like I still think the reason XML is unpopular is because like partly because it's associated with soap which people",
    "start": "3197920",
    "end": "3203680"
  },
  {
    "text": "don't like but also because like back in the day you know it was slow to decode",
    "start": "3203680",
    "end": "3209119"
  },
  {
    "text": "XML in JavaScript in the browser and Jason was like free so people are just like let's use the free thing but even",
    "start": "3209119",
    "end": "3216480"
  },
  {
    "text": "like this whole you know Jason cze is relatively recent as well right I mean like it's called XML HTTP or XML RP",
    "start": "3216480",
    "end": "3224119"
  },
  {
    "text": "whatever it is but has XML in it and it's like Ajax and the X in there stands for XML so I think it's like sometimes",
    "start": "3224119",
    "end": "3230160"
  },
  {
    "text": "we throw out old stuff because we have given it negative connotation when we",
    "start": "3230160",
    "end": "3235640"
  },
  {
    "text": "really should be like no that that thing wasn't bad some of the stuff we were doing with it wasn't great but the thing itself isn't bad I think that's a nice a",
    "start": "3235640",
    "end": "3242000"
  },
  {
    "text": "much nicer way of putting it and I did so thanks Chia I think the astonishing thing about the gang of four book just",
    "start": "3242000",
    "end": "3248400"
  },
  {
    "text": "to round it off is like it literally hasn't there prefer composition over inheritance yeah I swear so many people",
    "start": "3248400",
    "end": "3255319"
  },
  {
    "text": "have like taken a gang of for book and used that as an excuse to construct these like mad inheritance hierarchies",
    "start": "3255319",
    "end": "3260400"
  },
  {
    "text": "from hell and I have every sympathy with people say please don't do this and go and thing about go is it doesn't have",
    "start": "3260400",
    "end": "3266480"
  },
  {
    "text": "inheritance it encourages composition over inheritance just like kind a gang of for book wrote 25 years ago whatever",
    "start": "3266480",
    "end": "3273480"
  },
  {
    "text": "it was it's a level of irony that we we come up with these beautiful patterns for things and these these ideas and the",
    "start": "3273480",
    "end": "3279480"
  },
  {
    "text": "names we give to them tend to get completely inverse to be the thing that we were trying to move away from like",
    "start": "3279480",
    "end": "3285280"
  },
  {
    "text": "this happened with object-oriented programming it happened with relational databases which I also is like another Hill I will probably have to die on of",
    "start": "3285280",
    "end": "3292359"
  },
  {
    "text": "like no all of our SQL databases aren't relational like if you actually look at",
    "start": "3292359",
    "end": "3297839"
  },
  {
    "text": "what EF Cod or Ted Cod wanted out of relational databases but I just noticed",
    "start": "3297839",
    "end": "3302960"
  },
  {
    "text": "over time we keep doing it over and over and over and it's I I I hope we can do it differently in the future is that a",
    "start": "3302960",
    "end": "3308960"
  },
  {
    "text": "submission of an unpopular opinion about XML being good would you like to actually submit that cuz I reckon sure",
    "start": "3308960",
    "end": "3315240"
  },
  {
    "text": "could could win that's an award-winning unpopular opinion right there XML is good I feel like my SQL like no SQL",
    "start": "3315240",
    "end": "3322680"
  },
  {
    "text": "database is a relational database or are not relational databases would also be confusing if not unpopular well that",
    "start": "3322680",
    "end": "3329599"
  },
  {
    "text": "sounded very interesting yeah I was curious about that one yeah yeah I mean to I guess the short of it is that the",
    "start": "3329599",
    "end": "3336039"
  },
  {
    "text": "whole point of uh why they why he came up with relational theory was so that the programmer did not have to care",
    "start": "3336039",
    "end": "3341920"
  },
  {
    "text": "about how data was laid out on disk yeah and so you could just query how you want",
    "start": "3341920",
    "end": "3347160"
  },
  {
    "text": "to query and the database will figure it out and basically every modern database requires you to understand how the data",
    "start": "3347160",
    "end": "3353640"
  },
  {
    "text": "is laid out to dis if you want it function function well like we have to care about indexes like most databases don't generate indexes for you and you",
    "start": "3353640",
    "end": "3360440"
  },
  {
    "text": "can write the way you write SQL queries is highly dependent on how the table structure how everything's laid out on",
    "start": "3360440",
    "end": "3366079"
  },
  {
    "text": "disc like you you know the first thing that happens if you're writing a bad if you're going slow is like oh you have to",
    "start": "3366079",
    "end": "3371240"
  },
  {
    "text": "optimize that query to make sure it can run faster for the particular data structure that you have when literally",
    "start": "3371240",
    "end": "3377680"
  },
  {
    "text": "one of the like the reason why Ted Cod was like I want this is because he's like programmer should not have to care",
    "start": "3377680",
    "end": "3382880"
  },
  {
    "text": "about this this is something that computer should figure out so it's it's literally the opposite of what of what",
    "start": "3382880",
    "end": "3389319"
  },
  {
    "text": "it is well it's funny any of these kind of higher level abstractions they really that's the promise like you don't have",
    "start": "3389319",
    "end": "3395319"
  },
  {
    "text": "to worry about underneath you can just use this thing but if you're going to really use it properly and use it well",
    "start": "3395319",
    "end": "3401920"
  },
  {
    "text": "knowing about what it's really doing you know that mechanical sympathy of what's actually happening down at the files and",
    "start": "3401920",
    "end": "3408960"
  },
  {
    "text": "folders level well files definitely might well change how you do things so",
    "start": "3408960",
    "end": "3414240"
  },
  {
    "text": "it's like yeah yes it's one of those things where I don't want people to have to stop and learn everything before they",
    "start": "3414240",
    "end": "3419400"
  },
  {
    "text": "can be useful the opposite actually get going building things but when it comes to it like it's really interesting to",
    "start": "3419400",
    "end": "3426640"
  },
  {
    "text": "dig deep and learn about how something really is working under the hood for when it come to optimize or improve it",
    "start": "3426640",
    "end": "3434160"
  },
  {
    "text": "yeah I feel like there's like a nice phrase of like uh there's the idea of like especially for cryptography things",
    "start": "3434160",
    "end": "3439760"
  },
  {
    "text": "it's like don't roll your own crypto and I feel like the the whole phrase of that should be don't roll your own cryto and",
    "start": "3439760",
    "end": "3445200"
  },
  {
    "text": "put it in production like please do go Implement crypto algorithms if you'd like just don't use them for anything",
    "start": "3445200",
    "end": "3452000"
  },
  {
    "text": "real and I think that applies to all of this like I don't know go roll your own little operating system kernel go run a",
    "start": "3452000",
    "end": "3457240"
  },
  {
    "text": "little file system like go do these things understand how this stuff works cuz then you will actually know more",
    "start": "3457240",
    "end": "3463039"
  },
  {
    "text": "about how the underlying thing is functioning that you're using I mean I will say a caveat on that like bolt DB",
    "start": "3463039",
    "end": "3468280"
  },
  {
    "text": "was originally not meant to be for production and it just eventually got there so there is some some danger and",
    "start": "3468280",
    "end": "3473960"
  },
  {
    "text": "just rolling your own yeah I will disagree with you on the the SE the relational database piece I think that I",
    "start": "3473960",
    "end": "3480880"
  },
  {
    "text": "think it's relational in the sense that the select defines what you want the data to do and I don't necessarily see",
    "start": "3480880",
    "end": "3487240"
  },
  {
    "text": "like the DML the data manipulation language like not DML ddl like create index and stuff like that as part of the",
    "start": "3487240",
    "end": "3494440"
  },
  {
    "text": "actual relational model necessarily it's kind of almost separate in my opinion so I think that from a select side I mean",
    "start": "3494440",
    "end": "3500640"
  },
  {
    "text": "obviously there's ways to optimize a select but you can adjust how it's implemented from an operator standpoint",
    "start": "3500640",
    "end": "3507200"
  },
  {
    "text": "separately from the person that's actually writing the sequel itself yeah so I mean I I don't want to say that you",
    "start": "3507200",
    "end": "3512359"
  },
  {
    "text": "can that none of the databases that are SQL database could be Rel I think you well technically no because there's",
    "start": "3512359",
    "end": "3518119"
  },
  {
    "text": "other reasons why SQL is not relational but on that point I was making I think yeah you could have a SQL database that",
    "start": "3518119",
    "end": "3524240"
  },
  {
    "text": "is relational I just think that and for the way that we practically use them today they're not in spirit relational",
    "start": "3524240",
    "end": "3531640"
  },
  {
    "text": "yeah and also cod as well I think if I remember the directly he was a mathematician and not actually a",
    "start": "3531640",
    "end": "3537119"
  },
  {
    "text": "programmer himself or maybe he did some programming but I think he was mainly a mathematician so a lot of it was theoretical and feel like once you hit",
    "start": "3537119",
    "end": "3543839"
  },
  {
    "text": "like tires hit the road it's uh yeah you got those kind of performance issues yeah I I think it's there's like a",
    "start": "3543839",
    "end": "3550400"
  },
  {
    "text": "there's a whole host of reasons why things are like wound up the way they did but yeah I think there are I think",
    "start": "3550400",
    "end": "3555880"
  },
  {
    "text": "people have like in the shadows been working on actually relational databases that though cuz the other thing about",
    "start": "3555880",
    "end": "3561280"
  },
  {
    "text": "SQL is like SQL is not a relational language and the the people who create cre SQL deliberately made it not a",
    "start": "3561280",
    "end": "3567760"
  },
  {
    "text": "relational language which is one of those other weird things of history when you go trolling through the research in the papers it's like oh like SQL they",
    "start": "3567760",
    "end": "3574960"
  },
  {
    "text": "were literally like we don't think relational like this relational model thing is is great we're going to create this other language that's specifically",
    "start": "3574960",
    "end": "3581200"
  },
  {
    "text": "this other thing so it's like a competing idea and I think over time they kind of got merged together yeah",
    "start": "3581200",
    "end": "3587400"
  },
  {
    "text": "weird it's weird it's I spent way too much time falling down this rabbit hole it's it's oh yeah it's a whole thing",
    "start": "3587400",
    "end": "3592559"
  },
  {
    "text": "yeah actually another fun fact is the SQL like it was originally called SQL the language and like spelled out s e q",
    "start": "3592559",
    "end": "3599079"
  },
  {
    "text": "e l but then another company had the same name and they couldn't get their rights for it so they switched it to SQL",
    "start": "3599079",
    "end": "3604799"
  },
  {
    "text": "but now everyone calls it SQL so I think it's kind of funny yeah trademarks and all that that's why I'm always like it is SQL if you want to be pedantic about",
    "start": "3604799",
    "end": "3611720"
  },
  {
    "text": "it Chris I feel like you should do an episode like down the rabbit hole with Chris Brando where you just dig deep on",
    "start": "3611720",
    "end": "3619559"
  },
  {
    "text": "something like that just tell us all the history about it and stuff I'd love that it would be fun I I do have a number of",
    "start": "3619559",
    "end": "3625799"
  },
  {
    "text": "topics that I'm just like oh is that how that's supposed to work okay I always think they're very",
    "start": "3625799",
    "end": "3632920"
  },
  {
    "text": "interesting it learn so much but unfortunately it's not for today it's not for now dear listener It's Time to",
    "start": "3632920",
    "end": "3640359"
  },
  {
    "text": "Say Goodbye what did we learn about today files and folders I mean I feel like there's actually a lot we didn't even get to there's the whole iofs",
    "start": "3640359",
    "end": "3648039"
  },
  {
    "text": "package which is an abstraction on top of file systems uh maybe we'll do another episode on that another time but",
    "start": "3648039",
    "end": "3654000"
  },
  {
    "text": "yeah so what did we hear about then well start small and grow from there it depends I heard that a few times and I",
    "start": "3654000",
    "end": "3660359"
  },
  {
    "text": "think that's kind of an important takeaway here like there isn't one structure that just works for everything",
    "start": "3660359",
    "end": "3667760"
  },
  {
    "text": "um don't just follow patterns for the sake of it find out what works for you the patterns can be a useful metaphor",
    "start": "3667760",
    "end": "3674000"
  },
  {
    "text": "but make sure you actually understand the actual benefits and then don't obsess over it and let it be informed by",
    "start": "3674000",
    "end": "3680119"
  },
  {
    "text": "the design of your code rather than the other way around I thought that's quite interesting and I suppose be prepared for it to change as Chris James said if",
    "start": "3680119",
    "end": "3687559"
  },
  {
    "text": "you're fighting with it all the time maybe that's a sign that not all is well and it needs to be you know evolved a",
    "start": "3687559",
    "end": "3693839"
  },
  {
    "text": "little bit and then be prepared to do that you know cuz it's not easy you have to sort of practice it think about like",
    "start": "3693839",
    "end": "3699960"
  },
  {
    "text": "you know you got lots of people working on things big refactors are going to touch lots of things they're going to be",
    "start": "3699960",
    "end": "3705640"
  },
  {
    "text": "you know difficult to get that PR in the normal flow you have to sort of organize around it sometimes so might be worth",
    "start": "3705640",
    "end": "3711920"
  },
  {
    "text": "practicing it's sort of like a teamwork thing as well well lovely stuff well thank you very much we had uh some",
    "start": "3711920",
    "end": "3718279"
  },
  {
    "text": "cracking guests didn't we Chris who which one was your favorite out of Ben or James I I don't pick favorites right",
    "start": "3718279",
    "end": "3725279"
  },
  {
    "text": "just text me what's your M uh Chris James it just answers it no not not",
    "start": "3725279",
    "end": "3731119"
  },
  {
    "text": "really I couldn't pick it's like choosing between your kids if your kids are you know your age or slightly older",
    "start": "3731119",
    "end": "3739000"
  },
  {
    "text": "younger I don't know younger slightly younger no I'd never be able to choose",
    "start": "3739000",
    "end": "3744440"
  },
  {
    "text": "uh Chris James do you have a favorite on here no no that's fine you're all wonderful",
    "start": "3744440",
    "end": "3751640"
  },
  {
    "text": "yeah everyone's wonderful the audience is wonderful the audience is wonderful",
    "start": "3751640",
    "end": "3756920"
  },
  {
    "text": "yes thanks for listening everybody we had Chris James Ben Johnson Chris Brando and me Matt Rya we'll see you next time",
    "start": "3756920",
    "end": "3763000"
  },
  {
    "text": "on go time shall we yeah why not see you next time yeah yeah",
    "start": "3763000",
    "end": "3769960"
  },
  {
    "text": "bye",
    "start": "3773359",
    "end": "3776359"
  },
  {
    "text": "how do you manage the files and folders in your go projects and what do you think of our panel's takes on the",
    "start": "3778559",
    "end": "3784359"
  },
  {
    "text": "subject let us know in the comments there's a link in your show notes and",
    "start": "3784359",
    "end": "3789400"
  },
  {
    "text": "everybody on today's show will get notified about what you have to say we look forward to hearing from you thanks",
    "start": "3789400",
    "end": "3795079"
  },
  {
    "text": "once again to our partners fastly fly and typ sense for supporting our work here at Chang log you too can support",
    "start": "3795079",
    "end": "3802160"
  },
  {
    "text": "our work directly with a change log Plus+ membership make the ads disappear",
    "start": "3802160",
    "end": "3807599"
  },
  {
    "text": "get in on bonuses and extended episodes and more check it out at",
    "start": "3807599",
    "end": "3814039"
  },
  {
    "text": "changelog.md joins Natalie Matt and Johnny to talk prompt engineering for",
    "start": "3815920",
    "end": "3821440"
  },
  {
    "text": "Gophers stay tuned right here we'll have that episode ready for you next",
    "start": "3821440",
    "end": "3827838"
  },
  {
    "text": "week",
    "start": "3833279",
    "end": "3836279"
  },
  {
    "text": "Ang",
    "start": "3849119",
    "end": "3852119"
  }
]