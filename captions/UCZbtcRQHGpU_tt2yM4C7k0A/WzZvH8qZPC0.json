[
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "9040",
    "end": "16320"
  },
  {
    "text": "from all around the go Community change log beats is now a thing check out our",
    "start": "16320",
    "end": "21560"
  },
  {
    "text": "first two albums theme songs which includes this song you're listening to right now and Next Level video game",
    "start": "21560",
    "end": "27800"
  },
  {
    "text": "inspired tracks for your next coding or deep work Adventure find change log beats in Spotify Apple music and the",
    "start": "27800",
    "end": "34559"
  },
  {
    "text": "rest quick thank you to our partners f.com fly to iio and types sense.org",
    "start": "34559",
    "end": "41200"
  },
  {
    "text": "okay here we [Music] [Applause] [Music]",
    "start": "41200",
    "end": "54600"
  },
  {
    "text": "go hello and welcome to today's episode",
    "start": "54600",
    "end": "59719"
  },
  {
    "text": "of of go time today I'm going to be joined by three wonderful guests and",
    "start": "59719",
    "end": "64878"
  },
  {
    "text": "we're going to be talking about event driven systems so we'll Define event driven architecture we'll discuss some",
    "start": "64879",
    "end": "71400"
  },
  {
    "text": "of the problems that it solves and some of the challenges it poses in terms of implementation and trying to solve",
    "start": "71400",
    "end": "77280"
  },
  {
    "text": "problems and then we're going to be chatting a little bit about potential Solutions so without further Ado I'm",
    "start": "77280",
    "end": "82640"
  },
  {
    "text": "going to introduce you to our first of our three wonderful guests we have Victor stanf who is a founding engineer",
    "start": "82640",
    "end": "89680"
  },
  {
    "text": "at at uh Anchorage digital and a co-inventor of their better than cold",
    "start": "89680",
    "end": "94920"
  },
  {
    "text": "storage custody system for digital assets he's been using go for almost uh",
    "start": "94920",
    "end": "100040"
  },
  {
    "text": "exclusively since 2015 and he's been focused promly on backend systems infrastructure and applied cryptography",
    "start": "100040",
    "end": "107399"
  },
  {
    "text": "hello Victor thank you so much for joining us how are you hello doing great doing good are you excited to be on",
    "start": "107399",
    "end": "113360"
  },
  {
    "text": "today very this is my first podcast so well very excited to have you and for all you lovely listeners this was",
    "start": "113360",
    "end": "119520"
  },
  {
    "text": "actually an episode that was a brainchild of a chat than myself and Victor had over coffee so you'll have",
    "start": "119520",
    "end": "124840"
  },
  {
    "text": "him to thank or not to thank depending on how good this episode is um next we",
    "start": "124840",
    "end": "130840"
  },
  {
    "text": "have indu alagas Sami who is a principal engineer at the New York Times uh she's",
    "start": "130840",
    "end": "136360"
  },
  {
    "text": "passionate about event- driven style architecture so a great guest to have on today she's also the organizer of the",
    "start": "136360",
    "end": "142800"
  },
  {
    "text": "SoCal domain driven design Meetup she has over 15 years of experience she's",
    "start": "142800",
    "end": "147879"
  },
  {
    "text": "worked all over the place in healthare biotech emergency services and in her",
    "start": "147879",
    "end": "153680"
  },
  {
    "text": "own words uh in her mind bound is contexts Plus messages equals",
    "start": "153680",
    "end": "159200"
  },
  {
    "text": "microservices I think we're going need to talk a little bit more about that and this is also your first ever podcast so",
    "start": "159200",
    "end": "165879"
  },
  {
    "text": "extremely excited to have you on how are you doing today and thank you Angelica thank you for having me here yes a",
    "start": "165879",
    "end": "171720"
  },
  {
    "text": "little bit nervous but I'm with friends so hey this is fun yeah you're with friends we just",
    "start": "171720",
    "end": "178519"
  },
  {
    "text": "say to have a fun conversation so that would be great and then finally but certainly last uh not least we have",
    "start": "178519",
    "end": "185879"
  },
  {
    "text": "Chris Richardson who is a software architect he's the author of the book microservice patterns and he's the",
    "start": "185879",
    "end": "192920"
  },
  {
    "text": "creator of microservices doio and I see you have your books in your background so for those of you watching on the",
    "start": "192920",
    "end": "198360"
  },
  {
    "text": "video you can see the covers of his books in the background he helps organizing kind of around the world to",
    "start": "198360",
    "end": "205319"
  },
  {
    "text": "try and help people improve their architecture so I'm sure you're going to be bringing a wealth of knowledge to this conversation and thank you so much",
    "start": "205319",
    "end": "211400"
  },
  {
    "text": "for joining us oh it's good to be here little early still waking up but I'm I'm doing good I appreciate it powering",
    "start": "211400",
    "end": "218840"
  },
  {
    "text": "through and hopefully it'll be a stimulating enough conversation to keep everyone uh awake and engaged awesome so",
    "start": "218840",
    "end": "225120"
  },
  {
    "text": "we're going to Dive Right In with the absolute Basics so what is event driven",
    "start": "225120",
    "end": "231360"
  },
  {
    "text": "architecture yeah I mean I think it's interesting I think it's a slightly fuzzy definition but I think one sort of",
    "start": "231360",
    "end": "238159"
  },
  {
    "text": "common definition is it's a system or an application where different parts of",
    "start": "238159",
    "end": "244120"
  },
  {
    "text": "that application use a communicate or collaborate using events and events are",
    "start": "244120",
    "end": "252360"
  },
  {
    "text": "you could say they're messages that or things that they represent things that",
    "start": "252360",
    "end": "258199"
  },
  {
    "text": "occur within a given domain you like like an account was created an account",
    "start": "258199",
    "end": "263400"
  },
  {
    "text": "was debited the flight departed whatever things occur in your domain well",
    "start": "263400",
    "end": "270199"
  },
  {
    "text": "and then Victor indu do you feel like that definition resonates with you I know in some of our initial chats when",
    "start": "270199",
    "end": "276199"
  },
  {
    "text": "we were kind of framing this episode we talked a little bit about how there there's some misconceptions when people",
    "start": "276199",
    "end": "281440"
  },
  {
    "text": "say event driven architecture or whether it may be some people may think of it as",
    "start": "281440",
    "end": "287199"
  },
  {
    "text": "one thing some people may think of it as another so there is really a need to dig deep and Define especially when hoping",
    "start": "287199",
    "end": "293880"
  },
  {
    "text": "to implement a system so that everyone is in line they know what they're talking about they know what this means",
    "start": "293880",
    "end": "299680"
  },
  {
    "text": "I see you nodding and smiling in yeah I I agree with what Chris said I I think",
    "start": "299680",
    "end": "304720"
  },
  {
    "text": "also in my mind it is if you have an architecture that is modeled after real",
    "start": "304720",
    "end": "310120"
  },
  {
    "text": "world like in real world we work asynchronously uh we were talking about",
    "start": "310120",
    "end": "315160"
  },
  {
    "text": "Starbucks earlier you go and order a drink things happen asynchronously you you pay for your drink and then you know",
    "start": "315160",
    "end": "322639"
  },
  {
    "text": "you wait and somebody calls you with your name and your pumpkin spice latte",
    "start": "322639",
    "end": "328080"
  },
  {
    "text": "saying it's ready so coffee s Chris but but so I think if",
    "start": "328080",
    "end": "336479"
  },
  {
    "text": "we take that Paradigm what happens in real world which is all about asynchron and events and you model your actual",
    "start": "336479",
    "end": "344960"
  },
  {
    "text": "software architecture whatever problem domain that you're in in terms of those uh real events and you have services",
    "start": "344960",
    "end": "353280"
  },
  {
    "text": "that react to those events to go do something so you have your whole architecture sort of in this uh in this",
    "start": "353280",
    "end": "360479"
  },
  {
    "text": "flow of events so to me that is event driven style of architecture yeah I I",
    "start": "360479",
    "end": "366919"
  },
  {
    "text": "think all this makes sense but when people think about the venturin systems",
    "start": "366919",
    "end": "372000"
  },
  {
    "text": "they usually think of large microservices deployments with many machines and services a lot a lot of",
    "start": "372000",
    "end": "379440"
  },
  {
    "text": "different moving arts and complexity so I think that that's like a really interesting aspect of it to dive into I",
    "start": "379440",
    "end": "386360"
  },
  {
    "text": "mean microservices is very much your demain Chris right so I'd love to chat",
    "start": "386360",
    "end": "392160"
  },
  {
    "text": "about how do adventurein systems help organize mutations of data and",
    "start": "392160",
    "end": "400520"
  },
  {
    "text": "microservices uh based systems oh yeah I could say something about that so I mean",
    "start": "400520",
    "end": "407080"
  },
  {
    "text": "I feel yeah there's just sort of many different levels to this whole question about what what what's an event driven",
    "start": "407080",
    "end": "413120"
  },
  {
    "text": "system but sort of one way one very specific way of looking at it is you",
    "start": "413120",
    "end": "419879"
  },
  {
    "text": "have like say a microservice architecture it's a set of services right requests flow in and some of those",
    "start": "419879",
    "end": "428080"
  },
  {
    "text": "requests are local to a given service those are just sort of those are trivial",
    "start": "428080",
    "end": "433560"
  },
  {
    "text": "to implement but the really interesting ones are operations that are distributed",
    "start": "433560",
    "end": "439800"
  },
  {
    "text": "across multiple services so like for example there's this example I've been",
    "start": "439800",
    "end": "445039"
  },
  {
    "text": "using sort of adium for years now is to create an order so that that creates an order entity in",
    "start": "445039",
    "end": "452919"
  },
  {
    "text": "the order service you also have to reserve Credit in in the customer",
    "start": "452919",
    "end": "458599"
  },
  {
    "text": "service right so customers have a credit limit so the command create order",
    "start": "458599",
    "end": "464800"
  },
  {
    "text": "actually has to perform two updates and the to implement a",
    "start": "464800",
    "end": "470000"
  },
  {
    "text": "distributed operation like that you have to use one of the service collaboration patterns and in this particular case the",
    "start": "470000",
    "end": "477919"
  },
  {
    "text": "best fit would be to use the Saga pattern which implements a distributed",
    "start": "477919",
    "end": "483000"
  },
  {
    "text": "operation as a series of transactions local asset transactions in each one of",
    "start": "483000",
    "end": "488960"
  },
  {
    "text": "the participating services and you need to coordinate",
    "start": "488960",
    "end": "494360"
  },
  {
    "text": "those transactions using some mechanism and there's actually two different",
    "start": "494360",
    "end": "500120"
  },
  {
    "text": "coordination mechanisms one is orchestration and but the other one we're going to talk about here right is",
    "start": "500120",
    "end": "507159"
  },
  {
    "text": "choreography and that's where you use events so each transaction actually",
    "start": "507159",
    "end": "512599"
  },
  {
    "text": "updates some local business entity like creates an order and then it would publish an event saying order created",
    "start": "512599",
    "end": "521240"
  },
  {
    "text": "that would then trigger the customer service to Reserve credit which would then publish an event interestingly one",
    "start": "521240",
    "end": "528600"
  },
  {
    "text": "of two events credit reserved or credit limit exceeded and then the order",
    "start": "528600",
    "end": "534959"
  },
  {
    "text": "service could would react to that and either approve the order order or cancel",
    "start": "534959",
    "end": "541000"
  },
  {
    "text": "it or reject it so you know that's an example of a choreography based Saga",
    "start": "541000",
    "end": "548040"
  },
  {
    "text": "that's using events to to implement this distributed operation so that that's",
    "start": "548040",
    "end": "553800"
  },
  {
    "text": "sort of one very sort of specific kind of use case for events in a in a",
    "start": "553800",
    "end": "559760"
  },
  {
    "text": "microservice architecture and and the nice thing in what Chris you said is",
    "start": "559760",
    "end": "565079"
  },
  {
    "text": "that the order service and the credit you know the customer service they're",
    "start": "565079",
    "end": "571160"
  },
  {
    "text": "completely autonomous right they're Loosely coupled and they're just reacting to when things happen so",
    "start": "571160",
    "end": "578680"
  },
  {
    "text": "they're not like temporarily coupled and waiting for the service to say hey I'm done or not done so I I really to me I",
    "start": "578680",
    "end": "587399"
  },
  {
    "text": "really love that I love for services to be autonomous and I I think that this is",
    "start": "587399",
    "end": "593560"
  },
  {
    "text": "where like events help bring in like your microservices to be auton",
    "start": "593560",
    "end": "600120"
  },
  {
    "text": "yeah yeah I mean that there sort of I guess interestingly the word coupling actually in software has many different",
    "start": "600120",
    "end": "607640"
  },
  {
    "text": "definitions right there's multiple flavors of it and you sort of touched on it with like temporal coupling right",
    "start": "607640",
    "end": "614279"
  },
  {
    "text": "another word for that is runtime coupling which sort of ENT and in as you",
    "start": "614279",
    "end": "619360"
  },
  {
    "text": "point out in in that design those services are decoupled from a runtime",
    "start": "619360",
    "end": "625680"
  },
  {
    "text": "perspective right so the order service could actually create the order and respond send back",
    "start": "625680",
    "end": "632839"
  },
  {
    "text": "an HTTP response saying hey I've created the order it's pending here's the order",
    "start": "632839",
    "end": "639120"
  },
  {
    "text": "ID check back later to see whether it's been approved or rejected so that means",
    "start": "639120",
    "end": "644880"
  },
  {
    "text": "that the order service can actually respond that request without having to",
    "start": "644880",
    "end": "650839"
  },
  {
    "text": "wait for the customer service to respond to it and that's really important",
    "start": "650839",
    "end": "656200"
  },
  {
    "text": "because if you have long chains of synchronous calls in in a microservice architecture it's actually very brittle",
    "start": "656200",
    "end": "662639"
  },
  {
    "text": "and you risk having higher latency and lower availability and the using using",
    "start": "662639",
    "end": "668079"
  },
  {
    "text": "an asynchronous approach like events is one way to improve or decouple your your",
    "start": "668079",
    "end": "675519"
  },
  {
    "text": "services from a runtime perspective yeah it's interesting that we already got to",
    "start": "675519",
    "end": "681160"
  },
  {
    "text": "coupling and uh these kinds of Concepts because I I thought it was going to take us a lot longer to get there but I I",
    "start": "681160",
    "end": "687920"
  },
  {
    "text": "think it's interesting to compare choreography and orchestration in terms",
    "start": "687920",
    "end": "693560"
  },
  {
    "text": "of coupling in terms of safety in terms of testability because I've actually",
    "start": "693560",
    "end": "699040"
  },
  {
    "text": "worked with orchestration based systems a lot more than choreography based systems and I've really enjoyed the way",
    "start": "699040",
    "end": "705959"
  },
  {
    "text": "that you can see the process the definition of the process the flow of",
    "start": "705959",
    "end": "711680"
  },
  {
    "text": "the process as it goes from one service to another service to another service so",
    "start": "711680",
    "end": "717040"
  },
  {
    "text": "you would be able to see like in the find that order moving from like the the",
    "start": "717040",
    "end": "722200"
  },
  {
    "text": "customer to what what was your example Chris oh well it was order and customer",
    "start": "722200",
    "end": "728959"
  },
  {
    "text": "service right so on the one hand it's that's sort of a trivial example yeah",
    "start": "728959",
    "end": "734279"
  },
  {
    "text": "but but like let's extend the example to like be something a little more like involved right like let's say you want",
    "start": "734279",
    "end": "740480"
  },
  {
    "text": "to book a trip and your trip has like a hotel and also a flight and also like a",
    "start": "740480",
    "end": "746959"
  },
  {
    "text": "train or something like that if you want to sort of like keep your your sanity",
    "start": "746959",
    "end": "752160"
  },
  {
    "text": "like it's really helpful to say okay like you do this then you do this then you do this this imperative style of",
    "start": "752160",
    "end": "757839"
  },
  {
    "text": "programming is much more familiar and much more debuggable for for people than",
    "start": "757839",
    "end": "763120"
  },
  {
    "text": "like an pure event based system where there's a choreography and each service",
    "start": "763120",
    "end": "768279"
  },
  {
    "text": "is relying on the next to pick up where it left off yeah well well it's I I",
    "start": "768279",
    "end": "773399"
  },
  {
    "text": "guess what I would say briefly is is like there's this concept there's this create order Saga or book trip Saga but",
    "start": "773399",
    "end": "782240"
  },
  {
    "text": "with choreography there's no explicit representation of it in the system it's",
    "start": "782240",
    "end": "788600"
  },
  {
    "text": "ah some Services publish some events that other service has have event handlers for and they react to them so",
    "start": "788600",
    "end": "795959"
  },
  {
    "text": "there's you can't sort of look in the code and go oh yeah that's how the create order Saga works right whereas as",
    "start": "795959",
    "end": "803680"
  },
  {
    "text": "you point out with orchestration where you have a centralized orchestrator that",
    "start": "803680",
    "end": "808839"
  },
  {
    "text": "is actually invoking the participants like uh whatever book a hotel book a",
    "start": "808839",
    "end": "815040"
  },
  {
    "text": "flight book a car you you literally have a element s a class should we say in",
    "start": "815040",
    "end": "822399"
  },
  {
    "text": "your system that implements that orchestration logic and so oh yeah you can see what's going on I mean it's",
    "start": "822399",
    "end": "830000"
  },
  {
    "text": "explicitly represented in your code and that that's really valuable especially",
    "start": "830000",
    "end": "835399"
  },
  {
    "text": "when it gets more complex just to pull us back for a second I think you've kind of Chris you've spoken about this or",
    "start": "835399",
    "end": "841800"
  },
  {
    "text": "you've kind of given the delineation in your examples but I do want to for those",
    "start": "841800",
    "end": "846880"
  },
  {
    "text": "who maybe this is their first explosure they're coming to this podcast saying like what is Aventure of an architecture",
    "start": "846880",
    "end": "852920"
  },
  {
    "text": "could we just State explicitly the difference between orchestration versus",
    "start": "852920",
    "end": "858040"
  },
  {
    "text": "choreography is it kind of as you alluded to Chris that if you have some sort of almost like a conductor in an",
    "start": "858040",
    "end": "864240"
  },
  {
    "text": "orchestra place where you are outlining those explicit handlings Etc versus the choreography which is more um step by",
    "start": "864240",
    "end": "871399"
  },
  {
    "text": "step by step by step and less like you see the whole relationship I don't know whether um indu you could kind of give",
    "start": "871399",
    "end": "877800"
  },
  {
    "text": "us a bit of a if no one understands the difference between orchestration and choreography how would you kind of",
    "start": "877800",
    "end": "883519"
  },
  {
    "text": "describe it to them as someone new to this kind of thinking okay so the",
    "start": "883519",
    "end": "888720"
  },
  {
    "text": "orchestrator is this uh you kind said it right he's the conductor he or she they",
    "start": "888720",
    "end": "895360"
  },
  {
    "text": "know what the sequence is so they direct the the sequence they send a message to",
    "start": "895360",
    "end": "901680"
  },
  {
    "text": "the order service saying like go and create this wait for response and then",
    "start": "901680",
    "end": "907000"
  },
  {
    "text": "say okay now you need to send a message to another service right so they control",
    "start": "907000",
    "end": "913800"
  },
  {
    "text": "like how the flow goes and so it is sort of like this Central uh mean in the DDD",
    "start": "913800",
    "end": "919959"
  },
  {
    "text": "world we call this process manager so there's this uh thing in the in the middle that orchestrates like how",
    "start": "919959",
    "end": "926360"
  },
  {
    "text": "responses what what should happen react to responses Etc versus in the",
    "start": "926360",
    "end": "932120"
  },
  {
    "text": "choreography world it is truly asynchronous and there is no person in",
    "start": "932120",
    "end": "938040"
  },
  {
    "text": "the middle things and business processes sort of happen naturally so that's like",
    "start": "938040",
    "end": "943199"
  },
  {
    "text": "the main difference so when the order Service uh so for example you're buying a book in Amazon so Amazon tells you",
    "start": "943199",
    "end": "951279"
  },
  {
    "text": "your order was received you you get that and perhaps the warehouse service is",
    "start": "951279",
    "end": "956399"
  },
  {
    "text": "listening to that event and trying to say oh now I have to make sure to check",
    "start": "956399",
    "end": "961920"
  },
  {
    "text": "I have the inventory maybe you bought something that's perishable how do I you",
    "start": "961920",
    "end": "967160"
  },
  {
    "text": "know P like there are so many business rules that go into how should I you know",
    "start": "967160",
    "end": "972399"
  },
  {
    "text": "send this item over meanwhile there's the billing or the payment side of",
    "start": "972399",
    "end": "977639"
  },
  {
    "text": "things that needs to listen and see oh there's a new order I better make sure",
    "start": "977639",
    "end": "984079"
  },
  {
    "text": "the funds are settled properly so all of these things are reacting independently",
    "start": "984079",
    "end": "990800"
  },
  {
    "text": "working on their own business constraints and rules and Publishing events so yes it is sort of uh diffic so",
    "start": "990800",
    "end": "999360"
  },
  {
    "text": "a lot of people like in my early experience struggled with this sort of notion like what do you mean this",
    "start": "999360",
    "end": "1006519"
  },
  {
    "text": "happens here and this happens here and together this forms a business process wouldn't it be nice if there's this",
    "start": "1006519",
    "end": "1012720"
  },
  {
    "text": "thing in the middle that said like where to go what to do next so I think there are tradeoffs and and so this is kind of",
    "start": "1012720",
    "end": "1020360"
  },
  {
    "text": "like where for me systems thinking and that style of design comes into play",
    "start": "1020360",
    "end": "1026240"
  },
  {
    "text": "your whole thing like you know your ecosystem is ultimately a system that's",
    "start": "1026240",
    "end": "1032000"
  },
  {
    "text": "trying to fulfill the user needs and so regardless of like what autonomous",
    "start": "1032000",
    "end": "1037360"
  },
  {
    "text": "systems and and services you have they all need to communicate so there needs to be a map of how those interactions",
    "start": "1037360",
    "end": "1044280"
  },
  {
    "text": "work and uh how you maintain it but it's about trade-offs and in certain cases",
    "start": "1044280",
    "end": "1051360"
  },
  {
    "text": "maybe if you have a process manager this is one thing that's directing all the traffic how is your concurrency are you",
    "start": "1051360",
    "end": "1058240"
  },
  {
    "text": "going to run into concurrency issues so what what is your load like and how is your process manager working versus in",
    "start": "1058240",
    "end": "1065640"
  },
  {
    "text": "the other case this Loosely coupled system so I think you got a way you know",
    "start": "1065640",
    "end": "1071720"
  },
  {
    "text": "your system better you got to weigh in on what those trade-offs are whether one scenario makes sense also depends on the",
    "start": "1071720",
    "end": "1078720"
  },
  {
    "text": "domain problem does that simplify a little bit yeah I think it's interesting to think about like some of the some",
    "start": "1078720",
    "end": "1084919"
  },
  {
    "text": "example implementations because you can sort of Imagine a trivial implementation of a choreography based system could be",
    "start": "1084919",
    "end": "1093039"
  },
  {
    "text": "that you have one database table you just add entries to it and every service",
    "start": "1093039",
    "end": "1098880"
  },
  {
    "text": "just checks if there's anything new there and it reacts to that that would be probably the simplest to understand",
    "start": "1098880",
    "end": "1106000"
  },
  {
    "text": "version of a choreography B I mean there are many many ways to implement it but that might be helpful",
    "start": "1106000",
    "end": "1112880"
  },
  {
    "text": "conceptually and then an orchestration based system would be much more like you have one service that just makes a",
    "start": "1112880",
    "end": "1119360"
  },
  {
    "text": "request every time that something needs to happen on another service I mean I",
    "start": "1119360",
    "end": "1125039"
  },
  {
    "text": "there are undoubtedly lots of tradeoffs I mean that that's kind of a key point is there are a massive number of",
    "start": "1125039",
    "end": "1131679"
  },
  {
    "text": "tradeoffs and it's a giant sort of hashtag it depends in terms of what what",
    "start": "1131679",
    "end": "1137159"
  },
  {
    "text": "the best choice really is could you dig a Little Deeper there Chris it' be great if like what",
    "start": "1137159",
    "end": "1143280"
  },
  {
    "text": "are some of those kind of tradeoffs possible kind of questions if you're kind of going into a room group of",
    "start": "1143280",
    "end": "1148320"
  },
  {
    "text": "Engineers is an a event driven system the right choice for us what should we use like what are the kind of if you",
    "start": "1148320",
    "end": "1154600"
  },
  {
    "text": "could talk us through the questions to be asked how would you evaluate those tradeoffs well I I I think I want to",
    "start": "1154600",
    "end": "1159919"
  },
  {
    "text": "just sort of touch on another concept issue right like so to me an event",
    "start": "1159919",
    "end": "1166520"
  },
  {
    "text": "driven system or should we say systems that use events are there're sort of a",
    "start": "1166520",
    "end": "1173120"
  },
  {
    "text": "particular type of asynchronous of asynchronous messaging based system",
    "start": "1173120",
    "end": "1179240"
  },
  {
    "text": "right maybe I'll go up a level right so there's like two types of communication between Services right so the simplest",
    "start": "1179240",
    "end": "1186280"
  },
  {
    "text": "one obviously is just to use rest or HTTP right that's synchronous you know a",
    "start": "1186280",
    "end": "1192280"
  },
  {
    "text": "a client which might be another service makes her HTTP request waits for a response to come back so that's",
    "start": "1192280",
    "end": "1199000"
  },
  {
    "text": "synchronous then you have asynchronous systems where Services exchange messages",
    "start": "1199000",
    "end": "1206720"
  },
  {
    "text": "and messages might flow via a message broker but there are",
    "start": "1206720",
    "end": "1212600"
  },
  {
    "text": "brokerless messaging Technologies as well in particular if you think about web hooks right that's actually event",
    "start": "1212600",
    "end": "1219679"
  },
  {
    "text": "delivery using HTTP and maybe that's more common outside of an Enterprise right where",
    "start": "1219679",
    "end": "1227039"
  },
  {
    "text": "third parties can register for event notifications via web hook mechanism",
    "start": "1227039",
    "end": "1232400"
  },
  {
    "text": "right like whatever happens on a GitHub repo or like when twio delivers an SMS",
    "start": "1232400",
    "end": "1238080"
  },
  {
    "text": "message that kind of thing it's all that's all that's basically event delivery via",
    "start": "1238080",
    "end": "1243520"
  },
  {
    "text": "HTTP and then there are multiple types of messages and one type of message is an event and so that represents",
    "start": "1243520",
    "end": "1250520"
  },
  {
    "text": "something that has happened and that that's kind of like that's kind of the",
    "start": "1250520",
    "end": "1255880"
  },
  {
    "text": "true event driven architecture right but then you can have there are other types of messages specifically you can have a",
    "start": "1255880",
    "end": "1263159"
  },
  {
    "text": "command message which is actually a request to do something and then",
    "start": "1263159",
    "end": "1268600"
  },
  {
    "text": "possibly the the recipient of that message sends back a reply message that",
    "start": "1268600",
    "end": "1274400"
  },
  {
    "text": "contains the outcome of whatever it did so choreography based systems or",
    "start": "1274400",
    "end": "1280480"
  },
  {
    "text": "choreography based sagas use event messages to for",
    "start": "1280480",
    "end": "1285880"
  },
  {
    "text": "coordination whereas orchestration based sagas use com they can use command reply",
    "start": "1285880",
    "end": "1292159"
  },
  {
    "text": "messages for communication but everything is asynchronous here it's a really",
    "start": "1292159",
    "end": "1298240"
  },
  {
    "text": "interesting this thingshot I just want to reflect that on that for a second the",
    "start": "1298240",
    "end": "1303520"
  },
  {
    "text": "difference between the the two like the event and the command is not in the",
    "start": "1303520",
    "end": "1310559"
  },
  {
    "text": "technology the way that it's communicated or anything like that it's just like is it something that happened",
    "start": "1310559",
    "end": "1316279"
  },
  {
    "text": "or is it describing what should happen next I I hadn't thought about it that way well it's yeah well it's actually",
    "start": "1316279",
    "end": "1322880"
  },
  {
    "text": "it's like a command is you do this right so like if we think about my customer",
    "start": "1322880",
    "end": "1328600"
  },
  {
    "text": "and Order example right in choreography the order service publishes an order",
    "start": "1328600",
    "end": "1334640"
  },
  {
    "text": "created event that triggers the customer service to Reserve credit with an",
    "start": "1334640",
    "end": "1340559"
  },
  {
    "text": "orchestration based Saga the orchestrator would literally tell the",
    "start": "1340559",
    "end": "1346000"
  },
  {
    "text": "customer service to reserve credit it would send it it's basically like",
    "start": "1346000",
    "end": "1351480"
  },
  {
    "text": "invoking a me well it's like an RPC or a method invocation that is packaged up as",
    "start": "1351480",
    "end": "1357640"
  },
  {
    "text": "a message that would flow over a message broker so it's like events are hey I did",
    "start": "1357640",
    "end": "1364600"
  },
  {
    "text": "this commands are do this so if you're really pure about this distinction you",
    "start": "1364600",
    "end": "1370039"
  },
  {
    "text": "could say that orchestration based system is not an event based system because these are all commands they're",
    "start": "1370039",
    "end": "1376760"
  },
  {
    "text": "not me uh event well it can be a mix of commands and events because your process manager",
    "start": "1376760",
    "end": "1383200"
  },
  {
    "text": "because it's it's uh orchestrating it might listen to an event from you know",
    "start": "1383200",
    "end": "1388440"
  },
  {
    "text": "another system as well so to touch on the difference right so commands and events they both are messages but when",
    "start": "1388440",
    "end": "1396000"
  },
  {
    "text": "you're designing them it's how you name them like Chris said do something that's",
    "start": "1396000",
    "end": "1402320"
  },
  {
    "text": "like you know a direct order that's a command and so you can when you're designing these messages you can use",
    "start": "1402320",
    "end": "1409360"
  },
  {
    "text": "that verb style you know active verb style to name your messages the commands",
    "start": "1409360",
    "end": "1415760"
  },
  {
    "text": "and events are always something that has happened in the past so you name them in",
    "start": "1415760",
    "end": "1421600"
  },
  {
    "text": "the past tense and events are immutable statements of Truth so systems react to",
    "start": "1421600",
    "end": "1429039"
  },
  {
    "text": "events that way versus a command you when you explicitly order some service",
    "start": "1429039",
    "end": "1436320"
  },
  {
    "text": "to do something you have to expect that it can fail so process payment you say",
    "start": "1436320",
    "end": "1443559"
  },
  {
    "text": "the service should go Reserve credit uh that's the example you gave Chris maybe there weren't funds so you can't go and",
    "start": "1443559",
    "end": "1451320"
  },
  {
    "text": "do that reservation so maybe that would fail so the I guess in this case the",
    "start": "1451320",
    "end": "1458000"
  },
  {
    "text": "orchestrator needs to uh or the software designer needs to think about what are",
    "start": "1458000",
    "end": "1463799"
  },
  {
    "text": "the ramifications if this command fails and also have logic to react or take",
    "start": "1463799",
    "end": "1471279"
  },
  {
    "text": "compensating actions to those failures so that also becomes like responsibility",
    "start": "1471279",
    "end": "1477520"
  },
  {
    "text": "of your orchestrator so yeah I I think and this is also where like I feel like",
    "start": "1477520",
    "end": "1484080"
  },
  {
    "text": "you know if you have two autonomous systems or bounded context in DDD terms",
    "start": "1484080",
    "end": "1492080"
  },
  {
    "text": "you can't order like you know another context to go do something um",
    "start": "1492080",
    "end": "1498799"
  },
  {
    "text": "and so maybe within if you have a set of microservices that all say belong to",
    "start": "1498799",
    "end": "1505200"
  },
  {
    "text": "flight planning or or ordering making payments in that case definitely right",
    "start": "1505200",
    "end": "1510799"
  },
  {
    "text": "you can tell a service within that boundary to go do something because you're also looking for failure and",
    "start": "1510799",
    "end": "1517399"
  },
  {
    "text": "reacting for it so this is also where I feel like if you're trying to go cross",
    "start": "1517399",
    "end": "1522960"
  },
  {
    "text": "your area of business capability into another area of business this capability",
    "start": "1522960",
    "end": "1529679"
  },
  {
    "text": "then you communicate using events yeah but but but I kind of want to argue with",
    "start": "1529679",
    "end": "1535840"
  },
  {
    "text": "that because I mean like clearly there are lots of SAS Services right yeah true",
    "start": "1535840",
    "end": "1542399"
  },
  {
    "text": "that have a command based API right like I don't know like say twilio I I tell it",
    "start": "1542399",
    "end": "1549760"
  },
  {
    "text": "to send an SMS message right it's not like yeah I mean",
    "start": "1549760",
    "end": "1555279"
  },
  {
    "text": "I can't invoke twio using an event right",
    "start": "1555279",
    "end": "1560360"
  },
  {
    "text": "so I I kind of reject your notion that you can't ask you can't tell another Dom",
    "start": "1560360",
    "end": "1566679"
  },
  {
    "text": "bounded context to do something I mean you have to be prepared for it to fail",
    "start": "1566679",
    "end": "1572399"
  },
  {
    "text": "true but I can still te I can still tell you to do",
    "start": "1572399",
    "end": "1577440"
  },
  {
    "text": "something yes yes you absolutely can I know bring me a cup of coffee please",
    "start": "1577440",
    "end": "1583679"
  },
  {
    "text": "right and you know and you can go no I don't want to drive for seven hours right but I but other other than that",
    "start": "1583679",
    "end": "1590720"
  },
  {
    "text": "it's like I I guess I go oh my coffee is finished right that's an event I I look",
    "start": "1590720",
    "end": "1596799"
  },
  {
    "text": "at it as a heuristic more so as a rule right like so in most cases of course",
    "start": "1596799",
    "end": "1604880"
  },
  {
    "text": "like depends on the domain that you're working with does it make sense for this",
    "start": "1604880",
    "end": "1610399"
  },
  {
    "text": "orchestrator to go send a command and and so it's sort of this General",
    "start": "1610399",
    "end": "1615440"
  },
  {
    "text": "heuristic I try to use of course like you know if there are cases where you absolutely have to then sure but this is",
    "start": "1615440",
    "end": "1624919"
  },
  {
    "text": "something that I've used and has helped me in the past so again I think it",
    "start": "1624919",
    "end": "1630120"
  },
  {
    "text": "depends on the context of your problem and for maybe you know a simpler",
    "start": "1630120",
    "end": "1635480"
  },
  {
    "text": "scenario like what you said Chris yeah you don't have to be so dogmatic but",
    "start": "1635480",
    "end": "1641480"
  },
  {
    "text": "it's just a hereis use it if it meets your needs oh this is going to be fun",
    "start": "1641480",
    "end": "1649520"
  },
  {
    "text": "so so well here's a really interesting thing because I think you're arguing that in a complex case choreography",
    "start": "1650000",
    "end": "1657679"
  },
  {
    "text": "might work better and I actually think I would argue the exact opposite so here's",
    "start": "1657679",
    "end": "1663279"
  },
  {
    "text": "an example so if you think about this if you actually dissect my customer and Order example so that you know you think",
    "start": "1663279",
    "end": "1670440"
  },
  {
    "text": "about a more I mean it's a trivial thing but you think about a more complete example right where there are numer nous",
    "start": "1670440",
    "end": "1677880"
  },
  {
    "text": "events that the order service can publish that must then cause the customer service to either Reserve",
    "start": "1677880",
    "end": "1684880"
  },
  {
    "text": "credit or update credit or release credit for for a given customer right so",
    "start": "1684880",
    "end": "1691320"
  },
  {
    "text": "what that actually means is the customer service has to be aware of all of the",
    "start": "1691320",
    "end": "1697760"
  },
  {
    "text": "various life cycle events that can occur within the order service so and which is",
    "start": "1697760",
    "end": "1704399"
  },
  {
    "text": "kind of weird right like why why the customer need to know about orders or or",
    "start": "1704399",
    "end": "1710200"
  },
  {
    "text": "order life cycle events and then if you contrast that with an orchestration based approach the customer service is",
    "start": "1710200",
    "end": "1718519"
  },
  {
    "text": "merely told to reserve or release credit and it doesn't know",
    "start": "1718519",
    "end": "1723880"
  },
  {
    "text": "why right the orchestrator knows why because it's implementing the operations",
    "start": "1723880",
    "end": "1729960"
  },
  {
    "text": "like create order edit order order cancelled order shipped order paid so on",
    "start": "1729960",
    "end": "1736720"
  },
  {
    "text": "so forth right right so you sort of you you could argue that there's less",
    "start": "1736720",
    "end": "1741960"
  },
  {
    "text": "knowledge that you know there's more knowledge in the orchestrator but there's less knowledge in the customer",
    "start": "1741960",
    "end": "1748600"
  },
  {
    "text": "service they don't have to know about anything they just have to provide an API for managing credit right which is",
    "start": "1748600",
    "end": "1755640"
  },
  {
    "text": "actually kind of why when I publish an event in my system I can't actually expect twilio to know that it has to",
    "start": "1755640",
    "end": "1762159"
  },
  {
    "text": "send an SMS message right maybe uh one way to think about it is that you want",
    "start": "1762159",
    "end": "1768519"
  },
  {
    "text": "one like in certain situations you want one system or one service to understand",
    "start": "1768519",
    "end": "1775480"
  },
  {
    "text": "the full context of what's going on so that you can put your business logic",
    "start": "1775480",
    "end": "1780679"
  },
  {
    "text": "there so you can Define your business process and I think and you also like mentioned this concept of like some sort",
    "start": "1780679",
    "end": "1787799"
  },
  {
    "text": "of like business process executor what did you call it a process manager um I",
    "start": "1787799",
    "end": "1794360"
  },
  {
    "text": "think it sort of like okay so if it depends on like what your service is doing Chris like you touched on like",
    "start": "1794360",
    "end": "1802440"
  },
  {
    "text": "this service only does X it doesn't you know know about anything else in this",
    "start": "1802440",
    "end": "1807600"
  },
  {
    "text": "case like The Saga is the is the one that's directing and you know responding to all of the actions but if you had if",
    "start": "1807600",
    "end": "1816240"
  },
  {
    "text": "you had services like when I think about like services in in you know it's a set",
    "start": "1816240",
    "end": "1822039"
  },
  {
    "text": "of services that help Implement a business capability for the user right so in that case it's it's not a simple",
    "start": "1822039",
    "end": "1829159"
  },
  {
    "text": "thing there's a lot of like you know rules and validations and so this sort",
    "start": "1829159",
    "end": "1836240"
  },
  {
    "text": "of context would be the context that's responsible for all those rules so when",
    "start": "1836240",
    "end": "1842960"
  },
  {
    "text": "an event arrives like in the choreography model it's just the",
    "start": "1842960",
    "end": "1848320"
  },
  {
    "text": "interesting fact that something happened in the other context but that might",
    "start": "1848320",
    "end": "1853440"
  },
  {
    "text": "drive like a whole set of rules and processes in this cont context and and",
    "start": "1853440",
    "end": "1858919"
  },
  {
    "text": "so I just don't like the interconnections or or like this context",
    "start": "1858919",
    "end": "1864720"
  },
  {
    "text": "having to know state or additional details so that's the stuff that I'm",
    "start": "1864720",
    "end": "1870240"
  },
  {
    "text": "struggling with how much of information should both these contexts know about",
    "start": "1870240",
    "end": "1876159"
  },
  {
    "text": "each other right well it's like it I mean I think number one thing to remember in software design or",
    "start": "1876159",
    "end": "1883320"
  },
  {
    "text": "architecture is it depends right and it's almost like the there sort of",
    "start": "1883320",
    "end": "1888840"
  },
  {
    "text": "knowledge you know there's certain sort of complexities or who knows about what",
    "start": "1888840",
    "end": "1895480"
  },
  {
    "text": "that must exist in a system for for it to function but and then you have",
    "start": "1895480",
    "end": "1901240"
  },
  {
    "text": "multiple ways of of sort of Designing that and and it ends up being tradeoffs",
    "start": "1901240",
    "end": "1907440"
  },
  {
    "text": "right like should the customer domain know about orders and you could say well",
    "start": "1907440",
    "end": "1913639"
  },
  {
    "text": "there might there might be certain advantages to that right but then there's certain downsides or de",
    "start": "1913639",
    "end": "1919679"
  },
  {
    "text": "centralize it which has some benefits but then it might actually have a whole bunch of of downsides and and I kind of",
    "start": "1919679",
    "end": "1927159"
  },
  {
    "text": "feel I mean so it really does depend and you you kind of have to make these",
    "start": "1927159",
    "end": "1933080"
  },
  {
    "text": "decisions on a sort of Case by case so like you know the sort of the way I",
    "start": "1933080",
    "end": "1938120"
  },
  {
    "text": "think about it which is to go back to Angelica's original question which is like how would I do this right so I I",
    "start": "1938120",
    "end": "1945519"
  },
  {
    "text": "mean so like if we're looking at implementing a command right if we just narrow it down to you you need to",
    "start": "1945519",
    "end": "1952440"
  },
  {
    "text": "implement a command like create order or cancel order that updates things in",
    "start": "1952440",
    "end": "1959320"
  },
  {
    "text": "multiple services that needs to be a saga so then you have to design The Saga",
    "start": "1959320",
    "end": "1964960"
  },
  {
    "text": "in sort of an abstract sense like it's a series of of linear steps and some of",
    "start": "1964960",
    "end": "1970519"
  },
  {
    "text": "those steps have compensating transactions which are invoked if a subsequent step fails and the",
    "start": "1970519",
    "end": "1977480"
  },
  {
    "text": "compensating Transaction undoes what was done previously right Ian which is one",
    "start": "1977480",
    "end": "1982639"
  },
  {
    "text": "of the complexities of sagas so you end up with a series of steps some of which",
    "start": "1982639",
    "end": "1988200"
  },
  {
    "text": "have compensating transactions and then the next step level down is okay do I",
    "start": "1988200",
    "end": "1994039"
  },
  {
    "text": "use orchestration or do I use choreography and then so you end up with two candidate designs and it's like H",
    "start": "1994039",
    "end": "2002600"
  },
  {
    "text": "which of those two designs has the best characteristics like in terms of ease of",
    "start": "2002600",
    "end": "2009440"
  },
  {
    "text": "understanding right which I think is a huge differentiator between orchestration and choreography and then",
    "start": "2009440",
    "end": "2015960"
  },
  {
    "text": "you have to look at the particular C kind of design time coupling there who",
    "start": "2015960",
    "end": "2021039"
  },
  {
    "text": "knows about what right and then just figure out which of the which of the options is the least worst one yeah and",
    "start": "2021039",
    "end": "2028639"
  },
  {
    "text": "when we get to a certain scale like I don't know if you guys have noticed this but as you add third party dependencies",
    "start": "2028639",
    "end": "2035519"
  },
  {
    "text": "to your system you are forced to take a very methodical approach to interacting",
    "start": "2035519",
    "end": "2042600"
  },
  {
    "text": "with them to mocking them out to like testing your interactions with them and you never expect that third party",
    "start": "2042600",
    "end": "2049398"
  },
  {
    "text": "dependency to do anything different for you you I mean you can ask for a certain",
    "start": "2049399",
    "end": "2054878"
  },
  {
    "text": "feature something like that but you're never going to say I sent you an event go figure out what to do with it so at a",
    "start": "2054879",
    "end": "2062158"
  },
  {
    "text": "certain scale I think that internal systems benefit from",
    "start": "2062159",
    "end": "2067398"
  },
  {
    "text": "being decoupled as if they're a third party so being able to completely assume",
    "start": "2067399",
    "end": "2074520"
  },
  {
    "text": "that another system is a black box that you can't interact with gives you the ability to kind of cut out all of that",
    "start": "2074520",
    "end": "2081599"
  },
  {
    "text": "complexity from your own system and if you can do that internally effectively",
    "start": "2081599",
    "end": "2087638"
  },
  {
    "text": "then it gives you theoretical infinite scalability right yeah I mean I'll just",
    "start": "2087639",
    "end": "2093919"
  },
  {
    "text": "say I mean more and more I'm thinking that most software is you know",
    "start": "2093919",
    "end": "2099040"
  },
  {
    "text": "exploitive and anything of any complexity ends up being a giant mess sooner or later and I feel like one of",
    "start": "2099040",
    "end": "2107079"
  },
  {
    "text": "the key reasons for that is that not enough effort is made to ensure that the",
    "start": "2107079",
    "end": "2115200"
  },
  {
    "text": "system is comprised of EAS sort of easily understood Loosely coupled Parts",
    "start": "2115200",
    "end": "2124079"
  },
  {
    "text": "yeah and the Loosely coupled part here is key that's sort of what I'm what I'm saying like if you could take a part of",
    "start": "2124079",
    "end": "2131160"
  },
  {
    "text": "your system and assume that it's a third party company that's never going to",
    "start": "2131160",
    "end": "2137000"
  },
  {
    "text": "respond to any of your requests for anything it's never going to call you like you're going to call it and it's",
    "start": "2137000",
    "end": "2143960"
  },
  {
    "text": "like a totally independent system then it really changes the way that you think",
    "start": "2143960",
    "end": "2149000"
  },
  {
    "text": "about Building Systems right yeah I was thinking like you know like you said Chris there trade-offs and also how you",
    "start": "2149000",
    "end": "2157400"
  },
  {
    "text": "design these things you can use the orchestrator you can use the choreography you can you can do both so",
    "start": "2157400",
    "end": "2165079"
  },
  {
    "text": "let's say that in the choreography or or like in the process manager so you've",
    "start": "2165079",
    "end": "2171319"
  },
  {
    "text": "you've shipped off this thing right so the process manager sort of ents and",
    "start": "2171319",
    "end": "2177359"
  },
  {
    "text": "you're good now let's say business has a new requirement that says hey you know",
    "start": "2177359",
    "end": "2183280"
  },
  {
    "text": "we want to track our customers who are interested in this product that we are",
    "start": "2183280",
    "end": "2189440"
  },
  {
    "text": "or or customers in this area that we ship to something right an interesting",
    "start": "2189440",
    "end": "2195200"
  },
  {
    "text": "requirement that comes in now do you go and modify your existing process manager",
    "start": "2195200",
    "end": "2201920"
  },
  {
    "text": "uh so you could right like you could go and add logic like after the the thing got shipped go do this other thing right",
    "start": "2201920",
    "end": "2210079"
  },
  {
    "text": "or in your choreography model you have an event that says this got shipped so",
    "start": "2210079",
    "end": "2217359"
  },
  {
    "text": "you could have a listener that listens to that event and does that extra bit of",
    "start": "2217359",
    "end": "2223760"
  },
  {
    "text": "logic or like you know keeping track of customers or something that was interesting for marketing and that is",
    "start": "2223760",
    "end": "2230760"
  },
  {
    "text": "like completely autonomous right so so do you and I think this is where like",
    "start": "2230760",
    "end": "2237280"
  },
  {
    "text": "for me the power of like choreography comes in because now you have these you",
    "start": "2237280",
    "end": "2243680"
  },
  {
    "text": "can write your services that sort of align with your business needs and these",
    "start": "2243680",
    "end": "2249040"
  },
  {
    "text": "are like you know so you didn't have so in one model you would go and change your process manager making changes in",
    "start": "2249040",
    "end": "2256839"
  },
  {
    "text": "the other you just introduced a new service that just consumes this event does its thing you're don't have to",
    "start": "2256839",
    "end": "2262960"
  },
  {
    "text": "touch your process manager so I think there's a balance right it's there's a balance in yeah your business",
    "start": "2262960",
    "end": "2269560"
  },
  {
    "text": "requirements your needs and where does choreography fit better where does",
    "start": "2269560",
    "end": "2276040"
  },
  {
    "text": "process man manager fit better and just because you have process manager doesn't mean you can't use",
    "start": "2276040",
    "end": "2282400"
  },
  {
    "text": "choreography so it's all about tradeoffs yeah yeah no you you you rais a really",
    "start": "2282400",
    "end": "2287920"
  },
  {
    "text": "interesting point sort of kind of in a sense what what you described as a is",
    "start": "2287920",
    "end": "2293359"
  },
  {
    "text": "the application of the open closed principle right which is you want a",
    "start": "2293359",
    "end": "2298440"
  },
  {
    "text": "service or a system to be open to extension and close to modification um",
    "start": "2298440",
    "end": "2304240"
  },
  {
    "text": "right and events are are actually a good way of doing that so I sort of maybe the",
    "start": "2304240",
    "end": "2310560"
  },
  {
    "text": "way I view it is like okay the core perhaps even if the core logic of",
    "start": "2310560",
    "end": "2315880"
  },
  {
    "text": "creating an order or implementing some other operation is best implemented using",
    "start": "2315880",
    "end": "2321720"
  },
  {
    "text": "orchestration for unanticipated needs or kind of sort of",
    "start": "2321720",
    "end": "2328760"
  },
  {
    "text": "super Loosely just other things that you might want to bolt on afterwards that",
    "start": "2328760",
    "end": "2334280"
  },
  {
    "text": "are not part of the core responsibility these then publishing events as well so",
    "start": "2334280",
    "end": "2341119"
  },
  {
    "text": "the order so even if you had orchestration the order service and customer service can publish events and",
    "start": "2341119",
    "end": "2347720"
  },
  {
    "text": "then to do other things that are unrelated to creating an order or",
    "start": "2347720",
    "end": "2352960"
  },
  {
    "text": "managing orders say other services could just listen to those events and do",
    "start": "2352960",
    "end": "2358359"
  },
  {
    "text": "whatever they want right and the order service doesn't care and and the customer service doesn't care either",
    "start": "2358359",
    "end": "2365560"
  },
  {
    "text": "yeah that's a great point uh actually at Anchorage digital we use orchestration a",
    "start": "2365560",
    "end": "2370599"
  },
  {
    "text": "lot and there have been some cases recently where I thought hey I wish I",
    "start": "2370599",
    "end": "2375839"
  },
  {
    "text": "just had an event for this it would be so much easier to just add a little extra thing here that reacts to another",
    "start": "2375839",
    "end": "2382200"
  },
  {
    "text": "thing so yeah yeah so it it's not choreography right like the actual like",
    "start": "2382200",
    "end": "2387920"
  },
  {
    "text": "like the operations can be implemented using orchestration but to just provide",
    "start": "2387920",
    "end": "2393800"
  },
  {
    "text": "the quote hooks for other interested parties to observe what's happening yeah",
    "start": "2393800",
    "end": "2401280"
  },
  {
    "text": "you can just publish events as well so to kind of bring us a little bit into the weeds because I do want to get us a",
    "start": "2401280",
    "end": "2407720"
  },
  {
    "text": "little bit more in the weeds as we've talked through the high level like what are the pros the cons",
    "start": "2407720",
    "end": "2413599"
  },
  {
    "text": "orchestration choreography Etc how do you bring this kind of",
    "start": "2413599",
    "end": "2419960"
  },
  {
    "text": "overarching what do we do how do we implement this from kind of the drawing",
    "start": "2419960",
    "end": "2426560"
  },
  {
    "text": "board whether it be a mirror an architectural diagram to actual like code technology how do you decide what",
    "start": "2426560",
    "end": "2433440"
  },
  {
    "text": "open source packages might be useful what language to use what technology like how do you bring the conversation from lines and squiggles diagram and",
    "start": "2433440",
    "end": "2441920"
  },
  {
    "text": "aligned implementation to actual this is now a thing in the wild I don't know whether maybe there are technologies",
    "start": "2441920",
    "end": "2448400"
  },
  {
    "text": "that you think work really well there are ways to think about implementation questions that gotes just kind of",
    "start": "2448400",
    "end": "2455319"
  },
  {
    "text": "opening the floor to whatever ever comes to mind I can start with the most obvious thing if you are already using a",
    "start": "2455319",
    "end": "2463119"
  },
  {
    "text": "cloud vendor then they probably have a lot of these tools so for example we use",
    "start": "2463119",
    "end": "2468920"
  },
  {
    "text": "Google cloud and Google cloud has a pup sub system if you want to do things with",
    "start": "2468920",
    "end": "2474920"
  },
  {
    "text": "with events it's a great choice it supports many different paradigms you can process them sequentially",
    "start": "2474920",
    "end": "2481480"
  },
  {
    "text": "synchronously synchronously you can have like at least once at most one guarantees can have all these different",
    "start": "2481480",
    "end": "2488359"
  },
  {
    "text": "things from a single hosted service they even have a workflow system um it allows",
    "start": "2488359",
    "end": "2495520"
  },
  {
    "text": "you to Define steps in ymo and it triggers your services and so on so it's",
    "start": "2495520",
    "end": "2502000"
  },
  {
    "text": "it's always a good idea to check okay what's already available to me what already exists and maybe in your context",
    "start": "2502000",
    "end": "2509880"
  },
  {
    "text": "you have um all Prem deployment and somebody is already running cfco or",
    "start": "2509880",
    "end": "2515599"
  },
  {
    "text": "something like that okay great uh latch out to that existing system and start",
    "start": "2515599",
    "end": "2521920"
  },
  {
    "text": "building around it it's usually much more expensive try to bring in a new tool if you already have some yeah I",
    "start": "2521920",
    "end": "2528640"
  },
  {
    "text": "mean there there are fra I mean it's like there are Frameworks Technologies are out there right like I mean I know",
    "start": "2528640",
    "end": "2534359"
  },
  {
    "text": "Victor using temporal right and I have my own open- source framework eventuate",
    "start": "2534359",
    "end": "2540079"
  },
  {
    "text": "so that and part of it is sort it part of it does depend on exactly like say if",
    "start": "2540079",
    "end": "2545599"
  },
  {
    "text": "you're just using choreography based sagas like you want to have your services publish events",
    "start": "2545599",
    "end": "2551160"
  },
  {
    "text": "when they update business objects I mean you don't necessarily need much of a",
    "start": "2551160",
    "end": "2557000"
  },
  {
    "text": "framework apart from one caveat that I'll get to in a minute you can just publish events you just pick your",
    "start": "2557000",
    "end": "2563680"
  },
  {
    "text": "favorite message broker and publish events to it but one really interesting thing is you want to make sure that your",
    "start": "2563680",
    "end": "2571559"
  },
  {
    "text": "database updates and message sending is done automically right because either",
    "start": "2571559",
    "end": "2578319"
  },
  {
    "text": "you create an order and publish an order created event do those two things or you",
    "start": "2578319",
    "end": "2585760"
  },
  {
    "text": "do neither of those things and if you did one or the other your system would be in an inconsistent State and I",
    "start": "2585760",
    "end": "2593800"
  },
  {
    "text": "suspect a lot of applications which are actually um a kind of suceptible to this",
    "start": "2593800",
    "end": "2601000"
  },
  {
    "text": "vulnerability of some kind of failure occurring which would prevent both of",
    "start": "2601000",
    "end": "2606640"
  },
  {
    "text": "those things from happening so one really useful pattern that you should if you're doing this by hand Implement at a",
    "start": "2606640",
    "end": "2613599"
  },
  {
    "text": "minimum is the transaction outbox pattern which is where rather than",
    "start": "2613599",
    "end": "2619079"
  },
  {
    "text": "sending a message to the message broker directly you have an outbox table in the",
    "start": "2619079",
    "end": "2624800"
  },
  {
    "text": "database that is updated as part of the database transaction that updates or",
    "start": "2624800",
    "end": "2630800"
  },
  {
    "text": "creates updates the business entity so you would insert into the order table",
    "start": "2630800",
    "end": "2635839"
  },
  {
    "text": "and then you would insert into the outbox table and that because of data well assuming you're using a relational",
    "start": "2635839",
    "end": "2642319"
  },
  {
    "text": "database that happens automically so you've got that guarantee and then there",
    "start": "2642319",
    "end": "2647720"
  },
  {
    "text": "is a separate process the outbox server that is pulling messages out of the outbox and sending them to the message",
    "start": "2647720",
    "end": "2654640"
  },
  {
    "text": "broker and that that's kind of like a key sort of foundational pattern to make",
    "start": "2654640",
    "end": "2660720"
  },
  {
    "text": "sure that your asynchronous architecture is actually sort of resilient and",
    "start": "2660720",
    "end": "2667000"
  },
  {
    "text": "without that you risk inconsistencies yeah so when I worked",
    "start": "2667000",
    "end": "2672160"
  },
  {
    "text": "with net uh writing services I used um end service bus so this open source",
    "start": "2672160",
    "end": "2678480"
  },
  {
    "text": "platforms mass transit and end service bus Etc that Implement The Saga patterns",
    "start": "2678480",
    "end": "2684920"
  },
  {
    "text": "like they make it easier to consume messages and also what Chris talked about which is really important the",
    "start": "2684920",
    "end": "2691559"
  },
  {
    "text": "outbox pattern for consistency and yeah data integrity really and so I have used",
    "start": "2691559",
    "end": "2698520"
  },
  {
    "text": "and service pluss I also used to work for particular software I used to be part of the crew implementing these uh",
    "start": "2698520",
    "end": "2705160"
  },
  {
    "text": "these patterns so that's really huge so if you're not using something out of the",
    "start": "2705160",
    "end": "2711480"
  },
  {
    "text": "box like in service bus or mass transit those things I have to have an outbox",
    "start": "2711480",
    "end": "2716880"
  },
  {
    "text": "pattern in retries in transient failures and things like that those those are",
    "start": "2716880",
    "end": "2723079"
  },
  {
    "text": "really key and so yeah yeah and then then if you're doing orchestration I",
    "start": "2723079",
    "end": "2728319"
  },
  {
    "text": "mean essentially there you're implementing a state machine that's keeping track of what where in the flow",
    "start": "2728319",
    "end": "2735599"
  },
  {
    "text": "it is and then sending messages and responding to replies then that that's",
    "start": "2735599",
    "end": "2741160"
  },
  {
    "text": "much more elaborate and that's when you want to use some kind of orchestration framework right whether that's like",
    "start": "2741160",
    "end": "2748599"
  },
  {
    "text": "eventually a temporal I guess end service bus you name it right you you",
    "start": "2748599",
    "end": "2753880"
  },
  {
    "text": "need to use something I mean there are interestingly there are other sort of foundational patterns as well like the",
    "start": "2753880",
    "end": "2759640"
  },
  {
    "text": "message broker might deliver messages multiple times right and then so you",
    "start": "2759640",
    "end": "2764760"
  },
  {
    "text": "need to have like implement the item potent consumer pattern so there's there's a there's a whole bunch of stuff",
    "start": "2764760",
    "end": "2772200"
  },
  {
    "text": "that's below the level messages what's that messages arriving out of order well",
    "start": "2772200",
    "end": "2779640"
  },
  {
    "text": "yeah you want to use a me depending on your needs right like that's a really",
    "start": "2779640",
    "end": "2785000"
  },
  {
    "text": "interesting point because I think it for me a really useful design technique is",
    "start": "2785000",
    "end": "2791119"
  },
  {
    "text": "rather than go from sort of oh we're going to use messaging to we're going to",
    "start": "2791119",
    "end": "2796400"
  },
  {
    "text": "use Kafka or a particular message broker I like to use the pattern language from",
    "start": "2796400",
    "end": "2802800"
  },
  {
    "text": "Enterprise Integration patterns by Gregor hpe where you have a concept of a message Channel that's an abstraction",
    "start": "2802800",
    "end": "2811079"
  },
  {
    "text": "over whatever messaging capabilities the particular message brok broker so you",
    "start": "2811079",
    "end": "2817040"
  },
  {
    "text": "kind of design it so that your services are communicating using channels and",
    "start": "2817040",
    "end": "2822240"
  },
  {
    "text": "then you identify the requirements for a given Channel which might be like latency latency throughput delivery",
    "start": "2822240",
    "end": "2829880"
  },
  {
    "text": "guarantees whether it needs to support ordering and so on and so forth and then",
    "start": "2829880",
    "end": "2835040"
  },
  {
    "text": "you map that to you know for each Channel you then go and pick the the",
    "start": "2835040",
    "end": "2841640"
  },
  {
    "text": "messaging technology that best fits the requir ments and that could be something",
    "start": "2841640",
    "end": "2847720"
  },
  {
    "text": "that runs on the cloud though the cloud-based ones are kind of weird right like sqs and stuff super scalable fully",
    "start": "2847720",
    "end": "2855359"
  },
  {
    "text": "managed but maybe High latency and then you you know then there's cfco which has",
    "start": "2855359",
    "end": "2860520"
  },
  {
    "text": "a particular set of guarantees and characteristics and then there's lower",
    "start": "2860520",
    "end": "2865559"
  },
  {
    "text": "latency mechanisms heck you could even use redis and it's in memory messaging channels if you wanted or streams right",
    "start": "2865559",
    "end": "2872920"
  },
  {
    "text": "so there's a whole bunch of options and different different channels could use different kind of messaging Technologies",
    "start": "2872920",
    "end": "2880040"
  },
  {
    "text": "and given the amount of choices that there are what is the kind of I guess trade-off risk difficulty associated",
    "start": "2880040",
    "end": "2887960"
  },
  {
    "text": "with changing your implementation so say you you implement your system and you realize oh no I've implemented this",
    "start": "2887960",
    "end": "2894559"
  },
  {
    "text": "using orchestration actually choreography is the better choice is it kind of a think really carefully about",
    "start": "2894559",
    "end": "2902040"
  },
  {
    "text": "which you choose at the outset or is there flexibility to switch or to change out I really want",
    "start": "2902040",
    "end": "2910079"
  },
  {
    "text": "to understand like the tradeoffs there like how how big a deal is deciding which path to take at the beginning of",
    "start": "2910079",
    "end": "2916839"
  },
  {
    "text": "architecting a system so I'm going to throw in another uh Library here called",
    "start": "2916839",
    "end": "2923119"
  },
  {
    "text": "Watermill I've noticed that I haven't actually used it very much myself but",
    "start": "2923119",
    "end": "2928160"
  },
  {
    "text": "I've noticed that it and many others probably provide an abstraction around",
    "start": "2928160",
    "end": "2934240"
  },
  {
    "text": "events so you you can write your code essentially just thinking about the events and plug into any system that",
    "start": "2934240",
    "end": "2942319"
  },
  {
    "text": "allows you to deliver events even in memory and a variety of different launchings oh what was the name of that",
    "start": "2942319",
    "end": "2949280"
  },
  {
    "text": "it's called water mill oh I assume it's a a goang library it's a go Library so",
    "start": "2949280",
    "end": "2956000"
  },
  {
    "text": "bring it to go a little bit here if you have something like that then it does allow you to kind of like switch out",
    "start": "2956000",
    "end": "2962280"
  },
  {
    "text": "implementations that being said like you said uh Chris different implementations have different",
    "start": "2962280",
    "end": "2967440"
  },
  {
    "text": "trade-offs latency through and all that I think at at a low scale it really",
    "start": "2967440",
    "end": "2973400"
  },
  {
    "text": "doesn't matter which one you choose and eventually you'll realize that maybe you made the right or wrong decision and you",
    "start": "2973400",
    "end": "2979640"
  },
  {
    "text": "might have to change that up yeah I think the right or wrong I think that's it's an interesting way to look at it I",
    "start": "2979640",
    "end": "2986319"
  },
  {
    "text": "think more the businesses companies realize like software I mean is evolving",
    "start": "2986319",
    "end": "2994400"
  },
  {
    "text": "it should evolve and you make a decision you might have been the best decision based on the data at the time and the",
    "start": "2994400",
    "end": "3000240"
  },
  {
    "text": "trade-offs that you made but businesses grow and change and market conditions",
    "start": "3000240",
    "end": "3005920"
  },
  {
    "text": "might affect it and so once the technical people folks product managers",
    "start": "3005920",
    "end": "3011160"
  },
  {
    "text": "realize that I think companies should be open in changing that evolving that and",
    "start": "3011160",
    "end": "3016599"
  },
  {
    "text": "it's to me it's a continuous process so if we ultimately want to design software",
    "start": "3016599",
    "end": "3021880"
  },
  {
    "text": "that aligns with the business needs it means constantly changing you might have designed your event a certain way but",
    "start": "3021880",
    "end": "3029359"
  },
  {
    "text": "then maybe in the domain is being like called differently by the domain expert",
    "start": "3029359",
    "end": "3035160"
  },
  {
    "text": "so now you know that language what do you do right so you go and change the",
    "start": "3035160",
    "end": "3041119"
  },
  {
    "text": "schema yes there's a cost attached to it but you make that change so I I think",
    "start": "3041119",
    "end": "3046880"
  },
  {
    "text": "when organizations realize how important this is and change and evolution is",
    "start": "3046880",
    "end": "3052319"
  },
  {
    "text": "becomes a part of the culture I think it would be like we wouldn't have to worry too much about making it all right at",
    "start": "3052319",
    "end": "3059280"
  },
  {
    "text": "the very beginning you you make the best decisions based on the trade-offs and",
    "start": "3059280",
    "end": "3064480"
  },
  {
    "text": "you continuously try to improve and evolve yeah and actually I think what's",
    "start": "3064480",
    "end": "3070200"
  },
  {
    "text": "more likely to change than your sort of like Q messaging system or Q system or",
    "start": "3070200",
    "end": "3076680"
  },
  {
    "text": "whatever uh is the actual structure of your events the actual business process",
    "start": "3076680",
    "end": "3081760"
  },
  {
    "text": "the howu systems interact that change es much more often than okay like switching",
    "start": "3081760",
    "end": "3088559"
  },
  {
    "text": "out the infrastructure and so that kind of evolution uh requires a whole other set",
    "start": "3088559",
    "end": "3095280"
  },
  {
    "text": "of patterns that you have to think about how do you publish multiple events during that transition which service you",
    "start": "3095280",
    "end": "3102559"
  },
  {
    "text": "deploy first or second when is it safe to make a particular change and that",
    "start": "3102559",
    "end": "3108480"
  },
  {
    "text": "could add a lot of complexity with a framework or like a system that's more opinionated it might",
    "start": "3108480",
    "end": "3115839"
  },
  {
    "text": "be easier because the framework or system or workflow engine defines how to",
    "start": "3115839",
    "end": "3122680"
  },
  {
    "text": "make those changes so if you're using some yo based workflow engine it will",
    "start": "3122680",
    "end": "3128000"
  },
  {
    "text": "essentially preserve the old version of your workflow but let those workflows finish executing and then the next",
    "start": "3128000",
    "end": "3134799"
  },
  {
    "text": "iteration next time it runs it will pick up the new version of your workflow",
    "start": "3134799",
    "end": "3139839"
  },
  {
    "text": "we've been using temporal with temporal well let me give a quick description of",
    "start": "3139839",
    "end": "3146359"
  },
  {
    "text": "temporal temporo allows you to essentially write an orchestrator using",
    "start": "3146359",
    "end": "3151480"
  },
  {
    "text": "your language of choice executing sort of each step of it they call it an",
    "start": "3151480",
    "end": "3157079"
  },
  {
    "text": "activity and essentially calling out to like different services to run the different activities so it keeps track",
    "start": "3157079",
    "end": "3164240"
  },
  {
    "text": "of the state of your workflow and it has its own versioning system so you can upgrade your uh your workflow",
    "start": "3164240",
    "end": "3170119"
  },
  {
    "text": "incrementally the new version of the workflow will pick up the change the old versions will continue to execute as once so so as long as you have a",
    "start": "3170119",
    "end": "3176960"
  },
  {
    "text": "strategy as long as you like your team has an understanding of how to do the upgrades how to make these changes uh it",
    "start": "3176960",
    "end": "3183359"
  },
  {
    "text": "works out you get in trouble if you haven't thought about the upgrades how do you actually change these systems",
    "start": "3183359",
    "end": "3189760"
  },
  {
    "text": "because it's very easy to break them if you don't think about it so regrettably we we do not have all that much time",
    "start": "3189760",
    "end": "3196119"
  },
  {
    "text": "left so what I'd like to do is go around and see if you any of you have any final",
    "start": "3196119",
    "end": "3201480"
  },
  {
    "text": "thoughts final seeds final things that the any listeners uh should think about or look into we",
    "start": "3201480",
    "end": "3207839"
  },
  {
    "text": "may have to do another episode to continue this conversation but before that final thoughts indu what is your",
    "start": "3207839",
    "end": "3214400"
  },
  {
    "text": "final thought I I think um event driven style of architecture is one way of",
    "start": "3214400",
    "end": "3220359"
  },
  {
    "text": "looking at your problem domain and you know it's not a dogmatic approach use it",
    "start": "3220359",
    "end": "3226240"
  },
  {
    "text": "where it makes sense and look for the trade-offs I would say um while we're in",
    "start": "3226240",
    "end": "3231359"
  },
  {
    "text": "other your backand systems will end up having more than one service sooner or",
    "start": "3231359",
    "end": "3238240"
  },
  {
    "text": "later it it it happens and sooner or later you have multiple storage systems",
    "start": "3238240",
    "end": "3243480"
  },
  {
    "text": "multiple third parties all kinds of things to synchronize and coordinate and",
    "start": "3243480",
    "end": "3249599"
  },
  {
    "text": "it's important to take into account all of your options when you start doing this so all the things we talked about",
    "start": "3249599",
    "end": "3256760"
  },
  {
    "text": "like choreography orchestration events commands it's important to consider the",
    "start": "3256760",
    "end": "3262280"
  },
  {
    "text": "options before diving in and starting to do something it's very common for people to just sort of pattern match based on",
    "start": "3262280",
    "end": "3269400"
  },
  {
    "text": "something they've seen before or they know one system and they just use it for everything but it's it's worthwhile to",
    "start": "3269400",
    "end": "3275280"
  },
  {
    "text": "learn all the different ways of Building Systems so that you can use the most appropriate technique yeah yeah I kind",
    "start": "3275280",
    "end": "3282000"
  },
  {
    "text": "of sort of agree with Victor like the answer to all of these design and Architectural problems is that it",
    "start": "3282000",
    "end": "3288880"
  },
  {
    "text": "depends and the trouble with that is that it requires thinking right and you know recently I I",
    "start": "3288880",
    "end": "3296640"
  },
  {
    "text": "read this really good paper which is like architecture is a series of design decisions and kind of just the idea that",
    "start": "3296640",
    "end": "3304680"
  },
  {
    "text": "okay you know you got a problem to solve want to clearly Define the problem you",
    "start": "3304680",
    "end": "3309760"
  },
  {
    "text": "want to figure out the criteria that Define the goodness of a solution right",
    "start": "3309760",
    "end": "3317079"
  },
  {
    "text": "and then you want to think about possible solutions you want to evaluate them with respect to each of those",
    "start": "3317079",
    "end": "3323039"
  },
  {
    "text": "criteria and then you want to pick the best one and you know you make a decision and that results in a",
    "start": "3323039",
    "end": "3329680"
  },
  {
    "text": "modification to your architecture and you just keep doing that over and over",
    "start": "3329680",
    "end": "3335599"
  },
  {
    "text": "again right and that's how you you build an architecture that's how you evolve an",
    "start": "3335599",
    "end": "3340880"
  },
  {
    "text": "architecture and so at every stage you're actually thinking about what good",
    "start": "3340880",
    "end": "3346119"
  },
  {
    "text": "you know what the criteria are evaluating the various options and then",
    "start": "3346119",
    "end": "3351200"
  },
  {
    "text": "picking the best or the least worst one right and and I think and while at the",
    "start": "3351200",
    "end": "3356359"
  },
  {
    "text": "same time remembering that you want to have systems that are as simple as possible as Loosely coupled as possible",
    "start": "3356359",
    "end": "3363039"
  },
  {
    "text": "or have a high degree of sort of well kind of abstraction to high complexity",
    "start": "3363039",
    "end": "3368880"
  },
  {
    "text": "behind stable apis and it's hard but it it's sort of necessary well thank you",
    "start": "3368880",
    "end": "3375559"
  },
  {
    "text": "very much I appreciate your all's time and before I let you go we're going to jump into what is arguably my favorite",
    "start": "3375559",
    "end": "3382480"
  },
  {
    "text": "part of the episode which is UN popular popular [Music]",
    "start": "3382480",
    "end": "3390310"
  },
  {
    "text": "opinions opinion you I actually think should probably [Music]",
    "start": "3390680",
    "end": "3397959"
  },
  {
    "text": "leave",
    "start": "3398400",
    "end": "3401400"
  },
  {
    "text": "opinion so Victor what is your unpopular",
    "start": "3403440",
    "end": "3409200"
  },
  {
    "text": "opinion yeah let's uh let's apply some design patterns to food my opin opinion",
    "start": "3409200",
    "end": "3415920"
  },
  {
    "text": "is that burritos are better than Lobster so essentially a burrito is a a",
    "start": "3415920",
    "end": "3422559"
  },
  {
    "text": "container of your entire meal it's packaged in a very convenient way very",
    "start": "3422559",
    "end": "3428240"
  },
  {
    "text": "portable easy to eat you know where to start no work required you have to unwrap it sometimes and lobster is kind",
    "start": "3428240",
    "end": "3436000"
  },
  {
    "text": "of on the other end of the extreme where uh it's arguably not food it's mostly a",
    "start": "3436000",
    "end": "3442599"
  },
  {
    "text": "shell and it takes a lot of effort to get anything out of it and even then the",
    "start": "3442599",
    "end": "3449000"
  },
  {
    "text": "flavor doesn't really come from the food it comes from all the other things around it so it's really um a bit of a",
    "start": "3449000",
    "end": "3456400"
  },
  {
    "text": "missed opportunity there for for having uh real food you know it's funny that you mention burritos because I think two",
    "start": "3456400",
    "end": "3463760"
  },
  {
    "text": "or three years ago I gave a talk about design time coupling in software and the",
    "start": "3463760",
    "end": "3469920"
  },
  {
    "text": "example I used was a food delivery application where they had to enhance it",
    "start": "3469920",
    "end": "3476079"
  },
  {
    "text": "to support ordering customized menu items like and I use the example of a",
    "start": "3476079",
    "end": "3481880"
  },
  {
    "text": "burrito and that was the hardest presentation to work on because every time I looked at the image of the",
    "start": "3481880",
    "end": "3487760"
  },
  {
    "text": "burrito in the slid I was instantly hungry and I had to go and I wanted to",
    "start": "3487760",
    "end": "3493559"
  },
  {
    "text": "just order a burrito and you you have just done that to me now I want to get a breakfast",
    "start": "3493559",
    "end": "3500559"
  },
  {
    "text": "burrito but when you look at a lobster does that make you hungry no no but a",
    "start": "3500599",
    "end": "3505880"
  },
  {
    "text": "burrito does right I think you're you're hitting on a popular unpopular opinion that VI I'm trying to make it popular as",
    "start": "3505880",
    "end": "3513079"
  },
  {
    "text": "as it is like the convention with this the show it becomes Popular by the time I finish explaining it but I think that",
    "start": "3513079",
    "end": "3519640"
  },
  {
    "text": "if you ask a lot of people that will tell you like yes Lobster is expensive it's good because it's expensive it's",
    "start": "3519640",
    "end": "3525720"
  },
  {
    "text": "good because it takes so much effort to eat I think uh when you ate the lobster Victory you forgot the butter",
    "start": "3525720",
    "end": "3532240"
  },
  {
    "text": "uh maybe my unpopular opinion I cuz I didn't realize this had to be",
    "start": "3532240",
    "end": "3537400"
  },
  {
    "text": "humorous I I feel like no it could be unpopular or funny or not I just want to say that I really think coffee has two",
    "start": "3537400",
    "end": "3545079"
  },
  {
    "text": "ingredients in it ground beans and",
    "start": "3545079",
    "end": "3550000"
  },
  {
    "text": "water no milk well no sugar unless it's like a quata but no sugar really no",
    "start": "3550400",
    "end": "3559640"
  },
  {
    "text": "pumpkin that's just wrong for those of you who didn't hear we were talking ear",
    "start": "3559640",
    "end": "3564920"
  },
  {
    "text": "during sound Che and I talked about how I had a pumpkin spice latte and the look of disdain and disgust along with a",
    "start": "3564920",
    "end": "3572440"
  },
  {
    "text": "sound effect of pure just like from Chris that I got was illustrative to me",
    "start": "3572440",
    "end": "3580160"
  },
  {
    "text": "that I should never mention pumpkin spice lates in his presence again well it was sort of the croissant part too I",
    "start": "3580160",
    "end": "3586839"
  },
  {
    "text": "think croissants oh yes I did have a pach Quant a work of art that and a good",
    "start": "3586839",
    "end": "3593559"
  },
  {
    "text": "Quan is so rare and you should just eat it with butter and jam and maybe Jam",
    "start": "3593559",
    "end": "3599119"
  },
  {
    "text": "that that's it Angelica next time I meet Chris I'm going to like you know not tell him what's in his coffee but he",
    "start": "3599119",
    "end": "3606319"
  },
  {
    "text": "might SP right do it just for you just for you thank you",
    "start": "3606319",
    "end": "3613240"
  },
  {
    "text": "appreciate that well Chris would you like to have another unpopular opinion or is that your your arm Peter opinion",
    "start": "3613240",
    "end": "3619720"
  },
  {
    "text": "no and I apologize for for re yucking your yum CU everyone has their own",
    "start": "3619720",
    "end": "3626680"
  },
  {
    "text": "tastes and I hate it when someone criticizes mine so I'm I'm being a hypocrite I don't mind if you don't",
    "start": "3626680",
    "end": "3632680"
  },
  {
    "text": "drink them more in the world for me true true it's great so indu do you want to give us",
    "start": "3632680",
    "end": "3639880"
  },
  {
    "text": "your unpopular opinion yeah I'm going to not have coffee jokes or Lobster jokes",
    "start": "3639880",
    "end": "3645119"
  },
  {
    "text": "but uh I I think um my unpopular opinion is as techies we jump we love technology",
    "start": "3645119",
    "end": "3653319"
  },
  {
    "text": "we love solving knowing what the solution is before we actually take the time to explore the",
    "start": "3653319",
    "end": "3659559"
  },
  {
    "text": "problem better and as we work in complex domains I think that's more of a skill",
    "start": "3659559",
    "end": "3666000"
  },
  {
    "text": "that we all need to hone so yeah I think we love technology more than actually",
    "start": "3666000",
    "end": "3671319"
  },
  {
    "text": "trying to figure out what we're trying to solve for yeah and try maybe this is my unpopular opinion which Builds on",
    "start": "3671319",
    "end": "3677119"
  },
  {
    "text": "Indo thing actually this is a thought that occurred to me the other day is right now there's like a fixation on",
    "start": "3677119",
    "end": "3683839"
  },
  {
    "text": "developer platforms right and interestingly it's like it's become this thing with like",
    "start": "3683839",
    "end": "3690200"
  },
  {
    "text": "team topologies book right which to me is the focus of team topologies is about",
    "start": "3690200",
    "end": "3696000"
  },
  {
    "text": "people but there's just I know they have platform teams and that's definitely a good thing but I just keep saying",
    "start": "3696000",
    "end": "3702240"
  },
  {
    "text": "platforms platforms platforms and maybe one of the motivations for that is well",
    "start": "3702240",
    "end": "3707280"
  },
  {
    "text": "it's like platforms that's technology it's nice tangible stuff and we're",
    "start": "3707280",
    "end": "3712640"
  },
  {
    "text": "engineers and we like to deal with technology and then at the same time you can be a vendor and you love you need",
    "start": "3712640",
    "end": "3719319"
  },
  {
    "text": "things to sell so platforms that's a thing you can sell but I sometimes feel",
    "start": "3719319",
    "end": "3724880"
  },
  {
    "text": "that in some organizations people are going to do platforms engineering as a",
    "start": "3724880",
    "end": "3730400"
  },
  {
    "text": "substitute for actually solving messy human problems right like having the",
    "start": "3730400",
    "end": "3737119"
  },
  {
    "text": "right organizational structure having the right development process like",
    "start": "3737119",
    "end": "3742680"
  },
  {
    "text": "having actually something that is true agile not just sort of fake agile right",
    "start": "3742680",
    "end": "3748599"
  },
  {
    "text": "you know autonomous teams and and so on so I feel like that's there's some",
    "start": "3748599",
    "end": "3753920"
  },
  {
    "text": "really negative reasons behind this fixation on platforms I mean computers",
    "start": "3753920",
    "end": "3759160"
  },
  {
    "text": "do exactly what you tell them people don't do that unfortunately ah yeah people are messy messy and there's yeah",
    "start": "3759160",
    "end": "3766480"
  },
  {
    "text": "but you know like software is built by people and you have to get the people Parts sort of right the right",
    "start": "3766480",
    "end": "3775279"
  },
  {
    "text": "organizational structure process and so on if you want to actually deliver good software and it doesn't matter how much",
    "start": "3775279",
    "end": "3782720"
  },
  {
    "text": "technology you throw at the problem if those people problems are not solved",
    "start": "3782720",
    "end": "3788319"
  },
  {
    "text": "it's just going to be a mess yeah it's very unfortunately when you start solving a techn like a problem and you",
    "start": "3788319",
    "end": "3794720"
  },
  {
    "text": "realize that it's not a technical problem and you have to get into okay how how are people talking to each other",
    "start": "3794720",
    "end": "3802000"
  },
  {
    "text": "you guys want to have a meeting about this let's do a talk let's do a training it's a lot of effort it's uh",
    "start": "3802000",
    "end": "3809920"
  },
  {
    "text": "it's more than uh it's more effort than a few lies of code well on that very",
    "start": "3809920",
    "end": "3815799"
  },
  {
    "text": "intriguing thought on the importance of interacting with your colleagues which I",
    "start": "3815799",
    "end": "3821039"
  },
  {
    "text": "hope everyone does um we unfortunately are going to",
    "start": "3821039",
    "end": "3826279"
  },
  {
    "text": "have to leave it there for now but thank you so so much for all coming on really",
    "start": "3826279",
    "end": "3831599"
  },
  {
    "text": "appreciate you're being such intriguing inquisitive guests and I hope to see you",
    "start": "3831599",
    "end": "3837839"
  },
  {
    "text": "all again soon this was great thank you thank you thank you for having having me",
    "start": "3837839",
    "end": "3842960"
  },
  {
    "text": "here thanks for hosting all",
    "start": "3842960",
    "end": "3846720"
  },
  {
    "text": "pleasure that is go time for this week thanks for hanging with us subscribe now",
    "start": "3848000",
    "end": "3853480"
  },
  {
    "text": "if you haven't already head to go time. FM for all the ways also check out",
    "start": "3853480",
    "end": "3858839"
  },
  {
    "text": "changelog news while you're at it it's the software industry's best weekly podcast SL newsletter to keep you",
    "start": "3858839",
    "end": "3865039"
  },
  {
    "text": "plugged in to developer news worth your attention subscribe now at Chang",
    "start": "3865039",
    "end": "3870680"
  },
  {
    "text": "blog.com newws thanks once again to our partners fastly.com",
    "start": "3870680",
    "end": "3876000"
  },
  {
    "text": "fly.io and types sense.org and thank you to breakmaster cylinder for producing so",
    "start": "3876000",
    "end": "3881720"
  },
  {
    "text": "many Fresh Beats for us that we're now releasing full length albums on Spotify Apple music and the rest listen along by",
    "start": "3881720",
    "end": "3888680"
  },
  {
    "text": "searching for change log beats in your music app of choice you'll find us that's all for now but we'll talk to you",
    "start": "3888680",
    "end": "3895039"
  },
  {
    "text": "again next time on go [Music]",
    "start": "3895039",
    "end": "3904670"
  },
  {
    "text": "[Music]",
    "start": "3906950",
    "end": "3910050"
  },
  {
    "text": "time",
    "start": "3916279",
    "end": "3919279"
  }
]