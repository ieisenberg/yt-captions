[
  {
    "text": "bandwidth for change log is provided by fastly learn more at fastly.com we move",
    "start": "40",
    "end": "5520"
  },
  {
    "text": "fast and fix things here at change log because of rbar check them out at rar.com and we're hosted on linode cloud",
    "start": "5520",
    "end": "11840"
  },
  {
    "text": "servers head to lin.com changelog this episode is brought to you",
    "start": "11840",
    "end": "17000"
  },
  {
    "text": "by digital ocean digital ocean is the simplest Cloud platform for developers and teams with products like droplets",
    "start": "17000",
    "end": "24039"
  },
  {
    "text": "spaces kubernetes load balancers block storage and pre-built oneclick apps you",
    "start": "24039",
    "end": "29240"
  },
  {
    "text": "can deploy manage and scale Cloud applications faster and more efficiently on digital ocean whether you're running",
    "start": "29240",
    "end": "35800"
  },
  {
    "text": "one virtual machine or 10,000 digital ocean makes managing your infrastructure way too easy get started for free with a",
    "start": "35800",
    "end": "42559"
  },
  {
    "text": "$100 credit head to do. changelog again do.",
    "start": "42559",
    "end": "49530"
  },
  {
    "text": "[Music]",
    "start": "49530",
    "end": "57038"
  },
  {
    "text": "changelog",
    "start": "58920",
    "end": "61920"
  },
  {
    "text": "welcome to go time a podcast featuring a diverse panel and special guests discussing Cloud infrastructure",
    "start": "64799",
    "end": "70600"
  },
  {
    "text": "distributed systems microservices kubernetes Docker oh and also go we",
    "start": "70600",
    "end": "76080"
  },
  {
    "text": "record live every Tuesday at 300 p.m. Eastern new Pacific join the community SL with us in real time during the show",
    "start": "76080",
    "end": "82360"
  },
  {
    "text": "in the gotime FM channel and go for slack follow us on Twitter we're at gotime FM listen live at change.com",
    "start": "82360",
    "end": "89880"
  },
  {
    "text": "or subscribe at change.com gotime and now on to the",
    "start": "89880",
    "end": "95720"
  },
  {
    "text": "show hello everybody Welcome To Go time I'm Matt ryer today we're talking about",
    "start": "95960",
    "end": "103040"
  },
  {
    "text": "testing and I'm joined by some great thinkers and tinkerers from around the",
    "start": "103040",
    "end": "108399"
  },
  {
    "text": "go Community uh I'm joined by Johnny Boro yab Bogan and the one and only John",
    "start": "108399",
    "end": "116479"
  },
  {
    "text": "Calhoun hello everybody hello hello hello hey Matt how are we feeling today",
    "start": "116479",
    "end": "122719"
  },
  {
    "text": "feeling good no complaints good well if you do have complaints don't bring them to me because I can't",
    "start": "122719",
    "end": "129520"
  },
  {
    "text": "help especially if it's anything medical uh okay so yeah testing is such an",
    "start": "129520",
    "end": "135239"
  },
  {
    "text": "important subject I think so it's great that we get to do a show on it and I notice whenever I talk about testing it",
    "start": "135239",
    "end": "142200"
  },
  {
    "text": "always creates a lot of debate and I always wonder why that is you you know you'll hear some people say you know tdd",
    "start": "142200",
    "end": "148920"
  },
  {
    "text": "is dead and other people advocating for it and some very diverse opinions um and",
    "start": "148920",
    "end": "156280"
  },
  {
    "text": "I think that says something about testing which hopefully we can uncover today uh but perhaps it's worth kicking",
    "start": "156280",
    "end": "163120"
  },
  {
    "text": "off with talking a bit a bit about the things we like about testing and and the positivity around testing because",
    "start": "163120",
    "end": "169959"
  },
  {
    "text": "there's definitely lots of negativity around it too so yeah what kind of first",
    "start": "169959",
    "end": "175480"
  },
  {
    "text": "of all let's start off let's assume that that we we are joined by some people that uh just getting into go haven't",
    "start": "175480",
    "end": "181879"
  },
  {
    "text": "done much testing before so what's the point in testing what what do we feel",
    "start": "181879",
    "end": "187200"
  },
  {
    "text": "like why do we do it and what do we want to get from it it's a way to understand",
    "start": "187200",
    "end": "192959"
  },
  {
    "text": "myself I think right especially in the long term and a way to like Express what",
    "start": "192959",
    "end": "198519"
  },
  {
    "text": "my code is supposed to do it's kind of like a summary you just explain what it's supposed to do and you have this",
    "start": "198519",
    "end": "205280"
  },
  {
    "text": "like repeatable way of checking if it's actually doing yeah so ENT",
    "start": "205280",
    "end": "210959"
  },
  {
    "text": "yeah so you just want it to describe in some form other than the code itself you",
    "start": "210959",
    "end": "216439"
  },
  {
    "text": "want it to Des you want to describe what promises you're making it's sort of",
    "start": "216439",
    "end": "221640"
  },
  {
    "text": "actually it's it's a code that explains itself right like I mean uh when you said it's not a coding way I just kind",
    "start": "221640",
    "end": "228879"
  },
  {
    "text": "of like assume that you are talking more about like some specs or like some like hey this is what it you know the the",
    "start": "228879",
    "end": "235400"
  },
  {
    "text": "project should behave like more of like a you know specification but code itself itself is a spec uh sorry testing is a",
    "start": "235400",
    "end": "242360"
  },
  {
    "text": "spec itself but it's code as well yes it's code so yeah so just very",
    "start": "242360",
    "end": "248920"
  },
  {
    "text": "practically then in go if you write a function let's say and it's just a it's going to be a greeter function it's",
    "start": "248920",
    "end": "255000"
  },
  {
    "text": "going to take in a name and it's going to say hello to that name and return that as a string you could write a test",
    "start": "255000",
    "end": "261880"
  },
  {
    "text": "which passes in some names and uh makes sure that what gets returned is what was",
    "start": "261880",
    "end": "268479"
  },
  {
    "text": "expected um so that's I mean that's essentially a unit test and then what that gives you is you can look at the",
    "start": "268479",
    "end": "274360"
  },
  {
    "text": "test code and you can just sort of see at a glance what the what promises are",
    "start": "274360",
    "end": "279840"
  },
  {
    "text": "being made or how what your functions meant to do and of course one of the goals I think of good testing and good",
    "start": "279840",
    "end": "287080"
  },
  {
    "text": "practices is to have those tests continuously run such that you know that they are you can at least assume that",
    "start": "287080",
    "end": "293680"
  },
  {
    "text": "they all pass um and that way we get a good feel it's a great way if you're looking at a new package to",
    "start": "293680",
    "end": "300120"
  },
  {
    "text": "to get a sense of how you should use that package you can go and poke around in the test code yeah totally so one of",
    "start": "300120",
    "end": "306160"
  },
  {
    "text": "the to sort of picky back on what Jana has just mentioned like for me the tests",
    "start": "306160",
    "end": "311479"
  },
  {
    "text": "sort of take on a different meaning um as the project goes on as the project goes right in the beginning I'm I'm",
    "start": "311479",
    "end": "317199"
  },
  {
    "text": "trying to think through um the problem I'm trying to solve and I'm basically saying okay let me establish some some",
    "start": "317199",
    "end": "322360"
  },
  {
    "text": "specs around what I expected to do but over time as a project sort of um lives",
    "start": "322360",
    "end": "327479"
  },
  {
    "text": "on and features get added or removed whatnot they become more of a sort of a guardrail right they become more of a",
    "start": "327479",
    "end": "334039"
  },
  {
    "text": "sort of a um um letting me or confirming right that the the changes I've been",
    "start": "334039",
    "end": "339199"
  },
  {
    "text": "making right the things that I assume are still true have remained true right throughout the sort of evolution of of",
    "start": "339199",
    "end": "345840"
  },
  {
    "text": "the software so they take on a slightly different meaning I think as the project evolves I think it's also like related",
    "start": "345840",
    "end": "351720"
  },
  {
    "text": "to that I think it's true that tests give you a good chance to clarify on things like a good example is when I",
    "start": "351720",
    "end": "357440"
  },
  {
    "text": "play board games my friends always joke that I'm the person who thinks up the weird Edge case and wonders if there's any like clarification in the rules for",
    "start": "357440",
    "end": "363759"
  },
  {
    "text": "it but like test cases are a great way of saying like if you give me this weird input this is exactly what you're going",
    "start": "363759",
    "end": "369360"
  },
  {
    "text": "to get back and this is I think why coverage is really important because um coverage kind of also like you basically",
    "start": "369360",
    "end": "376039"
  },
  {
    "text": "declare what you expect by covering those cases and sometimes I'm seeing",
    "start": "376039",
    "end": "381400"
  },
  {
    "text": "people just going over like test cases and assuming that like maybe this package or this function is not supposed to you know act like this way because",
    "start": "381400",
    "end": "387800"
  },
  {
    "text": "it's not you know represent in the tests uh so it's important why I think one of",
    "start": "387800",
    "end": "393440"
  },
  {
    "text": "the reasons why coverage is so important yeah and I think you know it's easy to get a little bit obsessed with coverage",
    "start": "393440",
    "end": "400720"
  },
  {
    "text": "too I've seen people I've met people who say you know they have they're very proud of it they have 100% code coverage",
    "start": "400720",
    "end": "407960"
  },
  {
    "text": "and essentially in go projects that means they've tested in some way all the points at which their code could error",
    "start": "407960",
    "end": "414160"
  },
  {
    "text": "for example yeah they've they have test coverage for that so I would say that like for dynamic we type languages 100%",
    "start": "414160",
    "end": "421120"
  },
  {
    "text": "is definitely required that is the base minimal right uh but yeah 100% doesn't",
    "start": "421120",
    "end": "430680"
  },
  {
    "text": "necessarily mean you know it's good coverage or I mean it's necessarily",
    "start": "430680",
    "end": "435800"
  },
  {
    "text": "importantance I think it's important to recognize what coverage actually means though like Matt said if you're just saying that you cover all of the code is",
    "start": "435800",
    "end": "442759"
  },
  {
    "text": "that really 100% coverage cuz I mean you didn't try every integer input you didn't try like you know every string",
    "start": "442759",
    "end": "448400"
  },
  {
    "text": "input so like you can have coverage in the sense that it touches all of your code but that's nowhere near actually",
    "start": "448400",
    "end": "454759"
  },
  {
    "text": "having cover you know 100% coverage yeah that does this mean also like you know you need some fuzzing or like you need",
    "start": "454759",
    "end": "460960"
  },
  {
    "text": "to just force it to with like different inputs and so on with all the possibilities you need to be a little",
    "start": "460960",
    "end": "466159"
  },
  {
    "text": "bit smarter maybe you cannot really manually you know generate all those test cases right yeah because I mean for",
    "start": "466159",
    "end": "471639"
  },
  {
    "text": "me at least I would rather work on a codebase with 75% code coverage but like that coverage is actually well thought",
    "start": "471639",
    "end": "477400"
  },
  {
    "text": "out and it's good versus somebody who's like hey I've got 100% code coverage but it's just the simple really basic inputs",
    "start": "477400",
    "end": "483759"
  },
  {
    "text": "for everything and it doesn't really actually test if things are going to work when you know crap hits the",
    "start": "483759",
    "end": "489080"
  },
  {
    "text": "fan right happy path and and everything else all right yeah yeah but if you if",
    "start": "489080",
    "end": "495560"
  },
  {
    "text": "you do have that 100% code coverage aren't your tests going to be overfit",
    "start": "495560",
    "end": "500960"
  },
  {
    "text": "really for the test code I mean essentially your real code your program code becomes very brittle every change",
    "start": "500960",
    "end": "508039"
  },
  {
    "text": "every tweak of the impl M mentation could break these tests you know if because they've got coverage to that",
    "start": "508039",
    "end": "514039"
  },
  {
    "text": "degree so in that way I think you can go too far with tests I think a lot of",
    "start": "514039",
    "end": "519440"
  },
  {
    "text": "people probably do I definitely have in the past and for me it it's about",
    "start": "519440",
    "end": "525320"
  },
  {
    "text": "striking the balance between how much you need to do in order to to have the benefits that testing brings you uh but",
    "start": "525320",
    "end": "533080"
  },
  {
    "text": "no more but isn't this a question about like compatibility also like in if you give gave uh you know Behavior promises",
    "start": "533080",
    "end": "541000"
  },
  {
    "text": "for example you may actually want to be able to cover those like tiny details so",
    "start": "541000",
    "end": "546839"
  },
  {
    "text": "you don't change the behavior without like you know I mean you you should be",
    "start": "546839",
    "end": "552480"
  },
  {
    "text": "informed if your behavior is changing yeah and I suppose that's a good way of putting it it's about what",
    "start": "552480",
    "end": "558839"
  },
  {
    "text": "promises you've made and this is where I think it's quite difficult to have these conversations in the general because I",
    "start": "558839",
    "end": "565600"
  },
  {
    "text": "think this will change depending on the kind of thing you're building if you're building building a a binary encoder",
    "start": "565600",
    "end": "571440"
  },
  {
    "text": "decoder then the test coverage and everything's going to look very different to if you're building an email",
    "start": "571440",
    "end": "578040"
  },
  {
    "text": "sending service or something do you think yeah true yeah I mean even if",
    "start": "578040",
    "end": "583360"
  },
  {
    "text": "you're like if you talk about like a website or something like that technically to have 100% coverage it feels like okay what happens if my hard",
    "start": "583360",
    "end": "589640"
  },
  {
    "text": "drive fails like there's all these weird things that you might need to simulate but you know is that actually worth",
    "start": "589640",
    "end": "594800"
  },
  {
    "text": "doing versus you know like you said an encoder or something that's much smaller you don't really have to to think about all of that stuff as much yeah I think",
    "start": "594800",
    "end": "601800"
  },
  {
    "text": "like unit test versus you know integration test is a huge topic and you know like it's so complicated to run",
    "start": "601800",
    "end": "607600"
  },
  {
    "text": "some of these integration tests that uh people would rather go to Canary and try",
    "start": "607600",
    "end": "612800"
  },
  {
    "text": "to you know take a look in production because the environment and all the glue is really",
    "start": "612800",
    "end": "618360"
  },
  {
    "text": "complicated yeah so we should just spend a little bit of time just talking a bit about those those differences between",
    "start": "618360",
    "end": "624880"
  },
  {
    "text": "say unit tests and integration tests and the other types of testing that are for",
    "start": "624880",
    "end": "630240"
  },
  {
    "text": "sure unit testing I think is the simplest one to understand um because it's the simplest kind of test you have",
    "start": "630240",
    "end": "637720"
  },
  {
    "text": "some kind of function usually uh Dave Cheney did a talk at the recent go Meetup in London where he made the case",
    "start": "637720",
    "end": "645200"
  },
  {
    "text": "that the unit actually should be the package and actually that's the that's the boundary at which you should test",
    "start": "645200",
    "end": "652320"
  },
  {
    "text": "and uh it made some quite interesting points about that but essentially whatever it is you're testing the unit",
    "start": "652320",
    "end": "658320"
  },
  {
    "text": "that's the unit test it's the smallest piece you write the test code it runs that real code and checks the outputs",
    "start": "658320",
    "end": "665560"
  },
  {
    "text": "and they're unit test so could someone tell us about what's an integration test then if that's a unit test I've heard",
    "start": "665560",
    "end": "671560"
  },
  {
    "text": "different definitions of integration tests right so it's almost like whenever I personally start talking about it I",
    "start": "671560",
    "end": "677079"
  },
  {
    "text": "have to sort of give like a preamble right okay when I talk about integration test within this project this is what I'm talking about but basically the",
    "start": "677079",
    "end": "683560"
  },
  {
    "text": "basic idea is that given a solution given you know a piece of software that solves a particular problem are the",
    "start": "683560",
    "end": "690560"
  },
  {
    "text": "different components within that solution um um well integrated as such that they can perform the the given",
    "start": "690560",
    "end": "697120"
  },
  {
    "text": "basically they can solve the problem right can they can the components work well together right to to actually",
    "start": "697120",
    "end": "703000"
  },
  {
    "text": "deliver the solution so you can have just you know two components a dozen components hundreds components doesn't",
    "start": "703000",
    "end": "708720"
  },
  {
    "text": "matter do all these pieces within your the bounds of your software or your",
    "start": "708720",
    "end": "713880"
  },
  {
    "text": "solution right without talking to external sort of uh entities can these things talk to each other now there are",
    "start": "713880",
    "end": "720399"
  },
  {
    "text": "others who think well integration testing means you go outside the boundaries of of the immediate piece of",
    "start": "720399",
    "end": "725680"
  },
  {
    "text": "software of the immediate sort of um repo whatever whatever the project is now can it talk to say an external",
    "start": "725680",
    "end": "732240"
  },
  {
    "text": "service like a database can it talk to other you know apis and it's almost like you you kind of have to sort of qualify",
    "start": "732240",
    "end": "737920"
  },
  {
    "text": "what you mean by integration testing but at least I consider it as within the the pro project you're working on right now",
    "start": "737920",
    "end": "743760"
  },
  {
    "text": "do all the pieces in it fit together well I think like one way like piggybacking on that a littleit that",
    "start": "743760",
    "end": "749160"
  },
  {
    "text": "I've heard it described that I think it helps sometimes is if you think about it as like I'm testing this one package or",
    "start": "749160",
    "end": "755519"
  },
  {
    "text": "component or whatever it is and like it's interacting with other things and you have to pretend that like I'm not going to be changing that code so I have",
    "start": "755519",
    "end": "761920"
  },
  {
    "text": "to make sure that like what I have works correctly with those things yeah and um I think you run integration test like",
    "start": "761920",
    "end": "768240"
  },
  {
    "text": "after you know your unit test because you want to make sure first the module itself is like you know running and the",
    "start": "768240",
    "end": "775480"
  },
  {
    "text": "integration test is only handling if it can like work to together with other modules right yeah like one of the",
    "start": "775480",
    "end": "782040"
  },
  {
    "text": "examples I've always liked to give is you could write a unit test for like let's say you're connecting to uh stripe",
    "start": "782040",
    "end": "787480"
  },
  {
    "text": "API you could write a unit test for it and say like as long as they give me back this you know this response my code",
    "start": "787480",
    "end": "793000"
  },
  {
    "text": "works correctly but you're never actually verifying that stripe gives that response back so if we assume that",
    "start": "793000",
    "end": "798199"
  },
  {
    "text": "like the stripe API let's say assume you're allowed to talk to third party services for your integration testing definition the integration test might be",
    "start": "798199",
    "end": "804639"
  },
  {
    "text": "the one that actually talks with stripe and says do I actually get the response back I expected so like the two sort of have those two",
    "start": "804639",
    "end": "811199"
  },
  {
    "text": "separate purposes that helps uh clarify what they're trying to do integration tests are actually really interesting",
    "start": "811199",
    "end": "817120"
  },
  {
    "text": "because while they are classified as functional tests like functional as in you're actually seeing if the system is",
    "start": "817120",
    "end": "823800"
  },
  {
    "text": "behaving as you're expecting but also it really relies on the reliability of those external services and like you",
    "start": "823800",
    "end": "830000"
  },
  {
    "text": "know all the internal different modules so it's kind of like somewhere I think in between like functional and nonfunctional testing right I think",
    "start": "830000",
    "end": "837120"
  },
  {
    "text": "that's what makes it so hard is that every every company depending on what all they rely on has such a very",
    "start": "837120",
    "end": "842279"
  },
  {
    "text": "different understanding of what integration test is yeah if you think about like a Google when they release",
    "start": "842279",
    "end": "848120"
  },
  {
    "text": "something that it's it's a very different scale than like if I were to take something and throw it up onto a you know a small Leno server or",
    "start": "848120",
    "end": "854399"
  },
  {
    "text": "something that's a very different experience than like somebody Google's going to release something so like the integration testing is going to be",
    "start": "854399",
    "end": "860399"
  },
  {
    "text": "vastly different yeah I mean even within like large companies there are also different like approaches to these",
    "start": "860399",
    "end": "865759"
  },
  {
    "text": "problems and you know it really relies on depends on the project and the problem and so on so it's really hard to",
    "start": "865759",
    "end": "871959"
  },
  {
    "text": "you know give some common advice on this topic yeah absolutely right so this kind of touches on a interesting bit as well",
    "start": "871959",
    "end": "879600"
  },
  {
    "text": "which basically like when when I have when I know I'm I'm sort of uh integrating with a a third- party",
    "start": "879600",
    "end": "885199"
  },
  {
    "text": "solution right basically because you want to make sure that during your unit test right you're not necessarily",
    "start": "885199",
    "end": "890519"
  },
  {
    "text": "hitting right those external entities and whether they be apis or databases uh and some people can argue for actually",
    "start": "890519",
    "end": "896000"
  },
  {
    "text": "hitting those things but outside of that right so I I may then say okay well I want to be able to do Mocking and",
    "start": "896000",
    "end": "903160"
  },
  {
    "text": "subbing and and these kinds of things right so then there's a balance you kind of have to strike there because I've",
    "start": "903160",
    "end": "908279"
  },
  {
    "text": "been bitten a few times by basically over mocking or over stubbing and then I go find out right Jan you know",
    "start": "908279",
    "end": "914720"
  },
  {
    "text": "thankfully sometimes you're in integration testing where I'm talking to those services but worst case scenario I",
    "start": "914720",
    "end": "919759"
  },
  {
    "text": "find out at runtime when the application is in staging or production that a particular Endo that I was assuming some",
    "start": "919759",
    "end": "925560"
  },
  {
    "text": "responses were coming back you know in my stubbing and mocking that is that's actually not the case or something has changed in the hood or whatever the case",
    "start": "925560",
    "end": "931720"
  },
  {
    "text": "may be I go find out too late in the process so there's a balance that you're trying to strike there um but you know a",
    "start": "931720",
    "end": "937480"
  },
  {
    "text": "lot of people sort of advocate for mocking and subbing I've honestly I've I'm I've started to do less and less of them in favor of actually um like Yana",
    "start": "937480",
    "end": "945720"
  },
  {
    "text": "was saying basically putting putting basically doing a canar deploy and saying okay does this thing behave right",
    "start": "945720",
    "end": "951440"
  },
  {
    "text": "with actual live traffic doesn't behave the way um it's it's supposed to behave right so basically trying to create less",
    "start": "951440",
    "end": "957839"
  },
  {
    "text": "sort of faker around the thing I'm building and actually feeding it live traffic and seeing how it behaves that's a way more",
    "start": "957839",
    "end": "965000"
  },
  {
    "text": "sort of a accurate representation of how your software is going to behave then then all the marking you're going to do around it I know that monzo do that",
    "start": "965000",
    "end": "971639"
  },
  {
    "text": "there's a bank in London called monzo and they're written in go and I know that they do that they have I assume",
    "start": "971639",
    "end": "978040"
  },
  {
    "text": "test cards and automated tests can execute on the live system and",
    "start": "978040",
    "end": "983079"
  },
  {
    "text": "essentially simulating people really using their cards and transferring money and I suppose doing all the features",
    "start": "983079",
    "end": "989120"
  },
  {
    "text": "that they support and that can just be continuously running in in production",
    "start": "989120",
    "end": "995160"
  },
  {
    "text": "and that you know they get you you see you'll see kind of early signals if any of that's broken it will tell you that",
    "start": "995160",
    "end": "1001480"
  },
  {
    "text": "that something's broken yeah I've seen like some cases where uh people just replicate some of the incoming traffic",
    "start": "1001480",
    "end": "1007399"
  },
  {
    "text": "and like forward it to this like testing environment and try to see like in terms of reliability or performance is pretty",
    "start": "1007399",
    "end": "1013639"
  },
  {
    "text": "much the same like that's how they actually do some of the performance tests uh they need just simulates like",
    "start": "1013639",
    "end": "1020199"
  },
  {
    "text": "something that looks like real usage right like they either go with um incoming traffic or uh what they would",
    "start": "1020199",
    "end": "1026760"
  },
  {
    "text": "do is like take a look at the you know events or logs and try to like replicate some time frame like a five minute and",
    "start": "1026760",
    "end": "1034280"
  },
  {
    "text": "then they would run their tests yeah I built a Thing Once where we recorded",
    "start": "1034280",
    "end": "1040160"
  },
  {
    "text": "real kind of HTTP traffic and saved them and that became the test that became the",
    "start": "1040160",
    "end": "1045438"
  },
  {
    "text": "test files there's I've seen it as well in go in go packages where there's like I think they call them golden files mhm",
    "start": "1045439",
    "end": "1052880"
  },
  {
    "text": "yeah right yes so you you run the tests with a flag and then it actually hits the real service and saves the result in",
    "start": "1052880",
    "end": "1060360"
  },
  {
    "text": "a test file so then in subsequent runs or if you run it with the short flag you",
    "start": "1060360",
    "end": "1065799"
  },
  {
    "text": "can uh you know you can just say assume that everything's as it was when we last ran these and got the real data so",
    "start": "1065799",
    "end": "1073679"
  },
  {
    "text": "that's quite a nice thing to sort of admits that we we're doing our best here it's not perfect um but it still gives",
    "start": "1073679",
    "end": "1080760"
  },
  {
    "text": "us a level of confidence that's therefore worth having true so for those who are obviously new to go and and",
    "start": "1080760",
    "end": "1086840"
  },
  {
    "text": "trying to figure out how do I do these T types of testing and go uh what what sort of advice uh in terms of techniques",
    "start": "1086840",
    "end": "1093840"
  },
  {
    "text": "could we recommend for for these folks in other words let well let me let me actually give an example so for",
    "start": "1093840",
    "end": "1100000"
  },
  {
    "text": "integration testing right so if you don't necessarily want these things to be happening um every time you're trying",
    "start": "1100000",
    "end": "1105360"
  },
  {
    "text": "to perform your unit test right maybe the integration tests are are more expensive more in terms of time um maybe",
    "start": "1105360",
    "end": "1111360"
  },
  {
    "text": "you know you you might name for example um some of your tests with the word integration in them and then uh when",
    "start": "1111360",
    "end": "1117679"
  },
  {
    "text": "you're running go test you know on a command line the tool chain allows you to basically pass in Flags right maybe",
    "start": "1117679",
    "end": "1123520"
  },
  {
    "text": "you pack you pass in a name flag for example um and basically say I want the name um to be uh um or rather run that's",
    "start": "1123520",
    "end": "1131480"
  },
  {
    "text": "the flag I'm thinking of to have the name right integration in it and that way you can actually run specific kinds",
    "start": "1131480",
    "end": "1137159"
  },
  {
    "text": "of tests right depending on on what you need at any given time that way you don't have to run everything every time you're trying to unit testing that's one",
    "start": "1137159",
    "end": "1143799"
  },
  {
    "text": "example yeah I have a question are you uh writing your integration tests as like unit test by using go tests or um",
    "start": "1143799",
    "end": "1150679"
  },
  {
    "text": "would you rather have like you know separate main like binaries or whatever",
    "start": "1150679",
    "end": "1156480"
  },
  {
    "text": "and just setting up the entire environment and then like running the tests I'd say it totally depends on the size of the project given given a large",
    "start": "1156480",
    "end": "1163559"
  },
  {
    "text": "enough project we might have something separate completely separate for actually exercising it as opposed to saying well you what this is just a",
    "start": "1163559",
    "end": "1169080"
  },
  {
    "text": "small you know little microservice and and it does only you know just a couple things and we just want to be able to",
    "start": "1169080",
    "end": "1174120"
  },
  {
    "text": "make sure that it can actually talk to some other service or do some other function but yeah there's you could actually um do do it a couple different",
    "start": "1174120",
    "end": "1180240"
  },
  {
    "text": "ways yeah I think part of it's also thinking about the project you're working on like you just said cuz like",
    "start": "1180240",
    "end": "1186880"
  },
  {
    "text": "like Mata talked about if you're writing an API client and you're trying to test that it actually does things correctly",
    "start": "1186880",
    "end": "1192000"
  },
  {
    "text": "with the endpoints like one easy way to say we probably want to do integration tests is if they provide an API key oh",
    "start": "1192000",
    "end": "1197880"
  },
  {
    "text": "there's a good chance they're trying to hit the actual API but if they don't you can probably make the Assumption in your tests that that's not what they're",
    "start": "1197880",
    "end": "1203559"
  },
  {
    "text": "trying to do so like you would said you could pass the Run flag it might also be a flag that says like provide an API key",
    "start": "1203559",
    "end": "1209919"
  },
  {
    "text": "or there's also build tags which I like but it's a little bit different mhm but I like to use to environmental you know",
    "start": "1209919",
    "end": "1216679"
  },
  {
    "text": "environment I take a look at the environment and skip things and I usually like have some utility function",
    "start": "1216679",
    "end": "1223480"
  },
  {
    "text": "uh I have a testing package with a utility function that automatically skips if the you know the variable is",
    "start": "1223480",
    "end": "1229480"
  },
  {
    "text": "not set or something uh so it's really like you know a common approach I am trying to like follow in every uh",
    "start": "1229480",
    "end": "1235880"
  },
  {
    "text": "testing uh in every test uh I would basically take a look at the environment if there's like enough credentials or",
    "start": "1235880",
    "end": "1242240"
  },
  {
    "text": "whatever I would just run the integration test or if there's a like you know specific environmental variable",
    "start": "1242240",
    "end": "1247679"
  },
  {
    "text": "that says that like run integration test I would do that otherwise that function would just Skip and I would make that uh",
    "start": "1247679",
    "end": "1255080"
  },
  {
    "text": "function call in the beginning of uh all of my test function so I don't have to like you know think about this problem",
    "start": "1255080",
    "end": "1261200"
  },
  {
    "text": "again and again yeah and the goal the goal of course is that we we want to run the unit tests very often you want to",
    "start": "1261200",
    "end": "1268280"
  },
  {
    "text": "keep continuously running them and I even have it where I hit save and it",
    "start": "1268280",
    "end": "1273640"
  },
  {
    "text": "will run the tests for that package but of course you want that to then be quick you need that immediate feedback and",
    "start": "1273640",
    "end": "1279799"
  },
  {
    "text": "with go you do get that especially for unit tests of course integration tests they usually slower and I think that's",
    "start": "1279799",
    "end": "1286840"
  },
  {
    "text": "the value in having them run them less often um it's just because you you you",
    "start": "1286840",
    "end": "1292559"
  },
  {
    "text": "don't want to get in everyone's way and you want to encourage running of the tests because you know if you leave the",
    "start": "1292559",
    "end": "1298200"
  },
  {
    "text": "code it sort of goes stale this is one thing that surprised me when I first became a software engineer I thought if",
    "start": "1298200",
    "end": "1304960"
  },
  {
    "text": "you left code alone nothing would change but it's not if you leave it alone and",
    "start": "1304960",
    "end": "1310840"
  },
  {
    "text": "don't look at it and you try and run it again it's just everything's broken so",
    "start": "1310840",
    "end": "1316600"
  },
  {
    "text": "yeah we want to definitely there's not like self-contained code right like there is all these dependencies and",
    "start": "1316600",
    "end": "1323240"
  },
  {
    "text": "dependencies change even if you don't change the code there's no such thing that you know code that doesn't change",
    "start": "1323240",
    "end": "1329760"
  },
  {
    "text": "unless you are writing your operating system and everything from scratch you have like the absolute control on the",
    "start": "1329760",
    "end": "1335840"
  },
  {
    "text": "hardware and never changes then yeah we can say that like it doesn't have to change yeah but then of course we also",
    "start": "1335840",
    "end": "1343000"
  },
  {
    "text": "have flaky tests and I always thought of testing as a scientific thing it's",
    "start": "1343000",
    "end": "1348159"
  },
  {
    "text": "almost the scientific model we set up an environment we make some estimations or we make some assertions later you know",
    "start": "1348159",
    "end": "1354840"
  },
  {
    "text": "we perform the same thing we take the same steps and then we we test it and it",
    "start": "1354840",
    "end": "1360320"
  },
  {
    "text": "feels very scientific but actually in practice tests can just sometimes they'll just be flaky and they just will",
    "start": "1360320",
    "end": "1366480"
  },
  {
    "text": "fail sometimes and things and and if you get the level wrong I think as well for a project and that's what that means is",
    "start": "1366480",
    "end": "1374360"
  },
  {
    "text": "is quite a deep thing I think but if you get the level wrong when you say scientific you mean um it's consistently",
    "start": "1374360",
    "end": "1380480"
  },
  {
    "text": "reproducible because like I I see that it's a signs to have like you know it's like a different signs to handle the",
    "start": "1380480",
    "end": "1386760"
  },
  {
    "text": "flaky test right like people are running all this like statistical stuff just to",
    "start": "1386760",
    "end": "1391960"
  },
  {
    "text": "make sure like what is actually a flaky unit case and what is really important",
    "start": "1391960",
    "end": "1397159"
  },
  {
    "text": "to care about and so on so it's like a huge topic on its own yeah no it is it's",
    "start": "1397159",
    "end": "1403039"
  },
  {
    "text": "tough I I really just mean that I'm I can't believe sometimes tests will work and then sometimes they just don't work",
    "start": "1403039",
    "end": "1409880"
  },
  {
    "text": "so for junior developers or for people new to programming and go and you start to experience that yeah it's weird but",
    "start": "1409880",
    "end": "1417279"
  },
  {
    "text": "it it's real it happens [Music]",
    "start": "1417279",
    "end": "1424539"
  },
  {
    "text": "yeah this episode is brought to you by strong DM strong DM makes it easy for devops to enforce the controls infos",
    "start": "1428159",
    "end": "1435480"
  },
  {
    "text": "teams require manage access to any datab base server and any environment and in",
    "start": "1435480",
    "end": "1440559"
  },
  {
    "text": "this segment we're talking to Jim morco VP of engineering at Hurst he's sharing how they're using strong DM within their",
    "start": "1440559",
    "end": "1446520"
  },
  {
    "text": "team of 90 plus Engineers it now takes them just 60 seconds to offboard a team",
    "start": "1446520",
    "end": "1452279"
  },
  {
    "text": "member from a data source we have an engineering team of somewhere in the area of 80 or 90 Engineers because we've",
    "start": "1452279",
    "end": "1458480"
  },
  {
    "text": "got so many services and many databases um and so many developers we need a reasonable way to manage access to them",
    "start": "1458480",
    "end": "1465000"
  },
  {
    "text": "uh it was it was somewhat painful and you know labor intensive process uh our devops team uh would literally have to",
    "start": "1465000",
    "end": "1472080"
  },
  {
    "text": "manage every one of the permissions for everybody who wanted access um so strong DM has been a real godsend in that area",
    "start": "1472080",
    "end": "1478320"
  },
  {
    "text": "for us requests for access to specific databases were pretty much manual now we've adopted strong DM it's something",
    "start": "1478320",
    "end": "1485000"
  },
  {
    "text": "that you don't even know is there once it's installed it just works it's very simple um we've set up a multitude of",
    "start": "1485000",
    "end": "1490360"
  },
  {
    "text": "data sources so that when somebody's onboarded we just give them access to strong DM was pretty simple um our",
    "start": "1490360",
    "end": "1496480"
  },
  {
    "text": "devops team um they have a very minimal effort required to enable each data source to be connected to strong DM and",
    "start": "1496480",
    "end": "1503080"
  },
  {
    "text": "then installing the client software is uh it's very very simple and straightforward you can use whatever client you want to to talk to the",
    "start": "1503080",
    "end": "1508840"
  },
  {
    "text": "database so there's really no training necessary all right if your team can benefit from nearly instant onboarding",
    "start": "1508840",
    "end": "1514320"
  },
  {
    "text": "and offboarding that's fully sck to compliant head to strong dm.com to learn more and request a free demo again",
    "start": "1514320",
    "end": "1522279"
  },
  {
    "text": "strong dm.com [Music]",
    "start": "1522279",
    "end": "1533080"
  },
  {
    "text": "I worked at a company at one point that like literally the end of every month there was like a 24 to 48 hour period",
    "start": "1533080",
    "end": "1538840"
  },
  {
    "text": "where like some of the tests just failed and it was because somebody did something weird with time wrong and I don't remember what it was but it was",
    "start": "1538840",
    "end": "1545240"
  },
  {
    "text": "like the most frustrating thing cuz everybody basically just ignored tests during those two days and just checked cod in and it was just like what are we",
    "start": "1545240",
    "end": "1551600"
  },
  {
    "text": "doing and then like after those two days it was just like uh uh let's try to fix everything and not release anything oh",
    "start": "1551600",
    "end": "1557200"
  },
  {
    "text": "yeah that's like like the most dangerous part of it like once everything is becoming if there's at least one flaky",
    "start": "1557200",
    "end": "1562399"
  },
  {
    "text": "test people learn how not to look at the test results and like they just entirely ignore testing right like that's why",
    "start": "1562399",
    "end": "1568880"
  },
  {
    "text": "it's really important to you know do something about flaky tests yeah that's a great Point actually that's exactly",
    "start": "1568880",
    "end": "1574960"
  },
  {
    "text": "what happens if if something's just annoying you as a developer you've got you've actually got work to do you",
    "start": "1574960",
    "end": "1580760"
  },
  {
    "text": "haven't got time to fix someone else's test where you don't have any context about it so yeah it's very that what",
    "start": "1580760",
    "end": "1588320"
  },
  {
    "text": "will happen is you just stop testing you just stop writing tests it's too messy doesn't work just comment them out or",
    "start": "1588320",
    "end": "1594039"
  },
  {
    "text": "something you know that's what happens in in real life that's definitely the number one reason I've seen for companies to stop testing as much as",
    "start": "1594039",
    "end": "1601039"
  },
  {
    "text": "they should it's because tests aren't working so people aren't listening to them so that leads to people just no longer writing more tests because what's",
    "start": "1601039",
    "end": "1607279"
  },
  {
    "text": "the point what do you do when uh there's a really flaky test and it's not really easy to actually fix it but I know that",
    "start": "1607279",
    "end": "1614080"
  },
  {
    "text": "like it's going to actually damage the testing culture if we keep it in the test Su it um do you would you remove",
    "start": "1614080",
    "end": "1621000"
  },
  {
    "text": "that momentarily until you figure out or would you keep it and you know try to tell everybody to be careful because you",
    "start": "1621000",
    "end": "1628679"
  },
  {
    "text": "know just because one taste is flaky and is failing very often doesn't mean that we shouldn't care about testing so one",
    "start": "1628679",
    "end": "1636039"
  },
  {
    "text": "thing I've been experimenting with which I still don't know how I feel about it and a lot of my development is done in smaller teams but uh if I see tests like",
    "start": "1636039",
    "end": "1643799"
  },
  {
    "text": "that I tend to use build tags for my test so like I'll have a build tag for integration testing stuff I'll actually",
    "start": "1643799",
    "end": "1648880"
  },
  {
    "text": "throw things in like a flaky build tag and just basically say these are all the tests that are known to be flaky so then",
    "start": "1648880",
    "end": "1655120"
  },
  {
    "text": "people know like if you aren't running that tag you shouldn't be ignoring tests but if you're running that tag then there's a chance it could be because",
    "start": "1655120",
    "end": "1661159"
  },
  {
    "text": "it's flaky so like at least then it's isolated so people know you know when to ignore stuff yeah it's a great approach",
    "start": "1661159",
    "end": "1668720"
  },
  {
    "text": "but hold on what are some reasons why tests can be flaky uh just imagine that there's a concurrency thing and like you",
    "start": "1668720",
    "end": "1675360"
  },
  {
    "text": "don't have the API to like manage the concurr currency and then you know it's not there's no",
    "start": "1675360",
    "end": "1681200"
  },
  {
    "text": "determinism um and you can't really like you know simulate one particular case or",
    "start": "1681200",
    "end": "1686760"
  },
  {
    "text": "whatever uh it could be for multiple reasons and you don't maybe necessarily know what you can do about it right now",
    "start": "1686760",
    "end": "1694679"
  },
  {
    "text": "but you know you may want to work on it and maybe it will take a week or something to actually come up with a",
    "start": "1694679",
    "end": "1700320"
  },
  {
    "text": "decent test that is going to replace that flaky test so you may want to moment at least like you know just label",
    "start": "1700320",
    "end": "1705960"
  },
  {
    "text": "it as a flaky one and still keep it around Jana would you ever change the design in order to make testing easier",
    "start": "1705960",
    "end": "1713519"
  },
  {
    "text": "uh in terms of like in terms of what well for example yeah if something's",
    "start": "1713519",
    "end": "1720480"
  },
  {
    "text": "non-deterministic but you could change the design in some way or redesign the whatever it is the component yeah",
    "start": "1720480",
    "end": "1726919"
  },
  {
    "text": "definitely I mean you would you would totally redesign but imagine that like you don't have like access to change the",
    "start": "1726919",
    "end": "1734279"
  },
  {
    "text": "for example let's talk about concurrency there is this like concurrent whatever playback scheduler that you",
    "start": "1734279",
    "end": "1739840"
  },
  {
    "text": "want to test and it doesn't provide you the right API so you cannot like create that like momentarily you know you",
    "start": "1739840",
    "end": "1747080"
  },
  {
    "text": "cannot like intercept you cannot like change the behavior of the scheduler you cannot like really stop the scheduler to",
    "start": "1747080",
    "end": "1754600"
  },
  {
    "text": "check if everything is fine along the way so like you know you have very limited options there uh you would",
    "start": "1754600",
    "end": "1761120"
  },
  {
    "text": "either not test that case or you would just ask them to give you some hooks so",
    "start": "1761120",
    "end": "1766480"
  },
  {
    "text": "you can actually make you know the schedule is testable but you know what would you do if you are actually limited",
    "start": "1766480",
    "end": "1773200"
  },
  {
    "text": "to test a case and there's no deterministic way to test a component it",
    "start": "1773200",
    "end": "1779080"
  },
  {
    "text": "has happened to me before and it's a pain one of the things we did and I I really don't advocate for this but it",
    "start": "1779080",
    "end": "1785159"
  },
  {
    "text": "worked this is a part of the disclaimer here is that developers will just hack anything to make it work I i' run it in",
    "start": "1785159",
    "end": "1792600"
  },
  {
    "text": "for Loop because it mostly did it mostly was fine so I let it run like four or",
    "start": "1792600",
    "end": "1798360"
  },
  {
    "text": "five times and if it failed every time then it was a fail if it passed any one of those times I knew that it was okay",
    "start": "1798360",
    "end": "1805320"
  },
  {
    "text": "but that doesn't feel great I did I didn't go home thinking yeah I'm really good at computers today put that on your",
    "start": "1805320",
    "end": "1813559"
  },
  {
    "text": "resume by any means necessary this test will pass yeah but that's the attitude",
    "start": "1813559",
    "end": "1819120"
  },
  {
    "text": "though that we have to remember that that that is what people are doing they've got some they've got some other",
    "start": "1819120",
    "end": "1824399"
  },
  {
    "text": "thing that they're trying to achieve so they'll do anything it's very natural um",
    "start": "1824399",
    "end": "1829640"
  },
  {
    "text": "and we should as individuals fight it but you know anyone that's building tools or designing Frameworks to help in",
    "start": "1829640",
    "end": "1835880"
  },
  {
    "text": "this they should for sure bear that in mind I think we just do a terrible job in terms of like thinking about the",
    "start": "1835880",
    "end": "1841519"
  },
  {
    "text": "testability of you know anything we design like our API design we had this you know we had this show about the API",
    "start": "1841519",
    "end": "1848240"
  },
  {
    "text": "design but we never talked about testability um but you know necessarily we optimize a lot of things around",
    "start": "1848240",
    "end": "1856000"
  },
  {
    "text": "usability what but when it comes to you know testability we just always uh it's always the second priority and we you",
    "start": "1856000",
    "end": "1863480"
  },
  {
    "text": "know end up like having either flake test or like non- testable code or like over mocked you know situations which is",
    "start": "1863480",
    "end": "1871000"
  },
  {
    "text": "not really nice yeah y are you talking about sort of a um for example like a a",
    "start": "1871000",
    "end": "1876279"
  },
  {
    "text": "practical example might be that you say you write a a go package um",
    "start": "1876279",
    "end": "1881399"
  },
  {
    "text": "and you want to you expose sort of a some sort of testing facility right for",
    "start": "1881399",
    "end": "1888200"
  },
  {
    "text": "the consumers of your package so we're not talking about the internal the test you Rite for your own functionality but",
    "start": "1888200",
    "end": "1893919"
  },
  {
    "text": "really exposing something that others or your package can use to test exactly or",
    "start": "1893919",
    "end": "1899360"
  },
  {
    "text": "like design an apis in a way that it can be markable or testable you know some certain way like just keeping in mind",
    "start": "1899360",
    "end": "1906360"
  },
  {
    "text": "that I think uh something needs to be testable uh by the user is just a good exercise but we don't necessarily care",
    "start": "1906360",
    "end": "1913639"
  },
  {
    "text": "too much about it when we are designing apis yeah so we that's funny because when we did machine box that was a",
    "start": "1913639",
    "end": "1919519"
  },
  {
    "text": "conversation we had a lot which is we made sure that uh people would be able to test this stuff because and stub it",
    "start": "1919519",
    "end": "1927240"
  },
  {
    "text": "out easily whatever they wanted to do and I think it should be a first class concern but of course if you're",
    "start": "1927240",
    "end": "1933399"
  },
  {
    "text": "generating code or you know if there are other mechanisms and every project is",
    "start": "1933399",
    "end": "1938559"
  },
  {
    "text": "different it's that is a difficult thing to keep thinking about but tdd helps me do that because I usually put my code at",
    "start": "1938559",
    "end": "1945880"
  },
  {
    "text": "least by default in an in a different test package so that I am testing it ex I'm testing the package externally so in",
    "start": "1945880",
    "end": "1952880"
  },
  {
    "text": "order to test it it has to be testable so by its nature tdd helps me achieve",
    "start": "1952880",
    "end": "1958279"
  },
  {
    "text": "that and sometimes I'll notice patterns that we're doing a few times and I'll put them in the docs for people or even",
    "start": "1958279",
    "end": "1964600"
  },
  {
    "text": "create a little sub package um or a little package inside this one that provides some kind of common or simple",
    "start": "1964600",
    "end": "1971880"
  },
  {
    "text": "testing thing and just gives it to people I quite like that so in doing that did did you notice anything that",
    "start": "1971880",
    "end": "1978360"
  },
  {
    "text": "was anything that you could design that like make your packages less testable like did anything stick out yes I mean",
    "start": "1978360",
    "end": "1985159"
  },
  {
    "text": "any kind of global State you know suddenly you have to care about you can't just run your tests in any order I",
    "start": "1985159",
    "end": "1992320"
  },
  {
    "text": "like to be able to run unit tests in any order that I like and I like to be able to just run one at a time if I'm just",
    "start": "1992320",
    "end": "1998840"
  },
  {
    "text": "working on one little thing and sometimes if you have well every time that you have state somewhere you have",
    "start": "1998840",
    "end": "2005399"
  },
  {
    "text": "to care about that and you know sometimes it's nice you get these little dsls coming through where you can just",
    "start": "2005399",
    "end": "2012080"
  },
  {
    "text": "say Okay log in as this user and create these things and then do this and then",
    "start": "2012080",
    "end": "2017440"
  },
  {
    "text": "you make the real kind of function call or the API call or whatever it is and then you can kind of go and check and",
    "start": "2017440",
    "end": "2023600"
  },
  {
    "text": "make sure things happened as expected but that's a lot of work to do for a unit so as long as it runs fast though I",
    "start": "2023600",
    "end": "2031480"
  },
  {
    "text": "will do that what else is difficult concurrency is hard to test in go but",
    "start": "2031480",
    "end": "2036639"
  },
  {
    "text": "you can can you know it depends like sometimes you I think sometimes you have to kind of trust yourself as well you",
    "start": "2036639",
    "end": "2044039"
  },
  {
    "text": "you know we want these projects to be to have this great coverage and for us to have the confidence that we can put it",
    "start": "2044039",
    "end": "2050599"
  },
  {
    "text": "out there in the wild or ship the code knowing it's going to work but if you've got like a little select block that's",
    "start": "2050599",
    "end": "2057398"
  },
  {
    "text": "really difficult to test what's the harm in leaving that bit untested and just",
    "start": "2057399",
    "end": "2062839"
  },
  {
    "text": "sort of rely on the fact that almost nothing's going to work if that thing's not working so we sort of know it is",
    "start": "2062839",
    "end": "2068040"
  },
  {
    "text": "working does that give you warm fuzzies at night or does that worry you I'm more willing to let things like that go but I",
    "start": "2068040",
    "end": "2076000"
  },
  {
    "text": "also am in a very different environment than most people as in like I'm not working at like a Google on something",
    "start": "2076000",
    "end": "2082200"
  },
  {
    "text": "that deals with billions of dollars if I was doing that it might make me a little bit scared at night and what you know",
    "start": "2082200",
    "end": "2087638"
  },
  {
    "text": "context that you have where you're working what the project is all that stuff probably does play into this",
    "start": "2087639",
    "end": "2092800"
  },
  {
    "text": "doesn't it I'd say definitely because I mean if you think about it if you're writing something that you know maybe",
    "start": "2092800",
    "end": "2097960"
  },
  {
    "text": "it's a little store that you're going to make $100 a month on well if you have a little bug at most what you lose $100",
    "start": "2097960",
    "end": "2104040"
  },
  {
    "text": "that month or something whereas like if you're a Google and you know you could actually lose millions of dollars because you didn't test something so",
    "start": "2104040",
    "end": "2109920"
  },
  {
    "text": "there's a risk assessment element then yeah you have to assess the risk when you're testing because it is effort one",
    "start": "2109920",
    "end": "2116720"
  },
  {
    "text": "of the reasons I hear people don't like tdd is because it just takes too long to build anything that for me isn't true",
    "start": "2116720",
    "end": "2124040"
  },
  {
    "text": "now I'm actually faster with tdd because of the focus it gives me and and the speed at which I can um write code",
    "start": "2124040",
    "end": "2131680"
  },
  {
    "text": "because you know if it's wrong I'll I'll quickly see that it's wrong actually allows me to go a lot faster but isn't",
    "start": "2131680",
    "end": "2137680"
  },
  {
    "text": "isn't TD TD so I have a question about tdd I do think tdd is a good choice if",
    "start": "2137680",
    "end": "2145040"
  },
  {
    "text": "you have a really you know clear spec right like it's more of like um you have",
    "start": "2145040",
    "end": "2151920"
  },
  {
    "text": "this encoding decoding spec you want to implement and it's just like there clear cases and uh it's it's I think awesome",
    "start": "2151920",
    "end": "2159800"
  },
  {
    "text": "but maybe it's not that awesome if you're rid in a web server that talks to like five other servers and it's just",
    "start": "2159800",
    "end": "2167960"
  },
  {
    "text": "like not where I would start with uh so what is your opinion on this like do you think that like tdd is applicable to",
    "start": "2167960",
    "end": "2174280"
  },
  {
    "text": "lots of different problems or is this just like really where the spec is really clear and self-contained I think",
    "start": "2174280",
    "end": "2180920"
  },
  {
    "text": "the other thing is it depends on what your definition of tdd even is MH because I've heard some people that say",
    "start": "2180920",
    "end": "2186400"
  },
  {
    "text": "TD is literally writing the minimum amount of code possible like you write a test then you write the minimum code to",
    "start": "2186400",
    "end": "2192040"
  },
  {
    "text": "make that test pass and I don't function that way it's just not how I work yeah it can I think that's like extreme tdd",
    "start": "2192040",
    "end": "2200400"
  },
  {
    "text": "that's like fundamentalist tdd I think but is that is that a terminology just",
    "start": "2200400",
    "end": "2205960"
  },
  {
    "text": "coin extreme xdd yeah but well I mean yeah so",
    "start": "2205960",
    "end": "2212680"
  },
  {
    "text": "here's here's the thing I mean this tdd debate has been going on forever like I with my teams I usually tell them look I",
    "start": "2212680",
    "end": "2219520"
  },
  {
    "text": "I don't particularly care if you follow tdd or not when coming up with the solution as long as the stuff you you're",
    "start": "2219520",
    "end": "2224960"
  },
  {
    "text": "committing and in our in our issuing a PR for as long as it has tests I'm good with it right so to Jana's point when",
    "start": "2224960",
    "end": "2231560"
  },
  {
    "text": "I'm experimenting right when I don't quite know exactly what it is that what what shape this thing is going to take",
    "start": "2231560",
    "end": "2238280"
  },
  {
    "text": "right like I don't start with test first and again that doesn't mean it's the right way it's the wrong way it's just",
    "start": "2238280",
    "end": "2243880"
  },
  {
    "text": "you know how a person right how how a developer you know that particular developer how do they think about things",
    "start": "2243880",
    "end": "2249319"
  },
  {
    "text": "we don't all think the same way so we shouldn't take the tdd thing as as gospel right we don't have to be dogmatic about it it's all about at the",
    "start": "2249319",
    "end": "2256560"
  },
  {
    "text": "end of the day right is this code that is about that you that a developer is proposing to be the solution to the",
    "start": "2256560",
    "end": "2262760"
  },
  {
    "text": "problem can we verify that right and to me that underlines the value of tests right you are telling me that as a",
    "start": "2262760",
    "end": "2269560"
  },
  {
    "text": "developer the solution you are proposing is correct and this is the test that says so that is to me the ultimate value",
    "start": "2269560",
    "end": "2276760"
  },
  {
    "text": "of the test right so that when somebody else picks it up and they start to make changes they know exactly what is",
    "start": "2276760",
    "end": "2282280"
  },
  {
    "text": "expected and if it breaks they know what it is they need to look at to fix it so that's the ultimate value of the test I",
    "start": "2282280",
    "end": "2287720"
  },
  {
    "text": "don't care how you come up with it as long as you have them I think that's fair enough the the one thing I'll say",
    "start": "2287720",
    "end": "2293000"
  },
  {
    "text": "about that though is writing unit tests for code that's already been written is one of the most Soul destroying things I",
    "start": "2293000",
    "end": "2299839"
  },
  {
    "text": "find myself having to do sometimes writing tests as it's being developed",
    "start": "2299839",
    "end": "2305599"
  },
  {
    "text": "that is a very different experience the end result can be the same it's usually you know it's usually better with tdd",
    "start": "2305599",
    "end": "2311200"
  },
  {
    "text": "because uh depends on if you're doing it well or not I suppose but yeah you're right you can't go too far and be an",
    "start": "2311200",
    "end": "2318200"
  },
  {
    "text": "extremist about it but there are cases where it really is the right way I think",
    "start": "2318200",
    "end": "2323560"
  },
  {
    "text": "to build a particular thing of course if people you know when you're sketching ideas you just want to open a notepad",
    "start": "2323560",
    "end": "2330440"
  },
  {
    "text": "and you're just sketching things and stuff yeah that doesn't really count to me that's it's part of the process but",
    "start": "2330440",
    "end": "2335680"
  },
  {
    "text": "it's it's not part of that you're not writing you're not implementing that production thing it really is a",
    "start": "2335680",
    "end": "2341319"
  },
  {
    "text": "different mode so yeah but even then even in those cases when I'm just hacking on something if it's a go",
    "start": "2341319",
    "end": "2347640"
  },
  {
    "text": "package I will definitely start with tests personally because that's how I think about I mean that's that's really",
    "start": "2347640",
    "end": "2354119"
  },
  {
    "text": "I become the first user of that package and I think that's the right way to build to write code and to build",
    "start": "2354119",
    "end": "2359800"
  },
  {
    "text": "packages are you doing this before or after the API design so um I'm just",
    "start": "2359800",
    "end": "2364839"
  },
  {
    "text": "wondering like what is the overhead of writing the tests first because I I feel",
    "start": "2364839",
    "end": "2370079"
  },
  {
    "text": "myself like even if I will follow a tdd approach I will try to finalize my API",
    "start": "2370079",
    "end": "2375319"
  },
  {
    "text": "design first and then uh just basically you know put my API in my main package",
    "start": "2375319",
    "end": "2381160"
  },
  {
    "text": "and then create a test file and you know maybe put some tests and start to",
    "start": "2381160",
    "end": "2386480"
  },
  {
    "text": "implement the functions I probably don't do it exactly like that but to be honest I wouldn't split any hairs over it",
    "start": "2386480",
    "end": "2393040"
  },
  {
    "text": "because I think Johnny's right as long as the end result is kind of the same I",
    "start": "2393040",
    "end": "2398079"
  },
  {
    "text": "think it's okay but yeah I will if I'm if I've got an idea for a go package",
    "start": "2398079",
    "end": "2403160"
  },
  {
    "text": "I'll start with tests where I'm just trying to use the thing imagining it exists and I just start to use it and",
    "start": "2403160",
    "end": "2410040"
  },
  {
    "text": "that's how I kind of do API design you know most of the time and I'll say oh okay so now I'm calling this package you",
    "start": "2410040",
    "end": "2416359"
  },
  {
    "text": "know I need to be able to set this I need to be able to set an HTTP client so how am I going to do that in the design",
    "start": "2416359",
    "end": "2422599"
  },
  {
    "text": "and I sort of try and just be the user and I I think what even if people are sketching even if you're sketching code",
    "start": "2422599",
    "end": "2430319"
  },
  {
    "text": "elsewhere it helps if you're trying to be the user I think that's the important thing because we're really that's what",
    "start": "2430319",
    "end": "2435480"
  },
  {
    "text": "who we're building it for I think I have a similar approach but it's really limited like it's not really all the",
    "start": "2435480",
    "end": "2440720"
  },
  {
    "text": "test coverage I call this like example driven development I would just you know start with the go examples uh so I can",
    "start": "2440720",
    "end": "2447880"
  },
  {
    "text": "actually have a feeling of like what it is going to feel like for the user and I would only you know write examples for",
    "start": "2447880",
    "end": "2453920"
  },
  {
    "text": "like three main cases and then you know it helps me to shape the apis yeah that's great I I follow something very",
    "start": "2453920",
    "end": "2462520"
  },
  {
    "text": "actually it's interesting because obviously we all have slightly different approaches I I do the same thing but",
    "start": "2462520",
    "end": "2468240"
  },
  {
    "text": "with readmes right like I basically say okay if I were to go into this project and and I started looking at the read me",
    "start": "2468240",
    "end": "2474480"
  },
  {
    "text": "tell me about usage right tell me like what to expect what am I doing you know what am I doing what am I starting with",
    "start": "2474480",
    "end": "2480359"
  },
  {
    "text": "what is the entry point into this package what is the typical uh um way",
    "start": "2480359",
    "end": "2485440"
  },
  {
    "text": "that you'd use this things so it's like I'll start with the read me literally because I I've done this many times both",
    "start": "2485440",
    "end": "2490960"
  },
  {
    "text": "for myself and for members of my team whereby I may not necessarily be the one implementing the package right but I",
    "start": "2490960",
    "end": "2497400"
  },
  {
    "text": "will come up with the read me right and I can hand that over you know to to a different developer or different teammate and then they know exactly what",
    "start": "2497400",
    "end": "2503880"
  },
  {
    "text": "my expectations are and then basically that becomes a basis right to actually talk about designs and tradeoffs and",
    "start": "2503880",
    "end": "2510560"
  },
  {
    "text": "even before a single out of code has been has been written I find it to be like a tremendous way of actually wrapping your head around what it is",
    "start": "2510560",
    "end": "2516520"
  },
  {
    "text": "that you're trying to build yeah and I suspect a lot of us do design differently as well because for me",
    "start": "2516520",
    "end": "2523359"
  },
  {
    "text": "design emerges for sure through that process um I don't S I have done before",
    "start": "2523359",
    "end": "2530560"
  },
  {
    "text": "as you described Johnny where you sit down with it's kind of document-driven development almost or something in fact",
    "start": "2530560",
    "end": "2536319"
  },
  {
    "text": "we made a we made a little tool called Silk which was a it was markdown file",
    "start": "2536319",
    "end": "2541440"
  },
  {
    "text": "and you just described your API with it and then you could run that markdown file again a real API so it was like",
    "start": "2541440",
    "end": "2548319"
  },
  {
    "text": "halfway between documentation and uh and real test code that the idea of that",
    "start": "2548319",
    "end": "2553960"
  },
  {
    "text": "came out of the fact that you know as you mentioned Yana those go examples are actually runnable so it is an example",
    "start": "2553960",
    "end": "2561119"
  },
  {
    "text": "but you can run it and it'll fail if if the output doesn't match and things like that which is really cool I love that in",
    "start": "2561119",
    "end": "2567440"
  },
  {
    "text": "go project testing was a first class concern uh a first first class citizen",
    "start": "2567440",
    "end": "2573960"
  },
  {
    "text": "um you know that has really helped the language and the community I think MH so",
    "start": "2573960",
    "end": "2581040"
  },
  {
    "text": "the so we' talked about tdd but there's a there's a whole other discipline right bdd which kind of sounds like what you",
    "start": "2581040",
    "end": "2587079"
  },
  {
    "text": "were talking about just now Matt the the whole Behavior driven development which actually we actually have uh popular",
    "start": "2587079",
    "end": "2592720"
  },
  {
    "text": "packages within the go community that sort of adopt that approach like any of you tried that and liked it or didn't",
    "start": "2592720",
    "end": "2599400"
  },
  {
    "text": "like it what what did you think of of these kinds of this approach of of actually writing tests I can say I have",
    "start": "2599400",
    "end": "2605800"
  },
  {
    "text": "no problem with people using it or you whatever one of the things that I tend to dislike about bdd is that most of the",
    "start": "2605800",
    "end": "2611800"
  },
  {
    "text": "packages for it expect you to like almost learn a new language mhm it kind of feels like I already learned go I",
    "start": "2611800",
    "end": "2617599"
  },
  {
    "text": "want to write go code in my tests that way people don't have to learn new stuff and it's not as bad and go but like I",
    "start": "2617599",
    "end": "2623440"
  },
  {
    "text": "remember in rails or you're writing in Ruby it really felt like you weren't writing Ruby anymore it was like I got to learn this whole new thing to learn",
    "start": "2623440",
    "end": "2629760"
  },
  {
    "text": "how to test and it's like I don't want to learn something new mhm and you're doing the same thing aren't you you're still I haven't done much of it but",
    "start": "2629760",
    "end": "2636880"
  },
  {
    "text": "isn't it just that you it's a different way of kind of doing the same job which is it's going to run some code and you're going to make assertions about it",
    "start": "2636880",
    "end": "2643440"
  },
  {
    "text": "it just doesn't it have just these fluent kind of uh apis so that you can say it should do this and this should",
    "start": "2643440",
    "end": "2650559"
  },
  {
    "text": "equal this and you can kind of speak it out almost yeah isn't it the difference is more of like the organization of the",
    "start": "2650559",
    "end": "2656440"
  },
  {
    "text": "things and like how you actually like you know Express like I mean how you CL maybe it kind of helps you to also",
    "start": "2656440",
    "end": "2662800"
  },
  {
    "text": "self-d doent what is related to what you know uh but isn't that the only",
    "start": "2662800",
    "end": "2668720"
  },
  {
    "text": "difference I was sold on the the notion that if you wrote",
    "start": "2668720",
    "end": "2675839"
  },
  {
    "text": "behavior style Behavior driven development style um sort of self-documenting right almost English",
    "start": "2675839",
    "end": "2682280"
  },
  {
    "text": "you know sounding ways of describing functionality that folks outside of the Development Group would start to get",
    "start": "2682280",
    "end": "2688520"
  },
  {
    "text": "into it um you know things like that's that some some of the like cucumber for example from from back when I was",
    "start": "2688520",
    "end": "2695000"
  },
  {
    "text": "involved in Ru being and doing all that stuff uh you know like there's the language underneath I think it's called",
    "start": "2695000",
    "end": "2700760"
  },
  {
    "text": "girkin or something like that there was this promise right that that you know you'd have people other than Engineers",
    "start": "2700760",
    "end": "2705920"
  },
  {
    "text": "you know writing the the specs that they can can then then hand over to the development team and they could just you",
    "start": "2705920",
    "end": "2712280"
  },
  {
    "text": "know write tests against those things I have actually never seen that come true ever I think like yeah because nobody",
    "start": "2712280",
    "end": "2718599"
  },
  {
    "text": "actually cares but uh I think initially I mean originally it was really important to you know explain who is",
    "start": "2718599",
    "end": "2727280"
  },
  {
    "text": "actually um you know why we are testing this case like I mean you need to answer",
    "start": "2727280",
    "end": "2732559"
  },
  {
    "text": "some questions like right you know who is the person that is going to get benefit from this Behavior Uh what it is",
    "start": "2732559",
    "end": "2740319"
  },
  {
    "text": "actually trying to solve and like why is it doing it like uh and you need to you know Express this in regular English so",
    "start": "2740319",
    "end": "2746520"
  },
  {
    "text": "people can just go and like see and explore uh it's kind of like you know having this like product design document",
    "start": "2746520",
    "end": "2754839"
  },
  {
    "text": "as a Tex test to or something I think the other issue is that if you take",
    "start": "2754839",
    "end": "2760520"
  },
  {
    "text": "somebody who doesn't really write code more than likely a developer could misinterpret their tests and write",
    "start": "2760520",
    "end": "2765680"
  },
  {
    "text": "something that passes all of those tests but comes nowhere near doing what they actually wanted it to do yeah yeah yeah so it hasn't worked",
    "start": "2765680",
    "end": "2773200"
  },
  {
    "text": "has it so I don't think it's ever going to work because it's almost like other people have to learn like how to keep",
    "start": "2773200",
    "end": "2780160"
  },
  {
    "text": "the coder happy and at that point it's like well you might as well just write it up in a dock anyway yep",
    "start": "2780160",
    "end": "2785910"
  },
  {
    "text": "[Music]",
    "start": "2785910",
    "end": "2790639"
  },
  {
    "text": "this episode is brought to you by a Ry Velocity Conference in San Jose California June 10th through June 13th",
    "start": "2792720",
    "end": "2798960"
  },
  {
    "text": "to get ahead today your organization needs to be Cloud native and aale Velocity Conference covers everything",
    "start": "2798960",
    "end": "2804200"
  },
  {
    "text": "from kubernetes and S reliability engineering to observability and performance to give you a comprehensive",
    "start": "2804200",
    "end": "2809440"
  },
  {
    "text": "understanding of applications and services and stay on top of the rapidly changing Cloud landscape they have",
    "start": "2809440",
    "end": "2814960"
  },
  {
    "text": "amazing training amazing speakers and of course an amazing Community here from industry leaders like Lena Hall Julie",
    "start": "2814960",
    "end": "2821160"
  },
  {
    "text": "Horvath Liz Fong Jones Emily Freeman and more learn new skills approaches and",
    "start": "2821160",
    "end": "2827200"
  },
  {
    "text": "Technologies and get expert insights and essential training on critical topics like chaos engineering Cloud native",
    "start": "2827200",
    "end": "2833480"
  },
  {
    "text": "systems emerging Tech serverless production engineering and of course kubernetes learn more and register at",
    "start": "2833480",
    "end": "2839599"
  },
  {
    "text": "the law ind.com CA again it's in San Jose California June 10th through June 13th plus our",
    "start": "2839599",
    "end": "2847000"
  },
  {
    "text": "listeners get 20% off bronze silver and gold passes when you use the code go time 20 again velocity.com slca or check",
    "start": "2847000",
    "end": "2854960"
  },
  {
    "text": "the shs for [Music]",
    "start": "2854960",
    "end": "2859828"
  },
  {
    "text": "[Music] details well uh listeners remember uh",
    "start": "2863290",
    "end": "2871240"
  },
  {
    "text": "you can join in the conversation on slack we're in the # go timef M Channel",
    "start": "2871240",
    "end": "2877480"
  },
  {
    "text": "and you can also tweet twitter at gotime FM and actually speaking of that Cory L",
    "start": "2877480",
    "end": "2883960"
  },
  {
    "text": "now in the uh in the slack channels just said I've written tens of thousands of lines of test code and have yet to ever",
    "start": "2883960",
    "end": "2890920"
  },
  {
    "text": "feel like I need another package to help me test so how dear panel do you feel",
    "start": "2890920",
    "end": "2896760"
  },
  {
    "text": "about standard Library only versus user user framework or use something some of",
    "start": "2896760",
    "end": "2902079"
  },
  {
    "text": "the tools I'll say this as far as I think this is like everything we've talked about everybody's going to have",
    "start": "2902079",
    "end": "2908319"
  },
  {
    "text": "different preferences but the bigger thing to me is as long as a whole team or a whole project can all settle on one",
    "start": "2908319",
    "end": "2914480"
  },
  {
    "text": "thing I think that's important like having consistency across the code base or a project or whatever you're working",
    "start": "2914480",
    "end": "2919880"
  },
  {
    "text": "on is far more important than the specific details that you choose yeah I",
    "start": "2919880",
    "end": "2924960"
  },
  {
    "text": "think it's also like the tooling is really important in terms of having some consistency I would rather like there",
    "start": "2924960",
    "end": "2930319"
  },
  {
    "text": "are some tools like there are some tested Frameworks that kind of like comes with their own flavors of tools",
    "start": "2930319",
    "end": "2935599"
  },
  {
    "text": "and I'm trying to like stay away from that because I want everybody to check out my code especially if it's open source and run the test without learning",
    "start": "2935599",
    "end": "2942319"
  },
  {
    "text": "anything new right like that's really important I care about test I care about people running the test that's why I",
    "start": "2942319",
    "end": "2947760"
  },
  {
    "text": "want to make it as approachable as it is and um I'm just generally personally H",
    "start": "2947760",
    "end": "2952799"
  },
  {
    "text": "happy with the standard Library testing package but as soon as like any you know testing framework supports go test I",
    "start": "2952799",
    "end": "2959839"
  },
  {
    "text": "think I'm open uh to try do you ever do you write Little Helpers uh like for",
    "start": "2959839",
    "end": "2966119"
  },
  {
    "text": "equality checking or for not nail or not error do you do anything to help yourself uh you mean like testing",
    "start": "2966119",
    "end": "2972520"
  },
  {
    "text": "utilities yeah yeah I I have I have a testing package oh so you have your own testing package yeah I have like some",
    "start": "2972520",
    "end": "2979119"
  },
  {
    "text": "utilities as you know I was mentioning that like for example it automatically",
    "start": "2979119",
    "end": "2984200"
  },
  {
    "text": "skips the integration uh test if you know if it's not in the environment or",
    "start": "2984200",
    "end": "2989440"
  },
  {
    "text": "whatever so I I try to maintain a testing package for every project I",
    "start": "2989440",
    "end": "2994520"
  },
  {
    "text": "actually maintain but uh it's more of like you know per project and depends on",
    "start": "2994520",
    "end": "2999839"
  },
  {
    "text": "you know I put utilities depends on the requirements I personally have used the um the testify assert um package uh",
    "start": "2999839",
    "end": "3007480"
  },
  {
    "text": "because it provided sort of that core basic utility um sort of aspect that I was basically um having myself um",
    "start": "3007480",
    "end": "3014559"
  },
  {
    "text": "finding myself sort of recreating from Project to project um it comes with some extras and and I tend to not use those I",
    "start": "3014559",
    "end": "3021160"
  },
  {
    "text": "think it has mocking as well and some other stuff I I think just being able to assert using that assert package has",
    "start": "3021160",
    "end": "3027920"
  },
  {
    "text": "been sort of a has made testing a little easier a little more approachable for some reason though and I might not be",
    "start": "3027920",
    "end": "3034240"
  },
  {
    "text": "the only one who feels this way but like when I first started go I almost like I",
    "start": "3034240",
    "end": "3039880"
  },
  {
    "text": "wanted to bring like some habits with me from from other languages right like you",
    "start": "3039880",
    "end": "3045280"
  },
  {
    "text": "know if you're doing Ruby like you don't you don't know no nobody that I know writes with a standard you know right",
    "start": "3045280",
    "end": "3050680"
  },
  {
    "text": "test without any sort of um framework you know in Ruby or rails right you always bring in like our spe and yours",
    "start": "3050680",
    "end": "3056240"
  },
  {
    "text": "bringing other things there's there's this tendency to to sort of I had that tendency to just basically look around",
    "start": "3056240",
    "end": "3061880"
  },
  {
    "text": "okay what what things can I bring into this go program to make it more you know akin to what I used to do and over the",
    "start": "3061880",
    "end": "3069160"
  },
  {
    "text": "years I've sort of uh regressed on that right basically I'm like okay well by default can I try to do this in this in",
    "start": "3069160",
    "end": "3075400"
  },
  {
    "text": "this with a standard library right what is the trade-off if I bring in you know I try not to bring dependencies that I can simply if I can copy and paste like",
    "start": "3075400",
    "end": "3082160"
  },
  {
    "text": "a few lines of code I'll I'll do that rather than bringing the actual dependency itself or if it's maybe",
    "start": "3082160",
    "end": "3087640"
  },
  {
    "text": "slightly a little harder you know more verose with the standard Library I may still choose to do that because like",
    "start": "3087640",
    "end": "3093599"
  },
  {
    "text": "personally um if I don't have to bring in a dependency like I really really really try to avoid it maybe I've been",
    "start": "3093599",
    "end": "3099079"
  },
  {
    "text": "bitten one once one too many times with you know third party packages but like I really try to do it all with the C",
    "start": "3099079",
    "end": "3104559"
  },
  {
    "text": "library even if it's slightly a little uncomfortable and a little painful I think this goes back to what Matt said earlier where you if you let code sit",
    "start": "3104559",
    "end": "3111319"
  },
  {
    "text": "long enough you used to think that it would work and later when you go to run it and it doesn't a lot of the times",
    "start": "3111319",
    "end": "3116400"
  },
  {
    "text": "it's because some third party package changed and your package manager wasn't you know there wasn't one at the time or",
    "start": "3116400",
    "end": "3122160"
  },
  {
    "text": "something happened and you're just like I don't want to have this happen again yeah but your point Johnny about",
    "start": "3122160",
    "end": "3128119"
  },
  {
    "text": "the other um the inertia that people have from other languages that is exactly why packages like testify",
    "start": "3128119",
    "end": "3135799"
  },
  {
    "text": "testify I think still is one of the most important packages in go um and a full",
    "start": "3135799",
    "end": "3142240"
  },
  {
    "text": "disclosure I I started testify because because with a friend of mine because I",
    "start": "3142240",
    "end": "3147839"
  },
  {
    "text": "was in I was working in other languages where that was that was how I thought",
    "start": "3147839",
    "end": "3152920"
  },
  {
    "text": "about checking for equality you just throw them into something and it you",
    "start": "3152920",
    "end": "3158599"
  },
  {
    "text": "know it was its responsibility to check it for you and and print it out nicely",
    "start": "3158599",
    "end": "3164000"
  },
  {
    "text": "and all that stuff um do you think go would benefit from having some way of",
    "start": "3164000",
    "end": "3169760"
  },
  {
    "text": "saying like assert at least for the common ones like assert or you know check that this error is not is nil or",
    "start": "3169760",
    "end": "3177280"
  },
  {
    "text": "those kinds of things you can write it yourself if you really want to have that um you know I mean it's it's a couple of",
    "start": "3177280",
    "end": "3182799"
  },
  {
    "text": "lines it's like so trivial yes yeah you don't you don't have a whole you don't need a whole package to do that yeah",
    "start": "3182799",
    "end": "3189880"
  },
  {
    "text": "it's almost like at this point we're arguing whether or not this should be a third party library or in the standard library and because like it definitely",
    "start": "3189880",
    "end": "3196119"
  },
  {
    "text": "exists in third party libraries so the only real change would be like if you're willing to import something yeah that's",
    "start": "3196119",
    "end": "3202040"
  },
  {
    "text": "what I mean though is it is it worth having is it worth get promoted cuz I feel like testify made the case for that",
    "start": "3202040",
    "end": "3208960"
  },
  {
    "text": "style of testing and to be honest I think the a if you if you look at the API for testify it's really grown um it",
    "start": "3208960",
    "end": "3216480"
  },
  {
    "text": "was a very uh liberal project where anyone's kind of contributions were very",
    "start": "3216480",
    "end": "3222079"
  },
  {
    "text": "welcome and um and so what's happened is it's quite now it's a big package it has its own dependencies quite a lot of them",
    "start": "3222079",
    "end": "3229240"
  },
  {
    "text": "yes and really like you say people are just after the assert equal and a few other a little handful of very common",
    "start": "3229240",
    "end": "3236480"
  },
  {
    "text": "things could that not be on the T so you could do like T do assert or is it just",
    "start": "3236480",
    "end": "3242400"
  },
  {
    "text": "not worth it I think it would be better for like testify to split itself across a couple packages or something or maybe",
    "start": "3242400",
    "end": "3249040"
  },
  {
    "text": "have one package that Imports all of it at least to me it's a great stepping stone like if you're learning go and you",
    "start": "3249040",
    "end": "3254319"
  },
  {
    "text": "want something that makes you feel more familiar like I love having things like that but there's enough people that I",
    "start": "3254319",
    "end": "3259359"
  },
  {
    "text": "think would get upset about it that I don't I just think it would cause way too much of a Ruckus to to bother with",
    "start": "3259359",
    "end": "3265880"
  },
  {
    "text": "I think there are also like going to be a number of different apis in order to you know support all the like fail cases",
    "start": "3265880",
    "end": "3272960"
  },
  {
    "text": "like assert uh for example um assert if not Neil but you know put out this error",
    "start": "3272960",
    "end": "3280559"
  },
  {
    "text": "message or uh you know just log fatal or like should I log log fatal or should I",
    "start": "3280559",
    "end": "3286440"
  },
  {
    "text": "like just log print F right like there's like all these like different things that you may end up adding to the",
    "start": "3286440",
    "end": "3291839"
  },
  {
    "text": "standard Library package I think it's just like such a it would require such a large API surface if you ask my opinion",
    "start": "3291839",
    "end": "3298200"
  },
  {
    "text": "to add that type of utilities I think within your own project you can be more opiniated and say hey if there's an",
    "start": "3298200",
    "end": "3304559"
  },
  {
    "text": "error just like uh lock fatal uh in this like you know error format and like this",
    "start": "3304559",
    "end": "3310680"
  },
  {
    "text": "is the you know error message but I think like in order to add any type of these utilities to the standard uh",
    "start": "3310680",
    "end": "3317240"
  },
  {
    "text": "packages you need to cover a bunch of you know different cases and I think",
    "start": "3317240",
    "end": "3322799"
  },
  {
    "text": "it's it's like it's I think it's not worth it to put it in the standard Library I also don't like the idea of",
    "start": "3322799",
    "end": "3328680"
  },
  {
    "text": "having like too many ways to do the same thing with the standard Library yeah yeah cuz like that's one of the things",
    "start": "3328680",
    "end": "3334559"
  },
  {
    "text": "that drove me insane about working on Rails projects is like everybody had their own definition of like how you",
    "start": "3334559",
    "end": "3339640"
  },
  {
    "text": "were supposed to iterate over a you know an array and do something with it and I'm just like I don't need to learn 17",
    "start": "3339640",
    "end": "3345520"
  },
  {
    "text": "ways to do this I think if something is not in go as a a language feature or is not in the",
    "start": "3345520",
    "end": "3352440"
  },
  {
    "text": "standard Library it's because like there are so many different ways to do it so like they just cannot like put a open",
    "start": "3352440",
    "end": "3360039"
  },
  {
    "text": "API or a future or they don't want to like you know they want to keep being an orthogonal language and they would just",
    "start": "3360039",
    "end": "3367760"
  },
  {
    "text": "like stay away from adding more noise I don't I think it's also pretty easy to make the decision of if you want to",
    "start": "3367760",
    "end": "3374119"
  },
  {
    "text": "import something like if you're writing a really small package that you know like you said if you're just writing in",
    "start": "3374119",
    "end": "3379200"
  },
  {
    "text": "encoder decoder or something then yeah it doesn't make sense to import other stuff but if your package already Imports other things adding one for",
    "start": "3379200",
    "end": "3386680"
  },
  {
    "text": "testify is really not that big of a deal sure what other things do we like when we are testing in go specifically um one",
    "start": "3386680",
    "end": "3394799"
  },
  {
    "text": "of them that's always stands out to me is uh I love the way that we can just do table tests in go where you just have a",
    "start": "3394799",
    "end": "3402319"
  },
  {
    "text": "slice of anonymous struct that contain any fields that you like it depends on the case which is perfect because it's",
    "start": "3402319",
    "end": "3409319"
  },
  {
    "text": "another opportunity to tell a bit more of a story and then you just immediately instantiate",
    "start": "3409319",
    "end": "3415400"
  },
  {
    "text": "with some test data and then you just Loop over that and run some Target method or some Target function or you do",
    "start": "3415400",
    "end": "3421400"
  },
  {
    "text": "some something with those inputs and then the table tests also contain the",
    "start": "3421400",
    "end": "3426480"
  },
  {
    "text": "outputs so that as a little pattern I think is a great one are there any other I never leave home without",
    "start": "3426480",
    "end": "3433599"
  },
  {
    "text": "it really I mean even for like single case you know tables basically um I'll",
    "start": "3433599",
    "end": "3438880"
  },
  {
    "text": "because the thing what I found over and over and over again even when I I start to think that well maybe there's really",
    "start": "3438880",
    "end": "3445319"
  },
  {
    "text": "just one case here that I'm I'm trying to test with this eventually right I'll either find an edge case or find some",
    "start": "3445319",
    "end": "3451039"
  },
  {
    "text": "other input you know whether from the business or from from looking at you know in the course of actually coming up",
    "start": "3451039",
    "end": "3456240"
  },
  {
    "text": "with a solution I'll find out oh yeah there is more than one Cas so I end up creating a table driven test anyway so",
    "start": "3456240",
    "end": "3462720"
  },
  {
    "text": "right now I just right off the bat I just start out with it and it's put the case I know of right now and then over time it's easy to Simply you know add a",
    "start": "3462720",
    "end": "3469400"
  },
  {
    "text": "new one just you know copy and paste until the next line or comment out you know one line at a time to test you you",
    "start": "3469400",
    "end": "3474839"
  },
  {
    "text": "know in isolation I mean I really don't have any test without it I really like that it actually encourages people to",
    "start": "3474839",
    "end": "3481280"
  },
  {
    "text": "add more cases so that's what I realized that if I actually start with a table driven test people will add more you",
    "start": "3481280",
    "end": "3487319"
  },
  {
    "text": "know cases over time uh because you know it's like less boiler for them to like you know create a new test function and",
    "start": "3487319",
    "end": "3494079"
  },
  {
    "text": "so on so it really also encourages you know people to add more tests yeah it's also great for people that are new to",
    "start": "3494079",
    "end": "3501880"
  },
  {
    "text": "programming and go if you're looking for an open source project and you want contribute you can go and have a look at",
    "start": "3501880",
    "end": "3507760"
  },
  {
    "text": "um look in the test code because there might be you know you might know something about that world that the",
    "start": "3507760",
    "end": "3513240"
  },
  {
    "text": "original package writers didn't know yeah yeah I agree it makes it easy yeah one more thing I like about table driven",
    "start": "3513240",
    "end": "3519599"
  },
  {
    "text": "test Ino uh some of the editors actually can generate you know the test in a TBL driven way so you just um automatically",
    "start": "3519599",
    "end": "3527039"
  },
  {
    "text": "get the boiler plate and you don't really have to like you don't have to even pick like I mean you can just autog",
    "start": "3527039",
    "end": "3532160"
  },
  {
    "text": "generate the table driven style test and and um even if you have like one case you can keep it as that way and then",
    "start": "3532160",
    "end": "3538520"
  },
  {
    "text": "like more people will come in and fill them have you ever found certain situations where it feels easier to not",
    "start": "3538520",
    "end": "3544240"
  },
  {
    "text": "not not necessarily to not get to a table driven test but to instead start with something more straightforward and",
    "start": "3544240",
    "end": "3549480"
  },
  {
    "text": "then come back and see how can I make this a table driven test no I think I have one problem with T I have one",
    "start": "3549480",
    "end": "3555640"
  },
  {
    "text": "problem with table driven test it's so hard to say like just only run it for this particular input right like it",
    "start": "3555640",
    "end": "3561599"
  },
  {
    "text": "needs to be run for every uh everything the entire table so yeah comment your",
    "start": "3561599",
    "end": "3566880"
  },
  {
    "text": "only options are either comment it out yeah yeah right or you could you could overwrite the struct underneath it I",
    "start": "3566880",
    "end": "3572920"
  },
  {
    "text": "guess yeah but these are usual table these are usual unit tests so they usually actually are really like Fast",
    "start": "3572920",
    "end": "3579079"
  },
  {
    "text": "right but sometimes I just want to run it for like one particular thing because the output is so variable or something",
    "start": "3579079",
    "end": "3584960"
  },
  {
    "text": "because I'm printing out some other additional things and like it's so hard to read the logs or something and that's",
    "start": "3584960",
    "end": "3590680"
  },
  {
    "text": "the only case I have you know yeah I know that there was I've seen a couple different things and I've even talked",
    "start": "3590680",
    "end": "3596480"
  },
  {
    "text": "about it myself in the past of like one approach I've seen people take to avoiding that is to instead of using a",
    "start": "3596480",
    "end": "3601520"
  },
  {
    "text": "slice is to use a map and that way they can actually name each test case and one of the things I don't like it all the time but one of the things I do like",
    "start": "3601520",
    "end": "3607640"
  },
  {
    "text": "about it is that it makes you think about what's the purpose of this particular test case versus let me just throw a thousand random ones in there",
    "start": "3607640",
    "end": "3614440"
  },
  {
    "text": "yeah that's what I do uh in order to actually make the logs better so you can actually like you know log the name of",
    "start": "3614440",
    "end": "3620119"
  },
  {
    "text": "the test which is usually self-descriptive and it kind of helps you when you're you know reading the",
    "start": "3620119",
    "end": "3625880"
  },
  {
    "text": "logs you can do that when in your table driven test I mean you're one of the properties of your struct you know I",
    "start": "3625880",
    "end": "3631000"
  },
  {
    "text": "usually call that scenario the first thing is I call a scenario um meaning that this is the scenario that I'm that I'm trying to test and when I call my T",
    "start": "3631000",
    "end": "3637640"
  },
  {
    "text": "do run right when I'm doing sub tests the first parameter is the name of the scenario so the output end up telling me",
    "start": "3637640",
    "end": "3643319"
  },
  {
    "text": "exactly this is the test you were on and this is what failed it's pretty straightforward yeah okay so you do it",
    "start": "3643319",
    "end": "3649160"
  },
  {
    "text": "basically it's the same idea except instead of a map where like the key is the name of the test you just have the first field",
    "start": "3649160",
    "end": "3656520"
  },
  {
    "text": "I think I've generally just not preferred that because then when you're iterating like you're writing your four loop with a range it's clear like which",
    "start": "3657200",
    "end": "3662640"
  },
  {
    "text": "is the test case and which is like the test case data and which is the name of the test if that makes sense it's like a very minor yeah Chris",
    "start": "3662640",
    "end": "3670319"
  },
  {
    "text": "James just said that as well on on slack he said uh if you use t. run of course",
    "start": "3670319",
    "end": "3675839"
  },
  {
    "text": "that subtest you can then be specific using the Run flag you make the same point by the way table driven tests were",
    "start": "3675839",
    "end": "3682640"
  },
  {
    "text": "really hard before the sub tests right before T do run it was really hard they",
    "start": "3682640",
    "end": "3688400"
  },
  {
    "text": "were yeah yes yeah now as no excuse I can't think of it but you guys were",
    "start": "3688400",
    "end": "3693839"
  },
  {
    "text": "talking about how you always start with tables and I remember there were a couple things that I wrote at one point that like coming up with the test",
    "start": "3693839",
    "end": "3699680"
  },
  {
    "text": "without like basically it was hard to come up with the TBL driven version at first but I just can't think of the exact cases I think it was something to",
    "start": "3699680",
    "end": "3705920"
  },
  {
    "text": "do with errors where like sometimes I didn't want to I wanted to ignore errors and other times I wanted to do something",
    "start": "3705920",
    "end": "3710960"
  },
  {
    "text": "else but I don't remember what it was oh yeah I totally can see that and I I think if my assertion is not going to be",
    "start": "3710960",
    "end": "3717000"
  },
  {
    "text": "the same for every input I try to separate the tests I think what it was was I had tests where like I was",
    "start": "3717000",
    "end": "3722559"
  },
  {
    "text": "actually testing against a real API and I wanted to verify certain error me like the errors had like more to them that I",
    "start": "3722559",
    "end": "3728680"
  },
  {
    "text": "wanted to assert so I had to like do a little bit more with it yeah I mean what I ended up doing was having like check",
    "start": "3728680",
    "end": "3733839"
  },
  {
    "text": "functions but like when I first wrote the test with tables I didn't really want to think about check functions I",
    "start": "3733839",
    "end": "3738880"
  },
  {
    "text": "just wanted to think about let me write a test and then I'll come back yeah does anybody else remember oh sorry Johnny",
    "start": "3738880",
    "end": "3744039"
  },
  {
    "text": "I'm going to change the subject so if this is on subject go for it yeah yeah yeah please go ahead please go ahead oh I was just going to say does anyone",
    "start": "3744039",
    "end": "3750079"
  },
  {
    "text": "remember before error was an interface in go it used to be like a pointer it was like a type os.",
    "start": "3750079",
    "end": "3757440"
  },
  {
    "text": "error it just occurred to me then because I remember fighting with errors at one point and I got it was OS error",
    "start": "3757440",
    "end": "3765079"
  },
  {
    "text": "and of course then of course it changed I think obviously before V1 H oh good I haven't gone crazy another thing I like",
    "start": "3765079",
    "end": "3771960"
  },
  {
    "text": "to do no sorry just one more thing something I quite like to do is if I have a setup function that's going to do",
    "start": "3771960",
    "end": "3778680"
  },
  {
    "text": "some work I like to return a tear down function from that setup call so usually",
    "start": "3778680",
    "end": "3785039"
  },
  {
    "text": "I'll call setup pass in the T and to all the helpers I pass in the T so that if something goes wrong they can fail it I",
    "start": "3785039",
    "end": "3791400"
  },
  {
    "text": "don't need to return any errors but yeah then the setup might return something but it it might also return like",
    "start": "3791400",
    "end": "3797920"
  },
  {
    "text": "context. with cancel you get like a cleanup function which you can just immediately defer to do the T down yeah",
    "start": "3797920",
    "end": "3804640"
  },
  {
    "text": "that's what I like I like to defer the cleanup I will say the only the only thing I dislike about that is when",
    "start": "3804640",
    "end": "3810640"
  },
  {
    "text": "people just put the double parenthesis and it's like if they do it it's fine it's just I feel like it's really easy",
    "start": "3810640",
    "end": "3815839"
  },
  {
    "text": "to miss those true like evolation versus yeah yeah I don't want to like if you",
    "start": "3815839",
    "end": "3821520"
  },
  {
    "text": "defer set up and then another set of parentheses afterwards people are like what are they setting up after this yeah I I don't like that yeah that's where",
    "start": "3821520",
    "end": "3828000"
  },
  {
    "text": "we've just got obsessed with fewer lines of code and we've condensed over condensed it no seriously that that",
    "start": "3828000",
    "end": "3834480"
  },
  {
    "text": "absolutely agree that it hurts readability so much it just looks weird and Magic which usually I like do you re",
    "start": "3834480",
    "end": "3841880"
  },
  {
    "text": "for that like uh or do you use that in conjunction to the setup and tear down facilities you get with test main or",
    "start": "3841880",
    "end": "3848279"
  },
  {
    "text": "like do you pick one over the other or like how do you how do you do that just for a particular set of tests whether if",
    "start": "3848279",
    "end": "3853880"
  },
  {
    "text": "it's a table test and I want to do common setup and tear down um I'll I'll use it for something like that yeah uh",
    "start": "3853880",
    "end": "3860839"
  },
  {
    "text": "okay I see so when when you have specific sets of tests you're trying to do but not for everything yeah it won't",
    "start": "3860839",
    "end": "3866160"
  },
  {
    "text": "always be appropriate but for example if I'm testing a web server and basically I always am then I'll create that server",
    "start": "3866160",
    "end": "3873799"
  },
  {
    "text": "in a test Helper and return it and then the the tear down function is just the close of that server so that it cleans",
    "start": "3873799",
    "end": "3879920"
  },
  {
    "text": "up nicely after each run see nice I wish that there was a way to like globally",
    "start": "3879920",
    "end": "3885279"
  },
  {
    "text": "for a package to set up a setup function and a tear down function sometimes feel",
    "start": "3885279",
    "end": "3891000"
  },
  {
    "text": "really varos and I sometimes like you know forget the coldest set up and or forget to call the tear down MH and the",
    "start": "3891000",
    "end": "3898200"
  },
  {
    "text": "test is misbehaving or it's always been misbehaving and nobody realized that it was not like cleaning up some of the",
    "start": "3898200",
    "end": "3904319"
  },
  {
    "text": "resources whatever I wish that you know it was easier uh in the testing package to like just set up something that is",
    "start": "3904319",
    "end": "3910119"
  },
  {
    "text": "global just always run this right uh in the beginning and always run this in",
    "start": "3910119",
    "end": "3915200"
  },
  {
    "text": "order to clean up I kind of have mixed feelings cuz I feel like that would get abused with global State too much yeah",
    "start": "3915200",
    "end": "3921400"
  },
  {
    "text": "true Global State's the devil yeah anything that might be abused is going to be abused so I agree yes anything",
    "start": "3921400",
    "end": "3928960"
  },
  {
    "text": "that can be abused will be abused well I think we've come to the end of our conversation for today um thank you so",
    "start": "3928960",
    "end": "3936520"
  },
  {
    "text": "much to my panel uh Johnny Boro yab bouan and John Calhoun John that's how",
    "start": "3936520",
    "end": "3942559"
  },
  {
    "text": "you say your name isn't it John that's close enough yeah thanks to the lag in the on the",
    "start": "3942559",
    "end": "3950400"
  },
  {
    "text": "internet I was able to get you there John so yeah we talked a lot I think one",
    "start": "3950400",
    "end": "3956000"
  },
  {
    "text": "of the key takeaways for me is that doing it right it's all about the context in which you're doing it it's",
    "start": "3956000",
    "end": "3961400"
  },
  {
    "text": "about what is it you want to get from writing test code what do you want to",
    "start": "3961400",
    "end": "3966680"
  },
  {
    "text": "get out of it if you're writing something simple and small and throwa away maybe you can skip tests alt",
    "start": "3966680",
    "end": "3973119"
  },
  {
    "text": "together if you're writing some big complicated system the testing needs are",
    "start": "3973119",
    "end": "3978720"
  },
  {
    "text": "going to be very different to smaller apps or little projects of your own or",
    "start": "3978720",
    "end": "3984039"
  },
  {
    "text": "websites or even mediumsized projects so there are no silver bullets probably when it comes to testing just some good",
    "start": "3984039",
    "end": "3990880"
  },
  {
    "text": "philosophies probably and I think if you care about your test code and look after",
    "start": "3990880",
    "end": "3996680"
  },
  {
    "text": "it don't just keep adding to it adium look after it keep it well groomed take",
    "start": "3996680",
    "end": "4002480"
  },
  {
    "text": "good care of it and I think you'll be all right you'll be just all right and",
    "start": "4002480",
    "end": "4007839"
  },
  {
    "text": "yeah that's it I think that's a wrap for today thanks for being here and listening and hope to see you next week",
    "start": "4007839",
    "end": "4016000"
  },
  {
    "text": "all right go time is back it's been so much work behind the scenes but it's definitely paying off now and it's so",
    "start": "4017720",
    "end": "4023440"
  },
  {
    "text": "much fun producing this show we have so many people listening live thank you so much for that we love you and if you're",
    "start": "4023440",
    "end": "4029279"
  },
  {
    "text": "not yet hang with us in go for slack we have a channel called go time FM look it up you'll find us chat with the",
    "start": "4029279",
    "end": "4034520"
  },
  {
    "text": "community share stories share coffee recipes whatever it's a lot of fun also we have discussions on every single",
    "start": "4034520",
    "end": "4041039"
  },
  {
    "text": "episode at changel law.com so had the change /go time find this episode and",
    "start": "4041039",
    "end": "4046680"
  },
  {
    "text": "discuss it with the community and of course thank you to our sponsors digital ocean strong DM and rollbar huge thanks",
    "start": "4046680",
    "end": "4053640"
  },
  {
    "text": "to fastly for being our bandwidth partner hit to fast.com to learn more and we move fast and fix things right",
    "start": "4053640",
    "end": "4059079"
  },
  {
    "text": "here change LW because of RAR check them out at rar.com changelog and we're hosted on Lino Cloud servers at a",
    "start": "4059079",
    "end": "4065200"
  },
  {
    "text": "lin.com changelog our music is by the one and only break master cylinder and",
    "start": "4065200",
    "end": "4070440"
  },
  {
    "text": "if you want to hear more episodes like this subscribe to our Master feed at changel law.com or go to your podcast",
    "start": "4070440",
    "end": "4077039"
  },
  {
    "text": "app and search for Chang law Master you'll find it subscribe get all of our shows in one single feed as well as some",
    "start": "4077039",
    "end": "4083520"
  },
  {
    "text": "extras that only hit the master feed thanks for listening we'll see you [Music]",
    "start": "4083520",
    "end": "4100459"
  },
  {
    "text": "soon [Music]",
    "start": "4102839",
    "end": "4122359"
  },
  {
    "text": "because you've listened all the way to the end of the show got a little preview here for you of our upcoming podcast",
    "start": "4123239",
    "end": "4128960"
  },
  {
    "text": "called brain science this podcast is for the Curious it explores the inner workings of the human brain to",
    "start": "4128960",
    "end": "4135000"
  },
  {
    "text": "understand Behavior change habit formation mental health and The Human Condition this show is hosted by myself",
    "start": "4135000",
    "end": "4140758"
  },
  {
    "text": "Adam stovak and my good friend Mariel ree a doctor in Clinical Psychology it's",
    "start": "4140759",
    "end": "4146120"
  },
  {
    "text": "brain science applied not just how does the brain work but how do we apply what we know about the brain to better our lives here we go that applied brain",
    "start": "4146120",
    "end": "4154560"
  },
  {
    "text": "science really stood out to me because I want I don't want it to just be data I want you to go how can this fit what can",
    "start": "4154560",
    "end": "4160560"
  },
  {
    "text": "I take away now how am I going to change and that that sort of is where you come in more and even some of the questions",
    "start": "4160560",
    "end": "4166679"
  },
  {
    "text": "like so like I want to ask you what are some of the most challenging things working in the tech world when it comes",
    "start": "4166679",
    "end": "4172960"
  },
  {
    "text": "to relationships probably the most important one is isolation more and more the world and companies are being for",
    "start": "4172960",
    "end": "4180000"
  },
  {
    "text": "good reasons they're being okay with what they call distributed teams yeah and that means that you and I we work",
    "start": "4180000",
    "end": "4186199"
  },
  {
    "text": "for the same company but you work from your home office that work from my home office I might go into the office a",
    "start": "4186199",
    "end": "4191238"
  },
  {
    "text": "couple times a week if I live local but even if I live in San Francisco I'm still probably a remote worker even",
    "start": "4191239",
    "end": "4197280"
  },
  {
    "text": "though I can hop in an Uber or hop on you know the train or whatever and go into the office and be there in a half",
    "start": "4197280",
    "end": "4203679"
  },
  {
    "text": "hour but why waste the time you know and this is where I would revisit what I",
    "start": "4203679",
    "end": "4208800"
  },
  {
    "text": "what I want to talk about with resonance and that whenever we're we're learning no matter what thing it's really helpful",
    "start": "4208800",
    "end": "4215600"
  },
  {
    "text": "when we get feedback that's both immediate and specific and so when you're by yourself",
    "start": "4215600",
    "end": "4221600"
  },
  {
    "text": "and you don't have any in interaction with other people how can you get any feedback I mean you're losing most of",
    "start": "4221600",
    "end": "4229280"
  },
  {
    "text": "the non-verbal communication and you also don't have um all of the voice",
    "start": "4229280",
    "end": "4235239"
  },
  {
    "text": "inflections or facial expression have you ever tried to you know be sad feel",
    "start": "4235239",
    "end": "4240440"
  },
  {
    "text": "sad and smile at the same time try it uh it's it's pretty hard right because",
    "start": "4240440",
    "end": "4247360"
  },
  {
    "text": "facial expression is exactly what's involved when it comes to empathy which",
    "start": "4247360",
    "end": "4252760"
  },
  {
    "text": "is relation relationships I I was reading a research article recently and",
    "start": "4252760",
    "end": "4258320"
  },
  {
    "text": "it talked about you know how um couples who are together a really long time end",
    "start": "4258320",
    "end": "4263520"
  },
  {
    "text": "up sort of looking like each other you ever heard that yeah and so um what",
    "start": "4263520",
    "end": "4270320"
  },
  {
    "text": "they've looked at is when we actually empathize with other people facial expression is really key within that and",
    "start": "4270320",
    "end": "4277080"
  },
  {
    "text": "so when you empathize with the partner you're with over and over and over again your face begins to make the same",
    "start": "4277080",
    "end": "4284080"
  },
  {
    "text": "creases and facial expression as it relates to where somebody else is emotionally wow right say so that's",
    "start": "4284080",
    "end": "4291920"
  },
  {
    "text": "that's creepy well they' again this is sort of the hot bed when it comes to um",
    "start": "4291920",
    "end": "4298800"
  },
  {
    "text": "Neuroscience these days is mirror neurons and these mirror neurons are what are involved with empathy and so",
    "start": "4298800",
    "end": "4306480"
  },
  {
    "text": "mirroring meaning I I get another person's emotional world and so one of",
    "start": "4306480",
    "end": "4312440"
  },
  {
    "text": "the research um studies looked at Botox and what they found is that Botox",
    "start": "4312440",
    "end": "4318800"
  },
  {
    "text": "because it it actually um assists in paralyzing facial muscles right that",
    "start": "4318800",
    "end": "4324560"
  },
  {
    "text": "then then you can't contort your face so you don't get wrinkles but actually levels of empathy go down",
    "start": "4324560",
    "end": "4332000"
  },
  {
    "text": "uh-uh right because your physical appearance can't reflect your inner appearance you're yeah you got it and so",
    "start": "4332000",
    "end": "4338840"
  },
  {
    "text": "when you're working in these remote locations it it might facilitate better work or more focus and it allows people",
    "start": "4338840",
    "end": "4346440"
  },
  {
    "text": "to be distributed and to capitalize on the talents across the country right",
    "start": "4346440",
    "end": "4351679"
  },
  {
    "text": "yeah wow so that see that's like a treasure Trove in my opinion talking about in a scientific way you know not",
    "start": "4351679",
    "end": "4359239"
  },
  {
    "text": "just like hey this is my opinion about all the cons of that because I think",
    "start": "4359239",
    "end": "4364360"
  },
  {
    "text": "what we can do is still have remote work but do it in more healthy ways because I'm I'm fully I mean I've been",
    "start": "4364360",
    "end": "4370320"
  },
  {
    "text": "self-employed remote worker since 2006 now I'm a unique animal and I know that",
    "start": "4370320",
    "end": "4376280"
  },
  {
    "text": "my wife knows that right I'm fine with it I'm a good human being but I've got some flaws and I'm willing to accept and",
    "start": "4376280",
    "end": "4382920"
  },
  {
    "text": "share those to some degree and I think the problem is we just we just lack more",
    "start": "4382920",
    "end": "4388920"
  },
  {
    "text": "maybe a more purposeful or intentional feedback loop yeah which I think is",
    "start": "4388920",
    "end": "4393960"
  },
  {
    "text": "super important to being able to operate in this world in just good ways I don't",
    "start": "4393960",
    "end": "4399360"
  },
  {
    "text": "know healthy ways is probably the the best way to use in this show context is healthy ways one of the things that's",
    "start": "4399360",
    "end": "4405440"
  },
  {
    "text": "fundamental I would say to being human is change right and so sometimes people",
    "start": "4405440",
    "end": "4411400"
  },
  {
    "text": "come in and are really key in our life for a period of time and then things change either we grow or they grow or",
    "start": "4411400",
    "end": "4418960"
  },
  {
    "text": "they change in a different direction and then the relationship changes or that feedback loop gets modified in some way",
    "start": "4418960",
    "end": "4426880"
  },
  {
    "text": "that isn't always a bad thing it's just going my sense of choice actually is a",
    "start": "4426880",
    "end": "4432920"
  },
  {
    "text": "critical component when it comes to feeling good about my life if I feel like everything is sort of outside of me",
    "start": "4432920",
    "end": "4439320"
  },
  {
    "text": "and I don't have any charge over it like I didn't choose to work in a more remote location or I",
    "start": "4439320",
    "end": "4445600"
  },
  {
    "text": "didn't choose to go to school or I didn't choose this person then it feels",
    "start": "4445600",
    "end": "4450760"
  },
  {
    "text": "far more oppressive as opposed to I actually participated in the outcome that I'm actually experiencing so I then",
    "start": "4450760",
    "end": "4458440"
  },
  {
    "text": "also have more charge over whether or not I want to change it I think this uh",
    "start": "4458440",
    "end": "4464280"
  },
  {
    "text": "feedback loop process that we're talking about here is is super common to to",
    "start": "4464280",
    "end": "4469800"
  },
  {
    "text": "developers you know from people who write code to people who plan and to engineer and to uh manage and Lead like",
    "start": "4469800",
    "end": "4478840"
  },
  {
    "text": "there's no one in the software process that doesn't understand the the feedback loop and the reason the reason why is",
    "start": "4478840",
    "end": "4484840"
  },
  {
    "text": "because in product development they have this concept of agile and basically it means you produce something you put it",
    "start": "4484840",
    "end": "4491560"
  },
  {
    "text": "out there and you expect the feedback Loop to happen in order to gain insights",
    "start": "4491560",
    "end": "4496960"
  },
  {
    "text": "and course correction to then release another version of it that that continually in iteratively becomes more",
    "start": "4496960",
    "end": "4502719"
  },
  {
    "text": "and more improved so this whole process in day-to-day work in software is normal",
    "start": "4502719",
    "end": "4509239"
  },
  {
    "text": "and I think it's interesting how it going to apply to their lives and people's lives you know to take the same importance of a feedback loop for",
    "start": "4509239",
    "end": "4515480"
  },
  {
    "text": "example and apply it right well so this is very much how it goes in relationship",
    "start": "4515480",
    "end": "4521480"
  },
  {
    "text": "which is why there is importance when it comes to sort of things resonating you ever walk into a room or an interaction",
    "start": "4521480",
    "end": "4528400"
  },
  {
    "text": "with a couple other people and like something just feels wonky or off you're like I can't put my finger on it but",
    "start": "4528400",
    "end": "4535960"
  },
  {
    "text": "definitely been there right well and so to be able to identify that in",
    "start": "4535960",
    "end": "4541520"
  },
  {
    "text": "relationships and even go wow I need to I'm experiencing this person in my world",
    "start": "4541520",
    "end": "4548320"
  },
  {
    "text": "with the limited interactions that I have with them it hasn't really resonated with me or and so I don't get",
    "start": "4548320",
    "end": "4554440"
  },
  {
    "text": "good feedback so now I'm going to be more defensive because I feel as though",
    "start": "4554440",
    "end": "4560040"
  },
  {
    "text": "there's a threat it doesn't necessarily mean the person is threatening however my brain is going to tell me hey we need",
    "start": "4560040",
    "end": "4565760"
  },
  {
    "text": "to be more protective we need to do some strategies so that you're not fully",
    "start": "4565760",
    "end": "4571040"
  },
  {
    "text": "exposed you know one way I look at scenaries like this uh I would say as of late is because have you ever watched a",
    "start": "4571040",
    "end": "4578440"
  },
  {
    "text": "TV show or a movie where the you know the narration the storytelling part of it they expose a character in a certain",
    "start": "4578440",
    "end": "4586960"
  },
  {
    "text": "light and you may dislike that they may be a villain or villainess right sure",
    "start": "4586960",
    "end": "4592960"
  },
  {
    "text": "but the moment they turn the story to their backstory and why they are the way",
    "start": "4592960",
    "end": "4598880"
  },
  {
    "text": "they are or why they're acting the way they're acting yes you then kind of fall in love with them and you're almost rooting for them right I feel like",
    "start": "4598880",
    "end": "4605600"
  },
  {
    "text": "that's the same thing that happens dayto day to our lives is that you know there are people who seem villainous or not",
    "start": "4605600",
    "end": "4613199"
  },
  {
    "text": "for us but we don't understand their backstory and why they are the way they are for us to have an employe that",
    "start": "4613199",
    "end": "4619320"
  },
  {
    "text": "empathy that's required to have this this dance as you say this iteration of relationship you know we right we just",
    "start": "4619320",
    "end": "4625960"
  },
  {
    "text": "assume they are who they are and we project you know our worse fears onto them and they become true yes you got it",
    "start": "4625960",
    "end": "4634000"
  },
  {
    "text": "this is why in the absence of you know a face I I don't really get to engage with",
    "start": "4634000",
    "end": "4640440"
  },
  {
    "text": "people in the same sort of humanness that we are all in and so you're exactly",
    "start": "4640440",
    "end": "4647800"
  },
  {
    "text": "right I I mean over and over and over again because you can identify and go oh",
    "start": "4647800",
    "end": "4653080"
  },
  {
    "text": "that's why they're harsh or you know I recently had an interaction I had shared",
    "start": "4653080",
    "end": "4658560"
  },
  {
    "text": "with someone that I I was a competitive gymnastics coach for a number of years and so somebody thought that my response",
    "start": "4658560",
    "end": "4666040"
  },
  {
    "text": "to them when they were really struggling was kind of harsh but they remembered",
    "start": "4666040",
    "end": "4671440"
  },
  {
    "text": "that I had told them I was a coach for so long and they're like oh this is just another side of her coming out and I'm",
    "start": "4671440",
    "end": "4678719"
  },
  {
    "text": "not sure I prefer it but I get it and then it switched for their reaction",
    "start": "4678719",
    "end": "4684719"
  },
  {
    "text": "because then they're like oh wait we're on the same team she's not trying to like oppress me or fight back against me",
    "start": "4684719",
    "end": "4691280"
  },
  {
    "text": "she actually is helping me trying to get me to where I want to go my wife and I we've learned this this concept of",
    "start": "4691280",
    "end": "4697719"
  },
  {
    "text": "Goodwill right yeah I can take your feedback or your criticisms In a",
    "start": "4697719",
    "end": "4703679"
  },
  {
    "text": "Different Light if if I know that you have good will for me yep meaning that",
    "start": "4703679",
    "end": "4708800"
  },
  {
    "text": "you're not trying to harm me that you are for me not against me and sometimes change as we all know is painful and can",
    "start": "4708800",
    "end": "4715719"
  },
  {
    "text": "be painful so sometimes the necessary feedback in or criticism that can",
    "start": "4715719",
    "end": "4720800"
  },
  {
    "text": "influence that change can also be painful but I can accept it differently if I know right that she or they or",
    "start": "4720800",
    "end": "4727440"
  },
  {
    "text": "whomever is in the scenario with me has Goodwill for me you know whereas if you know that they're not for you then you",
    "start": "4727440",
    "end": "4734239"
  },
  {
    "text": "obviously take it a whole different way and that's that's an okay thing but we",
    "start": "4734239",
    "end": "4739280"
  },
  {
    "text": "often are you know in relationship of people that are giving us crucial feedback and we need to have that kind",
    "start": "4739280",
    "end": "4744760"
  },
  {
    "text": "of that lens like it was significant in our marriage to understand hey I know there are times when you give me",
    "start": "4744760",
    "end": "4750719"
  },
  {
    "text": "feedback I am not happy about it but but I know you have good willll for me so therefore I calm down I",
    "start": "4750719",
    "end": "4758760"
  },
  {
    "text": "listen I you know I take that in and I process it whatever but I take it in a",
    "start": "4758760",
    "end": "4764159"
  },
  {
    "text": "different way because I know that she's for me and not against me yep one of the",
    "start": "4764159",
    "end": "4769639"
  },
  {
    "text": "key things when it comes to change is a sense of openness and even relationally",
    "start": "4769639",
    "end": "4776040"
  },
  {
    "text": "like of going I need to be able to see some how somebody else responds or how",
    "start": "4776040",
    "end": "4781880"
  },
  {
    "text": "they're feeling as based on their perspective of what they're going through and not just my perspective of",
    "start": "4781880",
    "end": "4789040"
  },
  {
    "text": "their perspective and so this Goodwill is like I believe that we're on the same",
    "start": "4789040",
    "end": "4795000"
  },
  {
    "text": "side and that you're not trying to make it harder for me but so I can understand if I were sitting where you were sitting",
    "start": "4795000",
    "end": "4800719"
  },
  {
    "text": "had the background that you had why you would have taken it in that way and then I can provide an opportunity to clarify",
    "start": "4800719",
    "end": "4808560"
  },
  {
    "text": "or create more connection even when it doesn't feel good and I I honestly think",
    "start": "4808560",
    "end": "4814560"
  },
  {
    "text": "this is so much of what's missing in people's relationships if I look at",
    "start": "4814560",
    "end": "4820360"
  },
  {
    "text": "relational interactions through a the notion of conditioning wherein I get a",
    "start": "4820360",
    "end": "4825600"
  },
  {
    "text": "sort of hit of dopamine feel-good feelings because I went to a person I",
    "start": "4825600",
    "end": "4830840"
  },
  {
    "text": "had a conversation that didn't necessarily feel good but there was openness on both parties to hear one",
    "start": "4830840",
    "end": "4838199"
  },
  {
    "text": "another's perspective that it actually then reinforces like oh when I go and I",
    "start": "4838199",
    "end": "4844560"
  },
  {
    "text": "have this exchange with people I feel better so now I'm going to go and engage",
    "start": "4844560",
    "end": "4850159"
  },
  {
    "text": "with other people and get the feedback even if I might not like the feedback because now I'm buffered and I'm not",
    "start": "4850159",
    "end": "4857080"
  },
  {
    "text": "alone in this and I somebody else sees my world that's a preview of brain science",
    "start": "4857080",
    "end": "4864360"
  },
  {
    "text": "if you love where we're going with this send us an email to get on the list to be notified the very moment this show",
    "start": "4864360",
    "end": "4871120"
  },
  {
    "text": "gets released email us at editors changela law.com in the subject line put",
    "start": "4871120",
    "end": "4876400"
  },
  {
    "text": "in all caps brain science with a couple bangs if you're really excited you can",
    "start": "4876400",
    "end": "4881639"
  },
  {
    "text": "also subscribe to our Master feed to get all of our shows in one single feed head to change.com slm or search in your",
    "start": "4881639",
    "end": "4889920"
  },
  {
    "text": "podcast app for changel master you'll find it subscribe get all of our shows and even those that only hit the master",
    "start": "4889920",
    "end": "4896400"
  },
  {
    "text": "feed again change.com [Music]",
    "start": "4896400",
    "end": "4921010"
  },
  {
    "text": "a",
    "start": "4925719",
    "end": "4928719"
  }
]