[
  {
    "text": "doesn't matter what library you use if",
    "start": "2879",
    "end": "4480"
  },
  {
    "text": "you multiply two",
    "start": "4480",
    "end": "5759"
  },
  {
    "text": "arbitrary precision decimals you should",
    "start": "5759",
    "end": "8800"
  },
  {
    "text": "get the same arbitrary precision decimal",
    "start": "8800",
    "end": "11120"
  },
  {
    "text": "out",
    "start": "11120",
    "end": "12080"
  },
  {
    "text": "sounds right right oh my friend how many",
    "start": "12080",
    "end": "15599"
  },
  {
    "text": "bugs fuzzers have found just by",
    "start": "15599",
    "end": "17680"
  },
  {
    "text": "telling them yep so here's two functions",
    "start": "17680",
    "end": "19920"
  },
  {
    "text": "they need to return the same thing",
    "start": "19920",
    "end": "21279"
  },
  {
    "text": "cool go i get emails because one of them",
    "start": "21279",
    "end": "25199"
  },
  {
    "text": "the ones that are tested is the go one",
    "start": "25199",
    "end": "27519"
  },
  {
    "text": "and i get emails when",
    "start": "27519",
    "end": "28960"
  },
  {
    "text": "there's a mismatch between the go 1 and",
    "start": "28960",
    "end": "31039"
  },
  {
    "text": "some other",
    "start": "31039",
    "end": "32719"
  },
  {
    "text": "implementation and oh boy",
    "start": "32719",
    "end": "36480"
  },
  {
    "text": "yep multi-precision is hard so yeah",
    "start": "36559",
    "end": "38960"
  },
  {
    "text": "that's an excellent example",
    "start": "38960",
    "end": "40640"
  },
  {
    "text": "one thing that i did with differential",
    "start": "40640",
    "end": "42399"
  },
  {
    "text": "testing was at one point",
    "start": "42399",
    "end": "44399"
  },
  {
    "text": "in go was a bug was fixed with a problem",
    "start": "44399",
    "end": "47360"
  },
  {
    "text": "with a header parsing",
    "start": "47360",
    "end": "49920"
  },
  {
    "text": "and i thought this looks easy to find",
    "start": "49920",
    "end": "52719"
  },
  {
    "text": "with a fuzzer so i",
    "start": "52719",
    "end": "54160"
  },
  {
    "text": "just important fast http and the",
    "start": "54160",
    "end": "56960"
  },
  {
    "text": "standard http libraries both and go",
    "start": "56960",
    "end": "58960"
  },
  {
    "text": "run gophers for 25 minutes and i found",
    "start": "58960",
    "end": "61280"
  },
  {
    "text": "the bug",
    "start": "61280",
    "end": "62399"
  },
  {
    "text": "the bag that was just fixed and has been",
    "start": "62399",
    "end": "64400"
  },
  {
    "text": "there for 12 years",
    "start": "64400",
    "end": "66000"
  },
  {
    "text": "so yeah if you want to assert for a",
    "start": "66000",
    "end": "68080"
  },
  {
    "text": "property and the case was",
    "start": "68080",
    "end": "69680"
  },
  {
    "text": "i want to have all the header set to be",
    "start": "69680",
    "end": "71680"
  },
  {
    "text": "identical it's quite easy",
    "start": "71680",
    "end": "73760"
  },
  {
    "text": "to find problems and if i recall",
    "start": "73760",
    "end": "75840"
  },
  {
    "text": "correctly",
    "start": "75840",
    "end": "77040"
  },
  {
    "text": "when at one point the json package was",
    "start": "77040",
    "end": "79119"
  },
  {
    "text": "optimized",
    "start": "79119",
    "end": "80479"
  },
  {
    "text": "heavily optimized and there was a",
    "start": "80479",
    "end": "83119"
  },
  {
    "text": "differential",
    "start": "83119",
    "end": "83840"
  },
  {
    "text": "fuzzer in place that checked that the",
    "start": "83840",
    "end": "85680"
  },
  {
    "text": "old version and the new version",
    "start": "85680",
    "end": "87119"
  },
  {
    "text": "version would pass the json the same way",
    "start": "87119",
    "end": "89360"
  },
  {
    "text": "and it found a bug",
    "start": "89360",
    "end": "90479"
  },
  {
    "text": "before it it hit a statement stable",
    "start": "90479",
    "end": "93360"
  },
  {
    "text": "release which would have been",
    "start": "93360",
    "end": "94960"
  },
  {
    "text": "kind of bad so that was",
    "start": "94960",
    "end": "98000"
  },
  {
    "text": "another kind of success story of fuzzing",
    "start": "98000",
    "end": "101439"
  },
  {
    "text": "not for security reasons",
    "start": "101439",
    "end": "102880"
  },
  {
    "text": "that was just yet another test",
    "start": "102880",
    "end": "111039"
  }
]