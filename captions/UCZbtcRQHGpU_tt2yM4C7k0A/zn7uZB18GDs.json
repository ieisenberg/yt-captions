[
  {
    "text": "bandwidth for change log is provided by fastly learn more at fastly.com I'm Nate",
    "start": "0",
    "end": "6399"
  },
  {
    "text": "Finch and it is go [Music]",
    "start": "6399",
    "end": "15630"
  },
  {
    "text": "[Applause] [Music]",
    "start": "15630",
    "end": "22150"
  },
  {
    "text": "time it's go time a weekly podcast where we discuss interesting topics around the go programming language the community",
    "start": "22519",
    "end": "29279"
  },
  {
    "text": "and everything in between if you currently write go or aspire to this is the show for",
    "start": "29279",
    "end": "35239"
  },
  {
    "text": "you all right we are back for another episode of go time it is episode number",
    "start": "35239",
    "end": "41520"
  },
  {
    "text": "24 uh today's sponsors are stack impact and code school today on the show we",
    "start": "41520",
    "end": "47480"
  },
  {
    "text": "have myself Eric St Martin we are down one Brian ketton he's a few thousand feet above us making his way back home",
    "start": "47480",
    "end": "55199"
  },
  {
    "text": "caria Campos is on the show today hi everybody and our special guest today is is Nate Finch how you doing Nate doing",
    "start": "55199",
    "end": "62440"
  },
  {
    "text": "good so would you like to give everybody a little background about yourself uh sure so um I've been doing development",
    "start": "62440",
    "end": "70080"
  },
  {
    "text": "for uh 16 years now um since graduating from college and um about four and a",
    "start": "70080",
    "end": "77560"
  },
  {
    "text": "half years ago uh right around go 1.01 or so something like that I started",
    "start": "77560",
    "end": "83880"
  },
  {
    "text": "looking at go um mainly as a way to not",
    "start": "83880",
    "end": "88960"
  },
  {
    "text": "be pigeon hold is a Windows developer because at that time I was a Windows developer and I wanted to be more than",
    "start": "88960",
    "end": "96119"
  },
  {
    "text": "that um and I was make go and then I got",
    "start": "96119",
    "end": "101799"
  },
  {
    "text": "into the community and about six months later I saw Gustavo posting on Twitter",
    "start": "101799",
    "end": "108719"
  },
  {
    "text": "that there was an opening for a go developer at canonical working on ju guu",
    "start": "108719",
    "end": "114719"
  },
  {
    "text": "and um I had interacted with um Gustavo for a bit",
    "start": "114719",
    "end": "120439"
  },
  {
    "text": "and so we sort of knew each other and it eventually worked out and I started working on juu and I've been there for",
    "start": "120439",
    "end": "127520"
  },
  {
    "text": "just about three and a half years and I've done a bunch of Go stuff on the side and I am big fan of go so you were",
    "start": "127520",
    "end": "135080"
  },
  {
    "text": "writing production go code before most people knew about go yeah it's fun I I",
    "start": "135080",
    "end": "141040"
  },
  {
    "text": "wanted to confirm that's Gustavo Neer right P sayu correct yes I I skipped his",
    "start": "141040",
    "end": "147200"
  },
  {
    "text": "last thing because I was not sure how to pronounce it I actually only know him because he's",
    "start": "147200",
    "end": "152920"
  },
  {
    "text": "Brazilian and I always think he works for Google but he actually works for zuu how do you say zuu anyway because I say",
    "start": "152920",
    "end": "158120"
  },
  {
    "text": "juu because that's how you say in Portuguese which is so cute how do you say it Juju the yeah similar yeah it's",
    "start": "158120",
    "end": "168200"
  },
  {
    "text": "it's uh Magic it's a it's a word for for magic because that's what we think juu",
    "start": "168200",
    "end": "174000"
  },
  {
    "text": "does magic stuff gummy bears in Brazil are called zuu uhhuh so I always think",
    "start": "174000",
    "end": "180959"
  },
  {
    "text": "of gummy bear when I seeu all right so so Juju is um",
    "start": "180959",
    "end": "189280"
  },
  {
    "text": "basically what an orchestration platform for kind of tying together different Services I haven't used it uh myself but",
    "start": "189280",
    "end": "196959"
  },
  {
    "text": "it did look interesting you guys have the charms which are kind of the way applications are tied together yep so um",
    "start": "196959",
    "end": "204440"
  },
  {
    "text": "yeah it's very similar to other orchestration platforms um such as",
    "start": "204440",
    "end": "210599"
  },
  {
    "text": "kubernetes and um course now I'm blanking on rest of the names um Docker",
    "start": "210599",
    "end": "216280"
  },
  {
    "text": "swarm and yeah misos and we are not so tied to Docker because we were we",
    "start": "216280",
    "end": "223040"
  },
  {
    "text": "existed before Docker existed um so you win right okay here you go we win um but",
    "start": "223040",
    "end": "232159"
  },
  {
    "text": "uh so we do support Docker if you want to use Docker that's fine if you don't want to use Docker that's also fine um",
    "start": "232159",
    "end": "239400"
  },
  {
    "text": "so what it does is it lets you um make a",
    "start": "239400",
    "end": "244560"
  },
  {
    "text": "very lightweight wrapper around either you know your Docker thing or your raw",
    "start": "244560",
    "end": "250079"
  },
  {
    "text": "application and then you can deploy it to the cloud or contain on your desktop",
    "start": "250079",
    "end": "257120"
  },
  {
    "text": "or Hardware um in racks in your server room and makes it very very easy to the",
    "start": "257120",
    "end": "264759"
  },
  {
    "text": "very complicated stuff um and plus I check it was one of the biggest open",
    "start": "264759",
    "end": "271240"
  },
  {
    "text": "source go projects is possible someone's cut up by now but um it's well over",
    "start": "271240",
    "end": "276880"
  },
  {
    "text": "500,000 lines of code wow and that's just stuff that we wrote so it's it's",
    "start": "276880",
    "end": "282039"
  },
  {
    "text": "big and we use mongod DB to store our",
    "start": "282039",
    "end": "287400"
  },
  {
    "text": "data which is okay it it stores our data",
    "start": "287400",
    "end": "292479"
  },
  {
    "text": "usually um most time yeah there's",
    "start": "292479",
    "end": "298120"
  },
  {
    "text": "there's a couple not own issues with the way that works and if you're careful you can avoid them so with kind",
    "start": "298120",
    "end": "305600"
  },
  {
    "text": "of the history of um ju guu and the length of time it's been around because I know um Gustavo and stuff was working",
    "start": "305600",
    "end": "312759"
  },
  {
    "text": "on it back in 2013 2014 so we're talking you know early early go days",
    "start": "312759",
    "end": "319759"
  },
  {
    "text": "pre1 there has to be kind of like some some lesson learns how's things evolved like we were talking about the other day",
    "start": "319759",
    "end": "325720"
  },
  {
    "text": "on the show about kubernetes and kind of like the atmology like if you look through code base you can kind of see",
    "start": "325720",
    "end": "331080"
  },
  {
    "text": "the evolution of people's understanding of the language it started out very java-- is and in the other areas it's",
    "start": "331080",
    "end": "336680"
  },
  {
    "text": "very goish do you have similar things that you've experienced oh yeah definitely so um a lot of the early",
    "start": "336680",
    "end": "345000"
  },
  {
    "text": "developers were um more familiar with python and so there's a lot of pythonism",
    "start": "345000",
    "end": "351160"
  },
  {
    "text": "um which is sort of worse than Java isms because you know Java at least is",
    "start": "351160",
    "end": "356800"
  },
  {
    "text": "strongly typed whereas um with python people expect to be able to just throw in whatever so there's a few spots where",
    "start": "356800",
    "end": "365360"
  },
  {
    "text": "there's like empty interfaces and reflection most of that's been stripped",
    "start": "365360",
    "end": "372000"
  },
  {
    "text": "out as we go along I think one of the bigger Lessons Learned is we use um",
    "start": "372000",
    "end": "379160"
  },
  {
    "text": "gustavo's go Che uh which is a testing RAR Builds on top of go test it",
    "start": "379160",
    "end": "386840"
  },
  {
    "text": "adds um test Suites so that you can have code that runs before a whole Suite of",
    "start": "386840",
    "end": "393919"
  },
  {
    "text": "tests and the code that runs before each individual test very um junit xunit",
    "start": "393919",
    "end": "400080"
  },
  {
    "text": "those things do that too and I think that's actually been kind of a problem",
    "start": "400080",
    "end": "406880"
  },
  {
    "text": "because it means that we have a lot of code that runs that's invisible which",
    "start": "406880",
    "end": "412280"
  },
  {
    "text": "means it's hard to know exactly why a test actually works because there's all this stuff to set up that you don't see",
    "start": "412280",
    "end": "418960"
  },
  {
    "text": "and then the unit tests take on a decent machine",
    "start": "418960",
    "end": "424919"
  },
  {
    "text": "a good 17 or 18 minutes and that's just like running go test for all of juu",
    "start": "424919",
    "end": "432400"
  },
  {
    "text": "that's a long time so this is just your unit tests and not like integration tests and stuff correct our integration",
    "start": "432400",
    "end": "440400"
  },
  {
    "text": "tests are even worse but that's sort of understandable because our integration",
    "start": "440400",
    "end": "446160"
  },
  {
    "text": "tests actually like bring up machines in the cloud and stuff so those take like four hours but that's that's you know",
    "start": "446160",
    "end": "452440"
  },
  {
    "text": "doing a lot of work over the network and machines booting and blah blah but unit",
    "start": "452440",
    "end": "457960"
  },
  {
    "text": "tests it's kind of inexcusable to have unit tests that take 17 or 18 minutes at",
    "start": "457960",
    "end": "463720"
  },
  {
    "text": "least in this day and age um so what is we have a lot of full stack tests that",
    "start": "463720",
    "end": "469159"
  },
  {
    "text": "run against like an actual database which is great for like making",
    "start": "469159",
    "end": "475919"
  },
  {
    "text": "it a real world scenario but it's terrible when when you make one small",
    "start": "475919",
    "end": "481080"
  },
  {
    "text": "change you want to run all the tests hard so yeah the hard part is it's like what should that number be yeah because",
    "start": "481080",
    "end": "488879"
  },
  {
    "text": "it like with a 500,000 line code base it's going to take a long time to to do",
    "start": "488879",
    "end": "494720"
  },
  {
    "text": "a good test Suite yeah but 18 minutes does feel probably on the longer side so",
    "start": "494720",
    "end": "501080"
  },
  {
    "text": "you initially came up I was this last episode or the one before carisia where we talking about uh gorum or how do you",
    "start": "501080",
    "end": "508319"
  },
  {
    "text": "pronounce that anyway go Goram Goram Goram um it's from Firefly it's",
    "start": "508319",
    "end": "514360"
  },
  {
    "text": "actually a swear like those Goram",
    "start": "514360",
    "end": "519479"
  },
  {
    "text": "thieves that's awesome Eric I don't remember which episode it was and I",
    "start": "519479",
    "end": "524880"
  },
  {
    "text": "don't even remember talking about it but I also don't remember a lot of things so I don't know you're always the one who's",
    "start": "524880",
    "end": "530399"
  },
  {
    "text": "she knows exactly which episode like we talk to Wich person and so good at that",
    "start": "530399",
    "end": "536320"
  },
  {
    "text": "stuff it was episode 21 and and I know that I listened to it last night so so",
    "start": "536320",
    "end": "542760"
  },
  {
    "text": "it was a couple more episodes ago than I thought it was but yeah she's so awesome with that I'll mention it's like we",
    "start": "542760",
    "end": "548120"
  },
  {
    "text": "talked to somebody and she's like oh yeah it was episode such and such oh thank you I guess it doesn't work all",
    "start": "548120",
    "end": "554200"
  },
  {
    "text": "the time if you ask me on Monday I'll forget who we talked to last",
    "start": "554200",
    "end": "559760"
  },
  {
    "text": "week so what was the motivation behind creating that it's a really interesting",
    "start": "559760",
    "end": "565000"
  },
  {
    "text": "project yeah um so it it's very there there's one definite spot where I said I",
    "start": "565000",
    "end": "571440"
  },
  {
    "text": "have to make this um and I was working with some Json at work and it gets spit",
    "start": "571440",
    "end": "579120"
  },
  {
    "text": "out to the CLI in a big mess with no bline returns or or anything and um I",
    "start": "579120",
    "end": "586160"
  },
  {
    "text": "was like I I need to make this look nicer and I was working with someone else they said oh just do python DM",
    "start": "586160",
    "end": "593040"
  },
  {
    "text": "json. tool and pipe it into that and that worked and it you know made it all",
    "start": "593040",
    "end": "598600"
  },
  {
    "text": "nicely indented and stuff and um I was like that's that's great I don't want have to run python to do that I want to",
    "start": "598600",
    "end": "605720"
  },
  {
    "text": "make my thing go to do that because I don't know all the python libraries and",
    "start": "605720",
    "end": "612040"
  },
  {
    "text": "stuff I'm Vaguely Familiar with some of them but I know like the go standard and",
    "start": "612040",
    "end": "617880"
  },
  {
    "text": "Library I was like how can I make this work with go so first I had to figure out how it works in Python because I",
    "start": "617880",
    "end": "623360"
  },
  {
    "text": "only had a bague idea um so in in Python each script actually had a bit at at the",
    "start": "623360",
    "end": "630680"
  },
  {
    "text": "bottom that says if I'm being run as main then do this stuff that um wraps",
    "start": "630680",
    "end": "638440"
  },
  {
    "text": "the actual package in some smart logic to do some stuff in in the case of json.",
    "start": "638440",
    "end": "646600"
  },
  {
    "text": "tool it's uh make the Json look nice pretty fine um and so I was like okay",
    "start": "646600",
    "end": "652519"
  },
  {
    "text": "well I can't go back and add that code to everything in the standard library",
    "start": "652519",
    "end": "658000"
  },
  {
    "text": "but I bet you I could generate that code and I'm a big fan of generating code",
    "start": "658000",
    "end": "665120"
  },
  {
    "text": "because I don't want have to write the dumb code that's always mostly the same",
    "start": "665120",
    "end": "670560"
  },
  {
    "text": "I want somebody to write it for me and that way I can write the good stuff I was like well okay I can do that and so",
    "start": "670560",
    "end": "678560"
  },
  {
    "text": "I think it was lucky that that was my starting point was a fairly complicated",
    "start": "678560",
    "end": "684079"
  },
  {
    "text": "thing of pip in some Json to a specific function",
    "start": "684079",
    "end": "689560"
  },
  {
    "text": "to pry it so that was a difficult use",
    "start": "689560",
    "end": "695240"
  },
  {
    "text": "case I think made it much easier to do everything else that g can do so that's",
    "start": "695240",
    "end": "701959"
  },
  {
    "text": "that's the story and so I started poking at um go types um just a standard",
    "start": "701959",
    "end": "709000"
  },
  {
    "text": "Library package that reads code and understands what types are in there and",
    "start": "709000",
    "end": "714680"
  },
  {
    "text": "so luckily much of go code has a lot of",
    "start": "714680",
    "end": "720000"
  },
  {
    "text": "conventions that we can use to understand what type of action this",
    "start": "720000",
    "end": "725399"
  },
  {
    "text": "function is going to take so like readers and writers and returning n for",
    "start": "725399",
    "end": "731600"
  },
  {
    "text": "the length and and returning errors and stuff and so there's all these conventions that make it very easy to",
    "start": "731600",
    "end": "738680"
  },
  {
    "text": "just generate some code because you pretty much know what each thing is",
    "start": "738680",
    "end": "744000"
  },
  {
    "text": "going to expect and so I just started looking at that for I don't know it's like a or so and got uh some basic",
    "start": "744000",
    "end": "751600"
  },
  {
    "text": "things working and then I've been adding a few new features since then I just thought it was really cool because I",
    "start": "751600",
    "end": "757560"
  },
  {
    "text": "throw together like little tiny go programs to do stuff like that like oh let me you know reformat the Json and",
    "start": "757560",
    "end": "763320"
  },
  {
    "text": "stuff like that so there was really cool to see that because then I can actually throw that in my bash scripts without",
    "start": "763320",
    "end": "768880"
  },
  {
    "text": "having to pass around these little binaries yep um one thing that I noticed",
    "start": "768880",
    "end": "774760"
  },
  {
    "text": "that you mentioned in the last show was that it works with the St Library it actually works with anything in your",
    "start": "774760",
    "end": "781600"
  },
  {
    "text": "goth so if you have some third party thing they'll still work oh cool so",
    "start": "781600",
    "end": "786800"
  },
  {
    "text": "anything that's in the go path of whatever machine it's being run on yep that's awesome yeah so Bill Kennedy was",
    "start": "786800",
    "end": "794800"
  },
  {
    "text": "asking us too like what your experience with working on large code bases is with it being that large and kind of not the",
    "start": "794800",
    "end": "800959"
  },
  {
    "text": "norm it's funny the um there's a proposal for go 1.8 about aliases um",
    "start": "800959",
    "end": "808639"
  },
  {
    "text": "that is supposed to be for support for bigger projects and that kind of a thing",
    "start": "808639",
    "end": "814360"
  },
  {
    "text": "actually could be pretty useful for us so we have a lot of lines of code but",
    "start": "814360",
    "end": "819680"
  },
  {
    "text": "also we have a lot of different repos and multiple different applications building off those and so any major",
    "start": "819680",
    "end": "827360"
  },
  {
    "text": "modification to an API can cause lots of",
    "start": "827360",
    "end": "832560"
  },
  {
    "text": "problems you have to have like four different projects all change at the exact same time and so Alias is at least",
    "start": "832560",
    "end": "840639"
  },
  {
    "text": "one time that I can think of would have been a big help but I'm also sort of on",
    "start": "840639",
    "end": "847160"
  },
  {
    "text": "the fence for supporting alyses because they do make it difficult to know for",
    "start": "847160",
    "end": "855040"
  },
  {
    "text": "sure that these two things are the same because you you can have types that look",
    "start": "855040",
    "end": "860720"
  },
  {
    "text": "like they're different and they're actually not and that's not that great so I wonder like uh can either one of",
    "start": "860720",
    "end": "867399"
  },
  {
    "text": "you explain where a nist is so we can frame this issue a little better for",
    "start": "867399",
    "end": "872519"
  },
  {
    "text": "people who don't know I I have an idea I can explain it well and after we explain",
    "start": "872519",
    "end": "879320"
  },
  {
    "text": "what it is my question for you Nate is do you think it could be overused I mean",
    "start": "879320",
    "end": "886480"
  },
  {
    "text": "it seems that it was already implemented right I don't think I don't even know if there is any going back does anybody",
    "start": "886480",
    "end": "892399"
  },
  {
    "text": "know uh yeah I've been following that um so it has been implemented but there's",
    "start": "892399",
    "end": "899040"
  },
  {
    "text": "still time to roll it back if it's decided that we should and so what",
    "start": "899040",
    "end": "904759"
  },
  {
    "text": "aliases are is you can put a definition in your package that is um for example",
    "start": "904759",
    "end": "912279"
  },
  {
    "text": "typ Fu equals greater than some of their packages type so the equals greater than",
    "start": "912279",
    "end": "918839"
  },
  {
    "text": "looks like a right facing big Arrow it's like the Ruby hash",
    "start": "918839",
    "end": "924279"
  },
  {
    "text": "rocket okay and what that says is reference to this type in this package",
    "start": "924279",
    "end": "931360"
  },
  {
    "text": "are the exact same thing as references to that thing in that package so a",
    "start": "931360",
    "end": "936680"
  },
  {
    "text": "function that takes one takes either and more complicated constructions like a",
    "start": "936680",
    "end": "945079"
  },
  {
    "text": "function that takes a function that takes that thing works with either one and it's that second order function of a",
    "start": "945079",
    "end": "952079"
  },
  {
    "text": "function that is where you actually need it because for types you you you could",
    "start": "952079",
    "end": "957720"
  },
  {
    "text": "use you know interfaces directly so you can pass a strings. string reader into",
    "start": "957720",
    "end": "964639"
  },
  {
    "text": "into something that needs an io. reader however if you have a function that",
    "start": "964639",
    "end": "970839"
  },
  {
    "text": "takes a string reader and something else wants to take a function that takes a",
    "start": "970839",
    "end": "976279"
  },
  {
    "text": "function of io. reader that won't work it's a little hard to explain without text yeah audio like definitions of",
    "start": "976279",
    "end": "984720"
  },
  {
    "text": "things gets difficult right but I guess the the basic uh explanation of it is",
    "start": "984720",
    "end": "989880"
  },
  {
    "text": "it's it's almost like a Sim link right where you're referencing um one type",
    "start": "989880",
    "end": "995360"
  },
  {
    "text": "from another package in your current package so say you took one big monolithic repo and you needed to split",
    "start": "995360",
    "end": "1001360"
  },
  {
    "text": "it up well you don't want to break all the projects that may be referencing",
    "start": "1001360",
    "end": "1006959"
  },
  {
    "text": "that package so you may kind of create an alias so that the type still exists",
    "start": "1006959",
    "end": "1012600"
  },
  {
    "text": "in the original package but it basically refers to it in its new uh location I",
    "start": "1012600",
    "end": "1018079"
  },
  {
    "text": "didn't realize that it worked the other way so you said it basically the indirect works both ways Nate where I",
    "start": "1018079",
    "end": "1024558"
  },
  {
    "text": "could pass in if I took the type from the original package or I took the type from the new package I could use either",
    "start": "1024559",
    "end": "1032319"
  },
  {
    "text": "type passed in pretty sure I'm not 100% sure but uh",
    "start": "1032319",
    "end": "1038240"
  },
  {
    "text": "I think that's sort of needed to make sure that you have full compability but",
    "start": "1038240",
    "end": "1044360"
  },
  {
    "text": "I'm not 100% sure yeah I I think that and um Bill Kennedy's kind of chatting",
    "start": "1044360",
    "end": "1049559"
  },
  {
    "text": "here too he said you know that this he pointed out the fact that this is supposed to be a temporary stop Gap like",
    "start": "1049559",
    "end": "1054880"
  },
  {
    "text": "it's not supposed to be a feature that people heavily use it's supposed to allow people to put that alias in to not",
    "start": "1054880",
    "end": "1062919"
  },
  {
    "text": "break CI for you know 20 uh projects that all depend on this one yeah that's",
    "start": "1062919",
    "end": "1069160"
  },
  {
    "text": "what they say but we all know that no hacks are ever temporary right like they",
    "start": "1069160",
    "end": "1075240"
  },
  {
    "text": "will stick around for for years uh wait which is one of my concerns about this",
    "start": "1075240",
    "end": "1081360"
  },
  {
    "text": "yeah I think that it has a legitimate use but I think that people are also concerned with you know go has done a",
    "start": "1081360",
    "end": "1088200"
  },
  {
    "text": "very good job at removing the the foot guns you know right and this seems like",
    "start": "1088200",
    "end": "1094360"
  },
  {
    "text": "one and I think that's why people are kind of really really kind of heated the debate it's really kind of polarized you",
    "start": "1094360",
    "end": "1099960"
  },
  {
    "text": "know there's the people who really need it for legitimate purposes and then there's everybody else it's like whoa",
    "start": "1099960",
    "end": "1105400"
  },
  {
    "text": "whoa whoa you know people are going to really overuse this yeah that's what I wanted to know because one of the angles",
    "start": "1105400",
    "end": "1112320"
  },
  {
    "text": "of the conversation was this is adding a level of interaction that's going to",
    "start": "1112320",
    "end": "1118679"
  },
  {
    "text": "make reading code confusing and uh the other side is saying well but you know",
    "start": "1118679",
    "end": "1124960"
  },
  {
    "text": "it's very useful and guess what we have goto as well which is not supposed to be",
    "start": "1124960",
    "end": "1131200"
  },
  {
    "text": "used all the time but we do have it and we use it very specific and very sparely and so Nate has this huge base",
    "start": "1131200",
    "end": "1138919"
  },
  {
    "text": "that he works with and it is useful for him and my what I'm wondering is if you",
    "start": "1138919",
    "end": "1145760"
  },
  {
    "text": "Nate see the potential for this being totally overused um well so I I think it's very",
    "start": "1145760",
    "end": "1151960"
  },
  {
    "text": "valid to say that there are things in the language now which we say don't do that and except for very specific cases",
    "start": "1151960",
    "end": "1160200"
  },
  {
    "text": "like using panics like you could use them exactly like exceptions but then",
    "start": "1160200",
    "end": "1167799"
  },
  {
    "text": "everyone will tell you that you're wrong um I do agree that as a community we",
    "start": "1167799",
    "end": "1175640"
  },
  {
    "text": "seem to be pretty good at following conventions that we all pretty much agree on um like there's actually",
    "start": "1175640",
    "end": "1183640"
  },
  {
    "text": "nothing that forces anyone to go format their code and yet everyone does I think",
    "start": "1183640",
    "end": "1191080"
  },
  {
    "text": "this could be a similar thing I think it could be abused I am hoping that people",
    "start": "1191080",
    "end": "1197720"
  },
  {
    "text": "won't for most big code bases like Juju we",
    "start": "1197720",
    "end": "1204000"
  },
  {
    "text": "review every line of code and so if someone was doing wacky stuff with this",
    "start": "1204000",
    "end": "1209120"
  },
  {
    "text": "we'd be like no don't do that but there there are definitely times where it is very useful to be able to break up",
    "start": "1209120",
    "end": "1216640"
  },
  {
    "text": "packages move things around and not have to have a like 10,000 line diff which I",
    "start": "1216640",
    "end": "1223520"
  },
  {
    "text": "have had to do it was not fun um and that exact thing aliases would have",
    "start": "1223520",
    "end": "1231159"
  },
  {
    "text": "helped a lot so I don't know I I think",
    "start": "1231159",
    "end": "1236600"
  },
  {
    "text": "it's probably gone far enough but they're not going to take it out at this point and I think we have to be mindful",
    "start": "1236600",
    "end": "1243960"
  },
  {
    "text": "of the way it's used yeah and I think uh now is probably a good time for a",
    "start": "1243960",
    "end": "1250120"
  },
  {
    "text": "sponsor break so our first sponsor uh today is stack impact and stack impact",
    "start": "1250120",
    "end": "1255919"
  },
  {
    "text": "is all about profiling and monitoring for go helps you laser focus on the performance of your go applications it",
    "start": "1255919",
    "end": "1262080"
  },
  {
    "text": "gives you a a historical Deep dive of performance visibility your go execution so you can kind of discover and resolve",
    "start": "1262080",
    "end": "1268880"
  },
  {
    "text": "any bottlenecks uh line of code Precision technically stack impact mies go built in profiling capabilities",
    "start": "1268880",
    "end": "1275559"
  },
  {
    "text": "usable by offering it in a production environment and giving you kind of a graphical interface to drill down uh",
    "start": "1275559",
    "end": "1281760"
  },
  {
    "text": "through the stack and figure out where your performance bottlenecks are both on CPU and memory allocations as well as",
    "start": "1281760",
    "end": "1288080"
  },
  {
    "text": "Channel network and lock waiting so if you want to see kind of where your mutexes are hanging it's a good way to",
    "start": "1288080",
    "end": "1293840"
  },
  {
    "text": "drill in in the show notes we're going to have a link out to a few blog posts with more details so you can uh get a",
    "start": "1293840",
    "end": "1299679"
  },
  {
    "text": "better feel for it they offer they also offer a great demo account if you want to go to their website at stack",
    "start": "1299679",
    "end": "1306720"
  },
  {
    "text": "impact.com the stack impact.com login is demo stack impact.com and the password",
    "start": "1306720",
    "end": "1312760"
  },
  {
    "text": "is demo demo so go ahead and log in there check out the dashboard they off also offer like nice uh anomaly based",
    "start": "1312760",
    "end": "1320679"
  },
  {
    "text": "events they can basically go into a slack Channel Jason web hooks or email you based on anomalies where some of",
    "start": "1320679",
    "end": "1327400"
  },
  {
    "text": "your CP usage or memory changes into an odd area definitely go ahead and check",
    "start": "1327400",
    "end": "1332760"
  },
  {
    "text": "out the demo um the if you're on the go for slack there's a stack impact channel uh where you can report any issues or",
    "start": "1332760",
    "end": "1339480"
  },
  {
    "text": "get support or talk to other users if you need to focus on performance for your go Application we recommend you",
    "start": "1339480",
    "end": "1345440"
  },
  {
    "text": "check out stack impact head over to stack impact.com SL go time yeah that looked pretty impressive I was checking",
    "start": "1345440",
    "end": "1351640"
  },
  {
    "text": "that out that looked really cool yeah I was digging around on there too like um",
    "start": "1351640",
    "end": "1356880"
  },
  {
    "text": "these are definitely things that when you're running the profiling tools you get this information but you usually",
    "start": "1356880",
    "end": "1362440"
  },
  {
    "text": "don't have it available to you once you kind of roll your app out into production so it's really cool kind of",
    "start": "1362440",
    "end": "1367720"
  },
  {
    "text": "digging around the web interface and kind of seeing what was available yeah and that's sort of where it really",
    "start": "1367720",
    "end": "1374799"
  },
  {
    "text": "counts right when when things are in production question is when you really want to see how there do yeah you can",
    "start": "1374799",
    "end": "1381039"
  },
  {
    "text": "only simulate so much in your your test and and CI environment yep so so going",
    "start": "1381039",
    "end": "1388760"
  },
  {
    "text": "back to uh talking about how we are using go and the most uh useful way of",
    "start": "1388760",
    "end": "1396679"
  },
  {
    "text": "using the features that we already have at least that's that's how it was playing in my mind I know Nate wants to",
    "start": "1396679",
    "end": "1402960"
  },
  {
    "text": "talk about era handling and how the we go does it is different and maybe even",
    "start": "1402960",
    "end": "1410559"
  },
  {
    "text": "better than in other languages so I would love to go there yeah sure I mean",
    "start": "1410559",
    "end": "1416360"
  },
  {
    "text": "um so it's funny um when go 1.0 was",
    "start": "1416360",
    "end": "1421600"
  },
  {
    "text": "announced um was actually the first time that I had heard of go and at the time I",
    "start": "1421600",
    "end": "1426919"
  },
  {
    "text": "was working in C for the most part with some Java in Python and um I was like oh",
    "start": "1426919",
    "end": "1432320"
  },
  {
    "text": "it's a language from Google I should go look and see what it's like and the very first thing I noticed was no exceptions",
    "start": "1432320",
    "end": "1438919"
  },
  {
    "text": "I was like well that's terrible I'm not going to use that and later they they announced 1.0",
    "start": "1438919",
    "end": "1447640"
  },
  {
    "text": "1.01 or something like that um about six months later I was like well let me go look at it again and the rest is history",
    "start": "1447640",
    "end": "1455039"
  },
  {
    "text": "so exceptions are hard hard hard hard so",
    "start": "1455039",
    "end": "1460279"
  },
  {
    "text": "my last job was another big code base was I think 750,000 lines of C and I",
    "start": "1460279",
    "end": "1469600"
  },
  {
    "text": "remember one instance where I was modifying some code I was like oh this this code can fail I'll have it throw an",
    "start": "1469600",
    "end": "1477080"
  },
  {
    "text": "exception and during a code review someone's like you can't have that throw",
    "start": "1477080",
    "end": "1482240"
  },
  {
    "text": "an exception that's way deep in the stack we have no idea who will catch that and that that was the first time I",
    "start": "1482240",
    "end": "1488799"
  },
  {
    "text": "was like Wow exceptions aren't that great um they're they're basically a",
    "start": "1488799",
    "end": "1494279"
  },
  {
    "text": "go-to except you don't know where you're going to you can figure it out sometimes",
    "start": "1494279",
    "end": "1500799"
  },
  {
    "text": "but it's very hard to to know who's going to catch this error and you have",
    "start": "1500799",
    "end": "1507880"
  },
  {
    "text": "to clean everything up and if you're looking at a function you have no idea",
    "start": "1507880",
    "end": "1513480"
  },
  {
    "text": "what can fail any function that you call could fail and what's what's worse is",
    "start": "1513480",
    "end": "1519440"
  },
  {
    "text": "that it might not fail now but in 6 months so I might modify it to fail and that's scary and I remember one of these",
    "start": "1519440",
    "end": "1527799"
  },
  {
    "text": "first go programs that I wrote was just like downloading a bunch of pictures off",
    "start": "1527799",
    "end": "1533120"
  },
  {
    "text": "some website and everything that could fail returned and error I was like it",
    "start": "1533120",
    "end": "1539120"
  },
  {
    "text": "was this epiphany of oh my God I know what can fail I can deal with all this",
    "start": "1539120",
    "end": "1545760"
  },
  {
    "text": "and I know exactly what my program is going to do I think dealing with erors",
    "start": "1545760",
    "end": "1551720"
  },
  {
    "text": "is um where go really got it right because the the multiple returns means",
    "start": "1551720",
    "end": "1558240"
  },
  {
    "text": "it's very easy to just say Okay this thing returns and and error but also some actual useful data and yes you have",
    "start": "1558240",
    "end": "1566279"
  },
  {
    "text": "to do if a not a nail blah but that's good because that means you're saying I",
    "start": "1566279",
    "end": "1573000"
  },
  {
    "text": "know this can fail I'm going to do something and people always talking about oh it makes my happy path look all",
    "start": "1573000",
    "end": "1579840"
  },
  {
    "text": "messy and I'm like this is programming there is no happy",
    "start": "1579840",
    "end": "1585080"
  },
  {
    "text": "path yeah that's I mean that's a especially when you write network software right like the amount of things",
    "start": "1585080",
    "end": "1591559"
  },
  {
    "text": "that can go wrong and it's just anybody who's kind of supported applications and",
    "start": "1591559",
    "end": "1596919"
  },
  {
    "text": "in prod is aware of stuff like that like the odd things that start happening to every application when different",
    "start": "1596919",
    "end": "1603200"
  },
  {
    "text": "resources start hitting their level of saturation when the out of memory killer starts going or when you run out of dis",
    "start": "1603200",
    "end": "1609720"
  },
  {
    "text": "space and you know the network drops or somebody decides to to take that link and bring it back up or assign a new IP",
    "start": "1609720",
    "end": "1616640"
  },
  {
    "text": "address to it like random stuff happens on the machine there like you said there's no happy path that's very interesting yeah yeah",
    "start": "1616640",
    "end": "1625039"
  },
  {
    "text": "and the thing that I find is that in in go I'm a lot more aware of where things",
    "start": "1625039",
    "end": "1631760"
  },
  {
    "text": "can fail and so instead of just programming for when things work and",
    "start": "1631760",
    "end": "1636799"
  },
  {
    "text": "then when things break everything dies um things don't always work exactly the",
    "start": "1636799",
    "end": "1641919"
  },
  {
    "text": "way I expect them to and you have to deal with that and things like the the",
    "start": "1641919",
    "end": "1648159"
  },
  {
    "text": "network being terminated is not terribly exceptional it happens all the time um",
    "start": "1648159",
    "end": "1653360"
  },
  {
    "text": "so what do you do and it's like there's no happy path there's also no sad path",
    "start": "1653360",
    "end": "1659760"
  },
  {
    "text": "there's just paths it's just Forks like is this users's name Bill or is it Bob",
    "start": "1659760",
    "end": "1667799"
  },
  {
    "text": "it's not happy or sad they're just different and you do different things that's a very good point um I remember",
    "start": "1667799",
    "end": "1674200"
  },
  {
    "text": "when I started looking at go open source projects especially the more the the",
    "start": "1674200",
    "end": "1679240"
  },
  {
    "text": "bigger ones like influx data and influx TV and Docker Etc I got really",
    "start": "1679240",
    "end": "1685480"
  },
  {
    "text": "intimidated by how how long the files were I was just thinking wow it must",
    "start": "1685480",
    "end": "1691640"
  },
  {
    "text": "take a lot of mental energy to hold everything that's in this file in your",
    "start": "1691640",
    "end": "1697320"
  },
  {
    "text": "head I mean especially coming from R Ruby and you know people say don't make a file longer than I think it's 100",
    "start": "1697320",
    "end": "1705000"
  },
  {
    "text": "lines and here I was looking at go files they were just super super long now",
    "start": "1705000",
    "end": "1712240"
  },
  {
    "text": "after I learned a little bit I noticed that a lot of it is error and then my first reaction was like I don't want to",
    "start": "1712240",
    "end": "1718600"
  },
  {
    "text": "be looking at error handling I want to look at the code I want to look at the happy path because that was my my frame",
    "start": "1718600",
    "end": "1724600"
  },
  {
    "text": "of reference that's how I was I used to think so which is to say go has a very",
    "start": "1724600",
    "end": "1731440"
  },
  {
    "text": "different um prerogative I want to say a very",
    "start": "1731440",
    "end": "1736640"
  },
  {
    "text": "different approach and now that I'm used to it I really find it very refreshing that everything",
    "start": "1736640",
    "end": "1743120"
  },
  {
    "text": "is there is explicit and it's right there so I don't have to go to other places I don't have to follow that chain",
    "start": "1743120",
    "end": "1750039"
  },
  {
    "text": "of exception throwing all over the place everything is right there now I find it",
    "start": "1750039",
    "end": "1756200"
  },
  {
    "text": "it's the opposite for me I love it um I find it super simple is before where",
    "start": "1756200",
    "end": "1763000"
  },
  {
    "text": "whereas before I used to look at a big file and think I have to hold it all in my head head now I look at a big a long",
    "start": "1763000",
    "end": "1769840"
  },
  {
    "text": "go file and I think everything is here it's so much easier for me to hold this in my head because everything is right",
    "start": "1769840",
    "end": "1775919"
  },
  {
    "text": "here it's not I don't I'm not it's not a long file that it's that content and I",
    "start": "1775919",
    "end": "1781240"
  },
  {
    "text": "have to go all over the place to look at where exceptions of being thrown everything is right there is explicit so",
    "start": "1781240",
    "end": "1787000"
  },
  {
    "text": "it makes it a lot easier you know the the one thing that I like about is if",
    "start": "1787000",
    "end": "1792320"
  },
  {
    "text": "you if you use idiomatic go then you're you're happy path so to speak typically",
    "start": "1792320",
    "end": "1798640"
  },
  {
    "text": "is at the first indentation level so you can kind of if you're just trying to get an idea for what a function does you can",
    "start": "1798640",
    "end": "1804600"
  },
  {
    "text": "kind of just scan that level and most of your your you know edge cases and when things return in airor are typically",
    "start": "1804600",
    "end": "1811799"
  },
  {
    "text": "indented in that's typically where you find your error handling so it's easy to kind of scan past it when you're just",
    "start": "1811799",
    "end": "1817240"
  },
  {
    "text": "trying to get a rough idea but you can like you said you can focus more on it when it matters when you're really trying to oh well why would this go",
    "start": "1817240",
    "end": "1824080"
  },
  {
    "text": "wrong I should look to make sure it's handling these scenarios I'm expecting it to the hardest part is not knowing",
    "start": "1824080",
    "end": "1832559"
  },
  {
    "text": "it's it's the unknown unknowns you know and I think that's why like the whole crash only software Paradigm has kind of",
    "start": "1832559",
    "end": "1840320"
  },
  {
    "text": "become more popular especially with distributed computing and in containers and stuff and kind of going back to",
    "start": "1840320",
    "end": "1847039"
  },
  {
    "text": "Nate's point about people overusing panic I wonder if it's it's that kind of Crash only um methodology that's that's",
    "start": "1847039",
    "end": "1855720"
  },
  {
    "text": "having people do use panic more I definitely think uh that there are a",
    "start": "1855720",
    "end": "1861760"
  },
  {
    "text": "large number of people that think that once you get into a bad state that you",
    "start": "1861760",
    "end": "1868639"
  },
  {
    "text": "no longer know what's going to happen and so you should just bail out that's fine um but one of the ways you can",
    "start": "1868639",
    "end": "1876720"
  },
  {
    "text": "avoid getting into a bad state is by understanding what can fail and how things are able to fail um and even with",
    "start": "1876720",
    "end": "1886240"
  },
  {
    "text": "go like returning and error it's sort of like failing so you're saying I couldn't",
    "start": "1886240",
    "end": "1893519"
  },
  {
    "text": "do it something went wrong make no assumptions about what I was supposed to",
    "start": "1893519",
    "end": "1898720"
  },
  {
    "text": "do um often times that will just bubble all the way back up to wherever the",
    "start": "1898720",
    "end": "1904440"
  },
  {
    "text": "start of Your Action was and in Juju we actually have uh things we call workers",
    "start": "1904440",
    "end": "1912720"
  },
  {
    "text": "that are threads which will get restarted um if they beir out and it's",
    "start": "1912720",
    "end": "1920480"
  },
  {
    "text": "very similar to CR only software just per go routine but I don't think you",
    "start": "1920480",
    "end": "1925760"
  },
  {
    "text": "need panics to do that Panic is um taking down like the whole application",
    "start": "1925760",
    "end": "1933000"
  },
  {
    "text": "and I think applications these days are complicated enough that one small piece",
    "start": "1933000",
    "end": "1939519"
  },
  {
    "text": "failing is not a need to bring down the entire thing usually oh agreed I mean",
    "start": "1939519",
    "end": "1946480"
  },
  {
    "text": "you should should allow the highest level possible to make that decision right like you had some sort of it's RPC",
    "start": "1946480",
    "end": "1954320"
  },
  {
    "text": "service and there was some kind of network issue through Jitter or like reordered packets and it lost its state",
    "start": "1954320",
    "end": "1960360"
  },
  {
    "text": "or something like that like you wouldn't crash the whole program you would come back up a level and that would be like",
    "start": "1960360",
    "end": "1965600"
  },
  {
    "text": "let's let's close this connection and let it reopen because we don't T we don't really know what state the",
    "start": "1965600",
    "end": "1971320"
  },
  {
    "text": "connection is in whether it's sending kind of like a header packet or the body and we can't figure this out to reset it",
    "start": "1971320",
    "end": "1977840"
  },
  {
    "text": "let's just close the connection and reopen one you don't have to crash the whole program because of it absolutely",
    "start": "1977840",
    "end": "1984240"
  },
  {
    "text": "yeah so um Bill Kennedy actually asked um too speaking of kind of error handling like what your views were on um",
    "start": "1984240",
    "end": "1992320"
  },
  {
    "text": "wrapping of Errors because there's kind of a lot of polarization there too where people think you should so you can get",
    "start": "1992320",
    "end": "1998559"
  },
  {
    "text": "more context and get stack information and then there's also the other side of it when you're wanting to handle errors",
    "start": "1998559",
    "end": "2004600"
  },
  {
    "text": "trying to do error comparisons when you wrap errors you end up leaving yourself needing to compare strings or regular",
    "start": "2004600",
    "end": "2012240"
  },
  {
    "text": "Expressions against them instead of um comparing actual types well so we actually use a rapper",
    "start": "2012240",
    "end": "2021600"
  },
  {
    "text": "in Juju that we wrote a couple years ago so in the beginning we didn't use a",
    "start": "2021600",
    "end": "2028720"
  },
  {
    "text": "rapper and that does kind of make things rough because it if you don't use a rapper then you do have to just compare",
    "start": "2028720",
    "end": "2034519"
  },
  {
    "text": "strings if you're using the like format that airf and then just adding on more",
    "start": "2034519",
    "end": "2039880"
  },
  {
    "text": "string to the string that you have um I like Dave's package um github.com",
    "start": "2039880",
    "end": "2047200"
  },
  {
    "text": "package errors so the nice thing about his is that he gets a stack Trace when",
    "start": "2047200",
    "end": "2054720"
  },
  {
    "text": "you make the new error you can still get the error that was the original error",
    "start": "2054720",
    "end": "2062200"
  },
  {
    "text": "and so you can still like check and see if it's an iio F without having to look",
    "start": "2062200",
    "end": "2068079"
  },
  {
    "text": "at the string you can see if it matches some interface and JuJu's package also",
    "start": "2068079",
    "end": "2074118"
  },
  {
    "text": "lets you do that so all these these packages work basically the same and there's a lot out there we we looked at",
    "start": "2074119",
    "end": "2080079"
  },
  {
    "text": "a bunch and I'm sure more have been written and so basically they all just store the original error and give you",
    "start": "2080079",
    "end": "2086118"
  },
  {
    "text": "back a rapper struct that goes around it the problem with Juju is that you have",
    "start": "2086119",
    "end": "2092560"
  },
  {
    "text": "to wrap it at every return because instead of getting a St St Trace per se",
    "start": "2092560",
    "end": "2098200"
  },
  {
    "text": "it marks where gets wrapped on the return path up um the idea was that",
    "start": "2098200",
    "end": "2104560"
  },
  {
    "text": "sometimes you pass errors over channels like the stack Trace per se may not be",
    "start": "2104560",
    "end": "2111200"
  },
  {
    "text": "how you eventually get a hold of the error in theory it was a good idea in",
    "start": "2111200",
    "end": "2117400"
  },
  {
    "text": "practice it means that everywhere you return error you have to do a uh wrapping um is kind of a burden mostly",
    "start": "2117400",
    "end": "2125280"
  },
  {
    "text": "for when things return multiple values you can't tail call like return a",
    "start": "2125280",
    "end": "2132320"
  },
  {
    "text": "function um if sign the values to variables and then wrap the erir and",
    "start": "2132320",
    "end": "2137640"
  },
  {
    "text": "then return both that's kind of a pain the difference with Daves is that he",
    "start": "2137640",
    "end": "2143680"
  },
  {
    "text": "actually grabs the stack trace the first time so in theory you don't actually have to wrap it when you return it past",
    "start": "2143680",
    "end": "2150160"
  },
  {
    "text": "that first time so I think they're kind of good and I think they're kind of not",
    "start": "2150160",
    "end": "2155280"
  },
  {
    "text": "as useful as people think so if in Juju a lot of the time I can just search for the string and find the spot where where",
    "start": "2155280",
    "end": "2163319"
  },
  {
    "text": "was made and figure out what was going on I don't always need the whole stack",
    "start": "2163319",
    "end": "2168400"
  },
  {
    "text": "race fact it's fairly rare I need the whole stack Trace so yeah I typically only want the stack Trace if I don't",
    "start": "2168400",
    "end": "2175400"
  },
  {
    "text": "know how to continue if I know how to recover from the air I don't really care about the stack Trace but when I'm I'm",
    "start": "2175400",
    "end": "2182640"
  },
  {
    "text": "actually taking down the application because I don't know how to recover from the that's typically where I want a full",
    "start": "2182640",
    "end": "2188160"
  },
  {
    "text": "stack Trace yeah and I guess I just haven't seen as much use out of the",
    "start": "2188160",
    "end": "2193640"
  },
  {
    "text": "stack Trace as I would like and so it seems like a lot of work not really a lot of work but more work for",
    "start": "2193640",
    "end": "2201680"
  },
  {
    "text": "questionable benefit so I'm still leaning towards saying it's a good idea",
    "start": "2201680",
    "end": "2208440"
  },
  {
    "text": "but it's it's not as as strong as that's I would like I'm not exactly sure how to make that better case that it's a",
    "start": "2208440",
    "end": "2215640"
  },
  {
    "text": "stronger yes absolutely should do that okay so I think it's about time for our second sponsor break and then I want to",
    "start": "2215640",
    "end": "2221960"
  },
  {
    "text": "get into kind of some projects and news um especially with the 18 freeze going on yeah so our next sponsor is code",
    "start": "2221960",
    "end": "2230079"
  },
  {
    "text": "school so our friends at COD school just launched a new course for those who are just getting started with go it's called",
    "start": "2230079",
    "end": "2236400"
  },
  {
    "text": "on track with goang and has five levels level one is completely free so you can easily take your first step into",
    "start": "2236400",
    "end": "2242000"
  },
  {
    "text": "learning go uh all you have to do is go over to Cod school.com go click on the",
    "start": "2242000",
    "end": "2247119"
  },
  {
    "text": "the giant button that says start course for free create an account and get started level one has two videos and",
    "start": "2247119",
    "end": "2252480"
  },
  {
    "text": "eight challenges and the cool thing is is that all of this is done uh through your web browser so you don't have to set up your machine with go and go path",
    "start": "2252480",
    "end": "2259800"
  },
  {
    "text": "which go paath is being fixed uh soon uh once you made it past level one you can look forward to the final level which is",
    "start": "2259800",
    "end": "2266319"
  },
  {
    "text": "level five where you'll be working with interface types uh creating packages and reading conent code with go routines and",
    "start": "2266319",
    "end": "2273200"
  },
  {
    "text": "these are some of the primary reasons people are coming to go uh once again level one is completely free uh code",
    "start": "2273200",
    "end": "2278720"
  },
  {
    "text": "School wants to make it super easy to take your F first step into learn and go uh and this course is a great first step",
    "start": "2278720",
    "end": "2284800"
  },
  {
    "text": "so head over to Cod school.com go to get started thanks again Cod school for this awesome course and sponsoring the show",
    "start": "2284800",
    "end": "2291520"
  },
  {
    "text": "so next up projects and news so we have the 18 freeze so that just happened and",
    "start": "2291520",
    "end": "2297480"
  },
  {
    "text": "we're going to be frozen for I think it's three months right yeah I think so so I want to talk about some of the",
    "start": "2297480",
    "end": "2303160"
  },
  {
    "text": "stuff that's coming in there um we talked about one of them which is the aliases but there's some other stuff",
    "start": "2303160",
    "end": "2308880"
  },
  {
    "text": "coming in like they're they're leveraging um the context package a lot more so one of the cool things I was",
    "start": "2308880",
    "end": "2315119"
  },
  {
    "text": "interested in is the database SQL package will have cancelable queries now yeah I was looking at too and they've",
    "start": "2315119",
    "end": "2321880"
  },
  {
    "text": "done a bunch of stuff with names and parameters and stuff that they're really",
    "start": "2321880",
    "end": "2327280"
  },
  {
    "text": "buffing it up a bunch because it was a little Bare Bones before and it's nice to have it be able to do a lot more",
    "start": "2327280",
    "end": "2333160"
  },
  {
    "text": "things it's like that's you know half of what most applications do is talk to a database yeah that's true I don't I",
    "start": "2333160",
    "end": "2339800"
  },
  {
    "text": "don't know how much love I've seen uh in the database SQL package since you know early one release it may just be because",
    "start": "2339800",
    "end": "2346920"
  },
  {
    "text": "I haven't been looking for it but I I yeah I don't think a lot of more functionality has been added to it to my",
    "start": "2346920",
    "end": "2352640"
  },
  {
    "text": "knowledge but one of the other cool things is the HTTP package the server will actually have Grace W shut down by",
    "start": "2352640",
    "end": "2358599"
  },
  {
    "text": "itself now which is going to save me a lot of boilerplate code when I build HTTP API yeah that is very cool and then",
    "start": "2358599",
    "end": "2366640"
  },
  {
    "text": "they're going to be doing the reverse proxy we have http2 support and Nate so",
    "start": "2366640",
    "end": "2372000"
  },
  {
    "text": "I hadn't seen this but you had mentioned something about Dynamic plugins I think that's coming in 1.8 um",
    "start": "2372000",
    "end": "2379520"
  },
  {
    "text": "yeah so yeah it is okay good so they working on this for for a long time",
    "start": "2379520",
    "end": "2385960"
  },
  {
    "text": "being able to um compile code as a plugin that can be loaded by other go",
    "start": "2385960",
    "end": "2393319"
  },
  {
    "text": "code um and the other main application loads it using there's a new um plug-in",
    "start": "2393319",
    "end": "2401119"
  },
  {
    "text": "package in the St lib on tip and so it basically works like plugins where you",
    "start": "2401119",
    "end": "2408640"
  },
  {
    "text": "can load new data um You can call functions and stuff it's uh very",
    "start": "2408640",
    "end": "2414160"
  },
  {
    "text": "interesting so this is basically loading it as a dynamic Library like a a dll or an so file yes for other languages where",
    "start": "2414160",
    "end": "2421920"
  },
  {
    "text": "D name so I'm I'm guessing so how does that work for dynamically linking",
    "start": "2421920",
    "end": "2428400"
  },
  {
    "text": "against it do you need to know have the plugin at compile time like you would for like you need the header files for C",
    "start": "2428400",
    "end": "2435680"
  },
  {
    "text": "if you were going to dynamically link against something or is this just completely generic because the information is available in the binary",
    "start": "2435680",
    "end": "2442839"
  },
  {
    "text": "it's completely generic um which means you lose a bit of type safety going",
    "start": "2442839",
    "end": "2448640"
  },
  {
    "text": "through it um I'm looking at the package now re by myself but um basically you",
    "start": "2448640",
    "end": "2453720"
  },
  {
    "text": "can look up um names of types and functions and they get returned as an",
    "start": "2453720",
    "end": "2460160"
  },
  {
    "text": "empty interface and then you can cast them and call them interesting so yeah I",
    "start": "2460160",
    "end": "2465680"
  },
  {
    "text": "mean I know there's been a few use cases where people have really wanted plugins um and like kubernetes is a good example",
    "start": "2465680",
    "end": "2472560"
  },
  {
    "text": "too yeah I'm a big fan of plugins um fact I wrote a package to work with",
    "start": "2472560",
    "end": "2478400"
  },
  {
    "text": "plugins called Pi that will be at least partially obviated by this which is fine",
    "start": "2478400",
    "end": "2484359"
  },
  {
    "text": "so I think plugins are super valuable like that's that's half of why kubernetes is so popular is that you can",
    "start": "2484359",
    "end": "2490680"
  },
  {
    "text": "swap things in and out as much as you want and um this will make it even better because then you can use real go",
    "start": "2490680",
    "end": "2498119"
  },
  {
    "text": "that you just drop in the directory and stuff so yeah I think it's really cool from the the perspective that there's a",
    "start": "2498119",
    "end": "2504599"
  },
  {
    "text": "lot of Cool Tools um where we want them to support uh many different uh",
    "start": "2504599",
    "end": "2511760"
  },
  {
    "text": "interfaces to other applications and architectur but but the core package starts to become very bloated with",
    "start": "2511760",
    "end": "2518400"
  },
  {
    "text": "knowledge of all these individual versions of the same system whatever that may be databases or or things like",
    "start": "2518400",
    "end": "2525359"
  },
  {
    "text": "that so to be able to move it out into a plug-in approach is really cool um and",
    "start": "2525359",
    "end": "2530440"
  },
  {
    "text": "like a good example of this and I'm going to give away my free software Friday early but uh cni the container",
    "start": "2530440",
    "end": "2535960"
  },
  {
    "text": "networking interface like you can basically just tell it like this is the plugin I want to use for my networking",
    "start": "2535960",
    "end": "2543319"
  },
  {
    "text": "and there's just kind of like a known interface between them so having stuff like this is really cool because then",
    "start": "2543319",
    "end": "2549160"
  },
  {
    "text": "you can start separating that logic from the core package so there can be kind of individual packages that are more more",
    "start": "2549160",
    "end": "2555079"
  },
  {
    "text": "focused and as long as they expose the correct methods so I'm not sure was that",
    "start": "2555079",
    "end": "2561280"
  },
  {
    "text": "all the the goodies coming in 18 does anybody know of any other ones that are coming in um the GC improvements so now",
    "start": "2561280",
    "end": "2568480"
  },
  {
    "text": "it's down to maximum 100 microc seconds not milliseconds micro yeah which is",
    "start": "2568480",
    "end": "2575160"
  },
  {
    "text": "awesome and there's a new proposal um this isn't going to be for 18 but I",
    "start": "2575160",
    "end": "2580359"
  },
  {
    "text": "think it's future work where they're trying to get it down to um under 50 microseconds for the Stop The World",
    "start": "2580359",
    "end": "2586680"
  },
  {
    "text": "pauses yeah um there there's a c right now that individual go routines may stop",
    "start": "2586680",
    "end": "2593319"
  },
  {
    "text": "for longer than that there's some I don't know is a bug or just the way things work so it's just stop the world",
    "start": "2593319",
    "end": "2600240"
  },
  {
    "text": "is that short but they're working on making it better and better which I think is just fantastic because that's",
    "start": "2600240",
    "end": "2605760"
  },
  {
    "text": "that's what half the world says when they look at at go is oh it's got a GC well can't use",
    "start": "2605760",
    "end": "2612119"
  },
  {
    "text": "that well maybe you can now see what what I love about go is that I get a",
    "start": "2612119",
    "end": "2619640"
  },
  {
    "text": "choice right like there yes there is a GC but I mean I can manage my own memory",
    "start": "2619640",
    "end": "2624920"
  },
  {
    "text": "if I want to if if it if it's important to me and I want to have full control over it I I can manage it you know I can",
    "start": "2624920",
    "end": "2632200"
  },
  {
    "text": "create my own bite slices and and pointers and stuff and just hang on to to them and reuse them and create a pool",
    "start": "2632200",
    "end": "2637839"
  },
  {
    "text": "right right so basically creating your own slabs you it's not like it's not like uh python or Ruby where like you",
    "start": "2637839",
    "end": "2644960"
  },
  {
    "text": "have no option you can have GC or you can have GC right right",
    "start": "2644960",
    "end": "2650119"
  },
  {
    "text": "so and it's it's cool because you can write it one way first and for the most",
    "start": "2650119",
    "end": "2655800"
  },
  {
    "text": "for most people coming to a compiled language it's going to be fast enough already like the number of times you're",
    "start": "2655800",
    "end": "2662839"
  },
  {
    "text": "going to drill down to allocation isn't as common as you'd like it to be right",
    "start": "2662839",
    "end": "2668640"
  },
  {
    "text": "yeah we all want to think like every piece of code we write like we we start breaking out prpr and looking at all the",
    "start": "2668640",
    "end": "2674960"
  },
  {
    "text": "allocations and stuff but that that's not typically the case usually you wait",
    "start": "2674960",
    "end": "2680000"
  },
  {
    "text": "to see what performance bottlenecks you have and focus in on those areas and areas that are are very hot in the in",
    "start": "2680000",
    "end": "2687359"
  },
  {
    "text": "the execution path where the allocations matter those areas you might start drilling into the number of allocations",
    "start": "2687359",
    "end": "2693319"
  },
  {
    "text": "and start messing with that but it's not like you're going to go through your whole app and do that if you do then I",
    "start": "2693319",
    "end": "2699440"
  },
  {
    "text": "want to work on your team because usually you're you're so racing to deliver features you know right exactly",
    "start": "2699440",
    "end": "2707839"
  },
  {
    "text": "so as far as go 1.8 I just wanted to mention that uh there is a really great",
    "start": "2707839",
    "end": "2713319"
  },
  {
    "text": "blog post listing in detail what's going to be in 1.8 and it was Tyler CHR Tyler",
    "start": "2713319",
    "end": "2721760"
  },
  {
    "text": "chry uh we will list we'll place the link on the show notes and on slack oh",
    "start": "2721760",
    "end": "2726839"
  },
  {
    "text": "Tyler Christensen yeah yeah there are a bunch of nifty little things cool so",
    "start": "2726839",
    "end": "2733280"
  },
  {
    "text": "interesting project I so we mentioned a few shows ago the Vols vulnerability",
    "start": "2733280",
    "end": "2738960"
  },
  {
    "text": "scanner that was written in go and I was looking at it again recently and I noticed that there it actually uses a",
    "start": "2738960",
    "end": "2744599"
  },
  {
    "text": "library called uh go cui which is actually really cool because you can build kind of command line user",
    "start": "2744599",
    "end": "2751240"
  },
  {
    "text": "interfaces and go and it has kind of the concept of splits and windows and and and um modal popups and stuff so I",
    "start": "2751240",
    "end": "2759359"
  },
  {
    "text": "haven't built anything with it but seeing it really makes me want to nice yeah I used a different one for a small",
    "start": "2759359",
    "end": "2767640"
  },
  {
    "text": "project I can't remember now what the name of it was but um very similar to I",
    "start": "2767640",
    "end": "2773559"
  },
  {
    "text": "guess slightly lower level this one's like you can like just make a window and put stuff in it one that I us was more",
    "start": "2773559",
    "end": "2781280"
  },
  {
    "text": "like your screen was a grid and you could put stuff in in the grid but this",
    "start": "2781280",
    "end": "2787520"
  },
  {
    "text": "looks really cool definitely want to try that one out see I I love graphical stuff but I don't I don't know why but",
    "start": "2787520",
    "end": "2794760"
  },
  {
    "text": "I'm a command line junkie it's like e even like my development machine I don't",
    "start": "2794760",
    "end": "2800319"
  },
  {
    "text": "I have a Mac and I do like the the podcast and stuff from that and email and chat and stuff but I primarily",
    "start": "2800319",
    "end": "2806440"
  },
  {
    "text": "develop off a Linux box and I run like the I3 Window Manager like that's it I don't need any of the fluff like just",
    "start": "2806440",
    "end": "2812800"
  },
  {
    "text": "give me some terminal windows and I'm good yeah well so I did 133 years of",
    "start": "2812800",
    "end": "2818760"
  },
  {
    "text": "Windows development so I still at times want things I can poke at with the mouse",
    "start": "2818760",
    "end": "2824480"
  },
  {
    "text": "but I also love the terminals this is sort of a nice like put those both together and you have a lightweight",
    "start": "2824480",
    "end": "2831800"
  },
  {
    "text": "window thing here so that's pretty cool yeah I'm waiting to have some time to actually build something with",
    "start": "2831800",
    "end": "2838280"
  },
  {
    "text": "it so another cool project I found it they have a command line version for it",
    "start": "2838280",
    "end": "2843760"
  },
  {
    "text": "too but it mainly for them and neovim is a fuzzy filefinder that's written in go",
    "start": "2843760",
    "end": "2849000"
  },
  {
    "text": "and there's been like a number of these written over the years for editors but I thought that that was really cool I like",
    "start": "2849000",
    "end": "2854040"
  },
  {
    "text": "anything that gets Rewritten in go like oh here's you know here's a cool grepping tool I'm G to write one in",
    "start": "2854040",
    "end": "2862040"
  },
  {
    "text": "go yeah I actually think that's a um great first project is to take a small",
    "start": "2862040",
    "end": "2867800"
  },
  {
    "text": "tool that you like in a different language and do it and go because then",
    "start": "2867800",
    "end": "2873359"
  },
  {
    "text": "like a lot of time working on a per it's like what do I want it to do and what's",
    "start": "2873359",
    "end": "2879520"
  },
  {
    "text": "nice about um just copying something else is that you already know what it does to just make it do that I think",
    "start": "2879520",
    "end": "2885480"
  },
  {
    "text": "that's a really nice way to learn the language because you spend your time uh",
    "start": "2885480",
    "end": "2890920"
  },
  {
    "text": "learning the language rather than trying to learn the domain and the language at the same time you're already kind of",
    "start": "2890920",
    "end": "2896200"
  },
  {
    "text": "familiar with the domain yeah how about you carisia anything you've come across this week yes uh but actually not much",
    "start": "2896200",
    "end": "2904119"
  },
  {
    "text": "uh I wanted to mention Dave Chen's talk with a disclaimer that it was the only",
    "start": "2904119",
    "end": "2909440"
  },
  {
    "text": "talk from.go that I I have watched so I'm sure there are a ton of other great talks and this one I watched and loved",
    "start": "2909440",
    "end": "2918400"
  },
  {
    "text": "it um it's basically he talks about the functions as first class citizens in go",
    "start": "2918400",
    "end": "2926720"
  },
  {
    "text": "and I loved it that he didn't take for granted that everybody knows how to use functions as as arguments basically am I",
    "start": "2926720",
    "end": "2934799"
  },
  {
    "text": "saying this right yep yeah um and and it's funny that he said",
    "start": "2934799",
    "end": "2942799"
  },
  {
    "text": "he talks to people when people say well I know how to use it but I don't use it because I'm concerned that other people won't understand and that is definitely",
    "start": "2942799",
    "end": "2950480"
  },
  {
    "text": "true for me I haven't used it yet but he walks through examples of how to use it and I thought it was such a great thing",
    "start": "2950480",
    "end": "2956640"
  },
  {
    "text": "to have that resource there to learn it and in the talk he also goes into the",
    "start": "2956640",
    "end": "2962960"
  },
  {
    "text": "actor concurrency pattern I didn't really get how the two fit together but I just I also LED it because well great",
    "start": "2962960",
    "end": "2970480"
  },
  {
    "text": "there is a nice example of how to use that pattern and um in the example that he",
    "start": "2970480",
    "end": "2978880"
  },
  {
    "text": "gave I think the purpose for that example was to show the first go proverb",
    "start": "2978880",
    "end": "2985359"
  },
  {
    "text": "and for people who don't know there there is such a thing as a list of go Proverbs which is the first one is don't",
    "start": "2985359",
    "end": "2993079"
  },
  {
    "text": "communicate by sharing memory share memory by communicating and for people who are new to this stally type language",
    "start": "2993079",
    "end": "3004200"
  },
  {
    "text": "with pointers in memory allocation and all of that thing those things this",
    "start": "3004200",
    "end": "3009440"
  },
  {
    "text": "might sound so cryptic so Dave talk walks through an example that gets the idea across it is",
    "start": "3009440",
    "end": "3017240"
  },
  {
    "text": "a bit Advanced but if you're ready for that I highly recommend it and he also",
    "start": "3017240",
    "end": "3022319"
  },
  {
    "text": "mentioned the talk by Brian B Burham from uh this year's go Lang UK",
    "start": "3022319",
    "end": "3028400"
  },
  {
    "text": "conference it's called an actor model and go which I haven't seen yet but it",
    "start": "3028400",
    "end": "3034359"
  },
  {
    "text": "will go deeper into what an acto model will do yeah there's a talk by Rob Pike",
    "start": "3034359",
    "end": "3041640"
  },
  {
    "text": "from one of the Gopher fests um where he talks about the go Proverbs so I'll I'll",
    "start": "3041640",
    "end": "3047200"
  },
  {
    "text": "find that video and Link that in the show Notes too yeah good point so an interesting thing about the functions as",
    "start": "3047200",
    "end": "3053359"
  },
  {
    "text": "first class citizens I have not seen that talk talk but speaking of 18 changes um the sort logic um right now",
    "start": "3053359",
    "end": "3062559"
  },
  {
    "text": "you have to have kind of like an interface on your type that you want to sort um which has kind of been a pain",
    "start": "3062559",
    "end": "3067799"
  },
  {
    "text": "but uh in 18 you'll now be able to use a comparator so you'll be able to just pass in a a function to do the",
    "start": "3067799",
    "end": "3074240"
  },
  {
    "text": "comparison and return basically which side is is greater so there's a use case",
    "start": "3074240",
    "end": "3080720"
  },
  {
    "text": "right there for the first class functions yeah there we go that's a that's exactly what I was thinking um",
    "start": "3080720",
    "end": "3087920"
  },
  {
    "text": "you know because that that's how I approach things I accumulate a bunch of tools and every time I have a problem I",
    "start": "3087920",
    "end": "3094160"
  },
  {
    "text": "reference to those to say Can I use one of these to solve this problem but it's it's helpful when people serve to you",
    "start": "3094160",
    "end": "3100960"
  },
  {
    "text": "like here's a new case so you have that in mind good one yeah I I am actually",
    "start": "3100960",
    "end": "3107839"
  },
  {
    "text": "working with um some code that uses first class functions so as a way to do",
    "start": "3107839",
    "end": "3115880"
  },
  {
    "text": "validation of user data so you got a function that's get all this Logic for",
    "start": "3115880",
    "end": "3121839"
  },
  {
    "text": "getting the data then you just pass it in a validation function and then it can",
    "start": "3121839",
    "end": "3126960"
  },
  {
    "text": "run that to make sure that the data is valid I was working on that while I watched Dave's Video like oh well yes",
    "start": "3126960",
    "end": "3134040"
  },
  {
    "text": "that's exactly exactly what I'm doing yeah I haven't actually seen that video I need to put that on my list actually",
    "start": "3134040",
    "end": "3140480"
  },
  {
    "text": "all the Dogo videos I need to put my list to watch yeah yeah good all right so what else do we have on list before",
    "start": "3140480",
    "end": "3145880"
  },
  {
    "text": "we move on to free software Friday oh one more thing I wanted to mention uh Peter",
    "start": "3145880",
    "end": "3151880"
  },
  {
    "text": "buron emailed the M list I forgot which one and they have the draft spec for",
    "start": "3151880",
    "end": "3159760"
  },
  {
    "text": "package management ready and they are calling for comments they are uh",
    "start": "3159760",
    "end": "3165079"
  },
  {
    "text": "soliciting comments either on goers slack the vendor Channel or on the mailing list and they started uh",
    "start": "3165079",
    "end": "3172640"
  },
  {
    "text": "implementing a a little prototype too so that that's definitely moving along yeah",
    "start": "3172640",
    "end": "3179799"
  },
  {
    "text": "I've looked at that and honestly it's so long and so detailed I need like a TDR",
    "start": "3179799",
    "end": "3186799"
  },
  {
    "text": "version so that I can have some idea of what the overall meaning is but it's",
    "start": "3186799",
    "end": "3192400"
  },
  {
    "text": "seven pages long so I'm like I don't know if I can get all that yeah maybe",
    "start": "3192400",
    "end": "3198000"
  },
  {
    "text": "the Prototype they you starting to implement will be helpful in that regards sometimes it's easier to look at",
    "start": "3198000",
    "end": "3203760"
  },
  {
    "text": "code yeah all right ready for free software Friday oh no I'm sorry I'm sorry I have one",
    "start": "3203760",
    "end": "3211119"
  },
  {
    "text": "more thing last thing what is it gbridge has a community newslet go called go pul",
    "start": "3211119",
    "end": "3218720"
  },
  {
    "text": "and oh yes yes it's uh Amy jumped in and took this on and she",
    "start": "3218720",
    "end": "3225160"
  },
  {
    "text": "did a fantastic job with the first ishoe and we have sections for uh",
    "start": "3225160",
    "end": "3231079"
  },
  {
    "text": "different things that people can suggest and every month we there is a an n so if you feel so inclined raise your",
    "start": "3231079",
    "end": "3238640"
  },
  {
    "text": "hand and volunteer and suggest things the this letter came out really really good the one thing I liked was the um",
    "start": "3238640",
    "end": "3246920"
  },
  {
    "text": "the goph for mic section where you kind of hand it over to to somebody yeah she",
    "start": "3246920",
    "end": "3253000"
  },
  {
    "text": "made it fair inclusive it was awesome and this is monthly yes awesome so",
    "start": "3253000",
    "end": "3260520"
  },
  {
    "text": "before we move on where should people go to sign up for that if they are not already signed up",
    "start": "3260520",
    "end": "3265839"
  },
  {
    "text": "uh it's basically the goldbridge uh blog and uh I want to correct myself her name",
    "start": "3265839",
    "end": "3272200"
  },
  {
    "text": "is Amy Chan we need to remember to say people's last name so Amy Chan thank you",
    "start": "3272200",
    "end": "3278200"
  },
  {
    "text": "you did an amazing job and people can sign up at the goldbridge blog post uh",
    "start": "3278200",
    "end": "3284640"
  },
  {
    "text": "blog and that's it awesome so free software Friday so every well today's",
    "start": "3284640",
    "end": "3292559"
  },
  {
    "text": "Thursday but we do it for Friday so we like like to give shout outs to people or projects that are making our lives",
    "start": "3292559",
    "end": "3299200"
  },
  {
    "text": "easier so caria do you want to kick it off yeah you have this week yes I'm",
    "start": "3299200",
    "end": "3304480"
  },
  {
    "text": "going to mention a project that was I actually solicited on the channel on the",
    "start": "3304480",
    "end": "3309520"
  },
  {
    "text": "go time Channel because I didn't have one but I definitely wanted to give a shout out to somebody and now I didn't write his name",
    "start": "3309520",
    "end": "3317520"
  },
  {
    "text": "here I forgot the person who uh mentioned it it the package is called",
    "start": "3317520",
    "end": "3324000"
  },
  {
    "text": "kinetic and it's an easier way to access kinetic shards and and for pulling and",
    "start": "3324000",
    "end": "3331520"
  },
  {
    "text": "for doing other things so if you're using AWS oh interesting that's",
    "start": "3331520",
    "end": "3336920"
  },
  {
    "text": "something you should check out yeah the official description says high performance AWS kesis clients for goal",
    "start": "3336920",
    "end": "3345960"
  },
  {
    "text": "nice uh so my shout out is to Hugo um which was originally written um by Steve",
    "start": "3345960",
    "end": "3352440"
  },
  {
    "text": "Francia um it is the static website generator um that I think most people",
    "start": "3352440",
    "end": "3358440"
  },
  {
    "text": "know about but that's um what I use to make my blog um you know lots of people",
    "start": "3358440",
    "end": "3363960"
  },
  {
    "text": "do and there's been a ton of work on it lately uh lot of it's been being done by",
    "start": "3363960",
    "end": "3370319"
  },
  {
    "text": "Yorn somebody sorry uh I don't have it name in front of me but um it's cut even",
    "start": "3370319",
    "end": "3376440"
  },
  {
    "text": "even faster and it's really a great way to build a website that looks nice and",
    "start": "3376440",
    "end": "3382319"
  },
  {
    "text": "is easy to update and um very usable yeah Hugo is really awesome it's",
    "start": "3382319",
    "end": "3387720"
  },
  {
    "text": "actually what um the Gopher con and gopher Academy sites are all running so",
    "start": "3387720",
    "end": "3393119"
  },
  {
    "text": "and even if you're not familiar with Hugo itself you're probably familiar with some of the projects that came out",
    "start": "3393119",
    "end": "3398240"
  },
  {
    "text": "of it um Cobra and Viper were both um by SPF 13 which is the frenia they're both",
    "start": "3398240",
    "end": "3405319"
  },
  {
    "text": "out of Hugo they were kind of abstracted Lessons Learned along the way so super cool project so mine today is actually",
    "start": "3405319",
    "end": "3413599"
  },
  {
    "text": "called cni the contain networking interface and I want to give a shout out to everybody who is involved in that",
    "start": "3413599",
    "end": "3419640"
  },
  {
    "text": "project because it's it's really cool for kubernetes for um networking logic it allows you to kind of inject your own",
    "start": "3419640",
    "end": "3427280"
  },
  {
    "text": "executable into the flow to um allocate an IP address or or set up routes when",
    "start": "3427280",
    "end": "3433760"
  },
  {
    "text": "containers are spawned up on things which it just makes kind of a complex problem much easier you don't have to go",
    "start": "3433760",
    "end": "3440920"
  },
  {
    "text": "in hacking kubernetes or or Docker or rocket they all Leverage dni themselves too so and with that we are out of time",
    "start": "3440920",
    "end": "3449799"
  },
  {
    "text": "unfortunately can I make one two two quick things you certainly can so many",
    "start": "3449799",
    "end": "3455440"
  },
  {
    "text": "things huge shout out shout outs to everybody in Brazil who are there for go",
    "start": "3455440",
    "end": "3460480"
  },
  {
    "text": "for com Brazil yes I I already see people having a great time the conference starts tomorrow so it's",
    "start": "3460480",
    "end": "3466240"
  },
  {
    "text": "tomorrow and Saturday and Eric is giving a great talk about kubernetes Eric you",
    "start": "3466240",
    "end": "3473160"
  },
  {
    "text": "didn't mention that so I have to um the talk is entitled I'm trying to find the the name of the talk here",
    "start": "3473160",
    "end": "3479720"
  },
  {
    "text": "please me kubernetes as seen seen on TV yes so check it out it's going to be at",
    "start": "3479720",
    "end": "3486920"
  },
  {
    "text": "cubec November 8 and 9 But Eric St is on November 9 So speaking of which because",
    "start": "3486920",
    "end": "3493319"
  },
  {
    "text": "of that we won't have a show next week um I think I'm I'm traveling for that",
    "start": "3493319",
    "end": "3499039"
  },
  {
    "text": "Brian's traveling I think he's in Amsterdam next week so I think everybody",
    "start": "3499039",
    "end": "3504799"
  },
  {
    "text": "is traveling so we will be skipping next week's show unless we can find uh time to squeeze one in not live in off time",
    "start": "3504799",
    "end": "3513200"
  },
  {
    "text": "but let's assume there's no show next week so with that uh I want to thank",
    "start": "3513200",
    "end": "3520000"
  },
  {
    "text": "everybody for being on the show today huge shout out to our sponsors both to",
    "start": "3520000",
    "end": "3525880"
  },
  {
    "text": "stack impact and code school um thank you to all of our live listeners and",
    "start": "3525880",
    "end": "3530960"
  },
  {
    "text": "future listeners definitely uh for this to your friends we are go time FM on",
    "start": "3530960",
    "end": "3536480"
  },
  {
    "text": "Twitter we have a go time FM channel on the Gopher slack if you are not",
    "start": "3536480",
    "end": "3541880"
  },
  {
    "text": "subscribed already go to go time. FM our website or our email and then I guess if",
    "start": "3541880",
    "end": "3548240"
  },
  {
    "text": "you want to be on the show or you have ideas for guests or topics for the show uh hit us up on github.com gotime",
    "start": "3548240",
    "end": "3556440"
  },
  {
    "text": "FMP and with that everybody goodbye thank you Nate goodbye thank",
    "start": "3556440",
    "end": "3563640"
  },
  {
    "text": "you [Music]",
    "start": "3563640",
    "end": "3584319"
  },
  {
    "text": "n",
    "start": "3584319",
    "end": "3587319"
  }
]