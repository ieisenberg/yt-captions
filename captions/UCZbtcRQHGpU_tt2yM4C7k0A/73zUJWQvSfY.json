[
  {
    "text": "you know go is unusual in that we have this talented well-paid employeed team at Google who's driving this major open",
    "start": "40",
    "end": "6480"
  },
  {
    "text": "source project we do try very hard to engage productively with the community and we've tried to increase our transparency over time you know I think",
    "start": "6480",
    "end": "13320"
  },
  {
    "text": "Russ Cox has done a lot of work to make The Proposal review process more transparent and things like that in the",
    "start": "13320",
    "end": "18800"
  },
  {
    "text": "end we also try and build a highly functioning cross functional team that leverages the diverse talents we have",
    "start": "18800",
    "end": "25080"
  },
  {
    "text": "like Cameron and alyses and several others and we believe this is an asset to the community we serve the community better by building this highly",
    "start": "25080",
    "end": "31519"
  },
  {
    "text": "functioning well-managed team so the question of governance comes down to what are the problems we're trying to",
    "start": "31519",
    "end": "37360"
  },
  {
    "text": "solve and this is where we want to hear the community like what's not happening that you would want to see happen because governance is a solution to a",
    "start": "37360",
    "end": "43440"
  },
  {
    "text": "problem and again we want to really understand the problem well to understand how best to serve the community in that",
    "start": "43440",
    "end": "50480"
  },
  {
    "text": "way big thanks to our partners Leno fley and launch Darkly we love Len they keep",
    "start": "50480",
    "end": "55840"
  },
  {
    "text": "it fast and simple get $100 in credit at l.com change log our bandwidth is",
    "start": "55840",
    "end": "61960"
  },
  {
    "text": "provided by fastly learn more at fastly.com and get your feature Flags power balun Darkly get a demo at launchd",
    "start": "61960",
    "end": "68960"
  },
  {
    "text": "dark.com this episode is brought to you by Source graph Source graph is universal code",
    "start": "68960",
    "end": "75119"
  },
  {
    "text": "search that let you move fast even in big code bases here's CTO and co-founder bangl explaining the problems that",
    "start": "75119",
    "end": "80920"
  },
  {
    "text": "Source grab solves for software teams yeah so at a high level the problems that Source graph solves it's this",
    "start": "80920",
    "end": "87200"
  },
  {
    "text": "problem of for any given developer there's kind of two types of code in the world roughly speaking there's the code",
    "start": "87200",
    "end": "93600"
  },
  {
    "text": "that you wrote and understand like the back of your hand and then there's the code that some idiot out there wrote or",
    "start": "93600",
    "end": "101079"
  },
  {
    "text": "you know alternatively if you know you don't like the term idiot it's the code that some inscrutable genius wrote and",
    "start": "101079",
    "end": "106799"
  },
  {
    "text": "that you're trying to understand and often times that inscrutable genius is like you from you know a year ago and",
    "start": "106799",
    "end": "112520"
  },
  {
    "text": "and you're going back and and trying to make heads or Tales of of what's going on and really Source graph is about",
    "start": "112520",
    "end": "118360"
  },
  {
    "text": "making that code that some idiot or inscribable genius wrote feel more like the code that you wrote and understand",
    "start": "118360",
    "end": "125960"
  },
  {
    "text": "kind of intuitively it's all about helping you grock all the code that's out there all the code that's in your organization all the code that is",
    "start": "125960",
    "end": "132599"
  },
  {
    "text": "relevant to you in open source all the code that you need to understand in order to do your job which is to build",
    "start": "132599",
    "end": "138440"
  },
  {
    "text": "the feature write the new code fix the bug Etc all right learn how sourcc can help your team at info. source.com",
    "start": "138440",
    "end": "145760"
  },
  {
    "text": "changelog again info. source.com [Music]",
    "start": "145760",
    "end": "157350"
  },
  {
    "text": "look let's do it let's go time welcome to go time your source for diverse",
    "start": "162959",
    "end": "170080"
  },
  {
    "text": "discussions from around the go Community this episode kicks off our gophercon coverage we had a blast making these",
    "start": "170080",
    "end": "176920"
  },
  {
    "text": "episodes for you and we hope to see everyone IRL at next year's conf subscribe now if you haven't at go time.",
    "start": "176920",
    "end": "184080"
  },
  {
    "text": "FM and follow the show on Twitter we are at gotime FM okay here we",
    "start": "184080",
    "end": "189210"
  },
  {
    "text": "[Music]",
    "start": "189210",
    "end": "196539"
  },
  {
    "text": "go hello and welcome to a very special go time Go foron mashup I'm Matt ryer",
    "start": "197560",
    "end": "205920"
  },
  {
    "text": "and today I'm going to be putting your questions to members of the go team so",
    "start": "205920",
    "end": "211200"
  },
  {
    "text": "please hang out in the Discord channel it's go team AMA ask your questions in",
    "start": "211200",
    "end": "216920"
  },
  {
    "text": "there let's see who's on the panel today then well we're joined by Samir ajmani",
    "start": "216920",
    "end": "222480"
  },
  {
    "text": "hello Samir engineering director and you run the go team right that's right I managed a go team at Google you",
    "start": "222480",
    "end": "228959"
  },
  {
    "text": "basically have to keep everyone happy and get them all paid I'm sure they appreciate it we're also joined by uh",
    "start": "228959",
    "end": "234760"
  },
  {
    "text": "Cameron balahan who's looking at the product side of go right ceron yeah",
    "start": "234760",
    "end": "240280"
  },
  {
    "text": "that's right uh I'm a product manager I'm one of two product leads for go along with Steve frania my focus in go",
    "start": "240280",
    "end": "246200"
  },
  {
    "text": "is primarily on the ID tools and security spaces but I also work across all of go especially as it relates to",
    "start": "246200",
    "end": "252400"
  },
  {
    "text": "how we position it in Google yeah very interesting to think of a programming language having a product I'm Keen to",
    "start": "252400",
    "end": "257560"
  },
  {
    "text": "dig into that a bit more we're also joined by Alice Merrick who's a ux researcher and You' run the the go",
    "start": "257560",
    "end": "263320"
  },
  {
    "text": "developer survey right Alice that's right if you took the go developer survey in the last couple of weeks thank",
    "start": "263320",
    "end": "269800"
  },
  {
    "text": "you very much I'm a part of a small group of ux people that we work on various things",
    "start": "269800",
    "end": "275880"
  },
  {
    "text": "but yeah the go developer survey is definitely the largest or most visible",
    "start": "275880",
    "end": "281039"
  },
  {
    "text": "one yeah what happens if you get nobody answering can you just have a day off that's never been a problem good we got",
    "start": "281039",
    "end": "288240"
  },
  {
    "text": "over 10,000 responses this year it was amazing oh wow yeah wow great yeah okay well we're also joined by Rob Finley rob",
    "start": "288240",
    "end": "296160"
  },
  {
    "text": "you do sort of the tool side of things particularly generics right recently correct yeah I'm on the go tools team at",
    "start": "296160",
    "end": "303199"
  },
  {
    "text": "Google I work on work on go pleas but ALS recently I've also been working on support for generics in the go type",
    "start": "303199",
    "end": "308560"
  },
  {
    "text": "Checker and parser yeah so very very cool everyone's very excited about generics and I'm Keen to also kind of",
    "start": "308560",
    "end": "315560"
  },
  {
    "text": "understand what the impact of these kind of big language decisions are on the tools because obviously it's a sort of",
    "start": "315560",
    "end": "321319"
  },
  {
    "text": "domino effect down the chain no doubt and last but not least we're joined by Keith Randall hello Keith you're sort of",
    "start": "321319",
    "end": "329080"
  },
  {
    "text": "what is your focus on the go team I work mostly on the runtime and compiler do",
    "start": "329080",
    "end": "334280"
  },
  {
    "text": "performance mainly although I've been working on some of the generics implementation recently very cool okay",
    "start": "334280",
    "end": "340479"
  },
  {
    "text": "so I feel like we're going to learn a lot about generics today which is exciting yeah so maybe we could kick off",
    "start": "340479",
    "end": "346400"
  },
  {
    "text": "then Samir we're asking questions that have come from the community so anybody watching live if you want to head over to the Discord and ask your questions we",
    "start": "346400",
    "end": "353319"
  },
  {
    "text": "will try and get them answered for you we've had some questions in already Samia the go team like when it started",
    "start": "353319",
    "end": "360560"
  },
  {
    "text": "it was just kind of a few people and it's grown so much over that time what",
    "start": "360560",
    "end": "365720"
  },
  {
    "text": "sort of challenges have you seen in that time as it's grown what's changed that's a great question yeah when I joined the",
    "start": "365720",
    "end": "371919"
  },
  {
    "text": "go team I think it was 12 people and now including our cross functional Partners were upwards of 50 wow and it's really",
    "start": "371919",
    "end": "378400"
  },
  {
    "text": "quite remarkable growth over a period of time but it's been a bit spiky so a lot of our recent growth was in 2018 2019",
    "start": "378400",
    "end": "385440"
  },
  {
    "text": "and so a lot of our time since there has really been about scaling our team and the way we work to really gel and you",
    "start": "385440",
    "end": "392440"
  },
  {
    "text": "know new processes and all the sort of managerial work to make sure the team works well but it has allowed us to take",
    "start": "392440",
    "end": "399199"
  },
  {
    "text": "go from just being a language to more of an end to end platform we have full-fledged IDE support we have the go",
    "start": "399199",
    "end": "405039"
  },
  {
    "text": "command which has been a platform ex all sorts of extensions of course there's our suite of libraries and then our web",
    "start": "405039",
    "end": "410639"
  },
  {
    "text": "Suite around go.d and package Discovery site so this larger team has enabled us to really build something much more",
    "start": "410639",
    "end": "417599"
  },
  {
    "text": "holistic so go feels like go throughout the various things developers have to do in order to succeed we've invested a lot",
    "start": "417599",
    "end": "423960"
  },
  {
    "text": "in having more cross functional Partners so on the call we have Cameron and Alice who are two examples and we have many",
    "start": "423960",
    "end": "429599"
  },
  {
    "text": "more challenge-wise scaling scaling the team scaling the user base scaling with",
    "start": "429599",
    "end": "435520"
  },
  {
    "text": "larger uses of code and a lot of this is driven by mainstream usage so instead of",
    "start": "435520",
    "end": "440720"
  },
  {
    "text": "our early adopters we're now dealing with mainstream adopters Enterprise adopters who are maybe looking for a",
    "start": "440720",
    "end": "446280"
  },
  {
    "text": "slightly different thing from go and security is top mind both for Enterprises and all the supply chain",
    "start": "446280",
    "end": "452360"
  },
  {
    "text": "security attacks and Cameron I'm sure can help speak to more to those issues yes that's very interesting then one of",
    "start": "452360",
    "end": "458280"
  },
  {
    "text": "the things about go that I think I appreciated when I first looked at the language was some of the principles like",
    "start": "458280",
    "end": "465280"
  },
  {
    "text": "the Simplicity and and some of the tradeoffs and the taste that was kind of in the design how do you make sure that",
    "start": "465280",
    "end": "471759"
  },
  {
    "text": "people that join the go team kind of really understand those principles is it something that you find you have to",
    "start": "471759",
    "end": "477039"
  },
  {
    "text": "teach a lot or do you find people that naturally think that way or does it not matter do you prefer the mix it used to",
    "start": "477039",
    "end": "483680"
  },
  {
    "text": "be that we hired a lot from the community in which case we were hiring like-minded people as we've grown and diversified there's a bit more of an",
    "start": "483680",
    "end": "490159"
  },
  {
    "text": "onboarding journey to sort of get the ethos across I think a lot of us peer-to-peer we you know new Engineers",
    "start": "490159",
    "end": "495759"
  },
  {
    "text": "will work with existing Engineers on the team within Google we have processes for",
    "start": "495759",
    "end": "500960"
  },
  {
    "text": "helping people learn how to use go and write idiomatic go and there's of course documents on this as well for example our Tech writer is a good example you",
    "start": "500960",
    "end": "507720"
  },
  {
    "text": "know he came in with great experience right for Enterprise users and had to learn really what the go voice was how",
    "start": "507720",
    "end": "513240"
  },
  {
    "text": "we communicate but he also educated us on how to better connect with the users so it's by directional that's very",
    "start": "513240",
    "end": "519399"
  },
  {
    "text": "interesting yeah so it's funny to think of go really starting out as a language and as you say growing and like that it",
    "start": "519399",
    "end": "526240"
  },
  {
    "text": "kind of makes sense that you have a product perspective on it so Cameron how does that work what sort of things do",
    "start": "526240",
    "end": "532640"
  },
  {
    "text": "you care about as the product person for Go the language and the tool chains and the community in the ecosystem yeah so",
    "start": "532640",
    "end": "540040"
  },
  {
    "text": "you know it's not that different from something that's not an open- Source language uh ecosystem every everything's",
    "start": "540040",
    "end": "546320"
  },
  {
    "text": "different in its own way we're not looking to you know monetize this or something like that sort so there are",
    "start": "546320",
    "end": "551440"
  },
  {
    "text": "some differences but really it's got the same sort of things any product would have you got to think about its",
    "start": "551440",
    "end": "556800"
  },
  {
    "text": "strategic Direction like the complete endtoend picture of what we're trying to accomplish and whether all the different",
    "start": "556800",
    "end": "563440"
  },
  {
    "text": "pieces are lined up to sort of get us there and then you also want to think about like what is the what hear the",
    "start": "563440",
    "end": "569480"
  },
  {
    "text": "voice of the user what is the sort of research we have and what have our users been telling us and how can we",
    "start": "569480",
    "end": "576240"
  },
  {
    "text": "synthesize all of that to try to add more value and and make go a better product a language that more folks want",
    "start": "576240",
    "end": "583160"
  },
  {
    "text": "to use to accomplish their goals and you know that's just our goal and just to try to keep that whole uh Vision",
    "start": "583160",
    "end": "589480"
  },
  {
    "text": "together and moving forward as a coherent whole rather than a bunch of individual pieces yeah have you seen any",
    "start": "589480",
    "end": "595959"
  },
  {
    "text": "examples so far of tension between sort of sort of technical perspective and a product perspective is that is it joined",
    "start": "595959",
    "end": "603200"
  },
  {
    "text": "up quite nicely because of the nature of the project or are there ever those sorts of disagreements between you you",
    "start": "603200",
    "end": "609600"
  },
  {
    "text": "know I'd say not that many disagreements really it's like the the whole go team",
    "start": "609600",
    "end": "614760"
  },
  {
    "text": "is interested in trying to make go a better experience and something that",
    "start": "614760",
    "end": "621160"
  },
  {
    "text": "contributes value so we're all hungry to figure that out and so you know we all sort of collaboratively work together to",
    "start": "621160",
    "end": "627560"
  },
  {
    "text": "try to do that it's like nobody is really trying to just go engineer something that uh is off the value path",
    "start": "627560",
    "end": "633800"
  },
  {
    "text": "everyone is looking to see what's next what are our customers really looking to do and how can we better service that so",
    "start": "633800",
    "end": "641480"
  },
  {
    "text": "I'd say the answer is no it's all been a very a good coherent thing together that's really interesting and of course",
    "start": "641480",
    "end": "647399"
  },
  {
    "text": "a big part of product is hearing from users as you say and so that's another unusual thing I think that you wouldn't",
    "start": "647399",
    "end": "654000"
  },
  {
    "text": "expect to have on an open source project of if it was just a programming language is a user research user experience",
    "start": "654000",
    "end": "660079"
  },
  {
    "text": "research what sorts of things do you research Alice yeah well I'll talk a",
    "start": "660079",
    "end": "665959"
  },
  {
    "text": "little bit about what I have researched and and also what some of my uh fellow",
    "start": "665959",
    "end": "671639"
  },
  {
    "text": "researchers have worked on so kind of the lower level stuff is too low level",
    "start": "671639",
    "end": "678360"
  },
  {
    "text": "for us we're kind of looking a little higher at you know things like developer workflows so how somebody might look for",
    "start": "678360",
    "end": "687480"
  },
  {
    "text": "documentation or packag when they are writing go for example things like when you are in your IDE",
    "start": "687480",
    "end": "694320"
  },
  {
    "text": "what kind of challenges do you have there when you're debugging looking for those kinds of challenges and and",
    "start": "694320",
    "end": "700079"
  },
  {
    "text": "opportunities of where could we improve something where could maybe uh introduce something new into the ecosystem as far",
    "start": "700079",
    "end": "707120"
  },
  {
    "text": "as tooling goes or smooth out some workflow there so those are kind of some of the interesting questions that we've",
    "start": "707120",
    "end": "713959"
  },
  {
    "text": "looked at another thing is that we we do run the annual survey so looking at you",
    "start": "713959",
    "end": "719680"
  },
  {
    "text": "know how happy are you know our people using go and like you know do we see more usage in particular areas and like",
    "start": "719680",
    "end": "726839"
  },
  {
    "text": "where opportunities that we might want to grow uh Cameron sort of mentioned leveraging some of that research on the",
    "start": "726839",
    "end": "733680"
  },
  {
    "text": "product side and then uh recently you know we we're looking at like you know what are people really concerned about",
    "start": "733680",
    "end": "740480"
  },
  {
    "text": "as go developers and what you know what other areas might we Branch into this",
    "start": "740480",
    "end": "746000"
  },
  {
    "text": "year I did a study that was looked at specific spefically people who considered using go and then didn't and",
    "start": "746000",
    "end": "752920"
  },
  {
    "text": "why and is there something that we could do there that would make it easier for",
    "start": "752920",
    "end": "758079"
  },
  {
    "text": "more people to use go if error doesn't equal nil isn't it that's the big complaint yeah actually no but uh what",
    "start": "758079",
    "end": "765639"
  },
  {
    "text": "is it then it's only a problem for people who are using go apparently Fair Point yeah yeah but that doesn't drive",
    "start": "765639",
    "end": "770760"
  },
  {
    "text": "people away I met somebody once and he just said I saw how many times I had to write that and I just thought no no like",
    "start": "770760",
    "end": "778160"
  },
  {
    "text": "proper dramatic sick yeah so he wasn't happy but that's true they you know and at that point they might not I might not",
    "start": "778160",
    "end": "784360"
  },
  {
    "text": "have even spoken to them cuz they didn't consider go seriously enough to even make it through the filter of people for",
    "start": "784360",
    "end": "790639"
  },
  {
    "text": "us to talk to I don't enough brutal that's true yeah that could have turned somebody off very early in the pipeline",
    "start": "790639",
    "end": "796839"
  },
  {
    "text": "and we just didn't find them yeah yeah yeah I think that's very interesting well you see I mean I actually like it I",
    "start": "796839",
    "end": "802440"
  },
  {
    "text": "love the fact that we sort of are faced with errors all the time and we have to deal with it in some way I think that is",
    "start": "802440",
    "end": "808199"
  },
  {
    "text": "it turns out a positive for us but yes I've heard that in the past so obviously generics is a big feature that's coming",
    "start": "808199",
    "end": "815399"
  },
  {
    "text": "and this was one that was talked about in the community for many years before this one is a reason why I've heard",
    "start": "815399",
    "end": "821440"
  },
  {
    "text": "people avoid go because for a particular class of problem generics kind of are perfect so Rob you've been tasked with",
    "start": "821440",
    "end": "829000"
  },
  {
    "text": "the responsibility of making generics work in the tools what kind of impact",
    "start": "829000",
    "end": "834519"
  },
  {
    "text": "does it have and what sort of work have you had to do there yeah I mean it's been really interesting to see the way",
    "start": "834519",
    "end": "840519"
  },
  {
    "text": "such a large language change propagates throughout the tools ecosystem and there there's been a lot of work on support",
    "start": "840519",
    "end": "846720"
  },
  {
    "text": "for generics in tools which is how I'm interpreting your question and I think there's a lot of work yet to do I'll say",
    "start": "846720",
    "end": "853000"
  },
  {
    "text": "that the it was nice to see how much just worked once we updated like the parser and type Checker a lot of things",
    "start": "853000",
    "end": "860040"
  },
  {
    "text": "in the basic editing of code in go pleas for example just worked but where we've seen the most update required is for",
    "start": "860040",
    "end": "868240"
  },
  {
    "text": "things like static analyzers things like the vet command that need to understand go code well now there's a whole new way",
    "start": "868240",
    "end": "876759"
  },
  {
    "text": "to understand go code you don't worry about the type of a variable anymore you",
    "start": "876759",
    "end": "881800"
  },
  {
    "text": "worry about which types of variable could be there's many types that are possible and so how do we manifest that",
    "start": "881800",
    "end": "887839"
  },
  {
    "text": "in tools is an interesting question and one that we're still exploring will people with experience like if they've",
    "start": "887839",
    "end": "894959"
  },
  {
    "text": "used the as stuff if they used those packages has that been completely Rewritten or is that just changed in a",
    "start": "894959",
    "end": "900560"
  },
  {
    "text": "lot because of generics no so we've had to preserve I mean we have the compatibility promise and we've kept",
    "start": "900560",
    "end": "905839"
  },
  {
    "text": "that promise so uh we have updated those packages to support generic code so we",
    "start": "905839",
    "end": "912040"
  },
  {
    "text": "introduced some new constructs into those packages but we've done it in what we hope is the least obtrusive way",
    "start": "912040",
    "end": "917959"
  },
  {
    "text": "possible and a lot of those packages deal with generic constructs like what's an object in a program and that we've",
    "start": "917959",
    "end": "924480"
  },
  {
    "text": "translated into the generic realm so that's why a lot of stuff just works because those packages were updated in",
    "start": "924480",
    "end": "930720"
  },
  {
    "text": "such a way that things just make sense I",
    "start": "930720",
    "end": "935480"
  },
  {
    "text": "[Music]",
    "start": "936980",
    "end": "945149"
  },
  {
    "text": "hope this episode is brought to you by our friends at launch darkley feature management for the modern Enterprise",
    "start": "946639",
    "end": "952880"
  },
  {
    "text": "power testing in production at any scale here's how it works launch Darkly enables development teams and oper ation",
    "start": "952880",
    "end": "958920"
  },
  {
    "text": "teams to deploy code at any time even if a feature isn't ready to release to users wrapping code with feature Flags",
    "start": "958920",
    "end": "965639"
  },
  {
    "text": "gives you the safety to test new features and infrastructure in your production environments without impacting the wrong end users when",
    "start": "965639",
    "end": "972360"
  },
  {
    "text": "you're ready to release more widely update the flag status and the changes are made instantaneously by the real-time streaming architecture",
    "start": "972360",
    "end": "979040"
  },
  {
    "text": "eliminate risk deliver value get started for free today at launch dark.com again",
    "start": "979040",
    "end": "984360"
  },
  {
    "text": "launch dark.com [Music]",
    "start": "984360",
    "end": "995120"
  },
  {
    "text": "[Applause] well yeah we have a question from Aaron on Discord and this related to this and",
    "start": "998220",
    "end": "1005680"
  },
  {
    "text": "Keith this might be a good one for you since you've worked on generics the compiler level the question was how are",
    "start": "1005680",
    "end": "1011199"
  },
  {
    "text": "you measuring success of generics how do we know if it was a good thing to have",
    "start": "1011199",
    "end": "1016319"
  },
  {
    "text": "done or not in say 5 years right well I think the the major signal there is adoption like how much do people",
    "start": "1016319",
    "end": "1022240"
  },
  {
    "text": "actually use it how much do they get value out of it and that's a very nebulous evaluator right so it's sort of",
    "start": "1022240",
    "end": "1027760"
  },
  {
    "text": "hard to say like if we get X adoption we've had success otherwise we fail",
    "start": "1027760",
    "end": "1033360"
  },
  {
    "text": "that's hard but we can look at more specific things like are there libraries",
    "start": "1033360",
    "end": "1039000"
  },
  {
    "text": "that people write that use generics that other people then use and so we can look for all kinds of signals about how much",
    "start": "1039000",
    "end": "1045160"
  },
  {
    "text": "is adoption is happening how much new sort of Interest code is being written how many people go",
    "start": "1045160",
    "end": "1051280"
  },
  {
    "text": "from a V1 to a V2 where V1 didn't have generics and V2 does so there's sort of things like that that we can look at I'm",
    "start": "1051280",
    "end": "1057960"
  },
  {
    "text": "sort of look at generics at a much lower level which is make sure it doesn't crash make sure that it's as fast as",
    "start": "1057960",
    "end": "1065640"
  },
  {
    "text": "writing the code out with a code generator sort of all that side of stuff and that I can get more concrete",
    "start": "1065640",
    "end": "1072679"
  },
  {
    "text": "evaluations of that that sort of thing and so that's sort of where I'm at I think at a higher level at like Samir",
    "start": "1072679",
    "end": "1078600"
  },
  {
    "text": "level they're thinking more about how do we measure adoption that's a more nebulous thing I'm very concerned about",
    "start": "1078600",
    "end": "1085240"
  },
  {
    "text": "is generics 2% slower and is that enough or is it too much and why and can we fix",
    "start": "1085240",
    "end": "1090760"
  },
  {
    "text": "it that's the sort of stuff I concentrate on I can pick this up if you're if you want to hear the higher level success criteria like for the last",
    "start": "1090760",
    "end": "1097480"
  },
  {
    "text": "several years you we've been running the developer survey now I think at least since 2016 yeah this is a six year wow",
    "start": "1097480",
    "end": "1103880"
  },
  {
    "text": "right a few things have been sitting at the top of the what I want from go list and generics has been number one",
    "start": "1103880",
    "end": "1110520"
  },
  {
    "text": "dependency management I think was up there if you look at our issue tracker fuzzing is up there and you know better",
    "start": "1110520",
    "end": "1116080"
  },
  {
    "text": "support my editor we've really you taken all of that to heart and really you know",
    "start": "1116080",
    "end": "1121240"
  },
  {
    "text": "we took our time with generics because we needed it to feel like go and I think Robert and Ian's talk this morning",
    "start": "1121240",
    "end": "1126480"
  },
  {
    "text": "really showed the effort that was taken to really make it fit with the language really beautifully our hope is that it's",
    "start": "1126480",
    "end": "1133520"
  },
  {
    "text": "not necessar that we need people to adopt generics a lot so it's not like more generics is better",
    "start": "1133520",
    "end": "1138919"
  },
  {
    "text": "but generics should solve the problem it's designed to solve and so we want to really see that whatever problem people",
    "start": "1138919",
    "end": "1146480"
  },
  {
    "text": "were saying oh we need generics to solve that concern goes away and if we've",
    "start": "1146480",
    "end": "1151720"
  },
  {
    "text": "resolved that concern if we've resolved dependency management vulnerability scanning is another one right we resolve",
    "start": "1151720",
    "end": "1157320"
  },
  {
    "text": "that what then starts bubbling up in the concern list right so this allows us to look at the next set of concerns and",
    "start": "1157320",
    "end": "1163159"
  },
  {
    "text": "resolve that and hopefully we just keep making go for better for the users over time and if people want to influence",
    "start": "1163159",
    "end": "1169440"
  },
  {
    "text": "that process then I guess the developer survey is the way that you're asking them to do that that's a good way to do it definitely yeah definitely tell me",
    "start": "1169440",
    "end": "1176600"
  },
  {
    "text": "all about it yeah okay so here's an interesting question from Segal ax do",
    "start": "1176600",
    "end": "1181880"
  },
  {
    "text": "you expect there will be any changes to error handling idioms post generics so",
    "start": "1181880",
    "end": "1187039"
  },
  {
    "text": "this is kind of a general question in lots of ways so Matt we did try",
    "start": "1187039",
    "end": "1193240"
  },
  {
    "text": "MH you certainly did we'll put the thumbs in in post don't worry that definitely deserves one yeah so we we",
    "start": "1193240",
    "end": "1199840"
  },
  {
    "text": "did explore simplifying air handling with the try proposal a few years ago",
    "start": "1199840",
    "end": "1205080"
  },
  {
    "text": "and our assessment or the assessment of the community really not ours was that it didn't make things better that the",
    "start": "1205080",
    "end": "1211559"
  },
  {
    "text": "explicitness the debuggability of the current way of handling errors was",
    "start": "1211559",
    "end": "1217039"
  },
  {
    "text": "simply better that all the work we tried to do with sort of condensing the syntax then moving the handlers up to defer it",
    "start": "1217039",
    "end": "1223720"
  },
  {
    "text": "just made things worse and so I think this is a case where we really want to",
    "start": "1223720",
    "end": "1229240"
  },
  {
    "text": "understand what is the problem right that users are struggling with and I think people like Alice and Todd or",
    "start": "1229240",
    "end": "1236039"
  },
  {
    "text": "other ux researcher can really help us dig into that that'll help us understand what solution we should be going for but",
    "start": "1236039",
    "end": "1241880"
  },
  {
    "text": "I think we need to understand the problem better first I think it is an interesting question of whether generics",
    "start": "1241880",
    "end": "1247720"
  },
  {
    "text": "is a new tool in the toolbox that can make a new interesting design that may be better in some way or another I don't",
    "start": "1247720",
    "end": "1254360"
  },
  {
    "text": "think anyone's come up with a good answer to that question yet but it's certainly something to explore yeah I",
    "start": "1254360",
    "end": "1259960"
  },
  {
    "text": "mean for sure like if you've got code that's working in a generic way I expect the errors to kind of work in a generic",
    "start": "1259960",
    "end": "1266360"
  },
  {
    "text": "way potentially like if it's going to return some object that contains a value that you know there's some error to the",
    "start": "1266360",
    "end": "1272400"
  },
  {
    "text": "value or whatever then I could see that kind of thing happening quite easily is anyone worried about us overusing",
    "start": "1272400",
    "end": "1279480"
  },
  {
    "text": "generics this is one of the big arguments that people make against having genics in the language is that it",
    "start": "1279480",
    "end": "1285640"
  },
  {
    "text": "can be abused how do we feel about that are we worried yes so what's the remedy education I",
    "start": "1285640",
    "end": "1293559"
  },
  {
    "text": "think setting a good example but honestly we need the community to help with this this isn't something that can come top down right I think go has a",
    "start": "1293559",
    "end": "1301840"
  },
  {
    "text": "reputation for being a simple comprehensible readable language it is very easy to use generics to create",
    "start": "1301840",
    "end": "1308039"
  },
  {
    "text": "things that make code inscrutable and so I think we as a community when we do code review when we adopt libraries need",
    "start": "1308039",
    "end": "1315600"
  },
  {
    "text": "to be conscious of the trade-off we make between perhaps a deep functional oneliner that is very concise but very",
    "start": "1315600",
    "end": "1322880"
  },
  {
    "text": "inscrutable hard to debug hard to manage the performance of it versus the more explicit way we write things and go that",
    "start": "1322880",
    "end": "1330880"
  },
  {
    "text": "yeah cost you a little bit more typing but when you have to debug it and optimize it it's way simpler so that's",
    "start": "1330880",
    "end": "1337080"
  },
  {
    "text": "where my head is at but I would love to hear from others on the panel any of the takers yeah one thing that is coming out",
    "start": "1337080",
    "end": "1343919"
  },
  {
    "text": "in 118 is generics for the core but like much of the standard Library doesn't have any generics in it m in fact there",
    "start": "1343919",
    "end": "1351320"
  },
  {
    "text": "are only a couple packages that were added that have generics in it most of the rest of the standard library is still pre- generics and so we want to",
    "start": "1351320",
    "end": "1359000"
  },
  {
    "text": "find a way in probably in 119 to make some of those packages generic and when",
    "start": "1359000",
    "end": "1364120"
  },
  {
    "text": "we do that we'd like to set a good example by making them generic in a way that makes sense yeah and so I think to",
    "start": "1364120",
    "end": "1370600"
  },
  {
    "text": "some extent we'll be piloting a good experience with converting existing code",
    "start": "1370600",
    "end": "1376520"
  },
  {
    "text": "to generics and maybe a in addition you know adding like the maps package or whatever some other new package and what",
    "start": "1376520",
    "end": "1382559"
  },
  {
    "text": "does a good generic code look like and I think that will help and if you're interested in what good generic code",
    "start": "1382559",
    "end": "1388159"
  },
  {
    "text": "looks like and don't want to wait for 119 you can sort of follow along in the CLS or on the issues to look at what the",
    "start": "1388159",
    "end": "1394200"
  },
  {
    "text": "prototypes look like MH very cool so do you expect there to be generic versions",
    "start": "1394200",
    "end": "1400000"
  },
  {
    "text": "of some of the libraries and you can kind of have both because of the backwards compatibility or will there be",
    "start": "1400000",
    "end": "1405480"
  },
  {
    "text": "types alongside non-generic types inside the packages how do you see that happening well we're certainly not going",
    "start": "1405480",
    "end": "1411120"
  },
  {
    "text": "to break any existing code so we sort of have to leave the things as is there's some discussion about how we might add",
    "start": "1411120",
    "end": "1416919"
  },
  {
    "text": "generics in a backwards compatible way to function so that sort of the type inference all magically works out I",
    "start": "1416919",
    "end": "1422919"
  },
  {
    "text": "don't think we know whether that's possible yet but we're talking about it and if not then there'll be a set of parallel different packages or different",
    "start": "1422919",
    "end": "1429480"
  },
  {
    "text": "names within the same package that will be the generic versions of various things like container list and whatever",
    "start": "1429480",
    "end": "1434559"
  },
  {
    "text": "else yeah interesting and you can automate migration from you know the say interface based version to a generic",
    "start": "1434559",
    "end": "1440320"
  },
  {
    "text": "version as well that should be fairly straightforward I see yeah help people out with tools and speaking of tools I",
    "start": "1440320",
    "end": "1447480"
  },
  {
    "text": "wonder what was like Kon the the biggest challenge what was the hardest thing to",
    "start": "1447480",
    "end": "1452559"
  },
  {
    "text": "do when trying to get generics to work with the tools was there one thing in particular that stood out as difficult I",
    "start": "1452559",
    "end": "1458600"
  },
  {
    "text": "would say that Robert's probably the better one to speak to this but I can say that the overall theme has been that",
    "start": "1458600",
    "end": "1465760"
  },
  {
    "text": "because this is the biggest change that we've ever made to The Language by its nature it's very deliberate I couldn't",
    "start": "1465760",
    "end": "1472039"
  },
  {
    "text": "identify a specific thing as well as Robert could though so maybe I'll yield to him to potentially give you better",
    "start": "1472039",
    "end": "1477360"
  },
  {
    "text": "answer than that okay Robert over to you yeah I mean I can tell you the package oh yeah the more that a tool needs to",
    "start": "1477360",
    "end": "1484360"
  },
  {
    "text": "understand about your go program the more difficult it's going to be to update and so um in our code base the",
    "start": "1484360",
    "end": "1491440"
  },
  {
    "text": "most sophisticated package that we have like this is the SSA package and so there's still more work to be done there",
    "start": "1491440",
    "end": "1497840"
  },
  {
    "text": "and I know other external third party tools like static check also use a form of SSA so those things are hardest to",
    "start": "1497840",
    "end": "1504960"
  },
  {
    "text": "update M so with like the reflect package is it that there'll be extra",
    "start": "1504960",
    "end": "1510159"
  },
  {
    "text": "methods and things in there but all the other stuff will still work but you need like there'll be a way to find out if",
    "start": "1510159",
    "end": "1517000"
  },
  {
    "text": "it's a generic type and things like that get added so it it turns out that a lot of the reflect or a lot of the generic",
    "start": "1517000",
    "end": "1523360"
  },
  {
    "text": "stuff is completely gone by the time you get to runtime so there's very little in reflect that needs to understand",
    "start": "1523360",
    "end": "1529360"
  },
  {
    "text": "anything about generics does it just see the types that they end up being then right so if you have a generic function",
    "start": "1529360",
    "end": "1535080"
  },
  {
    "text": "that has a generic type in it and you make a reflect value out of that thing",
    "start": "1535080",
    "end": "1540399"
  },
  {
    "text": "if you ask what type it is it'll be the real concrete type of it it won't be the generic type of it ah okay so almost",
    "start": "1540399",
    "end": "1546440"
  },
  {
    "text": "everything in generics is in the compiler there's some stuff at runtime but it's pretty minor like printing",
    "start": "1546440",
    "end": "1552000"
  },
  {
    "text": "better stack traces than you would get otherwise and various inlining heris stics and stuff but all that stuff",
    "start": "1552000",
    "end": "1557960"
  },
  {
    "text": "occurs a compile time there's very little at run time that you need to worry about and particularly reflect is",
    "start": "1557960",
    "end": "1563760"
  },
  {
    "text": "all going to have work the same way as it did the names will be a little weirder because they'll have brackets in them but otherwise you won't notice a",
    "start": "1563760",
    "end": "1569720"
  },
  {
    "text": "difference that's very interesting then yeah so sorry yeah Rob I was going to say Keith just reminded me of one other",
    "start": "1569720",
    "end": "1575919"
  },
  {
    "text": "thing that was difficult which was producing good error messages ah right yeah well we do appreciate good error",
    "start": "1575919",
    "end": "1581120"
  },
  {
    "text": "messages to be fair so is worth it and actually that's an interesting kind of point when we think of like generics was",
    "start": "1581120",
    "end": "1588159"
  },
  {
    "text": "at the top of the the developer survey most wanted list for a while but how do",
    "start": "1588159",
    "end": "1593960"
  },
  {
    "text": "you decide what to work on how does that happen does it happen somewhat organically do you have some process",
    "start": "1593960",
    "end": "1599600"
  },
  {
    "text": "where you think about it and I'd also like to hear your thoughts more generally and we had a question",
    "start": "1599600",
    "end": "1604799"
  },
  {
    "text": "specifically on Twitter from Tim Heckman who asked about governance and how you think it should be like how these things",
    "start": "1604799",
    "end": "1611159"
  },
  {
    "text": "should work and will work in the future I guess I'll take this one you know we do want to be informed by our users so",
    "start": "1611159",
    "end": "1616960"
  },
  {
    "text": "we start with our users in the developer survey as one example but Alison her partner Todd on ux team have done a",
    "start": "1616960",
    "end": "1623200"
  },
  {
    "text": "number of studies to really help us zero in on pain points and then our product",
    "start": "1623200",
    "end": "1628360"
  },
  {
    "text": "team Cameron and Steve look at the broader ecosystem look at specific users use cases they look at they look at",
    "start": "1628360",
    "end": "1635600"
  },
  {
    "text": "things in Aggregate and also look at the Strategic landscape like how is software engineering changing so as I mentioned",
    "start": "1635600",
    "end": "1641600"
  },
  {
    "text": "earlier one thing top of mind is security when we interviewed certain large scale Enterprise customers one of",
    "start": "1641600",
    "end": "1647039"
  },
  {
    "text": "their first question is how do we check go programs for vulnerabilities and there's a compliance reason for that but",
    "start": "1647039",
    "end": "1652080"
  },
  {
    "text": "it turns out when we interviewed the users like is top of mind for all the developers because it's scary right and",
    "start": "1652080",
    "end": "1658240"
  },
  {
    "text": "so we knew we wanted to make that streamlined and easy and it turns out that the work we did on modules actually",
    "start": "1658240",
    "end": "1663440"
  },
  {
    "text": "really helps us with this right so we're able to build a vulnerability checking system that leverages modules and",
    "start": "1663440",
    "end": "1669480"
  },
  {
    "text": "packages and then we have a a team that works on deep static analysis we're able to leverage their work to really build",
    "start": "1669480",
    "end": "1676360"
  },
  {
    "text": "something much more precise and you might get just checking the module level for finding vulnerabilities so it's a",
    "start": "1676360",
    "end": "1681720"
  },
  {
    "text": "bit of looking at what developers are concerned about and how to meet those needs and also looking at what assets we",
    "start": "1681720",
    "end": "1688440"
  },
  {
    "text": "have like the fact that we have modules the fact that we have static analysis means we can do something really",
    "start": "1688440",
    "end": "1693799"
  },
  {
    "text": "interesting that still helps solve the user problem but in a differentiated and better way we save you time by",
    "start": "1693799",
    "end": "1699039"
  },
  {
    "text": "eliminating a lot of false vulnerability reports for example that's just one example I think the other major driver",
    "start": "1699039",
    "end": "1705640"
  },
  {
    "text": "is that we have a lot of users and use are going to have production issues scaling issues performance issues and",
    "start": "1705640",
    "end": "1710880"
  },
  {
    "text": "we'll get reports from all over the place and then we've got our IDE and web so we do listen to our users and we",
    "start": "1710880",
    "end": "1716159"
  },
  {
    "text": "prioritize the issues we're hearing from them and some of those turn into larger projects to make you know strategic",
    "start": "1716159",
    "end": "1721640"
  },
  {
    "text": "changes to what we have I'll add a little bit um it is a bit organic actually you know uh we all sort of",
    "start": "1721640",
    "end": "1727200"
  },
  {
    "text": "think about this together we take all the data that we have uh we synthesize it we try to see what's prevalent in the",
    "start": "1727200",
    "end": "1733440"
  },
  {
    "text": "landscape overall and and how we're fitting in that scheme team we're also",
    "start": "1733440",
    "end": "1738559"
  },
  {
    "text": "thinking and this is similar to something Samir said um but maybe a little bit different is we think about the whole endtoend experience we think",
    "start": "1738559",
    "end": "1746440"
  },
  {
    "text": "about like what it's like to be a go developer what you were trying to achieve as a go developer and you know",
    "start": "1746440",
    "end": "1752600"
  },
  {
    "text": "of those options how can we be sure that each part of that chain is accounted for",
    "start": "1752600",
    "end": "1759000"
  },
  {
    "text": "and is a good experience and if it's not a good experience how can we make it a good experience and then we think about",
    "start": "1759000",
    "end": "1764279"
  },
  {
    "text": "how we're going to integrate with like you know security for example which is a a really important topic right now and",
    "start": "1764279",
    "end": "1769880"
  },
  {
    "text": "we know that you know go is very well positioned for that because it's always you know has a strong focus on security from the start and now that it's",
    "start": "1769880",
    "end": "1776120"
  },
  {
    "text": "becoming a more important scarier issue we think we're well positioned to to work our strengths think about that end",
    "start": "1776120",
    "end": "1783200"
  },
  {
    "text": "to end and say all right at this stage what kind of security would I want to be",
    "start": "1783200",
    "end": "1788279"
  },
  {
    "text": "thinking about as a developer do I want what what vulnerabilities do I want to know about right now and what do I not",
    "start": "1788279",
    "end": "1795000"
  },
  {
    "text": "want to know about at some certain stage what might overwhelm me and and detract from the overall experience so the sum",
    "start": "1795000",
    "end": "1801919"
  },
  {
    "text": "of my my message there is we try to think about it holistically and we start with the user in mind and and the user's",
    "start": "1801919",
    "end": "1809240"
  },
  {
    "text": "goal as the sort of end of this journey and we try to pack in all of our data and everything that we learn and and",
    "start": "1809240",
    "end": "1815240"
  },
  {
    "text": "then talk about it internally and you know we're all very passionate about making go a better product so together",
    "start": "1815240",
    "end": "1821000"
  },
  {
    "text": "we're able to accomplish this and we're always interested in hearing from the users as to how we're doing and how we",
    "start": "1821000",
    "end": "1826159"
  },
  {
    "text": "can do better and what we may be missing yeah very interesting and actually there was a release today on this very day go",
    "start": "1826159",
    "end": "1834360"
  },
  {
    "text": "117.5 and 1.16.2 were released and that was a they're somewhat probably easier",
    "start": "1834360",
    "end": "1840480"
  },
  {
    "text": "decisions to make because these are security related what's the sort of process for that how do they happen and",
    "start": "1840480",
    "end": "1847080"
  },
  {
    "text": "at what point is there a decision that this is important enough that we're going to do an an update and a release",
    "start": "1847080",
    "end": "1852120"
  },
  {
    "text": "we have an extremely talented security and releases teams who make these decisions and they basically say say we",
    "start": "1852120",
    "end": "1857799"
  },
  {
    "text": "need to do this and we say we're not even in their way basically I got told yesterday that it was happening I got told this morning that it was done and",
    "start": "1857799",
    "end": "1864519"
  },
  {
    "text": "you know there's a deep trust and the expertise these team have yeah no one's going to say to the security team nah",
    "start": "1864519",
    "end": "1869919"
  },
  {
    "text": "it'll be fine you can never say that can you you only live once yeah what Cameron",
    "start": "1869919",
    "end": "1875200"
  },
  {
    "text": "described and what we were just describing Bridge is a bit over into governance you know go is unusual in that we have this talented well-paid",
    "start": "1875200",
    "end": "1882760"
  },
  {
    "text": "employee team at Google who's driving this major open source project we do try",
    "start": "1882760",
    "end": "1888240"
  },
  {
    "text": "very hard to engage productively with the community and we've tried to increase our transparency over time you",
    "start": "1888240",
    "end": "1893600"
  },
  {
    "text": "know I think Russ Cox has done a lot of work to make The Proposal review process more transparent and things like that in",
    "start": "1893600",
    "end": "1900159"
  },
  {
    "text": "the end we also try and build a highly functioning cross functional team that",
    "start": "1900159",
    "end": "1905320"
  },
  {
    "text": "you know leverages the diverse talents we have like Camerons and alyses and several others and we believe this is an",
    "start": "1905320",
    "end": "1911200"
  },
  {
    "text": "asset to the community we serve the community better by building this highly functioning well-managed team if I can",
    "start": "1911200",
    "end": "1916840"
  },
  {
    "text": "take some credit for that so the question of governance comes down to what are the problems we're trying to",
    "start": "1916840",
    "end": "1922799"
  },
  {
    "text": "solve right and this is where we want to he a community like what's not happening that you would want to see happen",
    "start": "1922799",
    "end": "1928519"
  },
  {
    "text": "because governance is a solution to a problem and again we' want to really understand the problem well to understand how best to serve the",
    "start": "1928519",
    "end": "1934480"
  },
  {
    "text": "community in that [Music]",
    "start": "1934480",
    "end": "1946080"
  },
  {
    "text": "way [Music]",
    "start": "1946080",
    "end": "1953530"
  },
  {
    "text": "this episode is brought to you by honeycomb honeycomb is built on the belief that there's a more efficient way",
    "start": "1954039",
    "end": "1960480"
  },
  {
    "text": "to understand exactly what is happening in production right now when production is running slow it's hard to know",
    "start": "1960480",
    "end": "1966399"
  },
  {
    "text": "exactly where problems originate is it your application code your users or the underlying systems teams who don't use",
    "start": "1966399",
    "end": "1973279"
  },
  {
    "text": "honeycomb scroll through endless dashboards guessing at what they mean they deal with alert floods guessing",
    "start": "1973279",
    "end": "1978840"
  },
  {
    "text": "which ones matter and go from tool to tool to Tool guessing at how the puzzle pieces all fit together it's this",
    "start": "1978840",
    "end": "1984279"
  },
  {
    "text": "context switching and Tool sprawl that is slowly killing your teams and your business with honeycom you get a fast",
    "start": "1984279",
    "end": "1990000"
  },
  {
    "text": "unified and clear understanding of the one thing driving your business production honeycom quickly shows you",
    "start": "1990000",
    "end": "1995679"
  },
  {
    "text": "the correct source of issues discover hidden problems even in the most complex Stacks understand why app feels slow to",
    "start": "1995679",
    "end": "2002399"
  },
  {
    "text": "only some users with honeycomb you guess less and no more join the SW and try",
    "start": "2002399",
    "end": "2007559"
  },
  {
    "text": "honeycomb free today at honeycomb.io changelog again honeycomb.io changelog and by our",
    "start": "2007559",
    "end": "2014760"
  },
  {
    "text": "friends at Lino cut your Cloud builds in half with Len's Linux virtual machines develop deploy and scale your modern",
    "start": "2014760",
    "end": "2020480"
  },
  {
    "text": "apps faster and easier whether you're developing a personal project or managing larger workloads you deserve",
    "start": "2020480",
    "end": "2026480"
  },
  {
    "text": "simple affordable and accessible cloud computing Solutions you can get started today for free with aund credit at",
    "start": "2026480",
    "end": "2032080"
  },
  {
    "text": "lin.com gotime lenoe has data centers all around the world the same simple and",
    "start": "2032080",
    "end": "2037840"
  },
  {
    "text": "consistent pricing regardless of location choose the data center that makes the most sense to you close to you whatever you have access to 24/7 365",
    "start": "2037840",
    "end": "2045679"
  },
  {
    "text": "human support with no tiar or handoffs regardless of your plan size you can choose shared or dedicated Compu",
    "start": "2045679",
    "end": "2051919"
  },
  {
    "text": "instances or you can use that credit on S3 compatible object storage manage kubernetes and so much more if it runs",
    "start": "2051919",
    "end": "2058720"
  },
  {
    "text": "on Linux it runs on lenoe head to lin.com gotime again click on the free",
    "start": "2058720",
    "end": "2064158"
  },
  {
    "text": "Account button get that credit get started today once again lin.com",
    "start": "2064159",
    "end": "2070480"
  },
  {
    "text": "[Music]",
    "start": "2070550",
    "end": "2082249"
  },
  {
    "text": "[Music] gotime okay so we got a fun question",
    "start": "2084889",
    "end": "2091118"
  },
  {
    "text": "coming at you now we're going to do a quick Round Table just going to say your name and then just tell me what I IDE",
    "start": "2091119",
    "end": "2097320"
  },
  {
    "text": "you use dayto day generally Samia what is your IDE Google Docs at",
    "start": "2097320",
    "end": "2103160"
  },
  {
    "text": "gmail no and the rare times that I code it's vs code because I I want to use what the team is developing vs code ID",
    "start": "2103160",
    "end": "2109760"
  },
  {
    "text": "plugin go please but it's rare that I get the code sad yeah I should just say",
    "start": "2109760",
    "end": "2115160"
  },
  {
    "text": "this question came in from Billy drop tables and Billy wants to know what everyone's ID is camon do you use an IDE",
    "start": "2115160",
    "end": "2122240"
  },
  {
    "text": "well I certainly don't do any of that for work but in my own time I am a Vim",
    "start": "2122240",
    "end": "2127480"
  },
  {
    "text": "user but also a vs code user because I like to use our products and know know what's going on MH but previously Vim oh",
    "start": "2127480",
    "end": "2135119"
  },
  {
    "text": "VI previously emac over here oh there we go yeah it didn't take long did it",
    "start": "2135119",
    "end": "2140640"
  },
  {
    "text": "you've just done some loads of street cred though Comon by the way Alice how about you what's your idea of choice",
    "start": "2140640",
    "end": "2146839"
  },
  {
    "text": "I've actually got vs code on in in the background here I I don't have to code",
    "start": "2146839",
    "end": "2152280"
  },
  {
    "text": "very often mostly it's just our scripts because I'm just doing some data analysis but uh vs code is it's handy",
    "start": "2152280",
    "end": "2160359"
  },
  {
    "text": "yeah and you've got it open now you're just working on something while you're doing this yeah I was just working on generating some",
    "start": "2160359",
    "end": "2167319"
  },
  {
    "text": "graphs fair enough non taken Alice to be honest this fraction of your attention we're getting is great so yeah don't",
    "start": "2167319",
    "end": "2174319"
  },
  {
    "text": "feel bad I mean it's definitely on a different screen you know it's like oh what what can you ask for not even",
    "start": "2174319",
    "end": "2180200"
  },
  {
    "text": "looking at it yeah it doesn't count if it's not on the same screen it's not rude yeah Rob how about you you work on",
    "start": "2180200",
    "end": "2188119"
  },
  {
    "text": "tools a lot so do you have to use the same ones that the users are using too I primarily use VM but I also you know",
    "start": "2188119",
    "end": "2195280"
  },
  {
    "text": "work on VSS code so I use VSS code as well so I can understand the way that go please looks in VSS code and in vim and",
    "start": "2195280",
    "end": "2202240"
  },
  {
    "text": "sometimes I even use emac oh there you go and then what about you Keith what's your IDE I'm an emac diard yeah so I use",
    "start": "2202240",
    "end": "2209160"
  },
  {
    "text": "emac with a bunch of plugins I've I've tried the VSS code oh sorry the go please plugin which works pretty well",
    "start": "2209160",
    "end": "2215160"
  },
  {
    "text": "and I've got that set up on my Linux machines I still don't have it set up on my Mac which I need to do and that's sort of my primary sit down and code",
    "start": "2215160",
    "end": "2222240"
  },
  {
    "text": "platform so I still don't use it day-to-day but I have used it in the past but yeah emac is my editor yeah",
    "start": "2222240",
    "end": "2227720"
  },
  {
    "text": "these text based editors when when cuz I'm I use the mouse or trackpad I've never been into that and I used to have",
    "start": "2227720",
    "end": "2234000"
  },
  {
    "text": "Windows and so there was so much point and click and stuff in Ms access and",
    "start": "2234000",
    "end": "2239839"
  },
  {
    "text": "Visual Basic but yeah when I see that it it's it looks like magic still it looks like the Matrix that people are taing",
    "start": "2239839",
    "end": "2245960"
  },
  {
    "text": "stuff and things are happening it's amazing I love it so okay we have another question here from",
    "start": "2245960",
    "end": "2253760"
  },
  {
    "text": "makaki they say hi go team if there was anything you wanted to remove from go",
    "start": "2253760",
    "end": "2259040"
  },
  {
    "text": "what would it be and so this is assuming that there's like a goto or you can do breaking changes now what would you",
    "start": "2259040",
    "end": "2266119"
  },
  {
    "text": "break and Keith since we're chatting why don't you start H that's a good question",
    "start": "2266119",
    "end": "2271800"
  },
  {
    "text": "I'm not a big fan of the three argument slice operation I think there should be a slice to length and slice to capacity",
    "start": "2271800",
    "end": "2278880"
  },
  {
    "text": "operations as separate things ah and I lost that argument many years ago when",
    "start": "2278880",
    "end": "2283920"
  },
  {
    "text": "we first edit it and I'm still angry about it so you would have had two so you",
    "start": "2283920",
    "end": "2290200"
  },
  {
    "text": "could either specify the capacity or the length is that right right yeah I need",
    "start": "2290200",
    "end": "2295680"
  },
  {
    "text": "to think about one that you often don't want to modify the capacity you're generally just slicing because of the",
    "start": "2295680",
    "end": "2300760"
  },
  {
    "text": "length and it's only occasionally when you need to talk about the capacity yeah in which case you don't need to talk about the length or you could do that as",
    "start": "2300760",
    "end": "2307200"
  },
  {
    "text": "a separate slice it makes the language a little bit simpler but yeah otherwise it's not a huge deal it doesn't come up",
    "start": "2307200",
    "end": "2313480"
  },
  {
    "text": "one way or the other either all that much yeah no but that's a nice answer Rob do you have an answer for this what",
    "start": "2313480",
    "end": "2320160"
  },
  {
    "text": "would you like to get rid of it's really tough uh nothing significant it's easy",
    "start": "2320160",
    "end": "2325720"
  },
  {
    "text": "to answer this once we land generics right there's a lot of stuff that we would write differently if we had",
    "start": "2325720",
    "end": "2331000"
  },
  {
    "text": "generics a lot of the built-in functions would be just a a generic function yeah so I think",
    "start": "2331000",
    "end": "2337079"
  },
  {
    "text": "that's probably maybe it's a cop out but that's my answer no but that's a good point and like with generics that's the",
    "start": "2337079",
    "end": "2343760"
  },
  {
    "text": "interesting thing isn't it you almost wish you could just go back and rewrite the standard library and this and to be",
    "start": "2343760",
    "end": "2349000"
  },
  {
    "text": "honest there's even code in the standard library that doesn't now look very go because it was written so early so",
    "start": "2349000",
    "end": "2355440"
  },
  {
    "text": "that's sort of always the curse you bear really with the backwards compatibility promise but everyone's grateful I think",
    "start": "2355440",
    "end": "2361680"
  },
  {
    "text": "for that promise any of this anyone else got anything that they'd remove from going if they were allowed to Samir what",
    "start": "2361680",
    "end": "2368520"
  },
  {
    "text": "would you do I I'll mention a few range variable Loop capture so this is just bites all of us when we write a closure",
    "start": "2368520",
    "end": "2374640"
  },
  {
    "text": "inside a Range Loop that may still be fixable depends I think the the confusion around nil pointers inside an",
    "start": "2374640",
    "end": "2381119"
  },
  {
    "text": "interface and that not being nil itself like the whole question of the ReUse of nil in interfaces just creates a lot of",
    "start": "2381119",
    "end": "2387160"
  },
  {
    "text": "confusion I wonder if we could have done better there and buff iio scanner I don't like apis where you know you run a",
    "start": "2387160",
    "end": "2394599"
  },
  {
    "text": "loop and then you have to check whether the loop EX exed because of an error because you always forget to check and I'm sensitive to this because back when",
    "start": "2394599",
    "end": "2401480"
  },
  {
    "text": "I used to write C++ and I was on the maps team I had a loop that had a similar API where I forgot to check for",
    "start": "2401480",
    "end": "2407119"
  },
  {
    "text": "an error and I dropped half a million places from the map index oh wow because I forgot to check that error so when I",
    "start": "2407119",
    "end": "2413480"
  },
  {
    "text": "when we introduced off I was kid I'm like no no no that will create really terrible bugs but again lost that",
    "start": "2413480",
    "end": "2419160"
  },
  {
    "text": "argument did that just wipe out like loads of restaurants you know no one noticed so I",
    "start": "2419160",
    "end": "2424560"
  },
  {
    "text": "think if you drop half a million random places from you know the location index you're unlikely to hit stuff that's very",
    "start": "2424560",
    "end": "2429960"
  },
  {
    "text": "important oh wow there you go but I stayed up late and fixed it put just type them all back in from the phone",
    "start": "2429960",
    "end": "2435800"
  },
  {
    "text": "book it's very nice of you you got to though aren't you regenerate the index yes okay fine yeah sure yeah they're",
    "start": "2435800",
    "end": "2442480"
  },
  {
    "text": "good ones I would actually probably like to get rid of the new keyword and just have the curly brace way of making",
    "start": "2442480",
    "end": "2449240"
  },
  {
    "text": "things cuz I always use that anyway now if I see new I'm like what although I",
    "start": "2449240",
    "end": "2454960"
  },
  {
    "text": "quickly do remember to my credit okay so will there be a go-to Johan brandur",
    "start": "2454960",
    "end": "2461040"
  },
  {
    "text": "actually asked this one from on Discord and so did tahal altinel will there be a",
    "start": "2461040",
    "end": "2467599"
  },
  {
    "text": "goto I don't think we're going to make breaking changes to go I think we'd rather find ways to support people you",
    "start": "2467599",
    "end": "2473880"
  },
  {
    "text": "know fix things like maybe some of the things we just described range variables for example without breaking users like",
    "start": "2473880",
    "end": "2480280"
  },
  {
    "text": "maintaining compatibly for users like we would much rather do work on our end to",
    "start": "2480280",
    "end": "2486319"
  },
  {
    "text": "minimize the work that you know the whole go Community has to do to adopt to these changes so I think once you set",
    "start": "2486319",
    "end": "2492520"
  },
  {
    "text": "aside breaking changes goto becomes a marketing term and I think it would probably break a lot more things that it",
    "start": "2492520",
    "end": "2498560"
  },
  {
    "text": "would fix I think the one remaining big language thing is the errors problem and whether we ever come up with a fix for",
    "start": "2498560",
    "end": "2505760"
  },
  {
    "text": "that and whether that fix requires language changes and how extensive they would be I could conceivably see",
    "start": "2505760",
    "end": "2512480"
  },
  {
    "text": "something go-to coming out of that but I don't see anything else even on the horizon that would force us to go to a",
    "start": "2512480",
    "end": "2518880"
  },
  {
    "text": "go-to yeah it'd have to be a significant enough change wouldn't it to Warrant something like that but kind of glad",
    "start": "2518880",
    "end": "2525200"
  },
  {
    "text": "that we don't have these multiple languages you know like python code from one major version won't work on another",
    "start": "2525200",
    "end": "2532040"
  },
  {
    "text": "and the fact that our go code has that long life I think really does help us out a lot and we sort of rely on that",
    "start": "2532040",
    "end": "2539319"
  },
  {
    "text": "which is pretty important yeah anyone else anything else they'd remove if not",
    "start": "2539319",
    "end": "2545119"
  },
  {
    "text": "maybe the G sorry just keep it b o just o remove the G yeah that would be good",
    "start": "2545119",
    "end": "2551160"
  },
  {
    "text": "make it easier to do uh do the internal go links yeah that would be easier typing out most project names would be",
    "start": "2551160",
    "end": "2558800"
  },
  {
    "text": "one character easier yep y yeah the command that kicks off a background kicks off a go routine there you go",
    "start": "2558800",
    "end": "2564800"
  },
  {
    "text": "would just be o oh it would just be an O routine at that point which is",
    "start": "2564800",
    "end": "2570160"
  },
  {
    "text": "great yeah okay good I mean yeah 50% you know just cut that task time in half",
    "start": "2570160",
    "end": "2576040"
  },
  {
    "text": "yeah yeah honestly the amount of um internet that would save I don't know the exact numbers but I think it's a lot",
    "start": "2576040",
    "end": "2582760"
  },
  {
    "text": "I like the idea that oh is just the completion of the sea yeah there you go oh yeah there you go we missed",
    "start": "2582760",
    "end": "2589680"
  },
  {
    "text": "opportunity Alice a good call I wasn't on the team back when yeah",
    "start": "2589680",
    "end": "2594839"
  },
  {
    "text": "no it shows yeah too late now well maybe the next version breaking",
    "start": "2594839",
    "end": "2600880"
  },
  {
    "text": "version you can really Break It by changing its entire name it should be oang yeah I'm not against it MH okay",
    "start": "2600880",
    "end": "2608160"
  },
  {
    "text": "there's another interesting question that came in from def piano on Discord and Def piano asks do any of yall use",
    "start": "2608160",
    "end": "2616960"
  },
  {
    "text": "GitHub co-pilot for work either go or another language or on personal projects",
    "start": "2616960",
    "end": "2622880"
  },
  {
    "text": "have you played with GitHub co-pilot I don't think I know what GitHub co-pilot is oh Keith it does your programming for",
    "start": "2622880",
    "end": "2629440"
  },
  {
    "text": "you it does all your programming for you well then what would I do dayto day if",
    "start": "2629440",
    "end": "2634520"
  },
  {
    "text": "it did all my programming for me chill out chill out no you still have to do some programming unfortunately but I",
    "start": "2634520",
    "end": "2641359"
  },
  {
    "text": "could daydrink instead of doing programming it'd be great does it look up things on stack",
    "start": "2641359",
    "end": "2646559"
  },
  {
    "text": "Overflow for you yeah it learns and it knows smart enough not to pick the top answer to to scroll down a bit which is",
    "start": "2646559",
    "end": "2653280"
  },
  {
    "text": "already smarter than me yeah always go the second answer yeah exactly yeah it's kind of um well I'm not going to sell it",
    "start": "2653280",
    "end": "2660640"
  },
  {
    "text": "you've not heard of it I think that speaks volumes he does all his programming himself that's key yeah this",
    "start": "2660640",
    "end": "2665680"
  },
  {
    "text": "is actually we've reached our time this is all the time we've got but thank you so much to everybody who's joined along",
    "start": "2665680",
    "end": "2672319"
  },
  {
    "text": "and asked questions in the Discord and thank you to Samir Cameron Alice Rob and Keith and we'll see you next time on go",
    "start": "2672319",
    "end": "2681359"
  },
  {
    "text": "time we had a 45-minute hard stop at the event but there were still questions",
    "start": "2683480",
    "end": "2688559"
  },
  {
    "text": "left undiscussed thankfully the go team was gracious enough to stick around and continue chatting with us so here's",
    "start": "2688559",
    "end": "2695160"
  },
  {
    "text": "about 10 minutes of bonus answers for your listening pleasure enjoy we did have a question from wat J",
    "start": "2695160",
    "end": "2703200"
  },
  {
    "text": "who asked why go uses this Mark and sweep garbage collector instead of",
    "start": "2703200",
    "end": "2708359"
  },
  {
    "text": "reference counting that's quite an interesting technical one does anyone have an opinion I'll give that to Keith",
    "start": "2708359",
    "end": "2714720"
  },
  {
    "text": "we can collect Cycles uh which is harder to do with a reference counting collector sort of not impossible but it",
    "start": "2714720",
    "end": "2721960"
  },
  {
    "text": "means basically you write a mark and sweep collector also which runs when the reference count can't keep up and so",
    "start": "2721960",
    "end": "2728119"
  },
  {
    "text": "reference counting isn't a Panacea especially in a general language where you can have Cycles amongst objects in",
    "start": "2728119",
    "end": "2735880"
  },
  {
    "text": "things like there are some other languages where you basically can't make Cycles in various functional languages in which case reference counting is",
    "start": "2735880",
    "end": "2742119"
  },
  {
    "text": "quite a bit better yeah that's the main reason that's a great answer there you go what J someone else asks about your",
    "start": "2742119",
    "end": "2748920"
  },
  {
    "text": "favorite package in the standard library or if there are any packages outside in the community that you would like to see",
    "start": "2748920",
    "end": "2755240"
  },
  {
    "text": "in the standard Library we got any favorites I like the exact package it's really convenient to start you know sub",
    "start": "2755240",
    "end": "2762480"
  },
  {
    "text": "processes from go I think it Brad Fitzpatrick design it's just I really like it just the way it works and it's",
    "start": "2762480",
    "end": "2768640"
  },
  {
    "text": "easy to understand and easy to use yeah is a pretty good one yeah",
    "start": "2768640",
    "end": "2773960"
  },
  {
    "text": "that's a nice answer any other answers anyone I'm curious what the community thinks should be a part of the standard",
    "start": "2773960",
    "end": "2783359"
  },
  {
    "text": "library or what their favorite package is yes well I know for a long time it was",
    "start": "2783359",
    "end": "2789760"
  },
  {
    "text": "testify which was an assert package for making writing tests so you could just",
    "start": "2789760",
    "end": "2794839"
  },
  {
    "text": "in one line do assertions um I know this because I made that package and I know",
    "start": "2794839",
    "end": "2800599"
  },
  {
    "text": "also lots of people don't like that package and it's quite interesting like francesc campoy famously was um unhappy",
    "start": "2800599",
    "end": "2806839"
  },
  {
    "text": "with it being one of the most imported packages because there's kind of like obviously the interface like you're",
    "start": "2806839",
    "end": "2812880"
  },
  {
    "text": "passing things through interfaces so checking for equality in that way ways can be interesting but I mean the go",
    "start": "2812880",
    "end": "2820480"
  },
  {
    "text": "testing package kind of like has hasn't really changed that much apart from obviously fuzzing coming which is going",
    "start": "2820480",
    "end": "2826680"
  },
  {
    "text": "to be a big change what do you feel about testify Matt I was going to ask you are are you going to genery testify",
    "start": "2826680",
    "end": "2832880"
  },
  {
    "text": "o genery testify sounds it Rhymes",
    "start": "2832880",
    "end": "2838119"
  },
  {
    "text": "so I like generif as being the new the new word for what you do to your package",
    "start": "2838119",
    "end": "2844200"
  },
  {
    "text": "after generics comes out yeah it sounds like just making it old though doesn't it generif also that sound to",
    "start": "2844200",
    "end": "2851079"
  },
  {
    "text": "yeah yeah I'm actually right now writing a tool that I'm calling jifi which is basically just for testing generics it",
    "start": "2851079",
    "end": "2857599"
  },
  {
    "text": "goes through the standard library and takes one package and adds a generic parameter to all the functions and types",
    "start": "2857599",
    "end": "2863960"
  },
  {
    "text": "in that package that never gets used but it adds it all and so we can then run all the",
    "start": "2863960",
    "end": "2869760"
  },
  {
    "text": "tests again on that modified standard library and make sure everything still works so it's sort of a test of the",
    "start": "2869760",
    "end": "2875960"
  },
  {
    "text": "generics control flow yeah that's cool um and you know the the changes it makes will never check in but it's a good way",
    "start": "2875960",
    "end": "2882480"
  },
  {
    "text": "to get a one of the big problems with testing generics is there is no generic code so like how do you test the",
    "start": "2882480",
    "end": "2888640"
  },
  {
    "text": "generics work when there's no generic code to test it on so we sort of need a way to sort of automatically manufacture",
    "start": "2888640",
    "end": "2894079"
  },
  {
    "text": "generic code so we can run lots of code through the generic portion of the compiler that's getting way to meta it's",
    "start": "2894079",
    "end": "2900680"
  },
  {
    "text": "like watching Inception it is a little bit meta a little bit yeah we're going to do that in while going into someone's",
    "start": "2900680",
    "end": "2907400"
  },
  {
    "text": "dreams that's the sort of deal there we that is interesting though as an approach it's funny like I wonder if",
    "start": "2907400",
    "end": "2914839"
  },
  {
    "text": "it's possible to have generic code where if you like you sort of hinted at this",
    "start": "2914839",
    "end": "2920440"
  },
  {
    "text": "earlier but if you ignored the generic piece alog together could it just fall back by default to an any type and still",
    "start": "2920440",
    "end": "2927920"
  },
  {
    "text": "work but it's generic but any like would something like that be backwards compatible I don't know just occurred to",
    "start": "2927920",
    "end": "2934160"
  },
  {
    "text": "me but yeah it works for arguments but it doesn't work for return values so there's sort of this covariance",
    "start": "2934160",
    "end": "2940400"
  },
  {
    "text": "contravariance thing which doesn't quite work but if with the right type cast you could maybe make it work so maybe you",
    "start": "2940400",
    "end": "2947000"
  },
  {
    "text": "could have a tool that goes through and just puts the type cast in where they're needed and maybe it would work yeah it's going to be very",
    "start": "2947000",
    "end": "2953839"
  },
  {
    "text": "interesting once people start writing generic code and you know like we had go for it's been around 12 years now and",
    "start": "2953839",
    "end": "2961200"
  },
  {
    "text": "some practices that things that we consider to be good practicing go really only came out much later in its life so",
    "start": "2961200",
    "end": "2967799"
  },
  {
    "text": "I think we do expect the same thing probably to happen with generics there's going to be we'll learn we'll make those",
    "start": "2967799",
    "end": "2973000"
  },
  {
    "text": "mistakes and then we'll be like okay don't use generics like this and that'll be a talk someone will give it a Meetup",
    "start": "2973000",
    "end": "2979440"
  },
  {
    "text": "and then at that Meetup they'll meet the person of their dreams and you've basically made that happen you made their dreams come true by adding",
    "start": "2979440",
    "end": "2985720"
  },
  {
    "text": "generics essentially that could that's just one scenario that could happen I'm not saying it is definitely going to",
    "start": "2985720",
    "end": "2991480"
  },
  {
    "text": "happen I like this because you know we did exactly this with channels and go routines in the early days of go we were",
    "start": "2991480",
    "end": "2997440"
  },
  {
    "text": "using Co routines and channels for everything iterators you remember that it was ridiculous so we're going to have",
    "start": "2997440",
    "end": "3003280"
  },
  {
    "text": "to make exactly the same mistakes this time around like I said in the in the broader in the live stream we're going",
    "start": "3003280",
    "end": "3009040"
  },
  {
    "text": "to need sort of the the the old what's the word I'm looking crotchety go",
    "start": "3009040",
    "end": "3014440"
  },
  {
    "text": "Community to sort of constrain the enthusiasm and be like no don't be",
    "start": "3014440",
    "end": "3020000"
  },
  {
    "text": "stupid do it well right use it use it well I do want to find someone who goes",
    "start": "3020000",
    "end": "3025720"
  },
  {
    "text": "completely overboard on using generics and then we can have them be a test case of like this is what you should not do",
    "start": "3025720",
    "end": "3032160"
  },
  {
    "text": "yeah and so if any of you out there are listening and want to be that person like go for it and then email us your",
    "start": "3032160",
    "end": "3038000"
  },
  {
    "text": "your package there was a goer con talk on like how to abuse struck tags struck",
    "start": "3038000",
    "end": "3043559"
  },
  {
    "text": "field tags and it was delightful because like all sorts of terrible things and maybe we need some of that for generics",
    "start": "3043559",
    "end": "3048880"
  },
  {
    "text": "like how do truly abuse generics do terrible terrible things there you go so if you want to be Go's generic Devil's",
    "start": "3048880",
    "end": "3054440"
  },
  {
    "text": "Advocate get in touch and they'd like to roast you you could be like a",
    "start": "3054440",
    "end": "3060720"
  },
  {
    "text": "roast yeah that's how it could do it abuse yeah that's true though with channels I used to be the same",
    "start": "3060720",
    "end": "3066920"
  },
  {
    "text": "everything was a channel like if I'm going to open a file I'm sending those bites down a channel I've got channels",
    "start": "3066920",
    "end": "3072160"
  },
  {
    "text": "now I'm channeling everything and yeah and I honestly like weight group I that",
    "start": "3072160",
    "end": "3077839"
  },
  {
    "text": "tends to be what I reach for now if I'm doing if I'm writing concurrent code I'll I'll often have a small little",
    "start": "3077839",
    "end": "3084079"
  },
  {
    "text": "place and have a weight group call outs of things and but channels sometimes again perfect for the right situation so",
    "start": "3084079",
    "end": "3090799"
  },
  {
    "text": "Matt you've actually touched on probably one of the most promising but unexplored areas of generics which is uh",
    "start": "3090799",
    "end": "3095960"
  },
  {
    "text": "concurrency libraries so we have weight group and error Group which do a really nice job of packaging up certain idioms",
    "start": "3095960",
    "end": "3101559"
  },
  {
    "text": "WR concurrency generics might allow us to package them up even more nicely",
    "start": "3101559",
    "end": "3106760"
  },
  {
    "text": "because you can have things that you know I want to do a scatter gather collection of things and Bre",
    "start": "3106760",
    "end": "3111920"
  },
  {
    "text": "parameterized by whatever type te like I have a bunch of producer functions that return T's and I want to run them all",
    "start": "3111920",
    "end": "3118200"
  },
  {
    "text": "and collect them and just get back a slice of te's like you can use generics to write that Library it could just wrap",
    "start": "3118200",
    "end": "3124400"
  },
  {
    "text": "you know weight group or airor group so I think there are things like that where as we discover common idioms where you",
    "start": "3124400",
    "end": "3130160"
  },
  {
    "text": "want to apply a little concurrency you can wrap that up and you don't even see the concurrency anymore now that has",
    "start": "3130160",
    "end": "3135480"
  },
  {
    "text": "cost and trade-offs because that's a hidden cost but who knows yeah it can",
    "start": "3135480",
    "end": "3140880"
  },
  {
    "text": "help eliminate a lot of dumb errors essentially like places where you end up with data races because you just got something small wrong if you find those",
    "start": "3140880",
    "end": "3147960"
  },
  {
    "text": "idioms we can correct for that yeah great stuff so esm on Discord asks what",
    "start": "3147960",
    "end": "3153960"
  },
  {
    "text": "are some other language features that came from other languages that you might like to steal from or maybe you can't",
    "start": "3153960",
    "end": "3161079"
  },
  {
    "text": "but you wish you could yeah I I think in my experience writing generic code one",
    "start": "3161079",
    "end": "3167839"
  },
  {
    "text": "of the the things I'm noticing is that I use function closures a lot more and I think a more concise function closure",
    "start": "3167839",
    "end": "3174480"
  },
  {
    "text": "syntax would Gel really nicely with generics I see but this is a bit like how in",
    "start": "3174480",
    "end": "3179920"
  },
  {
    "text": "JavaScript you can have a function typed out function with brackets or you can just have the empty brackets with the",
    "start": "3179920",
    "end": "3185880"
  },
  {
    "text": "fat arrow and they both work would you break the way function closures worked",
    "start": "3185880",
    "end": "3191119"
  },
  {
    "text": "like the syntax are you talking about that I pure pure syntax I would just I'm not sure if this is a good idea but it's",
    "start": "3191119",
    "end": "3197599"
  },
  {
    "text": "something that I'm immediately noticing so don't quote me on this and say that I've endorsed this in the future but I",
    "start": "3197599",
    "end": "3204160"
  },
  {
    "text": "think it's something that would be interesting to explore maybe Alice can help you could change it from Funk just to fun it sounds you know you can we",
    "start": "3204160",
    "end": "3212280"
  },
  {
    "text": "could test that yeah just drop the see yeah you go so these ones are fun because you know they're shorter loads",
    "start": "3212280",
    "end": "3218200"
  },
  {
    "text": "shorter 25% saving and there's so much more fun aren't they that's what",
    "start": "3218200",
    "end": "3223440"
  },
  {
    "text": "everyone's saying okay any other features you've seen in other languages I'm really inspired by what rust has",
    "start": "3223440",
    "end": "3229480"
  },
  {
    "text": "done around static data race avoidance and and you know ownership and lifetime tracking you know rust comes at the cost",
    "start": "3229480",
    "end": "3236839"
  },
  {
    "text": "of a very steep learning curve and slow compiles so the question is can we learn",
    "start": "3236839",
    "end": "3242400"
  },
  {
    "text": "and be inspired by rust to improve Go's safety static safety particularly with",
    "start": "3242400",
    "end": "3247480"
  },
  {
    "text": "respect to data Races by learning from what rust has done but maintain the really fast compiles and the easy ease",
    "start": "3247480",
    "end": "3254119"
  },
  {
    "text": "of learning go yeah that is quite interesting and I also wonder if like additional tooling could could help on",
    "start": "3254119",
    "end": "3260599"
  },
  {
    "text": "on things like whether you know with with that I don't know yeah that is something static analysis team has",
    "start": "3260599",
    "end": "3266160"
  },
  {
    "text": "looked at is can you provide better say safety around mutexes and static data rase detection and the open question is",
    "start": "3266160",
    "end": "3272520"
  },
  {
    "text": "can you do that with go cod as it exists today or do we need to add more does the programmer have to say more in order to",
    "start": "3272520",
    "end": "3278440"
  },
  {
    "text": "do this yeah right h i quite like the question mark notation in typescript",
    "start": "3278440",
    "end": "3285040"
  },
  {
    "text": "where if an object is nil you know essentially you can do question mark",
    "start": "3285040",
    "end": "3290799"
  },
  {
    "text": "that would be a panic if you're doing a DOT to calling something on nil you get then a panic and go the question mark",
    "start": "3290799",
    "end": "3295960"
  },
  {
    "text": "dot notation makes that okay and it'll just return an empty value or something I don't know if that's right for go I",
    "start": "3295960",
    "end": "3302480"
  },
  {
    "text": "quite like how explicit everything is in go but when you're dealing with like data that you don't understand fully the",
    "start": "3302480",
    "end": "3308319"
  },
  {
    "text": "structure of it those sorts of things can be pretty useful especially in the templates like we could probably have",
    "start": "3308319",
    "end": "3314520"
  },
  {
    "text": "that in the templates I would have thought can maybe someone do that on tomorrow it's certainly useful in in the",
    "start": "3314520",
    "end": "3321000"
  },
  {
    "text": "fump package that if you give it you give it a percent s and you give it an integer like it knows how to handle that",
    "start": "3321000",
    "end": "3326839"
  },
  {
    "text": "and never crashes and if it's confused about what's there it prints something in the output instead of crashing yeah",
    "start": "3326839",
    "end": "3332760"
  },
  {
    "text": "so that sort of resilience against failure like does exist in portions of",
    "start": "3332760",
    "end": "3338799"
  },
  {
    "text": "go but yeah it's not sort of in the core language yeah I just do V percent V on",
    "start": "3338799",
    "end": "3345359"
  },
  {
    "text": "everything I mean go go has you know doesn't panic on nil receivers so that's",
    "start": "3345359",
    "end": "3351760"
  },
  {
    "text": "nice but and we've seen with like the protuff package how how how nice it is to be able to call methods on Mill",
    "start": "3351760",
    "end": "3358280"
  },
  {
    "text": "receivers and to make that a more generic more General feature could be nice yeah yeah I've seen loggers that",
    "start": "3358280",
    "end": "3363520"
  },
  {
    "text": "had like worked with nil they would just be silent and so the way to make a logger silent was nil but I also got a",
    "start": "3363520",
    "end": "3370960"
  },
  {
    "text": "poll request I think someone making That explicit which you know also kind of makes sense but yeah very interesting",
    "start": "3370960",
    "end": "3377520"
  },
  {
    "text": "stuff well thank you so much for staying after the party this has been the go time Go foron mashup after party thanks",
    "start": "3377520",
    "end": "3385160"
  },
  {
    "text": "so much everyone I'm doing my hosting duties not I'm supposed to laugh at it s",
    "start": "3385160",
    "end": "3390520"
  },
  {
    "text": "this is me being professional professional party exactly",
    "start": "3390520",
    "end": "3395640"
  },
  {
    "text": "yeah there you go it's a t-shirt with a jacket yeah that's what you get there you go thank you so much yeah",
    "start": "3395640",
    "end": "3403440"
  },
  {
    "text": "really this has been our final official episode of go time in 2021 we always",
    "start": "3405319",
    "end": "3411680"
  },
  {
    "text": "take a couple weeks off at the end of the year to do some garbage collection of our own but we have lots of",
    "start": "3411680",
    "end": "3417440"
  },
  {
    "text": "Awesomeness headed your way on the other side including two more episodes from gopher con thank you for listening to us",
    "start": "3417440",
    "end": "3423760"
  },
  {
    "text": "this year we know how precious your time is and we love that you choose to spend some of it with us go time is produced",
    "start": "3423760",
    "end": "3429720"
  },
  {
    "text": "by Jared Santo that's me with music by break master cylinder that's somebody else we are brought to you by some",
    "start": "3429720",
    "end": "3436440"
  },
  {
    "text": "awesome Partners special thanks to fley LA starkley and linode that's our show",
    "start": "3436440",
    "end": "3441799"
  },
  {
    "text": "for today we'll talk to you next year on going",
    "start": "3441799",
    "end": "3446799"
  },
  {
    "text": "[Music]",
    "start": "3447130",
    "end": "3468459"
  },
  {
    "text": "time",
    "start": "3471000",
    "end": "3474000"
  }
]