[
  {
    "text": "[Music] this week on the change law J W solo",
    "start": "3020",
    "end": "8599"
  },
  {
    "text": "talking to Liz rice about ebpf ebpf is a revolutionary Colonel technology that",
    "start": "8599",
    "end": "14839"
  },
  {
    "text": "has lit the cloud native world on fire if you're going to have one person explain excitement that person would be",
    "start": "14839",
    "end": "20680"
  },
  {
    "text": "Liz rice on this episode Liz tells jar about all the power of ebpf where it",
    "start": "20680",
    "end": "25760"
  },
  {
    "text": "came from what kind of new applications it's enabling and who's building the next inter gener ation of networking",
    "start": "25760",
    "end": "31160"
  },
  {
    "text": "security and observability tools with it big thanks to our friends and our partners at fastly and fly.io our pods",
    "start": "31160",
    "end": "38440"
  },
  {
    "text": "are fast to download globally because fastly is fast globally learn more at fastly.com and FL helps us deploy our",
    "start": "38440",
    "end": "45160"
  },
  {
    "text": "app Service close to our users it's like a CDN but for entire application stack try free at",
    "start": "45160",
    "end": "51400"
  },
  {
    "text": "[Music]",
    "start": "51400",
    "end": "55770"
  },
  {
    "text": "fly.io this episode is is brought to you by influx data the makers of influx DB",
    "start": "57960",
    "end": "64040"
  },
  {
    "text": "increasingly time series data is all around us it's in the cloud as applications and services scale out it's",
    "start": "64040",
    "end": "70400"
  },
  {
    "text": "in iot as more and more devices come online sensor data is time series data",
    "start": "70400",
    "end": "75479"
  },
  {
    "text": "and that's exactly where influx DB comes into play influx DB is the Open Source Time series data platform that allows",
    "start": "75479",
    "end": "82240"
  },
  {
    "text": "developers to build and to integrate applications with time as a foundational component influx DB is made for",
    "start": "82240",
    "end": "88880"
  },
  {
    "text": "developers to build real time applications quickly and at scale and they keep improving their platform to",
    "start": "88880",
    "end": "94840"
  },
  {
    "text": "build those applications with less time and less code recently they launched their Edge data replication feature this",
    "start": "94840",
    "end": "100680"
  },
  {
    "text": "new capability is built into the 2.2 open source version it allows developers to replicate data from local instances",
    "start": "100680",
    "end": "107600"
  },
  {
    "text": "into influx DB Cloud enables users to Aggregate and store data for long-term management and Analysis and to satisfi",
    "start": "107600",
    "end": "114119"
  },
  {
    "text": "regulations it brings the horsepower closer to the sensor and gives developers and solution builders the",
    "start": "114119",
    "end": "120240"
  },
  {
    "text": "ability to leverage their own elastic compute resources deployed at The Edge Edge data replication let you decide",
    "start": "120240",
    "end": "126640"
  },
  {
    "text": "strategically what data moves from Edge to Cloud how the data should be enriched and formatted add to this influx DB has",
    "start": "126640",
    "end": "133879"
  },
  {
    "text": "ongoing efforts to unify apis across all his database offerings they now provide a path to build once and deploy time",
    "start": "133879",
    "end": "141040"
  },
  {
    "text": "series applications anywhere learn more about influx DB in this new feature at influx dat.com changelog again influx",
    "start": "141040",
    "end": "148800"
  },
  {
    "text": "dat.com flash change [Music]",
    "start": "148800",
    "end": "175120"
  },
  {
    "text": "log all right today we're joined by Liz rice who is the chief open Source",
    "start": "175120",
    "end": "180239"
  },
  {
    "text": "officer with the ebpf pioneers ISO veent welcome Liz thanks for having me Jared",
    "start": "180239",
    "end": "185680"
  },
  {
    "text": "nice to be here nice to have you for sure so we've been wanting to talk ebpf for a while and now we have you here so",
    "start": "185680",
    "end": "192560"
  },
  {
    "text": "perfect fit I've heard a lot about ebpf mostly from shipit Gard Lazo has had you",
    "start": "192560",
    "end": "198599"
  },
  {
    "text": "on the show uh the folks from parka a lot of people are excited about ebpf in",
    "start": "198599",
    "end": "204560"
  },
  {
    "text": "fact in his post cubec con EU Roundup geart said almost half of the people",
    "start": "204560",
    "end": "212000"
  },
  {
    "text": "that he talked to are either working on it using it or actively integrating with",
    "start": "212000",
    "end": "217239"
  },
  {
    "text": "ebpf so like lots of Buzz lots of interest and you've been working with this technology and talking about it for",
    "start": "217239",
    "end": "223640"
  },
  {
    "text": "a couple of years now do you want to catch people up first of all what is ebpf and then we'll go from there yeah",
    "start": "223640",
    "end": "229519"
  },
  {
    "text": "sure so the letters ebpf stand for extended Berkeley packet filter and I",
    "start": "229519",
    "end": "236360"
  },
  {
    "text": "usually just tell people to forget that straight away because it's not terribly helpful it tells us something about the",
    "start": "236360",
    "end": "242680"
  },
  {
    "text": "history but it doesn't tell us about what ebpf is today MH what it allows us",
    "start": "242680",
    "end": "248680"
  },
  {
    "text": "to do is to run programs within the kernel of the operating system we can",
    "start": "248680",
    "end": "256320"
  },
  {
    "text": "dynamically load these ebpf programs into the kernel and we can use that to change the way the kernel behaves and",
    "start": "256320",
    "end": "264600"
  },
  {
    "text": "originally it was the Linux kernel there is now a Windows uh ebpf implementation happening",
    "start": "264600",
    "end": "270160"
  },
  {
    "text": "so I tend to just think about it from a Linux point of view but you know it is",
    "start": "270160",
    "end": "275240"
  },
  {
    "text": "broader than that and it means we can customize the kernel we can change the",
    "start": "275240",
    "end": "280840"
  },
  {
    "text": "way that kernel features behave we can use it to observe what's happening in the kernel and the really interesting",
    "start": "280840",
    "end": "288240"
  },
  {
    "text": "thing or why it's so powerful is if you're an application programmer you",
    "start": "288240",
    "end": "293320"
  },
  {
    "text": "probably don't think very much about what's happening in the kernel because you use program language abstractions",
    "start": "293320",
    "end": "300759"
  },
  {
    "text": "that kind of hide that low level from you on a day-to-day basis so you know",
    "start": "300759",
    "end": "306080"
  },
  {
    "text": "every time you I don't know open a file or write something to the screen you've got some function that looks like open",
    "start": "306080",
    "end": "313880"
  },
  {
    "text": "or write or something like that underneath the covers every time you",
    "start": "313880",
    "end": "319120"
  },
  {
    "text": "interface with Hardware in any way the kernel has to be involved so every time",
    "start": "319120",
    "end": "324520"
  },
  {
    "text": "you do any network access open any files access memory",
    "start": "324520",
    "end": "330280"
  },
  {
    "text": "all of these things involve the kernel and with ebpf we can insert programs",
    "start": "330280",
    "end": "337360"
  },
  {
    "text": "into the Kernel's behavior and we can use that to perhaps observe what you're doing every time you open a file we",
    "start": "337360",
    "end": "344680"
  },
  {
    "text": "could see that happening we could see which processes are opening different files every time a network packet",
    "start": "344680",
    "end": "351680"
  },
  {
    "text": "arrives we can manipulate that Network packet we can do all sorts of really powerful things to both observe what",
    "start": "351680",
    "end": "359479"
  },
  {
    "text": "what's happening in the kernel and even change what's happening and that kind of",
    "start": "359479",
    "end": "365120"
  },
  {
    "text": "changing what's happening allows us to build security tooling and it allows us to build Network functionality as well",
    "start": "365120",
    "end": "373319"
  },
  {
    "text": "so those kind of three areas networking security and observability are the I",
    "start": "373319",
    "end": "379680"
  },
  {
    "text": "would say three areas where ebpf is being used most commonly today but it's",
    "start": "379680",
    "end": "385440"
  },
  {
    "text": "super powerful because of that Insight across everything that's happening the machine so I'm thinking about Docker",
    "start": "385440",
    "end": "392160"
  },
  {
    "text": "because this has been called a revolution I think Docker was a revolution in its time and I remember when Docker first came out and Solomon",
    "start": "392160",
    "end": "398960"
  },
  {
    "text": "hikes and the doc Cloud team and the app.net team that like popularized the technology they're like these containers",
    "start": "398960",
    "end": "405080"
  },
  {
    "text": "have been in the operating system for a while but they just weren't accessible nobody knew about them they were hard to use and Docker really made that simple",
    "start": "405080",
    "end": "412280"
  },
  {
    "text": "is ebpf this long lived feature of the colonel that all of a sudden we realize",
    "start": "412280",
    "end": "417560"
  },
  {
    "text": "was there and could do things or is it a brand new thing that's been built into the kernel recently so it's a bit of both it's been",
    "start": "417560",
    "end": "425240"
  },
  {
    "text": "evolving for years I mean I mentioned the the packet filtering element that's",
    "start": "425240",
    "end": "430520"
  },
  {
    "text": "been around since I think it's the '90s you oh wow and what we call the extended",
    "start": "430520",
    "end": "436599"
  },
  {
    "text": "Parts the the kind of modern features that we can now use of the ebpf have been you know added in over the last few",
    "start": "436599",
    "end": "443680"
  },
  {
    "text": "years really and the reason why it's all suddenly taking off is",
    "start": "443680",
    "end": "449960"
  },
  {
    "text": "kind of also relates to why ebpf is really powerful so when you use an",
    "start": "449960",
    "end": "456160"
  },
  {
    "text": "operating system you know whatever Linux distribution you might be using it's",
    "start": "456160",
    "end": "461400"
  },
  {
    "text": "probably using a version of the kernel that's four or five years old the",
    "start": "461400",
    "end": "466560"
  },
  {
    "text": "distribution don't take you know the latest release of the kernel they wait for a while to make sure that it's",
    "start": "466560",
    "end": "472800"
  },
  {
    "text": "stable and it's been sort of field hardened so when ebpf functionality and",
    "start": "472800",
    "end": "478960"
  },
  {
    "text": "featur have been added in over the course of several",
    "start": "478960",
    "end": "484039"
  },
  {
    "text": "years we have to sort of go back to a colonel that's maybe you know four years old to see what people are really using",
    "start": "484039",
    "end": "490960"
  },
  {
    "text": "in production today and those versions of the kernel are now new enough to have",
    "start": "490960",
    "end": "497639"
  },
  {
    "text": "sufficient uh kind of ebpf capabilities that we can do really really useful",
    "start": "497639",
    "end": "502720"
  },
  {
    "text": "things there's still Innovation happening in the kernel there are still new things being added to ebpf but those",
    "start": "502720",
    "end": "508879"
  },
  {
    "text": "kind of core building blocks are now available in pretty much every",
    "start": "508879",
    "end": "514240"
  },
  {
    "text": "production Linux distribution and that is why over the last let's say 18 months",
    "start": "514240",
    "end": "519760"
  },
  {
    "text": "we've seen this huge explosion in interest because it's not just Niche kind of features for people running",
    "start": "519760",
    "end": "526480"
  },
  {
    "text": "Cutting Edge kernels it it can be used by everybody but the reason why I said it's kind of it also speaks to the power",
    "start": "526480",
    "end": "532760"
  },
  {
    "text": "of the carel is now that we have ebpf we don't necessarily have to wait for a new",
    "start": "532760",
    "end": "538640"
  },
  {
    "text": "version of the kernel to change its Behavior because we can use ebpf to do it right and which is kind of mind",
    "start": "538640",
    "end": "545720"
  },
  {
    "text": "bending but but um pretty cool so one of the I think really nice examples of how",
    "start": "545720",
    "end": "552040"
  },
  {
    "text": "ebpf can be used is for dynamically mitigating Kernel Security",
    "start": "552040",
    "end": "559200"
  },
  {
    "text": "vulnerabilities so really nice example of this is something called packet of death so maybe there's a a kernel",
    "start": "559200",
    "end": "566360"
  },
  {
    "text": "vulnerability that um is suscept able to some particularly formed Network packet",
    "start": "566360",
    "end": "573600"
  },
  {
    "text": "for example maybe uh there's supposed to be a a length field and perhaps if you",
    "start": "573600",
    "end": "581000"
  },
  {
    "text": "don't set that length field or you set it incorrectly there's a bug in the kernel that doesn't know how to handle",
    "start": "581000",
    "end": "586880"
  },
  {
    "text": "it there have been some instances of this in the past it's not just",
    "start": "586880",
    "end": "591959"
  },
  {
    "text": "theoretical and if the kernel receives a packet that's sort of been formed to",
    "start": "591959",
    "end": "597800"
  },
  {
    "text": "perhaps set that length filled incorrectly Kel doesn't know how to handle colel crashes it's you know that",
    "start": "597800",
    "end": "605120"
  },
  {
    "text": "vulnerability is exploited and in kind of the traditional world you would need",
    "start": "605120",
    "end": "610880"
  },
  {
    "text": "to install a kernel patch and reboot your machine to no longer have that uh",
    "start": "610880",
    "end": "617880"
  },
  {
    "text": "vulnerability right but with ebpf you can load an ebpf program dynamically",
    "start": "617880",
    "end": "624160"
  },
  {
    "text": "that recognizes ah it's that kind of network packet that you know we know is a bad idea we need to just throw that",
    "start": "624160",
    "end": "630160"
  },
  {
    "text": "packet away and you've mitigated that vulnerability without having to actually",
    "start": "630160",
    "end": "636079"
  },
  {
    "text": "update the kernel you're just running that evf program you can load that evf",
    "start": "636079",
    "end": "642120"
  },
  {
    "text": "program into all of your machines dynamically you don't have to affect any of your running applications it's really",
    "start": "642120",
    "end": "649240"
  },
  {
    "text": "really nice and really powerful that's cool you got me thinking about old",
    "start": "649240",
    "end": "655000"
  },
  {
    "text": "kernels because well I used to run uh back when I first graduated from college back in the early as I I ran a network",
    "start": "655000",
    "end": "662639"
  },
  {
    "text": "of Linux machines you know it's like mail servers and spam you know all sorts of stuff and it was back in the days",
    "start": "662639",
    "end": "668680"
  },
  {
    "text": "when we treated our our servers as pets and not cattle you know that that analogy so I had them all named and",
    "start": "668680",
    "end": "674399"
  },
  {
    "text": "stuff you know I use a a mash theme I'm not sure if you're familiar with the the show MASH yeah so there was Hawkeye and",
    "start": "674399",
    "end": "680880"
  },
  {
    "text": "Trapper and hot lips hoolahan and radar that was kind of actually the fun part this like when we used to call ourselves sis Edmonds that was cool and all and I",
    "start": "680880",
    "end": "688360"
  },
  {
    "text": "would always pass them and keep them upgraded and everything but the kernel itself I would always let it get outdated not because I wanted to but",
    "start": "688360",
    "end": "695079"
  },
  {
    "text": "simply because it required a reboot and I wasn't going about to reboot my production server and you were talking about how",
    "start": "695079",
    "end": "701880"
  },
  {
    "text": "you know now this has been in there for a while but people are getting to where their Cals are upgraded enough that they have the features and I'm wondering if",
    "start": "701880",
    "end": "708360"
  },
  {
    "text": "in the days of cattle of elastic compute and kubernetes and stuff is the reason",
    "start": "708360",
    "end": "714519"
  },
  {
    "text": "why people still run old kernels is it still that same old we don't want to reboot you think that you would just you",
    "start": "714519",
    "end": "720200"
  },
  {
    "text": "know offload the capacity reboot the thing upgrade and then launch a new node or whatever you're going to do or is it",
    "start": "720200",
    "end": "727160"
  },
  {
    "text": "more about I mean I understand like well you want to stay a couple versions behind cuz like this is your kernel you don't want to be on the latest but",
    "start": "727160",
    "end": "733240"
  },
  {
    "text": "they're generally stable what are your thoughts on that is it still the old we don't want to reboot thing or do you think it's about security or stability",
    "start": "733240",
    "end": "741399"
  },
  {
    "text": "yeah I hope it's not though we don't want to rebot thing because I hope so too because that was a long time ago and",
    "start": "741399",
    "end": "746560"
  },
  {
    "text": "I used to feel that way yeah that whole principle of you know cattle not pets is",
    "start": "746560",
    "end": "752760"
  },
  {
    "text": "exactly that that you're supposed to be able to right you know destroy your machines and recreate new ones and do it",
    "start": "752760",
    "end": "760959"
  },
  {
    "text": "all programmatically so that the state of those new machines is exactly what you intended it to be and there's no",
    "start": "760959",
    "end": "766560"
  },
  {
    "text": "sort of human intervention that means you you missed something while you were bringing it up and I think it's very",
    "start": "766560",
    "end": "771839"
  },
  {
    "text": "good practice you know in this day and age too to make sure that you can destroy servers and replace them automat",
    "start": "771839",
    "end": "779240"
  },
  {
    "text": "atically there's that um really great I guess phrase or saying about how you",
    "start": "779240",
    "end": "784680"
  },
  {
    "text": "know you unless you've restored from a backup you don't know that you've got a backup and I think the same is true for",
    "start": "784680",
    "end": "790079"
  },
  {
    "text": "unless you've tried right destroying a server you don't know what your recovery",
    "start": "790079",
    "end": "795440"
  },
  {
    "text": "uh process is going to be so I think it's accepted good practice these days that you should be bringing new machines",
    "start": "795440",
    "end": "803480"
  },
  {
    "text": "and and updated machines into the um into the deployment but that said",
    "start": "803480",
    "end": "808959"
  },
  {
    "text": "they're still going to be using you know they might be using the latest version of a Linux distribution like auntu or ra",
    "start": "808959",
    "end": "816120"
  },
  {
    "text": "or or Centos or whatever and the dro itself like Debian for instance stays very conservative on their packages",
    "start": "816120",
    "end": "823079"
  },
  {
    "text": "exactly and they will use a kernel version that is yeah you know a few years I would say old yeah um just to",
    "start": "823079",
    "end": "830959"
  },
  {
    "text": "make sure that it's stable curious about your perspective on this related so from your perch you know related with the",
    "start": "830959",
    "end": "836759"
  },
  {
    "text": "cncf and where you are with your work and barly being involved in the cloud native Community uh there's this whole",
    "start": "836759",
    "end": "844800"
  },
  {
    "text": "switch to this new style of operations and it's where the excitement is it's",
    "start": "844800",
    "end": "850240"
  },
  {
    "text": "where a lot of the money is it's where the the landscape is and you can get lost in the landscape right of like",
    "start": "850240",
    "end": "856240"
  },
  {
    "text": "which service do I pick and all this and the world moves much slower than that so",
    "start": "856240",
    "end": "861360"
  },
  {
    "text": "what I as as change log person Jared I see all the new shiny the interesting we talk about bleeding edge Technologies",
    "start": "861360",
    "end": "869120"
  },
  {
    "text": "the rest of the world moves much slower and I'm curious like from your perspective are the people still doing it the old school Pets Way are there",
    "start": "869120",
    "end": "876959"
  },
  {
    "text": "still a lot of those organizations and Enterprises or has it kind of been to",
    "start": "876959",
    "end": "882320"
  },
  {
    "text": "where like maybe like 80% have moved over to a more modern infrastructure what's your perspective on that yeah I",
    "start": "882320",
    "end": "889160"
  },
  {
    "text": "mean I suppose my perspective is colored by the fact that I'm so involved in the cloud native world that I probably see",
    "start": "889160",
    "end": "896000"
  },
  {
    "text": "those people who have moved over I certainly you know over the years that I've been involved in cntf and this kind",
    "start": "896000",
    "end": "903440"
  },
  {
    "text": "of cloud native World we've definitely gone from you know a few years ago oh",
    "start": "903440",
    "end": "908519"
  },
  {
    "text": "amazing we can find an End user to talk about a thing to well there are loads of people who are using you know feature X",
    "start": "908519",
    "end": "917560"
  },
  {
    "text": "Project y you know there's there you know it's hard to find a sort of big brand name that doesn't have you know",
    "start": "917560",
    "end": "924440"
  },
  {
    "text": "some kind of modern cloud-based deployment these days I think um well that's good news certainly seem I'm sure",
    "start": "924440",
    "end": "931279"
  },
  {
    "text": "a lot of those people do also have Legacy deployments as well and a lot of",
    "start": "931279",
    "end": "937560"
  },
  {
    "text": "um what I'm currently seeing you know I I'm involved in the psyllium project psyllium is a networking",
    "start": "937560",
    "end": "944880"
  },
  {
    "text": "solution I would say kind of mostly for kubernetes but a lot of the challenges",
    "start": "944880",
    "end": "950040"
  },
  {
    "text": "we see now are to do with allowing people to coordinate between their",
    "start": "950040",
    "end": "956519"
  },
  {
    "text": "lovely shiny new kubernetes workloads and their legacy workloads that are running on you know a bgp network in a",
    "start": "956519",
    "end": "964160"
  },
  {
    "text": "data somewhere so there's definitely a um people haven't thrown away all those",
    "start": "964160",
    "end": "969319"
  },
  {
    "text": "data centers yet right there's kind of like a migration path but you have to straddle for probably years because",
    "start": "969319",
    "end": "976560"
  },
  {
    "text": "you're not just going to throw everything out and and start fresh that doesn't make any business sense it's probably a bit like um sort of when I",
    "start": "976560",
    "end": "983920"
  },
  {
    "text": "very first got into you know Computing professionally when I was sort of doing my first job we were doing things at",
    "start": "983920",
    "end": "991279"
  },
  {
    "text": "emulated Punch Cards because people didn't you know running their Giant payroll systems you know this is this",
    "start": "991279",
    "end": "998319"
  },
  {
    "text": "was the 90s it wasn't the 1890s you know it was you know the world had invented a",
    "start": "998319",
    "end": "1003839"
  },
  {
    "text": "lot of things that were a lot more modern than punch cars but it just took people a very long time to migrate away",
    "start": "1003839",
    "end": "1009199"
  },
  {
    "text": "from those really old systems yeah well I'm nostalgic so I still Pine for the",
    "start": "1009199",
    "end": "1016160"
  },
  {
    "text": "days when we could name our servers you know I like a good naming scheme I I love to check the up time on a server",
    "start": "1016160",
    "end": "1022600"
  },
  {
    "text": "and be like this server has been up for two and a half years that always felt good that's why I never upgrade my kernels but I",
    "start": "1022600",
    "end": "1028959"
  },
  {
    "text": "understand things push forward you can't do it that way forever and there's definitely way more reasons to do it the",
    "start": "1028959",
    "end": "1034798"
  },
  {
    "text": "new way think think of all those security vulnerabilities that are potentially in that old code all right",
    "start": "1034799",
    "end": "1040678"
  },
  {
    "text": "you convinced",
    "start": "1040679",
    "end": "1043159"
  },
  {
    "text": "me [Music]",
    "start": "1047400",
    "end": "1065760"
  },
  {
    "text": "this episode is brought to you by our friends at fly fly let you deploy full stack apps and databases close your",
    "start": "1066280",
    "end": "1072080"
  },
  {
    "text": "users and they make it too easy no Ops are required and I'm here with Chris mcord the Creator Phoenix framework for",
    "start": "1072080",
    "end": "1077880"
  },
  {
    "text": "elixir and staff engineer at fly Chris I know you've been working hard for many years to remove the complexity of",
    "start": "1077880",
    "end": "1083799"
  },
  {
    "text": "running full stack apps and production so now that you're at fly solving these problems at scale what's the challenge you're facing one of the challenges",
    "start": "1083799",
    "end": "1090280"
  },
  {
    "text": "we've had at fly is getting people to really understand the benefits of running close to our user because I",
    "start": "1090280",
    "end": "1095440"
  },
  {
    "text": "think as developers we internalize as a CDN people get it they're like oh yeah you want to put your JavaScript close to",
    "start": "1095440",
    "end": "1101559"
  },
  {
    "text": "a user and your CSS but then for some reason we have this mental block when it comes to our applications and I don't",
    "start": "1101559",
    "end": "1107360"
  },
  {
    "text": "know why that is and getting people past that block is really important because a lot of us are privileged that we we live",
    "start": "1107360",
    "end": "1112840"
  },
  {
    "text": "in North America and we deploy 50 millisecond a half away so things feel fast like when GitHub maybe they're",
    "start": "1112840",
    "end": "1119000"
  },
  {
    "text": "deploying regionally now but for the first 12 years of their existence GitHub worked great if you lived in North",
    "start": "1119000",
    "end": "1124679"
  },
  {
    "text": "America if you lived in Europe or anywhere else in the world you had to hop over the ocean and it was actually a pretty slow experience so one of the",
    "start": "1124679",
    "end": "1131200"
  },
  {
    "text": "things with fly is it runs your app code close to users so it's the same mental model of like hey it's really important",
    "start": "1131200",
    "end": "1137000"
  },
  {
    "text": "to put our images and our CSS close to users but like what if your app could run there as well API requests could be super fast what if your data was",
    "start": "1137000",
    "end": "1143640"
  },
  {
    "text": "replicated there database request could be super fast so I think the challenge for fly is to get people to understand",
    "start": "1143640",
    "end": "1149320"
  },
  {
    "text": "that the CDN model Maps exactly to your application code and it's even more important for your app to be running",
    "start": "1149320",
    "end": "1154400"
  },
  {
    "text": "close to a user because it's not just requesting a file it's like your data and saving data to dis Bing data for dis",
    "start": "1154400",
    "end": "1160440"
  },
  {
    "text": "that all needs to live close to the user for the same reason that your JavaScript asset should be close to a user very",
    "start": "1160440",
    "end": "1165720"
  },
  {
    "text": "cool thank you Chris so if you understand why you CDA and your CS in your JavaScript then you understand why you should do the same for your full",
    "start": "1165720",
    "end": "1171280"
  },
  {
    "text": "stack app code and fly makes it too easy to launch most apps in about 3 minutes try free today at fly.io again",
    "start": "1171280",
    "end": "1179680"
  },
  {
    "text": "[Music]",
    "start": "1179680",
    "end": "1191919"
  },
  {
    "text": "fly.io so I agree that this feature of being able to kind of like hot upgrade or patch I guess your",
    "start": "1191919",
    "end": "1199000"
  },
  {
    "text": "kernel without upgrading your kernel via ebpf modify the way it works protect",
    "start": "1199000",
    "end": "1205919"
  },
  {
    "text": "yourself from that security vulnerability today without major downtime or upgrades I mean that does",
    "start": "1205919",
    "end": "1213440"
  },
  {
    "text": "seem like an amazingly revolutionary feature is there anything about that",
    "start": "1213440",
    "end": "1219480"
  },
  {
    "text": "though that's scary it's like hey go ahead and change the way that things Works in user space like doesn't that",
    "start": "1219480",
    "end": "1224960"
  },
  {
    "text": "seem a little bit like you could also shoot yourself in the foot yeah yeah people often you know have that concern",
    "start": "1224960",
    "end": "1231640"
  },
  {
    "text": "when they first hear about ebpf here here's this incredibly powerful platform",
    "start": "1231640",
    "end": "1236840"
  },
  {
    "text": "that can change the way your servers are are operating and security is certainly a",
    "start": "1236840",
    "end": "1243880"
  },
  {
    "text": "you know a huge concern so a couple of things to be aware of first of all when",
    "start": "1243880",
    "end": "1249720"
  },
  {
    "text": "you load these ebpf programs into the Kel they go through What's called the",
    "start": "1249720",
    "end": "1254880"
  },
  {
    "text": "verifier which checks that the program is safe to run and this is one of the",
    "start": "1254880",
    "end": "1260559"
  },
  {
    "text": "big advantages compared to let's say a custom kernel module kernel modules that",
    "start": "1260559",
    "end": "1266120"
  },
  {
    "text": "just kernel code they just run nothing is checking whether they're buggy or not",
    "start": "1266120",
    "end": "1272240"
  },
  {
    "text": "with ebpf programs the verifier will make sure that it's going to run to",
    "start": "1272240",
    "end": "1277559"
  },
  {
    "text": "completion so it can't sort of you know Loop forever it will check to make sure that all uh point of D references are",
    "start": "1277559",
    "end": "1284760"
  },
  {
    "text": "safe it will check to make sure that memory access is safe and you know while nobody who works",
    "start": "1284760",
    "end": "1293440"
  },
  {
    "text": "in security is ever going to say and that means it's completely secure but you know the verifier does a lot of work",
    "start": "1293440",
    "end": "1299279"
  },
  {
    "text": "to make sure that the program is as secure as possible and certainly can't",
    "start": "1299279",
    "end": "1304520"
  },
  {
    "text": "crash your kernel that that's kind of a guarantee so that's one side of the sort",
    "start": "1304520",
    "end": "1311960"
  },
  {
    "text": "of security equation the other is that you do have to treat ebpf",
    "start": "1311960",
    "end": "1318720"
  },
  {
    "text": "like root privileges you don't want to allow random people to insert random",
    "start": "1318720",
    "end": "1323960"
  },
  {
    "text": "ebpf programs into your service because they do have the potential to see",
    "start": "1323960",
    "end": "1329200"
  },
  {
    "text": "literally everything that's happening on that machine so treat ebpf like you",
    "start": "1329200",
    "end": "1335400"
  },
  {
    "text": "treat root privileges and be very careful about who you allow to run ebpf",
    "start": "1335400",
    "end": "1340679"
  },
  {
    "text": "programs so with great power comes great responsibility as the comics say that",
    "start": "1340679",
    "end": "1345919"
  },
  {
    "text": "makes sense so how do you run an ebpf program or how would you facilitate not",
    "start": "1345919",
    "end": "1352240"
  },
  {
    "text": "running you know who gets to who doesn't get to I assume these are standard Unix user tools or how does it work so ebpf",
    "start": "1352240",
    "end": "1359679"
  },
  {
    "text": "itself is say a feature within the kernel a bit like I don't know the tcpip",
    "start": "1359679",
    "end": "1365760"
  },
  {
    "text": "stack is a feature within the kernel most people probably won't interact with it directly they'll probably use tools",
    "start": "1365760",
    "end": "1374200"
  },
  {
    "text": "that take advantage of ebpf I love to show people how things",
    "start": "1374200",
    "end": "1379880"
  },
  {
    "text": "work so um I've done talks before that show you know beginner's guide to ebpf",
    "start": "1379880",
    "end": "1385520"
  },
  {
    "text": "programming because I think it really helps people get a mental model if they can see some actual code",
    "start": "1385520",
    "end": "1393559"
  },
  {
    "text": "that's certainly how I learn things I kind of have to see the real thing but",
    "start": "1393559",
    "end": "1398760"
  },
  {
    "text": "the reality is when you write ebpf programs you are interacting with the",
    "start": "1398760",
    "end": "1405120"
  },
  {
    "text": "kernel and the Kernel's data structures and and writing ebpf code does quite",
    "start": "1405120",
    "end": "1411279"
  },
  {
    "text": "rapidly go from Hello World which everybody can do to okay how how do I",
    "start": "1411279",
    "end": "1417400"
  },
  {
    "text": "safely interact with these data structures and what am I changing when I when I change this so for that reason I",
    "start": "1417400",
    "end": "1424520"
  },
  {
    "text": "think most people are going to find ebpf",
    "start": "1424520",
    "end": "1429600"
  },
  {
    "text": "accessible through the use of sort of higher level abstractions projects a few",
    "start": "1429600",
    "end": "1435880"
  },
  {
    "text": "examples um so Brendan Greg who was at Netflix he's now at Intel he did lots of",
    "start": "1435880",
    "end": "1442200"
  },
  {
    "text": "work to build some ebpf based observability performance tracing tools",
    "start": "1442200",
    "end": "1449000"
  },
  {
    "text": "and there's a whole array of I think literally dozens of tools for measuring",
    "start": "1449000",
    "end": "1456520"
  },
  {
    "text": "anything that you might want to measure about how your system's operating and then we get into other",
    "start": "1456520",
    "end": "1464159"
  },
  {
    "text": "abstractions projects like psyllium for networking and observability like Parker",
    "start": "1464159",
    "end": "1471679"
  },
  {
    "text": "for um seeing flame graphs of how you're um or continuous monitoring of how your",
    "start": "1471679",
    "end": "1477360"
  },
  {
    "text": "user space applications are running uh there's a called pixie that's also in the cncf for observing your kubernetes",
    "start": "1477360",
    "end": "1485960"
  },
  {
    "text": "workloads lots of different projects that are using the power of ebpf to give",
    "start": "1485960",
    "end": "1493120"
  },
  {
    "text": "you really Advanced capabilities but that are you know in in in a much more",
    "start": "1493120",
    "end": "1498240"
  },
  {
    "text": "easy to consume fashion than messing with the kernel directly gotcha so most",
    "start": "1498240",
    "end": "1503960"
  },
  {
    "text": "of us will benefit from evf kind of transitively through tools",
    "start": "1503960",
    "end": "1509279"
  },
  {
    "text": "and projects that are using it under the hood and providing some higher level functionality and those of us who are",
    "start": "1509279",
    "end": "1515399"
  },
  {
    "text": "going to write our own ebbf program as well you know who you are right like there's the where it's a self- selecting",
    "start": "1515399",
    "end": "1521360"
  },
  {
    "text": "group uh of people who are very interested at kernel level things or very good at them or can at least learn",
    "start": "1521360",
    "end": "1527000"
  },
  {
    "text": "and has a use case so we were talking about the security angle the other one that I think of when I think of",
    "start": "1527000",
    "end": "1533399"
  },
  {
    "text": "something that allows you to hook into low-level Primitives or low-level kernel space is performance I feel like you",
    "start": "1533399",
    "end": "1540320"
  },
  {
    "text": "could really slow things down if you do it wrong is that the case or are there",
    "start": "1540320",
    "end": "1546279"
  },
  {
    "text": "also things in there that say it has to be performant similar to the verifier",
    "start": "1546279",
    "end": "1551320"
  },
  {
    "text": "how does that work yeah I mean it would certainly be true it certainly be possible to you know right pathological",
    "start": "1551320",
    "end": "1558840"
  },
  {
    "text": "code that would slow things down um generally speaking most ebpf programs",
    "start": "1558840",
    "end": "1564960"
  },
  {
    "text": "tend to be small there's a historical reason for that there used to be a limit of like 4,096 instructions so oh you a",
    "start": "1564960",
    "end": "1574600"
  },
  {
    "text": "few years ago you only could write small ebpf programs that limit has now been",
    "start": "1574600",
    "end": "1580320"
  },
  {
    "text": "raised and and you can to all intents and purposes write pretty much anything you like in in ebpf was that pretty",
    "start": "1580320",
    "end": "1587720"
  },
  {
    "text": "constraining for folks yes yes definitely so everybody rejoiced when this changed yes well certainly it seems",
    "start": "1587720",
    "end": "1595080"
  },
  {
    "text": "like that kind of constraint might actually be a benefit at least maybe at first but now that people are starting to do more with it I can see where they",
    "start": "1595080",
    "end": "1601960"
  },
  {
    "text": "would feel constrained yes yes the fact that you're calling these ebpf programs",
    "start": "1601960",
    "end": "1609559"
  },
  {
    "text": "directly in the kernel can often lead some really um good performance",
    "start": "1609559",
    "end": "1614720"
  },
  {
    "text": "improvements actually particularly for things like networking so as an example",
    "start": "1614720",
    "end": "1620240"
  },
  {
    "text": "of this for cium providing networking to kubernetes pods I need to just back up a",
    "start": "1620240",
    "end": "1626840"
  },
  {
    "text": "bit and talk a little bit about how container networking works all right let's do it when you create a",
    "start": "1626840",
    "end": "1634640"
  },
  {
    "text": "container you usually create a networking name space for that container",
    "start": "1634640",
    "end": "1640159"
  },
  {
    "text": "so um the container has its own networking stack effectively and you",
    "start": "1640159",
    "end": "1645559"
  },
  {
    "text": "create a virtual ethernet connection that connects your container to the host",
    "start": "1645559",
    "end": "1650679"
  },
  {
    "text": "that it's running on and in kubernetes you typically have one of these network name spaces per pod what that means for",
    "start": "1650679",
    "end": "1659320"
  },
  {
    "text": "a network packet that arrives let's say a packet arrives to that machine from",
    "start": "1659320",
    "end": "1664480"
  },
  {
    "text": "the outside world through a physical network card into that machine and in",
    "start": "1664480",
    "end": "1670000"
  },
  {
    "text": "traditional networking that packet's got to go all the way through the networking stack on the host across that virtual",
    "start": "1670000",
    "end": "1677880"
  },
  {
    "text": "ethernet connection into the network namespace for the container and then go through the networking stack again for",
    "start": "1677880",
    "end": "1685080"
  },
  {
    "text": "to reach the application what we do in cium using the power of ebpf we're",
    "start": "1685080",
    "end": "1691080"
  },
  {
    "text": "creating what we call endpoints a sort of logical endpoint for each pod and",
    "start": "1691080",
    "end": "1697240"
  },
  {
    "text": "when that Network packet arrives we can inspect it before it goes through the Kernel's networking stack we can say oh",
    "start": "1697240",
    "end": "1704440"
  },
  {
    "text": "well I know where that you know the IP addresses associated with that part I know I know where it is I have its",
    "start": "1704440",
    "end": "1710399"
  },
  {
    "text": "endpoint right here we can avoid going through the host networking stack and go",
    "start": "1710399",
    "end": "1717000"
  },
  {
    "text": "straight into the pods networking stack and while that might not sound",
    "start": "1717000",
    "end": "1723320"
  },
  {
    "text": "very much it shortens the networking path dramatically and when you add up however",
    "start": "1723320",
    "end": "1730640"
  },
  {
    "text": "millions of packets or this is one of the really fun things about infrastructure software is you know like the these things scale the impact scales",
    "start": "1730640",
    "end": "1738600"
  },
  {
    "text": "up and you can see real improvements significant improvements in latency by",
    "start": "1738600",
    "end": "1744960"
  },
  {
    "text": "using ebpf to shortcut these uh networking Parts there's an old commercial uh where a guy is running",
    "start": "1744960",
    "end": "1752000"
  },
  {
    "text": "through his his office and he's holding a nickel and he's jumping up and down I saved the nickel I saved the nickel and",
    "start": "1752000",
    "end": "1759120"
  },
  {
    "text": "he's just telling everybody he saved the nickel and they're all just like whatever George or whatever like they're rolling their eyes they're like you know",
    "start": "1759120",
    "end": "1765399"
  },
  {
    "text": "perturbed and he runs past these people who are walking through the hallway who like who are like sea level exacts or",
    "start": "1765399",
    "end": "1770720"
  },
  {
    "text": "VPS or whatever and he's like I save the nickel every time we do X whatever X is and the two guys look at each other and",
    "start": "1770720",
    "end": "1776840"
  },
  {
    "text": "they say we do X 75,000 times a day and you know it hits you that all of a",
    "start": "1776840",
    "end": "1782039"
  },
  {
    "text": "sudden this micro optimization at scale is a huge win it sounds like that's what you're describing yeah exactly exactly",
    "start": "1782039",
    "end": "1790679"
  },
  {
    "text": "yeah okay so performance if you do it right you're going to end up better off",
    "start": "1790679",
    "end": "1796080"
  },
  {
    "text": "with an ebpf power program than otherwise yeah the the other aspect of performance so things like uh",
    "start": "1796080",
    "end": "1803039"
  },
  {
    "text": "observability tooling you can hook into these events that might happen very very",
    "start": "1803039",
    "end": "1808559"
  },
  {
    "text": "frequently but run this very small ebpf program to count or you know take some",
    "start": "1808559",
    "end": "1816000"
  },
  {
    "text": "information about those events store them in there's a a thing called ebpf",
    "start": "1816000",
    "end": "1822200"
  },
  {
    "text": "Maps it's a data structure that's shared between or it's in the kernel that the user space programs can access so you",
    "start": "1822200",
    "end": "1829519"
  },
  {
    "text": "can store this data very efficiently in the kernel and then retrieve it going of",
    "start": "1829519",
    "end": "1835960"
  },
  {
    "text": "say on a leisurely basis you know from user space you know leisurely because you don't have to yeah kind of do that",
    "start": "1835960",
    "end": "1842159"
  },
  {
    "text": "transition out for every event you don't have to perhaps you're collecting that",
    "start": "1842159",
    "end": "1847440"
  },
  {
    "text": "information in user space every hundred events or every thousand events so you don't have to usually the transition",
    "start": "1847440",
    "end": "1854440"
  },
  {
    "text": "between kernel and user space is very costly performance wise but you can make",
    "start": "1854440",
    "end": "1861760"
  },
  {
    "text": "it by not having to transition for every event it's it's much more performant let",
    "start": "1861760",
    "end": "1867080"
  },
  {
    "text": "me see if I understand you correctly so in the context of monitoring or observing uh a program people would",
    "start": "1867080",
    "end": "1873919"
  },
  {
    "text": "generally take like one out of every hundred or they would sample because it's cost prohibitive you don't want to",
    "start": "1873919",
    "end": "1880159"
  },
  {
    "text": "bog down the CPU that you're running the program on right you want to observe it without affecting it and you're saying",
    "start": "1880159",
    "end": "1885679"
  },
  {
    "text": "with ebpf because of the performance savings without having to go back and forth between kernel and user space it's",
    "start": "1885679",
    "end": "1892200"
  },
  {
    "text": "so much faster that you don't have to sample or maybe you sample away more often without incurring the performance",
    "start": "1892200",
    "end": "1898960"
  },
  {
    "text": "cost is that what you're saying yeah that that's exactly right yes yes well that sounds cool yeah I can see where",
    "start": "1898960",
    "end": "1905760"
  },
  {
    "text": "that would be great yeah so you can see some really powerful metrics and and um you know make Security checks for every",
    "start": "1905760",
    "end": "1912600"
  },
  {
    "text": "single time that a particular kind of operation happens and you can filter of those events potentially in the kernel",
    "start": "1912600",
    "end": "1919720"
  },
  {
    "text": "so maybe you want to police which processes are allowed to access which",
    "start": "1919720",
    "end": "1925240"
  },
  {
    "text": "files say and there's been a kind of evolution in the way that ebpf programs",
    "start": "1925240",
    "end": "1931600"
  },
  {
    "text": "do that kind of check so uh it used to be very much based around system calls",
    "start": "1931600",
    "end": "1938080"
  },
  {
    "text": "we're going to look at those system calls and see whether or not we permit that open people might have even come",
    "start": "1938080",
    "end": "1945279"
  },
  {
    "text": "across this in the form of set comp so set comp stands for secure Computing",
    "start": "1945279",
    "end": "1951360"
  },
  {
    "text": "it's a pretty old technology Docker you kind of popularized it quite a lot you",
    "start": "1951360",
    "end": "1957360"
  },
  {
    "text": "had set comp profiles that you would associate with with programs to just limit a little bit of what system calls",
    "start": "1957360",
    "end": "1965240"
  },
  {
    "text": "uh applications were allowed to call and that is actually based on BPF it uses does does use BPF to make those checks",
    "start": "1965240",
    "end": "1972200"
  },
  {
    "text": "but as ebpf has evolved we could start looking at things like not just is this this application allowed to call open on",
    "start": "1972200",
    "end": "1979039"
  },
  {
    "text": "any file but is it allowed to open this particular file more recently there's an",
    "start": "1979039",
    "end": "1984519"
  },
  {
    "text": "interface called the Linux security module interface that typically has been",
    "start": "1984519",
    "end": "1990360"
  },
  {
    "text": "used for kernel modules um added Security checks but now we can hook ebpf",
    "start": "1990360",
    "end": "1996559"
  },
  {
    "text": "programs to that security module interface and we can make checks to say",
    "start": "1996559",
    "end": "2001840"
  },
  {
    "text": "is it okay if this user or that process or whatever opens this file",
    "start": "2001840",
    "end": "2007480"
  },
  {
    "text": "we've been working on something called tetragon that um takes this another step",
    "start": "2007480",
    "end": "2013120"
  },
  {
    "text": "further really and allows us to filter on the path name so the name of",
    "start": "2013120",
    "end": "2020159"
  },
  {
    "text": "the file that we're going to open we will'll filter those events in the kernel so we're not making the check-in",
    "start": "2020159",
    "end": "2026360"
  },
  {
    "text": "user space for every single fire Lo and we're we're checking it in the kernel and and only filtering out the file",
    "start": "2026360",
    "end": "2033519"
  },
  {
    "text": "opens that you know just as an example kind of event uh that match a particular prefix for",
    "start": "2033519",
    "end": "2040240"
  },
  {
    "text": "example so you can make these things this inernal filtering can make these Security checks really performant so",
    "start": "2040240",
    "end": "2046760"
  },
  {
    "text": "let's speak for a minute to the person who earlier raised their hand when I said if you're going to be programming",
    "start": "2046760",
    "end": "2052960"
  },
  {
    "text": "ebpf you know who you are to that person getting started or even like language",
    "start": "2052960",
    "end": "2058800"
  },
  {
    "text": "requirements or you is it like a c interface can you use various programming languages maybe just get the",
    "start": "2058800",
    "end": "2064560"
  },
  {
    "text": "lay of the land for that person who like would like to actually dive in and go for the hello world and maybe go beyond maybe point to some of",
    "start": "2064560",
    "end": "2070960"
  },
  {
    "text": "your talks or somewhere where they start yeah so you typically need to write two",
    "start": "2070960",
    "end": "2077720"
  },
  {
    "text": "pieces of code you write the ebpf program itself and that runs in the",
    "start": "2077720",
    "end": "2083000"
  },
  {
    "text": "kernel and you're typically going to write some user space code that can interact with that in some way you maybe",
    "start": "2083000",
    "end": "2090000"
  },
  {
    "text": "you're collecting metrics in the kernel and you're going to have some user space code that will retrieve those metrics",
    "start": "2090000",
    "end": "2097079"
  },
  {
    "text": "and show them to the user or maybe the the user space program is going to",
    "start": "2097079",
    "end": "2102160"
  },
  {
    "text": "provide some configuration information to the ebpf program some evf programs particularly for networking there's no",
    "start": "2102160",
    "end": "2109200"
  },
  {
    "text": "user space part involved you just for example um if you wanted to do firewalling you'd typically just load",
    "start": "2109200",
    "end": "2116040"
  },
  {
    "text": "that into the kernel and and maybe you'd only be reporting a few metrics to to user space anyway so you've got these",
    "start": "2116040",
    "end": "2123599"
  },
  {
    "text": "two parts the kernel code it has to be compiled into BPF bite code and at the",
    "start": "2123599",
    "end": "2132359"
  },
  {
    "text": "moment you can compile from C and you can now also compile from rust so you'll",
    "start": "2132359",
    "end": "2140040"
  },
  {
    "text": "need to be proficient or you know willing to at least take a stab at",
    "start": "2140040",
    "end": "2145400"
  },
  {
    "text": "writing some C code or some Rust code for the user space part you've got quite a lot more",
    "start": "2145400",
    "end": "2152160"
  },
  {
    "text": "flexibility and this is another kind of area where there's quite a lot of um Evolution there are quite a lot of um",
    "start": "2152160",
    "end": "2159480"
  },
  {
    "text": "different approaches different libraries different Frameworks a lot of people start with a framework called BCC which",
    "start": "2159480",
    "end": "2167160"
  },
  {
    "text": "has been around for a few years and it does make it really easy to write both",
    "start": "2167160",
    "end": "2172800"
  },
  {
    "text": "the user space code and to kind of do things like loading that BPF code into the kernel BCC will take care of a lot",
    "start": "2172800",
    "end": "2179040"
  },
  {
    "text": "of that for you but the downside of BCC is that it actually compiles your B PF",
    "start": "2179040",
    "end": "2187160"
  },
  {
    "text": "code kind of in real time so maybe you write your your program in Python or your at least the user space part in",
    "start": "2187160",
    "end": "2193960"
  },
  {
    "text": "Python and when you execute that Python program BCC will go away and compile",
    "start": "2193960",
    "end": "2200800"
  },
  {
    "text": "your C code and load it into the kernel that means wherever you want to run it you would need the C compiler tool chain",
    "start": "2200800",
    "end": "2208200"
  },
  {
    "text": "which is not necessarily what you really want and one of the reasons why they did",
    "start": "2208200",
    "end": "2213480"
  },
  {
    "text": "that is because wherever you compile that code you need to have knowledge or",
    "start": "2213480",
    "end": "2221000"
  },
  {
    "text": "you or the code is going to have to match the kernel data structures on the machine where you're going to run it and",
    "start": "2221000",
    "end": "2227720"
  },
  {
    "text": "kernel data structures do change from version to version so if I build some",
    "start": "2227720",
    "end": "2233319"
  },
  {
    "text": "ebpf code on machine a how do I know that it's going to run on machine B and",
    "start": "2233319",
    "end": "2240280"
  },
  {
    "text": "one of the big Innovations in the last uh sort of recent years in ebpf is a",
    "start": "2240280",
    "end": "2245599"
  },
  {
    "text": "thing called compile once run everywhere which essentially allows you",
    "start": "2245599",
    "end": "2250960"
  },
  {
    "text": "to compile the code on machine a and sort of include the knowledge of what",
    "start": "2250960",
    "end": "2258160"
  },
  {
    "text": "the kernel structures are on machine a and then when you take that compiled",
    "start": "2258160",
    "end": "2263599"
  },
  {
    "text": "object to machine B there's essentially some automatic work that compares ah",
    "start": "2263599",
    "end": "2268800"
  },
  {
    "text": "well the kernel data structures are slightly different here so I might need to adjust the code to take account of that",
    "start": "2268800",
    "end": "2274160"
  },
  {
    "text": "automatically and that makes it much easier to build the code and distribute",
    "start": "2274160",
    "end": "2281000"
  },
  {
    "text": "it to users without them needing to have like the C compiler installed that's made quite a big made",
    "start": "2281000",
    "end": "2287359"
  },
  {
    "text": "it a lot easier for people who do want to distribute ebpf based tools which",
    "start": "2287359",
    "end": "2293040"
  },
  {
    "text": "seems like it's most people because like you said you have this small group of people/ teams who are building the tools",
    "start": "2293040",
    "end": "2298599"
  },
  {
    "text": "and a whole bunch of users who are benefiting from those tools well those tools have to get onto their machines",
    "start": "2298599",
    "end": "2304640"
  },
  {
    "text": "and they have to work on their machines and so now you have this crossplatform problem only the platform is the Linux",
    "start": "2304640",
    "end": "2310599"
  },
  {
    "text": "kernel and so you have these different versions different data structures seems like a definitely real Challenge and that sounds like a boon to to ebpf",
    "start": "2310599",
    "end": "2317560"
  },
  {
    "text": "people for getting their stuff out there absolutely it's it's a real real kind of",
    "start": "2317560",
    "end": "2322960"
  },
  {
    "text": "Step change I think we keep seeing these big improvements in ebpf that uh just",
    "start": "2322960",
    "end": "2330640"
  },
  {
    "text": "mean that it's more accessible or the tools based on it are more accessible To The World At Large and that's fantastic",
    "start": "2330640",
    "end": "2337880"
  },
  {
    "text": "what's still painful where could The Next Step change come oh that's a great question some of this is still painful",
    "start": "2337880",
    "end": "2345200"
  },
  {
    "text": "because not everyone is running a modern enough kernel to have you know all the latest features especially that",
    "start": "2345200",
    "end": "2352160"
  },
  {
    "text": "instruction set change right the the max 496 you said that was a recent thing yes",
    "start": "2352160",
    "end": "2358640"
  },
  {
    "text": "that that would be an example yeah so um if you have a tool that needs to exceed",
    "start": "2358640",
    "end": "2366680"
  },
  {
    "text": "that limit then yeah you might need to do some tricks to to make it run on older kernels right there are things",
    "start": "2366680",
    "end": "2374440"
  },
  {
    "text": "like the way that you can actually attach programs to different events in",
    "start": "2374440",
    "end": "2380280"
  },
  {
    "text": "the kernel some of those have have evolved and and become more performant so for example you you'll see loads of",
    "start": "2380280",
    "end": "2388079"
  },
  {
    "text": "examples of ebpf programs that attached to K probes kernel probe it's basically",
    "start": "2388079",
    "end": "2393960"
  },
  {
    "text": "a hook in the kernel K probes pre-existed ebpf and but it was for",
    "start": "2393960",
    "end": "2399520"
  },
  {
    "text": "tracing or adding tracing probes into the kernel and it's essentially add a",
    "start": "2399520",
    "end": "2405240"
  },
  {
    "text": "kernel add a k probe at the entry to any function pretty much in the kernel",
    "start": "2405240",
    "end": "2411119"
  },
  {
    "text": "here's the function name I want to add some tracing there and you've been able to use ebpf programs hook those to K",
    "start": "2411119",
    "end": "2418359"
  },
  {
    "text": "probes for for a long time and over time there's been some more and more",
    "start": "2418359",
    "end": "2424720"
  },
  {
    "text": "performant ways of doing that so the the current preferred approach to that is",
    "start": "2424720",
    "end": "2431280"
  },
  {
    "text": "called f entry and it's it doesn't make that much it certainly doesn't matter to",
    "start": "2431280",
    "end": "2436359"
  },
  {
    "text": "anybody who's just using the tool sure pretty easy change for somebody who's writing the code but uh it does just and",
    "start": "2436359",
    "end": "2445040"
  },
  {
    "text": "like we were saying before all those nickels every you know tiny Improvement in the speed of running that program",
    "start": "2445040",
    "end": "2450560"
  },
  {
    "text": "once it will add up when you've done it a million times so we'll see things like more performant hooks there's there's",
    "start": "2450560",
    "end": "2458040"
  },
  {
    "text": "also I think for ebpf for folks who are developing",
    "start": "2458040",
    "end": "2463200"
  },
  {
    "text": "ebpf uh tools there's there's lots of innovation happening in things like",
    "start": "2463200",
    "end": "2468839"
  },
  {
    "text": "testing and code coverage and um sort of instrumenting your code getting your",
    "start": "2468839",
    "end": "2475000"
  },
  {
    "text": "code through the verifier is still something of an art and um there's",
    "start": "2475000",
    "end": "2480440"
  },
  {
    "text": "there's I think probably more improvements to come in sort of making",
    "start": "2480440",
    "end": "2485760"
  },
  {
    "text": "it easier for people to write those ebpf programs kind of um without necessarily",
    "start": "2485760",
    "end": "2491599"
  },
  {
    "text": "having to um do such a dance with the verifier there's a really great quote uh",
    "start": "2491599",
    "end": "2497000"
  },
  {
    "text": "I read that described the ebpf verifier as a I think it was a Fickle",
    "start": "2497000",
    "end": "2502880"
  },
  {
    "text": "Beast is quite quite a nice phrase that was nice sounds like something i' like to stay away from if at all",
    "start": "2502880",
    "end": "2509880"
  },
  {
    "text": "possible it's a challenge",
    "start": "2509880",
    "end": "2513759"
  },
  {
    "text": "though [Music]",
    "start": "2515240",
    "end": "2524040"
  },
  {
    "text": "[Applause] [Music] [Applause]",
    "start": "2524040",
    "end": "2529740"
  },
  {
    "text": "[Music]",
    "start": "2529740",
    "end": "2536190"
  },
  {
    "text": "this episode is brought to you by square millions of businesses depend on Square Partners to build custom Solutions using",
    "start": "2538560",
    "end": "2545359"
  },
  {
    "text": "Square products and when you become a square Solutions partner you get to leverage the entire",
    "start": "2545359",
    "end": "2550440"
  },
  {
    "text": "Square platform to build robust e-commerce websites smart payment Integrations and custom solutions for",
    "start": "2550440",
    "end": "2556280"
  },
  {
    "text": "square sellers you don't just get access to sdks and apis you get access to the",
    "start": "2556280",
    "end": "2561599"
  },
  {
    "text": "exact sdks and the exact apis that square uses to build the square platform and all their applications this is a",
    "start": "2561599",
    "end": "2569520"
  },
  {
    "text": "partnership that helps you grow square has partner managers to help you develop your strategy close deals and gain",
    "start": "2569520",
    "end": "2574680"
  },
  {
    "text": "customers there are literally millions of square sellers who need custom Solutions so they can innovate for their",
    "start": "2574680",
    "end": "2580480"
  },
  {
    "text": "customers and build their businesses you get incentives and profit sharing you can earn a 25% status Revenue share",
    "start": "2580480",
    "end": "2587000"
  },
  {
    "text": "seller referrals product bounties and more you get Alpha access to apis and new products you get product marketing",
    "start": "2587000",
    "end": "2592920"
  },
  {
    "text": "Tech and sales support and you're also able to get square certified and get training on all things Square so you can",
    "start": "2592920",
    "end": "2598079"
  },
  {
    "text": "deliver for square sellers the next step is to head to changel law.com square and click become a Solutions partner again",
    "start": "2598079",
    "end": "2604640"
  },
  {
    "text": "changel law.com square and by our friends at retool retool helps teams focus on product",
    "start": "2604640",
    "end": "2611000"
  },
  {
    "text": "development and customer value not building and maintaining internal tools it's a low code platform built",
    "start": "2611000",
    "end": "2617839"
  },
  {
    "text": "specifically for developers no more UI libraries no more hacking together data sources and no more worrying about",
    "start": "2617839",
    "end": "2624359"
  },
  {
    "text": "access controls start shipping internal apps to move your business forward in minutes with basically zero up time",
    "start": "2624359",
    "end": "2630880"
  },
  {
    "text": "reliability or maintenance burden on your team some of the best teams out there trust retool Brad coinbase plaid",
    "start": "2630880",
    "end": "2638040"
  },
  {
    "text": "door Dash legal genius Amazon Alberts pelaton and so many more the developers",
    "start": "2638040",
    "end": "2644119"
  },
  {
    "text": "at these teams trust retool as their platform to build their internal tools and that means you can too it's free to",
    "start": "2644119",
    "end": "2650440"
  },
  {
    "text": "try so head to ret.com changelog again ret.com",
    "start": "2650440",
    "end": "2656600"
  },
  {
    "text": "[Music]",
    "start": "2656600",
    "end": "2665000"
  },
  {
    "text": "changelog [Music] [Applause] [Music]",
    "start": "2665000",
    "end": "2672800"
  },
  {
    "text": "Okay so we've talked a lot about what ebpf is I'm going to ask you a slightly different question interpret it however",
    "start": "2672800",
    "end": "2678040"
  },
  {
    "text": "you like who is ebpf oh interesting question so I'm going to answer that",
    "start": "2678040",
    "end": "2685520"
  },
  {
    "text": "with a bit of a story about like how I got excited about ebpf okay so I spoke",
    "start": "2685520",
    "end": "2694400"
  },
  {
    "text": "at a dockercon back in 2017 and I was talking about how",
    "start": "2694400",
    "end": "2699760"
  },
  {
    "text": "containers worked and I saw a talk by Thomas graph about the San project and",
    "start": "2699760",
    "end": "2706319"
  },
  {
    "text": "it talks about how it was using ebpf to create this really cool container networking and I thought that is really",
    "start": "2706319",
    "end": "2714960"
  },
  {
    "text": "cool and yet it's so far into like nobody can possibly use this because it needs this Cutting Edge kernel at the",
    "start": "2714960",
    "end": "2722400"
  },
  {
    "text": "time but I thought that's interesting Tech you know going to just keep an eye",
    "start": "2722400",
    "end": "2727440"
  },
  {
    "text": "on that I want to want to see how that works mhm and then uh a few years later",
    "start": "2727440",
    "end": "2734119"
  },
  {
    "text": "I was working for a security company and somebody suggested using EB they had",
    "start": "2734119",
    "end": "2741559"
  },
  {
    "text": "actually been doing a project outside of work using uh evf on Android for a sort",
    "start": "2741559",
    "end": "2747359"
  },
  {
    "text": "of security related project and they like could we use ebpf to build security",
    "start": "2747359",
    "end": "2753920"
  },
  {
    "text": "tooling so we work on that for a while and in the meantime I was seeing more",
    "start": "2753920",
    "end": "2760960"
  },
  {
    "text": "and more of this ebpf community kind of building out more and more people using",
    "start": "2760960",
    "end": "2766240"
  },
  {
    "text": "ebpf and different projects and is surveillant which was",
    "start": "2766240",
    "end": "2771440"
  },
  {
    "text": "the company that Thomas and uh Dan fendant Thomas who I'd seen speaking at",
    "start": "2771440",
    "end": "2777000"
  },
  {
    "text": "at Docker con right they founded I surveillant around the silian project",
    "start": "2777000",
    "end": "2782440"
  },
  {
    "text": "and they were facilitating this ebpf community and uh you know I realized that that was",
    "start": "2782440",
    "end": "2789640"
  },
  {
    "text": "if I wanted to really immerse myself in evf that was the place to to join and",
    "start": "2789640",
    "end": "2795359"
  },
  {
    "text": "and that's why I joined is surveillant and since I've been there",
    "start": "2795359",
    "end": "2800400"
  },
  {
    "text": "one of the things that really I hadn't appreciated before I was there was the extent to which cium and ebpf have",
    "start": "2800400",
    "end": "2807520"
  },
  {
    "text": "actually been kind of developed in almost lock step so there were two",
    "start": "2807520",
    "end": "2812640"
  },
  {
    "text": "maintainers of the ebpf subsystem in the konel uh one of them is Daniel bolman",
    "start": "2812640",
    "end": "2817880"
  },
  {
    "text": "who works for is ofen and the other is alexe starovoitov who works for",
    "start": "2817880",
    "end": "2823559"
  },
  {
    "text": "meta and you know they are the people who kind of Drive ef's",
    "start": "2823559",
    "end": "2830040"
  },
  {
    "text": "future and a lot of how ebpf has evolved",
    "start": "2830040",
    "end": "2835400"
  },
  {
    "text": "certainly on the networking side has been in order to allow syum to build",
    "start": "2835400",
    "end": "2841400"
  },
  {
    "text": "some cool networking feature we need support in UPF to enable that you know",
    "start": "2841400",
    "end": "2847640"
  },
  {
    "text": "maybe different hooks into different parts in the networking stack as an example so it was just fascinating to me",
    "start": "2847640",
    "end": "2854960"
  },
  {
    "text": "to see just how much of that the development in ebbf had really been done",
    "start": "2854960",
    "end": "2860119"
  },
  {
    "text": "to enable I mean to enable the platform as a whole but particularly with this vision of how ebpf could um improve",
    "start": "2860119",
    "end": "2868920"
  },
  {
    "text": "networking and and facilitate all these really efficient networking features so",
    "start": "2868920",
    "end": "2874839"
  },
  {
    "text": "for me that was kind of why I was drawn to that team the expertise is just you",
    "start": "2874839",
    "end": "2882400"
  },
  {
    "text": "know beyond comparison I think and uh really exciting place to be that's cool",
    "start": "2882400",
    "end": "2887559"
  },
  {
    "text": "so in terms of open source project related to a corporate entity how does I",
    "start": "2887559",
    "end": "2894480"
  },
  {
    "text": "guess where does stop and isov veent start with regards to you know Financial",
    "start": "2894480",
    "end": "2899599"
  },
  {
    "text": "arrangements and stuff like that how does that all work so cium has always been open source and one of the things",
    "start": "2899599",
    "end": "2904880"
  },
  {
    "text": "that we did not long after I joined was donate the cyan project to the cncf so that it's got that Foundation ownership",
    "start": "2904880",
    "end": "2911880"
  },
  {
    "text": "so that um you know everyone can have confidence in it as a community project",
    "start": "2911880",
    "end": "2917880"
  },
  {
    "text": "yeah and I surveillant provides an Enterprise distribution of that so and the way we approach this is that you",
    "start": "2917880",
    "end": "2924680"
  },
  {
    "text": "know syum Works cium open source works there are plenty of people who are using",
    "start": "2924680",
    "end": "2931319"
  },
  {
    "text": "cium at scale you know some house that you can go and take a look look at the the celium website and there's a a list",
    "start": "2931319",
    "end": "2938160"
  },
  {
    "text": "as long as your arm of of household names who are using celium and a good number of those are using it open source",
    "start": "2938160",
    "end": "2945760"
  },
  {
    "text": "but some of them either need support that's the kind of classic open source",
    "start": "2945760",
    "end": "2952079"
  },
  {
    "text": "uh model right or some of them need features that you only need if you're an",
    "start": "2952079",
    "end": "2958119"
  },
  {
    "text": "Enterprise you know a large Enterprise for example I I mentioned before about",
    "start": "2958119",
    "end": "2963480"
  },
  {
    "text": "you know integrating with um Legacy workloads in data centers you know if you're operating your own data center",
    "start": "2963480",
    "end": "2970119"
  },
  {
    "text": "you are the kind of organization that spends money on software right you you",
    "start": "2970119",
    "end": "2975640"
  },
  {
    "text": "know you you want to license software you want to have somebody who's going to provide some some guarantees around that",
    "start": "2975640",
    "end": "2982440"
  },
  {
    "text": "software so those kind of features that people really only need in an Enterprise",
    "start": "2982440",
    "end": "2988720"
  },
  {
    "text": "environment you know some really Advanced UI some really Advanced security tooling features that we you",
    "start": "2988720",
    "end": "2996440"
  },
  {
    "text": "know add on top of the the open- source project for our Enterprise customers and",
    "start": "2996440",
    "end": "3002920"
  },
  {
    "text": "there are other people because it's in the cncf there's um you know other offerings other people who can use uh",
    "start": "3002920",
    "end": "3008720"
  },
  {
    "text": "celium or or build products on top of celium love that because now you're competing on a Level Playing Field of",
    "start": "3008720",
    "end": "3014799"
  },
  {
    "text": "course as the maintainers of celium you have that expertise the street cred so to speak so",
    "start": "3014799",
    "end": "3022119"
  },
  {
    "text": "other people have to establish that but the fact that you can have multiple service providers or licensers or",
    "start": "3022119",
    "end": "3027920"
  },
  {
    "text": "offerings that are competing on how well they do that and not competing over the",
    "start": "3027920",
    "end": "3033480"
  },
  {
    "text": "proprietariness of the software that they you know that they're running I mean that's spectacular for everybody",
    "start": "3033480",
    "end": "3038960"
  },
  {
    "text": "yeah absolutely I mean I'm a big believer in the power of Open Source in general and specifically for",
    "start": "3038960",
    "end": "3046400"
  },
  {
    "text": "infrastructure software just the you know the sheer number of people who will use open source code I it creates such",
    "start": "3046400",
    "end": "3053160"
  },
  {
    "text": "field hardening that I think for that kind of C capability something like you know how",
    "start": "3053160",
    "end": "3058599"
  },
  {
    "text": "your networking is plugged together it's really an advantage for it to be open source yeah and then uh you know having",
    "start": "3058599",
    "end": "3066920"
  },
  {
    "text": "it's this huge community of people who also feel confident about contributing to it as well which I I absolutely love",
    "start": "3066920",
    "end": "3073920"
  },
  {
    "text": "totally well if you look at the network stack or the OSI stack whichever one you prefer you want as much competition at",
    "start": "3073920",
    "end": "3079920"
  },
  {
    "text": "the application layer as possible and Co collaboration at the lower layers",
    "start": "3079920",
    "end": "3085920"
  },
  {
    "text": "you know if we're all Reinventing these lowlevel things then we're just we're just wasting efforts and you can find",
    "start": "3085920",
    "end": "3091599"
  },
  {
    "text": "competitive advantages by doing that at you know but uh they're going to be just isolated to you and have all those",
    "start": "3091599",
    "end": "3097079"
  },
  {
    "text": "drawbacks or everybody can collaborate at those levels have all the best Minds working on the same thing pushing",
    "start": "3097079",
    "end": "3102960"
  },
  {
    "text": "everybody forward and then competing at the application layer way more effective",
    "start": "3102960",
    "end": "3108480"
  },
  {
    "text": "that way I mean just just the way it should work 100% yeah absolutely and we can take lessons from history around",
    "start": "3108480",
    "end": "3115040"
  },
  {
    "text": "this so back in the day if you wanted to use TCP you had to include a TCP Library",
    "start": "3115040",
    "end": "3122760"
  },
  {
    "text": "yeah you know in user space and nowadays we fully expect that you're going to run",
    "start": "3122760",
    "end": "3129000"
  },
  {
    "text": "TCP you know you're just going to use the kernel services to get that TCP connection going and uh I think it's",
    "start": "3129000",
    "end": "3137839"
  },
  {
    "text": "completely sensible to extrapolate from that direction of travel and expect that more and more of the infrastructure",
    "start": "3137839",
    "end": "3144640"
  },
  {
    "text": "software will not just become that kind of commodity open source software but also that more",
    "start": "3144640",
    "end": "3150400"
  },
  {
    "text": "and more of it will be handled by the colel so especially now that the kernel itself the kernel authors don't have to",
    "start": "3150400",
    "end": "3157079"
  },
  {
    "text": "handle it right with ebpf you have more and more kernel based offerings that are",
    "start": "3157079",
    "end": "3162160"
  },
  {
    "text": "happening by people who are not C you know Linux kernel or we can talk about Windows kernel as well core maintainers",
    "start": "3162160",
    "end": "3169319"
  },
  {
    "text": "like it can H The Innovation can happen in a much broader group of folks because of ebpf yeah yes yes and it gives us the",
    "start": "3169319",
    "end": "3177079"
  },
  {
    "text": "ability to have you know people are using Linux for you know just the",
    "start": "3177079",
    "end": "3182319"
  },
  {
    "text": "broadest range of different purposes and the Linux kernel has to work on you know",
    "start": "3182319",
    "end": "3187440"
  },
  {
    "text": "iot devices and desktops and data centers and you probably the moon I don't know you know and uh fact I think",
    "start": "3187440",
    "end": "3194680"
  },
  {
    "text": "Linux does run on the Mars I'm sure it does yeah one of the Mars Landers yeah um so Linux you know the kernel itself",
    "start": "3194680",
    "end": "3202200"
  },
  {
    "text": "has to be super flexible you know and and very backwards",
    "start": "3202200",
    "end": "3208000"
  },
  {
    "text": "compatible but you can do M much more sort of innovation and and bespoke things using ebpf which you it is a rich",
    "start": "3208000",
    "end": "3215559"
  },
  {
    "text": "seam of of innovation there's definitely a parallel between browser Tech and",
    "start": "3215559",
    "end": "3220680"
  },
  {
    "text": "kernel Tech in this way I know I've heard people compare ebpf to be like the JavaScript of the Linux kernel yes just",
    "start": "3220680",
    "end": "3227119"
  },
  {
    "text": "because of the JavaScript relationship to the browser and I can definitely the more when I first heard that I was like",
    "start": "3227119",
    "end": "3233040"
  },
  {
    "text": "I don't know about that but the more I think about it the more that it does make sense as an analogy and all of the",
    "start": "3233040",
    "end": "3238280"
  },
  {
    "text": "Innovation that happens in the browsers by people writing JavaScript libraries that eventually those things prove",
    "start": "3238280",
    "end": "3244880"
  },
  {
    "text": "themselves out like jQuery for instance the way it does a lot of selecting and stuff all of a sudden that stuff gets",
    "start": "3244880",
    "end": "3250359"
  },
  {
    "text": "brought back in to the browsers and so we could have similar thing here we have the innovation in the ebpf world and",
    "start": "3250359",
    "end": "3256520"
  },
  {
    "text": "then the best ideas the most obvious ones in retrospect the ones that everybody needs well that stuff just",
    "start": "3256520",
    "end": "3261880"
  },
  {
    "text": "baked back into the kernel maybe that would be cool absolutely so on the website ebpf doio it gives four kinds of",
    "start": "3261880",
    "end": "3270359"
  },
  {
    "text": "applications networking security profiling and observability you mentioned three we could probably bik",
    "start": "3270359",
    "end": "3276559"
  },
  {
    "text": "shed a semantic debate on is observability and profiling I guess different things the same thing is",
    "start": "3276559",
    "end": "3282000"
  },
  {
    "text": "tracing part of observability I don't know it doesn't matter to me but if we think about these three categories that",
    "start": "3282000",
    "end": "3287960"
  },
  {
    "text": "you gave earlier networking security and observability can you give examples of people doing cool stuff feel free to",
    "start": "3287960",
    "end": "3294680"
  },
  {
    "text": "name name GES or open source projects in each of these three like if you're going to say okay here's cool stuff that's",
    "start": "3294680",
    "end": "3300559"
  },
  {
    "text": "happening I know you've touched on them throughout the show but if we were just going to say here's a cool networking stuff here's cool security stuff here's",
    "start": "3300559",
    "end": "3307040"
  },
  {
    "text": "cool observability stuff what would you what would you mention for those three yeah so for networking I mean obviously",
    "start": "3307040",
    "end": "3314280"
  },
  {
    "text": "I I am very involved with selum so that's the first name that that comes to",
    "start": "3314280",
    "end": "3319760"
  },
  {
    "text": "mind um but there are other you know really interesting uh users projects so",
    "start": "3319760",
    "end": "3326520"
  },
  {
    "text": "Facebook now meta um have a project called katron which is a load balancer",
    "start": "3326520",
    "end": "3333000"
  },
  {
    "text": "and I'm trying to remember what the date is I want to say",
    "start": "3333000",
    "end": "3338280"
  },
  {
    "text": "2016 let's let's say 2016 and I'll apologize if it's if I'm not quite right",
    "start": "3338280",
    "end": "3343359"
  },
  {
    "text": "there but okay basically every single packet since that dat that goes to",
    "start": "3343359",
    "end": "3348680"
  },
  {
    "text": "Facebook has been through ebpf every single packet has been processed by an ebpf program wow if that doesn't",
    "start": "3348680",
    "end": "3355359"
  },
  {
    "text": "convince people about the scalability of ebpf I don't know what would right Cloud flare also um using ebpf to do things",
    "start": "3355359",
    "end": "3363799"
  },
  {
    "text": "like dos protection and and load balancing and um yeah lots of really cool uh blog posts that cloud have",
    "start": "3363799",
    "end": "3370799"
  },
  {
    "text": "written about their use if we turn to observability I mentioned the work that",
    "start": "3370799",
    "end": "3377599"
  },
  {
    "text": "Brendan Greg had done and and you know this whole series of tools that and he developed that at Netflix where they",
    "start": "3377599",
    "end": "3384319"
  },
  {
    "text": "were using it for again really scalable you know performance measurements and and yeah whether we call it tracing or",
    "start": "3384319",
    "end": "3391000"
  },
  {
    "text": "observability or metrics or or whatever it's all about you want to give a hot take do you have a do you have an opinion on this uh is is it worth",
    "start": "3391000",
    "end": "3397839"
  },
  {
    "text": "distinguishing or no I think there is a a bit of a distinction where observability allows you to make sense",
    "start": "3397839",
    "end": "3405839"
  },
  {
    "text": "of data so things like I mean I think we would say that metrics were different from logs were different from",
    "start": "3405839",
    "end": "3411799"
  },
  {
    "text": "traces uh and then maybe observability is about how do I take all that information and actually ask questions",
    "start": "3411799",
    "end": "3418720"
  },
  {
    "text": "of it in a sensible way an umbrella term sort of yeah yeah it's definitely a I",
    "start": "3418720",
    "end": "3426160"
  },
  {
    "text": "think a there's an overlap definitely I know it's been the subject of many go time unpopular opinions whether or not",
    "start": "3426160",
    "end": "3432319"
  },
  {
    "text": "observability is a thing or not really a thing so it's fun for nerds to talk",
    "start": "3432319",
    "end": "3438440"
  },
  {
    "text": "about yeah I do quite like it as that umbrella term for I want to know",
    "start": "3438440",
    "end": "3443640"
  },
  {
    "text": "something about what's happening in my system in my cluster in my deployment",
    "start": "3443640",
    "end": "3449960"
  },
  {
    "text": "yeah think it's quite a nice term yeah so observability projects I I think I",
    "start": "3449960",
    "end": "3455480"
  },
  {
    "text": "mentioned pixie which is cncf sandbox project Parker is another one that's",
    "start": "3455480",
    "end": "3460520"
  },
  {
    "text": "really interesting for observing your applications Behavior cium has a project",
    "start": "3460520",
    "end": "3466440"
  },
  {
    "text": "called Hubble or sub project called Hubble that shows you things like your um service graph in kubernetes so how",
    "start": "3466440",
    "end": "3473559"
  },
  {
    "text": "your services are communicating with each other I can also show you individual Network packets which is uh",
    "start": "3473559",
    "end": "3479640"
  },
  {
    "text": "pretty cool if you're trying to debug yeah debug DNS because it's always DNS",
    "start": "3479640",
    "end": "3484960"
  },
  {
    "text": "yeah right um yeah other networking problems are",
    "start": "3484960",
    "end": "3490440"
  },
  {
    "text": "available by request yeah yeah and and then on security side um so Falco was",
    "start": "3490440",
    "end": "3498839"
  },
  {
    "text": "probably the first security project certainly in the cntf that was using ipf this project from my former colleagues",
    "start": "3498839",
    "end": "3505760"
  },
  {
    "text": "Aqua called Tracy and then in celium we have aort of cium family we have a a sub",
    "start": "3505760",
    "end": "3513200"
  },
  {
    "text": "project called tetragon which uh is allowing you to create lowlevel",
    "start": "3513200",
    "end": "3521839"
  },
  {
    "text": "security Primitives almost in yaml form and apply them to your kubernetes",
    "start": "3521839",
    "end": "3527039"
  },
  {
    "text": "cluster and you can do really cool things with with Teton I I get a bit over excited about this because if your",
    "start": "3527039",
    "end": "3533880"
  },
  {
    "text": "CLE is modern enough you can not just detect that something is you know potentially",
    "start": "3533880",
    "end": "3541640"
  },
  {
    "text": "malicious behavior you know process is opening the wrong file or or connecting to a cryptocurrency minor or or whatever",
    "start": "3541640",
    "end": "3548720"
  },
  {
    "text": "malicious thing that you've detected you can kill that process",
    "start": "3548720",
    "end": "3554680"
  },
  {
    "text": "synchronously from within the kernel and what that means is the process get killed IM me it's not like you have to",
    "start": "3554680",
    "end": "3560000"
  },
  {
    "text": "go and tell somebody and you know and then eventually your process gets killed",
    "start": "3560000",
    "end": "3565720"
  },
  {
    "text": "it's happening right there and then and it stops the attack before it happens",
    "start": "3565720",
    "end": "3571280"
  },
  {
    "text": "which is super fun to demo I love it I bet that makes it for a great demo very",
    "start": "3571280",
    "end": "3577160"
  },
  {
    "text": "good that helps out a lot especially for people who are interested in cool things being built with psyllium so we've been",
    "start": "3577160",
    "end": "3583760"
  },
  {
    "text": "I've been ferociously grabbing links as you talked so those will all be in the show notes for the listeners as we wrap",
    "start": "3583760",
    "end": "3589319"
  },
  {
    "text": "up Liz let's talk about the future where things are going you mentioned windows konel I assume that's like a burgeoning",
    "start": "3589319",
    "end": "3594720"
  },
  {
    "text": "thing or is it available and like what's coming down the pipeline in the evf world yeah so the windows ebpf uh I know",
    "start": "3594720",
    "end": "3604559"
  },
  {
    "text": "that they have got as far as being able to demo syum running on windows so",
    "start": "3604559",
    "end": "3610160"
  },
  {
    "text": "whether it's in production windows I I don't know but it's certainly some",
    "start": "3610160",
    "end": "3616359"
  },
  {
    "text": "significant progress being made there to to implement it on on Windows I'm sure",
    "start": "3616359",
    "end": "3621880"
  },
  {
    "text": "we will hear more about that um and also more about sort of the future of ebpf",
    "start": "3621880",
    "end": "3627920"
  },
  {
    "text": "more generally at the Community Conference that's coming up that um I'm",
    "start": "3627920",
    "end": "3633240"
  },
  {
    "text": "part of the team organizing called ebpf Summit which happens September 28th and",
    "start": "3633240",
    "end": "3639200"
  },
  {
    "text": "29th put it in your Dar um the DAT and we are going to have amongst the",
    "start": "3639200",
    "end": "3644480"
  },
  {
    "text": "speakers we've got both of I mentioned before the two Colonel maintainers who",
    "start": "3644480",
    "end": "3649760"
  },
  {
    "text": "work on ebpf both of them Alexi and Daniel are both going to be speaking at ebpf Summit this year so we should get a",
    "start": "3649760",
    "end": "3656960"
  },
  {
    "text": "pretty good insight into what the future of ebpf is from a",
    "start": "3656960",
    "end": "3662799"
  },
  {
    "text": "platform perspective I think that will be super interesting and we're also going to hear from lots of end users",
    "start": "3662799",
    "end": "3669680"
  },
  {
    "text": "lots of people working on different projects uh we're in the process of going through the you know session",
    "start": "3669680",
    "end": "3674880"
  },
  {
    "text": "proposals at the moment and there are so many good proposals it's going to be really difficult to choose but last year",
    "start": "3674880",
    "end": "3681480"
  },
  {
    "text": "we had a lot of fun we had a lot of people on slack kind of doing things like a capture the flag with us",
    "start": "3681480",
    "end": "3688280"
  },
  {
    "text": "interactively and uh it was tons of fun so hopefully this year's EF Summit will",
    "start": "3688280",
    "end": "3693920"
  },
  {
    "text": "be even bigger and better and more fun very cool and that is fully virtual so",
    "start": "3693920",
    "end": "3700240"
  },
  {
    "text": "access from anywhere with an internet connection yeah excellent well anything",
    "start": "3700240",
    "end": "3706240"
  },
  {
    "text": "we left uncovered anything else you want to talk about here before we call a day not that I can think of no um yeah I",
    "start": "3706240",
    "end": "3713920"
  },
  {
    "text": "think we we've pretty much covered everything excellent excellent well listener all the links to all the things",
    "start": "3713920",
    "end": "3718960"
  },
  {
    "text": "are in your show notes Liz thanks so much for joining us on the show thanks for your excitement and your ability to",
    "start": "3718960",
    "end": "3724720"
  },
  {
    "text": "so well explain these difficult Concepts and get other people excited it sounds like you're a great advocate for this",
    "start": "3724720",
    "end": "3730720"
  },
  {
    "text": "technology and the power that it's unlocking for so many of us through people building Cool Tools and stuff",
    "start": "3730720",
    "end": "3736880"
  },
  {
    "text": "that probably we haven't even thought about yet we have these three major buckets but I'm guessing there maybe a",
    "start": "3736880",
    "end": "3741920"
  },
  {
    "text": "fourth bucket out there maybe things that we don't even no so I I'm excited about the future that ebpf is affording",
    "start": "3741920",
    "end": "3748200"
  },
  {
    "text": "US absolutely me too it's uh it's exciting space to to watch and and be",
    "start": "3748200",
    "end": "3753520"
  },
  {
    "text": "part of absolutely we may have to have you back maybe uh put a marker a year from now maybe we have you back have a",
    "start": "3753520",
    "end": "3759039"
  },
  {
    "text": "catch up see what's going on see what people have invented in the meantime that would be fun that would be awesome",
    "start": "3759039",
    "end": "3764200"
  },
  {
    "text": "all right thanks Liz thanks everybody thank you for tuning in let us",
    "start": "3764200",
    "end": "3770760"
  },
  {
    "text": "know in the comments what you think about ebpf the link is in the show notes thanks again to our friends at fastly",
    "start": "3770760",
    "end": "3777119"
  },
  {
    "text": "and fly everywhere around the globe our pods and our app are fast and that's because fastly and fly are fast",
    "start": "3777119",
    "end": "3784200"
  },
  {
    "text": "everywhere check them out at fastly.com and fly. thanks also to break master",
    "start": "3784200",
    "end": "3789880"
  },
  {
    "text": "cylinder for making our awesome beats and last but not least thanks to you for listening to the show all the way to the",
    "start": "3789880",
    "end": "3794960"
  },
  {
    "text": "very end tell a friend if you love the show send them to changel FM and tell",
    "start": "3794960",
    "end": "3800160"
  },
  {
    "text": "subscribe that's it we're done we'll see you next week",
    "start": "3800160",
    "end": "3806279"
  },
  {
    "text": "[Music]",
    "start": "3807120",
    "end": "3833279"
  },
  {
    "text": "n [Music]",
    "start": "3833279",
    "end": "3850440"
  },
  {
    "text": "[Music]",
    "start": "3853520",
    "end": "3863200"
  },
  {
    "text": "w [Music]",
    "start": "3863200",
    "end": "3884169"
  },
  {
    "text": "[Music] k",
    "start": "3889420",
    "end": "3894760"
  }
]