[
  {
    "text": "I eventually figured out a very clever trick there's a rollup feature called preserve modules so instead of getting a bundle what you get is all of the local",
    "start": "40",
    "end": "7359"
  },
  {
    "text": "files end up being compiled out as those local file names so you get like a new tree in a disc directory of of all those",
    "start": "7359",
    "end": "13639"
  },
  {
    "text": "compile targets so that really helped and I realized I can point this script at my tests and my tests actually import",
    "start": "13639",
    "end": "20279"
  },
  {
    "text": "all of the relevant files in my package so I get not only my tests cross compiled that I can then test the CJs",
    "start": "20279",
    "end": "26640"
  },
  {
    "text": "version of but also that will automatically sort of in an automated I find all of my end points wait so",
    "start": "26640",
    "end": "32320"
  },
  {
    "text": "Michael are you saying that you added a build step to node development yes yes",
    "start": "32320",
    "end": "40239"
  },
  {
    "text": "what BWI for change log is provided by fastly learn more fastly.com we move",
    "start": "41360",
    "end": "47920"
  },
  {
    "text": "fast and fix things here at change law because of rbar check them out at rar.com and we're hosted on linode cloud",
    "start": "47920",
    "end": "54239"
  },
  {
    "text": "servers head to lin.com changelog this episode is brought to you",
    "start": "54239",
    "end": "60399"
  },
  {
    "text": "by rbar move fast and fix things resolve errors of minutes and deploy with confidence head to rar.com change log",
    "start": "60399",
    "end": "68520"
  },
  {
    "text": "requested demo get started today it's loved by developers trusted by Enterprises and most of all we use it",
    "start": "68520",
    "end": "75200"
  },
  {
    "text": "here at change log move fast and fix things with rollbar once again rar.com",
    "start": "75200",
    "end": "82360"
  },
  {
    "text": "[Music]",
    "start": "82360",
    "end": "85480"
  },
  {
    "text": "changelog [Music] welcome everyone to JS party your weekly",
    "start": "88920",
    "end": "96159"
  },
  {
    "text": "celebration of JavaScript and the web on today's episode Michael and Chris are",
    "start": "96159",
    "end": "101520"
  },
  {
    "text": "joined by Fred kshot now you may remember Fred from episode 69 on Pika",
    "start": "101520",
    "end": "106719"
  },
  {
    "text": "this time he's here to talk all things es modules let's get straight into it hey it's party time",
    "start": "106719",
    "end": "114600"
  },
  {
    "text": "y'all [Applause]",
    "start": "118840",
    "end": "123779"
  },
  {
    "text": "[Applause] hey everybody Welcome to JS party where",
    "start": "126980",
    "end": "132160"
  },
  {
    "text": "it's a party every week with JavaScript let's get into it we're going to talk about esm today so what is esm and why",
    "start": "132160",
    "end": "139959"
  },
  {
    "text": "do we have so many acronyms for things instead of just talking about them like regular humans Fred tell us about esm",
    "start": "139959",
    "end": "145519"
  },
  {
    "text": "what's esm oh man esm is everything and it's nothing and it's not a big deal and",
    "start": "145519",
    "end": "151000"
  },
  {
    "text": "it's a huge deal it's a really cool technology that I'm very excited about sounds like JavaScript yeah like",
    "start": "151000",
    "end": "157080"
  },
  {
    "text": "JavaScript it's both a toy and changing the world at the same time esm is really",
    "start": "157080",
    "end": "162280"
  },
  {
    "text": "just a way to like load JavaScript so yeah really a pretty simple concept but",
    "start": "162280",
    "end": "167400"
  },
  {
    "text": "it's a concept that works really well in the web which is something that we haven't really had up to this point which is amazing on its own it kind of",
    "start": "167400",
    "end": "173280"
  },
  {
    "text": "takes the like the best parts of the web where things are usable by the browser and they're URL based so the browser",
    "start": "173280",
    "end": "179519"
  },
  {
    "text": "knows how to cash things and load things and kind of load everything you need at Once In Parallel but using all the",
    "start": "179519",
    "end": "185080"
  },
  {
    "text": "things that we've gained over the last like decade really of having a module system that you know is built on a",
    "start": "185080",
    "end": "190840"
  },
  {
    "text": "registry that is huge and growing and popular um you can bring your tools you have a really explicit connection to how",
    "start": "190840",
    "end": "196519"
  },
  {
    "text": "your code is loaded it's kind of all the best of of everything we've gained over the last 20 30 years of of development",
    "start": "196519",
    "end": "202879"
  },
  {
    "text": "yeah and I think you know for people that are are relatively new uh to software development your your comments",
    "start": "202879",
    "end": "208519"
  },
  {
    "text": "about you know it works well for the web it's probably like not all that well understood right like you know if you've",
    "start": "208519",
    "end": "214879"
  },
  {
    "text": "been doing web development for less than 10 years like you're you're probably used to like oh I I use npm and I use",
    "start": "214879",
    "end": "220879"
  },
  {
    "text": "these compilers and that's like part of the web development experience part of the web I think people forget that there is this time period uh called the 2000s",
    "start": "220879",
    "end": "228319"
  },
  {
    "text": "and uh in the 2000s uh we didn't have those things but there was like some really cool stuff happening on the web",
    "start": "228319",
    "end": "235439"
  },
  {
    "text": "and the way that you loaded things on the web was with Earls and so the first thing you did was Jak quy and then you",
    "start": "235439",
    "end": "241159"
  },
  {
    "text": "could actually program and and that was your whole package ecosystem yes yes so you would put a",
    "start": "241159",
    "end": "248319"
  },
  {
    "text": "script include in at an Earl and it would just like pull in things out of the web in the browser it wasn't like running through a compiler we were just",
    "start": "248319",
    "end": "255280"
  },
  {
    "text": "kind of pulling these things into the browser just in time and we kind of built from there and that was before this whole kind of compiler ecosystem",
    "start": "255280",
    "end": "261680"
  },
  {
    "text": "happened because the the web never really had a module system this was you know in the Dark Ages when when everything was using VAR and you know",
    "start": "261680",
    "end": "269759"
  },
  {
    "text": "all of that shutter yeah did you forget about VAR yeah I have a talk that I that",
    "start": "269759",
    "end": "274880"
  },
  {
    "text": "I give where it's a slide and every time I go to it I get like a gas reaction of just script tag script tag script tag",
    "start": "274880",
    "end": "281240"
  },
  {
    "text": "script tag scrip like the way you loaded code was just kind of throw it on an HTML page and hope that your order was",
    "start": "281240",
    "end": "286680"
  },
  {
    "text": "right hope that these things knew how to load each other implicitly and they would fail if they didn't it was a",
    "start": "286680",
    "end": "292720"
  },
  {
    "text": "pretty wild west of programming yeah on on the one hand you know you had this dependent ordering to make sure that",
    "start": "292720",
    "end": "297800"
  },
  {
    "text": "things were injected in the scope at the right time that also meant that you had to load those in that order and that you",
    "start": "297800",
    "end": "303080"
  },
  {
    "text": "couldn't do concurrently and efficiently unless you added other tags and then you had all these exter",
    "start": "303080",
    "end": "308120"
  },
  {
    "text": "dependencies and it was really a mess and to some extent you know this whole compiler ecosystem that really like you",
    "start": "308120",
    "end": "314280"
  },
  {
    "text": "know it definitely predates react but react was like the the first web framework that was not a script include",
    "start": "314280",
    "end": "320319"
  },
  {
    "text": "like even angular was a script include in in those first few VI versions before it moved into this kind of compiler space and then with react and then kind",
    "start": "320319",
    "end": "327400"
  },
  {
    "text": "of everything that came after it every like these the web Frameworks in our web tool chain was all implemented as a",
    "start": "327400",
    "end": "332479"
  },
  {
    "text": "compiler and part of a compiler tool chain and you weren't really using just the web anymore and just the browser and",
    "start": "332479",
    "end": "338120"
  },
  {
    "text": "what esm does is that it takes these Primitives that we we have in node like the module system and this way to to",
    "start": "338120",
    "end": "344360"
  },
  {
    "text": "package up a program and give it to other people and let other people rely on each other's programs and build these",
    "start": "344360",
    "end": "350360"
  },
  {
    "text": "dependency change it finally gives those Primitives at least to the browser so that now I can you know use this module",
    "start": "350360",
    "end": "356720"
  },
  {
    "text": "system and depend on other people's stuff like effectively at Earls and things like that but that's a pretty",
    "start": "356720",
    "end": "362160"
  },
  {
    "text": "disruptive change you know we have more than a million packages in npm it is like you know I think in order of",
    "start": "362160",
    "end": "368840"
  },
  {
    "text": "magnitude the largest package ecosystem in the world and this is all not really",
    "start": "368840",
    "end": "374520"
  },
  {
    "text": "working on that so yeah yeah it's a it's a huge change that feels very small but",
    "start": "374520",
    "end": "380319"
  },
  {
    "text": "you know it's it's so fundamental I was just gonna ask you sort of some of the early paa stuff that you did was really",
    "start": "380319",
    "end": "386199"
  },
  {
    "text": "looking at like okay well what is an npm that is an esm because a lot of people have been using esm and and P packaging",
    "start": "386199",
    "end": "391840"
  },
  {
    "text": "stuff up with mpm and so like what what was sort of like the the easy to translate layers of this existing",
    "start": "391840",
    "end": "397039"
  },
  {
    "text": "ecosystem at least for browser developers to move into esm that's already in node and then where are kind",
    "start": "397039",
    "end": "402919"
  },
  {
    "text": "of some of the compatibility problems already yeah it's a really interesting the way it's kind of come into the",
    "start": "402919",
    "end": "408520"
  },
  {
    "text": "ecosystem is really interesting because it actually was a pretty nice there were a lot of things to like as an application developer for esm so using",
    "start": "408520",
    "end": "415800"
  },
  {
    "text": "it in your application you were no longer using this require function that node had of adopted and that web developers just brought on as a a force",
    "start": "415800",
    "end": "422479"
  },
  {
    "text": "of habit and a way to work with npm you got this much more friendly and much more easy to analyze import just method",
    "start": "422479",
    "end": "429080"
  },
  {
    "text": "to Import and Export so bundlers were a little bit more efficient when you wrote your application using esm there were",
    "start": "429080",
    "end": "434560"
  },
  {
    "text": "just like a lot of things to like as an application developer the problem was that then what people were doing was they were almost downgrading the things",
    "start": "434560",
    "end": "441240"
  },
  {
    "text": "that they published to npm that they shared with the world from this esm to this commonjs so going from a really",
    "start": "441240",
    "end": "446639"
  },
  {
    "text": "explicit newer import export to just that you know that module. exports that require function the code that runs on",
    "start": "446639",
    "end": "453599"
  },
  {
    "text": "node even if it was something that they were building only for the web so it was just kind of like a downgrading almost",
    "start": "453599",
    "end": "459080"
  },
  {
    "text": "of of fidelity right and you can no longer analyze really easily what it has and what is exporting and what it relies",
    "start": "459080",
    "end": "464960"
  },
  {
    "text": "on so there was this kind of this weird problem that we had where we had the technology application developers were",
    "start": "464960",
    "end": "470199"
  },
  {
    "text": "loving it but then everything that we were relying on which makes up like 90% of most web applications node applications it's a huge chunk of what",
    "start": "470199",
    "end": "476440"
  },
  {
    "text": "we end up running was this lower fidelity downgraded experience yeah and",
    "start": "476440",
    "end": "482159"
  },
  {
    "text": "and sort of to put some more specifics on that I think you know people have thought that they were using esm for a",
    "start": "482159",
    "end": "487360"
  },
  {
    "text": "long time because they were using this import syntax and this export syntax they weren't actually using nodes require function but the thing that I",
    "start": "487360",
    "end": "493560"
  },
  {
    "text": "think nobody really realized in doing that they weren't using the browser Primitives for that module system yet right obviously but they were also",
    "start": "493560",
    "end": "500120"
  },
  {
    "text": "relying on a lot of things that compilers were doing that were actually not going to be practical for browsers",
    "start": "500120",
    "end": "506800"
  },
  {
    "text": "to do in a native ecosystem right so one of the things that these compilers did was like if you imported a package by",
    "start": "506800",
    "end": "513039"
  },
  {
    "text": "name it would use nodes resolution Logic for nodes module system to go and figure",
    "start": "513039",
    "end": "518640"
  },
  {
    "text": "out where that module is by that name this is one of the big things that kind of breaks in Native esm is that these",
    "start": "518640",
    "end": "524720"
  },
  {
    "text": "things have to map to files like the browser can't go and check a bunch of areas and directories recursively to",
    "start": "524720",
    "end": "531640"
  },
  {
    "text": "figure out like where the root of a package is right so it either needs to have like directly a link to the file or",
    "start": "531640",
    "end": "537959"
  },
  {
    "text": "it needs to have a name that then there is like an import map which is another feature inm that we might talk about",
    "start": "537959",
    "end": "543200"
  },
  {
    "text": "later that maps that name to a specific file and so you know for tooling authors",
    "start": "543200",
    "end": "548880"
  },
  {
    "text": "this is kind of amazing because now you have this statically analyzable module system that you can you know pull in and",
    "start": "548880",
    "end": "555000"
  },
  {
    "text": "just look at the syntax and kind of know what's going on and each of those things are not pointing at a complicated",
    "start": "555000",
    "end": "560279"
  },
  {
    "text": "resolution logic they're just pointing at a file when you're in this native space but for the compilers that have",
    "start": "560279",
    "end": "566800"
  },
  {
    "text": "kind of taken all of the old node code and made it work in this ecosystem a lot of the work they did kind of shielded",
    "start": "566800",
    "end": "572839"
  },
  {
    "text": "people from how dramatic of a change this is actually going to be once we start to really move to Native esm like",
    "start": "572839",
    "end": "579040"
  },
  {
    "text": "we actually have to get rid of a lot of that stuff some of that stuff isn't going to work anymore or we're going to start to do you know we'll talk about",
    "start": "579040",
    "end": "585760"
  },
  {
    "text": "some of the the nasty compile stuff you have to do to get out of this world a little bit yeah yeah I think I have",
    "start": "585760",
    "end": "591120"
  },
  {
    "text": "definitely softened my stance there a bit in that when you looked at this kind of in the early days of everyone's using",
    "start": "591120",
    "end": "596680"
  },
  {
    "text": "commonjs and we see the world shifting towards M but there are these like kind of still hairy things that we need to",
    "start": "596680",
    "end": "602200"
  },
  {
    "text": "work with so like yeah I want to import something by name I want to import react the browser wouldn't let you do that it",
    "start": "602200",
    "end": "607320"
  },
  {
    "text": "would say react what's react I don't know what that is I don't know where to find it poo poo to you it would it would",
    "start": "607320",
    "end": "612760"
  },
  {
    "text": "die I think I see the middle path here that will you know whether that ends up like there's a world where we don't",
    "start": "612760",
    "end": "618440"
  },
  {
    "text": "actually need that in the browser there's a world where you still get all the benefits of developing with the as whether you're a library author or",
    "start": "618440",
    "end": "624880"
  },
  {
    "text": "application author you know we're already coming from a world where web developers use tooling to to kind of sit in between what they're writing and what",
    "start": "624880",
    "end": "631320"
  },
  {
    "text": "ships to the browser so we're moving to a world where that can be much lower cost and much lighter and lighter touch",
    "start": "631320",
    "end": "638440"
  },
  {
    "text": "you can rewrite at build time essentially import react okay well actually I want to import it from here",
    "start": "638440",
    "end": "643480"
  },
  {
    "text": "there are these things that seem like limitations of the platform and they definitely are but they aren't blockers in that way where tooling that we're",
    "start": "643480",
    "end": "649000"
  },
  {
    "text": "already relying on can both simplify itself become lighter touch but also take care of these last few issues um",
    "start": "649000",
    "end": "655480"
  },
  {
    "text": "that exist these last few things that might be blockers but can just be solved by tooling um that's really where Pika and snow",
    "start": "655480",
    "end": "661440"
  },
  {
    "text": "pack and Sky pack where all these projects that I've been working on come from that idea of just what would tooling look like in a world where we",
    "start": "661440",
    "end": "667079"
  },
  {
    "text": "have these much easier to work with Primitives module system Etc yeah and",
    "start": "667079",
    "end": "672399"
  },
  {
    "text": "I've been really happy to see that Tooling in that ecosystem really starting to take a lot of these problems",
    "start": "672399",
    "end": "678399"
  },
  {
    "text": "quite seriously so not just sort of supporting the things that no is doing like export maps for instance which is a",
    "start": "678399",
    "end": "683800"
  },
  {
    "text": "feature in the node module system that's kind of important and now um compilers will look at that um and and have an",
    "start": "683800",
    "end": "690040"
  },
  {
    "text": "understanding of it but also like compilers like all the new versions of compilers and even roll up now have",
    "start": "690040",
    "end": "695240"
  },
  {
    "text": "basically taken the stand that they're not going to inject node polyfills anymore which is something that you know",
    "start": "695240",
    "end": "700920"
  },
  {
    "text": "we got really used to all that tooling just kind of doing automatically and not really seeing the cost of you know using",
    "start": "700920",
    "end": "707240"
  },
  {
    "text": "the buffer interface or using all these no JS standard Library modules yeah all of a sudden you were looking for one",
    "start": "707240",
    "end": "712399"
  },
  {
    "text": "hashen function and you installed the entire cryptographic library of node into your web application it's like why",
    "start": "712399",
    "end": "717880"
  },
  {
    "text": "is my web a megabyte it's like oh that's why yeah yeah it's pretty bad I've been dealing with just removing",
    "start": "717880",
    "end": "725320"
  },
  {
    "text": "just buffer from my code like just buffer from like our libraries and our dependencies and honestly at first it wasn't even migrating to un aday it was",
    "start": "725320",
    "end": "733800"
  },
  {
    "text": "just importing buffer as a module instead of relying on the polyfill",
    "start": "733800",
    "end": "739639"
  },
  {
    "text": "because the polyfill was going to break in all these compilers and that took months like hundreds of",
    "start": "739639",
    "end": "746480"
  },
  {
    "text": "PRS and you know we have a much bigger change going now in the same stack where we're actually migrating to un T and you",
    "start": "746480",
    "end": "752560"
  },
  {
    "text": "know changing out a value type is one of the most destructive things that you can do in these ecosystems so it it is a bit",
    "start": "752560",
    "end": "758320"
  },
  {
    "text": "of a painful upgrade but before we sort of set this down what are the benefits like what are we going to get out of",
    "start": "758320",
    "end": "765079"
  },
  {
    "text": "this other than just the pain of migration yeah I I mean I'd love to talk about some of the stuff we worked on I",
    "start": "765079",
    "end": "770279"
  },
  {
    "text": "mean this all started Pik started as a way to find these packages this idea that right now mpm search is very node",
    "start": "770279",
    "end": "777399"
  },
  {
    "text": "focused and and you can think of mpm as you know it's started as node package manager the whole ecosystem has had you",
    "start": "777399",
    "end": "783440"
  },
  {
    "text": "a preference for node I would say and not really been about what do web developers need from it webpack roll up",
    "start": "783440",
    "end": "788800"
  },
  {
    "text": "all these things existed to basically take that ecosystem and make it work for the web so it was very much take a thing",
    "start": "788800",
    "end": "794519"
  },
  {
    "text": "that is built to run as installed on node and now do things to make it work on the web um it's it's a subtle point",
    "start": "794519",
    "end": "801120"
  },
  {
    "text": "but it's a really interesting part of the model um that we all have built on for the last 10 years yeah yeah the",
    "start": "801120",
    "end": "806800"
  },
  {
    "text": "realization was that this was a big change for for kind of evening that playing field and that like now esm is a",
    "start": "806800",
    "end": "812959"
  },
  {
    "text": "l as a module system is something that everyone can rely on and that what that means to make this work for the web is",
    "start": "812959",
    "end": "819279"
  },
  {
    "text": "actually much lighter touch so when you have a module system that you can ship to the browser if you think about what webpack does especially when you're",
    "start": "819279",
    "end": "825160"
  },
  {
    "text": "doing development you hit save and what webpack has to do is take that one file change now integrate that into these",
    "start": "825160",
    "end": "832600"
  },
  {
    "text": "bundles that it's created recompile rebundle reship to the browser what you",
    "start": "832600",
    "end": "838199"
  },
  {
    "text": "end up with in that I've seen this myself I know if you've done web development you've probably seen this yourself this idea that you know your",
    "start": "838199",
    "end": "843680"
  },
  {
    "text": "Dev server takes a long time to start up when you hit save it takes a long time to react to that change there's cool",
    "start": "843680",
    "end": "849759"
  },
  {
    "text": "things you can do with HMR and then if you've heard of react refresh and all these different projects to kind of",
    "start": "849759",
    "end": "855240"
  },
  {
    "text": "shorten that cycle but at the end of the day what you're looking at is I've changed one file and now my Dev tool has to go and change a bunch of files and",
    "start": "855240",
    "end": "862160"
  },
  {
    "text": "that's just built into the model of bundling by definition of bundling and by definition of what webpack parcel rollup what they're all doing is they're",
    "start": "862160",
    "end": "868320"
  },
  {
    "text": "they're they're following that model what I've started experimenting with snow pack is just a different model so",
    "start": "868320",
    "end": "874279"
  },
  {
    "text": "all the same build tools you still use Babel typescript everything you're using today but the model is changed the",
    "start": "874279",
    "end": "879600"
  },
  {
    "text": "underline model and what that says is that when I do development I actually stop using a bundler because I esm which",
    "start": "879600",
    "end": "886079"
  },
  {
    "text": "works in the browser I can actually I make a change to a file and now all I need to do is rebuild that one file so",
    "start": "886079",
    "end": "892920"
  },
  {
    "text": "instead of rebuilding lots of files recompiling rebundling and then shipping that to the browser it's you know how",
    "start": "892920",
    "end": "898320"
  },
  {
    "text": "fast do babble build a single file pretty fast and what that also means is it for caching right bundlers have done",
    "start": "898320",
    "end": "903680"
  },
  {
    "text": "a ton of work to create a really smart caching layer but at the end of the day again when you're combining all these files together your caching is just kind",
    "start": "903680",
    "end": "910079"
  },
  {
    "text": "of lower Fidelity because multiple files are combined you change one you change them all uh what we're able to do is",
    "start": "910079",
    "end": "916000"
  },
  {
    "text": "that once that file is built and casted because it's only one file you never have to rebuild that file again until",
    "start": "916000",
    "end": "921399"
  },
  {
    "text": "you change it so the caching story for snow pack as a Dev environment is that basically every file is built once and",
    "start": "921399",
    "end": "928680"
  },
  {
    "text": "once forever and then as you make changes you rebuild and if you change a config you rebuild it all but the",
    "start": "928680",
    "end": "934680"
  },
  {
    "text": "savings that you get on the second run the third run the fourth run the startup time is you know essentially less than a second down to 50 milliseconds for most",
    "start": "934680",
    "end": "940800"
  },
  {
    "text": "people because all that upfront work of combining files together and bundling you don't need to do that anymore withm",
    "start": "940800",
    "end": "947160"
  },
  {
    "text": "you have a browser a module system that the browser understands so you can just kind of ship it and snow pack exist to",
    "start": "947160",
    "end": "953319"
  },
  {
    "text": "just again like Michael mentioned there's a few little things that it has to do other than building just to make this run in the browser but it's really",
    "start": "953319",
    "end": "959440"
  },
  {
    "text": "light touch how does that work with uh let's say you're consuming a library",
    "start": "959440",
    "end": "964600"
  },
  {
    "text": "that uses commonjs so what what do you have to do to support that yeah so that's that's smack daab in the middle",
    "start": "964600",
    "end": "971120"
  },
  {
    "text": "of our problem space which is revisiting that question what does tooling look like for a world where you're esm first",
    "start": "971120",
    "end": "977959"
  },
  {
    "text": "the one thing we need to do is when you import react we rewrite it to a URL so a place that we are now hosting a react",
    "start": "977959",
    "end": "983519"
  },
  {
    "text": "package and then what we do is react is commonjs so that's actually a great example for this what we do is we",
    "start": "983519",
    "end": "989040"
  },
  {
    "text": "actually look at okay you're writing esm so your files they're the ones that change often we'll we'll have this really light touch Dev workflow where we",
    "start": "989040",
    "end": "996000"
  },
  {
    "text": "rebuild and resend single files to the browser for your dependencies those actually don't change that often so what",
    "start": "996000",
    "end": "1002240"
  },
  {
    "text": "webpack and others are doing today is they're rebuilding entire chunks of your application every time you save a source",
    "start": "1002240",
    "end": "1007560"
  },
  {
    "text": "file but what we're able to do is say that commonjs thing that we still need to handle once you install it it doesn't",
    "start": "1007560",
    "end": "1013720"
  },
  {
    "text": "change so we can actually essentially what we're doing is we're bundling that one dependency we're converting it from common JS to esm one time as an install",
    "start": "1013720",
    "end": "1021920"
  },
  {
    "text": "step more than a build step or a Dev step it's a onetime cost that then gets reused until you change your dependencies again so we we handle it as",
    "start": "1021920",
    "end": "1029360"
  },
  {
    "text": "a like we're esm first but we have this common JS support where we just turn it into esm and that's something we do once",
    "start": "1029360",
    "end": "1035600"
  },
  {
    "text": "and now it's saved in your project and reusable forever that sounds like a a non-trivial problem to solve yes um snow",
    "start": "1035600",
    "end": "1043600"
  },
  {
    "text": "pack has existed for almost a year now um so it's not something that we've just kind of stumbled into the first verion",
    "start": "1043600",
    "end": "1049160"
  },
  {
    "text": "that was all we focused on was you tell me your dependencies and I will give you",
    "start": "1049160",
    "end": "1054400"
  },
  {
    "text": "essentially you know what is react it's many files kind of combined together what we would do is we'd take react and",
    "start": "1054400",
    "end": "1059440"
  },
  {
    "text": "give you a react.js we'd give you a single JS file an esm interface and it would be runnable in the browser the",
    "start": "1059440",
    "end": "1065720"
  },
  {
    "text": "idea there is that that's the problem to solve here and once you've solved that now you are essentially an esm only Dev",
    "start": "1065720",
    "end": "1071120"
  },
  {
    "text": "environment all the files you're working on our esm all the files that you're serving to the user our esm and you can",
    "start": "1071120",
    "end": "1076919"
  },
  {
    "text": "start to do some really cool stuff once you're relying on that [Music]",
    "start": "1076919",
    "end": "1087579"
  },
  {
    "text": "assumption what up JS party people it's your boy here Adam stovak and I have a question for you are you having trouble",
    "start": "1088600",
    "end": "1094960"
  },
  {
    "text": "uncovering performance issues in your nodejs apps if so check out our friends at Scout APM that's Scout apm.com",
    "start": "1094960",
    "end": "1102200"
  },
  {
    "text": "changelog Scout is application monitoring that automatically reports keynot GS monitoring metrics instruments",
    "start": "1102200",
    "end": "1108799"
  },
  {
    "text": "many node GS libraries automatically detects easy to miss m plus1 queries that sneak into production plus a ton",
    "start": "1108799",
    "end": "1114799"
  },
  {
    "text": "more and of course Scout is easy to install via mpm package learn more and get started for free at scout.com",
    "start": "1114799",
    "end": "1122240"
  },
  {
    "text": "changelog no credit cards required that's Scout apm.com",
    "start": "1122240",
    "end": "1128200"
  },
  {
    "text": "[Music]",
    "start": "1129160",
    "end": "1132299"
  },
  {
    "text": "changelog [Music]",
    "start": "1137720",
    "end": "1149159"
  },
  {
    "text": "okay so something that I have been doing is trying to Port a lot of um my",
    "start": "1149159",
    "end": "1154240"
  },
  {
    "text": "libraries to Native esm particularly like I have a set of new libraries that are really the foundation for a kind of",
    "start": "1154240",
    "end": "1160559"
  },
  {
    "text": "stack and an ecosystem that we're building and I really don't want it it's going to be very hard to move that to",
    "start": "1160559",
    "end": "1167559"
  },
  {
    "text": "ESN later after a lot of people depend on it and there's a lot of ecosystem on top of it so I really want to do that",
    "start": "1167559",
    "end": "1173039"
  },
  {
    "text": "now and so I've really been struggling with a lot of the incompatibilities in Native esm particularly in node.js so",
    "start": "1173039",
    "end": "1180559"
  },
  {
    "text": "you know it's been very easy for me for a long time now to write out a library that works in node and works pretty well",
    "start": "1180559",
    "end": "1186159"
  },
  {
    "text": "in browser through compilers like I can you know if I'm using require everything just kind of works if I limit my",
    "start": "1186159",
    "end": "1192280"
  },
  {
    "text": "dependencies and stuff I know how to kind of limit the tree and and things work out like relatively well there's definitely um a bad way to do this and a",
    "start": "1192280",
    "end": "1199559"
  },
  {
    "text": "good way to do this and I found like kind of a sweet spot when I started going to Native esm it was like ah everything's broken so to talk about",
    "start": "1199559",
    "end": "1206720"
  },
  {
    "text": "some of the compatibility differences I I I should start with some of the the history here so node has a module system",
    "start": "1206720",
    "end": "1212559"
  },
  {
    "text": "because we didn't have one in the browser it's the same reason why it has its own buffer API there was no binary API in JavaScript yet so we had to",
    "start": "1212559",
    "end": "1219159"
  },
  {
    "text": "invent one and when npm was created Isaac started working a lot more on node",
    "start": "1219159",
    "end": "1224960"
  },
  {
    "text": "core and in fact took over the module system and so node's module system and npm kind of co-evolved together and the",
    "start": "1224960",
    "end": "1231799"
  },
  {
    "text": "resolution algorithm inside of node actually came from npm and these kind of play on each other and if you look at",
    "start": "1231799",
    "end": "1237880"
  },
  {
    "text": "where compilers are today you can see that they all kind of started with browserify and the take there was like",
    "start": "1237880",
    "end": "1243919"
  },
  {
    "text": "okay we have I have all this code and node like how to I make it work in browsers and so substack wrote this compiler called browserify and it is",
    "start": "1243919",
    "end": "1250840"
  },
  {
    "text": "very much like from the point of view of a node person that wants to get things on the browser not a browser person that wants to get things in node I mean",
    "start": "1250840",
    "end": "1257120"
  },
  {
    "text": "substack is is really like the the sort of philosophical Center of like the small modules philosophy around like in",
    "start": "1257120",
    "end": "1263840"
  },
  {
    "text": "the nodejs ecosystem yeah what is he up to in terms of modu count now as an author oh it's got to be over a thousand",
    "start": "1263840",
    "end": "1269480"
  },
  {
    "text": "at this point I mean there's no way that it's not over a thousand because he was doing like about a hundred a year for",
    "start": "1269480",
    "end": "1274720"
  },
  {
    "text": "like a while in some years would be more but yeah it's it's way up there but he's",
    "start": "1274720",
    "end": "1280159"
  },
  {
    "text": "actually writing a lot more rust now so I think that is probably like come down a little bit in recent Years anyway like you know from there we started to get",
    "start": "1280159",
    "end": "1286720"
  },
  {
    "text": "other compilers and all these compilers leveraged nodes module system as the",
    "start": "1286720",
    "end": "1292039"
  },
  {
    "text": "sort of like way in which you packaged up these little packages and then brought them back in for use in the",
    "start": "1292039",
    "end": "1297120"
  },
  {
    "text": "compiler and so even as front-end development became 80 maybe more percent",
    "start": "1297120",
    "end": "1304000"
  },
  {
    "text": "of what is actually in npm the usage of npm like if you look at the numbers on this like front end actually dominates",
    "start": "1304000",
    "end": "1309559"
  },
  {
    "text": "this ecosystem and back end is like not as big um I mean backend in node is",
    "start": "1309559",
    "end": "1314840"
  },
  {
    "text": "bigger than back end in most other languages but this just kind of shows like how big development is and how big JavaScript is compared to a lot of other",
    "start": "1314840",
    "end": "1321080"
  },
  {
    "text": "languages and so the tooling has always had this very kind of node Centric like",
    "start": "1321080",
    "end": "1327120"
  },
  {
    "text": "view of the world and one of the challenges that they had when they were building the module system like the esm",
    "start": "1327120",
    "end": "1332960"
  },
  {
    "text": "in the early days was like you can't really reconcile a lot of the decisions that were made with what needs to happen in a browser you know like you can't",
    "start": "1332960",
    "end": "1339520"
  },
  {
    "text": "have a resolution algorithm like that like you have to just point in a file like that's not going to work for us you",
    "start": "1339520",
    "end": "1344960"
  },
  {
    "text": "know a lot of the the things that you need in the syntax to make it stally analyzable are important to make it fast in the browser and so these things",
    "start": "1344960",
    "end": "1351480"
  },
  {
    "text": "weren't very well reconcilable and to top it off node was in a very bad",
    "start": "1351480",
    "end": "1356679"
  },
  {
    "text": "position as a project to be able to actually communicate and to work well with standards bodies at that time this",
    "start": "1356679",
    "end": "1362840"
  },
  {
    "text": "was 2013 14 15 yeah yeah exactly so before the ijs fork before the",
    "start": "1362840",
    "end": "1368840"
  },
  {
    "text": "foundation node just didn't have the capacity as a project to really participate well and so a lot of changes",
    "start": "1368840",
    "end": "1374919"
  },
  {
    "text": "actually did make it into esm and people like Yehuda cats like did work to make esm easier and more compatible with node",
    "start": "1374919",
    "end": "1382240"
  },
  {
    "text": "but nobody who really understood the complexities of node's module system were there and so a lot of things were",
    "start": "1382240",
    "end": "1388240"
  },
  {
    "text": "ratified before we had figured out how we would actually deal with compatibility in the future and",
    "start": "1388240",
    "end": "1393760"
  },
  {
    "text": "everything was really locked down and really ratified this was also before tc39 standard body doing JavaScript",
    "start": "1393760",
    "end": "1399880"
  },
  {
    "text": "changed a lot of their processes and so it's actually like a much better kind of staging process and you need a lot more",
    "start": "1399880",
    "end": "1405679"
  },
  {
    "text": "implementations to get through to the stages now uh this was one of the last things that kind of passed in the old",
    "start": "1405679",
    "end": "1410919"
  },
  {
    "text": "process and so it's just been a real nightmare to try to get this into node I think that the the effort is taken",
    "start": "1410919",
    "end": "1417120"
  },
  {
    "text": "roughly four years to to figure out and get unflagged and there's just been like",
    "start": "1417120",
    "end": "1422679"
  },
  {
    "text": "so many complications in compatibility issues and so at this point like the trade-offs that are there are somewhat",
    "start": "1422679",
    "end": "1428400"
  },
  {
    "text": "permanent and there's some things that are never going to work so when you are",
    "start": "1428400",
    "end": "1433640"
  },
  {
    "text": "writing esm you can import something that is commonjs and no will figure it",
    "start": "1433640",
    "end": "1438919"
  },
  {
    "text": "out and kind of give you a module back if you are using require and you try to",
    "start": "1438919",
    "end": "1444080"
  },
  {
    "text": "require a module that was written in Native esm for node it will fail so this",
    "start": "1444080",
    "end": "1449880"
  },
  {
    "text": "is a one-way migration that you make and if you just publish a package that's just native esm with nothing else it's",
    "start": "1449880",
    "end": "1456400"
  },
  {
    "text": "not going to be usable by anybody using require so that's really painful and this was one of the first kind of things",
    "start": "1456400",
    "end": "1462000"
  },
  {
    "text": "that I dove into eventually uh with with kind of some help from Miles Bor and I figured out a way for rollup",
    "start": "1462000",
    "end": "1468880"
  },
  {
    "text": "to actually generate a commonjs version of the package and all of the package",
    "start": "1468880",
    "end": "1474880"
  },
  {
    "text": "files individual files and then you can use this thing called an export map in package Json you can look up that",
    "start": "1474880",
    "end": "1480200"
  },
  {
    "text": "feature if you want and this is how you say like here's where the import file is it's esm which is like the regular file",
    "start": "1480200",
    "end": "1486559"
  },
  {
    "text": "and here's the one for require so when you require this like don't fail on the esm version here's the CJs version so",
    "start": "1486559",
    "end": "1492440"
  },
  {
    "text": "now there's like this sort of build step as part of all my stuff that's using this export map and that works well for",
    "start": "1492440",
    "end": "1498760"
  },
  {
    "text": "node compatibility I eventually figured out a very clever trick where um there's a rollup feature called preserve modules",
    "start": "1498760",
    "end": "1505559"
  },
  {
    "text": "so instead of getting a bundle what you get is uh all of the local files end up being compiled out as those local file",
    "start": "1505559",
    "end": "1512200"
  },
  {
    "text": "names so you get like a new tree in a DISD directory of all those compile targets so that really helped and I",
    "start": "1512200",
    "end": "1517279"
  },
  {
    "text": "realized I can point this script at my tests and my tests actually import all",
    "start": "1517279",
    "end": "1522480"
  },
  {
    "text": "of the relevant files in my package so I get not only my tests cross compiled that I can then test the JS version of",
    "start": "1522480",
    "end": "1529440"
  },
  {
    "text": "but also you know that will automatically sort of in an automated way find all of my endpoints wait so",
    "start": "1529440",
    "end": "1535159"
  },
  {
    "text": "Michael are you saying that you added a build step to node development yes yes",
    "start": "1535159",
    "end": "1541640"
  },
  {
    "text": "what I I mean like if you just want to say uh screw you you got to use import",
    "start": "1541640",
    "end": "1546880"
  },
  {
    "text": "you can't use uh require anymore you can avoid this build step but yeah node people now if they want to maintain",
    "start": "1546880",
    "end": "1553760"
  },
  {
    "text": "compatibility with with the old world they're going to have to suffer a build step the way that browser people done for a long time yeah that's a really",
    "start": "1553760",
    "end": "1561080"
  },
  {
    "text": "interesting part of this right it's that web developers had to make this compromise you know what seven years ago",
    "start": "1561080",
    "end": "1568159"
  },
  {
    "text": "or five years ago whatever it was where okay you know what to make the ecosystem work for us because it is not compatible",
    "start": "1568159",
    "end": "1575000"
  },
  {
    "text": "or because they are inconsistencies we are going to add a build Stu so now it's so it's so funny to see this because now",
    "start": "1575000",
    "end": "1580360"
  },
  {
    "text": "the web is saying great we get a lighter build step but node is having a very different conversation which is what",
    "start": "1580360",
    "end": "1586200"
  },
  {
    "text": "does it mean to handle these inconsistencies do we have to build them into the platform itself or can we",
    "start": "1586200",
    "end": "1592640"
  },
  {
    "text": "follow a path that you're kind of following where in userland you add essentially just a layer in between the two to handle these inconsistencies for",
    "start": "1592640",
    "end": "1599760"
  },
  {
    "text": "you I don't know what's the right answer but it's very interesting to see for the first time like the web is actually able to move in a direction that feels",
    "start": "1599760",
    "end": "1607000"
  },
  {
    "text": "natural and the node is having this kind of come to moment where they have to decide what they're going to do well and you know node is very concerned with",
    "start": "1607000",
    "end": "1613399"
  },
  {
    "text": "performance and very concerned with trying to keep the platform relatively thin and so the one thing that that node will not do and there's kind of a line",
    "start": "1613399",
    "end": "1619720"
  },
  {
    "text": "in the sand on this is that it is not going to cross- compile your code it is going to run your code in V8 the way",
    "start": "1619720",
    "end": "1626200"
  },
  {
    "text": "that it looks to it and the the most that it can do is try to you know create a compatibility layer um there's a",
    "start": "1626200",
    "end": "1632279"
  },
  {
    "text": "package by jdd who who wrote lash called esm and you can literally import this uh",
    "start": "1632279",
    "end": "1638159"
  },
  {
    "text": "in in your program and it will basically cross compile every esm and commonjs",
    "start": "1638159",
    "end": "1645480"
  },
  {
    "text": "thing that comes into it in order to make all these comp cability concerns go away right it's like a TS node or a",
    "start": "1645480",
    "end": "1651000"
  },
  {
    "text": "babble node one of those things makes code run on node that shouldn't run it is very impressive that this hack can be",
    "start": "1651000",
    "end": "1658559"
  },
  {
    "text": "sort of built upon to make all of this stuff just work but you do lose a lot of the Native parts of the like the whole",
    "start": "1658559",
    "end": "1665600"
  },
  {
    "text": "point is to kind of try to to migrate to this native experience and and you're you're definitely not doing that when",
    "start": "1665600",
    "end": "1670840"
  },
  {
    "text": "you take that route to be clear you have to require esm you do not import esm",
    "start": "1670840",
    "end": "1676799"
  },
  {
    "text": "right yeah I should have said that yeah yeah yeah you you cannot import it because um the hooks that esm is using",
    "start": "1676799",
    "end": "1683720"
  },
  {
    "text": "in the module system to do all this cross compatibility stuff are deprecated",
    "start": "1683720",
    "end": "1690399"
  },
  {
    "text": "in Native esm so the moment that you're in an esm mod and this is esm the package yeah yeah yeah yeah esm the",
    "start": "1690399",
    "end": "1696880"
  },
  {
    "text": "package so you have to require esm and then it can add all these these hooks if you tried to do that in the new native",
    "start": "1696880",
    "end": "1703000"
  },
  {
    "text": "system because one of the things that happened in this transition right is that the module system is is not",
    "start": "1703000",
    "end": "1708480"
  },
  {
    "text": "implemented by node anymore it's in V8 it's in the language right so we we don't have the ability to give you",
    "start": "1708480",
    "end": "1714799"
  },
  {
    "text": "userland hooks to just like go and do all your like YOLO crazy uh like you've got you've got to like you can do that",
    "start": "1714799",
    "end": "1721120"
  },
  {
    "text": "in the old require stuff but you can't do that in esm anymore but yeah like that you know there's there's been good",
    "start": "1721120",
    "end": "1726240"
  },
  {
    "text": "work here trying to deal with this stuff but yeah once you move to Native then then you have to compile but before you get two on your high horse about like oh",
    "start": "1726240",
    "end": "1733279"
  },
  {
    "text": "like now you're doing what browser people do it also still sucks for browser people because",
    "start": "1733279",
    "end": "1738799"
  },
  {
    "text": "webpack has opinions I guess and one of their opinions that they've had for I",
    "start": "1738799",
    "end": "1744919"
  },
  {
    "text": "think the oldest bug I saw was at least three years old but webpac thinks that",
    "start": "1744919",
    "end": "1751360"
  },
  {
    "text": "when you do export default right uh which is the default export thing that you do in esm that that should not turn",
    "start": "1751360",
    "end": "1758440"
  },
  {
    "text": "into a representation to commonjs that looks like a default export like a module that exports equals",
    "start": "1758440",
    "end": "1764840"
  },
  {
    "text": "right they have the view that when you do this transition from esm to commonjs",
    "start": "1764840",
    "end": "1771399"
  },
  {
    "text": "that should just be an object with a default property and this opinion is shared by literally nobody so webpack",
    "start": "1771399",
    "end": "1777720"
  },
  {
    "text": "does that and that's in webpack 4 and webpack 5 is going to be in beta for quite a while and I don't even know if",
    "start": "1777720",
    "end": "1783039"
  },
  {
    "text": "they fixed it so yeah that means that you run into this other problem where I",
    "start": "1783039",
    "end": "1789080"
  },
  {
    "text": "publish this module and it works in node and you can require it in node so you like you get your program up you you npm",
    "start": "1789080",
    "end": "1795120"
  },
  {
    "text": "install my module you require it it works right because I did that cross compile step now you try to run webpack",
    "start": "1795120",
    "end": "1801600"
  },
  {
    "text": "on it and what webpack is going to do is it's not going to find the requir stuff because it doesn't know anything about export maps and and that whole require",
    "start": "1801600",
    "end": "1808799"
  },
  {
    "text": "thing it's just going to look at the import and uh or sorry just at the",
    "start": "1808799",
    "end": "1814120"
  },
  {
    "text": "regular files in the tree and those are going to be esm and it's going to do its esm changes to it and so the",
    "start": "1814120",
    "end": "1819640"
  },
  {
    "text": "representation in node and in webpack is going to be different it's going to break so that sucks",
    "start": "1819640",
    "end": "1825000"
  },
  {
    "text": "hooray yeah yeah whack you know loves to listen to people when they have anyway",
    "start": "1825000",
    "end": "1831000"
  },
  {
    "text": "okay I always get sensitive to this myself because I think when I say you know that snow pack is a different model",
    "start": "1831000",
    "end": "1836640"
  },
  {
    "text": "I think people say oh so what do you hate about webpack you know what's wrong with that I it's just a different right",
    "start": "1836640",
    "end": "1841679"
  },
  {
    "text": "it's like they are coming from this world where you need to make everything common jsse M and in that world why",
    "start": "1841679",
    "end": "1847720"
  },
  {
    "text": "wouldn't I want module. exorts to be the thing why would I want like a secondary default and more than that they have",
    "start": "1847720",
    "end": "1852960"
  },
  {
    "text": "their mental model I don't think it's the correct one going forward but I I see where they're coming from from just",
    "start": "1852960",
    "end": "1858480"
  },
  {
    "text": "based on their 10e history or whatever however long they've been around this is sort of my view of it and kind of where I come from when you're dealing with",
    "start": "1858480",
    "end": "1864840"
  },
  {
    "text": "these cross compatibility concerns between different systems it's really important to agree on representations in",
    "start": "1864840",
    "end": "1871159"
  },
  {
    "text": "these transation layers right like what you're really talking about is like two completely different things um that",
    "start": "1871159",
    "end": "1876639"
  },
  {
    "text": "you're translating from one representation to another so that they look the same and it's very important to agree on that and to agree with other",
    "start": "1876639",
    "end": "1883120"
  },
  {
    "text": "parties other than just your own project and they probably really made the right decision for them their internal",
    "start": "1883120",
    "end": "1888440"
  },
  {
    "text": "primitive so that their import function can operate identical to the import syntax that's what that's about that is",
    "start": "1888440",
    "end": "1895240"
  },
  {
    "text": "probably you know the right decision you know for their plug-in ecosystem but it really breaks compatibility ecosystem",
    "start": "1895240",
    "end": "1901039"
  },
  {
    "text": "layer when you think Beyond just webpack as a project so the fix for that is another NE compile so one of the nice",
    "start": "1901039",
    "end": "1908200"
  },
  {
    "text": "things about newer compilers so so new rollup and no. JS is that they look at",
    "start": "1908200",
    "end": "1913240"
  },
  {
    "text": "this export map this new feature that tells you sort of uh for all these different end points in the package what",
    "start": "1913240",
    "end": "1919159"
  },
  {
    "text": "files do they map to and can they map to something different for the browser for require for import but old compilers",
    "start": "1919159",
    "end": "1924720"
  },
  {
    "text": "like web Pack 4 and before don't even know about that property browserify doesn't know about that property they're",
    "start": "1924720",
    "end": "1930039"
  },
  {
    "text": "going to look at this old browser property instead and so what you can do is you can fill that browser property up",
    "start": "1930039",
    "end": "1935679"
  },
  {
    "text": "with another compile of the commonjs compile like you did for node but just",
    "start": "1935679",
    "end": "1941159"
  },
  {
    "text": "targeted for browsers instead of node uh so now you have two compiles that are",
    "start": "1941159",
    "end": "1946559"
  },
  {
    "text": "now in your tarball oh boy which are super fun yeah using deprecated Fields intentionally to solve a problem is my",
    "start": "1946559",
    "end": "1953639"
  },
  {
    "text": "favorite solution yes yes and and uh and you know just managing all of the fields is a sufficiently complex project is",
    "start": "1953639",
    "end": "1960240"
  },
  {
    "text": "like kind of a pain uh so I did write a little project that I named limbo",
    "start": "1960240",
    "end": "1965320"
  },
  {
    "text": "because I really hope that we this is a temporary state of limbo that we're in between these two systems I would",
    "start": "1965320",
    "end": "1970799"
  },
  {
    "text": "encourage people to look at and improve and use this module if you're trying to write native esm libraries but the",
    "start": "1970799",
    "end": "1976720"
  },
  {
    "text": "intention of it is to eventually die like I really hope that someday we do not have to use this Library I very much",
    "start": "1976720",
    "end": "1983679"
  },
  {
    "text": "look forward to the day that we deprecate it but right now there there's a project on my GitHub called Limbo that",
    "start": "1983679",
    "end": "1988760"
  },
  {
    "text": "will you run it in your package it it generates a disc with all this stuff and you can run it with A- save option that",
    "start": "1988760",
    "end": "1994919"
  },
  {
    "text": "will also fill out the export map and the browser field for you because that's that gets really problematic over time",
    "start": "1994919",
    "end": "2001840"
  },
  {
    "text": "but one of the cool things about that is that after all this is done I can run all my tests in Native node esm just",
    "start": "2001840",
    "end": "2008639"
  },
  {
    "text": "using node test stuff you know I can then run as a test Target all of those commonjs files that I was doing before",
    "start": "2008639",
    "end": "2014840"
  },
  {
    "text": "and then it'll use all the commonjs version and I can also Target all those browser ones and it will work with like an old web pack in older browser test",
    "start": "2014840",
    "end": "2021720"
  },
  {
    "text": "utilities like I use one called pandina that the rod vag wrote and you know Crystal like it a lot of this stuff is",
    "start": "2021720",
    "end": "2026919"
  },
  {
    "text": "actually using mocha behind the scenes for a lot of the older stuff as well and maybe I'll talk about new testing stuff",
    "start": "2026919",
    "end": "2032840"
  },
  {
    "text": "if we have time but um yeah that's kind of yeah how all that stuff works testing nesm is a very interesting story yes yes",
    "start": "2032840",
    "end": "2039840"
  },
  {
    "text": "yes I hate to do that last because I'm sure that Chris will have really good things to talk in about but yeah so that",
    "start": "2039840",
    "end": "2045960"
  },
  {
    "text": "that's the state of like what you need to do if you want to write you need to be Amon and have everybody be able to",
    "start": "2045960",
    "end": "2051599"
  },
  {
    "text": "consume your library but there's this other story where relying on node's",
    "start": "2051599",
    "end": "2057158"
  },
  {
    "text": "module system and and not just in node but in compilers is increasingly problematic in a native esm world even",
    "start": "2057159",
    "end": "2063839"
  },
  {
    "text": "if you're converting these native files like you are constantly being present presented with the complexity of your",
    "start": "2063839",
    "end": "2069720"
  },
  {
    "text": "dependency chain because you're seeing it a lot more visibly in this native esm world and it gets more and more",
    "start": "2069720",
    "end": "2075760"
  },
  {
    "text": "problematic and so sometimes what I want to do is actually not npm install a",
    "start": "2075760",
    "end": "2081919"
  },
  {
    "text": "package and required and let all these systems figure out how to get it what I want often is I just want to take",
    "start": "2081919",
    "end": "2089520"
  },
  {
    "text": "something out of npm and just bundle it into a local file that I import like any",
    "start": "2089520",
    "end": "2095240"
  },
  {
    "text": "other local file um sometimes like that that is the best solution to some of these problems to just kind of",
    "start": "2095240",
    "end": "2101200"
  },
  {
    "text": "quarantine this old npm package for a while rather than relying on this very complex system that is rif with sort of",
    "start": "2101200",
    "end": "2107920"
  },
  {
    "text": "surface area for bugs are you talking about vendoring it essentially yes yes exactly okay I wrote a package called",
    "start": "2107920",
    "end": "2114240"
  },
  {
    "text": "called burp BR RRP um and you give it an npm name and it will just bundle out uh",
    "start": "2114240",
    "end": "2120800"
  },
  {
    "text": "it'll actually install in a temp directory and then clean itself up the package and then bundle it up as esm and",
    "start": "2120800",
    "end": "2127839"
  },
  {
    "text": "you can Target either node or the browser and you can you know even use it to cross compile it at a CJs version if",
    "start": "2127839",
    "end": "2134000"
  },
  {
    "text": "you wanted that bundle for some reason so that's another kind of interesting tool npm is successful because it did such a good job at hiding that",
    "start": "2134000",
    "end": "2140359"
  },
  {
    "text": "dependency tree from me like I I don't have to think about how nasty it can get",
    "start": "2140359",
    "end": "2146240"
  },
  {
    "text": "and how many like old dependencies and cross dependencies are in there and um for other reasons as I'm being presented",
    "start": "2146240",
    "end": "2153359"
  },
  {
    "text": "with that complexity and I can't ignore it anymore it's just the node module system and PM install workflow is just",
    "start": "2153359",
    "end": "2160000"
  },
  {
    "text": "not as nice anymore it lost a lot of its kind of shine I have to see how the sausage is made yeah it's as bad as you",
    "start": "2160000",
    "end": "2166400"
  },
  {
    "text": "would think right it feels like specifically you are I think starting to realize or tell me if this is a fair",
    "start": "2166400",
    "end": "2172720"
  },
  {
    "text": "representation that this migration is going to need some help from the tooling ecosystem even for no developers yeah",
    "start": "2172720",
    "end": "2179359"
  },
  {
    "text": "that the idea of a whole ecosystem moving in lock step from one module system to another is not going to be",
    "start": "2179359",
    "end": "2185640"
  },
  {
    "text": "easy or or just something that can happen naturally that there will need to be some sort of limbo State I think",
    "start": "2185640",
    "end": "2191000"
  },
  {
    "text": "that's a pretty well- named title of a package to handle this kind of transition Y and then yeah I mean so I",
    "start": "2191000",
    "end": "2197040"
  },
  {
    "text": "will talk real fast I know that we're we're sort of running out of time for the segment but I I do want to talk about testing a little bit because I",
    "start": "2197040",
    "end": "2202200"
  },
  {
    "text": "think it is as a library author it's one of the key benefits that you can see getting out of native esm where that the",
    "start": "2202200",
    "end": "2208839"
  },
  {
    "text": "testing infrastructure can get a little bit nicer one is that we just have like a nicer kind of primitive for a module",
    "start": "2208839",
    "end": "2215079"
  },
  {
    "text": "system so thinking of a module as a test and as something that you can not just like a a file that you run and you have",
    "start": "2215079",
    "end": "2221520"
  },
  {
    "text": "to inject a lot of environment around but really like almost like an object or almost like a data structure that you could kind of pull in and poke at so",
    "start": "2221520",
    "end": "2228760"
  },
  {
    "text": "something that that me and Fred have talked about for a little while now is like you know if you had a test format",
    "start": "2228760",
    "end": "2234680"
  },
  {
    "text": "that was somewhat framework agnostic you could actually pull those tests in and then update a depth tree and then run",
    "start": "2234680",
    "end": "2242440"
  },
  {
    "text": "the tests for your dependencies against you know with your new thing in the dep tree really easily because you have this",
    "start": "2242440",
    "end": "2249200"
  },
  {
    "text": "kind of componentized system so I started to write that because testing in Native ASM is is also really nice like",
    "start": "2249200",
    "end": "2255240"
  },
  {
    "text": "not having to bundle anything um or at least not having to bundle your local files in order to get things running in",
    "start": "2255240",
    "end": "2262119"
  },
  {
    "text": "the browser opens up a whole new Vector of like really nice testing that you can do so I started working on something",
    "start": "2262119",
    "end": "2267920"
  },
  {
    "text": "called es test and I have it running in node and in Dino actually oh and yeah",
    "start": "2267920",
    "end": "2273720"
  },
  {
    "text": "yeah and I'm about halfway through the browser uh one right now but a couple features of it is like one once I'm",
    "start": "2273720",
    "end": "2279319"
  },
  {
    "text": "running tests on like a million platforms um because I also want to use this eventually to test a lot of the",
    "start": "2279319",
    "end": "2285480"
  },
  {
    "text": "cross-compiled stuff so these are taking too long to run so I need everything to work concurrently and so by default the",
    "start": "2285480",
    "end": "2292480"
  },
  {
    "text": "test format is concurrent and you can set the concurrency to one if you know that this test can't work concurrently",
    "start": "2292480",
    "end": "2297960"
  },
  {
    "text": "but yeah having things work concurrently by default means that I can spend run all of the tests for all these environments and all of those tests in",
    "start": "2297960",
    "end": "2304000"
  },
  {
    "text": "those environments all concurrently like if I have eight test files I can run them in eight tabs in the browser and",
    "start": "2304000",
    "end": "2310160"
  },
  {
    "text": "even as those tests get added inside of it they can run in parallel if they're doing async operations like it's really",
    "start": "2310160",
    "end": "2315960"
  },
  {
    "text": "important once you have like the number of tests that I have that that that stuff is really nice but also you know the test format itself you don't have to",
    "start": "2315960",
    "end": "2322880"
  },
  {
    "text": "import anything and you don't have to have any globals injected into the file environment to run the test it literally",
    "start": "2322880",
    "end": "2329839"
  },
  {
    "text": "you export a function or you export a bunch of functions and they take this test interface as their first argument",
    "start": "2329839",
    "end": "2337319"
  },
  {
    "text": "and and tests are just async functions they either throw or they pass that's it",
    "start": "2337319",
    "end": "2342560"
  },
  {
    "text": "there's no additional sort of state to manage because in this native ASM world now that we have async functions you",
    "start": "2342560",
    "end": "2349079"
  },
  {
    "text": "don't have to do a lot of the I mean Chris probably knows this better than anybody like a lot of the like stepping",
    "start": "2349079",
    "end": "2355520"
  },
  {
    "text": "and setting up an environment and tearing down an environment a lot of that complexity a lot of that is really",
    "start": "2355520",
    "end": "2360680"
  },
  {
    "text": "related to the way that the old call back system worked and the fact that you know it was really easy to not call a",
    "start": "2360680",
    "end": "2366240"
  },
  {
    "text": "call back and have a test pass you know things like that so I'm already starting to realize a lot of the benefits of the",
    "start": "2366240",
    "end": "2372359"
  },
  {
    "text": "system like using native esm is now like actually speeding up my development environment now that I have the Tooling in place so that's been really cool yeah",
    "start": "2372359",
    "end": "2379280"
  },
  {
    "text": "it's a good way to kind of showcase how having that one single module format for everyone really benefits the like the",
    "start": "2379280",
    "end": "2385440"
  },
  {
    "text": "workflow itself one thing that like jest I think is a really powerful test Runner but if you've ever run into like a",
    "start": "2385440",
    "end": "2390760"
  },
  {
    "text": "caching issue or tried to configure it or like peaked into that kind of plug-in ecosystem that they built out it's it's",
    "start": "2390760",
    "end": "2397440"
  },
  {
    "text": "a pretty heavy process especially for front end developers where you know you're building and bundling at the same",
    "start": "2397440",
    "end": "2403079"
  },
  {
    "text": "time as you're then running tests on them and you essentially have this like Shadow build system for a test Runner",
    "start": "2403079",
    "end": "2409440"
  },
  {
    "text": "that again they they do their best to hide from you but when you need to troubleshoot something you really have",
    "start": "2409440",
    "end": "2414680"
  },
  {
    "text": "to start digging into okay what are they doing to make this code that doesn't run in node run in a node test Runner yeah",
    "start": "2414680",
    "end": "2421480"
  },
  {
    "text": "yeah everything you've said sounds really exciting but even just at the most primitive this idea that like the test Runner is a lot of compx that we",
    "start": "2421480",
    "end": "2427880"
  },
  {
    "text": "don't realize until we really get stuck with a problem that's hard to solve and also you really want to be able to",
    "start": "2427880",
    "end": "2433720"
  },
  {
    "text": "decouple these right like I think that people have different opinions and really different styles for how they",
    "start": "2433720",
    "end": "2438800"
  },
  {
    "text": "want to write their tests right one of the nice things about mocha actually is that it's it's a bit more agnostic about this like you can plug different",
    "start": "2438800",
    "end": "2444400"
  },
  {
    "text": "interfaces in for defining the test but having a test format that you know just it's just functions that just throw or",
    "start": "2444400",
    "end": "2449960"
  },
  {
    "text": "whatever it's just getting this interface pulled in you can really easily like write a test framework that's just a thing that you import and",
    "start": "2449960",
    "end": "2456000"
  },
  {
    "text": "then you export your test function and your test function was actually created by this you know library and so",
    "start": "2456000",
    "end": "2461920"
  },
  {
    "text": "it's not like oh I can't use test Frameworks now because I have to do them in this format it's like no no no no the",
    "start": "2461920",
    "end": "2467000"
  },
  {
    "text": "format enables you to use like any of these test formats and like those those new test systems don't have to implement",
    "start": "2467000",
    "end": "2472319"
  },
  {
    "text": "like a runner and deal with like concurrency and browsers and d d so yeah I'm I'm very curious what you have to say Chris yeah no I was like this looks",
    "start": "2472319",
    "end": "2479880"
  },
  {
    "text": "actually this looks a little bit like the old exports uh interface M which is simply yeah it require stuff it's com",
    "start": "2479880",
    "end": "2487839"
  },
  {
    "text": "ass stuff but you just you export a bunch of tests from a module and there's",
    "start": "2487839",
    "end": "2493640"
  },
  {
    "text": "it's not like like the stair stepping and nesting Suites and and all sorts of",
    "start": "2493640",
    "end": "2498839"
  },
  {
    "text": "things I'm looking at this es test and it it it looks like well shoot it would",
    "start": "2498839",
    "end": "2504839"
  },
  {
    "text": "be pretty simple to just whip up a mocha interface for this and just now you can",
    "start": "2504839",
    "end": "2512560"
  },
  {
    "text": "run these things and um yeah I mean that would be cool and I hope you don't mind",
    "start": "2512560",
    "end": "2518520"
  },
  {
    "text": "if I steal it yeah yeah yeah yeah no no no um uh like if you do that it would actually really help me because I have a",
    "start": "2518520",
    "end": "2523800"
  },
  {
    "text": "bunch of tests in mocha that I would love to not have to port or like some help porting basically",
    "start": "2523800",
    "end": "2531040"
  },
  {
    "text": "uh that would just would then just work you know yeah I mean I'll play with this and I I can I can probably just publish",
    "start": "2531040",
    "end": "2536599"
  },
  {
    "text": "a like a third party interface and then if people want to use it then maybe we can you know throw it in core or",
    "start": "2536599",
    "end": "2543000"
  },
  {
    "text": "something but awesome I'll take a look you that'd be great yeah one of the things to to note about it is that you",
    "start": "2543000",
    "end": "2548640"
  },
  {
    "text": "know it is pretty new code there's pretty minimal docs and uh the format is really simple and the runner is also I",
    "start": "2548640",
    "end": "2557240"
  },
  {
    "text": "think sort of deceptively small amount of code that has like a lot of",
    "start": "2557240",
    "end": "2562400"
  },
  {
    "text": "implications and features because of the expressibility if that makes sense um if you look at the the runner and the",
    "start": "2562400",
    "end": "2567880"
  },
  {
    "text": "algorithm for the runner it looks like oh it's just kind of this tight little bit of code but you're you're not realizing like how infinitely kind of",
    "start": "2567880",
    "end": "2574880"
  },
  {
    "text": "nestable everything is and how a lot of the the after methods and things like actually end up a I'm really into this",
    "start": "2574880",
    "end": "2581319"
  },
  {
    "text": "idea of a dynamic test generation like most of my tests that I write like it's a function that creates another that",
    "start": "2581319",
    "end": "2586800"
  },
  {
    "text": "pulls in another function that then like Loops over things and then generates a bunch of tests for something because I I'm often testing with multiple",
    "start": "2586800",
    "end": "2592880"
  },
  {
    "text": "different interfaces and optionality and so you know this was really written in mind like what is the most minimal set",
    "start": "2592880",
    "end": "2598640"
  },
  {
    "text": "possible that like doesn't have a lot of opinions in it but doesn't limit the expressibility in what you could actually generate with tests really",
    "start": "2598640",
    "end": "2605559"
  },
  {
    "text": "using all the dynamic features that we have in JavaScript that I know and love so yeah I'd love to give a shout out to",
    "start": "2605559",
    "end": "2612200"
  },
  {
    "text": "Luke Edwards has a package called UVU which is fairly new and I think a little less ambitious than EST EST test and",
    "start": "2612200",
    "end": "2618319"
  },
  {
    "text": "what you're proposing here but a really just simple um approach to just like let's do a test runner in esm for node",
    "start": "2618319",
    "end": "2625000"
  },
  {
    "text": "um and it becomes browser compatible by default it's really fast it's not doing all these things that like a just would",
    "start": "2625000",
    "end": "2630079"
  },
  {
    "text": "be doing to a build and bundle I've been really impressed by how fast that project is is moving as well yeah one of",
    "start": "2630079",
    "end": "2636000"
  },
  {
    "text": "the nice things about this is that so import maps are some they're a feature that's that's in Chrome Under a flag so",
    "start": "2636000",
    "end": "2642559"
  },
  {
    "text": "not by default it's not something that you can really rely upon so you can't really do named Imports in the browser right now but they are on a flag and so",
    "start": "2642559",
    "end": "2651240"
  },
  {
    "text": "that means that if you're doing your test and Puppeteer you can actually like totally rely on this feature without anybody even knowing about it um so",
    "start": "2651240",
    "end": "2658319"
  },
  {
    "text": "that's actually that's been awesome and that's like kind of key to the browser support that I'm working on right now so this is like the only module that I have",
    "start": "2658319",
    "end": "2664839"
  },
  {
    "text": "that runs in Doo and in node and it was very educational to see what it's like to to really write code that has no",
    "start": "2664839",
    "end": "2671559"
  },
  {
    "text": "dependencies that truly has no dependencies on anything else you know like I do some terminal color",
    "start": "2671559",
    "end": "2676599"
  },
  {
    "text": "highlighting and like you know had to write all that by hand and also just to remember how many of the the node",
    "start": "2676599",
    "end": "2683079"
  },
  {
    "text": "standard Library interfaces that we're using and rely upon and don't even like think about like aren't in the browser",
    "start": "2683079",
    "end": "2688800"
  },
  {
    "text": "like a lot of the things that in this Runner like you have to pass in the current working directory and you have to pass in like the the standard out",
    "start": "2688800",
    "end": "2695559"
  },
  {
    "text": "interface and stuff because interesting those are node things like those are node apis and and uh you know you you",
    "start": "2695559",
    "end": "2701599"
  },
  {
    "text": "get you get some of them from compilers but they're not in Dino and and it's really confronting you with the fact",
    "start": "2701599",
    "end": "2706760"
  },
  {
    "text": "that like no no no you're relying on some node stuff here um so that was like very educational for me to get that running yeah and you know I I ended up",
    "start": "2706760",
    "end": "2713359"
  },
  {
    "text": "being like pretty impressed with a lot of the stuff in Dino actually yeah I I think that's really worth calling out I'm glad you did that idea that just",
    "start": "2713359",
    "end": "2719720"
  },
  {
    "text": "because now something is esm doesn't mean it now runs anywhere like just you know the package can still be using",
    "start": "2719720",
    "end": "2726079"
  },
  {
    "text": "things that are only or only browser one of the things we saw in the skypack CDN was that we released every package",
    "start": "2726079",
    "end": "2732760"
  },
  {
    "text": "essentially as an esm interface which means that Deno can technically load it but just because it can load it doesn't",
    "start": "2732760",
    "end": "2738280"
  },
  {
    "text": "mean that it can run it by default right uh it can be using something on the file system it could be a package could be",
    "start": "2738280",
    "end": "2743680"
  },
  {
    "text": "using again the crypto Library like there all these things that you realize are really baked into how node works and",
    "start": "2743680",
    "end": "2750000"
  },
  {
    "text": "just because now it's in a language format that a browser or a Deno can understand doesn't mean that Deno can run the code itself um B on how it's",
    "start": "2750000",
    "end": "2757359"
  },
  {
    "text": "written and what it relies on and what it depends on we probably got a break soon but I will bring up that I remember like this",
    "start": "2757359",
    "end": "2764520"
  },
  {
    "text": "this had to be like five or six years ago but I remember Isaac around the time that he was like deep in sort of uh",
    "start": "2764520",
    "end": "2770920"
  },
  {
    "text": "maintaining no. JS and kind of being the BDF all the time he was like getting so sick of all the feature requests coming",
    "start": "2770920",
    "end": "2776559"
  },
  {
    "text": "in that his plan was to start a new node um that was just half of the features",
    "start": "2776559",
    "end": "2782400"
  },
  {
    "text": "and just half of everything and call it no and so because it was both half of node and it was the answer to every",
    "start": "2782400",
    "end": "2788040"
  },
  {
    "text": "feature request and I feel like Dino is actually like that a little like Ryan kind of",
    "start": "2788040",
    "end": "2793319"
  },
  {
    "text": "beat him to it like they're like no they're like no like these are problems for the platform to solve and the",
    "start": "2793319",
    "end": "2799160"
  },
  {
    "text": "platform hasn't solved them yet so like go solve them in the platform or solve them on top of the platform and then it'll work for us right like I think",
    "start": "2799160",
    "end": "2805240"
  },
  {
    "text": "that you know their approach to package management you know they don't have any right now and I think that their take is that it's not their problem to solve",
    "start": "2805240",
    "end": "2811520"
  },
  {
    "text": "it's like it's it's your problem to solve actually D no yeah I",
    "start": "2811520",
    "end": "2818839"
  },
  {
    "text": "[Music]",
    "start": "2819970",
    "end": "2833838"
  },
  {
    "text": "yeah linode is our Cloud Sero Choice grab the nanode plan for just $5 a month",
    "start": "2834240",
    "end": "2840079"
  },
  {
    "text": "just five bucks that gets you a gig of RAM a blazing fast 25 gig SSD and 1 tab",
    "start": "2840079",
    "end": "2845520"
  },
  {
    "text": "of transfer let's be honest you can go a long ways on that five bucks when you do need to scale up their prices are",
    "start": "2845520",
    "end": "2851800"
  },
  {
    "text": "predictable so you can put your calculator down you won't need it we've been running changel log.com on lenoe for years and we've always impressed by",
    "start": "2851800",
    "end": "2858559"
  },
  {
    "text": "their award-winning support team check them out at lin.com changelog once again that's lin.com",
    "start": "2858559",
    "end": "2867119"
  },
  {
    "text": "[Music]",
    "start": "2870120",
    "end": "2875839"
  },
  {
    "text": "changelog [Music]",
    "start": "2875839",
    "end": "2881540"
  },
  {
    "text": "let's get into the thing that people actually care about like I'm building applications I'm one of the people who",
    "start": "2882599",
    "end": "2888319"
  },
  {
    "text": "build applications and not just libraries like Michael likes to mess around with what do I do how do I build",
    "start": "2888319",
    "end": "2894160"
  },
  {
    "text": "things what kinds of benefits are there tell me how to do this Fred because I actually don't know how to build an",
    "start": "2894160",
    "end": "2900119"
  },
  {
    "text": "application withm yeah I just write I just write modules so you're GNA have to tell me how to make websites",
    "start": "2900119",
    "end": "2907280"
  },
  {
    "text": "you're in luck because it's 2020 and uh esm has been around what five years since it was ratified now most people",
    "start": "2907280",
    "end": "2914000"
  },
  {
    "text": "actually are writing esm at least most readmes use it as the kind of example code most applications almost like AUM",
    "start": "2914000",
    "end": "2920960"
  },
  {
    "text": "at this point is what I've seen from webpack and roll up it's it's a pretty common workflow it's that shipping it to",
    "start": "2920960",
    "end": "2926240"
  },
  {
    "text": "the browser that then becomes the thing that we're still moving our way towards um as it's become more and more",
    "start": "2926240",
    "end": "2932160"
  },
  {
    "text": "supported in browsers so really it's just i11 that doesn't support this and a",
    "start": "2932160",
    "end": "2937240"
  },
  {
    "text": "couple of other smaller browsers but it's pretty safe at this point to at the very least ship a version of your",
    "start": "2937240",
    "end": "2943839"
  },
  {
    "text": "application that is esm and the way that it's kind of recommended to do it now which is a kind of good going back to",
    "start": "2943839",
    "end": "2950440"
  },
  {
    "text": "your using a deprecated field intentionally to support kind of both the new and the old at the same time",
    "start": "2950440",
    "end": "2957040"
  },
  {
    "text": "there is this idea of a type equals module attribute for a script tag and that tells the browser this is esm if",
    "start": "2957040",
    "end": "2963920"
  },
  {
    "text": "it's not here we won't enable the esm interface but then there's also a script with I",
    "start": "2963920",
    "end": "2969240"
  },
  {
    "text": "don't think it's type it's just a no no module so n- module and what that says",
    "start": "2969240",
    "end": "2974359"
  },
  {
    "text": "is like this is intentionally not esm like if you are a non-m browser this is",
    "start": "2974359",
    "end": "2979880"
  },
  {
    "text": "for you and so I actually don't know much of the history of it but it would seemed in retrospect like this really smart thing that okay it's i1's coming",
    "start": "2979880",
    "end": "2986280"
  },
  {
    "text": "out we know we're not going to support esm we'll at least support a flag that says I will run this and I will ignore",
    "start": "2986280",
    "end": "2994240"
  },
  {
    "text": "type equals module so you can kind of think it was like a fork um even the browsers that don't support esm understand that limitation and won't",
    "start": "2994240",
    "end": "3001280"
  },
  {
    "text": "try to run esm code instead they'll only um try to run code that is like essentially no module",
    "start": "3001280",
    "end": "3008000"
  },
  {
    "text": "so oh God I hope I'm saying this right but there's essentially this forking if I'm not someone please correct me on",
    "start": "3008000",
    "end": "3013160"
  },
  {
    "text": "Twitter there's essentially this forking mechanism where type equals modul is for no new browsers no modules only run on",
    "start": "3013160",
    "end": "3018799"
  },
  {
    "text": "Old browsers and new new browsers will essentially ignore it and maybe you're getting to this but it seems to me that",
    "start": "3018799",
    "end": "3024680"
  },
  {
    "text": "most people look at that and they're like well I don't want to bundle twice yeah you know that's a pain in the butt",
    "start": "3024680",
    "end": "3031119"
  },
  {
    "text": "I'm just going to ship the old one and and just use that and I'm I'm kind of of the mind if if you're already in the",
    "start": "3031119",
    "end": "3036160"
  },
  {
    "text": "bundled ecosystem and you don't want to take on that complexity like that's not the end of the world it's this really interesting where if you're writing esm",
    "start": "3036160",
    "end": "3043599"
  },
  {
    "text": "you're already getting like 80 90% of the benefits your bundler is able to much better understand the code you're",
    "start": "3043599",
    "end": "3048880"
  },
  {
    "text": "writing you've kind of like you've done your part to enter the new world what you're missing out on is this idea to",
    "start": "3048880",
    "end": "3054440"
  },
  {
    "text": "kind of drop the Legacy requirements you might have um behind you and what that means is that you can really put all the",
    "start": "3054440",
    "end": "3060799"
  },
  {
    "text": "older like really old really heavy polyfills and transpilation only for",
    "start": "3060799",
    "end": "3066319"
  },
  {
    "text": "that second no module bundle so you can essentially start to Target a much more modern ecosystem um and what that means",
    "start": "3066319",
    "end": "3072760"
  },
  {
    "text": "is you get less code um kind of bundled transpiled polyfilled as a result so",
    "start": "3072760",
    "end": "3078359"
  },
  {
    "text": "performance is kind of of that thing where like if you are happy with what you're doing it's a nice thing to have it definitely gives you a better",
    "start": "3078359",
    "end": "3084200"
  },
  {
    "text": "performance score Google will treat you a little nicer with SEO it's a good thing to do but by writing your",
    "start": "3084200",
    "end": "3090119"
  },
  {
    "text": "application in esm you're already kind of you're on the elevator like you're on the path as tooling gets better and",
    "start": "3090119",
    "end": "3095559"
  },
  {
    "text": "better and as the ecosystem evolves you will continue to carry forward um those benefits um it's like it's the limbo",
    "start": "3095559",
    "end": "3102160"
  },
  {
    "text": "you're in the limbo there's extra work to get out of the limbo but in the future by doing that you are already setting yourself up for Success well and",
    "start": "3102160",
    "end": "3108760"
  },
  {
    "text": "I mean it shouldn't be underestimated like these features really do enable a lot better performance uh particularly",
    "start": "3108760",
    "end": "3115280"
  },
  {
    "text": "for applications that are changing in all the time right because not every file not every dependency is changing",
    "start": "3115280",
    "end": "3121319"
  },
  {
    "text": "all that often and a lot of the code that you're loading one time you're actually loading every time because of a",
    "start": "3121319",
    "end": "3127559"
  },
  {
    "text": "bundle like you know there there's a lot that people talk about like you know how small they got their bundle and what",
    "start": "3127559",
    "end": "3132720"
  },
  {
    "text": "their Bund performances and what minification does and which you know which algorithm to use for compression and like you're all getting the bundle",
    "start": "3132720",
    "end": "3138880"
  },
  {
    "text": "down and down and down but like at the end of the day if loading the entire bundle is the best performance that you",
    "start": "3138880",
    "end": "3146119"
  },
  {
    "text": "will ever ever have that is actually still pretty bad um like in an",
    "start": "3146119",
    "end": "3151599"
  },
  {
    "text": "application that you're loading every day and the people are loading every day like they have all this cash date that they really should be able to benefit",
    "start": "3151599",
    "end": "3157799"
  },
  {
    "text": "from and they can't yeah and you know like browsers that support this are like a lot of people's mobile phones like",
    "start": "3157799",
    "end": "3163640"
  },
  {
    "text": "most mobile phones are running like newish Chrome or newish Safari like not",
    "start": "3163640",
    "end": "3169160"
  },
  {
    "text": "not the newest uh but like you know new enough that often they do have these features and so for a lot of especially",
    "start": "3169160",
    "end": "3175720"
  },
  {
    "text": "mobile people the first time they load the page it's going to take you know as long as it always did but the next time they load the page after you updated a",
    "start": "3175720",
    "end": "3181720"
  },
  {
    "text": "couple things but none of your big dependency bundles it's going to be really fast yeah you know you're only going to need one of those I think",
    "start": "3181720",
    "end": "3187599"
  },
  {
    "text": "that's the much more interesting conversation here which is what can you do in this new world that you actually can't really do in the old um and",
    "start": "3187599",
    "end": "3194280"
  },
  {
    "text": "there's some things there where it's like you know we we talk so much about how do we make the new and the old work together and that's really about kind of",
    "start": "3194280",
    "end": "3200599"
  },
  {
    "text": "supporting the feature sets of both in in each other and making that harmonious but there's also this whole other world",
    "start": "3200599",
    "end": "3206280"
  },
  {
    "text": "of things only really possible once you have a native browser loading system and caching is a huge part of that where",
    "start": "3206280",
    "end": "3213280"
  },
  {
    "text": "once you have a ability basically letting the browser go back to what it's good at which is optimizing the things that you load in today's bundled world",
    "start": "3213280",
    "end": "3220599"
  },
  {
    "text": "the browser doesn't really know much about what's inside the the bundled files right it's it's source files it's",
    "start": "3220599",
    "end": "3225880"
  },
  {
    "text": "dependency files they're all mixed together it's this big soup and then when you go and make a change right you're now having to basically like ship",
    "start": "3225880",
    "end": "3232760"
  },
  {
    "text": "much more code down to the user on their second visit than you would have otherwise had to because the source code that you changed is mixed with the",
    "start": "3232760",
    "end": "3238559"
  },
  {
    "text": "dependency files that you didn't change and even the source files that you didn't change letting the browser",
    "start": "3238559",
    "end": "3244319"
  },
  {
    "text": "understand basically how your application works and the difference between a source file and a dependency file lets you then set proper cache",
    "start": "3244319",
    "end": "3251079"
  },
  {
    "text": "headers on the two of them separately it's two totally different performance stories between a file that changes every time you deploy and a file that",
    "start": "3251079",
    "end": "3257160"
  },
  {
    "text": "really doesn't change that often it's version tagged it's pinned essentially there's this really cool caching story",
    "start": "3257160",
    "end": "3262559"
  },
  {
    "text": "there where just by default you get a much better performance Story on second third fourth visit where files only need",
    "start": "3262559",
    "end": "3269599"
  },
  {
    "text": "to be redownloaded when you've actually changed them versus the world today where every time you redeploy you essentially set a new hash it all gets",
    "start": "3269599",
    "end": "3276280"
  },
  {
    "text": "cleared out and your user is stuck downloading on a second and third visit essentially the whole app over again so",
    "start": "3276280",
    "end": "3282280"
  },
  {
    "text": "I really want to hear more about snow pack because again I don't write enough websites to to use it but I'm like super",
    "start": "3282280",
    "end": "3287440"
  },
  {
    "text": "interested in it say I'm a webpack user I you know write my app and webpack is doing all this buildy stuff and you know",
    "start": "3287440",
    "end": "3292720"
  },
  {
    "text": "I have this this browser up that's you know things are updating all the time what is the difference in kind of the",
    "start": "3292720",
    "end": "3298799"
  },
  {
    "text": "development story first and foremost like what does that development workflow look like and and what are some of the",
    "start": "3298799",
    "end": "3303920"
  },
  {
    "text": "trade-offs that might be there and then you know after that then then you talk about the distribution story and how",
    "start": "3303920",
    "end": "3309359"
  },
  {
    "text": "that actually gets packaged up into an application into yeah definitely it's one of those things where you really feel it instantly when you use it so the",
    "start": "3309359",
    "end": "3316000"
  },
  {
    "text": "first thing I'd say is like just try it out try one of our templates we have like a create snack app that lets you just kind of get started with something",
    "start": "3316000",
    "end": "3322160"
  },
  {
    "text": "smaller we also are essentially our goal is to be a drop in replacement for create react app so because create react",
    "start": "3322160",
    "end": "3328960"
  },
  {
    "text": "app is a pretty controlled environment we can actually do our best to be a drop in replacement they don't allow a lot of customization so it's it's not a moving",
    "start": "3328960",
    "end": "3336000"
  },
  {
    "text": "Target it's one that we can kind of pin to so if you have a create react app template I would also say just just try to run that in snow pack you have stuff",
    "start": "3336000",
    "end": "3342559"
  },
  {
    "text": "like that for view too right yeah we have templates for for all of these and and official plugins to support the",
    "start": "3342559",
    "end": "3347640"
  },
  {
    "text": "building the reason I say just like try it and see how it works is because what you get is essentially a 50 millisecond",
    "start": "3347640",
    "end": "3354200"
  },
  {
    "text": "startup time where in instead of having to do any upfront work we're following this model where we only need to build",
    "start": "3354200",
    "end": "3360280"
  },
  {
    "text": "things as they're requested so you run you know your mpm start or whatever you do to start your Dev server and like",
    "start": "3360280",
    "end": "3366240"
  },
  {
    "text": "finger snap it's there the way that that works is that because all we're doing is really setting up the server that",
    "start": "3366240",
    "end": "3371920"
  },
  {
    "text": "startup time isn't there's nothing to do right we haven't seen you request a file yet what that does is then that you know",
    "start": "3371920",
    "end": "3377480"
  },
  {
    "text": "you open your browser you go to the dev site and now all of a sudden the browser is telling the dev server hey I need",
    "start": "3377480",
    "end": "3383160"
  },
  {
    "text": "these files and a lot of those files don't need to be compiled right like a lot of them just get can just be loaded",
    "start": "3383160",
    "end": "3388760"
  },
  {
    "text": "yeah exactly so for if you're just writing JavaScript like plain old JavaScript you're not using react you're not using typescript we're essentially",
    "start": "3388760",
    "end": "3395000"
  },
  {
    "text": "just piping them you know it's a pretty light Dev server um and then where we come into play and where we start to",
    "start": "3395000",
    "end": "3400200"
  },
  {
    "text": "match the world that you're used to the webpack uh the build compiled world is that we will then take a file like a",
    "start": "3400200",
    "end": "3406160"
  },
  {
    "text": "typescript file a spelt file a view file and as it goes through that that pipeline from the dev server to the back",
    "start": "3406160",
    "end": "3412200"
  },
  {
    "text": "to the browser we will just build that one file so instead of this really complex you know the world that I've",
    "start": "3412200",
    "end": "3418119"
  },
  {
    "text": "seen is of the bundle development it's you're trying to define a build that you never actually see really like",
    "start": "3418119",
    "end": "3423880"
  },
  {
    "text": "interacting you only see it like kind of wrapped in this big black box which is a bundle what we get is a much simpler the",
    "start": "3423880",
    "end": "3430119"
  },
  {
    "text": "file that you load in the browser is a one toone representation of the file on disk so debugging becomes a lot easier",
    "start": "3430119",
    "end": "3436160"
  },
  {
    "text": "you don't really need Source Maps um they certainly help still but you know you look up at app.js file and it",
    "start": "3436160",
    "end": "3442720"
  },
  {
    "text": "matches your app. swelt file kind of one to one just the compiled version of it versus what I've had to do with a",
    "start": "3442720",
    "end": "3447960"
  },
  {
    "text": "bundled applications you okay I found an error I click into that error I have a",
    "start": "3447960",
    "end": "3453079"
  },
  {
    "text": "10,000 line Javascript file that I'm now trying to map back to a source file where the error happened Source Maps",
    "start": "3453079",
    "end": "3459440"
  },
  {
    "text": "help but then you just you know that's that's its own can of worms Fred what about like",
    "start": "3459440",
    "end": "3464520"
  },
  {
    "text": "non-script assets yeah so are you saying like a an SVG or like a WM CSS CSS yeah",
    "start": "3464520",
    "end": "3473000"
  },
  {
    "text": "well sure okay so CSS say okay maybe you want want to write in sess will it go",
    "start": "3473000",
    "end": "3479039"
  },
  {
    "text": "and and it it make CSS out of that yeah that's a great question so it's interesting we actually we tackle that",
    "start": "3479039",
    "end": "3485240"
  },
  {
    "text": "as if it's any other built asset so what's interesting about this world that we're moving into where esm is relying",
    "start": "3485240",
    "end": "3491960"
  },
  {
    "text": "on what the platform and the browser can do all of a sudden the tooling by being lighter touch is also a little more",
    "start": "3491960",
    "end": "3497960"
  },
  {
    "text": "flexible on how it treats what what it's building right instead of I am building a JavaScript bundle the snow Pack story",
    "start": "3497960",
    "end": "3504160"
  },
  {
    "text": "is more I am building your web application and that means we need a story around CSS images SVG so it's all",
    "start": "3504160",
    "end": "3511720"
  },
  {
    "text": "configurable through our build system it's essentially a build system for web apps so you can think of it a little bit more like 11d in that way where it has",
    "start": "3511720",
    "end": "3518039"
  },
  {
    "text": "all the power of building a JS app so yeah that's where I was going I was going to 110 I was like okay what if I",
    "start": "3518039",
    "end": "3524520"
  },
  {
    "text": "ask for markdown yeah can it will it go and compile that markdown or will it go",
    "start": "3524520",
    "end": "3530240"
  },
  {
    "text": "and call out to 110 or whatever right yeah that is something that we haven't tackled yet because what 11d does they",
    "start": "3530240",
    "end": "3535520"
  },
  {
    "text": "talk about it like it's this really simple system there's some complexity in there but what we do is we have an 11d",
    "start": "3535520",
    "end": "3541359"
  },
  {
    "text": "starter template and an 11d plugin where essentially what we're saying is through snopac as the build system the thing",
    "start": "3541359",
    "end": "3547400"
  },
  {
    "text": "that you run mpm start and mpm build and you you build your application with snopac we can still run commands through",
    "start": "3547400",
    "end": "3553599"
  },
  {
    "text": "that process we can say okay I am a plugin for snow pack and what I do is I run 11t to build your application so",
    "start": "3553599",
    "end": "3561880"
  },
  {
    "text": "it's it's this flexible model where we are essentially we're taking on the idea of serving files and building your",
    "start": "3561880",
    "end": "3567920"
  },
  {
    "text": "application but on a much more holistic level where you can start to connect tools like SAS and 11d into this just a",
    "start": "3567920",
    "end": "3574400"
  },
  {
    "text": "build Runner essentially that is snow pack so in the way that webpack is really it's like a a very Spa model",
    "start": "3574400",
    "end": "3580559"
  },
  {
    "text": "where you're bundling things together and trying to learn the whole scope of a website as it's represented by",
    "start": "3580559",
    "end": "3586079"
  },
  {
    "text": "JavaScript what we're instead saying is that your application is your application it is many things it's JavaScript it's CSS it's images and what",
    "start": "3586079",
    "end": "3593039"
  },
  {
    "text": "we do is we one toone build those we let you connect the tools you like you you like and our end result is not a",
    "start": "3593039",
    "end": "3599839"
  },
  {
    "text": "JavaScript bundle it's a website so it's really like a website builder versus a JavaScript Builder and because esm is",
    "start": "3599839",
    "end": "3606200"
  },
  {
    "text": "lighter touch and the tooling is lighter touch we're able to handle everything that you love about a bundle builder for",
    "start": "3606200",
    "end": "3611799"
  },
  {
    "text": "JavaScript but in the context of you're just building an application you're not building JavaScript",
    "start": "3611799",
    "end": "3617079"
  },
  {
    "text": "specifically now I'm GNA play with that so yeah we have SAS plugins we have 11d plugins it's it's this really cool model",
    "start": "3617079",
    "end": "3623160"
  },
  {
    "text": "where for a long time single page apps have been like the Blessed way to do development and tooling kind of assumes",
    "start": "3623160",
    "end": "3629039"
  },
  {
    "text": "create react app assumes you're following that model but what we're able to say is a single page app is one thing",
    "start": "3629039",
    "end": "3634480"
  },
  {
    "text": "that you can build if you really want to build JavaScript Focus JavaScript only CSS and JavaScript if you love that",
    "start": "3634480",
    "end": "3640200"
  },
  {
    "text": "JavaScript world that's we handle that but if you're trying to build a multi-page app you're trying to build something that's a lot closer to what a",
    "start": "3640200",
    "end": "3646760"
  },
  {
    "text": "website used to be which is HTML CSS and JavaScript all treated equally you can do that as well our current um website",
    "start": "3646760",
    "end": "3653200"
  },
  {
    "text": "is built with 11d and snow pack together and they work pretty well together well I'm going to give it a shot that sounds fun yeah it's it's a lot of fun",
    "start": "3653200",
    "end": "3661119"
  },
  {
    "text": "I'd say fun is kind of the word we're going for just like realizing how much we've been slowed down by the generation",
    "start": "3661119",
    "end": "3666319"
  },
  {
    "text": "of tooling where again I I feel like webpack rollup you know everyone who got us to where we are today you know we",
    "start": "3666319",
    "end": "3672680"
  },
  {
    "text": "wouldn't be here if we weren't if it weren't for them right this idea that we can all share one ecosystem of packages",
    "start": "3672680",
    "end": "3678680"
  },
  {
    "text": "and that something written will run on both node and the browser with tooling that's still an accomplishment and you",
    "start": "3678680",
    "end": "3684359"
  },
  {
    "text": "know we're just kind of the next iteration so we get to leave behind some of the Legacy but you know I totally",
    "start": "3684359",
    "end": "3689440"
  },
  {
    "text": "realized that how we got here is is by standing on the shoulders of those Giants and all the work they've done over the last 10 years so obviously like",
    "start": "3689440",
    "end": "3696160"
  },
  {
    "text": "I can use this and uh when I'm not running a Dev server I can just compile it all out and I'll get a bunch of files and I can push them into to G get up",
    "start": "3696160",
    "end": "3703319"
  },
  {
    "text": "Pages or whatever sort of static site host but you know we've been talking about there's a lot of new deployment",
    "start": "3703319",
    "end": "3709599"
  },
  {
    "text": "stories and New Opportunities um in this new ecosystem so I think we should think about some or talk about some of the",
    "start": "3709599",
    "end": "3715520"
  },
  {
    "text": "other distribution stories for an application and also get a little bit into like is there anything that we can do to make this the Legacy part of that",
    "start": "3715520",
    "end": "3722760"
  },
  {
    "text": "a little bit easier like you talked about how there's this no module thing and uh you know like how do I automate",
    "start": "3722760",
    "end": "3729359"
  },
  {
    "text": "like you know filling in that old no module thing for old browsers and stuff like that yeah I I think we're closer to",
    "start": "3729359",
    "end": "3737200"
  },
  {
    "text": "so so this whole episode I feel like has been like how do you deal with Legacy um how do you transition very large changes",
    "start": "3737200",
    "end": "3744640"
  },
  {
    "text": "in a comfortable way again I I feel like for the first time the web is actually in a pretty lucky position here where",
    "start": "3744640",
    "end": "3751000"
  },
  {
    "text": "i11 is is getting end of life pretty soon um it's kind of up to like what that distinction is but their General",
    "start": "3751000",
    "end": "3757279"
  },
  {
    "text": "mainstream support I think ends in October of this year which a lot of people don't realize so sure you might",
    "start": "3757279",
    "end": "3762799"
  },
  {
    "text": "have some larger Enterprises getting kind of an extension with Microsoft and that still matters if you're like a",
    "start": "3762799",
    "end": "3767839"
  },
  {
    "text": "Salesforce where most of your customers are are these larger Enterprises but if you're building a General application",
    "start": "3767839",
    "end": "3773960"
  },
  {
    "text": "for a general user all the of a sudden that user is not on i1 anymore um or it's very rare that you really have that",
    "start": "3773960",
    "end": "3780000"
  },
  {
    "text": "requirement anymore so I think by waiting for October and you know waiting a little bit longer a lot of these",
    "start": "3780000",
    "end": "3785760"
  },
  {
    "text": "problems on the web solve themselves a lot of the Legacy just kind of melts away and then that idea where it's",
    "start": "3785760",
    "end": "3791400"
  },
  {
    "text": "always harder to to support both at the same time you can kind of just start to build for that world and the world we're",
    "start": "3791400",
    "end": "3797039"
  },
  {
    "text": "entering on the web is really exciting right it's every browser is essentially following this Evergreen model now where",
    "start": "3797039",
    "end": "3803279"
  },
  {
    "text": "updates are sent automatically even Enterprises are encouraged to update regularly it's this really nice model",
    "start": "3803279",
    "end": "3809440"
  },
  {
    "text": "where now all of a sudden you can start to build for a much more modern platform it doesn't mean like right when a new feature is is launched in Chrome or in",
    "start": "3809440",
    "end": "3815680"
  },
  {
    "text": "Firefox that you can start using it everywhere there's still obviously a little bit of on on boarding of those new features but your lowest common",
    "start": "3815680",
    "end": "3822960"
  },
  {
    "text": "denominator is suddenly only you know like a few versions back um so there's a really exciting model that's happening",
    "start": "3822960",
    "end": "3828680"
  },
  {
    "text": "there as well that change is actually going to be pretty influential for not just how you can build for the web but what you can assume your users are able",
    "start": "3828680",
    "end": "3835279"
  },
  {
    "text": "to use and then not having to always find a really low common denominator to support them it's specific to snow pack",
    "start": "3835279",
    "end": "3841000"
  },
  {
    "text": "it's one of those interesting things where we now get this option to build and serve an unbundled application so if",
    "start": "3841000",
    "end": "3847920"
  },
  {
    "text": "you're again this idea of default complexity versus default Simplicity right now if I'm building a web",
    "start": "3847920",
    "end": "3853960"
  },
  {
    "text": "application I need a bundler right or I'm so used to saying right now really I mean in the old world you needed a",
    "start": "3853960",
    "end": "3859359"
  },
  {
    "text": "bundler to work with mpm and that means you need all the complexity that comes with how do I configure this bundler how",
    "start": "3859359",
    "end": "3864799"
  },
  {
    "text": "what plugins do I need the model that snow pack is following is that by default everything should just",
    "start": "3864799",
    "end": "3870039"
  },
  {
    "text": "work um everything should just work in a way where you don't need to do a lot of configuration to get an application that",
    "start": "3870039",
    "end": "3875880"
  },
  {
    "text": "runs um instead of bundling being assumption and a requirement it's now",
    "start": "3875880",
    "end": "3881119"
  },
  {
    "text": "just a an optional thing that you can do for performance and that's again we're taking the old and the new and trying to",
    "start": "3881119",
    "end": "3886319"
  },
  {
    "text": "grab the both the best of both of them where bundling is an optimization at the end of the day it's only in the last 10",
    "start": "3886319",
    "end": "3891760"
  },
  {
    "text": "years that it became this requirement that we all had to build on top of but really what it is is we're saying I want to combine multiple files together to",
    "start": "3891760",
    "end": "3898279"
  },
  {
    "text": "speed up my site that's a much different model from I need to do this for anything to run for anyone so the whole",
    "start": "3898279",
    "end": "3904480"
  },
  {
    "text": "model is kind of flipping and that complexity is now something you go out and find because it solves a problem versus it's baked into the very",
    "start": "3904480",
    "end": "3911200"
  },
  {
    "text": "Foundation that you need to get started so what's Sky pack doing then if this is all just handled and I can push detic",
    "start": "3911200",
    "end": "3917559"
  },
  {
    "text": "resources what does Sky pack do yeah Sky pack is our our next kind of step into",
    "start": "3917559",
    "end": "3923079"
  },
  {
    "text": "this kind of okay now that we have this what do we do with it and what's new and and only possible with this model",
    "start": "3923079",
    "end": "3928160"
  },
  {
    "text": "skypack is if you've heard of the Pika CDN that was our first version and this is essentially the the production ready",
    "start": "3928160",
    "end": "3933359"
  },
  {
    "text": "version of that where if you think of what snow Pack's doing and what makes it so special it it takes an mpm package",
    "start": "3933359",
    "end": "3939880"
  },
  {
    "text": "and all the files and all the complexity and all the Legacy stuff it turns it into a single Javascript file that can",
    "start": "3939880",
    "end": "3945720"
  },
  {
    "text": "be loaded via esm and run in the browser um Sky pack is that idea taken to the CDN where instead of a CDN being a thing",
    "start": "3945720",
    "end": "3952760"
  },
  {
    "text": "that serves files out of packages and individual things Sky pack is a way to load a package and any package name that",
    "start": "3952760",
    "end": "3959400"
  },
  {
    "text": "you give it will be loadable as esm so even if it wasn't written as esm we as a CDN do the work to up you know convert",
    "start": "3959400",
    "end": "3966599"
  },
  {
    "text": "it and compile it into esm so essentially we give you a unified interface to load any package by name",
    "start": "3966599",
    "end": "3973160"
  },
  {
    "text": "from our CDN and we do all the work to make that work really well in your application part of it is just building out this platform so that anyone can use",
    "start": "3973160",
    "end": "3979400"
  },
  {
    "text": "it um if you're building tooling you can start to pull from it if you're building an application you can kind of get rid of any building at all and just load",
    "start": "3979400",
    "end": "3986240"
  },
  {
    "text": "dependencies on demand we see it as a really interesting model where now you're hosting code from the CDN that is",
    "start": "3986240",
    "end": "3993240"
  },
  {
    "text": "thinking in terms of packages and it's optimizing in terms of packages so going back to that cashing story we can cash",
    "start": "3993240",
    "end": "3999559"
  },
  {
    "text": "dependencies really well because they're versioned and they're cut and they're done um so once you load a dependency",
    "start": "3999559",
    "end": "4005480"
  },
  {
    "text": "from skypack it is essentially locked forever we send back the cash header so that you only ever load it once in your",
    "start": "4005480",
    "end": "4011160"
  },
  {
    "text": "browser and the browser will cash it forever it's all these things that you can really only do with an ESF system where the browser is now able to",
    "start": "4011160",
    "end": "4018640"
  },
  {
    "text": "go back to what it does best of the optimizing your files and and understanding your cach State versus",
    "start": "4018640",
    "end": "4024799"
  },
  {
    "text": "really what realizing what the older tooling was doing was trying to replicate that functionality and",
    "start": "4024799",
    "end": "4030319"
  },
  {
    "text": "essentially taking on the responsibility that the browser is just naturally better at um so the caching story for Sky pack and and building on top of it",
    "start": "4030319",
    "end": "4036680"
  },
  {
    "text": "is really really cool that's awesome that's really cool I'm very excited this is a good looking space yeah so it's",
    "start": "4036680",
    "end": "4043720"
  },
  {
    "text": "it's one of those things that just Powers you know it can power so much of what has traditionally had to be tool independent it can suddenly just load",
    "start": "4043720",
    "end": "4049359"
  },
  {
    "text": "code dynamically on demand as needed it really is an interesting performance story Chris any final thoughts before we",
    "start": "4049359",
    "end": "4055599"
  },
  {
    "text": "close it out my mind is empty now I just want to know what repos",
    "start": "4055599",
    "end": "4061680"
  },
  {
    "text": "Michael has private I I meditate for hours to empty my mind so I meditate for",
    "start": "4061680",
    "end": "4066720"
  },
  {
    "text": "hours to empty my mind I'm jealous that it it happen so quickly for you this is a difficult state to to",
    "start": "4066720",
    "end": "4073520"
  },
  {
    "text": "enter yeah I mean I write modules like that's what I do it's okay nothing it's nothing special all right awesome this",
    "start": "4073520",
    "end": "4080440"
  },
  {
    "text": "is a great show I think that like we really got into esm I think I did an esm show on JS party like nine months maybe",
    "start": "4080440",
    "end": "4086960"
  },
  {
    "text": "a year ago and it was like a little bit like you can't use the yet I'm sorry A",
    "start": "4086960",
    "end": "4092440"
  },
  {
    "text": "lot has changed in that months yeah yeah yeah and now it's like actually if you're running applications it sounds like it's really ready like it's you're",
    "start": "4092440",
    "end": "4098560"
  },
  {
    "text": "you're good like just write write web apps in it if you're writing libraries it's still a little tricky but I think that the tooling is getting there now if",
    "start": "4098560",
    "end": "4105238"
  },
  {
    "text": "you're if you're a little more comfortable dealing with that it's ready for you as well and like so many things in JavaScript that I was resistant to",
    "start": "4105239",
    "end": "4112199"
  },
  {
    "text": "but fully wrong about uh esm is also one of those things I was very like d like",
    "start": "4112199",
    "end": "4118080"
  },
  {
    "text": "why are we breaking the ecosystem for this like it's just who cares about the syntax and now that I'm in the guts of",
    "start": "4118080",
    "end": "4123159"
  },
  {
    "text": "it I can see there are some really big advantages like people really should move to these patterns they're they are",
    "start": "4123159",
    "end": "4129120"
  },
  {
    "text": "better let's just do it all right great show great talking with you that's all",
    "start": "4129120",
    "end": "4137440"
  },
  {
    "text": "thanks to Fred for coming back on the show to Michael for making it all happen and to Chris for rounding out the panel",
    "start": "4137920",
    "end": "4144040"
  },
  {
    "text": "thanks also to you for listening we appreciate you if you love JS party listen up I",
    "start": "4144040",
    "end": "4149560"
  },
  {
    "text": "have some semi secet news to share we're beta testing a membership program that lets you get closer to the metal it's",
    "start": "4149560",
    "end": "4156238"
  },
  {
    "text": "called chain doog Plus+ and this is the first time we're talking about it publicly support our work help us test",
    "start": "4156239",
    "end": "4161798"
  },
  {
    "text": "out this program and make the ads disappear at chain.com plus plus once again that's",
    "start": "4161799",
    "end": "4169759"
  },
  {
    "text": "changelog.md by the mysterious break master cylinder that's all we have for you this week we'll talk to you next",
    "start": "4176440",
    "end": "4182750"
  },
  {
    "text": "[Music]",
    "start": "4182750",
    "end": "4191949"
  },
  {
    "text": "time",
    "start": "4194320",
    "end": "4197320"
  }
]