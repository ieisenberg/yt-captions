[
  {
    "text": "yeah you can't polish a turd is what you're saying shine it up a little bit though that's my unpopular opinion I actually think yeah you probably can",
    "start": "40",
    "end": "6240"
  },
  {
    "text": "polish a turd to be honest The MythBusters actually did and they've polished a turd on MythBusters okay",
    "start": "6240",
    "end": "11280"
  },
  {
    "text": "we've said turd too many times for a family friendly",
    "start": "11280",
    "end": "16320"
  },
  {
    "text": "podcast this episode is brought to you by our friends at Square millions of",
    "start": "18920",
    "end": "24080"
  },
  {
    "text": "square sellers use the square app Marketplace to discover and install apps they rely on daily to run their business",
    "start": "24080",
    "end": "30119"
  },
  {
    "text": "is and the way you get your app there is by becoming a square app partner let me",
    "start": "30119",
    "end": "35360"
  },
  {
    "text": "tell you how this works as a square app partner you can offer and monetize your apps directly to square sellers in the",
    "start": "35360",
    "end": "42200"
  },
  {
    "text": "app Marketplace to millions of sellers you can Leverage The Square platform to build robust e-commerce websites smart",
    "start": "42200",
    "end": "49399"
  },
  {
    "text": "payment Integrations and custom solutions for millions of businesses and here's the best part you get to keep",
    "start": "49399",
    "end": "55920"
  },
  {
    "text": "100% of Revenue while you grow Square collects a 0% cut from your sales for",
    "start": "55920",
    "end": "61440"
  },
  {
    "text": "the first year or your first 100 square referred sellers that way you can focus on building and growing your Square",
    "start": "61440",
    "end": "68159"
  },
  {
    "text": "customer base and you get to set your own pricing models you also get a ton of support from Square you get access to",
    "start": "68159",
    "end": "74520"
  },
  {
    "text": "Square's technical team using slack you get insights into the performance of your app on the app Marketplace and of",
    "start": "74520",
    "end": "80960"
  },
  {
    "text": "course you get direct access to new product launches and all this begins at changel log.com Square again changel",
    "start": "80960",
    "end": "88840"
  },
  {
    "text": "log.com last [Music]",
    "start": "88840",
    "end": "96800"
  },
  {
    "text": "Square let's do it it's go time welcome to go time your source for diverse",
    "start": "101880",
    "end": "109079"
  },
  {
    "text": "discussions from around the go Community subscribe today at go time. FM and",
    "start": "109079",
    "end": "114280"
  },
  {
    "text": "follow the show on Twitter we are at gotime FM special thanks to our partners at fastly for delivering go time super",
    "start": "114280",
    "end": "121280"
  },
  {
    "text": "fast all around the world check them out for yourself at fast.com that's all for me here we",
    "start": "121280",
    "end": "128610"
  },
  {
    "text": "[Music]",
    "start": "128610",
    "end": "135469"
  },
  {
    "text": "go hello and welcome to go time I'm Matt ryer today we're talking about logging",
    "start": "136400",
    "end": "143920"
  },
  {
    "text": "something we all do uh don't no need to be embarrassed about it but are we doing",
    "start": "143920",
    "end": "149599"
  },
  {
    "text": "it right are we logging the right things are we logging them to the right place we're going to find out today joining me",
    "start": "149599",
    "end": "157040"
  },
  {
    "text": "John Calhoun of course hello John hey Matt how are you not bad mate not bad how's your week been so far pretty good",
    "start": "157040",
    "end": "163560"
  },
  {
    "text": "so far yeah it's Tuesday isn't it so I shouldn't really ask that question silly never mind we hope the rest of the",
    "start": "163560",
    "end": "169080"
  },
  {
    "text": "week's as good as yesterday we're also joined by Ed Welch who is a swell Feller",
    "start": "169080",
    "end": "176280"
  },
  {
    "text": "who's been two kinds of engineer and two kinds of manager and will do any job as long as he's",
    "start": "176280",
    "end": "182440"
  },
  {
    "text": "having fun hello Ed welcome to go time hey Matt thanks for having me absolute pleasure so yeah logging we all I think",
    "start": "182440",
    "end": "190120"
  },
  {
    "text": "know what logging is but let's just be clear logging what is it the fun part about logging is it's",
    "start": "190120",
    "end": "198480"
  },
  {
    "text": "probably the first thing that everybody does when they start writing software right everybody's first intro into",
    "start": "198480",
    "end": "205480"
  },
  {
    "text": "writing a program is usually a hello world which is at least in my opinion uniform of of logging so it's probably",
    "start": "205480",
    "end": "213080"
  },
  {
    "text": "the most common way and the more sort of most ubiquitous way that we get State out of our application some kind of view",
    "start": "213080",
    "end": "220319"
  },
  {
    "text": "into what it's doing some kind of idea of what's happening so at its most basic",
    "start": "220319",
    "end": "225879"
  },
  {
    "text": "it's just some indicator of like what our applications are even up to yeah so",
    "start": "225879",
    "end": "231439"
  },
  {
    "text": "it's kind of like sometimes I'll have in the beginning when I'm writing something I'll have like lots and lots of logging",
    "start": "231439",
    "end": "237879"
  },
  {
    "text": "going on like you say it's a great way to see what's going on and get some insights it's like a really easy simple",
    "start": "237879",
    "end": "244159"
  },
  {
    "text": "way to do that but usually I'll go and kind of clear that all out and remove it all because it's it stops being useful",
    "start": "244159",
    "end": "250840"
  },
  {
    "text": "at some point but is that right should I do that or should I leave it in there you're probably ahead of most I I think",
    "start": "250840",
    "end": "256239"
  },
  {
    "text": "that largely people you know when they write a log statement it's it's probably there forever you know I'm not sure how",
    "start": "256239",
    "end": "262960"
  },
  {
    "text": "often people really go back through to to scrutinize what they log so you know I would certainly think that you're",
    "start": "262960",
    "end": "268360"
  },
  {
    "text": "going to gain from that right like having more valuable log messages and sort of more relevant is is useful but I",
    "start": "268360",
    "end": "276039"
  },
  {
    "text": "think that in terms of that quantity as long as they contain useful context or information you shouldn't really be",
    "start": "276039",
    "end": "282000"
  },
  {
    "text": "looking to sort of over remove them right I'm imagining some of your scenarios are uh writing logs to like",
    "start": "282000",
    "end": "287320"
  },
  {
    "text": "help debug stuff and if you're anything like me there's probably some time where you catch yourself doing a sanity check",
    "start": "287320",
    "end": "293080"
  },
  {
    "text": "of like or in this function just cuz you're like is the code actually getting to this point where it's supposed to get",
    "start": "293080",
    "end": "298759"
  },
  {
    "text": "and I can imagine that those ones yeah over time stop adding value like once you have tests and everything you know",
    "start": "298759",
    "end": "303919"
  },
  {
    "text": "it's all working it's kind of like is that running every single time that function runs really adding value",
    "start": "303919",
    "end": "309680"
  },
  {
    "text": "whereas like other parts of it definitely could be yeah I tend to do that for marking bits just that it",
    "start": "309680",
    "end": "315199"
  },
  {
    "text": "reached it I'll just put monkey or like monkey 2 monkey 3 so that's probably why I go through and remove the log",
    "start": "315199",
    "end": "321520"
  },
  {
    "text": "statements but also like if I do if I'm doing test driven development I will tend to Lo log a bit less really unless",
    "start": "321520",
    "end": "329160"
  },
  {
    "text": "there's specific kind of tricky Behavior something that I don't understand so I I",
    "start": "329160",
    "end": "334960"
  },
  {
    "text": "really do use it to sort of observe what's going on I inherited a code base",
    "start": "334960",
    "end": "340400"
  },
  {
    "text": "a few years back where congratulations from an old Uncle yeah yeah was old",
    "start": "340400",
    "end": "345560"
  },
  {
    "text": "Uncle really I'll leave this code base to Ed no well yeah let let's go with",
    "start": "345560",
    "end": "351080"
  },
  {
    "text": "that so my uncle left me this sweet code base and he was very sort of I don't",
    "start": "351080",
    "end": "357240"
  },
  {
    "text": "know the the thorough and and consistent every fre function call had a log line at the beginning that would say the name",
    "start": "357240",
    "end": "363120"
  },
  {
    "text": "of the function in entry and then the values that were passed in and then an exit and to be honest I I've never done",
    "start": "363120",
    "end": "371360"
  },
  {
    "text": "that I've never gone and built software that has that level of verbosity I mean they were at debug level there were",
    "start": "371360",
    "end": "376680"
  },
  {
    "text": "times it was extremely useful especially as an inheritance and his untimely passing and I wasn't able to ask him",
    "start": "376680",
    "end": "383520"
  },
  {
    "text": "questions about those log lines so it it did make understanding the application a little bit better so I think the my",
    "start": "383520",
    "end": "390639"
  },
  {
    "text": "learning from that had more to do with maybe don't log monkey one and Monkey 2",
    "start": "390639",
    "end": "395680"
  },
  {
    "text": "instead log something like here's where I am and here's the sort of State at the time here's some values and because that",
    "start": "395680",
    "end": "402080"
  },
  {
    "text": "particularly ended up being useful is like trying to understand why something was or wasn't working it's like it got",
    "start": "402080",
    "end": "408280"
  },
  {
    "text": "to here and things looked correct so there's a lot of tools that exist now that maybe make that easier like",
    "start": "408280",
    "end": "413680"
  },
  {
    "text": "debuggers and tracing and you know even in your tests but there's certainly an element of logs are generally always",
    "start": "413680",
    "end": "420840"
  },
  {
    "text": "available and so having some at least checkpoints through a process that give you insight into that process yeah one",
    "start": "420840",
    "end": "428080"
  },
  {
    "text": "trick that reminds me of that does work for me if I've got a program that where there's quite a bit of logging going on",
    "start": "428080",
    "end": "434720"
  },
  {
    "text": "I will do a thing where I log out a load of hyphens just some dashes and then in go defer immediately the same thing and",
    "start": "434720",
    "end": "442440"
  },
  {
    "text": "that's a neat way of wrapping up really the in that that thing basically the in and out of a function just so you can",
    "start": "442440",
    "end": "448759"
  },
  {
    "text": "then see you know that the logs between those lines are relevant just to that function that works if you've just got",
    "start": "448759",
    "end": "455680"
  },
  {
    "text": "one instance of the program running which you normally do in Dev but doesn't work like if you've got multiple",
    "start": "455680",
    "end": "462639"
  },
  {
    "text": "instances running really does it I think it becomes sort of one of the things",
    "start": "462639",
    "end": "467680"
  },
  {
    "text": "that I I'm going to give people advice on logging is that the more contacts you can put in the log line the more useful",
    "start": "467680",
    "end": "473879"
  },
  {
    "text": "it is so if you have whether or not you have access to the host name and if",
    "start": "473879",
    "end": "479039"
  },
  {
    "text": "you're your logging application or sort of Frameworks or systems introduce that at another level but a log line without",
    "start": "479039",
    "end": "486520"
  },
  {
    "text": "context isn't really very useful so doesn't give you would go a little bit farther than that like not only do you",
    "start": "486520",
    "end": "492479"
  },
  {
    "text": "want to know the sort of machine in a distributed system that it's executing on but you need to know the order number or the user or the trace ID or something",
    "start": "492479",
    "end": "499680"
  },
  {
    "text": "that lets you trace that through the flow of the application typically it's hard to coordinate events over big",
    "start": "499680",
    "end": "505599"
  },
  {
    "text": "systems especially if it's different disparate database systems and things that all log sort of differently with",
    "start": "505599",
    "end": "511319"
  },
  {
    "text": "different formats so put a lot of context in your log lines or remove them if they don't have any because the",
    "start": "511319",
    "end": "517399"
  },
  {
    "text": "usefulness of them especially usually what happens right is you go search for that contextual information you go",
    "start": "517399",
    "end": "522640"
  },
  {
    "text": "search for the trace ID or the order ID or the user ID and the results you get back are only going to be shown that",
    "start": "522640",
    "end": "527880"
  },
  {
    "text": "have that info in it you're likely never going to see the log lines that don't have that info then I wonder should you",
    "start": "527880",
    "end": "533760"
  },
  {
    "text": "standardize the format then if you're going to be using these logs in this way or cuz obviously it's it's just just a",
    "start": "533760",
    "end": "539480"
  },
  {
    "text": "string isn't it you can just print out anything you like from your program should we be strict about what format",
    "start": "539480",
    "end": "546519"
  },
  {
    "text": "we're printing in probably it's kind of a hard problem right like the whether or not you have control over the logs from",
    "start": "546519",
    "end": "553079"
  },
  {
    "text": "some of your applications or not um if you're building your own app you're writing your own logs like having some",
    "start": "553079",
    "end": "558760"
  },
  {
    "text": "consistency is always helpful one of the things I think are interesting about log lines is the sort of battle between the",
    "start": "558760",
    "end": "565440"
  },
  {
    "text": "humans and the machines so we're talking about humans looking at log lines but it's not uncommon now that log lines go",
    "start": "565440",
    "end": "572560"
  },
  {
    "text": "into analytics and you know other system security right so having the format be",
    "start": "572560",
    "end": "578959"
  },
  {
    "text": "structured becomes really important for how easily it is for a machine to parse those log",
    "start": "578959",
    "end": "584320"
  },
  {
    "text": "lines arguably having a visual format that's easy to parse for humans is true",
    "start": "584320",
    "end": "590600"
  },
  {
    "text": "too so commonly I would say Json is maybe what you would find the most it's",
    "start": "590600",
    "end": "596320"
  },
  {
    "text": "probably not my first pick for a structured format because I think it's it's harder for humans to read it's very easy for machines to read and",
    "start": "596320",
    "end": "603200"
  },
  {
    "text": "specifically Json becomes very very hard to read if you have complicated nested",
    "start": "603200",
    "end": "608320"
  },
  {
    "text": "objects or you build large Json doc so one of the things you're typically viewing a log line is it will exist on",
    "start": "608320",
    "end": "614920"
  },
  {
    "text": "horizontal space in your screen and then vertical space is your number of log so if you try to pre-print a Json object in",
    "start": "614920",
    "end": "620880"
  },
  {
    "text": "order to be able to view it You' then turn one log line into like tens or hundreds and so now you've optimized very poorly for being able to look at",
    "start": "620880",
    "end": "627160"
  },
  {
    "text": "those logs quickly there's a you know an alternative that I like a lot that's",
    "start": "627160",
    "end": "632440"
  },
  {
    "text": "common in go probably more than I've seen in in other languages log Fed so",
    "start": "632440",
    "end": "638600"
  },
  {
    "text": "having key value pairs that are separated by space basically log format you're not Matt yeah just I know how",
    "start": "638600",
    "end": "646680"
  },
  {
    "text": "much you like fed I did like it I wasn't going to comment but yeah I'm pleased you said it f log Fed so it's kind of an",
    "start": "646680",
    "end": "652959"
  },
  {
    "text": "interesting compromise on machine parability and human readability But",
    "start": "652959",
    "end": "658120"
  },
  {
    "text": "ultimately have having structure does become really important because almost guaranteed you're going to need some",
    "start": "658120",
    "end": "664000"
  },
  {
    "text": "tool to help you parse those logs or strictly you're going to parse them with a machine for other purposes yeah see",
    "start": "664000",
    "end": "669959"
  },
  {
    "text": "Json would also probably encourage you to put more complex objects in whereas",
    "start": "669959",
    "end": "675240"
  },
  {
    "text": "with log f are we talking key value pairs there yeah and which is a nice thing too so I would generally tell",
    "start": "675240",
    "end": "682040"
  },
  {
    "text": "people I don't have a problem with Json logging and it's fact the easiest and sort of most approachable for most",
    "start": "682040",
    "end": "688360"
  },
  {
    "text": "logging frame works I would highly recommend keeping a flat structure as a practice though right like just do key",
    "start": "688360",
    "end": "694600"
  },
  {
    "text": "value pairs in in Jon I think part of it definitely comes down to how your logging affects how you're going to",
    "start": "694600",
    "end": "699760"
  },
  {
    "text": "consume it because I know the first time I ever used Json logging it was gamechanging in the sense of like oh I'm",
    "start": "699760",
    "end": "705720"
  },
  {
    "text": "like I can filter on these things and like it'll make my life a lot easier but you're right the first time you see it in just like plain text you're like oh",
    "start": "705720",
    "end": "711880"
  },
  {
    "text": "gosh I can't read this anymore but depending on the tools you have certain tools will like help alleviate that pain",
    "start": "711880",
    "end": "718160"
  },
  {
    "text": "so you can start fill filtering things and all of a sudden it'll prettify you know make things pretty for you and if you have the right tooling to do that",
    "start": "718160",
    "end": "724519"
  },
  {
    "text": "like there's Services out there that do it in different options then it's kind of okay but I get what you're saying",
    "start": "724519",
    "end": "729920"
  },
  {
    "text": "with the the key value pair it's kind of like a nice Middle Ground where you can still read it but it's still going to",
    "start": "729920",
    "end": "735920"
  },
  {
    "text": "have that machine readability yeah and the other reason to keep the object flat because you're right the tooling that",
    "start": "735920",
    "end": "741320"
  },
  {
    "text": "exists out there usually facilitates this but it also introduces in a lot of cases another query language so to",
    "start": "741320",
    "end": "748199"
  },
  {
    "text": "manipulate on documents you usually need to use like JQ or JMS path or some other",
    "start": "748199",
    "end": "755360"
  },
  {
    "text": "query language that you have to figure out how to access elements of the Json object to return them so there's there",
    "start": "755360",
    "end": "761680"
  },
  {
    "text": "would be I sure a reasonably good debate about like what makes a good log line",
    "start": "761680",
    "end": "767399"
  },
  {
    "text": "versus what's information that should go in a database right like if you're generating huge documents with hundreds",
    "start": "767399",
    "end": "774000"
  },
  {
    "text": "of lines and values and I see this in even some pretty famous places a lot of the logs that we get out of Google are",
    "start": "774000",
    "end": "780320"
  },
  {
    "text": "massive Json documents with massive nested elements in them and I find that they're hard to work with both as humans",
    "start": "780320",
    "end": "787160"
  },
  {
    "text": "and for parsing for machines and you know I think that the more you can keep that structure flat I think the happier",
    "start": "787160",
    "end": "794079"
  },
  {
    "text": "you know you would generally be and if you need a complex nested object is the log line the right place for storing",
    "start": "794079",
    "end": "799519"
  },
  {
    "text": "that information maybe a good sanity or a sniff test we won't go as far as",
    "start": "799519",
    "end": "804680"
  },
  {
    "text": "sanity test yet no like thinking about it that way you said like some things are better fit for database do you",
    "start": "804680",
    "end": "810199"
  },
  {
    "text": "consider things written in a database to potentially be logs an example I can give is I was building a web service",
    "start": "810199",
    "end": "816160"
  },
  {
    "text": "once and I forget why but for some reason we wanted a way to actually record web requests and the response to",
    "start": "816160",
    "end": "822160"
  },
  {
    "text": "them to make sure things were going correctly and to there was some other reason we were doing I don't remember why off the top of my head but I know",
    "start": "822160",
    "end": "828480"
  },
  {
    "text": "that one of the things we did was we're like well you can't really take an entire web request and like just throw it into the output it's going to be",
    "start": "828480",
    "end": "833959"
  },
  {
    "text": "really hard to do anything with it so we took the parts we cared about and we were storing that in an actual database table table and we would essentially",
    "start": "833959",
    "end": "840279"
  },
  {
    "text": "clean that up every so often luckily we like it wasn't a huge project at the time so we could get away with it I",
    "start": "840279",
    "end": "845360"
  },
  {
    "text": "imagine Google scale that might get a little bit tricky but uh for us that",
    "start": "845360",
    "end": "850839"
  },
  {
    "text": "worked and I considered that logging but like with the caveat that like we're storing this in a database and it's kind",
    "start": "850839",
    "end": "856120"
  },
  {
    "text": "of a little bit different yeah but that's kind of structured locking isn't it like it had that feel to me of like",
    "start": "856120",
    "end": "861199"
  },
  {
    "text": "you entered a function and then like when you exit the function you're kind of like this these are the things that happened and that's roughly what we were",
    "start": "861199",
    "end": "866839"
  },
  {
    "text": "doing it was just we're like we need to store this somewhere where we can query it and actually look at the data and and you know try to do stuff with it that's",
    "start": "866839",
    "end": "873880"
  },
  {
    "text": "really fascinating in the sense that it touches a little bit on the types of logging that we see too that falls a",
    "start": "873880",
    "end": "880040"
  },
  {
    "text": "little bit into the category that are more like event logs or access logs or they're like very specific things that",
    "start": "880040",
    "end": "886160"
  },
  {
    "text": "happen that have useful context and I guess the question there that I find interesting is like is there is there a",
    "start": "886160",
    "end": "893320"
  },
  {
    "text": "right amount or too much data you know what point from an implementation standpoint the tools that you have",
    "start": "893320",
    "end": "898800"
  },
  {
    "text": "available and the tools that you're using maybe dictate what's a better fit there but yeah the other types of",
    "start": "898800",
    "end": "904920"
  },
  {
    "text": "logging that we kind of started talking about are more like what people introduce when they're writing code right so this is the stuff that helps me",
    "start": "904920",
    "end": "911480"
  },
  {
    "text": "understand if my application is working or where it's working or how it's working in you know maybe even just the",
    "start": "911480",
    "end": "917240"
  },
  {
    "text": "sort of overall life cycle of the program itself you know in logs but you think about access logs from reverse",
    "start": "917240",
    "end": "924759"
  },
  {
    "text": "proxy or you're describing orders and events where you have like complex",
    "start": "924759",
    "end": "929800"
  },
  {
    "text": "information coming in yeah I think that's a really good question about where you would draw the line on and what sort of systems make sense for the",
    "start": "929800",
    "end": "936639"
  },
  {
    "text": "only advice that I could give around this in some experiences that I've had is don't make your sort of primary",
    "start": "936639",
    "end": "944040"
  },
  {
    "text": "logging in terms of what gives you visibility into your application stored in the same thing that you need to run",
    "start": "944040",
    "end": "950680"
  },
  {
    "text": "so like don't store those logs in a database because what happens is when you have trouble with your database you",
    "start": "950680",
    "end": "955759"
  },
  {
    "text": "can't view your logs and you can't see what the trouble is or if you database there's an error then it logs that there's an error but it can't log to the",
    "start": "955759",
    "end": "962399"
  },
  {
    "text": "database so that's an error yeah it's very useful I've seen in in sort of older software systems that I work with",
    "start": "962399",
    "end": "968160"
  },
  {
    "text": "before the kind of the systems that we exist today for aggregating working with logs like it was pretty common to store",
    "start": "968160",
    "end": "975240"
  },
  {
    "text": "logs in a database but then when you had trouble with database which was usually the thing you had the most trouble with",
    "start": "975240",
    "end": "980959"
  },
  {
    "text": "you couldn't tell right you couldn't see what was going on yeah a lot of that probably comes down to like the life",
    "start": "980959",
    "end": "986000"
  },
  {
    "text": "cycle of the product too because I like where I tend to see that type of approach being like not okay but like",
    "start": "986000",
    "end": "992440"
  },
  {
    "text": "kind of okay is you know if you have like a two-person startup and they're just trying to slap something together and get it up and going then you kind of",
    "start": "992440",
    "end": "999440"
  },
  {
    "text": "cut some Corners here and there you know you can't have six different Services up and running because it's just hard to manage that but like as something gets",
    "start": "999440",
    "end": "1005560"
  },
  {
    "text": "much bigger and grows then it's like okay now it's time to actually look at like we need a dedicated place to put",
    "start": "1005560",
    "end": "1010839"
  },
  {
    "text": "these logs and actually consume them yeah on that question of consuming the logs then Eric from the goph for slack",
    "start": "1010839",
    "end": "1016880"
  },
  {
    "text": "and by the way everybody don't forget yet we're on slack you can join the chat live go time FM channel Eric has done",
    "start": "1016880",
    "end": "1025199"
  },
  {
    "text": "just that Eric with a K Eric asks will the key value pairs always be in the",
    "start": "1025199",
    "end": "1030720"
  },
  {
    "text": "same order with log F because I imagine if you see if you visualize and you",
    "start": "1030720",
    "end": "1036600"
  },
  {
    "text": "you're looking at the logs it would be quite useful if they all lined up wouldn't it it's going to be subject of",
    "start": "1036600",
    "end": "1042959"
  },
  {
    "text": "whatever Library implements that so in most of the applications that I work with we use gokit and they're always",
    "start": "1042959",
    "end": "1049120"
  },
  {
    "text": "consistently in order and the way that they're written like I said the libraries that Implement",
    "start": "1049120",
    "end": "1056160"
  },
  {
    "text": "loged Json is more common but I think there's support in others as well so I",
    "start": "1056160",
    "end": "1061400"
  },
  {
    "text": "can't speak to their consistency and ordering but think that would be a very valuable like humans are really really",
    "start": "1061400",
    "end": "1067559"
  },
  {
    "text": "good at pattern recognition right so like if you can get data in front of us in a way even in log lines I can tell a",
    "start": "1067559",
    "end": "1073840"
  },
  {
    "text": "funny story here if you I had a job where I worked with computers that would run on on vehicles",
    "start": "1073840",
    "end": "1081159"
  },
  {
    "text": "and we would have trouble where sometimes that they would Boot and behave differently and I found myself we",
    "start": "1081159",
    "end": "1087880"
  },
  {
    "text": "were shipping the CIS logs from those machines back to Central place and I would review the Cy logs to try to find",
    "start": "1087880",
    "end": "1094440"
  },
  {
    "text": "instances of the computers that misbehaved and the fastest way that I could do that was I could zoom way way",
    "start": "1094440",
    "end": "1100679"
  },
  {
    "text": "way out so that the text wasn't legible but I could look at the length of the log lines and you could see the pattern",
    "start": "1100679",
    "end": "1107080"
  },
  {
    "text": "and you could scroll through the log very consistently because it was really easy to spot the ones that were all the same and then you could add a little bit",
    "start": "1107080",
    "end": "1113799"
  },
  {
    "text": "of color to that too and it made it even easier but it became very easy to see the ones that didn't act properly so",
    "start": "1113799",
    "end": "1119559"
  },
  {
    "text": "having consistency in your log output is a huge value for human part and machines",
    "start": "1119559",
    "end": "1124640"
  },
  {
    "text": "tend to not care maybe it's there's some efficiency gains if they're consistent but that would be a good feature to have",
    "start": "1124640",
    "end": "1130840"
  },
  {
    "text": "is consistently orienting your and I think probably most Json serializers are going to be consistent I think most",
    "start": "1130840",
    "end": "1137159"
  },
  {
    "text": "serializers in general are probably going to be consistent it's just a question of whether they guarantee that over dates and things I imagine if",
    "start": "1137159",
    "end": "1144640"
  },
  {
    "text": "you're passing in key value pairs it probably logs out in the order that you do it and therefore it's up to you to",
    "start": "1144640",
    "end": "1149679"
  },
  {
    "text": "make sure you're consistent in your code to get it right and that thing of context is interesting I have a project",
    "start": "1149679",
    "end": "1156600"
  },
  {
    "text": "where we actually use the context to carry like goes context. context to",
    "start": "1156600",
    "end": "1162520"
  },
  {
    "text": "carry some context you guessed it and that gets passed into the the loger when",
    "start": "1162520",
    "end": "1168640"
  },
  {
    "text": "you write call a log line the first arguments a context how do you feel about that Ed because it's very useful",
    "start": "1168640",
    "end": "1175440"
  },
  {
    "text": "for like you talk about some of the things of like user ID maybe and you know the host name and things like that",
    "start": "1175440",
    "end": "1181640"
  },
  {
    "text": "is the kind of thing that you could do in some middleware somewhere or do it in one place and then it is consistent yeah",
    "start": "1181640",
    "end": "1187520"
  },
  {
    "text": "definitely the applications that I work with do this pretty commonly so like Trace ID is often propagated through the",
    "start": "1187520",
    "end": "1193000"
  },
  {
    "text": "context or is always propagated through the context something like a tenant ID",
    "start": "1193000",
    "end": "1198280"
  },
  {
    "text": "in a multi-tenant system and there's helper functions that that we have that will pull that out to I don't remember",
    "start": "1198280",
    "end": "1205559"
  },
  {
    "text": "if we implemented the interface for gokit to just sort of make a logger that",
    "start": "1205559",
    "end": "1210960"
  },
  {
    "text": "automatically did that or if just have the functions that pull them out but it's a really useful I wish go went one",
    "start": "1210960",
    "end": "1218039"
  },
  {
    "text": "step farther here one of my sort of griefs with go is the contacts deadline",
    "start": "1218039",
    "end": "1223520"
  },
  {
    "text": "exceeded errors and contacts canceled errors because in a distributed system",
    "start": "1223520",
    "end": "1228760"
  },
  {
    "text": "you get a context deadline exceeded and I I don't know who canceled that context or what deadline rather exceeded or",
    "start": "1228760",
    "end": "1235000"
  },
  {
    "text": "timed out like it could have been four systems away you know and and so it would be up to you to introduce context",
    "start": "1235000",
    "end": "1241919"
  },
  {
    "text": "into the context sorry that you could when you're the one that times out you'd",
    "start": "1241919",
    "end": "1247600"
  },
  {
    "text": "have to say hey I you know it's doesn't make it easy it would be nice if the functions that you called so like you",
    "start": "1247600",
    "end": "1253080"
  },
  {
    "text": "know with timeout or with whatever could take a string that would just print in whatever error block ultimately catches",
    "start": "1253080",
    "end": "1259760"
  },
  {
    "text": "that context being canel so that you could find it easier yeah that's a nice you could write a package that did that",
    "start": "1259760",
    "end": "1265880"
  },
  {
    "text": "couldn't you I thought about this last night so I'm not sure what it would look",
    "start": "1265880",
    "end": "1271960"
  },
  {
    "text": "like to I mean you could do definitely something that catches it Where It's Tricky is how easy and sort of how I",
    "start": "1271960",
    "end": "1279200"
  },
  {
    "text": "don't know organic would it be to use because a lot of times you're catching an error on a function and you have no",
    "start": "1279200",
    "end": "1287760"
  },
  {
    "text": "idea what the error was the error might have been that the context was canceled while you were executing that function",
    "start": "1287760",
    "end": "1293559"
  },
  {
    "text": "and you're just logging the error yeah you basically now are thinking about wrapping all of your errors with this",
    "start": "1293559",
    "end": "1298840"
  },
  {
    "text": "thing that would look for someone that's better at this than I am I just know",
    "start": "1298840",
    "end": "1304080"
  },
  {
    "text": "that I've as much as I love how well that context cancellation allows you to control over network connections and",
    "start": "1304080",
    "end": "1311360"
  },
  {
    "text": "things I find that it leaves a lot of times confusion around what piece of the",
    "start": "1311360",
    "end": "1316480"
  },
  {
    "text": "puzzle was the one that actually said yeah because in an HTTP world if you are",
    "start": "1316480",
    "end": "1322000"
  },
  {
    "text": "getting a request and the browser like someone just closes the browser that'll cancel it that'll cancel the request and",
    "start": "1322000",
    "end": "1328559"
  },
  {
    "text": "you may have in your own code you might be canceling context and relying on that and then you can't tell the difference",
    "start": "1328559",
    "end": "1334400"
  },
  {
    "text": "my favorite is so like engine X or anybody that sits in the middle that times out will result in a context canel",
    "start": "1334400",
    "end": "1341159"
  },
  {
    "text": "error and like I mean in my argument here that would be not the most helpful but somebody should know that it was",
    "start": "1341159",
    "end": "1347480"
  },
  {
    "text": "their cont text that was canceled and say hey it was it's me over here I don't know who did it but somebody closed this",
    "start": "1347480",
    "end": "1352880"
  },
  {
    "text": "connection I wonder if you could pass a string into the cancel function because you get back when you do with timeout or",
    "start": "1352880",
    "end": "1360080"
  },
  {
    "text": "the other one with cancel you get back the little cancel call back function thing could you pass in a string there I",
    "start": "1360080",
    "end": "1367080"
  },
  {
    "text": "wonder actually that's an interesting problem I'd be quite fun to explore that but I don't think I don't think we're",
    "start": "1367080",
    "end": "1373840"
  },
  {
    "text": "going to I think the the idea there right of how well and how useful the",
    "start": "1373840",
    "end": "1378960"
  },
  {
    "text": "context is but it does often lead I know when I first started writing go I found",
    "start": "1378960",
    "end": "1384240"
  },
  {
    "text": "that I was doing a thing that was sort of very Java ask because I really missed checked exceptions and I was trying to",
    "start": "1384240",
    "end": "1390960"
  },
  {
    "text": "understand why an error so I'm like looking at the type of an error and looking to see that it was deadline",
    "start": "1390960",
    "end": "1396960"
  },
  {
    "text": "exceeded and then I logged a message that said timed out because everywhere else in the rest of the world it's timed",
    "start": "1396960",
    "end": "1403400"
  },
  {
    "text": "out and in go it's deadline exceeded and the sort of error handling in go makes us a bit bumpy you know I wish it was a",
    "start": "1403400",
    "end": "1409360"
  },
  {
    "text": "little bit easier to we were way out under the weeds I'm just going to shut up right now I don't know before I start",
    "start": "1409360",
    "end": "1415520"
  },
  {
    "text": "passing opinions I got to save my unpopular opinions for that yeah you got to save it for the theme tune it don't",
    "start": "1415520",
    "end": "1421320"
  },
  {
    "text": "count unless it's been [Music]",
    "start": "1421320",
    "end": "1430200"
  },
  {
    "text": "played this episode is brought to you by our friends at fire hydrant fire hydrant",
    "start": "1430200",
    "end": "1435880"
  },
  {
    "text": "is the reliability platform for every developer incidents impact everyone not just sres fire hyen gives teams the",
    "start": "1435880",
    "end": "1442799"
  },
  {
    "text": "tools to maintain service catalogues respond to incidents communicate through status pages and learn with",
    "start": "1442799",
    "end": "1448440"
  },
  {
    "text": "retrospectives what would normally be manual air prone tasks across the entire spectrum of responding to an incident",
    "start": "1448440",
    "end": "1454480"
  },
  {
    "text": "this can all be automated in every way with fire hydrant fire hydrant gives you incident tooling to manage incidents of",
    "start": "1454480",
    "end": "1461480"
  },
  {
    "text": "any type with any severity with consistency you can declare and mitigate incidents all inside Slack service",
    "start": "1461480",
    "end": "1468320"
  },
  {
    "text": "cataloges allow service owners to improve operational maturity and document all your deploys in your service catalog incident analytics light",
    "start": "1468320",
    "end": "1475559"
  },
  {
    "text": "extract meaningful insights about your reliability over any facet of your incident or the people who respond to",
    "start": "1475559",
    "end": "1481200"
  },
  {
    "text": "them and at the heart of it all incident run books they let you create custom automation rules to convert manual tasks",
    "start": "1481200",
    "end": "1487039"
  },
  {
    "text": "into automated reliable repeatable sequences that run when you want create slack channels J tickets Zoom Bridges",
    "start": "1487039",
    "end": "1494919"
  },
  {
    "text": "instantly after declaring an incident now your process is can be consistent and automatic try fire hydrant free for",
    "start": "1494919",
    "end": "1501120"
  },
  {
    "text": "14 days get access to every feature no credit card required get started at fireh hydrant doio again fireh hydrant",
    "start": "1501120",
    "end": "1509280"
  },
  {
    "text": "[Music]",
    "start": "1509280",
    "end": "1526679"
  },
  {
    "text": "doio [Music] I usually end up having dedicated code",
    "start": "1526679",
    "end": "1532520"
  },
  {
    "text": "for context errors like at the top of wherever they unwind to I'll have some",
    "start": "1532520",
    "end": "1538399"
  },
  {
    "text": "code because I probably want to do something different and the other thing is it's very normal to have context that",
    "start": "1538399",
    "end": "1546159"
  },
  {
    "text": "gets cancelled it's not you know it's an error it's a sentinel error term coined",
    "start": "1546159",
    "end": "1551399"
  },
  {
    "text": "by Our Friend and Friend of the show Dave Cheney it's a sentinel error value",
    "start": "1551399",
    "end": "1556600"
  },
  {
    "text": "type that you can compare against and you can pass around but it's not really an error like not necessarily somean if",
    "start": "1556600",
    "end": "1563520"
  },
  {
    "text": "someone closes the browser and cancels a request you want to stop doing the work that's not an error that's great should",
    "start": "1563520",
    "end": "1569520"
  },
  {
    "text": "return great that's great or something instead uh that's great I would support",
    "start": "1569520",
    "end": "1575799"
  },
  {
    "text": "that yeah I'll do a PR it's something I suppose to think about for folks that",
    "start": "1575799",
    "end": "1580919"
  },
  {
    "text": "are that are writing applications and they're using context and they should be there's the context you can add values",
    "start": "1580919",
    "end": "1588039"
  },
  {
    "text": "to it so take advantage of that like most things probably don't get carried away keep the context simple but but you",
    "start": "1588039",
    "end": "1594480"
  },
  {
    "text": "could consider I don't know off my head how like I said how sort of ergonomic",
    "start": "1594480",
    "end": "1599960"
  },
  {
    "text": "you could make this but trying to include information about parent contexts and ultimately who cancels it",
    "start": "1599960",
    "end": "1606960"
  },
  {
    "text": "be able to log something to make your life a little bit easier to to track down yeah where in a yeah you know",
    "start": "1606960",
    "end": "1613919"
  },
  {
    "text": "complex system something said that took too long yeah another interesting little",
    "start": "1613919",
    "end": "1619120"
  },
  {
    "text": "thing that's quite nice to do and go that I did once was I would when adding",
    "start": "1619120",
    "end": "1624320"
  },
  {
    "text": "values to the log like using those helpers that you talk about that these packages have that would also return a",
    "start": "1624320",
    "end": "1630679"
  },
  {
    "text": "little cancel function which you defer immediately and that then took removed that value essentially which you don't",
    "start": "1630679",
    "end": "1637320"
  },
  {
    "text": "you know depending on where you're passing things around and how you pass things to you may not need that but it's",
    "start": "1637320",
    "end": "1643960"
  },
  {
    "text": "quite nice to use to be able to use Go's actual language features when it comes to to doing this and solving these",
    "start": "1643960",
    "end": "1650880"
  },
  {
    "text": "problems so that logging then in a way becomes really a first class concern of your application doesn't it yeah I mean",
    "start": "1650880",
    "end": "1657720"
  },
  {
    "text": "I'm a little bit biased when it comes to the sort of way we observe applications",
    "start": "1657720",
    "end": "1662960"
  },
  {
    "text": "I spend all of my time working on a system that's designed around handling logs so that's why you're here though Ed",
    "start": "1662960",
    "end": "1668559"
  },
  {
    "text": "it's true yeah the nice thing about logging is it's kind of always there right like like it's the one sort of",
    "start": "1668559",
    "end": "1675480"
  },
  {
    "text": "most accessible way that we have to get info out of an application the other forms that we have of observability tend",
    "start": "1675480",
    "end": "1682080"
  },
  {
    "text": "to lend themselves to better you know use cases or different options or like distributed tracing can do a lot of",
    "start": "1682080",
    "end": "1688279"
  },
  {
    "text": "stuff that's hard to do with a logger I make an argument you could but I would lose that argument but it's there right",
    "start": "1688279",
    "end": "1695080"
  },
  {
    "text": "it's always there to you so to use it just make sure you have useful information in your log lines you know",
    "start": "1695080",
    "end": "1701519"
  },
  {
    "text": "do yourself a favor make sure you can search for that log line when it's printed so it has to have something in there you'd be able to search for and",
    "start": "1701519",
    "end": "1707720"
  },
  {
    "text": "there's another one I think when it comes to error messages you know a lot of times depending on how you structure",
    "start": "1707720",
    "end": "1712840"
  },
  {
    "text": "your logging and whether your logger is going to include the line number something comes from I don't have strong",
    "start": "1712840",
    "end": "1718799"
  },
  {
    "text": "opinions if you need to do that or not honestly I would say just make sure you write error messages that are unique",
    "start": "1718799",
    "end": "1725159"
  },
  {
    "text": "within your app right like like if you search for that error message it should go to one place yeah like monkey one",
    "start": "1725159",
    "end": "1731480"
  },
  {
    "text": "monkey too exactly yeah so maybe you were really on to something there well",
    "start": "1731480",
    "end": "1736559"
  },
  {
    "text": "that's that's why I use different numbers yeah how do you keep track of how many monkeys there are though yeah",
    "start": "1736559",
    "end": "1741919"
  },
  {
    "text": "that is difficult to be fair it gets way out of hand very quickly you have like a global monkey tracker that you you do",
    "start": "1741919",
    "end": "1748960"
  },
  {
    "text": "need to implement that monkey tracking yeah and I did once mess up a loop and ended up with infinite monkeys and they",
    "start": "1748960",
    "end": "1756039"
  },
  {
    "text": "did they produced no works of any kind of discernable literature whatsoever so very disappointed there yeah one way I",
    "start": "1756039",
    "end": "1764480"
  },
  {
    "text": "think with airor messages that you can accomplish this sort of uniqueness is the idea that you could consider error",
    "start": "1764480",
    "end": "1771320"
  },
  {
    "text": "messages part of the Run books for operating your system so it's one thing to say like something timed out it's",
    "start": "1771320",
    "end": "1777559"
  },
  {
    "text": "another to say that timed out but it's going to retry it's going to retry 10 more times or it's not going to retry",
    "start": "1777559",
    "end": "1783600"
  },
  {
    "text": "and like somebody's got to go fix it or it's funny like the when you're writing applications and you get to where you're",
    "start": "1783600",
    "end": "1789519"
  },
  {
    "text": "logging an error message you likely have the most contacts of anybody that's going to see that error message in years",
    "start": "1789519",
    "end": "1794760"
  },
  {
    "text": "to come right so what can you put in there that helps someone make a decision about what they should do when they're",
    "start": "1794760",
    "end": "1800679"
  },
  {
    "text": "operating that software so they you know they got paged and they searched the logs and they found your error messages",
    "start": "1800679",
    "end": "1806960"
  },
  {
    "text": "how can you help them get out of that trouble or let them know what the system's going to do to recover from it",
    "start": "1806960",
    "end": "1813679"
  },
  {
    "text": "itself you know because that is fairly common is there's lots of error messages about Connections timing out or failing",
    "start": "1813679",
    "end": "1819399"
  },
  {
    "text": "and you know is there a way to communicate the app can still handle it right go look and fix the source of the",
    "start": "1819399",
    "end": "1825320"
  },
  {
    "text": "problem I kind of love this about like the ux of logs is what we're really doing and honestly anytime I see like a",
    "start": "1825320",
    "end": "1833679"
  },
  {
    "text": "sophisticated approach in any field they reach that sophistication by caring",
    "start": "1833679",
    "end": "1839039"
  },
  {
    "text": "about the audience or the user of that thing and it works for web uis and apis",
    "start": "1839039",
    "end": "1844600"
  },
  {
    "text": "that you write and go and packages programs I mean it works for everything writing you know so I like the idea that",
    "start": "1844600",
    "end": "1851679"
  },
  {
    "text": "I think that's quite an interesting change I'm not sure everyone because normally I think people are quite",
    "start": "1851679",
    "end": "1856720"
  },
  {
    "text": "selfish loggers they're logging stuff they need but I like that think about your audience and and log for them log",
    "start": "1856720",
    "end": "1863760"
  },
  {
    "text": "for your great nephew one other place that's been useful is propagated all the",
    "start": "1863760",
    "end": "1869519"
  },
  {
    "text": "way back through your API so we've have limits in our application that you can",
    "start": "1869519",
    "end": "1874679"
  },
  {
    "text": "hit for various things so we will log something like you've exceeded this",
    "start": "1874679",
    "end": "1880320"
  },
  {
    "text": "limit like contact your administrator you know or reach out to whoever administrates that right like or try",
    "start": "1880320",
    "end": "1885760"
  },
  {
    "text": "again or reduce your request s fix your error you know or you've done like not uncommon in 400 type errors and user",
    "start": "1885760",
    "end": "1891279"
  },
  {
    "text": "errors to give some insight into what people should do but the more you can sort of describe how to get out of the",
    "start": "1891279",
    "end": "1897240"
  },
  {
    "text": "error situation in the error message the more self- serving and sort of self-documenting and probably less",
    "start": "1897240",
    "end": "1902919"
  },
  {
    "text": "trouble tickets you're going to have to deal with would you link to like a run book or link to a a doc even I don't",
    "start": "1902919",
    "end": "1911200"
  },
  {
    "text": "know because my experience with that is that whatever you link to ultimately will break right and no one will ever go",
    "start": "1911200",
    "end": "1916720"
  },
  {
    "text": "back and compare that link it's very very hard to maintain if you can link it back to like the source code in a pretty",
    "start": "1916720",
    "end": "1923000"
  },
  {
    "text": "stable way but what is this you know can you have a linter or something that finds broken links I don't know because",
    "start": "1923000",
    "end": "1929679"
  },
  {
    "text": "it's yeah most likely just going to be broken a good point then so yeah keep it self-contained it's probably good advice",
    "start": "1929679",
    "end": "1936360"
  },
  {
    "text": "I once wrote a package for a coworker he was going to then implement it so we",
    "start": "1936360",
    "end": "1941919"
  },
  {
    "text": "kind of broke the workup like that and I customized all the errors all the error message is just for him so I was like",
    "start": "1941919",
    "end": "1948919"
  },
  {
    "text": "saying look come on come on mate this is obvious obviously you're not supposed to pass that value in you know I was like",
    "start": "1948919",
    "end": "1955080"
  },
  {
    "text": "trolling him in the error messages that was fun but not for him i' I've vlogged messages before that are like the lines",
    "start": "1955080",
    "end": "1961799"
  },
  {
    "text": "of like this shouldn't happen you know like I wrote those log lines which is my favorite was is in like Java exception",
    "start": "1961799",
    "end": "1969240"
  },
  {
    "text": "handling of you would catch an exception and then catch an exception within the exception and it's like in a lot of",
    "start": "1969240",
    "end": "1975559"
  },
  {
    "text": "those cases it's like I don't even know but but like it's important to do this because somebody somewhere said I should",
    "start": "1975559",
    "end": "1980600"
  },
  {
    "text": "do this so even that is useful though right like anything that explains your sort of mindset around why you wrote the",
    "start": "1980600",
    "end": "1987000"
  },
  {
    "text": "error message or what you should do can be useful to the person that's troubleshooting that problem so you know",
    "start": "1987000",
    "end": "1992760"
  },
  {
    "text": "have a little fun with it another consideration here would be to maybe make this easier is if you pull your",
    "start": "1992760",
    "end": "1999679"
  },
  {
    "text": "error strings into a central spot you're doing inter internationalization of your",
    "start": "1999679",
    "end": "2006159"
  },
  {
    "text": "application this can be helpful there was some tooling that made that a little bit easier to swap file names and you",
    "start": "2006159",
    "end": "2011679"
  },
  {
    "text": "could just have your error messages be in multiple languages and make it easy to swap them out at sort of compile time",
    "start": "2011679",
    "end": "2018360"
  },
  {
    "text": "or run time with a a configuration flag but the putting them out inside where",
    "start": "2018360",
    "end": "2023600"
  },
  {
    "text": "you can see them both lets you kind of easily review them to see if they're providing useful info as well as I I'll",
    "start": "2023600",
    "end": "2030559"
  },
  {
    "text": "say this is good advice that I don't myself yeah well on context then maybe",
    "start": "2030559",
    "end": "2038159"
  },
  {
    "text": "we could talk about log levels because this is something else that is quite divisive subject I've seen around I tend",
    "start": "2038159",
    "end": "2046000"
  },
  {
    "text": "to like and I feel you know this is where you can each line has a level so it's either usually debug info warning",
    "start": "2046000",
    "end": "2053200"
  },
  {
    "text": "error critical like there's loads of options I'm sure you've come across even",
    "start": "2053200",
    "end": "2058358"
  },
  {
    "text": "more but yeah like I I find error and sort of debug information to be helpful",
    "start": "2058359",
    "end": "2066200"
  },
  {
    "text": "warnings sometimes but how do you feel about log levels so I have some opinions",
    "start": "2066200",
    "end": "2071240"
  },
  {
    "text": "here are they popular or unpopular these are probably popular but okay I'll leave",
    "start": "2071240",
    "end": "2076320"
  },
  {
    "text": "the music not everyone will agree but the error is is the easiest one for me so I can start at error and Warn and",
    "start": "2076320",
    "end": "2082520"
  },
  {
    "text": "then it gets kind of murky from there but at error levels I like to log at error level if there's something wrong",
    "start": "2082520",
    "end": "2087720"
  },
  {
    "text": "with my application it's my job it's my responsibility to fix it makes sense I like to use warning level when it's not",
    "start": "2087720",
    "end": "2094320"
  },
  {
    "text": "my responsibility my job to fix it so I'm getting bad bad data some other Downstream system is misbehaving",
    "start": "2094320",
    "end": "2100560"
  },
  {
    "text": "something that like it's useful for me to go find but it's going to be more useful probably for somebody else than",
    "start": "2100560",
    "end": "2105680"
  },
  {
    "text": "me oh that's my opinion on that now when you go beyond that so like debug is",
    "start": "2105680",
    "end": "2111960"
  },
  {
    "text": "really fascinating because you know it ends up just being sort of a a dumpster of log levels right like so everything",
    "start": "2111960",
    "end": "2119240"
  },
  {
    "text": "ends up in there and it usually ends up being so bvos that people don't run with it and if you're not running with it and",
    "start": "2119240",
    "end": "2125040"
  },
  {
    "text": "most applications and my experience don't have an easy way to do basically",
    "start": "2125040",
    "end": "2130119"
  },
  {
    "text": "runtime changing of the log level output it's like what good is it right so so",
    "start": "2130119",
    "end": "2136119"
  },
  {
    "text": "they could see the argument to saying that you just log everything at sort of info and that would force you to go back",
    "start": "2136119",
    "end": "2141960"
  },
  {
    "text": "through and remove log lines that aren't as useful but you do have these cases where I don't know you write these log",
    "start": "2141960",
    "end": "2148200"
  },
  {
    "text": "lines and instrument something in a way that's really interesting for specific cases and you think I could see myself hitting this again what do I do with",
    "start": "2148200",
    "end": "2155119"
  },
  {
    "text": "this I would say that my experience with go loggers is they lack some of the functionality that I've seen in others",
    "start": "2155119",
    "end": "2160839"
  },
  {
    "text": "where you can do like per package level you know different levels or sort of runtime reloading and and maybe those",
    "start": "2160839",
    "end": "2166480"
  },
  {
    "text": "packages are out there I've just not use them but those can be really nice to sort of handle that like or Trace level",
    "start": "2166480",
    "end": "2172160"
  },
  {
    "text": "is maybe what you would do there something that's really really specific but only would want to enable it in a",
    "start": "2172160",
    "end": "2177560"
  },
  {
    "text": "very small case if you have that control available one of the uh people in slack had mentioned I think it was Gabriel had",
    "start": "2177560",
    "end": "2183560"
  },
  {
    "text": "mentioned that he actually uses separate packages for like devel type debugging versus like production style or logging",
    "start": "2183560",
    "end": "2191240"
  },
  {
    "text": "just to keep the two separate and I think one of the main benefits there is that when you go to production you can basically set everything it's a",
    "start": "2191240",
    "end": "2196359"
  },
  {
    "text": "development style logging to just be a no op essentially and the code's there",
    "start": "2196359",
    "end": "2201440"
  },
  {
    "text": "because I think that's one of the things like you said we've all written hello world but like there's kind of like two mentalities with logging there's like",
    "start": "2201440",
    "end": "2207560"
  },
  {
    "text": "the logs that are just for me right now while I'm writing this code or debugging some issue or whatever I'm doing and then there's like the logs that are like",
    "start": "2207560",
    "end": "2214200"
  },
  {
    "text": "have a lot more context and need to have like Trace IDs and things like that because if you're running locally chances are you probably don't need",
    "start": "2214200",
    "end": "2220280"
  },
  {
    "text": "Trace IDs you know generally speaking you don't have enough requests coming in locally that type of stuff's an issue so",
    "start": "2220280",
    "end": "2225960"
  },
  {
    "text": "it is interesting to think of it as like two separate I guess approaches to the something similar yeah so do you I've",
    "start": "2225960",
    "end": "2233720"
  },
  {
    "text": "seen it where you'll have like a logotype that supports nil because in go",
    "start": "2233720",
    "end": "2239440"
  },
  {
    "text": "of course you can write methods that are safe to call on nil you literally just check the receiver and if it's nil you",
    "start": "2239440",
    "end": "2246760"
  },
  {
    "text": "usually just return at that point that's quite nice but I've also seen it where",
    "start": "2246760",
    "end": "2251839"
  },
  {
    "text": "you explicitly have nil or no op loggers or whatever does this all just depend on",
    "start": "2251839",
    "end": "2257480"
  },
  {
    "text": "which package you're using or are there good practices there I don't know that I have a good practices suggestion for",
    "start": "2257480",
    "end": "2264280"
  },
  {
    "text": "that my personal opinion would be to lean towards just the always log the",
    "start": "2264280",
    "end": "2270880"
  },
  {
    "text": "stuff right basically turn your debug logging level on and actually I got to decide if that's really my opinion",
    "start": "2270880",
    "end": "2277160"
  },
  {
    "text": "because it is it is nuanced right like there are situations where the volume",
    "start": "2277160",
    "end": "2282680"
  },
  {
    "text": "can be tremendous right and you mostly don't care but you do care right so so",
    "start": "2282680",
    "end": "2288680"
  },
  {
    "text": "that's where I think in my opinion the sort of state-ofthe-art of logging needs to be better at this which is either",
    "start": "2288680",
    "end": "2296240"
  },
  {
    "text": "your application or your logging framework or something that gives you the ability to control at runtime what's",
    "start": "2296240",
    "end": "2303079"
  },
  {
    "text": "ends up being stored I know more times than not you don't have debug logging on you",
    "start": "2303079",
    "end": "2309480"
  },
  {
    "text": "there's some information that you want but you can't get it because the application is running and likely restarting it you know resets the air",
    "start": "2309480",
    "end": "2315520"
  },
  {
    "text": "condition trying to troubleshoot so be better if you could leave debug logging on and then just drop it at the source",
    "start": "2315520",
    "end": "2320839"
  },
  {
    "text": "until you need it or have sort of runtime log level changing as a option",
    "start": "2320839",
    "end": "2326520"
  },
  {
    "text": "gets a bit more sophisticated I don't know that I see this a ton you know at least in go I'm not seing it a lot where",
    "start": "2326520",
    "end": "2332720"
  },
  {
    "text": "you have that runtime capability somebody will probably Point me which would be great because I there's there's",
    "start": "2332720",
    "end": "2338319"
  },
  {
    "text": "an element of go in logging that I've always found a little bit frustrating which is the the sort of lack of a",
    "start": "2338319",
    "end": "2343720"
  },
  {
    "text": "standardized interface and the fact that your logger becomes very important to your system and therefore very hard to",
    "start": "2343720",
    "end": "2349839"
  },
  {
    "text": "change so we've talked about changing our logger in our app but it's it's an",
    "start": "2349839",
    "end": "2355720"
  },
  {
    "text": "effort it's an opportunity cost and it's like we'd have to be really sure that we'd need to do it it works fine but",
    "start": "2355720",
    "end": "2361680"
  },
  {
    "text": "there are loggers out there now that have much lower allocation rate which can really matter a lot too if you're",
    "start": "2361680",
    "end": "2368000"
  },
  {
    "text": "going to log a lot you know if you're going to log tens or say thousands of lines a second like you're you're paying",
    "start": "2368000",
    "end": "2373760"
  },
  {
    "text": "for that in allocations and CPU you know it's it's not phrasing more interestingly you're potentially",
    "start": "2373760",
    "end": "2379839"
  },
  {
    "text": "bottlenecking your application because almost every infrastructure that I see still logs to disk usually uh like say",
    "start": "2379839",
    "end": "2388079"
  },
  {
    "text": "kubernetes it's the no dis and no diss aren't terribly fast so you're more likely than not at some point blocked on",
    "start": "2388079",
    "end": "2394880"
  },
  {
    "text": "your logger trying to write to a file on disk which can slow your application",
    "start": "2394880",
    "end": "2402119"
  },
  {
    "text": "[Music]",
    "start": "2407830",
    "end": "2410960"
  },
  {
    "text": "down this episode is brought to you by signal wire signal wire offers apis sdks",
    "start": "2413440",
    "end": "2420480"
  },
  {
    "text": "and Edge networks around the world for building the realest Real Time video and video communication apps with less than",
    "start": "2420480",
    "end": "2427599"
  },
  {
    "text": "50 milliseconds of latency they use websockets to deliver 300% lower latency than apis built on rest making it ideal",
    "start": "2427599",
    "end": "2435440"
  },
  {
    "text": "for apps where every millisecond and responsiveness makes a difference like apps that need instant natural language",
    "start": "2435440",
    "end": "2442119"
  },
  {
    "text": "understanding Real Time Machine Vision or large scale video and audio conferencing here's what makes them",
    "start": "2442119",
    "end": "2447560"
  },
  {
    "text": "different they use MCU multi-point control unit that mixes all video and all audio feeds on the server side and",
    "start": "2447560",
    "end": "2455280"
  },
  {
    "text": "then distributes a single unified stream back to every participant that way every",
    "start": "2455280",
    "end": "2460640"
  },
  {
    "text": "participant in the apps you ship experience the same video and the same audio your apps have none of the awkward",
    "start": "2460640",
    "end": "2466640"
  },
  {
    "text": "audio effects obvious lag and jumpy video it's all smooth great ux creating",
    "start": "2466640",
    "end": "2472319"
  },
  {
    "text": "a more lifelike virtual experience without compromising audio or the video quality head to Signal wire.com video",
    "start": "2472319",
    "end": "2478240"
  },
  {
    "text": "mention go time to receive an extra 5,000 video minutes again go to Signal",
    "start": "2478240",
    "end": "2483480"
  },
  {
    "text": "wire.com videoo and remember to mention go time [Music]",
    "start": "2483480",
    "end": "2493860"
  },
  {
    "text": "[Music]",
    "start": "2497190",
    "end": "2504960"
  },
  {
    "text": "Bill Kennedy the famous hatted gopher actually showed me an example once where",
    "start": "2504960",
    "end": "2510839"
  },
  {
    "text": "there was a bug in the program and by putting a log line in it because of that because there was a cost to doing that",
    "start": "2510839",
    "end": "2517000"
  },
  {
    "text": "it changed the behavior of the program so like the act of observing it almost",
    "start": "2517000",
    "end": "2523240"
  },
  {
    "text": "affected it which is kind of amazing right there's some some Heisenberg in here or something you",
    "start": "2523240",
    "end": "2528359"
  },
  {
    "text": "know feels like that do it imagine if you didn't realize that though and you're logging out and then it's telling",
    "start": "2528359",
    "end": "2534079"
  },
  {
    "text": "you something that is different to what you see when you then take the log line out how how infuriated is that I think",
    "start": "2534079",
    "end": "2541280"
  },
  {
    "text": "that's the uh the risk of using any language where you have concurrency and other things like that going on is that",
    "start": "2541280",
    "end": "2547599"
  },
  {
    "text": "it's just you always have to take for account that if that's if you're using concurrency there could be some case where adding anything in there could",
    "start": "2547599",
    "end": "2553680"
  },
  {
    "text": "change the behavior well I've got you John it's quiz time we'll put some music",
    "start": "2553680",
    "end": "2558839"
  },
  {
    "text": "in I've just made up this segment oh [Music] boy quiz",
    "start": "2558839",
    "end": "2567200"
  },
  {
    "text": "time qu time first",
    "start": "2568119",
    "end": "2575160"
  },
  {
    "text": "time quiz time John John Calhoun joining me",
    "start": "2575160",
    "end": "2581319"
  },
  {
    "text": "from where are you from John Pennsylvania Pennsylvania can't get more specific than that with you I don't know",
    "start": "2581319",
    "end": "2587079"
  },
  {
    "text": "what you'll do with that information oh turn up at your house am I it's possible yeah I do want to know your full address",
    "start": "2587079",
    "end": "2593040"
  },
  {
    "text": "now well no no okay was that the quiz yeah what's your mother's maiden name",
    "start": "2593040",
    "end": "2598880"
  },
  {
    "text": "John no the real quiz is f. print line",
    "start": "2598880",
    "end": "2604119"
  },
  {
    "text": "let's say and log. print line where does each of those get printed to where does",
    "start": "2604119",
    "end": "2611280"
  },
  {
    "text": "each get printed to yeah like I assume fump is os. standard out mhm or sorry",
    "start": "2611280",
    "end": "2616720"
  },
  {
    "text": "the fumed one the log. print line I don't know if it's actually differentiated or not I would assume",
    "start": "2616720",
    "end": "2622520"
  },
  {
    "text": "it's just os. standard out would be my guess okay let's find",
    "start": "2622520",
    "end": "2627880"
  },
  {
    "text": "out that sound effect tells us that oh no John unfortunately you're wrong log",
    "start": "2628760",
    "end": "2634720"
  },
  {
    "text": "goes to standard error by by default so that's interesting see I wasn't sure if this is a trick question or not that's",
    "start": "2634720",
    "end": "2640480"
  },
  {
    "text": "the hard part no no well with Matt you can never tell yeah but that b odd quiz the worst",
    "start": "2640480",
    "end": "2646520"
  },
  {
    "text": "part is in most terminals you can never tell the difference like yeah that's true unless you're doing something specific like piping it to an output",
    "start": "2646520",
    "end": "2652680"
  },
  {
    "text": "file or something this is the question then like where should the logs go to do we want them in standard out do we want",
    "start": "2652680",
    "end": "2658720"
  },
  {
    "text": "them should we put only the error level logs in standard error and other logs in",
    "start": "2658720",
    "end": "2664280"
  },
  {
    "text": "standard out like what do we think I think people have like a lot of weird opinions on logging in general I swear I",
    "start": "2664280",
    "end": "2670960"
  },
  {
    "text": "talked with somebody who said like if you're printing out a log statement instead of like recording a metric yeah that it should be an error that like",
    "start": "2670960",
    "end": "2676559"
  },
  {
    "text": "some engineer has to go fix right like to the point where like their app apparently has no logs it's just all",
    "start": "2676559",
    "end": "2682160"
  },
  {
    "text": "metrics and I think sometimes how people think about logs versus metrics are they",
    "start": "2682160",
    "end": "2687559"
  },
  {
    "text": "might kind of be the same thing they're just like differentiating them differently if that makes sense I could give an opinion that I think is a little",
    "start": "2687559",
    "end": "2694960"
  },
  {
    "text": "bit researched on that Ed before you do we should just be honest with our listeners here yeah you kind of built",
    "start": "2694960",
    "end": "2701720"
  },
  {
    "text": "Loki which is Graf's logging thing tell us about Loki just very briefly just",
    "start": "2701720",
    "end": "2707319"
  },
  {
    "text": "because there's some important context I think there I've certainly been a part of of Loki lots of other smarter folks",
    "start": "2707319",
    "end": "2713240"
  },
  {
    "text": "than me have done a lion share of the building it's not what I've heard I think you're just being modest",
    "start": "2713240",
    "end": "2720280"
  },
  {
    "text": "I've but actually you know it's been about three years that I've been working on Loki now so I'm kind of trying to think of the like I've evolved",
    "start": "2720280",
    "end": "2726559"
  },
  {
    "text": "describing it over time but this may dovetail a little bit into what John was just saying but uh Loki I tend to",
    "start": "2726559",
    "end": "2732400"
  },
  {
    "text": "describe now as it's a Time series database for string so I guess before I talk about Loki the the part about the",
    "start": "2732400",
    "end": "2739040"
  },
  {
    "text": "metrics versus logs is that I think is interesting is the the information that they can contain in store and the sort",
    "start": "2739040",
    "end": "2744640"
  },
  {
    "text": "of associated cost with that so one of the things that I when I talk about Loki as a Time series database for Strings is",
    "start": "2744640",
    "end": "2751559"
  },
  {
    "text": "when we talked about that context you can put in a log line you can put a lot of information in a log line right like we within Loki we log for every query",
    "start": "2751559",
    "end": "2760079"
  },
  {
    "text": "the results of that query and things like throughput and the lines process process per second and the query and the",
    "start": "2760079",
    "end": "2766000"
  },
  {
    "text": "org ID or the tenant ID or whatever and all this information and it tends to be extremely high cardinality so where",
    "start": "2766000",
    "end": "2772520"
  },
  {
    "text": "metric systems it gets a bit more costly right is when you're trying to store huge amounts of Cal like if I had a",
    "start": "2772520",
    "end": "2777960"
  },
  {
    "text": "metric for every one of those things that I just said that had a tenant dimension on it it would be a lot right",
    "start": "2777960",
    "end": "2784119"
  },
  {
    "text": "so the other side of that question near that coin though is that that's a long string and to process that in a system",
    "start": "2784119",
    "end": "2789760"
  },
  {
    "text": "requires parsing it and doing math on it that's more expensive it's more data stored on dis so to me the two play very",
    "start": "2789760",
    "end": "2796720"
  },
  {
    "text": "nicely together in the sense of metrics make a really nice Roundup or sort of",
    "start": "2796720",
    "end": "2802119"
  },
  {
    "text": "overall approximation of high volumes of that kind of data so you can look at",
    "start": "2802119",
    "end": "2808720"
  },
  {
    "text": "metrics because it's a float over much longer periods of time than it's going to take to parse a 80 byte or 200 byte",
    "start": "2808720",
    "end": "2815200"
  },
  {
    "text": "string where those become a bit interesting is so with Loki we have a thing for recording rules where I can",
    "start": "2815200",
    "end": "2823000"
  },
  {
    "text": "generate a metric from those log lines as they come in and so what we'll tend to do is generate sort of roll ups so",
    "start": "2823000",
    "end": "2829400"
  },
  {
    "text": "we'll generate like a 99% quantile on the query Times by tenant so now maybe I",
    "start": "2829400",
    "end": "2835240"
  },
  {
    "text": "have cardinality of thousands of tenants but the 99th percentile is taking all of those individual values and rolling them",
    "start": "2835240",
    "end": "2841640"
  },
  {
    "text": "up into one metric so the systems I think complement each other really well well when you set them up to you can",
    "start": "2841640",
    "end": "2848640"
  },
  {
    "text": "have very very high resolution very high cardinality data it's just going to be a lot more expensive to try to query it over time and put those in your logs and",
    "start": "2848640",
    "end": "2855880"
  },
  {
    "text": "then you can roll that stuff up or create metrics right just just use the metrics you have in your system for higher volume requests being able to",
    "start": "2855880",
    "end": "2862680"
  },
  {
    "text": "keep an eye on a system that's doing thousands of requests per second a lot easier showing that data over time a lot",
    "start": "2862680",
    "end": "2867920"
  },
  {
    "text": "easier so I think they play nicely with each other I think maybe both extremes I guess I could argue that you could",
    "start": "2867920",
    "end": "2873800"
  },
  {
    "text": "monitor an app only with well no you can make that argument either direction I think to be honest like if your apps",
    "start": "2873800",
    "end": "2879800"
  },
  {
    "text": "once they start getting big enough you probably want specialized tooling for those types of aspects metrics logs and",
    "start": "2879800",
    "end": "2886480"
  },
  {
    "text": "and traces you know for big distributed systems like being able to view how your information propagates through a lot",
    "start": "2886480",
    "end": "2893400"
  },
  {
    "text": "easier in in a tracing system than it tends to be in searching for a trace ID amongst all your logs and looking at how",
    "start": "2893400",
    "end": "2899839"
  },
  {
    "text": "each of those logs was formatted differently in the time stamps between them and trying to kind of reconstruct that same view yeah we had an",
    "start": "2899839",
    "end": "2906160"
  },
  {
    "text": "interesting question in the slack Channel Eric with a K's back and Eric",
    "start": "2906160",
    "end": "2911839"
  },
  {
    "text": "says what about logs and testing do you ever include like assertions about what",
    "start": "2911839",
    "end": "2918760"
  },
  {
    "text": "should be logged out have you ever done anything like that can we uh jumping back to your previous question can we",
    "start": "2918760",
    "end": "2924480"
  },
  {
    "text": "just say that when you're logging and testing then maybe then you should write to os. standard a I'm just kidding but",
    "start": "2924480",
    "end": "2930839"
  },
  {
    "text": "just split it up that way we never did answer that question if you want to go back to it later oh yeah but Ed logging",
    "start": "2930839",
    "end": "2936280"
  },
  {
    "text": "in testing I don't know I mean it happens from time to time it always feels a little weird when you're sort of",
    "start": "2936280",
    "end": "2942799"
  },
  {
    "text": "validating a log line I guess I'm trying to think of an application where where I've seen that done usually it's in",
    "start": "2942799",
    "end": "2949119"
  },
  {
    "text": "Catching like an error message or something like a sort of specific error you would you would catch which is",
    "start": "2949119",
    "end": "2954920"
  },
  {
    "text": "becomes a log line yeah I've done it once where it mattered what was printed out from the program like it was very",
    "start": "2954920",
    "end": "2961520"
  },
  {
    "text": "important and so this is there was some slight I think because I always do this little abstraction where I have a run",
    "start": "2961520",
    "end": "2968240"
  },
  {
    "text": "method and Main only just calls out to a run method and passes the sort of dependences in and I include standard",
    "start": "2968240",
    "end": "2975400"
  },
  {
    "text": "out and standard error if I want to use them I include even those as IO writers",
    "start": "2975400",
    "end": "2980480"
  },
  {
    "text": "so in in test code then you can use buffers or whatever else you want to capture it and that is a nice way to",
    "start": "2980480",
    "end": "2986720"
  },
  {
    "text": "like then you can make assertions about what is printed out I don't know if it was logging out it mattered what was",
    "start": "2986720",
    "end": "2992040"
  },
  {
    "text": "printed out in that case but yeah and that was just standard out out so we didn't we never did answer that could be",
    "start": "2992040",
    "end": "2998640"
  },
  {
    "text": "interesting if you have Downstream processing on your log lines like it's",
    "start": "2998640",
    "end": "3004480"
  },
  {
    "text": "it is interesting because you build dependencies and now you're logging you're talking about being kind of an API of your application and maybe API is",
    "start": "3004480",
    "end": "3012160"
  },
  {
    "text": "not the right term but it's an interface that it kind of is you know goes out to so you could do sort of testing on it to",
    "start": "3012160",
    "end": "3019000"
  },
  {
    "text": "make sure you're not making breaking changes to the downstream systems it's interesting if you find yourself in that",
    "start": "3019000",
    "end": "3025079"
  },
  {
    "text": "world you know where you have those tight couplings but if you're using Json or even the log log F you can you could",
    "start": "3025079",
    "end": "3032599"
  },
  {
    "text": "have tests to make sure that certain values are there it's it's I'm not sure quite how to dig into that one it seems",
    "start": "3032599",
    "end": "3038480"
  },
  {
    "text": "like it comes down to the point where like if not having it there and it changing could break something then you",
    "start": "3038480",
    "end": "3043599"
  },
  {
    "text": "probably need to test it yeah if it's part of your API but if it's not something that's going to be broken it's",
    "start": "3043599",
    "end": "3048799"
  },
  {
    "text": "just going to be like a visual difference then you're probably okay getting by without it yeah by the way",
    "start": "3048799",
    "end": "3054319"
  },
  {
    "text": "John you won't believe this but the little elves in the slack Channel have found the episode that Scott Mansfield",
    "start": "3054319",
    "end": "3061400"
  },
  {
    "text": "talked about go at Netflix on go Time episode number nine was it nine so if",
    "start": "3061400",
    "end": "3067040"
  },
  {
    "text": "anyone wants to go back I swear there was one that I was in as well that I got mentioned so maybe it's been in multiple",
    "start": "3067040",
    "end": "3072160"
  },
  {
    "text": "it's possible I swear it was one of the episodes we did on like um metrics and things like that with a A company that",
    "start": "3072160",
    "end": "3078119"
  },
  {
    "text": "did metric software yeah but I swear they had like a similar opinion along the lines of like if there's a log",
    "start": "3078119",
    "end": "3083559"
  },
  {
    "text": "message somebody needs to be like you somebody should be getting paged right now so it's just interesting to see the",
    "start": "3083559",
    "end": "3088960"
  },
  {
    "text": "different approaches that people take to to writing software yeah and that's what I wonder also is whether this sort of",
    "start": "3088960",
    "end": "3095839"
  },
  {
    "text": "depends in each case and anytime you have people with really strong opinions about tech often they're working on",
    "start": "3095839",
    "end": "3103359"
  },
  {
    "text": "something different you know that's why I tried to be you know unpopular opinions loosely held the one area that",
    "start": "3103359",
    "end": "3110079"
  },
  {
    "text": "I think could matter in that sort of argument of metrics versus logs is that logs are an event right they have a",
    "start": "3110079",
    "end": "3116400"
  },
  {
    "text": "distinct time stamp that's very accurate right like metrics do not have that kind of accuracy at least most of the time",
    "start": "3116400",
    "end": "3121880"
  },
  {
    "text": "right like by sort of forced to do a roll up because of that's the optimization they make which is really",
    "start": "3121880",
    "end": "3127040"
  },
  {
    "text": "valuable so maybe that event Tim stamp isn't I don't know it can be really important for troubleshooting to know",
    "start": "3127040",
    "end": "3132880"
  },
  {
    "text": "exactly when the sequence of events happened and a lot of times when you're sort of working within whatever the",
    "start": "3132880",
    "end": "3138000"
  },
  {
    "text": "bound of your metric is if the event happened inside say a Prometheus scrape interval you don't have any information",
    "start": "3138000",
    "end": "3143799"
  },
  {
    "text": "to tell you what happened a lot of times logs can can hide that cont or rather show that that context it's without sort",
    "start": "3143799",
    "end": "3150400"
  },
  {
    "text": "of knowing more context like I'm sure it's a wellth thought out argument and that it works well right like you can",
    "start": "3150400",
    "end": "3155520"
  },
  {
    "text": "build a system that works well that doesn't log I mean but logging is just the sort of you know it's the thing",
    "start": "3155520",
    "end": "3162480"
  },
  {
    "text": "right it's everywhere like I think you if we we were going to talk a little bit more about Loki the reason Loki exists",
    "start": "3162480",
    "end": "3168240"
  },
  {
    "text": "is because of how sort of ubiquitous logging and some of the problems are with it right we talk about the variety",
    "start": "3168240",
    "end": "3173559"
  },
  {
    "text": "of formats that exist for logs and like you know do you pre-process or postprocess those to try",
    "start": "3173559",
    "end": "3180480"
  },
  {
    "text": "to make them useful how do you catalog and store and index that information",
    "start": "3180480",
    "end": "3185599"
  },
  {
    "text": "where do you store it right like people generate tremendous amounts of log data you know the numbers vary the the big",
    "start": "3185599",
    "end": "3193920"
  },
  {
    "text": "side is usually terabytes a day although definitely know people say they generate",
    "start": "3193920",
    "end": "3199440"
  },
  {
    "text": "pedabytes of logs a day which is just mind-blowing amount of data right like to have to deal with and store so yeah",
    "start": "3199440",
    "end": "3205960"
  },
  {
    "text": "when it comes to logging right like that's the real question of where does it go you had that question in there",
    "start": "3205960",
    "end": "3211400"
  },
  {
    "text": "where do the logs go like yeah it's a good question because that's usually a",
    "start": "3211400",
    "end": "3216559"
  },
  {
    "text": "disconnect between the person that writes code and the system and infrastructure that runs it right like",
    "start": "3216559",
    "end": "3222720"
  },
  {
    "text": "it's so becomes a little bit more important than what you log I can't imagine petabytes of logs I mean nip",
    "start": "3222720",
    "end": "3229280"
  },
  {
    "text": "through and delete some log lines surely I can't imagine how you'd use those at all I feel like you just end up with so",
    "start": "3229280",
    "end": "3234680"
  },
  {
    "text": "many either that or you're like a crazy busy service or something and then it's like we need to do something different or you use a technology that then Works",
    "start": "3234680",
    "end": "3242240"
  },
  {
    "text": "in some abstract way on that data that must be the answer I'm not going to keep promoting lowkey other log platforms are",
    "start": "3242240",
    "end": "3248680"
  },
  {
    "text": "available so the way you could approach that that would fit with with Loki is the what Loki does that's a little",
    "start": "3248680",
    "end": "3255079"
  },
  {
    "text": "different from from other systems is the indexing model so the idea is to index a",
    "start": "3255079",
    "end": "3260119"
  },
  {
    "text": "relatively small we don't index the content of the logs themselves we index metad to think about like where the logs",
    "start": "3260119",
    "end": "3266799"
  },
  {
    "text": "come from typically so if you were going to ask a question of like where would I go to find the logs maybe like a table",
    "start": "3266799",
    "end": "3272079"
  },
  {
    "text": "of contents a little bit like you keep a relatively small index because an index in a database tends to be one of the",
    "start": "3272079",
    "end": "3277760"
  },
  {
    "text": "more expensive operational pieces so you keep a small index and so for that pedabytes you would chunk that up into",
    "start": "3277760",
    "end": "3284160"
  },
  {
    "text": "smaller and smaller pieces and then Loki sort of optimizes around that scale side",
    "start": "3284160",
    "end": "3290160"
  },
  {
    "text": "of it first or the idea that your expensive Parts tend to be on",
    "start": "3290160",
    "end": "3295720"
  },
  {
    "text": "ingesting and storing that index and keeping that cost lower or that complexity lower and then on the read",
    "start": "3295720",
    "end": "3301520"
  },
  {
    "text": "side of things it's a little bit more simplistic it's just kind of Brute Force right like so if you don't fully index",
    "start": "3301520",
    "end": "3308000"
  },
  {
    "text": "something you don't know where it is you got to go look through it so you use those labels to narrow down that result set but one of the things that Computing",
    "start": "3308000",
    "end": "3315319"
  },
  {
    "text": "is generally really good at now is parallelism Loki optimizes around object stores so it's a basically a strings",
    "start": "3315319",
    "end": "3322520"
  },
  {
    "text": "database that's built against object stores which also supports parallelization really well and take a lot of the sort of nightmare of working",
    "start": "3322520",
    "end": "3329400"
  },
  {
    "text": "with storage and make it somebody else's problem and you can force your way and parallelism at you know many gigabytes a",
    "start": "3329400",
    "end": "3335280"
  },
  {
    "text": "second to be able to get back to specific events that you're looking for so it's kind of a trade-off between you",
    "start": "3335280",
    "end": "3341119"
  },
  {
    "text": "pay more for that query time but logs are typically something you write once and maybe query never or query",
    "start": "3341119",
    "end": "3346520"
  },
  {
    "text": "infrequently so that if your operating model is one that you write a lot of logs and you want to query them all the time this might not be the best approach",
    "start": "3346520",
    "end": "3353680"
  },
  {
    "text": "but for the kind of developer and operator use case that usually an advantageous tradeoff to be able to kind",
    "start": "3353680",
    "end": "3358760"
  },
  {
    "text": "of control the query cost okay I'm gonna have to return an error to you though Ed Too Many mentions of Loki don't and",
    "start": "3358760",
    "end": "3365799"
  },
  {
    "text": "don't thought you going to tell him deadline exceeded yeah unfortunately it is going to be we're coming up to",
    "start": "3365799",
    "end": "3371240"
  },
  {
    "text": "deadline exceeded is on the minute but they still got time so please add John shut your faces it's time for unpopular",
    "start": "3371240",
    "end": "3378960"
  },
  {
    "text": "[Music] opinions un opinion you want I actually",
    "start": "3378960",
    "end": "3385680"
  },
  {
    "text": "think should probably [Music]",
    "start": "3385680",
    "end": "3392380"
  },
  {
    "text": "leave okay who's it's not Halloween I don't know I'm doing a spooky voice",
    "start": "3394559",
    "end": "3399839"
  },
  {
    "text": "who's going to start us off with an unpopular opinion today I noticed you've got six",
    "start": "3399839",
    "end": "3405000"
  },
  {
    "text": "Ed so I think it's funny because I I laugh every time I think about the goal is to have an opinion that people don't",
    "start": "3405000",
    "end": "3412480"
  },
  {
    "text": "agree with yeah right so so so like if we had a KKK member here he would probably win I hope he would win yeah",
    "start": "3412480",
    "end": "3419799"
  },
  {
    "text": "yeah not in a good winning way yeah but we don't have him on right so no I'll phrase this this is my favorite",
    "start": "3419799",
    "end": "3425559"
  },
  {
    "text": "unpopular opinion I'll phrase it in the way that's likely to be received as it's most unpopular but it's a Nuance",
    "start": "3425559",
    "end": "3430880"
  },
  {
    "text": "conversation but my experience is that integration testing is usually a net",
    "start": "3430880",
    "end": "3436200"
  },
  {
    "text": "loss and I would largely recommend not doing it oh that is that is a interesting one I have such mixed",
    "start": "3436200",
    "end": "3443000"
  },
  {
    "text": "feelings on integration tests I definitely fixed and found bugs in integration tests right I definitely",
    "start": "3443000",
    "end": "3448720"
  },
  {
    "text": "caught significant bugs however the tremendous amount of anxiety and time",
    "start": "3448720",
    "end": "3455640"
  },
  {
    "text": "that I spend and have spent looking at CI builds running for minutes or tens of",
    "start": "3455640",
    "end": "3461240"
  },
  {
    "text": "minutes or or more combined with just the propensity for integration tests to have false positives in my experience",
    "start": "3461240",
    "end": "3467960"
  },
  {
    "text": "leads to those couple bugs it probably would have been better if they just made it through to prod and we didn't catch",
    "start": "3467960",
    "end": "3474559"
  },
  {
    "text": "them versus the sort of overall cost so that's kind of where I am at within net loss is that they do tend to catch bugs",
    "start": "3474559",
    "end": "3480319"
  },
  {
    "text": "but I don't know if it's worth it interesting one see I agree with you",
    "start": "3480319",
    "end": "3485559"
  },
  {
    "text": "fully about the fact that like integration tests or tests that cover like more scope like integration or or",
    "start": "3485559",
    "end": "3492079"
  },
  {
    "text": "larger is how I'd put it in like it's scope tend to be the ones that in applications I've worked on that just break and then nobody has time to fix",
    "start": "3492079",
    "end": "3498599"
  },
  {
    "text": "them for some reason and then they just continuously you have breaking tests and then somebody eventually has to fix it it just can be a headache but at the",
    "start": "3498599",
    "end": "3505559"
  },
  {
    "text": "same time like they've been incredibly valuable in some situations to the point that if I was taking your opinion and",
    "start": "3505559",
    "end": "3512839"
  },
  {
    "text": "like okay we're going to act on this it would be more along the lines of I could maybe agree with not putting integration",
    "start": "3512839",
    "end": "3518039"
  },
  {
    "text": "tests inside of like continuous integration but having them available for local development and like a",
    "start": "3518039",
    "end": "3523240"
  },
  {
    "text": "developer has to actively say okay we're gonna pass on this for now yeah but I could see value in like not being like a",
    "start": "3523240",
    "end": "3529960"
  },
  {
    "text": "hard requirement whereas like a lot of times unit tests it's very clear like this should be passing and if it's not",
    "start": "3529960",
    "end": "3535680"
  },
  {
    "text": "something's broken or the test needs fixed yeah and that's where if I gave that as my opinion it wouldn't be as",
    "start": "3535680",
    "end": "3541400"
  },
  {
    "text": "unpopular I really like the idea of sort of running against sort of operational",
    "start": "3541400",
    "end": "3546599"
  },
  {
    "text": "data or cluster so like having tests that are running against systems but like kind of the I build some database",
    "start": "3546599",
    "end": "3554520"
  },
  {
    "text": "inserts and run them into an inmemory database and then it verifies some kind of data and that runs as part of a CI",
    "start": "3554520",
    "end": "3560680"
  },
  {
    "text": "build like my experiences around those is like it takes a long time to build them it's really hard to change the data",
    "start": "3560680",
    "end": "3566559"
  },
  {
    "text": "if you have to go in and make a change to the system it's hard to understand what the original sort of creator of the",
    "start": "3566559",
    "end": "3571680"
  },
  {
    "text": "test maybe even had in mind and when it does flake out because testing a distributed system and it maybe didn't",
    "start": "3571680",
    "end": "3577640"
  },
  {
    "text": "do retries properly or at all or something changed like you know it's like you said the people that usually",
    "start": "3577640",
    "end": "3583280"
  },
  {
    "text": "are the ones that have to deal with it don't have the context to fix it and it's just holding them up it's like I",
    "start": "3583280",
    "end": "3588799"
  },
  {
    "text": "didn't even change this code and this thing is breaking you know I'm I'm really unhappy with my life so maybe the",
    "start": "3588799",
    "end": "3594400"
  },
  {
    "text": "key ke to success with integration tests is keeping their scope really really small and purposeful and then running",
    "start": "3594400",
    "end": "3599880"
  },
  {
    "text": "them on a on demand kind of thing yeah that's very interesting we'll put this out on Twitter at gotime FM to see if",
    "start": "3599880",
    "end": "3607799"
  },
  {
    "text": "indeed that is unpopular you wrote down another one though Ed which I feel like you might you might have a even better",
    "start": "3607799",
    "end": "3614839"
  },
  {
    "text": "chance of of winning this whole thing the one that you have highlighted that Windows is the best desktop OS say it",
    "start": "3614839",
    "end": "3621799"
  },
  {
    "text": "again clearly for the Twitter clip I believe Windows is the best desktop",
    "start": "3621799",
    "end": "3627559"
  },
  {
    "text": "OS okay really specifically windows with wsl2 is everything that I've Ever Needed",
    "start": "3627559",
    "end": "3634640"
  },
  {
    "text": "from a desktop OS so a close second would probably be my Mac OS although my",
    "start": "3634640",
    "end": "3640200"
  },
  {
    "text": "experiences with Docker and Mac OS are frustrating and my experiences with updating Mac OS and having it become",
    "start": "3640200",
    "end": "3646559"
  },
  {
    "text": "less stable after every time it does an update and in general like the sort of",
    "start": "3646559",
    "end": "3651720"
  },
  {
    "text": "expense of the Mac you know hardware and kind of hostility of the Mac support Community has shied me away from it and",
    "start": "3651720",
    "end": "3659200"
  },
  {
    "text": "then I love Linux I've tried for years and years and years to run desktop Linux I just don't I just want my computer to",
    "start": "3659200",
    "end": "3665280"
  },
  {
    "text": "work you know I want to join this podcast today and expect not to have any",
    "start": "3665280",
    "end": "3671039"
  },
  {
    "text": "trouble and that's Windows man like that's where I'm at with with Windows",
    "start": "3671039",
    "end": "3676839"
  },
  {
    "text": "also like I don't know it's not I'm not going to say that I love it right the windows is great and doesn't have a",
    "start": "3676839",
    "end": "3682000"
  },
  {
    "text": "whole host of its own problems I just think it has the problem yeah it does have mind sweeper",
    "start": "3682000",
    "end": "3688799"
  },
  {
    "text": "does it I don't even know does Windows 11 still have mind sweeper can we find out I have no idea that'll be the",
    "start": "3688799",
    "end": "3694559"
  },
  {
    "text": "Clincher for me no it doesn't ah okay every time I've tried to code it all on Windows there's always like little",
    "start": "3694559",
    "end": "3699920"
  },
  {
    "text": "things that I'm sure I could eventually get past them like just one example I can press contr a to go to like the",
    "start": "3699920",
    "end": "3706280"
  },
  {
    "text": "start of a line and control e to go to the end of a line in Windows control a is going to select everything so like it",
    "start": "3706280",
    "end": "3711319"
  },
  {
    "text": "all of a sudden doesn't do what I want and I don't know if there is a way to just go to the start of the line there probably is I just don't know it it's",
    "start": "3711319",
    "end": "3717839"
  },
  {
    "text": "probably got his own button hasn't it go to start of line or the home button on my keyboard is that you go in the start",
    "start": "3717839",
    "end": "3724400"
  },
  {
    "text": "menu and you go to run and then you type move to start of line yeah I the",
    "start": "3724400",
    "end": "3730520"
  },
  {
    "text": "keyboard shortcuts were the worst part for me trying to move to Mac I could never get used to copy and paste I could",
    "start": "3730520",
    "end": "3735640"
  },
  {
    "text": "never figure it out so I think it's one of those things that there's definitely a difference between like command and",
    "start": "3735640",
    "end": "3741319"
  },
  {
    "text": "control but when you kind of get used to them it's kind of hard to switch back at",
    "start": "3741319",
    "end": "3746359"
  },
  {
    "text": "times yeah that's true the muscle memories I got a new keyboard recently and I just basically stopped using it",
    "start": "3746359",
    "end": "3753079"
  },
  {
    "text": "does anyone want it like this it's meant to be ergonomic but I've already learned it the non-ergonomic way my bones have",
    "start": "3753079",
    "end": "3760039"
  },
  {
    "text": "changed now so I an adapting back is tough you know especially as you get",
    "start": "3760039",
    "end": "3766599"
  },
  {
    "text": "older your brain gets less malleable doesn't it well the other issue I have with that type like because I the",
    "start": "3766599",
    "end": "3771640"
  },
  {
    "text": "keyboard you have Matt I I have it and I was using it but like my issue I ran into was first off my hand was broken",
    "start": "3771640",
    "end": "3777319"
  },
  {
    "text": "for the last two months so I was already really slow that's not your keyboard's fault John well no no but I was already",
    "start": "3777319",
    "end": "3782520"
  },
  {
    "text": "really slow so when the cast came off and I had a brace on I'm like I need to get caught up on work not like learn a new keyboard yeah but then on top of",
    "start": "3782520",
    "end": "3789279"
  },
  {
    "text": "that I would go from this new keyboard I think by default where a caps lock key normally is was delete which is great",
    "start": "3789279",
    "end": "3795039"
  },
  {
    "text": "like it's because I never used caps lock and I you know I'd start using it for delete and then I went and got on my",
    "start": "3795039",
    "end": "3801200"
  },
  {
    "text": "laptop at some point you know just on my laptop trying to do work and all of a sudden I'm just riding in Crazy caps all",
    "start": "3801200",
    "end": "3806839"
  },
  {
    "text": "over the place cuz I'm hitting the wrong button and I'm like I don't know how people do that mental shift of yeah",
    "start": "3806839",
    "end": "3813039"
  },
  {
    "text": "switching from one to the other and I think that's probably the biggest issue I'd have with Windows is if I only used it and I got used to it I could probably",
    "start": "3813039",
    "end": "3819799"
  },
  {
    "text": "make it work but I'd have to like fully commit and be like I'm diving into windows and I'm like okay with that yeah",
    "start": "3819799",
    "end": "3826359"
  },
  {
    "text": "I feel that that was because I had always use Windows systems in corporate environments so and like I said the copy",
    "start": "3826359",
    "end": "3832200"
  },
  {
    "text": "paste was sort of the worst one for me and then you could go the route of remapping the keys but like that never seems to be Flawless and so yeah it's",
    "start": "3832200",
    "end": "3840839"
  },
  {
    "text": "it's hard once you're well established if you're going to a Mac it's definitely not one to one because like control and",
    "start": "3840839",
    "end": "3846400"
  },
  {
    "text": "command both do different things at different times yeah so you still use control a little bit you just use command more but isn't it also true in",
    "start": "3846400",
    "end": "3852760"
  },
  {
    "text": "Windows that it's app it depends on the app like it's per application whereas",
    "start": "3852760",
    "end": "3857960"
  },
  {
    "text": "it's copy and paste is always the same across the whole operating system on a map Windows is pretty much always",
    "start": "3857960",
    "end": "3863520"
  },
  {
    "text": "control C unless it's interrupt on the terminal which is why I think Mac did it right right like it shouldn't be control",
    "start": "3863520",
    "end": "3868760"
  },
  {
    "text": "C or they should have made another character for interrupts but yeah that's the one that gets you in trouble is when you're working in a terminal in Windows",
    "start": "3868760",
    "end": "3874599"
  },
  {
    "text": "like oh yeah can I use control C to copy so a lot of times it's control shift C but other than that it's always contr C",
    "start": "3874599",
    "end": "3880079"
  },
  {
    "text": "I remember it used to be you highlight it and then it's done wasn't it that like you just highlight it in the",
    "start": "3880079",
    "end": "3885319"
  },
  {
    "text": "terminal mine does that I set up Windows terminal do that now it's my favorite thing ever like every time I highlight something in the terminal it",
    "start": "3885319",
    "end": "3890440"
  },
  {
    "text": "automatically copies it and I don't know why anyone would not want it to do that it's the pain thing ever yeah except",
    "start": "3890440",
    "end": "3896279"
  },
  {
    "text": "when you accidentally click on the screen after you copy them but then you use a tool to manage your clipboard history so that you can just go back",
    "start": "3896279",
    "end": "3903160"
  },
  {
    "text": "yeah okay great no all right all right great good stuff well we're slightly overtime but it was worth it thank you",
    "start": "3903160",
    "end": "3909880"
  },
  {
    "text": "so much Ed Welch for joining us uh fascinating talk and dive into logs",
    "start": "3909880",
    "end": "3915599"
  },
  {
    "text": "there there's actually so much more we could talk about we may do logging part two Return of the something let's",
    "start": "3915599",
    "end": "3922520"
  },
  {
    "text": "brainstorm that and not sure I think that was all I had but I'd be happy to come back that was really fun okay",
    "start": "3922520",
    "end": "3928319"
  },
  {
    "text": "that's nice to have you and John Calhoun was also here wen't you John I was here",
    "start": "3928319",
    "end": "3933559"
  },
  {
    "text": "thanks for having me Matt always a pleasure see you next time on go time",
    "start": "3933559",
    "end": "3940440"
  },
  {
    "text": "bye that's the wrong one oh it was all so professional until then wasn't",
    "start": "3940440",
    "end": "3946079"
  },
  {
    "text": "it was it no it wasn't oh good I think I tune out the exit song so I didn't even",
    "start": "3946079",
    "end": "3951119"
  },
  {
    "text": "notice I was just like okay cool we're listening to a song yeah I know but that's the unpopular opinion one John",
    "start": "3951119",
    "end": "3957440"
  },
  {
    "text": "pressed the wrong one well no it's fine because honestly the editors are just clean this up clean it up we love you",
    "start": "3957440",
    "end": "3965200"
  },
  {
    "text": "editors by the way I could do with editors in real life like on calls and that you know what I mean like when",
    "start": "3965200",
    "end": "3971319"
  },
  {
    "text": "you're having meetings it would be great if you could have someone editing yeah cutting out the gaps I could hear how",
    "start": "3971319",
    "end": "3978200"
  },
  {
    "text": "many times I said um you won't hear that in the final podcast I know because I said it usually when someone else",
    "start": "3978200",
    "end": "3983279"
  },
  {
    "text": "started talking and so like great that's just going to get cut out cuz somebody else just started talking yeah they",
    "start": "3983279",
    "end": "3988480"
  },
  {
    "text": "literally will go through and and neaten up like any gaps we leave if we talk over each other yeah it's it is really",
    "start": "3988480",
    "end": "3995799"
  },
  {
    "text": "good they do a good bit with they with what they can obviously there are times where it's like nope that's too hard",
    "start": "3995799",
    "end": "4000920"
  },
  {
    "text": "yeah you can't polish a turd is what you're saying normally we challenge them you know but shine it up a little bit",
    "start": "4000920",
    "end": "4005960"
  },
  {
    "text": "though yeah I feel like I feel like I actually that's my unpopular opinion I actually think yeah you probably can polish a turd to be honest The",
    "start": "4005960",
    "end": "4012680"
  },
  {
    "text": "MythBusters actually did did they do and they've polished a turd on MythBusters yeah okay we've said too many times for",
    "start": "4012680",
    "end": "4018880"
  },
  {
    "text": "a family friendly podcast we like start with the potty humor and end with the potty humor we did it's a potty sandwich",
    "start": "4018880",
    "end": "4025440"
  },
  {
    "text": "is this still in the show or are we still going here we got I mean it's recording right now yeah yeah I'm we're still alive I haven't played the final",
    "start": "4025440",
    "end": "4032400"
  },
  {
    "text": "this is all legally binding until I play the final music so got you yeah okay",
    "start": "4032400",
    "end": "4038520"
  },
  {
    "text": "well we'll put that in the show notes about the mythbuster thing if this makes it in well thank you so much again and",
    "start": "4038520",
    "end": "4044920"
  },
  {
    "text": "thanks for listening see you next time on go",
    "start": "4044920",
    "end": "4050480"
  },
  {
    "text": "time all right that is go time for this week thanks for hanging with us do you",
    "start": "4053720",
    "end": "4058880"
  },
  {
    "text": "log all the things let us know in the comments there is a direct link to the",
    "start": "4058880",
    "end": "4064000"
  },
  {
    "text": "discussion thread in your show notes everyone on the episode will be notified so it's a great place for questions",
    "start": "4064000",
    "end": "4069880"
  },
  {
    "text": "follow-ups links to related projects and that kind of stuff if this is your first time with us don't forget to subscribe",
    "start": "4069880",
    "end": "4076839"
  },
  {
    "text": "you can find all the ways at go time. FM or by searching for go time in your favorite podcast app we're in there",
    "start": "4076839",
    "end": "4083920"
  },
  {
    "text": "special thanks again to fley for CDN for us to break master cylinder for the freshen and to you for listening we",
    "start": "4083920",
    "end": "4090559"
  },
  {
    "text": "appreciate it next week Johnny Goes one-on-one with mihalis tcos the author",
    "start": "4090559",
    "end": "4095920"
  },
  {
    "text": "of mastering go stay tuned for that one it's coming up next time on go",
    "start": "4095920",
    "end": "4102838"
  },
  {
    "text": "time",
    "start": "4102839",
    "end": "4105838"
  },
  {
    "text": "[Music]",
    "start": "4108460",
    "end": "4117079"
  },
  {
    "text": "King",
    "start": "4118359",
    "end": "4121359"
  }
]