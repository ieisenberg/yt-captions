[
  {
    "text": "one of the really nice things is that you don't have to know exactly which client is going to want what where if",
    "start": "80",
    "end": "6240"
  },
  {
    "text": "the front-end developers decide like they need three more fields in this particular query they just add it as",
    "start": "6240",
    "end": "12000"
  },
  {
    "text": "long as those fields are already in the schema because you needed them on some other page they can decide they can just add and remove things you just say how",
    "start": "12000",
    "end": "18840"
  },
  {
    "text": "do we compute any data that we do need you don't have to worry really at all about which requests need which",
    "start": "18840",
    "end": "27160"
  },
  {
    "text": "data hey J here one of the things we can count on in the software industry is",
    "start": "28480",
    "end": "34879"
  },
  {
    "text": "change the state-of-the-art changes so fast in fact that keeping up can feel like a whole other job on top of your",
    "start": "34879",
    "end": "41719"
  },
  {
    "text": "actual job that's why we created change log weekly it's our totally free",
    "start": "41719",
    "end": "46879"
  },
  {
    "text": "newsletter that we drop in your inbox each and every Sunday we link to the latest news the best articles and the",
    "start": "46879",
    "end": "54160"
  },
  {
    "text": "most interesting projects that you should be aware of we also add a little commentary from us saying why",
    "start": "54160",
    "end": "59960"
  },
  {
    "text": "something's important pointing you to other instances of a trend or just making a dorky joke to keep it Lively so",
    "start": "59960",
    "end": "65960"
  },
  {
    "text": "if you haven't yet I recommend subscribing to changelog weekly and help us help you keep up with the",
    "start": "65960",
    "end": "71520"
  },
  {
    "text": "latest head to Chang log.com weekly and sign up today again it's totally free",
    "start": "71520",
    "end": "77080"
  },
  {
    "text": "and we never spam you yuck one last time that's Chang law.com [Music]",
    "start": "77080",
    "end": "88260"
  },
  {
    "text": "weekly",
    "start": "88840",
    "end": "91840"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "98000",
    "end": "104719"
  },
  {
    "text": "from around the go Community subscribe today at go time. FM and follow the show",
    "start": "104719",
    "end": "109960"
  },
  {
    "text": "on Twitter we are at gotime FM special thanks to our partners at fastly for",
    "start": "109960",
    "end": "115000"
  },
  {
    "text": "delivering go time super fast all around the world check them out for yourself at fast .c that's all for me here we",
    "start": "115000",
    "end": "123200"
  },
  {
    "text": "[Music]",
    "start": "123200",
    "end": "129920"
  },
  {
    "text": "go hello and welcome to go time today we're going to be talking about graphql",
    "start": "131560",
    "end": "136640"
  },
  {
    "text": "and we are joined by two guests the first is Mark sandstrom Mark is an engineer on the platform infrastructure",
    "start": "136640",
    "end": "142000"
  },
  {
    "text": "team at Con Academy Mark how are you I'm great thanks well thanks for joining us our other guest is Ben Craft he is the",
    "start": "142000",
    "end": "149160"
  },
  {
    "text": "creator of the gen client and he also used to work on the platform infrastructure team at Con Academy Ben",
    "start": "149160",
    "end": "154599"
  },
  {
    "text": "how are you doing well thanks awesome well hopefully Ben's internet sticks with us um we've had some issues before",
    "start": "154599",
    "end": "160879"
  },
  {
    "text": "we started so if he cuts out keep that in mind all right so let's go ahead and just jump in I'm here too John Matt you",
    "start": "160879",
    "end": "167519"
  },
  {
    "text": "want me to introduce you yeah yeah yeah come on now all right sorry everybody treat me like a guest like we're also",
    "start": "167519",
    "end": "173480"
  },
  {
    "text": "joined by our other host Matt ryer hello Matt how are you thank you for remembering me I'm yeah doing fine fine",
    "start": "173480",
    "end": "180040"
  },
  {
    "text": "thanks very glad to be back it's been a while but it's been a while for me if you can't tell based on my terrible",
    "start": "180040",
    "end": "185760"
  },
  {
    "text": "introduction for you no it's all right really I know sometimes when I'm not the host I tend to mess around and be silly",
    "start": "185760",
    "end": "192239"
  },
  {
    "text": "and stuff but John out of respect well no I'm going to obviously carry on I'll just carry on actually doing that",
    "start": "192239",
    "end": "198200"
  },
  {
    "text": "probably all right we're going to first start off by just talking about what is graphql so Ben or Mark do either of you",
    "start": "198200",
    "end": "205280"
  },
  {
    "text": "want to take that yeah yeah I'll take this so graphql is a specification for building apis it consists of a a query",
    "start": "205280",
    "end": "213000"
  },
  {
    "text": "language for for fetching data and also a spec for implementing graphql servers",
    "start": "213000",
    "end": "218959"
  },
  {
    "text": "it can run over any transport but is usually run over HTTP you send a query to the server usually as a post request",
    "start": "218959",
    "end": "225840"
  },
  {
    "text": "if you squint a graphql query kind of looks like Json document without quotes",
    "start": "225840",
    "end": "231760"
  },
  {
    "text": "or colons or scaler array values so you know pretty much what you're left with is the keys and curly braces and that",
    "start": "231760",
    "end": "238799"
  },
  {
    "text": "isn't you know coincidence that the query uh document describes the Json data to be returned by the server so the",
    "start": "238799",
    "end": "246560"
  },
  {
    "text": "structure of the data that you're requesting is specified in a schema that you write so your schema might have a a",
    "start": "246560",
    "end": "255640"
  },
  {
    "text": "type called user and user would have an ID and a name and perhaps friends and",
    "start": "255640",
    "end": "263120"
  },
  {
    "text": "friends could be an array of users and you know if you follow that through like",
    "start": "263120",
    "end": "270240"
  },
  {
    "text": "those friends could have friends and a little bit later we can talk about why that's okay in graphql I guess the way I",
    "start": "270240",
    "end": "276639"
  },
  {
    "text": "like to think about graphql is as a solution to some of the classic difficulties of a rest API and so say",
    "start": "276639",
    "end": "283960"
  },
  {
    "text": "you have an API and you get want to get the current user but different pages want to get different pieces of",
    "start": "283960",
    "end": "289240"
  },
  {
    "text": "information about the current user so one page might just want their ID and name and the other page wants their",
    "start": "289240",
    "end": "295160"
  },
  {
    "text": "friends and their friends of friends and you know some whole complicated thing and graphql lets you just Define one",
    "start": "295160",
    "end": "301440"
  },
  {
    "text": "schema that can cover all of these and then each page just tells you says I",
    "start": "301440",
    "end": "306960"
  },
  {
    "text": "want this data and then the server can send back exactly what it needs instead of having to write a bunch of either",
    "start": "306960",
    "end": "312800"
  },
  {
    "text": "call a bunch of different API calls from each page and then you get a bunch of round trips or having to write",
    "start": "312800",
    "end": "318120"
  },
  {
    "text": "essentially an API call for each page and then you have to kind of duplicate a bunch of things graphql says we're just",
    "start": "318120",
    "end": "323600"
  },
  {
    "text": "going to generate this have this whole schema and then the client says here's what I want and the server just sends it",
    "start": "323600",
    "end": "329080"
  },
  {
    "text": "back it's all in all in one API call it makes things super easy yeah I know when I first looked at graphql it kind of",
    "start": "329080",
    "end": "335840"
  },
  {
    "text": "struck me as something that somebody on the client side would have like dreamed up whereas like when you look at a rest",
    "start": "335840",
    "end": "341560"
  },
  {
    "text": "API it looks like somebody on the server side dreamed it up because it literally just tends to mimic exactly what's on",
    "start": "341560",
    "end": "347440"
  },
  {
    "text": "the server side they're like I'm doing no no data transformation or anything you can deal with that yeah that's right it puts a lot more work on the server to",
    "start": "347440",
    "end": "354680"
  },
  {
    "text": "say here's what the client wanted and now I have to like do all the glue to put it together but most of that in when",
    "start": "354680",
    "end": "360000"
  },
  {
    "text": "you're actually writing a graphql server most of that's going to be in your graphql library and so you just write",
    "start": "360000",
    "end": "366400"
  },
  {
    "text": "you still just write the application code Ben you mentioned rest apis I know there are some out there that have been",
    "start": "366400",
    "end": "372080"
  },
  {
    "text": "trying to sort of solve this problem stripe is one that comes to mind where I don't know if you're familiar with their",
    "start": "372080",
    "end": "377400"
  },
  {
    "text": "API at all but they have like a way when you're making rest requests that you can like include like it's it's I think they",
    "start": "377400",
    "end": "383840"
  },
  {
    "text": "call it include it's like an extra parameter so it'll actually give you information about nested resources but",
    "start": "383840",
    "end": "389479"
  },
  {
    "text": "then it's it's always been interesting to me that graphql is something that just had that baked in from the get-go",
    "start": "389479",
    "end": "394840"
  },
  {
    "text": "and it seems like you can go like Mark when you were talking about how you could have a user with friends and those",
    "start": "394840",
    "end": "400440"
  },
  {
    "text": "friends objects are probably going to be user objects of some sort and you could literally Nest that down several layers deep and it just kind of works in",
    "start": "400440",
    "end": "407400"
  },
  {
    "text": "graphql which is kind of crazy yeah that's right considered an anti-pattern in graphql to have fields that are just",
    "start": "407400",
    "end": "414240"
  },
  {
    "text": "IDs so friends wouldn't return a array of friend ID",
    "start": "414240",
    "end": "420000"
  },
  {
    "text": "instead you can select into that object and that prevents you from having to to stitch together the data on the client",
    "start": "420000",
    "end": "426919"
  },
  {
    "text": "but yeah I I really think of graphql as sort of you take that kind of choose which Fields you want in a rest API and",
    "start": "426919",
    "end": "432720"
  },
  {
    "text": "you like really supercharge that you make it the whole thing you can Nest it you can that's just the way the whole",
    "start": "432720",
    "end": "438240"
  },
  {
    "text": "API is structured and that's that's graphql you can also tailor Fields a little bit more to the client have",
    "start": "438240",
    "end": "444479"
  },
  {
    "text": "denormalized data for example if you want because it's okay the client doesn't have to select a field if they",
    "start": "444479",
    "end": "449800"
  },
  {
    "text": "don't want so you can really include additional things that are are just especially handy for the client to",
    "start": "449800",
    "end": "455879"
  },
  {
    "text": "select directly yeah and so you often I mean I think at KH Academy our user had you know like a 100 Fields because you",
    "start": "455879",
    "end": "462520"
  },
  {
    "text": "just kind of anything anyone needs anywhere you just put it somewhere useful and then you know most clients",
    "start": "462520",
    "end": "467680"
  },
  {
    "text": "are only going to select like five fields and that's fine they don't pay for the others I think that's something that me personally I wouldn't have",
    "start": "467680",
    "end": "473879"
  },
  {
    "text": "thought about at first because I have a lot more experience just making you know Json rest apis that send that data back",
    "start": "473879",
    "end": "481919"
  },
  {
    "text": "and if your objects aren't too big or there's not too much there it doesn't make much of a difference but like you said if you have a lot of different use",
    "start": "481919",
    "end": "488080"
  },
  {
    "text": "cases where the information for a user you you might need a lot it is nice that you can throw it all there and not worry",
    "start": "488080",
    "end": "493479"
  },
  {
    "text": "about the fact that that could be really slow if you had to send everything so",
    "start": "493479",
    "end": "498520"
  },
  {
    "text": "graphql Mark you mentioned that it's it's kind of looks like Json when you're",
    "start": "498520",
    "end": "503680"
  },
  {
    "text": "writing these queries and then the data you get back actually is Json that's correct or is that correct yep that's",
    "start": "503680",
    "end": "510120"
  },
  {
    "text": "right okay so I'm assuming that means that there's both like a server and a client part so can you elaborate I guess",
    "start": "510120",
    "end": "516760"
  },
  {
    "text": "a little bit more on that part yeah so a graph client is pretty simple you",
    "start": "516760",
    "end": "521919"
  },
  {
    "text": "package an operation in adjacent payload and if you can make a HTTP request you",
    "start": "521919",
    "end": "528320"
  },
  {
    "text": "get ajacent response back and clients that's the basic the kind of basic thing",
    "start": "528320",
    "end": "534160"
  },
  {
    "text": "that a client needs to do and client libraries can do it can provide additional facilities to make certain",
    "start": "534160",
    "end": "540519"
  },
  {
    "text": "use cases easier a server is a lot more complex takes the query that you send it",
    "start": "540519",
    "end": "545760"
  },
  {
    "text": "parses it and resolves the data so in the user example you know it's resolving",
    "start": "545760",
    "end": "551360"
  },
  {
    "text": "ID and name and each field can be",
    "start": "551360",
    "end": "556560"
  },
  {
    "text": "associated with a function on the server and that function is only called when you ask for that field so that's what",
    "start": "556560",
    "end": "562000"
  },
  {
    "text": "solves the nested friends issue you can't actually write a graph Q query",
    "start": "562000",
    "end": "568040"
  },
  {
    "text": "that's infinitely deep so so therefore you wouldn't end up in an infinite Loop in your server trying to resolve friends",
    "start": "568040",
    "end": "573079"
  },
  {
    "text": "of friends of friends Fields can also take arguments and so really each field",
    "start": "573079",
    "end": "578959"
  },
  {
    "text": "is like a function some are really simple and and some are more complex not every field needs to correspond to a",
    "start": "578959",
    "end": "585160"
  },
  {
    "text": "function you can if you have a user model where a bunch of the fields are",
    "start": "585160",
    "end": "590680"
  },
  {
    "text": "available you can return those all together and and go one of the nice",
    "start": "590680",
    "end": "595959"
  },
  {
    "text": "things that each separate resolver function is is resolved like in gql gen",
    "start": "595959",
    "end": "601360"
  },
  {
    "text": "is resolved in a separate go routine so they're resolved in parallel so you mentioned gql gen and Ben had created",
    "start": "601360",
    "end": "609480"
  },
  {
    "text": "gen client just so people know I guess when we get into this gql gen is a",
    "start": "609480",
    "end": "615279"
  },
  {
    "text": "library that helps generate the server side stuff and gen client is something for the like the client side correct",
    "start": "615279",
    "end": "621320"
  },
  {
    "text": "yeah that's right and uh we've talked about Jason or mentioned Jason a few times and so one way to handle Jason and",
    "start": "621320",
    "end": "629480"
  },
  {
    "text": "go or you know the way that Jason's handled in the Jason package is via struck tags and so there are some",
    "start": "629480",
    "end": "637839"
  },
  {
    "text": "libraries that use struct tags to help you generate queries and interact with",
    "start": "637839",
    "end": "643480"
  },
  {
    "text": "the graphql server and then code generation is another popular strategy Matt you had said before we started the",
    "start": "643480",
    "end": "649440"
  },
  {
    "text": "show that you've written I believe you said you wrote was it a client or a server with graphql a client yeah so",
    "start": "649440",
    "end": "655639"
  },
  {
    "text": "when you were writing that do you remember what library you were using I wrote the thing I wrote the client",
    "start": "655639",
    "end": "661120"
  },
  {
    "text": "Library okay I wrote a thing machine the machine box graphql client library is",
    "start": "661120",
    "end": "666240"
  },
  {
    "text": "what I was all about yeah okay thanks for bringing it up yeah no problem yeah so when you were writing it what what",
    "start": "666240",
    "end": "672240"
  },
  {
    "text": "language you were you writing in Matt I was writing in go uh and I was consuming a third party graphql service and at the",
    "start": "672240",
    "end": "680639"
  },
  {
    "text": "time there wasn't a way to do it but you you can just do it with you know it's normal HTTP as long as you get the",
    "start": "680639",
    "end": "686560"
  },
  {
    "text": "request body that makes sense for the server and I think you pass the query in",
    "start": "686560",
    "end": "691800"
  },
  {
    "text": "as a parameter but it's it is like a Json esque sort of query language you just pass that as a string in a post",
    "start": "691800",
    "end": "698600"
  },
  {
    "text": "request in the client library that we wrote it would just use the normal Json unmarshalling kind of thing for the",
    "start": "698600",
    "end": "705320"
  },
  {
    "text": "response when you unmarshal it or when you ask for a request you give it an object or point it to an object like you",
    "start": "705320",
    "end": "711160"
  },
  {
    "text": "do with the Json thing and it just passes it through to that when it does the unmarshaling of it so quite a simple",
    "start": "711160",
    "end": "718120"
  },
  {
    "text": "it's like a very simple simple lightweight library and it was very quick very easy kind of to put together",
    "start": "718120",
    "end": "725120"
  },
  {
    "text": "but that's definitely not the case on the server and I sort of almost can't really imagine what that looks like on",
    "start": "725120",
    "end": "730279"
  },
  {
    "text": "this on the server code to implement the server side graphql yeah I looked at your client right quick and it looks",
    "start": "730279",
    "end": "737519"
  },
  {
    "text": "like you specify the query as a string when you're making the query and like you said you it populates the data so in",
    "start": "737519",
    "end": "744800"
  },
  {
    "text": "that case you have the query string and the struct and you have to keep the two in sync with one another and so there's another",
    "start": "744800",
    "end": "752360"
  },
  {
    "text": "client Library the sh cool graphql client that what it does is you use",
    "start": "752360",
    "end": "757560"
  },
  {
    "text": "struct tags and it will generate the query from the struct and then populate the data back in the struct right but",
    "start": "757560",
    "end": "763160"
  },
  {
    "text": "that can get very complex because it's not as simple as Jason where it's just the field name um you have to start",
    "start": "763160",
    "end": "770320"
  },
  {
    "text": "passing arguments and there are things like fragments and interfaces well that is sure cool yeah I guess the way I",
    "start": "770320",
    "end": "776839"
  },
  {
    "text": "think about it is the on the client all of the complexity is like in the query and in the types that you're",
    "start": "776839",
    "end": "783240"
  },
  {
    "text": "deserializing it into and so I think I think Matt's client just kind of lets",
    "start": "783240",
    "end": "788360"
  },
  {
    "text": "you deal with that and it's it's really straightforward I think sh Cool's client kind of tries to hide the query you just",
    "start": "788360",
    "end": "795440"
  },
  {
    "text": "write the types which like any kind of hiding things is often convenient and and then sometimes a little confusing",
    "start": "795440",
    "end": "802680"
  },
  {
    "text": "and then we can later talk about my client genen client that you write the query and it generates the types but",
    "start": "802680",
    "end": "808040"
  },
  {
    "text": "then on the other side the server the types are actually a lot simpler because you just have your user type and it's",
    "start": "808040",
    "end": "813079"
  },
  {
    "text": "got a bunch of fields and a bunch of methods and then the hard part is the server Library itself that like glues",
    "start": "813079",
    "end": "818320"
  },
  {
    "text": "all of that stuff together and and actually has all this logic to say did the user ask for an ID okay then let's",
    "start": "818320",
    "end": "824320"
  },
  {
    "text": "put the ID in did the user ask for a name let's put the name in did the user ask for friends okay which fields of the",
    "start": "824320",
    "end": "829800"
  },
  {
    "text": "friends did they ask for that's where things really get complicated so gql gen",
    "start": "829800",
    "end": "835759"
  },
  {
    "text": "uh which is the the server library is really quite complicated yeah so it's a perfect kind of problem for code gen I",
    "start": "835759",
    "end": "843399"
  },
  {
    "text": "think that particular piece and you mentioned earlier that there are like functions that basically are called",
    "start": "843399",
    "end": "850199"
  },
  {
    "text": "optionally like if somebody asks for friends of the user there's another function that's going to get called so",
    "start": "850199",
    "end": "856600"
  },
  {
    "text": "that goes some way to explain on the go side at least if you were writing a server in go how you could think about",
    "start": "856600",
    "end": "862639"
  },
  {
    "text": "that that there's there's going to be some kind of getter for the user and another optionally way to then also load",
    "start": "862639",
    "end": "870639"
  },
  {
    "text": "the friends of that user and I don't know do do they tend to resolve down into joins in seq in a relational",
    "start": "870639",
    "end": "878160"
  },
  {
    "text": "database or is that just completely up to really the implementation of the server it's up to whoever yeah is",
    "start": "878160",
    "end": "885519"
  },
  {
    "text": "writing the server and and what the what the database is that you're using at at a con Academy we use a document database",
    "start": "885519",
    "end": "892000"
  },
  {
    "text": "so for a lot of things um we do have SQL here and there so that's interesting",
    "start": "892000",
    "end": "897160"
  },
  {
    "text": "then yeah and you need a different strategy mhm because with a SQL database you can select just the fields you want",
    "start": "897160",
    "end": "904160"
  },
  {
    "text": "and document at least the document database we use you get the entire entity from the data",
    "start": "904160",
    "end": "911620"
  },
  {
    "text": "[Music]",
    "start": "911620",
    "end": "917839"
  },
  {
    "text": "store hey there it's Jared again have you heard about change log Plus+ it's",
    "start": "917839",
    "end": "923040"
  },
  {
    "text": "our membership program you can join to directly support our work on go time as a thanks for your support we hook you up",
    "start": "923040",
    "end": "929319"
  },
  {
    "text": "with an adree feed discounts on merch plus some bonuses like extended episodes",
    "start": "929319",
    "end": "934639"
  },
  {
    "text": "sign up today at Chang log.com SL",
    "start": "934639",
    "end": "939360"
  },
  {
    "text": "[Music]",
    "start": "941180",
    "end": "951190"
  },
  {
    "text": "Plus+ so it sounds like using graph C on the server side is going to complicate",
    "start": "955519",
    "end": "961040"
  },
  {
    "text": "things so presumably it's solving some sort of problems to like justify all that added you know complexity yeah so",
    "start": "961040",
    "end": "967839"
  },
  {
    "text": "can you speak a little bit to like what problems it's solving and and like how it was helpful At Con Academy yeah so",
    "start": "967839",
    "end": "975680"
  },
  {
    "text": "Ben mentioned just you know rest apis versus graph C apis where you know in",
    "start": "975680",
    "end": "981959"
  },
  {
    "text": "rest API you may be making multiple requests and stitching it together on",
    "start": "981959",
    "end": "987040"
  },
  {
    "text": "the client so you know I think it really does make make it easier for the client and we have a couple clients we have",
    "start": "987040",
    "end": "993759"
  },
  {
    "text": "website and we also have a mobile client to me one of the really nice things is that as someone who mostly works on the",
    "start": "993759",
    "end": "1000519"
  },
  {
    "text": "server one of the really nice things is that you don't have to know exactly which client is going to want what wear",
    "start": "1000519",
    "end": "1007759"
  },
  {
    "text": "you don't have to like if the frontend developers decide like they want to add three more they need three more fields",
    "start": "1007759",
    "end": "1013720"
  },
  {
    "text": "in this particular query they just add it as long as those fields are already in the schema because you needed them on",
    "start": "1013720",
    "end": "1019519"
  },
  {
    "text": "some other page like they can decide they can just add and remove things and so you don't have to as a server server",
    "start": "1019519",
    "end": "1025918"
  },
  {
    "text": "engineer you just say how do we compute any data that we do need you don't have to worry really at all about which",
    "start": "1025919",
    "end": "1033520"
  },
  {
    "text": "requests need which data though the server Library just like figures all that stuff out for you because the",
    "start": "1033520",
    "end": "1038839"
  },
  {
    "text": "client just asks for it yeah so but haven't you really just moved the problem there though like at some point",
    "start": "1038839",
    "end": "1045319"
  },
  {
    "text": "we've got to decide what data we're going to load and obviously in if there's a real separation between client",
    "start": "1045319",
    "end": "1051360"
  },
  {
    "text": "and server which if you're if you have a public API you have customers that are not part of your organization so there's",
    "start": "1051360",
    "end": "1058600"
  },
  {
    "text": "that's a significant separation but if you were building an app and you just chose graphql you know but no one else",
    "start": "1058600",
    "end": "1064919"
  },
  {
    "text": "is going to use this API you at some point have to decide what data you're going to load and you may optimize that",
    "start": "1064919",
    "end": "1072360"
  },
  {
    "text": "over time as well by giving that basically you're just empowering really the front end or the client really in",
    "start": "1072360",
    "end": "1078000"
  },
  {
    "text": "this cas case isn't it akin to giving them like just to let them run some SQL",
    "start": "1078000",
    "end": "1083480"
  },
  {
    "text": "why don't we just let them run SQL in some ways it is but I think the nice thing about graphql over SQL is it's a",
    "start": "1083480",
    "end": "1089960"
  },
  {
    "text": "much simpler language if you wanted to try to like Implement a whole SQL Server",
    "start": "1089960",
    "end": "1095280"
  },
  {
    "text": "that includes like your business logic because like if you build a really simple app it may look like you're kind of just making requests to the database",
    "start": "1095280",
    "end": "1101760"
  },
  {
    "text": "and maybe throw some off on it or something but in a complicated app like you know it all it all gets more",
    "start": "1101760",
    "end": "1106960"
  },
  {
    "text": "complicated and you have a bunch of business logic sitting in between and I'm not going to say you can't put that",
    "start": "1106960",
    "end": "1113120"
  },
  {
    "text": "in a SQL Server CU there are certainly people out there doing it and I think it's it's cool idea but it's a lot",
    "start": "1113120",
    "end": "1118360"
  },
  {
    "text": "harder whereas graphql is really designed so that again it's just calling these functions on your server and so if",
    "start": "1118360",
    "end": "1125600"
  },
  {
    "text": "you have a function that knows how to get users friends that's really all you need to implement that field and so",
    "start": "1125600",
    "end": "1131600"
  },
  {
    "text": "graphql is really it's the server library is very complicated but I think writing a server as an application",
    "start": "1131600",
    "end": "1137919"
  },
  {
    "text": "developer it's not that much harder than rest you're you're really just sort of writing the same functions and the entry",
    "start": "1137919",
    "end": "1143080"
  },
  {
    "text": "points are just a little different it's the entry point is the field instead of the entry point being like the whole API",
    "start": "1143080",
    "end": "1149280"
  },
  {
    "text": "call yeah and for that you get a lot of flexibility and that flexibility the client does still you know on the other",
    "start": "1149280",
    "end": "1155440"
  },
  {
    "text": "side it is still tricky for the client in some cases to decide what information do I actually need because you have you",
    "start": "1155440",
    "end": "1161559"
  },
  {
    "text": "may have some like huge react app and you need to know which of your components like weigh down the stack",
    "start": "1161559",
    "end": "1166799"
  },
  {
    "text": "what they're going to need that is still a problem but at least at least you get it you know you get the decision like",
    "start": "1166799",
    "end": "1172440"
  },
  {
    "text": "closer so it's at least written in the same language say then you can use a lot more of your tooling to uh look into",
    "start": "1172440",
    "end": "1179440"
  },
  {
    "text": "that I'm glad you mentioned that there's better ways to do it than just doing it in squel because of course this is go time not stored procedure time that's a",
    "start": "1179440",
    "end": "1187120"
  },
  {
    "text": "separate podcast coming soon starring John Calhoun John you're going to do a all about Sequel and stored procedures",
    "start": "1187120",
    "end": "1193559"
  },
  {
    "text": "podcast is that right or have I just made that up I hope nobody signed me up for it without letting me know",
    "start": "1193559",
    "end": "1198760"
  },
  {
    "text": "oh he's really going to do it some of these problems are interesting to me because it seems like people are approaching them from different angles",
    "start": "1198760",
    "end": "1205360"
  },
  {
    "text": "one of the more recent react Frameworks was remix and I believe they're trying to solve some of those similar problems",
    "start": "1205360",
    "end": "1211240"
  },
  {
    "text": "of not knowing what data you need sort of further down in your react application I don't know if either of",
    "start": "1211240",
    "end": "1216919"
  },
  {
    "text": "you have used it at all but essentially if I recall correctly it's supposed to be something where like your entire page",
    "start": "1216919",
    "end": "1222320"
  },
  {
    "text": "has like a small section that's like a a panel or widget or something that needs to load some data it tries to make it so",
    "start": "1222320",
    "end": "1228000"
  },
  {
    "text": "that starts loading the data like on its own API request if it needs to without like it being a waterfall where like the",
    "start": "1228000",
    "end": "1233480"
  },
  {
    "text": "first one goes and the second one goes and the third one goes and it's really slow so like I've seen people approach",
    "start": "1233480",
    "end": "1238520"
  },
  {
    "text": "this problem like you had said Ben where you need to kind of know what data the entire page needs whereas sometimes they're just like well let's just not",
    "start": "1238520",
    "end": "1245080"
  },
  {
    "text": "know what the entire page needs and let each thing load its own data and there's pros and cons to both I'm sure but you",
    "start": "1245080",
    "end": "1251320"
  },
  {
    "text": "know just seeing different approaches to similar problems I think one of the cool things with graphql is that in theory",
    "start": "1251320",
    "end": "1257120"
  },
  {
    "text": "and and I'm not I'm not not enough of a client developer to know how much this works out in practice but in theory you",
    "start": "1257120",
    "end": "1262200"
  },
  {
    "text": "can kind of roll that all up statically where each of your components may need something different and you just kind of",
    "start": "1262200",
    "end": "1267520"
  },
  {
    "text": "roll that all up to the top statically and then you can just send it to the server in one go you don't need to do anything clever to make that efficient",
    "start": "1267520",
    "end": "1274240"
  },
  {
    "text": "yeah it probably comes down to organizational things even like if you've got a little team that are working on something you don't want them",
    "start": "1274240",
    "end": "1280600"
  },
  {
    "text": "to have a dependency if you can help it one of the advantages I can see to graphql is that it does empower the",
    "start": "1280600",
    "end": "1287720"
  },
  {
    "text": "client so that means if there is another team that's consuming your API they are somewhat more free to run ahead at their",
    "start": "1287720",
    "end": "1295000"
  },
  {
    "text": "own speed you know there doesn't have to be a conversation even but then there's",
    "start": "1295000",
    "end": "1300440"
  },
  {
    "text": "tradeoffs to that and one of the things that I was interested in is now anybody can really build any kind of query is it",
    "start": "1300440",
    "end": "1308640"
  },
  {
    "text": "possible that they're going to ask for something that's very sort of inefficient and it's going to be quite",
    "start": "1308640",
    "end": "1314159"
  },
  {
    "text": "an expensive thing to figure out whereas if obviously if it was a restful service where you or if you were building an",
    "start": "1314159",
    "end": "1320159"
  },
  {
    "text": "endpoint dedicated to a specific task you could really Ultra sort of optimize that do we lose some performance in the",
    "start": "1320159",
    "end": "1326960"
  },
  {
    "text": "generalization of this yeah so when loading data for a a single page app",
    "start": "1326960",
    "end": "1332600"
  },
  {
    "text": "right you can load the data at the top level and pass it down through the tree or you could have components own their",
    "start": "1332600",
    "end": "1339960"
  },
  {
    "text": "individual queries and and load a subset of the data but to get to your your question you can construct queries that",
    "start": "1339960",
    "end": "1347520"
  },
  {
    "text": "are very expensive to resolve and so we're talking about client and server",
    "start": "1347520",
    "end": "1353960"
  },
  {
    "text": "separation but as a client developer even with graphql you you can't be",
    "start": "1353960",
    "end": "1359159"
  },
  {
    "text": "ignorant of what the server is doing and vice versa as a server you can't be ignorant what the client's doing so with",
    "start": "1359159",
    "end": "1365000"
  },
  {
    "text": "that power that you get also comes great responsibility that's essentially your message to them right you can see the",
    "start": "1365000",
    "end": "1372480"
  },
  {
    "text": "the queries that the client is sending to the server and exactly the data that they want and so it does provide an",
    "start": "1372480",
    "end": "1379039"
  },
  {
    "text": "opportunity to optimize for returning that data as well yeah that's a good point because of course if if you even",
    "start": "1379039",
    "end": "1385520"
  },
  {
    "text": "if it's inefficient like you'd be able to run a report assuming you're instrumenting this stuff you'd be able",
    "start": "1385520",
    "end": "1391080"
  },
  {
    "text": "to find out what where are the inefficiencies and then optimize it after without changing the interface",
    "start": "1391080",
    "end": "1397120"
  },
  {
    "text": "yeah and then another consideration is protecting a graphql server against denal of service because if anyone can",
    "start": "1397120",
    "end": "1403720"
  },
  {
    "text": "construct any query then that can get very expensive and so one strategy for",
    "start": "1403720",
    "end": "1409679"
  },
  {
    "text": "that is is calculating the complexity for a query and not allowing queries Beyond a certain complexity another",
    "start": "1409679",
    "end": "1416000"
  },
  {
    "text": "strategy which we use is we have an entire list of all the queries that clients are allowed to send to our",
    "start": "1416000",
    "end": "1422080"
  },
  {
    "text": "server called the safe list and if it's not on the safe list our server will not execute it ah so that's sort of like",
    "start": "1422080",
    "end": "1427720"
  },
  {
    "text": "you've locked that down after you let the clients free to build and ask for what they need and then lock it that's",
    "start": "1427720",
    "end": "1434880"
  },
  {
    "text": "right yeah we We statically Gather those across the mobile client across all the backend services and so we have a",
    "start": "1434880",
    "end": "1440919"
  },
  {
    "text": "complete list which allows us to do other very interesting things since we know exactly what data is being asked",
    "start": "1440919",
    "end": "1446440"
  },
  {
    "text": "for everywhere we also use graphql for communication between our services do you really so not just client client but",
    "start": "1446440",
    "end": "1452799"
  },
  {
    "text": "service service yeah is that to have the self-similarity and the familiarity and all the dog fooding benefits of or is it",
    "start": "1452799",
    "end": "1460600"
  },
  {
    "text": "because you then also get to only select the data that you need like do you use those features of graphql too yeah yeah",
    "start": "1460600",
    "end": "1467360"
  },
  {
    "text": "no it's both and we use uh Federation to make it so the client doesn't need to",
    "start": "1467360",
    "end": "1473480"
  },
  {
    "text": "know what services What fields come from back and services take advantage of that as well so the services expose one API",
    "start": "1473480",
    "end": "1483159"
  },
  {
    "text": "and we do have access controls where we'll lock down a field so that it's",
    "start": "1483159",
    "end": "1490960"
  },
  {
    "text": "just allowed to be used by other services but then we also have access controls where it's exposed in the",
    "start": "1490960",
    "end": "1497080"
  },
  {
    "text": "public API so so when you have like a list of these are the accepted queries",
    "start": "1497080",
    "end": "1503080"
  },
  {
    "text": "how does that work with a public API where like presumably people would think they can kind of generate whatever query",
    "start": "1503080",
    "end": "1508600"
  },
  {
    "text": "they want is it sort of just in the docks of like you can't do certain things I think in that case you'd want",
    "start": "1508600",
    "end": "1513720"
  },
  {
    "text": "to go with the complexity approach and and have some sort of uh perhaps like",
    "start": "1513720",
    "end": "1520240"
  },
  {
    "text": "budget when the users making requests and if they go through their complexity budget you start rejecting their",
    "start": "1520240",
    "end": "1527120"
  },
  {
    "text": "requests it'd be interesting to see some of the approaches you're also rewarding people for keeping the queries simpler",
    "start": "1527120",
    "end": "1534200"
  },
  {
    "text": "if it's a complexity budget that's actually quite an interesting idea when you think about that I'd start to wonder",
    "start": "1534200",
    "end": "1539399"
  },
  {
    "text": "if like you'll see some apis that have rate limits of like this many requests per minute and if they start to have",
    "start": "1539399",
    "end": "1544480"
  },
  {
    "text": "like complexity limits instead of you know you can do as many requests as you want as long as your complexity doesn't",
    "start": "1544480",
    "end": "1549799"
  },
  {
    "text": "reach a certain amount that could be very weird to convey but yeah if you're trying to build an app that figures out",
    "start": "1549799",
    "end": "1556200"
  },
  {
    "text": "how many degrees of of separation between you and Kevin Bacon this was a meme a few years ago which I'm trying to",
    "start": "1556200",
    "end": "1561960"
  },
  {
    "text": "bring back MH you know then that would be expensive complex so you know you",
    "start": "1561960",
    "end": "1567840"
  },
  {
    "text": "maybe can't do it but maybe it's actually not as well like obviously there's recursion going on presumably so",
    "start": "1567840",
    "end": "1573440"
  },
  {
    "text": "if you have the case of like user and friends and let's assume that the",
    "start": "1573440",
    "end": "1578480"
  },
  {
    "text": "friends return a list of users I guess that's the example that we're using so then you can ask for friends of friends",
    "start": "1578480",
    "end": "1586840"
  },
  {
    "text": "and on the server presumably that's just the same method being called twice or",
    "start": "1586840",
    "end": "1592120"
  },
  {
    "text": "the same function being called twice is that right it would be called more than twice I assume because for every friend I would have to call that function oh I",
    "start": "1592120",
    "end": "1598520"
  },
  {
    "text": "meant yeah I meant get friends or the friends function the one that loads the list of friends if you then got friends",
    "start": "1598520",
    "end": "1605000"
  },
  {
    "text": "of friends yeah oh yeah multiple times you're right and exactly what what you're how you're fetching the data",
    "start": "1605000",
    "end": "1610760"
  },
  {
    "text": "depends on the structure of your data right so if the friend has the ID of the",
    "start": "1610760",
    "end": "1615960"
  },
  {
    "text": "friends then if if you only select friend and ID that's going to be much",
    "start": "1615960",
    "end": "1621000"
  },
  {
    "text": "less expensive than if you select the friend name so it actually has to fetch the friend from the database to return",
    "start": "1621000",
    "end": "1628600"
  },
  {
    "text": "the name I mean we're talking about uh the server bit and we could talk a",
    "start": "1628600",
    "end": "1633760"
  },
  {
    "text": "little bit about the mechanics of of like what gql gen is doing if if we wanted I think something that's",
    "start": "1633760",
    "end": "1639760"
  },
  {
    "text": "interesting to mention about gql gen is it's a schema first library and so you",
    "start": "1639760",
    "end": "1646520"
  },
  {
    "text": "write a graph ql schema which is defined in the spec and you point gql gen at",
    "start": "1646520",
    "end": "1652440"
  },
  {
    "text": "that and from that it generates interfaces which have the various methods that uh you're expected to",
    "start": "1652440",
    "end": "1659039"
  },
  {
    "text": "implement so there's a really interesting detail there which I think we should probably shine a light on you",
    "start": "1659039",
    "end": "1664679"
  },
  {
    "text": "say it's there's a schema and that schema describes the API you get pretty",
    "start": "1664679",
    "end": "1669880"
  },
  {
    "text": "good like discoverability with that don't you like you do there's an interactive web client that can connect",
    "start": "1669880",
    "end": "1677120"
  },
  {
    "text": "to the end point and gives you like intellisense you can actually look at the objects like it's kind of",
    "start": "1677120",
    "end": "1682760"
  },
  {
    "text": "self-documenting so it does feel very modern in that sense and that's also",
    "start": "1682760",
    "end": "1688640"
  },
  {
    "text": "great if someone's consuming an API having that at your fingertips that sort of where you have autocomplete and",
    "start": "1688640",
    "end": "1695000"
  },
  {
    "text": "features like that that is going to for sure help and and consuming Services",
    "start": "1695000",
    "end": "1700960"
  },
  {
    "text": "actually I did consumer service that was extremely complicated and essentially was just I feel like they basically",
    "start": "1700960",
    "end": "1707480"
  },
  {
    "text": "dumped their tables through graphql it wasn't there wasn't much design or",
    "start": "1707480",
    "end": "1713080"
  },
  {
    "text": "Nuance to it frankly so that did make it quite difficult to consume that's",
    "start": "1713080",
    "end": "1718600"
  },
  {
    "text": "definitely something people do and something that in writing a client has we've seen some interesting use cases",
    "start": "1718600",
    "end": "1725120"
  },
  {
    "text": "come out of folks on who are using our client on GitHub who I'm like what the",
    "start": "1725120",
    "end": "1730519"
  },
  {
    "text": "heck are you know how the heck did you get the schema like that and it's oh they're using one of those um things",
    "start": "1730519",
    "end": "1736399"
  },
  {
    "text": "that just kind of turns you your database into an API which I think obviously have huge benefits as well they definitely make it a little less",
    "start": "1736399",
    "end": "1742519"
  },
  {
    "text": "clean yeah exactly I think you still have to design your API and so Mark you",
    "start": "1742519",
    "end": "1747799"
  },
  {
    "text": "were saying that you take the schema and then you generate interfaces and things",
    "start": "1747799",
    "end": "1753000"
  },
  {
    "text": "which then makes yeah that that's what gql gen does so you're expected to",
    "start": "1753000",
    "end": "1758880"
  },
  {
    "text": "implement a the interface type and the the struct that you create that",
    "start": "1758880",
    "end": "1765200"
  },
  {
    "text": "implements this interface that's where you can inject all the dependencies into the resolvers if the the resolver",
    "start": "1765200",
    "end": "1772799"
  },
  {
    "text": "functions themselves are methods on the struct um and I also mentioned that when",
    "start": "1772799",
    "end": "1780000"
  },
  {
    "text": "you're at the same level within the query for the most part the fields can",
    "start": "1780000",
    "end": "1786200"
  },
  {
    "text": "be resolved in parallel so they're all being resolved in in different go routines H I think one thing that's",
    "start": "1786200",
    "end": "1791799"
  },
  {
    "text": "worth pointing out here is that because it is a schema first like gql genis schema first and because graphql has a",
    "start": "1791799",
    "end": "1797519"
  },
  {
    "text": "schema that means that this is a typed typed query language where you actually know what all the fields are whereas",
    "start": "1797519",
    "end": "1803720"
  },
  {
    "text": "like when some people are used to like a Json API there's not really like a type structure that's strictly adhered to and",
    "start": "1803720",
    "end": "1810200"
  },
  {
    "text": "sometimes that can be insanely frustrating yeah like I remember working with one API where there was like one",
    "start": "1810200",
    "end": "1815840"
  },
  {
    "text": "field on it and if it had one item to return back it gave you back a string with like the ID but if there was",
    "start": "1815840",
    "end": "1821000"
  },
  {
    "text": "multiple it gave you an array back there was something with a request where you could actually request multiple so if",
    "start": "1821000",
    "end": "1826159"
  },
  {
    "text": "you requested using like an array with just one in it it still just gave you a string back and it was just one of those",
    "start": "1826159",
    "end": "1831240"
  },
  {
    "text": "things that was like who designed this what were you thinking well they're trying to be helpful aren't they they're like they're trying to optimize it's",
    "start": "1831240",
    "end": "1837399"
  },
  {
    "text": "like it's really clever if there's just one it's a string if there's many it's a slice of string like that feels like",
    "start": "1837399",
    "end": "1845039"
  },
  {
    "text": "intelligent in some way I you don't realize that actually yeah I'd rather just have it as an array I built an API",
    "start": "1845039",
    "end": "1851600"
  },
  {
    "text": "once that was just all arrays there weren't any objects and you know if there was only one object it would just",
    "start": "1851600",
    "end": "1857559"
  },
  {
    "text": "have it would be an array with one object in because then you just could write it once you could write an",
    "start": "1857559",
    "end": "1863080"
  },
  {
    "text": "implementation that just looped over this data and it worked for one and multiple so you kind of get that for",
    "start": "1863080",
    "end": "1868440"
  },
  {
    "text": "free but yeah I think you do need to still pay attention to your API design",
    "start": "1868440",
    "end": "1873760"
  },
  {
    "text": "we doubl down on making our graphql schema the the authorative authoritative",
    "start": "1873760",
    "end": "1879679"
  },
  {
    "text": "place for our documentation so attached to each field you can put a doc string attached to each type you can put a dock",
    "start": "1879679",
    "end": "1885960"
  },
  {
    "text": "string and so in our systems if you want to understand kind of the broad data model and how things connect together",
    "start": "1885960",
    "end": "1892039"
  },
  {
    "text": "you go to our composed schema our Federated schema and can read through and and get a pretty good",
    "start": "1892039",
    "end": "1898480"
  },
  {
    "text": "sense we have a linter that enforces that that uh some Doc strings are",
    "start": "1898480",
    "end": "1904600"
  },
  {
    "text": "written and uh also that they have a consistent format Etc one of the nice",
    "start": "1904600",
    "end": "1909960"
  },
  {
    "text": "things about graphql is that it's a fairly opinionated type system I mean",
    "start": "1909960",
    "end": "1915919"
  },
  {
    "text": "you can certainly have a type that's like string or list of string but it's going to encourage you to do the list of",
    "start": "1915919",
    "end": "1922120"
  },
  {
    "text": "string if you design your graphql schema well that's really where you make that decision and where you say okay this",
    "start": "1922120",
    "end": "1928240"
  },
  {
    "text": "might be a list so let's make it a list mhm all right so when it comes to actually working with graphql and this",
    "start": "1928240",
    "end": "1934200"
  },
  {
    "text": "is a go Time Podcast so were there any challenges that you guys experienced that felt like specific to go or or",
    "start": "1934200",
    "end": "1941919"
  },
  {
    "text": "maybe specific to a typed language versus like using JavaScript or something else when using it yeah so I",
    "start": "1941919",
    "end": "1948000"
  },
  {
    "text": "can talk a lot about this so please you know cut me off but I think the first challenge we had which will",
    "start": "1948000",
    "end": "1953880"
  },
  {
    "text": "contextualize the client that we wrote is that you know the great thing about graphql is it's a typed language and the",
    "start": "1953880",
    "end": "1960279"
  },
  {
    "text": "great thing about go is that it's a typed language but you got to make sure those types match if you make a request",
    "start": "1960279",
    "end": "1966639"
  },
  {
    "text": "and the server thinks it's one thing or the the graphql schema says it's one thing but the client thinks it's another",
    "start": "1966639",
    "end": "1971679"
  },
  {
    "text": "thing that's no good and initially this was a challenge for us because we would have people like write queries and if",
    "start": "1971679",
    "end": "1979279"
  },
  {
    "text": "you don't manage to unit test it quite right you put it into production and it's just like sorry that's the wrong type and it's like we're using a typed",
    "start": "1979279",
    "end": "1985320"
  },
  {
    "text": "language we should be able to do better and so the client that that we wrote gen client it uses your queries and it uses",
    "start": "1985320",
    "end": "1991919"
  },
  {
    "text": "the schema and it generates the correct types for you so if you make a query",
    "start": "1991919",
    "end": "1997039"
  },
  {
    "text": "that's incorrect you can do that but at compile time it's going to say sorry we checked it against the schema there's no",
    "start": "1997039",
    "end": "2002919"
  },
  {
    "text": "field called n it's maybe you met name and it's going to the right go types for",
    "start": "2002919",
    "end": "2008279"
  },
  {
    "text": "you so you can't if you thought name for some reason was a was an integer it's going to just give you a string and it's",
    "start": "2008279",
    "end": "2014120"
  },
  {
    "text": "going to give you a go type with a string in it and so that's something that I think go is really powerful",
    "start": "2014120",
    "end": "2020399"
  },
  {
    "text": "especially using go and using Code gen and using a really type well typed language you get the typing all the way",
    "start": "2020399",
    "end": "2027360"
  },
  {
    "text": "if you're using a library like gql gen where you've got good typing on the server and you're using a libr library",
    "start": "2027360",
    "end": "2033440"
  },
  {
    "text": "like gen client where you've got good typing on the client your type are checked all the way through from the",
    "start": "2033440",
    "end": "2038559"
  },
  {
    "text": "client to the server if you do everything right and I think that's really powerful so and they both share",
    "start": "2038559",
    "end": "2044279"
  },
  {
    "text": "the same schema right the source of the code gen is the same data so see because",
    "start": "2044279",
    "end": "2049800"
  },
  {
    "text": "there's another advantage to this it's not just I mean it is what you've said really but as a sort of iteration",
    "start": "2049800",
    "end": "2056280"
  },
  {
    "text": "development Engineering Process like having that confidence of being able to first of all have discussions in an API",
    "start": "2056280",
    "end": "2064760"
  },
  {
    "text": "schema is very powerful when you're you know front-end Engineers often have a very different kind of uh perspective to",
    "start": "2064760",
    "end": "2072240"
  },
  {
    "text": "backend Engineers that can happen but this is a common place that you are you know speaking the same language really",
    "start": "2072240",
    "end": "2078118"
  },
  {
    "text": "and you can kind of collaborate much better there but then not only that when you once you then generate all the types",
    "start": "2078119",
    "end": "2084398"
  },
  {
    "text": "you faced with like errors sometimes and you have to fix them and broken tests",
    "start": "2084399",
    "end": "2089878"
  },
  {
    "text": "and things and it's like sounds bad but actually that is exactly what you want what's happening is the compiler",
    "start": "2089879",
    "end": "2095960"
  },
  {
    "text": "sometimes is just point pointing exactly to all the places where need that need your attention now and that is an asset",
    "start": "2095960",
    "end": "2101920"
  },
  {
    "text": "to have yeah and it really helps when you're when you're evolving your API if you want to add a field that's pretty",
    "start": "2101920",
    "end": "2107839"
  },
  {
    "text": "safe but if you want to remove a field or change the type of a field you have to check that nobody's using it in a way",
    "start": "2107839",
    "end": "2114160"
  },
  {
    "text": "that's going to break and that's the kind of thing that if you have a typed server you have a typed client you just",
    "start": "2114160",
    "end": "2119599"
  },
  {
    "text": "change your schema and you see where you get compiler errors all the way across the stack and ideally you know that",
    "start": "2119599",
    "end": "2125520"
  },
  {
    "text": "tells you everything everything you're going to need to fix yeah especially if you're using typescript in the front end as well so that you you literally have",
    "start": "2125520",
    "end": "2133160"
  },
  {
    "text": "types there too I mean yeah really yeah and a lot of the inspiration for Gen client came from what clients that",
    "start": "2133160",
    "end": "2139720"
  },
  {
    "text": "already exist in in typescript that'll similarly generate your typescript types from your schema and then just use them",
    "start": "2139720",
    "end": "2146480"
  },
  {
    "text": "it's good in it I'm not I'm usually not a Fickle man this episode's completely convinced me to now use graphql on the",
    "start": "2146480",
    "end": "2153440"
  },
  {
    "text": "server to be honest I think I never comprehended ended I thought it was buil",
    "start": "2153440",
    "end": "2158520"
  },
  {
    "text": "writing SQL and writing join queries and things like this in the back end I think",
    "start": "2158520",
    "end": "2163800"
  },
  {
    "text": "that gets confusing because you can do that but like you see all these Services out there that are like this is a",
    "start": "2163800",
    "end": "2169000"
  },
  {
    "text": "database with graphql built in or we'll turn your postrest database into a graphql client or server like it is kind",
    "start": "2169000",
    "end": "2175240"
  },
  {
    "text": "of confusing at times because you're not really sure what it's doing or how that's working or whether that's what you'd want which makes it a little bit",
    "start": "2175240",
    "end": "2182319"
  },
  {
    "text": "challenging yeah that can't be great that sort of General approach can't be",
    "start": "2182319",
    "end": "2188880"
  },
  {
    "text": "great maybe on small projects or frankly any small project you can get away with",
    "start": "2188880",
    "end": "2194480"
  },
  {
    "text": "a lot like it's a great tip if you want to write really robust software don't",
    "start": "2194480",
    "end": "2199920"
  },
  {
    "text": "make it popular just don't have that many users if you can I'm very good at that it's actually where I shine and",
    "start": "2199920",
    "end": "2206560"
  },
  {
    "text": "actually like the whole idea of graphql where you can ask only for the fields you need in some cases that is just",
    "start": "2206560",
    "end": "2213440"
  },
  {
    "text": "negligible the difference that that really makes in in reality so it's very interesting to hear about",
    "start": "2213440",
    "end": "2218920"
  },
  {
    "text": "the other benefits and things that would apply even in smaller projects like you said the fields like knowing that you",
    "start": "2218920",
    "end": "2225520"
  },
  {
    "text": "don't have to request them all I've definitely built some smaller apis where sending the entire resource back just",
    "start": "2225520",
    "end": "2231880"
  },
  {
    "text": "doesn't matter in the in the end of the day so it's like that's not a real benefit for me so it really just becomes",
    "start": "2231880",
    "end": "2237760"
  },
  {
    "text": "it you know trying to figure out what makes the most sense even with that I think the big benefit is really it's not",
    "start": "2237760",
    "end": "2244079"
  },
  {
    "text": "that you can skip requesting name like whatever it's you know an extra 10 bytes or whatever it's that you can provide",
    "start": "2244079",
    "end": "2251240"
  },
  {
    "text": "those linkages to friends and friends of friends and friends of friends of friends and you can decide exactly how",
    "start": "2251240",
    "end": "2256960"
  },
  {
    "text": "far down that you want to go I think the relationships and that's that's why it's called graphql is like your user is",
    "start": "2256960",
    "end": "2263319"
  },
  {
    "text": "maybe a graph you can think of the schema actually as a graph and you can decide exactly how far down that graph",
    "start": "2263319",
    "end": "2269119"
  },
  {
    "text": "you want to Traverse and that's really where it's like you definitely don't want to include friends of friends of",
    "start": "2269119",
    "end": "2274640"
  },
  {
    "text": "friends in every API request like that would really explode but you can get away with including it in your schema",
    "start": "2274640",
    "end": "2281400"
  },
  {
    "text": "because the client decides okay I don't actually I really just needed the [Music]",
    "start": "2281400",
    "end": "2299280"
  },
  {
    "text": "friends practical AI is a weekly podcast that's making artificial intelligence",
    "start": "2299280",
    "end": "2304960"
  },
  {
    "text": "practical productive and accessible to everyone if the world of AI affects your",
    "start": "2304960",
    "end": "2310640"
  },
  {
    "text": "daily life this show is for you from the practitioner wanting to keep up with the latest tools and Trends Spacey is really",
    "start": "2310640",
    "end": "2318400"
  },
  {
    "text": "a library that lets you put together a whole NP pipeline of the different things you might want to do um and",
    "start": "2318400",
    "end": "2324200"
  },
  {
    "text": "extract from your text you know you're not just interested in predicting one thing you might want to read in your text you want to find the individual",
    "start": "2324200",
    "end": "2330280"
  },
  {
    "text": "sentences you want to find out which concepts are mentioned in the text like which person names organizations dates",
    "start": "2330280",
    "end": "2337800"
  },
  {
    "text": "and then you also maybe want to predict something about like what's in the text to the AI curious trying to understand",
    "start": "2337800",
    "end": "2343960"
  },
  {
    "text": "the concepts at play and their implications on our lives would you rather be spending your time improving",
    "start": "2343960",
    "end": "2350359"
  },
  {
    "text": "your blue score by 0.1 on French to English or would you rather have a",
    "start": "2350359",
    "end": "2356359"
  },
  {
    "text": "breakthrough on kind of that underresourced language that by the way has 350 million people using it in",
    "start": "2356359",
    "end": "2364599"
  },
  {
    "text": "underprivileged areas around the world here's your expert hosts my name is",
    "start": "2364599",
    "end": "2369640"
  },
  {
    "text": "Chris Benson I am a principal AI strategist at Lockheed Martin and with me as always is Daniel whack a data",
    "start": "2369640",
    "end": "2376720"
  },
  {
    "text": "scientist with s International hey how's it going today Daniel please listen to a recent episode And subscribe today we'd",
    "start": "2376720",
    "end": "2383480"
  },
  {
    "text": "love to have you as a listener so I guess I'm kind of curious on both of your opinions since you've",
    "start": "2383480",
    "end": "2389960"
  },
  {
    "text": "built some stuff with this typically when I'm helping somebody learn to to build an API or do something like that",
    "start": "2389960",
    "end": "2396000"
  },
  {
    "text": "my general advice is to start with just a simple rest Json API that returns some data mostly because if you only have one",
    "start": "2396000",
    "end": "2403000"
  },
  {
    "text": "client and that's like you're writing that one client and you know exactly what data it needs you can kind of tailor it around that now granted at",
    "start": "2403000",
    "end": "2410040"
  },
  {
    "text": "some point it might get so complex that it you need something else but generally speaking I'm I'm kind of sort of an",
    "start": "2410040",
    "end": "2415560"
  },
  {
    "text": "advocate of keeping it as simple as possible especially when you're learning because you can't learn 17 things at the",
    "start": "2415560",
    "end": "2420720"
  },
  {
    "text": "same time it's just not possible and graphql from what I've seen at least is not that it's overly complex but it's",
    "start": "2420720",
    "end": "2427160"
  },
  {
    "text": "also not like pick it up in 30 seconds and and move on with it it's going to take a little bit of learning so I guess",
    "start": "2427160",
    "end": "2433920"
  },
  {
    "text": "what is your advice on sort of when to get started with it and then can you share a little bit about like you how",
    "start": "2433920",
    "end": "2439319"
  },
  {
    "text": "you guys got started resources that sort of thing I would say get started when you start to find rest frustrating when",
    "start": "2439319",
    "end": "2445920"
  },
  {
    "text": "you find it's like h i now I have to go change all these six different apis because I wanted to change one page or",
    "start": "2445920",
    "end": "2452440"
  },
  {
    "text": "now I have to figure out who's using that API because I wanted to make a change to it and it's used by 16",
    "start": "2452440",
    "end": "2458319"
  },
  {
    "text": "different pages and who knows what they're doing with it when you start to see those problems that's when it's like",
    "start": "2458319",
    "end": "2464200"
  },
  {
    "text": "okay graphql is is going to help you if you're not seeing those problems yet if you're in a small enough project that",
    "start": "2464200",
    "end": "2470560"
  },
  {
    "text": "you can just build your rest API and build your client and keep it all in your head at once and update everything",
    "start": "2470560",
    "end": "2476400"
  },
  {
    "text": "you need to then that's fine I think graphql is going to be unnecessary complexity for you but it's really when",
    "start": "2476400",
    "end": "2482640"
  },
  {
    "text": "you see those problems with rest and that's really what we did at Academy quite a few years ago now is we we did",
    "start": "2482640",
    "end": "2489640"
  },
  {
    "text": "have this huge rest API and we did have things with 50 different fields and it",
    "start": "2489640",
    "end": "2495280"
  },
  {
    "text": "was a huge pain to to go look through okay how do I I want to remove this field cuz it's expensive and only a few",
    "start": "2495280",
    "end": "2501720"
  },
  {
    "text": "of the clients need it but which ones is it and that's really when we started to pick up graphql and when it really",
    "start": "2501720",
    "end": "2507280"
  },
  {
    "text": "helped us a lot yeah and I was going to say we also has some tooling or had some tooling for typing rest responses and so",
    "start": "2507280",
    "end": "2516319"
  },
  {
    "text": "you know if you find yourself building out that kind of tooling perhaps uh using something that's going to you know",
    "start": "2516319",
    "end": "2522560"
  },
  {
    "text": "Assist you has that already built in is a good option yeah that makes a lot of sense and like earlier I mentioned like the stripe API and I if I understand",
    "start": "2522560",
    "end": "2529160"
  },
  {
    "text": "correctly they have a ton of tooling sort of built around like what they do but at the same time I think some of",
    "start": "2529160",
    "end": "2534359"
  },
  {
    "text": "these companies had to invent stuff back when like graphql didn't exist so it's like how do we make this work knowing",
    "start": "2534359",
    "end": "2540200"
  },
  {
    "text": "that's not an option would you use graphql if you didn't have relational data in any way you still would use it",
    "start": "2540200",
    "end": "2547160"
  },
  {
    "text": "now yeah cool simple as that that's that's all the answer you get Matt just",
    "start": "2547160",
    "end": "2552520"
  },
  {
    "text": "yes no fair play no it's just a bullant answer I like it maybe you could answer with an in a string now since we're",
    "start": "2552520",
    "end": "2558559"
  },
  {
    "text": "talking about types I don't know I think mostly like most data is somehow relational like there are relationships",
    "start": "2558559",
    "end": "2565440"
  },
  {
    "text": "between your data if there's not like what are you what is the data even there are certainly exceptions but I think if",
    "start": "2565440",
    "end": "2572680"
  },
  {
    "text": "you genuinely have like just like your entire data is like one big table maybe",
    "start": "2572680",
    "end": "2577920"
  },
  {
    "text": "you don't need graphql but I think almost everybody has some kind of relations and you'll find Value in",
    "start": "2577920",
    "end": "2583680"
  },
  {
    "text": "graphql with this I guess one question I have related to that is if you're releasing a public API like GitHub is an",
    "start": "2583680",
    "end": "2590119"
  },
  {
    "text": "example of one that's a graphql API do you feel that releasing it as a graphql API makes it harder to get adoption in",
    "start": "2590119",
    "end": "2597880"
  },
  {
    "text": "the sense that like people are kind of there's a certain subset of developers who know how a rest API works and",
    "start": "2597880",
    "end": "2603680"
  },
  {
    "text": "they're kind of comfortable with that then you throw something new in the mix and they're just like I'm not going to use that API cuz it is that new thing",
    "start": "2603680",
    "end": "2610319"
  },
  {
    "text": "yeah I suppose there is also a bit a bit more cognitive effort to actually deciding what data you need and",
    "start": "2610319",
    "end": "2615880"
  },
  {
    "text": "discovering that whereas it's much easier to just say get this thing but in",
    "start": "2615880",
    "end": "2621079"
  },
  {
    "text": "reality like what difference does that really make yeah I mean I think there's there's",
    "start": "2621079",
    "end": "2627200"
  },
  {
    "text": "a risk of that for anything you know I think cql is easiest to use when you're working with it you know when you're",
    "start": "2627200",
    "end": "2634040"
  },
  {
    "text": "you're working with the people who are writing a client there are certainly public graphql apis but I think when you are kind of both",
    "start": "2634040",
    "end": "2641000"
  },
  {
    "text": "sides that's where it's really the easiest to adopt yeah and I think writing graphql query is pretty",
    "start": "2641000",
    "end": "2647400"
  },
  {
    "text": "intuitive and so you know Matt you you mentioned tooling where you can write a",
    "start": "2647400",
    "end": "2654160"
  },
  {
    "text": "query select a field and actually that tooling will pop up this is the type and here are all the other fields that it",
    "start": "2654160",
    "end": "2660000"
  },
  {
    "text": "has and the documentation for those fields so it does help with discoverability quite a bit as well and",
    "start": "2660000",
    "end": "2665720"
  },
  {
    "text": "I think think that that's a great place to start learning graphql is uh just try",
    "start": "2665720",
    "end": "2670760"
  },
  {
    "text": "writing some queries it's a pretty easy entry into it and graphql org a really",
    "start": "2670760",
    "end": "2677119"
  },
  {
    "text": "good overview of just if you want to learn just more High Lev how graphql",
    "start": "2677119",
    "end": "2682559"
  },
  {
    "text": "works as a spec graph q.org learn you can run through those pages and get a",
    "start": "2682559",
    "end": "2689640"
  },
  {
    "text": "pretty good high Lev overview all right we're getting sort of near the end of the episode so is there anything else",
    "start": "2689640",
    "end": "2697040"
  },
  {
    "text": "you guys would like to talk about before we move on to unpopular opinions related to graphql please yeah I know I know I",
    "start": "2697040",
    "end": "2703240"
  },
  {
    "text": "think this pretty good uh we had on the list to mention Federation I mean something I I can mention you know right",
    "start": "2703240",
    "end": "2709599"
  },
  {
    "text": "quick around that is uh you had asked what advantage graphql is giving us at KH Academy and we moved from a a",
    "start": "2709599",
    "end": "2718000"
  },
  {
    "text": "monolith written in Python to go services and Federation was was key in",
    "start": "2718000",
    "end": "2724160"
  },
  {
    "text": "in being able to do that safely and effectively what do you mean by Federation in this case yeah so this is",
    "start": "2724160",
    "end": "2730480"
  },
  {
    "text": "where different Services own different fields and you send your query to a Gateway instead of a single backend",
    "start": "2730480",
    "end": "2736800"
  },
  {
    "text": "service it will figure out which services to contact to connect to to get",
    "start": "2736800",
    "end": "2742880"
  },
  {
    "text": "that data and Stitch together and return it so we treated python as just any other service and then when we started",
    "start": "2742880",
    "end": "2750040"
  },
  {
    "text": "building out uh the GH Services we built some tooling that uh would send requests",
    "start": "2750040",
    "end": "2756119"
  },
  {
    "text": "to both Python and go it would compare them it would send the old requests to the client it would tell us if there are any differences so that's cool yeah yeah",
    "start": "2756119",
    "end": "2764520"
  },
  {
    "text": "it worked really well the Federation is one of those things that I've looked at because it looks cool but I've never had",
    "start": "2764520",
    "end": "2771079"
  },
  {
    "text": "a project I've been working on that's like at the scale where this makes sense so it hasn't been something I've",
    "start": "2771079",
    "end": "2776720"
  },
  {
    "text": "actually dove into so it's it's interesting to see that that worked for you guys like for you know your particular use case of migrating all",
    "start": "2776720",
    "end": "2783960"
  },
  {
    "text": "right let's move on to the unpopular [Music]",
    "start": "2783960",
    "end": "2789149"
  },
  {
    "text": "opinions opion I actually think you should probably",
    "start": "2789760",
    "end": "2795680"
  },
  {
    "text": "leave un",
    "start": "2796319",
    "end": "2800440"
  },
  {
    "text": "opinion all right Mark and Ben do you have any unpopular opinions you would like to share with us sure yeah so my",
    "start": "2801359",
    "end": "2810000"
  },
  {
    "text": "unpopular opinion so I think manually grinding through work is a underrated engineering strategy computers are great",
    "start": "2810000",
    "end": "2817480"
  },
  {
    "text": "at automating tasks that you know how to do and you have to know how to do something really well manually I think",
    "start": "2817480",
    "end": "2823480"
  },
  {
    "text": "before you can effectively a automate it so you see this in product development",
    "start": "2823480",
    "end": "2828559"
  },
  {
    "text": "where startups will just have staff members doing tasks instead of their API",
    "start": "2828559",
    "end": "2835440"
  },
  {
    "text": "you know automatically doing things uh you know as they're building things out but it also applies I think you know to",
    "start": "2835440",
    "end": "2841599"
  },
  {
    "text": "other areas of engineering where you know it could be that you know perhaps a task isn't even worth automating or I",
    "start": "2841599",
    "end": "2848440"
  },
  {
    "text": "really like the approach of kind of assisted automation where you let the",
    "start": "2848440",
    "end": "2853839"
  },
  {
    "text": "computer do what it's really good at doing at perhaps finding places in code to update but then you just go ahead and",
    "start": "2853839",
    "end": "2860040"
  },
  {
    "text": "use your ability as a person to actually make the updates so yeah I think that's",
    "start": "2860040",
    "end": "2865680"
  },
  {
    "text": "a really interesting one because it didn't come intuitively to me that's something I had to learn o over years of",
    "start": "2865680",
    "end": "2872200"
  },
  {
    "text": "getting it wrong basically I definitely have an instinct to jump too soon into automating things because the process of",
    "start": "2872200",
    "end": "2879000"
  },
  {
    "text": "solving that problem is quite nice and rewarding anyway especially if you're you know cuz we're kind of programmers",
    "start": "2879000",
    "end": "2884680"
  },
  {
    "text": "aren't we we like problem solving and things but you're so right and the point you made about you should be able to",
    "start": "2884680",
    "end": "2891040"
  },
  {
    "text": "like manually do it first enough to know it inside out before you automate",
    "start": "2891040",
    "end": "2896400"
  },
  {
    "text": "applies to lots of things I think too and has so many benefits I think the learning of it the knowledge you get",
    "start": "2896400",
    "end": "2903079"
  },
  {
    "text": "from that I feel like you're going to have a hard time for when being unpopular I feel like you're going to have a lot of people agreeing with you",
    "start": "2903079",
    "end": "2909079"
  },
  {
    "text": "yeah okay especially developers cuz I feel like developers make that mistake a lot of like wanting to automate things",
    "start": "2909079",
    "end": "2915680"
  },
  {
    "text": "yeah really the the manual grind like sometimes I'll need to make updates",
    "start": "2915680",
    "end": "2921200"
  },
  {
    "text": "across all of our services and there's literally 200 things to update and",
    "start": "2921200",
    "end": "2927000"
  },
  {
    "text": "figuring out how to do that in an efficient way automation is not always",
    "start": "2927000",
    "end": "2932720"
  },
  {
    "text": "the answer some aspect of you know automating some aspect of it usually as",
    "start": "2932720",
    "end": "2938359"
  },
  {
    "text": "part of the solution but not you know working on a tool to do that yeah just specific thing that you'll only be doing",
    "start": "2938359",
    "end": "2944280"
  },
  {
    "text": "once mhm so I make video courses that like teach programming stuff and at",
    "start": "2944280",
    "end": "2949480"
  },
  {
    "text": "first it was really tempting to build my own sort of admin page that I'd upload a video and it would you know do all these things for me like create a thumbnail",
    "start": "2949480",
    "end": "2956280"
  },
  {
    "text": "change all the stuff and do it all and I kind of fought the urg to do that because that was like I'd have to interact with a couple apis and do some",
    "start": "2956280",
    "end": "2962960"
  },
  {
    "text": "other things and what I found was that in reality going to the website that I host the videos on and just bulk uploading you",
    "start": "2962960",
    "end": "2969280"
  },
  {
    "text": "know 50 videos by dragging and dropping with my mouse and then running ffmpeg on my own computer to generate thumbnails",
    "start": "2969280",
    "end": "2975720"
  },
  {
    "text": "and just basically naming them 01 02 03 and just uploading those ended up taking",
    "start": "2975720",
    "end": "2981599"
  },
  {
    "text": "a little bit of time but it was way less time than it would have cost me to like actually go develop all the stuff that I",
    "start": "2981599",
    "end": "2987240"
  },
  {
    "text": "really didn't need because it wasn't like I had a platform that people were all hosting stuff on right now it's",
    "start": "2987240",
    "end": "2992599"
  },
  {
    "text": "completely different if you host a platform but you know it's just you doing something it's like is this really worth it and it's really hard to say no",
    "start": "2992599",
    "end": "2998920"
  },
  {
    "text": "because that sounds so much fun you're like oh man I'm going to get to use this API it's going to be fun it's such a good example that is John because that",
    "start": "2998920",
    "end": "3005440"
  },
  {
    "text": "is even now I'm thinking definitely automate that one even just that description of it in the in the story",
    "start": "3005440",
    "end": "3012400"
  },
  {
    "text": "where you're saying you learned this lesson even then I'm still like yeah that would be great that would be such a",
    "start": "3012400",
    "end": "3018319"
  },
  {
    "text": "that's Prime for automation that but Mark would you resist that urge yes yeah",
    "start": "3018319",
    "end": "3023920"
  },
  {
    "text": "Boolean answer yes [Laughter] cool all right Ben while you're here do",
    "start": "3023920",
    "end": "3030559"
  },
  {
    "text": "you have an unpopular opinion this may also not be that unpopular but I think that go really needs Union types disj",
    "start": "3030559",
    "end": "3037760"
  },
  {
    "text": "like proper disjoint Union I think generics are just like making this really obvious I think it's especially",
    "start": "3037760",
    "end": "3045119"
  },
  {
    "text": "obvious cuz they kind of halfway added a union types in except they only exist in",
    "start": "3045119",
    "end": "3050359"
  },
  {
    "text": "type parameters and it's kind of more of an untagged Union I think enums are a case of this this I think people using",
    "start": "3050359",
    "end": "3057720"
  },
  {
    "text": "pointers as nullable when you don't need a pointer you just need something that's nullable I think there there are so many",
    "start": "3057720",
    "end": "3064240"
  },
  {
    "text": "cases where it's just like we really could just use Union types and I know they want to take the time to add it",
    "start": "3064240",
    "end": "3070359"
  },
  {
    "text": "right which I I support you want them but I think it's really getting getting to be time for anyone that doesn't know",
    "start": "3070359",
    "end": "3076200"
  },
  {
    "text": "what is a union type Ben so a union type is when you have something like it could be an INT or it could be a string and I",
    "start": "3076200",
    "end": "3084240"
  },
  {
    "text": "think there are lot of sort of distinctions of there are slightly different ways you can think about unions but that's the basic idea is it's",
    "start": "3084240",
    "end": "3090839"
  },
  {
    "text": "something it could be an INT or it could be a string it doesn't necessarily have to satisfy any interface it's just it's",
    "start": "3090839",
    "end": "3097119"
  },
  {
    "text": "one of that list I was going to say if your unpopular opinion was that your ISP you have is very good yeah well no my",
    "start": "3097119",
    "end": "3105760"
  },
  {
    "text": "unpopular opinion is I might need to switch to the terrible ISP whose uh service everyone hates but I feel like",
    "start": "3105760",
    "end": "3112040"
  },
  {
    "text": "there's lots of potential isps for that I love mine I'm one of those I have a",
    "start": "3112040",
    "end": "3118720"
  },
  {
    "text": "gigabit fiber symmetrical it's life changing magical yeah sadly we could not",
    "start": "3118720",
    "end": "3125680"
  },
  {
    "text": "get that at this apartment it's worth like running your own fiber around the streets if you can Ben I wish yeah no",
    "start": "3125680",
    "end": "3134119"
  },
  {
    "text": "one would move it for a while I think if you knew someone nearby that had fiber just for this while just while do the",
    "start": "3134119",
    "end": "3140160"
  },
  {
    "text": "podcast just get a really long sorry I have to stop stop with this now can I tell you story about this Matt yeah very",
    "start": "3140160",
    "end": "3147119"
  },
  {
    "text": "related so when we my wife and I were building our house I lived with my parents and their internet was terrible",
    "start": "3147119",
    "end": "3153400"
  },
  {
    "text": "and I later found out it was because their one DSL line runs underground and apparently there's like water getting in",
    "start": "3153400",
    "end": "3158680"
  },
  {
    "text": "so when it rained it would just be like a really bad connection so apparently it's something I don't know the exacts",
    "start": "3158680",
    "end": "3164559"
  },
  {
    "text": "but it was something with like the union with it and everything it's hard to get them to prioritize this job and they can't send anybody else out to do it so",
    "start": "3164559",
    "end": "3171319"
  },
  {
    "text": "they're just it was kind of limited on options and somehow at one point they they got somebody to come out to run a",
    "start": "3171319",
    "end": "3176440"
  },
  {
    "text": "new line but they like it went into a neighbor farmer field so it's like just",
    "start": "3176440",
    "end": "3181920"
  },
  {
    "text": "sort of dangling from a pole there and then it like ran through his field but like their internet was like twice as",
    "start": "3181920",
    "end": "3187079"
  },
  {
    "text": "fast so it was like great for a while and then one day the farmer came through to actually chop or you to actually plow",
    "start": "3187079",
    "end": "3192480"
  },
  {
    "text": "his field or something or whatever he was doing with cutting stuff and he didn't know that line was there so all of a sudden the internet just went out",
    "start": "3192480",
    "end": "3198680"
  },
  {
    "text": "and then that when they came to check it basically what had happened was he had went over the line and just sliced the crap out of it and they had to go back",
    "start": "3198680",
    "end": "3205319"
  },
  {
    "text": "the old line at that point and they like never sent anybody else out to fix anything or do anything with my parents internet oh that's not man it just",
    "start": "3205319",
    "end": "3211359"
  },
  {
    "text": "shocked me cuz I'm like who thought this was a good idea to just run a line through some Farmers field and not tell",
    "start": "3211359",
    "end": "3216640"
  },
  {
    "text": "anybody yeah amazing I mean yeah I love that story that's going to be me and me",
    "start": "3216640",
    "end": "3222319"
  },
  {
    "text": "and running my fiber you know yeah yeah yeah it's going to work great until somebody runs over it just avoid the",
    "start": "3222319",
    "end": "3227880"
  },
  {
    "text": "Fest Fields you'd just be in the streets I think though like that' be good yeah that' work I have decent internet at my",
    "start": "3227880",
    "end": "3234839"
  },
  {
    "text": "place but if you get outside of like the small town that I'm in where there's a bunch of farms and Fields and stuff like that when I was growing up it was awful",
    "start": "3234839",
    "end": "3241960"
  },
  {
    "text": "options everywhere like satellite internet was sort of an option but like you always had like these bandwidth caps that were so low that it was really hard",
    "start": "3241960",
    "end": "3248280"
  },
  {
    "text": "to use and everything else and it's like slowly gotten better whereas like now they have something where they like have",
    "start": "3248280",
    "end": "3255119"
  },
  {
    "text": "a big tower and if you're like within direct line of sight or if you can get like a receiver within line of sight of it it's not terrible but otherwise",
    "start": "3255119",
    "end": "3261760"
  },
  {
    "text": "you're just kind of out of luck it sounds sounds like you're living a dystopia like a Netflix special where",
    "start": "3261760",
    "end": "3268760"
  },
  {
    "text": "way you describe this it's unusual village with really modern internet surrounded by you know what I mean I",
    "start": "3268760",
    "end": "3274839"
  },
  {
    "text": "feel like this we could sell this to Netflix I think the only reason the internet is like modern in this small",
    "start": "3274839",
    "end": "3280280"
  },
  {
    "text": "town is because there's so few people that they like have C Comcast has cable set up and there's just not enough",
    "start": "3280280",
    "end": "3287079"
  },
  {
    "text": "people for it to actually be slow no one's using it so it's so fast yeah pretty much it's just",
    "start": "3287079",
    "end": "3292559"
  },
  {
    "text": "ADSL I have an uncle who worked at com cast like not like directly he like worked on the lines and stuff but he",
    "start": "3292559",
    "end": "3298119"
  },
  {
    "text": "used to joke that whenever I moved back to this town that the internet got half as fast yeah because I'm like one of the",
    "start": "3298119",
    "end": "3304079"
  },
  {
    "text": "high heaviest users that's what he would claim like he was just joking but yeah it's interesting different places I knew",
    "start": "3304079",
    "end": "3310280"
  },
  {
    "text": "your uncle was joking I think I'd like him maybe can I have his number that'd",
    "start": "3310280",
    "end": "3315720"
  },
  {
    "text": "be weird wouldn't it I don't know I mean it'd be more weird for him I think if you just called him yeah he's like what",
    "start": "3315720",
    "end": "3321000"
  },
  {
    "text": "is this longdistance call about are you John Calhoun's uncle yeah it's me m Matt",
    "start": "3321000",
    "end": "3328599"
  },
  {
    "text": "yeah what would he do should we do it now I don't think that's a good idea",
    "start": "3328599",
    "end": "3334520"
  },
  {
    "text": "okay well we need to do a next week we'll get ready we'll do a new regular section phoning someone's uncle and",
    "start": "3334520",
    "end": "3341680"
  },
  {
    "text": "we'll just phone up an uncle and see what's going on uncles usually have the most interesting views and some very",
    "start": "3341680",
    "end": "3347960"
  },
  {
    "text": "unpopular opinions I was going to say based on where I live I have no idea",
    "start": "3347960",
    "end": "3353079"
  },
  {
    "text": "what type of unpopular opinions I might get from uncles so that could be scary",
    "start": "3353079",
    "end": "3358400"
  },
  {
    "text": "in your dystopian Netflix Village pretty much all right Mark Ben thank you for",
    "start": "3358400",
    "end": "3365280"
  },
  {
    "text": "joining us Matt thank you for hosting with me pleasure sorry for the uh poor intro it's all right we'll get it right",
    "start": "3365280",
    "end": "3371960"
  },
  {
    "text": "sometime n it's better like this right thanks for having us yeah thank you so much yeah thanks for having",
    "start": "3371960",
    "end": "3379119"
  },
  {
    "text": "us that is go time for this week immutable databases your thoughts let us",
    "start": "3380839",
    "end": "3387240"
  },
  {
    "text": "know in the comments there's a direct link to the discussion thread at the top of your show notes everyone on this",
    "start": "3387240",
    "end": "3393440"
  },
  {
    "text": "episode will be notified of what you have to say so it's a great place for follow-ups clarifications links to",
    "start": "3393440",
    "end": "3398799"
  },
  {
    "text": "related projects stuff like that if you're a first time listener welcome don't forget to subscribe at go time. FM",
    "start": "3398799",
    "end": "3405799"
  },
  {
    "text": "we are also in your favorite podcast app just search for go time if this is your 10th listen your H 100th your thousandth",
    "start": "3405799",
    "end": "3411760"
  },
  {
    "text": "whatever order of magnitude you have with us we'd love a review and recommendation special thanks to fle for",
    "start": "3411760",
    "end": "3417960"
  },
  {
    "text": "CD ending for us all these years to breakmaster cylinder for the Fresh Beats and to you for listening we appreciate",
    "start": "3417960",
    "end": "3423880"
  },
  {
    "text": "you next week Matt and John are joined by Ed Welch to discuss logging logging and more logging yeah a lot of logging",
    "start": "3423880",
    "end": "3430400"
  },
  {
    "text": "going on there that's one to look forward to next time on go",
    "start": "3430400",
    "end": "3436240"
  },
  {
    "text": "[Music]",
    "start": "3436660",
    "end": "3443749"
  },
  {
    "text": "time love",
    "start": "3443799",
    "end": "3448480"
  }
]