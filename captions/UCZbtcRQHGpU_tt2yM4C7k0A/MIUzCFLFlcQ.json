[
  {
    "text": "that's a good question i'm not a big fan",
    "start": "240",
    "end": "2159"
  },
  {
    "text": "of the three argument slice operation i",
    "start": "2159",
    "end": "5040"
  },
  {
    "text": "think there should be a",
    "start": "5040",
    "end": "6720"
  },
  {
    "text": "slice to length and slice to capacity",
    "start": "6720",
    "end": "8480"
  },
  {
    "text": "operations as separate things",
    "start": "8480",
    "end": "11200"
  },
  {
    "text": "and i lost that argument many years ago",
    "start": "11200",
    "end": "13360"
  },
  {
    "text": "when we first edit it and i'm still",
    "start": "13360",
    "end": "15759"
  },
  {
    "text": "angry about it",
    "start": "15759",
    "end": "17840"
  },
  {
    "text": "so you would have had two so you could",
    "start": "17840",
    "end": "20000"
  },
  {
    "text": "either specify the capacity or the",
    "start": "20000",
    "end": "22240"
  },
  {
    "text": "length is that right right",
    "start": "22240",
    "end": "24720"
  },
  {
    "text": "yeah i need to think about that you",
    "start": "24720",
    "end": "26480"
  },
  {
    "text": "often don't want to modify the capacity",
    "start": "26480",
    "end": "28720"
  },
  {
    "text": "you're generally just slicing because of",
    "start": "28720",
    "end": "30080"
  },
  {
    "text": "the length and it's only occasionally",
    "start": "30080",
    "end": "31679"
  },
  {
    "text": "when you need to talk about the capacity",
    "start": "31679",
    "end": "33520"
  },
  {
    "text": "yeah in which case you don't need to",
    "start": "33520",
    "end": "34960"
  },
  {
    "text": "talk about the length or you could do",
    "start": "34960",
    "end": "36480"
  },
  {
    "text": "that as a separate slice",
    "start": "36480",
    "end": "38160"
  },
  {
    "text": "it makes the language a little bit",
    "start": "38160",
    "end": "39200"
  },
  {
    "text": "simpler",
    "start": "39200",
    "end": "40160"
  },
  {
    "text": "but yeah otherwise it's not a huge deal",
    "start": "40160",
    "end": "42239"
  },
  {
    "text": "it doesn't come up one way or the other",
    "start": "42239",
    "end": "43760"
  },
  {
    "text": "either all that much yeah no but that's",
    "start": "43760",
    "end": "46480"
  },
  {
    "text": "a nice answer",
    "start": "46480",
    "end": "48000"
  },
  {
    "text": "rob do you have an answer for this what",
    "start": "48000",
    "end": "49680"
  },
  {
    "text": "would you",
    "start": "49680",
    "end": "50480"
  },
  {
    "text": "like to get rid of uh it's really tough",
    "start": "50480",
    "end": "52719"
  },
  {
    "text": "uh",
    "start": "52719",
    "end": "53520"
  },
  {
    "text": "nothing significant it's easy to answer",
    "start": "53520",
    "end": "55600"
  },
  {
    "text": "this once we land generics right there's",
    "start": "55600",
    "end": "57520"
  },
  {
    "text": "a lot of stuff that we would write",
    "start": "57520",
    "end": "59039"
  },
  {
    "text": "differently if we had generics a lot of",
    "start": "59039",
    "end": "61199"
  },
  {
    "text": "the built-in functions would be just a",
    "start": "61199",
    "end": "64080"
  },
  {
    "text": "generic function yeah so i think that's",
    "start": "64080",
    "end": "66720"
  },
  {
    "text": "probably maybe it's a cop-out but that's",
    "start": "66720",
    "end": "68640"
  },
  {
    "text": "my answer no but that's a good point and",
    "start": "68640",
    "end": "71040"
  },
  {
    "text": "like with generics that's the",
    "start": "71040",
    "end": "73280"
  },
  {
    "text": "interesting thing isn't it you almost",
    "start": "73280",
    "end": "75119"
  },
  {
    "text": "wish you could just go back and rewrite",
    "start": "75119",
    "end": "76799"
  },
  {
    "text": "the standard libraries and to be honest",
    "start": "76799",
    "end": "78799"
  },
  {
    "text": "there's even code in the standard",
    "start": "78799",
    "end": "80080"
  },
  {
    "text": "library that doesn't now look very go",
    "start": "80080",
    "end": "82400"
  },
  {
    "text": "because it was written so early",
    "start": "82400",
    "end": "84400"
  },
  {
    "text": "so that's sort of always the curse you",
    "start": "84400",
    "end": "86720"
  },
  {
    "text": "bear really with the backwards",
    "start": "86720",
    "end": "87920"
  },
  {
    "text": "compatibility promise but",
    "start": "87920",
    "end": "89920"
  },
  {
    "text": "everyone's grateful i think for that",
    "start": "89920",
    "end": "91920"
  },
  {
    "text": "promise",
    "start": "91920",
    "end": "93040"
  },
  {
    "text": "any of this anyone else got anything",
    "start": "93040",
    "end": "94479"
  },
  {
    "text": "that they'd removed from go if they were",
    "start": "94479",
    "end": "96560"
  },
  {
    "text": "allowed to samia what would you do i'll",
    "start": "96560",
    "end": "99200"
  },
  {
    "text": "mention a few range variable loop",
    "start": "99200",
    "end": "101040"
  },
  {
    "text": "capture so this is just bites all of us",
    "start": "101040",
    "end": "103439"
  },
  {
    "text": "when we write a closure inside a range",
    "start": "103439",
    "end": "104799"
  },
  {
    "text": "loop that may still be fixable depends i",
    "start": "104799",
    "end": "107520"
  },
  {
    "text": "think the the confusion around mill",
    "start": "107520",
    "end": "109759"
  },
  {
    "text": "pointers inside an interface and that",
    "start": "109759",
    "end": "112000"
  },
  {
    "text": "not being nil itself like the whole",
    "start": "112000",
    "end": "113600"
  },
  {
    "text": "question of reuse of nil in interfaces",
    "start": "113600",
    "end": "116079"
  },
  {
    "text": "just creates a lot of confusion i wonder",
    "start": "116079",
    "end": "117680"
  },
  {
    "text": "if we could have done better there",
    "start": "117680",
    "end": "119200"
  },
  {
    "text": "and buff io scanner i don't like apis",
    "start": "119200",
    "end": "123280"
  },
  {
    "text": "where you know you run a loop and then",
    "start": "123280",
    "end": "124640"
  },
  {
    "text": "you have to check whether the loop",
    "start": "124640",
    "end": "125920"
  },
  {
    "text": "exited because of an error because you",
    "start": "125920",
    "end": "127439"
  },
  {
    "text": "always forget to check",
    "start": "127439",
    "end": "128800"
  },
  {
    "text": "and i'm sensitive to this because back",
    "start": "128800",
    "end": "130959"
  },
  {
    "text": "when i used to write c plus and i was on",
    "start": "130959",
    "end": "132879"
  },
  {
    "text": "the maps team i had a loop i had a",
    "start": "132879",
    "end": "135120"
  },
  {
    "text": "similar api where i forgot to check for",
    "start": "135120",
    "end": "136720"
  },
  {
    "text": "an error and i dropped half a million",
    "start": "136720",
    "end": "138959"
  },
  {
    "text": "places from the map index",
    "start": "138959",
    "end": "141440"
  },
  {
    "text": "because i forgot to check that error so",
    "start": "141440",
    "end": "142800"
  },
  {
    "text": "when i when we introduced software skin",
    "start": "142800",
    "end": "144080"
  },
  {
    "text": "i'm like no no no",
    "start": "144080",
    "end": "145360"
  },
  {
    "text": "that will create really terrible bugs",
    "start": "145360",
    "end": "147360"
  },
  {
    "text": "but again lost that argument did that",
    "start": "147360",
    "end": "149599"
  },
  {
    "text": "just wipe out like loads of restaurants",
    "start": "149599",
    "end": "152720"
  },
  {
    "text": "you know no one noticed so i think if",
    "start": "152720",
    "end": "154400"
  },
  {
    "text": "you drop half a million random places",
    "start": "154400",
    "end": "156640"
  },
  {
    "text": "from you know the location index you're",
    "start": "156640",
    "end": "158319"
  },
  {
    "text": "unlikely to hit stuff that's very",
    "start": "158319",
    "end": "159599"
  },
  {
    "text": "important oh wow there you go",
    "start": "159599",
    "end": "161360"
  },
  {
    "text": "but i stayed up late and fixed it yeah",
    "start": "161360",
    "end": "163680"
  },
  {
    "text": "just typed them all back in from the",
    "start": "163680",
    "end": "165200"
  },
  {
    "text": "phone book it's very nice if you",
    "start": "165200",
    "end": "167200"
  },
  {
    "text": "you got to then you regenerate the index",
    "start": "167200",
    "end": "169280"
  },
  {
    "text": "yes okay fine yeah sure yeah they're",
    "start": "169280",
    "end": "172080"
  },
  {
    "text": "good ones i would actually probably like",
    "start": "172080",
    "end": "174000"
  },
  {
    "text": "to get rid of the new keyword and just",
    "start": "174000",
    "end": "176560"
  },
  {
    "text": "have the curly brace way",
    "start": "176560",
    "end": "180400"
  }
]