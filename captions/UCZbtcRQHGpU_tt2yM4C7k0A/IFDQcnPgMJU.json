[
  {
    "text": "there's RR which is basically a reverse debugger it helps you put bugs into your",
    "start": "80",
    "end": "5960"
  },
  {
    "text": "program what's a reverse debugger sounds like fuzzing debugger uh that goes",
    "start": "5960",
    "end": "11160"
  },
  {
    "text": "forward you basically say step and it goes forward one instruction right all right yeah yeah well a reverse debugger",
    "start": "11160",
    "end": "17359"
  },
  {
    "text": "allows you to say step back and go back in time to what happened before Oh time",
    "start": "17359",
    "end": "23000"
  },
  {
    "text": "traveling debugger exactly that sounds amazing it is it's incredible it's like",
    "start": "23000",
    "end": "28119"
  },
  {
    "text": "a fantastic bit of engineering",
    "start": "28119",
    "end": "31960"
  },
  {
    "text": "this episode is brought to you by our friends at source graph they recently launched a new feature called code",
    "start": "34440",
    "end": "39840"
  },
  {
    "text": "insights now you can track what really matters to you and your team in your codebase transform your code into a",
    "start": "39840",
    "end": "44960"
  },
  {
    "text": "quable database to create customizable visual dashboards in seconds here's how engineering teams are using Code",
    "start": "44960",
    "end": "51039"
  },
  {
    "text": "insights they can track migrations adoption and deprecation across the code base they can detect and track versions",
    "start": "51039",
    "end": "57800"
  },
  {
    "text": "of languages or packages they they can ensure the removal of security vulnerabilities like log 4J can",
    "start": "57800",
    "end": "63840"
  },
  {
    "text": "understand code by team track code smells and health and visualize configurations and services here's what",
    "start": "63840",
    "end": "70439"
  },
  {
    "text": "the engineering manager at presy has to say about this new feature quote as we've grown so has a need to better",
    "start": "70439",
    "end": "75759"
  },
  {
    "text": "track and communicate our progress and our goals across the engineering team and the broader company with code",
    "start": "75759",
    "end": "81479"
  },
  {
    "text": "insights our data and migration tracking is accurate across our entire code base and our engineers and our managers and",
    "start": "81479",
    "end": "88720"
  },
  {
    "text": "shift out of man ual spreadsheets and spend more time working on code end quote the next step is to see how other",
    "start": "88720",
    "end": "96079"
  },
  {
    "text": "teams are using this awesome feature head to about. source.com",
    "start": "96079",
    "end": "102119"
  },
  {
    "text": "code-in insights this link will be in the show notes again about. source.com",
    "start": "102119",
    "end": "108600"
  },
  {
    "text": "code-in [Music]",
    "start": "108600",
    "end": "118149"
  },
  {
    "text": "insights",
    "start": "118840",
    "end": "121840"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "124960",
    "end": "131640"
  },
  {
    "text": "from around the go Community we record live on Tuesdays at 300 p.m. us Eastern Time subscribe at youtube.com/ changelog",
    "start": "131640",
    "end": "139920"
  },
  {
    "text": "so you don't miss it and don't forget to follow the show on Twitter at gotime FM special thanks to our partners at fastly",
    "start": "139920",
    "end": "146080"
  },
  {
    "text": "for shipping our shows super fast to wherever you listen check them out at f.com okay here we",
    "start": "146080",
    "end": "153040"
  },
  {
    "text": "[Music]",
    "start": "153040",
    "end": "157540"
  },
  {
    "text": "go good evening morning and afternoon everyone and welcome to the episode",
    "start": "158720",
    "end": "164840"
  },
  {
    "text": "about static Checkers hello to Matt my co-host for this episode how are you doing hello to",
    "start": "164840",
    "end": "171440"
  },
  {
    "text": "you Natalie also I'm good thanks how are you great great I enjoy all the plans we",
    "start": "171440",
    "end": "176560"
  },
  {
    "text": "have in the background hello Matan Our Guest for today welcome hello and thank you how",
    "start": "176560",
    "end": "183519"
  },
  {
    "text": "are you doing I'm doing pretty well it's kind of late but yeah it's been a long day but I'm doing good and you are",
    "start": "183519",
    "end": "189280"
  },
  {
    "text": "joining us from I'm joining you from Kaa from balim you can see the sea from that",
    "start": "189280",
    "end": "194959"
  },
  {
    "text": "window over there if it wasn't so dark outside oh wow so all the way from Israel and I see you don't have plants",
    "start": "194959",
    "end": "201920"
  },
  {
    "text": "in the background instead you have Ducks which you probably use for duck debugging as one does and you have two",
    "start": "201920",
    "end": "208599"
  },
  {
    "text": "kind of one is why and one is red for everybody who's listening but not watching so this is the one who says",
    "start": "208599",
    "end": "213680"
  },
  {
    "text": "just force push the commits and the white one is like no no run I want more test there are three of them one of them",
    "start": "213680",
    "end": "219680"
  },
  {
    "text": "is a panda duck ah oh yeah Panda duck oh yeah it does look a bit like a devil and",
    "start": "219680",
    "end": "225959"
  },
  {
    "text": "the blue one is just in case you're in the blue team which is kind of decent code not too tested but not force push",
    "start": "225959",
    "end": "231519"
  },
  {
    "text": "something yeah it seemed to balance out the red one we had a an offsite recently at where I work and it was in Amsterdam",
    "start": "231519",
    "end": "238959"
  },
  {
    "text": "and the venir that we got everyone was a little rubber duck each kind of tailored",
    "start": "238959",
    "end": "245680"
  },
  {
    "text": "to each person so wow yeah it's very nice gift but it's very useful for rubber ducking like you mentioned",
    "start": "245680",
    "end": "251599"
  },
  {
    "text": "Natalie it sounds very thoughtful yeah yeah it is well it makes some better programmers really I don't know why do",
    "start": "251599",
    "end": "257680"
  },
  {
    "text": "they teach that at University do they teach rubber ducking I teach it when I ta students and sometimes I have to help",
    "start": "257680",
    "end": "264520"
  },
  {
    "text": "them with their homework then basically I tell I have them you know just explain",
    "start": "264520",
    "end": "269840"
  },
  {
    "text": "the problem to me and through the process of them explaining it they understand what the problem is and then",
    "start": "269840",
    "end": "275720"
  },
  {
    "text": "I tell them well next time you should try that with a rubber",
    "start": "275720",
    "end": "281280"
  },
  {
    "text": "duck just leave it there don't elaborate just your reception hours here's a",
    "start": "281360",
    "end": "287000"
  },
  {
    "text": "rubber duck speak to it good idea you could just have that in your office a weird thing I learned about rubber ducks",
    "start": "287000",
    "end": "293320"
  },
  {
    "text": "is that if you actually put them in a place with water like a bath you want them not to have the hole for that",
    "start": "293320",
    "end": "299240"
  },
  {
    "text": "allows them to squeak because this is how they get moldy oh really why cuz water goes in yeah and it's not very",
    "start": "299240",
    "end": "305639"
  },
  {
    "text": "well with ventilated so if you if you do plan to bring it into a W room then make",
    "start": "305639",
    "end": "311039"
  },
  {
    "text": "sure that it does not squeak so if you're a programmer and things aren't going well and you're trying to rub a duck and you're crying a lot keep the",
    "start": "311039",
    "end": "318240"
  },
  {
    "text": "tears away from the duck because could go moldy this would be step 10 yeah I",
    "start": "318240",
    "end": "324080"
  },
  {
    "text": "can think of a few other things you should do before that but it can be on the extended list of things you might",
    "start": "324080",
    "end": "329120"
  },
  {
    "text": "want to do yeah good point tissues hair dryer loads of ways",
    "start": "329120",
    "end": "334960"
  },
  {
    "text": "to taking a walk oh yeah that is a good hack actually if you're stuck on",
    "start": "335039",
    "end": "340520"
  },
  {
    "text": "something go for a walk or think about something else how many times do you hear people say just in the shower or",
    "start": "340520",
    "end": "347120"
  },
  {
    "text": "even like asleep like sometimes I was able to solve these problems is taking a break is important and that's really",
    "start": "347120",
    "end": "353800"
  },
  {
    "text": "counterintuitive because you feel like you have to work on it to solve it don't you yeah yeah but you you feel pressured",
    "start": "353800",
    "end": "361039"
  },
  {
    "text": "somehow usually and that pressure prevents you from thinking clearly and",
    "start": "361039",
    "end": "366360"
  },
  {
    "text": "taking a walk is usually a bit hard because you need to force yourself to stop thinking of it and focus on",
    "start": "366360",
    "end": "373680"
  },
  {
    "text": "meditation or walking or nature but then your mind has a chance to process",
    "start": "373680",
    "end": "378840"
  },
  {
    "text": "whatever it is you were doing and maybe come up with new ideas trying to see what's a good way of tying that to the",
    "start": "378840",
    "end": "385120"
  },
  {
    "text": "subject today but I have yet to find a good one so in a less smooth transition",
    "start": "385120",
    "end": "391039"
  },
  {
    "text": "no jokes Matan you are a PhD candidate at the techan in Israel and you're",
    "start": "391039",
    "end": "397520"
  },
  {
    "text": "researching metaprogramming and static analysis you have worked in all sorts of interesting companies and now you're",
    "start": "397520",
    "end": "405080"
  },
  {
    "text": "back in the academy so tell us a little bit what what did you study what did you do afterwards why going back to studying",
    "start": "405080",
    "end": "412680"
  },
  {
    "text": "after being in the industry so for my bachelor's degree I did Computer Engineering because I had this let's",
    "start": "412680",
    "end": "419560"
  },
  {
    "text": "call it romantic idea that I should understand how a computer works from you know physics to software wow and it was",
    "start": "419560",
    "end": "428759"
  },
  {
    "text": "very cool and I learned a lot and I like my degree a lot but it made it tougher",
    "start": "428759",
    "end": "434039"
  },
  {
    "text": "than it might have was would have been because I'm a programmer I did did",
    "start": "434039",
    "end": "439440"
  },
  {
    "text": "software engineering before I started studying so I was already good at that and adding something that was completely",
    "start": "439440",
    "end": "444639"
  },
  {
    "text": "new and different like e um electrical engineering and all the circuit and you",
    "start": "444639",
    "end": "449919"
  },
  {
    "text": "know physics and that stuff it made it significantly harder but I still liked it a lot and I think that I learned a",
    "start": "449919",
    "end": "455879"
  },
  {
    "text": "lot and after my degree I worked at like startup that my friends did at the time",
    "start": "455879",
    "end": "462879"
  },
  {
    "text": "and then I decided that I needed to experience life at a big corporate so I went to Google and I spent some time",
    "start": "462879",
    "end": "471120"
  },
  {
    "text": "making search features but eventually I decided that being a Code Monkey is fun",
    "start": "471120",
    "end": "477680"
  },
  {
    "text": "and I and I like that but but I also want to experience research and see what like life an academy is like and what",
    "start": "477680",
    "end": "486360"
  },
  {
    "text": "they're doing in like graduate degrees so I went back and for my masters and",
    "start": "486360",
    "end": "492599"
  },
  {
    "text": "finished that and now I'm in my PhD and I like it I don't know if I'm going to",
    "start": "492599",
    "end": "497759"
  },
  {
    "text": "do this forever but for now this is fun and I get to you know play in my sandbox and make sand castles and toy around",
    "start": "497759",
    "end": "505159"
  },
  {
    "text": "with my own like toy ideas which is what I like about academics you mentioned code monkey and I have to make the joke",
    "start": "505159",
    "end": "511520"
  },
  {
    "text": "now because I still feel overdue from the the less than smooth transition from before have you tried being code gopher",
    "start": "511520",
    "end": "520399"
  },
  {
    "text": "St fun so what was your Master's research topic so my Master's research",
    "start": "520440",
    "end": "527399"
  },
  {
    "text": "was making a programming language uh it was in programming language design what",
    "start": "527399",
    "end": "532680"
  },
  {
    "text": "my programming language did was it took you know like slideshows and it I wanted",
    "start": "532680",
    "end": "539920"
  },
  {
    "text": "to add animation and I wanted to basically make a language that describes what the animation is what the motion on",
    "start": "539920",
    "end": "547000"
  },
  {
    "text": "the screen is I liked it it was fun working on it but let's just say that its main purpose was to get me a",
    "start": "547000",
    "end": "552920"
  },
  {
    "text": "master's degree and that it didn't turn out to be especially usable it had a",
    "start": "552920",
    "end": "559320"
  },
  {
    "text": "couple of really cool ideas for example the idea was that I could build a big",
    "start": "559320",
    "end": "565440"
  },
  {
    "text": "animation from basic parts and that if I wanted to make a change in the animation",
    "start": "565440",
    "end": "571640"
  },
  {
    "text": "as anyone who ever used PowerPoint and animations using the animation pain",
    "start": "571640",
    "end": "576800"
  },
  {
    "text": "knows making it is fine you can add the animations but if you want to make a change like in the middle if you want to",
    "start": "576800",
    "end": "582040"
  },
  {
    "text": "push something in the middle there then basically you have to start over and sync it all up to what you were doing uh",
    "start": "582040",
    "end": "589440"
  },
  {
    "text": "before and I wanted it to be able to tell it you know add this thing in the middle and calculate everything",
    "start": "589440",
    "end": "596920"
  },
  {
    "text": "according to this change so I had like a few cute ideas in there of like making",
    "start": "596920",
    "end": "602160"
  },
  {
    "text": "it like a physical system of Springs where you can add a spring and everything basically reacts based on the",
    "start": "602160",
    "end": "609519"
  },
  {
    "text": "change you've made and it worked and it was nice but it was not especially it was not a production system let's put it",
    "start": "609519",
    "end": "616120"
  },
  {
    "text": "that way because it had no tests I actually did have tests it's just that basically you had to think like me in",
    "start": "616120",
    "end": "623360"
  },
  {
    "text": "order to use it and think like me at that very specific time of me writing it",
    "start": "623360",
    "end": "628440"
  },
  {
    "text": "so how important is that to you then because you talk about like you like being in the sandbox building sand",
    "start": "628440",
    "end": "633560"
  },
  {
    "text": "castles how much of that is anchored back to something that could be practical or useful well that's a good",
    "start": "633560",
    "end": "640360"
  },
  {
    "text": "question so my thinking is that I wanted to be anchored back to something that is",
    "start": "640360",
    "end": "646440"
  },
  {
    "text": "practical and useful right but I'm okay if it's not I'm okay going off into the Wilderness and exploring and finding out",
    "start": "646440",
    "end": "653519"
  },
  {
    "text": "things and if it turns out that they're not impactful and like they don't make money then that's okay too ideally in",
    "start": "653519",
    "end": "661399"
  },
  {
    "text": "like in my dreams then I want to go out and make something that everybody would know and use and like be important and",
    "start": "661399",
    "end": "668680"
  },
  {
    "text": "and useful and stuff but I'm okay with it not being and it's basically taking a chance and not knowing how it's going to",
    "start": "668680",
    "end": "676240"
  },
  {
    "text": "turn out kind of like startup attitude really has that and being able to fail",
    "start": "676240",
    "end": "681959"
  },
  {
    "text": "and having that freedom to fail is quite important gives you that extra permission almost to do things that",
    "start": "681959",
    "end": "688680"
  },
  {
    "text": "other otherwise people might not have chance to do yeah so like in one sense I think startup culture is is about being",
    "start": "688680",
    "end": "696160"
  },
  {
    "text": "small in agile and being able to push yourself into a a niche that a bigger",
    "start": "696160",
    "end": "702279"
  },
  {
    "text": "company just wouldn't fit into because they can't be flexible enough to just to",
    "start": "702279",
    "end": "708800"
  },
  {
    "text": "think about it that way to allocate resource for that thing but on the other hand like I think that startups always",
    "start": "708800",
    "end": "716000"
  },
  {
    "text": "think in terms of MVPs and like making usable things and making products where",
    "start": "716000",
    "end": "721639"
  },
  {
    "text": "in academics what you want to do is always write a paper you want to have",
    "start": "721639",
    "end": "727440"
  },
  {
    "text": "like an experiment results data that you can tell other academics about and",
    "start": "727440",
    "end": "734480"
  },
  {
    "text": "usually in order to tell other people about what you're doing you don't need to build the full product you don't need",
    "start": "734480",
    "end": "739760"
  },
  {
    "text": "to have users you don't need to do any of that you just need to make your specific experiment and write it up well",
    "start": "739760",
    "end": "747760"
  },
  {
    "text": "enough so that other people find it clear and interesting and that's it that",
    "start": "747760",
    "end": "753440"
  },
  {
    "text": "sounds a lot like blogging about fun projects that you have it's blogging on steroids it's blogging with a lot of",
    "start": "753440",
    "end": "759959"
  },
  {
    "text": "formality added and that's why you know science communication where scientist",
    "start": "759959",
    "end": "766120"
  },
  {
    "text": "blog that's a thing that's happening like academics usually love to write",
    "start": "766120",
    "end": "771240"
  },
  {
    "text": "like that's what they do in their day-to-day they usually good at it and they make blogs and academic Twitter for",
    "start": "771240",
    "end": "778160"
  },
  {
    "text": "example is a thing oh but amazing is it good yeah if you're interested in that",
    "start": "778160",
    "end": "784760"
  },
  {
    "text": "sort of thing have you been tweeting about static analysis tools so or static",
    "start": "784760",
    "end": "791920"
  },
  {
    "text": "analysis in general or wait maybe we can start with saying what is a static analysis so static analysis is basically",
    "start": "791920",
    "end": "801000"
  },
  {
    "text": "what we want to do is figure out certain properties about code and a property",
    "start": "801000",
    "end": "807320"
  },
  {
    "text": "could be like its most basic thing does this program have a bug or like does",
    "start": "807320",
    "end": "814120"
  },
  {
    "text": "this program succeed and we want to do all that statically then that means",
    "start": "814120",
    "end": "819560"
  },
  {
    "text": "without actually running the program because running the program might have side effects it might do something that",
    "start": "819560",
    "end": "826399"
  },
  {
    "text": "we don't want to do right now it might take a long time like it's we just don't want to run it yet the program might not",
    "start": "826399",
    "end": "832519"
  },
  {
    "text": "be even finished we can't run it and we still want to know things about it so static analysis can",
    "start": "832519",
    "end": "839440"
  },
  {
    "text": "be anything from where this function is called to like is this program written",
    "start": "839440",
    "end": "847160"
  },
  {
    "text": "the correct style which is something that's not that big of a problem with go because we have like go format which is",
    "start": "847160",
    "end": "854600"
  },
  {
    "text": "supposedly also like a static analysis tool but other uh languages have things",
    "start": "854600",
    "end": "859800"
  },
  {
    "text": "like linters which tell you that well your indentation is incorrect here and",
    "start": "859800",
    "end": "865360"
  },
  {
    "text": "that's also a thing that happens but static anal can Al enable can also be a",
    "start": "865360",
    "end": "871880"
  },
  {
    "text": "part of refactoring where you want to rename a method and you want the IDE to find out where all the calls to this",
    "start": "871880",
    "end": "879120"
  },
  {
    "text": "method are and use static analysis to find that yeah right click refactor",
    "start": "879120",
    "end": "885230"
  },
  {
    "text": "[Music]",
    "start": "885230",
    "end": "893720"
  },
  {
    "text": "exactly this episode is brought to you by our friends at Square Millions Square",
    "start": "893720",
    "end": "899160"
  },
  {
    "text": "sellers use a square app Marketplace to discover and install apps they rely on daily to run their businesses and the",
    "start": "899160",
    "end": "905720"
  },
  {
    "text": "way you get your app there is by becoming a square app partner let me tell you how this works as a square app",
    "start": "905720",
    "end": "912680"
  },
  {
    "text": "partner you can offer and monetize your apps directly to square sellers in the app Marketplace to millions of sellers",
    "start": "912680",
    "end": "920000"
  },
  {
    "text": "you can Leverage The Square platform to build robust e-commerce websites smart payment Integrations and custom",
    "start": "920000",
    "end": "926240"
  },
  {
    "text": "solutions for millions of businesses and here's the best part you get to keep 100% of Revenue while you grow Square",
    "start": "926240",
    "end": "933920"
  },
  {
    "text": "collects a 0% cut from your sales for the first year or your first 100 square referred sellers that way you can focus",
    "start": "933920",
    "end": "941040"
  },
  {
    "text": "on building and growing your Square customer base and you get to set your own pricing models you also get a ton of",
    "start": "941040",
    "end": "947440"
  },
  {
    "text": "support from Square you get access to Square's technical team using slack you get insights into the performance of",
    "start": "947440",
    "end": "953360"
  },
  {
    "text": "your app on the app Marketplace and of course you get direct access to new product launches and all this begins at",
    "start": "953360",
    "end": "960319"
  },
  {
    "text": "changel log.com Square again changel log.com",
    "start": "960319",
    "end": "965480"
  },
  {
    "text": "[Music]",
    "start": "965480",
    "end": "971510"
  },
  {
    "text": "[Music]",
    "start": "974790",
    "end": "982319"
  },
  {
    "text": "Square static analysis must be easier on typed languages then that are strictly",
    "start": "982319",
    "end": "988600"
  },
  {
    "text": "typed versus languages that are Dynamic that have heavy runtime element is that",
    "start": "988600",
    "end": "994199"
  },
  {
    "text": "true oh yes definitely because type checking is also a type of static",
    "start": "994199",
    "end": "999800"
  },
  {
    "text": "analysis so basically by having types you're giving the tool a lot more information that it can use and if it",
    "start": "999800",
    "end": "1006480"
  },
  {
    "text": "has more information then it can do more stuff so like one of the basic truth of",
    "start": "1006480",
    "end": "1013040"
  },
  {
    "text": "computer science is that static analysis is impossible you have the halting",
    "start": "1013040",
    "end": "1019040"
  },
  {
    "text": "problem which Alan Turing proved way back when which says that basically you",
    "start": "1019040",
    "end": "1025480"
  },
  {
    "text": "can't make a program that says if another program will Halt and the proof",
    "start": "1025480",
    "end": "1030640"
  },
  {
    "text": "of that is very cool because basically he said that well if I had a program",
    "start": "1030640",
    "end": "1035880"
  },
  {
    "text": "that could do that then I could put itself into it and that would lead to a logical contradiction so we can't have",
    "start": "1035880",
    "end": "1041678"
  },
  {
    "text": "that and a COR to that is the rice theorem which says that you can't prove",
    "start": "1041679",
    "end": "1048000"
  },
  {
    "text": "any interesting property like any interesting as a non-trivial property about a program so you have this strong",
    "start": "1048000",
    "end": "1056000"
  },
  {
    "text": "um theoretical basis that says you can't do that and yet you have this Rich",
    "start": "1056000",
    "end": "1061440"
  },
  {
    "text": "scientific field where like we do that every day it's not a problem just the it",
    "start": "1061440",
    "end": "1066919"
  },
  {
    "text": "turns out that the interesting programs like the ones that real software Engineers write they're simple enough",
    "start": "1066919",
    "end": "1073440"
  },
  {
    "text": "that we can analyze them but what that theorem means is that we can be 100%",
    "start": "1073440",
    "end": "1079559"
  },
  {
    "text": "sure we have to like make some sort of concession we have to have some program",
    "start": "1079559",
    "end": "1084880"
  },
  {
    "text": "where this won't work within our limitations so for every language if you do crazy enough thing with what's it",
    "start": "1084880",
    "end": "1092799"
  },
  {
    "text": "called when you reference well the method by its name instead of like calling it reflection reflection yeah if",
    "start": "1092799",
    "end": "1099679"
  },
  {
    "text": "you have enough reflection if you do enough pointer tricks and see you can always confuse it enough that it doesn't",
    "start": "1099679",
    "end": "1107200"
  },
  {
    "text": "work but that's fine because for like 90% of the programs it does work and that's usually good enough we're talking",
    "start": "1107200",
    "end": "1114080"
  },
  {
    "text": "about static analysis not verification and how does this field tie to your",
    "start": "1114080",
    "end": "1119880"
  },
  {
    "text": "research or what is your research about so what I want to do in my PhD is",
    "start": "1119880",
    "end": "1126039"
  },
  {
    "text": "metaprogramming using static analysis and when I say metaprogramming what I mean is code that write codes or code",
    "start": "1126039",
    "end": "1134600"
  },
  {
    "text": "that changes code so basically refactoring on also refactoring usually",
    "start": "1134600",
    "end": "1140600"
  },
  {
    "text": "means that you change the code and then you work on that change version but you can Al also like have a compilation step",
    "start": "1140600",
    "end": "1147720"
  },
  {
    "text": "that changes the code and you never work on that change version right so that's",
    "start": "1147720",
    "end": "1153080"
  },
  {
    "text": "what I mean by meta programming all those things that make code change code you know templates maybe even generics",
    "start": "1153080",
    "end": "1160720"
  },
  {
    "text": "things like that and what I think is that basically making them aware having",
    "start": "1160720",
    "end": "1168080"
  },
  {
    "text": "them use static analysis information can make them more powerful more efficient so I",
    "start": "1168080",
    "end": "1175840"
  },
  {
    "text": "can for example say one of my initial examples was making reactive programming",
    "start": "1175840",
    "end": "1183840"
  },
  {
    "text": "so let's say I have this class and in this class there's a field and I can it",
    "start": "1183840",
    "end": "1189799"
  },
  {
    "text": "has a getter and what I wanted to do is I wanted to send me an event somehow",
    "start": "1189799",
    "end": "1195400"
  },
  {
    "text": "every time the field changes but but the class is not written that way like whoever wrote it just wrote a getter and",
    "start": "1195400",
    "end": "1202039"
  },
  {
    "text": "you have to pull it and what I want to do is I want to find out every way that this field can change in the program and",
    "start": "1202039",
    "end": "1209880"
  },
  {
    "text": "every time that it changes I wanted to send the event so I can know when that happens that it it becomes reactive so",
    "start": "1209880",
    "end": "1216600"
  },
  {
    "text": "if you can do static analysis and modify the program based on that then you can easily do that and that's basically my",
    "start": "1216600",
    "end": "1223840"
  },
  {
    "text": "goal I want to to enable things like that and I want to make it in let's call a declarative way that I",
    "start": "1223840",
    "end": "1230960"
  },
  {
    "text": "can build using basic building blocks more complex Behavior it sounds really",
    "start": "1230960",
    "end": "1236760"
  },
  {
    "text": "interesting one example of static analysis I've seen because you mentioned quite a few and they I actually hadn't",
    "start": "1236760",
    "end": "1243159"
  },
  {
    "text": "considered even like formatting as one of those but of course it makes sense one of the downsides to the format gof",
    "start": "1243159",
    "end": "1250000"
  },
  {
    "text": "tool is if the program is incorrect it doesn't work the program has to be well",
    "start": "1250000",
    "end": "1255679"
  },
  {
    "text": "formed yes thank you has to be well formed so any kind of static analysis that can",
    "start": "1255679",
    "end": "1261400"
  },
  {
    "text": "happen without that being the case I find that to be quite amazing because",
    "start": "1261400",
    "end": "1266600"
  },
  {
    "text": "often it relies on those the same kind of packages that analyze the program for",
    "start": "1266600",
    "end": "1271640"
  },
  {
    "text": "compilation to do static analysis is that right definitely so like handling",
    "start": "1271640",
    "end": "1278200"
  },
  {
    "text": "things that are partly correct or like are partly complete even like not",
    "start": "1278200",
    "end": "1283760"
  },
  {
    "text": "incorrect they're just missing a bit and you want to take just the parts that are there that are good is hard one of the",
    "start": "1283760",
    "end": "1290640"
  },
  {
    "text": "other project that I'm currently working on is it has to do with soda code so",
    "start": "1290640",
    "end": "1295760"
  },
  {
    "text": "what we want to do is to compare SoDo code to actual code and see if they",
    "start": "1295760",
    "end": "1300840"
  },
  {
    "text": "match so that's kind of a similar idea because soda code obviously is not you",
    "start": "1300840",
    "end": "1307360"
  },
  {
    "text": "know doesn't have perfect syntax or I use occasionally GitHub co-pilot and",
    "start": "1307360",
    "end": "1312919"
  },
  {
    "text": "that actually does quite an interesting job out of like the code can be wrong in",
    "start": "1312919",
    "end": "1318000"
  },
  {
    "text": "in fact you can give it context just by writing comments or just by the names of the functions that you use and the",
    "start": "1318000",
    "end": "1323520"
  },
  {
    "text": "variable names and things so that definitely feels magic I guess that's different because of I suppose that's",
    "start": "1323520",
    "end": "1330279"
  },
  {
    "text": "the ml doing that work right yeah so ml4 PL or however you want to call applying",
    "start": "1330279",
    "end": "1337520"
  },
  {
    "text": "machine learning to code is it's interesting because on the one hand like code it so a lot of the techniques that",
    "start": "1337520",
    "end": "1345039"
  },
  {
    "text": "are used there come from NLP from natural language processing which obviously makes sense because you know",
    "start": "1345039",
    "end": "1352240"
  },
  {
    "text": "this is text and this is text and like you won't use techniques that come from image processing that has nothing to do",
    "start": "1352240",
    "end": "1357960"
  },
  {
    "text": "with it right but on the other hand code is very structured it's very hierarchal",
    "start": "1357960",
    "end": "1364200"
  },
  {
    "text": "it has properties in order to compile it has to be very strict in various ways so",
    "start": "1364200",
    "end": "1371360"
  },
  {
    "text": "giving up all that information all that context is silly so you do want to use it and there let's call it non-machine",
    "start": "1371360",
    "end": "1378840"
  },
  {
    "text": "learning approach to static analysis to to dealing with code is called formal methods which is basically taking ideas",
    "start": "1378840",
    "end": "1385919"
  },
  {
    "text": "from logic and those sort of uh areas of math and applying them to code and",
    "start": "1385919",
    "end": "1392400"
  },
  {
    "text": "that's where all the things like type checking and that come from and like all the theory behind it I don't understand",
    "start": "1392400",
    "end": "1399960"
  },
  {
    "text": "100% how co-pilot works I read their white paper it's very interesting I don't think that they like on the one",
    "start": "1399960",
    "end": "1407400"
  },
  {
    "text": "hand the one of the points of machine learning is that they don't do anything specific",
    "start": "1407400",
    "end": "1414159"
  },
  {
    "text": "they don't say oh look there's a type they want the machine learning to somehow learn that themselves yeah but",
    "start": "1414159",
    "end": "1419640"
  },
  {
    "text": "on the other hand I think that they do try very hard to like to make sure that the the algorithm has access to like",
    "start": "1419640",
    "end": "1427000"
  },
  {
    "text": "type information and things like that yeah it's funny because it gets things right that are really surprising and it",
    "start": "1427000",
    "end": "1433679"
  },
  {
    "text": "makes mistakes that a simple static analysis tool wouldn't make it still does make those mistakes and I'm sure",
    "start": "1433679",
    "end": "1440159"
  },
  {
    "text": "they'll keep working on that it's almost like there'll be an extra check after to see whether this even is valid code it",
    "start": "1440159",
    "end": "1446960"
  },
  {
    "text": "does get frustrating sometimes because it'll kind of guess arguments to a",
    "start": "1446960",
    "end": "1452000"
  },
  {
    "text": "method that are wrong they look like it's the thing it's seen before but they",
    "start": "1452000",
    "end": "1457320"
  },
  {
    "text": "aren't the method you know they aren't the arguments for that particular method so just a quick check would have found",
    "start": "1457320",
    "end": "1462960"
  },
  {
    "text": "out that that wasn't going to work and I suppose that's what they'll do but that is interesting do see Clues really of",
    "start": "1462960",
    "end": "1469960"
  },
  {
    "text": "what it's doing with some of the mistakes it makes but I mean it is amazing I have to say yeah and the code",
    "start": "1469960",
    "end": "1475399"
  },
  {
    "text": "that it came from you know what it is that it learned that would make it answer in this way right yeah yeah it's",
    "start": "1475399",
    "end": "1482559"
  },
  {
    "text": "actually exactly the point that I wanted to bring up like all this AI creating code right so co-pilot is based on codex",
    "start": "1482559",
    "end": "1490799"
  },
  {
    "text": "this is the engine that is running behind it and a little bit from under the hood of how things are going on",
    "start": "1490799",
    "end": "1497200"
  },
  {
    "text": "there the plug-in for co-pilot is collecting some context which is not known this is",
    "start": "1497200",
    "end": "1504159"
  },
  {
    "text": "kind of the secret sauce and it's being sent with some extra instructions which are also not known to that engine to",
    "start": "1504159",
    "end": "1511520"
  },
  {
    "text": "codex which is probably the article that you read methan and sometimes you can",
    "start": "1511520",
    "end": "1516600"
  },
  {
    "text": "see because it the collects the wrong context it provides something that it's",
    "start": "1516600",
    "end": "1522000"
  },
  {
    "text": "saw in the past but is not relevant for your code like what you said Matt about a signature of a function that could",
    "start": "1522000",
    "end": "1528000"
  },
  {
    "text": "have been easily caught and it actually makes a lot of sense that the next good step of this such a development of such",
    "start": "1528000",
    "end": "1535159"
  },
  {
    "text": "a tool and co-pilot is one of the tools that rely on codex there are other tools out there that use that would be exactly",
    "start": "1535159",
    "end": "1542919"
  },
  {
    "text": "creating static and maybe in the future even Dynamic Checkers um but definitely",
    "start": "1542919",
    "end": "1548600"
  },
  {
    "text": "the ability of not needing a full working program in order to run such a",
    "start": "1548600",
    "end": "1554240"
  },
  {
    "text": "test is a huge deal for that next step so this is super super interesting yeah",
    "start": "1554240",
    "end": "1559720"
  },
  {
    "text": "by the way I when I first learned about co-pilot for some reason I read it as",
    "start": "1559720",
    "end": "1564960"
  },
  {
    "text": "copy lot like it copies a lot I thought it was like Camelot so I completely",
    "start": "1564960",
    "end": "1570840"
  },
  {
    "text": "misunderstood that it said co-pilot I was using it for ages as in the preview and thought it was called copy lot it's",
    "start": "1570840",
    "end": "1578360"
  },
  {
    "text": "quite nice so one of the companies that I worked at during my masters like I",
    "start": "1578360",
    "end": "1583440"
  },
  {
    "text": "interned them one summer they used to be Koda and now they're the merge with SLB",
    "start": "1583440",
    "end": "1589440"
  },
  {
    "text": "out/ became tab9 and they're making like a very similar to co-pilot tool and you",
    "start": "1589440",
    "end": "1598360"
  },
  {
    "text": "know they have the same ideas only I think that what they do knowing behind",
    "start": "1598360",
    "end": "1603520"
  },
  {
    "text": "the scenes is like their algorithm is a bit less blind than co-pilot so you",
    "start": "1603520",
    "end": "1609360"
  },
  {
    "text": "can't have it do things like you know the advertisements for co-pilot where you write the documentation for some",
    "start": "1609360",
    "end": "1616240"
  },
  {
    "text": "function and it it just complet completes the function for you but you can make it do things like you know you",
    "start": "1616240",
    "end": "1621640"
  },
  {
    "text": "start a database connection and it completes all the boiler plate for you and things like that based on other",
    "start": "1621640",
    "end": "1628000"
  },
  {
    "text": "examples that it have seen and it does use more type information and names and",
    "start": "1628000",
    "end": "1633880"
  },
  {
    "text": "things like that oh it's so clever one example I've seen of static analysis that surprised me and actually got me",
    "start": "1633880",
    "end": "1640960"
  },
  {
    "text": "quite excited about it was an example case where if a variable at any point",
    "start": "1640960",
    "end": "1647640"
  },
  {
    "text": "point in the program is called password and then at some other point in the",
    "start": "1647640",
    "end": "1652840"
  },
  {
    "text": "program it's logged out somewhere that would be then a warning that it would say oh look this variable whatever it's",
    "start": "1652840",
    "end": "1659039"
  },
  {
    "text": "called now this is being printed at one point in the somewhere by just sort of analyzing the code this was a password",
    "start": "1659039",
    "end": "1666960"
  },
  {
    "text": "and so is this really what you want to do and I found that to be actually really quite interesting like that",
    "start": "1666960",
    "end": "1673399"
  },
  {
    "text": "because that is very useful yes so Pearl if you you remember or if you ever used",
    "start": "1673399",
    "end": "1679279"
  },
  {
    "text": "it has like this whole idea where you need to sanitize your input and bless",
    "start": "1679279",
    "end": "1684399"
  },
  {
    "text": "them and things like that because if you they had this idea that if you take input and you don't use it carefully",
    "start": "1684399",
    "end": "1692120"
  },
  {
    "text": "then it could have affect the program in like in ways you know SQL injections and",
    "start": "1692120",
    "end": "1698320"
  },
  {
    "text": "all the sort of thing and yeah that that sort of static analysis is called taint",
    "start": "1698320",
    "end": "1703360"
  },
  {
    "text": "analysis and I think that you know in recent years even like that sort of",
    "start": "1703360",
    "end": "1709600"
  },
  {
    "text": "thing has become important where you know you can leak out the password and also just develop like related but not",
    "start": "1709600",
    "end": "1716640"
  },
  {
    "text": "the same idea that developers just putting secrets into their GitHub repositories and that's also something",
    "start": "1716640",
    "end": "1723000"
  },
  {
    "text": "that you know just a few uh you know a search might find that yeah maybe you shouldn't put there are specific places",
    "start": "1723000",
    "end": "1730159"
  },
  {
    "text": "in the environment that you're supposed to put in your secret keys and whatever yeah and I tell you what having that",
    "start": "1730159",
    "end": "1736519"
  },
  {
    "text": "early so with we talked about the program doesn't have to be finished for this to work having that insight as",
    "start": "1736519",
    "end": "1742640"
  },
  {
    "text": "you're working that's really when you need it because that's the point at which maybe you're making design",
    "start": "1742640",
    "end": "1747880"
  },
  {
    "text": "decisions that you'll then have to live with so yeah I think that yeah that's very exciting what are what are some",
    "start": "1747880",
    "end": "1753000"
  },
  {
    "text": "other cool use cases or or cool little things like that that you can do with this basically so you can find bugs",
    "start": "1753000",
    "end": "1760360"
  },
  {
    "text": "early other programming languages rust if you read about it like put this whole",
    "start": "1760360",
    "end": "1767600"
  },
  {
    "text": "idea of uh being very strict with the checking and the static analysis inside the language itself and you can",
    "start": "1767600",
    "end": "1775559"
  },
  {
    "text": "basically make sure that pointers don't go out of scope and be used because the",
    "start": "1775559",
    "end": "1782200"
  },
  {
    "text": "language itself is specified to keep track of that other things you can do",
    "start": "1782200",
    "end": "1787559"
  },
  {
    "text": "with that is you know if you're doing multi-threading and you have uh mut exess and other locks you can use a",
    "start": "1787559",
    "end": "1794480"
  },
  {
    "text": "static analysis to make sure that after every lock is both locked and then unlocked and you don't unlock something",
    "start": "1794480",
    "end": "1801679"
  },
  {
    "text": "before you locked it and things like that every allocation is freed if you're using something like CR or C++ and",
    "start": "1801679",
    "end": "1808399"
  },
  {
    "text": "you're allocating memory manually every file that you open that needs to be closed then you can check that some of",
    "start": "1808399",
    "end": "1815880"
  },
  {
    "text": "those things like in some languages you have to check so it makes sense to put have static analysis for it but in other",
    "start": "1815880",
    "end": "1823880"
  },
  {
    "text": "uh languages it's not even a problem because the language itself takes care of ring resources but in those languages",
    "start": "1823880",
    "end": "1830679"
  },
  {
    "text": "that that do use manual resource allocation then that makes a whole lot of sense and of course memory and files",
    "start": "1830679",
    "end": "1837000"
  },
  {
    "text": "aren't the only resource you have you so if you talk to a server by some protocol",
    "start": "1837000",
    "end": "1842799"
  },
  {
    "text": "then you can have uh static analysis that make sure that you complete the protocol in the correct way what are",
    "start": "1842799",
    "end": "1849840"
  },
  {
    "text": "your thoughts about the static Checkers and go specifically so I don't know a",
    "start": "1849840",
    "end": "1855840"
  },
  {
    "text": "lot about go I technically like a professional go developer in the sense that someone once paid me money to write",
    "start": "1855840",
    "end": "1862480"
  },
  {
    "text": "some go oh that is the definition yeah you're one of us but I'm not very good at it so the",
    "start": "1862480",
    "end": "1869480"
  },
  {
    "text": "one static Checker that I found for go is called Static check and it seems to",
    "start": "1869480",
    "end": "1875480"
  },
  {
    "text": "be quite thorough and it has like a lot of linting options and things that it",
    "start": "1875480",
    "end": "1880679"
  },
  {
    "text": "can tell you that might be wrong about your go program so we've talked about all kinds of static checking",
    "start": "1880679",
    "end": "1887799"
  },
  {
    "text": "um and we can talk about levels but a lot of what static check mostly does is",
    "start": "1887799",
    "end": "1893440"
  },
  {
    "text": "linting so it looks for certain patterns of things that are dangerous or might be",
    "start": "1893440",
    "end": "1899919"
  },
  {
    "text": "incorrect or probably not what you meant to do and then it warns about them which is a very useful thing to do and it",
    "start": "1899919",
    "end": "1906519"
  },
  {
    "text": "seems that it also have some deeper static analysis because it can you know track context of various errors and",
    "start": "1906519",
    "end": "1913600"
  },
  {
    "text": "figures things like that so it looks like a great tool yeah this there's actually quite a range of them and some",
    "start": "1913600",
    "end": "1919760"
  },
  {
    "text": "of them are general purpose others are very specific like there's a tool called error check that checks to make sure you",
    "start": "1919760",
    "end": "1927120"
  },
  {
    "text": "don't ignore any errors for example which is something that you know is quite important and then there's the",
    "start": "1927120",
    "end": "1932840"
  },
  {
    "text": "meta linter go meta linter which essentially runs all of the linters and",
    "start": "1932840",
    "end": "1938840"
  },
  {
    "text": "does those static checks like you say it's really linting a lot of it so we'll put some links to these in the show",
    "start": "1938840",
    "end": "1944080"
  },
  {
    "text": "notes for people interested but they're integrated nicely into Ides already so you probably already have them yeah so",
    "start": "1944080",
    "end": "1951799"
  },
  {
    "text": "the thing that I find interesting about like I want to do like as a static analysis researcher is make my own",
    "start": "1951799",
    "end": "1959159"
  },
  {
    "text": "basically the lers are great everybody should probably use them everybody probably does use them because as you",
    "start": "1959159",
    "end": "1965080"
  },
  {
    "text": "say they're already integrated into the ID but every project has like its own",
    "start": "1965080",
    "end": "1970679"
  },
  {
    "text": "thing that it's doing and it's using a library in some way it's talking it's using an API and what I want everyone to",
    "start": "1970679",
    "end": "1979440"
  },
  {
    "text": "be able to do is be able to Define their own rule set or Define be able to use a",
    "start": "1979440",
    "end": "1986080"
  },
  {
    "text": "language to Define their own static analysis that will warn them of things",
    "start": "1986080",
    "end": "1991279"
  },
  {
    "text": "that might go wrong when they're making code and for small project you know for",
    "start": "1991279",
    "end": "1997039"
  },
  {
    "text": "scripts you probably don't need that but if you need to collaborate between",
    "start": "1997039",
    "end": "2002080"
  },
  {
    "text": "multiple people that might do the thing if you're a company or you're an open source project then those things starts",
    "start": "2002080",
    "end": "2008200"
  },
  {
    "text": "to make a lot of [Music]",
    "start": "2008200",
    "end": "2027519"
  },
  {
    "text": "sense this episode is brought to you by chronosphere when it comes to observability teams need a reliable",
    "start": "2027519",
    "end": "2033799"
  },
  {
    "text": "scalable and efficient solution so they can know about issues well before their customers do they need a solution that",
    "start": "2033799",
    "end": "2039919"
  },
  {
    "text": "helps them move faster than the competition and companies born in the cloud native era often start with",
    "start": "2039919",
    "end": "2045399"
  },
  {
    "text": "Prometheus for monitoring which is obviously an amazing piece of software but they quickly push it to its limits and often outgrow it they run into",
    "start": "2045399",
    "end": "2052320"
  },
  {
    "text": "issues with Silo data missing long-term storage and wasted engineering time firefighting the monitoring system",
    "start": "2052320",
    "end": "2058800"
  },
  {
    "text": "versus delivering their application with confidence they describe the system as a house of cards where a single developer",
    "start": "2058800",
    "end": "2065000"
  },
  {
    "text": "seemingly benign change can overload the whole monitoring system or they say they're Flying Blind because they Pride",
    "start": "2065000",
    "end": "2071480"
  },
  {
    "text": "themselves on making dayto driven decisions but losing visibility means they lose this Competitive Edge Ryan",
    "start": "2071480",
    "end": "2077320"
  },
  {
    "text": "soal VP of engineering at door Dash has this to say about chronosphere quote the visibility and control the chronospheres",
    "start": "2077320",
    "end": "2083599"
  },
  {
    "text": "platform gives us to manage our observability data and costs are a GameChanger especially with our",
    "start": "2083599",
    "end": "2088960"
  },
  {
    "text": "unprecedented growth end quote chronosphere is the observability platform for clouding of teams operating",
    "start": "2088960",
    "end": "2094679"
  },
  {
    "text": "at scale learn more and get a demo at chronosphere doio again chronosphere",
    "start": "2094679",
    "end": "2100520"
  },
  {
    "text": "doio and by our friends at flat file the leading data on boarding platform for teams who don't want to build yet",
    "start": "2100520",
    "end": "2106359"
  },
  {
    "text": "another CSV uploader flat files powerful out of the boox solution takes the import burden off of your shoulders",
    "start": "2106359",
    "end": "2112160"
  },
  {
    "text": "freeing you to solve bigger business problems and build products that people love get to usable data faster so you",
    "start": "2112160",
    "end": "2117640"
  },
  {
    "text": "can focus on what matters most to you and your business it is incredibly fast to set up just write a few lines of code",
    "start": "2117640",
    "end": "2123240"
  },
  {
    "text": "and get up and running in hours not days or weeks it this framework agnostic use the SDK to integrate flat file into any",
    "start": "2123240",
    "end": "2130160"
  },
  {
    "text": "JavaScript application with support for all major Frameworks learn more and get started at flat file.com again flatfile",
    "start": "2130160",
    "end": "2137790"
  },
  {
    "text": "[Music]",
    "start": "2137790",
    "end": "2152319"
  },
  {
    "text": "docomo that you really like what they do oh what's a functionality that that you really like um the static Checker that",
    "start": "2152319",
    "end": "2159760"
  },
  {
    "text": "you will build what will it have so one of the harder things to do with static",
    "start": "2159760",
    "end": "2166640"
  },
  {
    "text": "analysis and it's not like a tool in of itself it's a it's a way to get there",
    "start": "2166640",
    "end": "2172079"
  },
  {
    "text": "but it's called points to analysis because even in languages that don't have uh pointers you usually have",
    "start": "2172079",
    "end": "2179319"
  },
  {
    "text": "references which means that one thing references another thing and that thing",
    "start": "2179319",
    "end": "2184640"
  },
  {
    "text": "may change over the course of the program and keeping track of what Lees is a",
    "start": "2184640",
    "end": "2191240"
  },
  {
    "text": "certain object in memory may have it's hard to do when you're coding the program and trying to keep a mental",
    "start": "2191240",
    "end": "2196920"
  },
  {
    "text": "model of the program in your head it's hard to do when you're debugging and you need to find out wait what is this point",
    "start": "2196920",
    "end": "2203280"
  },
  {
    "text": "to right now and it's even hard to do when you're trying to do static analysis as and that means that you're not even",
    "start": "2203280",
    "end": "2210040"
  },
  {
    "text": "running the programming the program you so if you know what this variable",
    "start": "2210040",
    "end": "2216000"
  },
  {
    "text": "points to right now where is the thing that was allocated what it is what's its",
    "start": "2216000",
    "end": "2221119"
  },
  {
    "text": "Dynamic type what thing it really is then you can make all other static",
    "start": "2221119",
    "end": "2226680"
  },
  {
    "text": "analysis basically stronger because now they can know more things they know that oh I like this is a poter I don't know",
    "start": "2226680",
    "end": "2234040"
  },
  {
    "text": "like I now know where it came from so that's static analysis that I think is",
    "start": "2234040",
    "end": "2239599"
  },
  {
    "text": "really cool it's really difficult because programmers can do whatever they like and you need to somehow constrain",
    "start": "2239599",
    "end": "2246760"
  },
  {
    "text": "this chaos but yeah that's what I want to do well yeah that feels like a problem that would be much easier solved",
    "start": "2246760",
    "end": "2253319"
  },
  {
    "text": "at runtime definitely at runtime you just know what it is right you don't have to check it at runtime you have",
    "start": "2253319",
    "end": "2260040"
  },
  {
    "text": "other problems like let's say you traced your programmer and now you have this",
    "start": "2260040",
    "end": "2266359"
  },
  {
    "text": "huge file of uh of trace of where everything went and you still have to to",
    "start": "2266359",
    "end": "2273400"
  },
  {
    "text": "sort out that Trace you know to define the way that it looks because usually when you're debugging",
    "start": "2273400",
    "end": "2279920"
  },
  {
    "text": "what you see is that okay so I have this value right here right how did it get",
    "start": "2279920",
    "end": "2286839"
  },
  {
    "text": "there like the place where the error happens is not like with the place where you see the error where you notice that",
    "start": "2286839",
    "end": "2293319"
  },
  {
    "text": "something went wrong is not the place where the error happened what you really want to know is all the the path the the",
    "start": "2293319",
    "end": "2302599"
  },
  {
    "text": "operation that happens on this value to get it to this obviously incorrect State and that's hard and there's RR",
    "start": "2302599",
    "end": "2313040"
  },
  {
    "text": "which is basically a reverse debugger it helps you put bugs into your program what's a reverse debugger sounds like",
    "start": "2313040",
    "end": "2319800"
  },
  {
    "text": "fuzzing a debugger uh that goes forward you basically say step and it goes",
    "start": "2319800",
    "end": "2325280"
  },
  {
    "text": "forward one instruction right all right yeah yeah well a reverse debugger allows you to say step back and go back in time",
    "start": "2325280",
    "end": "2331400"
  },
  {
    "text": "to what happened before Oh time traveling debugger exactly that sounds amazing in it is it's incredible it's",
    "start": "2331400",
    "end": "2339200"
  },
  {
    "text": "like a fantastic bit of engineering but does it just keep a snapshot of the state at every point or is it more",
    "start": "2339200",
    "end": "2345960"
  },
  {
    "text": "intelligent than that is it because some some operations you lose information I guess don't you how does it go backwards",
    "start": "2345960",
    "end": "2352160"
  },
  {
    "text": "in time it's a time travel basically that's what it does right it keeps operations at every point but there's so",
    "start": "2352160",
    "end": "2358560"
  },
  {
    "text": "much um you know bookkeeping that you have to keep up with in order to do that",
    "start": "2358560",
    "end": "2363880"
  },
  {
    "text": "because obviously you can't just after every you know machine op code keep",
    "start": "2363880",
    "end": "2368920"
  },
  {
    "text": "State because that will blow up basically no time at all and there are other things that the program does like",
    "start": "2368920",
    "end": "2375480"
  },
  {
    "text": "output to the screen and write into sockets and things like that so you have to be very clever with how you keep it",
    "start": "2375480",
    "end": "2383400"
  },
  {
    "text": "so what it basically does is keep snapshots but not after every Point only",
    "start": "2383400",
    "end": "2390000"
  },
  {
    "text": "before things that input or output andan it figures that the rest of them it can",
    "start": "2390000",
    "end": "2395079"
  },
  {
    "text": "just calculate from that gotcha yeah that kind of yeah I think that makes sense yeah that does sound really cool I",
    "start": "2395079",
    "end": "2400640"
  },
  {
    "text": "wonder if we've got that for go I've never heard of it for go but maybe so it",
    "start": "2400640",
    "end": "2405880"
  },
  {
    "text": "might just work with go because I don't know let's check everybody's Googling",
    "start": "2405880",
    "end": "2411640"
  },
  {
    "text": "yeah yeah I think it might work I found a debugging a flaky go test with Mozilla",
    "start": "2411640",
    "end": "2417280"
  },
  {
    "text": "RR yeah because it works at like the assembly level so it cares about machine",
    "start": "2417280",
    "end": "2423079"
  },
  {
    "text": "up codes and like if it compiles into machine up codes it can work with it that's great and yeah it's hard to use",
    "start": "2423079",
    "end": "2429720"
  },
  {
    "text": "and like and you're stuck with like a debugger that looks like you know GDB which is not the most userfriendly of",
    "start": "2429720",
    "end": "2436440"
  },
  {
    "text": "interfaces but it it does work it does do the thing that it promises to do which is very cool well it's a good",
    "start": "2436440",
    "end": "2442960"
  },
  {
    "text": "opportunity for somebody to build a tool or build integrate it into an IDE then if yeah in that case if it's just got",
    "start": "2442960",
    "end": "2450200"
  },
  {
    "text": "that kind of text interface definitely I'm sure that jet brains or whoever are on it other IDs are available that's",
    "start": "2450200",
    "end": "2457960"
  },
  {
    "text": "true I have to just say that for legal reasons actually I don't think I do but I say it yeah I bet they are also if",
    "start": "2457960",
    "end": "2464440"
  },
  {
    "text": "anyone is looking for an interesting talk title for any upcoming conference I think this is a topic I definitely never",
    "start": "2464440",
    "end": "2471079"
  },
  {
    "text": "heard of yeah I would love to hear a talk on all this actually if matan's not going to do it someone should yeah yeah",
    "start": "2471079",
    "end": "2478520"
  },
  {
    "text": "so that's Dynamic analysis so let's talk a bit about that basically stacked Anis",
    "start": "2478520",
    "end": "2486760"
  },
  {
    "text": "helps you before you even run your program and it can help you find bugs and it can help you just answer",
    "start": "2486760",
    "end": "2492440"
  },
  {
    "text": "questions about what your program is and how it works and maybe answer question",
    "start": "2492440",
    "end": "2497680"
  },
  {
    "text": "about queries finding things within your program if you have enough code then just searching it is a task right but",
    "start": "2497680",
    "end": "2505720"
  },
  {
    "text": "Dynamic analysis is still a hard task you can you basically can use the same",
    "start": "2505720",
    "end": "2512440"
  },
  {
    "text": "information that you would use during compile time but now you have all the real-time values too so you can instead",
    "start": "2512440",
    "end": "2519160"
  },
  {
    "text": "of doing symbolic execution and trying to figure out what the values can be you can actually know what the values are",
    "start": "2519160",
    "end": "2525520"
  },
  {
    "text": "but you still have to keep track of them in some context you just print statements everywhere and you're done and you can you know look at what your",
    "start": "2525520",
    "end": "2532560"
  },
  {
    "text": "programing did and you're happy and you figured it out but sometimes print statements aren't enough if you're doing",
    "start": "2532560",
    "end": "2539160"
  },
  {
    "text": "what's it called um serers programming yeah with uh Amazon Lambda and where you",
    "start": "2539160",
    "end": "2545800"
  },
  {
    "text": "write single function and hook them up and they don't have anywhere to print and you don't know when they run and you",
    "start": "2545800",
    "end": "2552480"
  },
  {
    "text": "don't know how they will run but maybe you can get a trace if you put them together correctly and put something to",
    "start": "2552480",
    "end": "2559800"
  },
  {
    "text": "L so and then you need to you can use this Trace to figure out oh so I got",
    "start": "2559800",
    "end": "2566000"
  },
  {
    "text": "this bad value from the database and then it went through 11 different Lambda",
    "start": "2566000",
    "end": "2571040"
  },
  {
    "text": "functions before it got here and this is where my error came from so putting all",
    "start": "2571040",
    "end": "2577720"
  },
  {
    "text": "that together is not at all trivial and you can basically have to build a tool to do that or listen to the episode from",
    "start": "2577720",
    "end": "2585200"
  },
  {
    "text": "last week where Matt was talking about instrumenting yes yeah so instrumenting is like",
    "start": "2585200",
    "end": "2592559"
  },
  {
    "text": "Dynamic analysis right you're looking at what is happening yeah and that's the kind of thing where you know if it's",
    "start": "2592559",
    "end": "2598119"
  },
  {
    "text": "running at scale of course that's a different picture to just the code or just the single program itself but yeah",
    "start": "2598119",
    "end": "2606520"
  },
  {
    "text": "and so just printing lines out that is kind of dynamic analysis I guess well it is um it's a very primitive form of it",
    "start": "2606520",
    "end": "2613480"
  },
  {
    "text": "and it's not uh argumented by tooling let's say it like that yeah and making",
    "start": "2613480",
    "end": "2620760"
  },
  {
    "text": "tools for making our jobs easier is like what we do as programmers right yeah absolutely that is interesting I mean",
    "start": "2620760",
    "end": "2627400"
  },
  {
    "text": "there's um there's like structured we even try and do it with structured logging where now we are putting",
    "start": "2627400",
    "end": "2633559"
  },
  {
    "text": "structure into the log output so that we we can use that more later yeah yeah and",
    "start": "2633559",
    "end": "2639040"
  },
  {
    "text": "then this structure log is almost like a trace right that's definitely an",
    "start": "2639040",
    "end": "2644160"
  },
  {
    "text": "interesting view on that and also instead of saying I'm just printing things you can say now I'm dynamically",
    "start": "2644160",
    "end": "2650839"
  },
  {
    "text": "debugging yeah I'm doing Dynamic analysis yeah but hello would you say",
    "start": "2650839",
    "end": "2656680"
  },
  {
    "text": "hello world is a dynamic analysis program that's all it is isn't it that's",
    "start": "2656680",
    "end": "2661839"
  },
  {
    "text": "probably the simplest what information does it give you says hello I guess like",
    "start": "2661839",
    "end": "2667559"
  },
  {
    "text": "it just prints like tell you when you entered the function and when you left the function and that's a trace right",
    "start": "2667559",
    "end": "2674599"
  },
  {
    "text": "yeah that is his little signal isn't it yeah yeah that's a good point maybe it can be fun to add a time stamp to those",
    "start": "2674599",
    "end": "2681160"
  },
  {
    "text": "then it's like a proper log there you go if you use the log function if you log print line or something in go you get",
    "start": "2681160",
    "end": "2687359"
  },
  {
    "text": "the time stamp for free you could use go in your work because one of the nice",
    "start": "2687359",
    "end": "2693079"
  },
  {
    "text": "things about go is it's an open source language you have at your disposal available all the packages that the go",
    "start": "2693079",
    "end": "2700040"
  },
  {
    "text": "tool chain itself uses to understand go go actually now is written in go talk",
    "start": "2700040",
    "end": "2705359"
  },
  {
    "text": "about meta programming go it used to be written in C now it's written in go I",
    "start": "2705359",
    "end": "2710839"
  },
  {
    "text": "can't wait for the initial information to be lost in Generations time and and they just know that go is written in go",
    "start": "2710839",
    "end": "2717000"
  },
  {
    "text": "and no one knows how I love love the idea of that they we use r r to go back",
    "start": "2717000",
    "end": "2722640"
  },
  {
    "text": "yeah no wait once you said that I have to tell you about what I think is one of",
    "start": "2722640",
    "end": "2727800"
  },
  {
    "text": "the coolest think ever and that is a talk called Reflections on trusting",
    "start": "2727800",
    "end": "2733000"
  },
  {
    "text": "trust by I think by Brian kinghan also in available in the show notes Ken",
    "start": "2733000",
    "end": "2738800"
  },
  {
    "text": "Thompson sorry it's Bas Ken Ken Thompson so it's a thing that compilers for languages should be written or compiler",
    "start": "2738800",
    "end": "2746680"
  },
  {
    "text": "writers like to write them in the language that they are compiling so this is called a self-hosting language is it",
    "start": "2746680",
    "end": "2753160"
  },
  {
    "text": "and it's basically a milestone for a program in language to have a self-hosting compiler because it means",
    "start": "2753160",
    "end": "2758720"
  },
  {
    "text": "that the language is sophisticated enough to write a compiler for itself and writing compilers is one of the",
    "start": "2758720",
    "end": "2765480"
  },
  {
    "text": "classic uh computer science problems of complexity let's call it that and the",
    "start": "2765480",
    "end": "2771400"
  },
  {
    "text": "idea behind Reflections on trusting trust is that the C compiler is written in C and it compiles itself so if you",
    "start": "2771400",
    "end": "2779440"
  },
  {
    "text": "added a back door into it for example every time that it tries to compile the",
    "start": "2779440",
    "end": "2784520"
  },
  {
    "text": "login program then it also adds like a little back door that accepts a username and password that is known then that",
    "start": "2784520",
    "end": "2793319"
  },
  {
    "text": "compiler would insert a back door into code that is and the back door would not",
    "start": "2793319",
    "end": "2799599"
  },
  {
    "text": "be in the source code of the login program that's not good enough because then the compiler will the source code",
    "start": "2799599",
    "end": "2805440"
  },
  {
    "text": "of the compiler will just show you that it's it's doing that right so we can't have that so what we could do is have",
    "start": "2805440",
    "end": "2811960"
  },
  {
    "text": "add another back door into the compiler where it adds a back door door into itself when it compiles itself that both",
    "start": "2811960",
    "end": "2819440"
  },
  {
    "text": "adds this back door and has a back door for the login program and then you would",
    "start": "2819440",
    "end": "2825960"
  },
  {
    "text": "have a back door that is basically undetectable unless someone is especially fond of reading you know",
    "start": "2825960",
    "end": "2832440"
  },
  {
    "text": "Assembly Language of compiled Assembly Language not even handwritten Assembly Language of comments just compiler",
    "start": "2832440",
    "end": "2838520"
  },
  {
    "text": "output the back door would appear nowhere in source code it will always only be in the binary and you can just",
    "start": "2838520",
    "end": "2845200"
  },
  {
    "text": "you know compile the compiler to get rid of it because it would keep adding it oh wow that is awesome that's really creepy",
    "start": "2845200",
    "end": "2853040"
  },
  {
    "text": "it is it's like a Black Mirror episode really or something like that isn't it yeah there must be some virus some",
    "start": "2853040",
    "end": "2859800"
  },
  {
    "text": "hicking software that is using this and it seems to have been around for a while yeah yeah he wrote that in",
    "start": "2859800",
    "end": "2866359"
  },
  {
    "text": "1984 so it's been around so long that there have been anti- reflections of",
    "start": "2866359",
    "end": "2872599"
  },
  {
    "text": "trusting trust ideas you know where you basically have to use multiple compilers to get one verified output and and",
    "start": "2872599",
    "end": "2881040"
  },
  {
    "text": "there's a whole glue of uh ideas that combat this but if you like these ideas",
    "start": "2881040",
    "end": "2887319"
  },
  {
    "text": "of things that reference themselves and things that Matt does then there's a book that called",
    "start": "2887319",
    "end": "2893839"
  },
  {
    "text": "G which I can't recommend enough joining the recommendation for sure yes that is",
    "start": "2893839",
    "end": "2899559"
  },
  {
    "text": "very interesting one I love that book I agree it's Bonkers it's so good if the",
    "start": "2899559",
    "end": "2905760"
  },
  {
    "text": "of us agree yeah there you go this doesn't sound G natal if all three of us",
    "start": "2905760",
    "end": "2911880"
  },
  {
    "text": "agree it does not sound like an unpopular",
    "start": "2911880",
    "end": "2917440"
  },
  {
    "text": "opinion un opin you I actually think should probably",
    "start": "2918880",
    "end": "2924130"
  },
  {
    "text": "[Music]",
    "start": "2924130",
    "end": "2934000"
  },
  {
    "text": "leave you have to agree this one was smooth brilliant that's the best one yeah this also is another popular",
    "start": "2934000",
    "end": "2939400"
  },
  {
    "text": "opinion okay Matan so as a preparation for this episode we ask you H to come up",
    "start": "2939400",
    "end": "2945480"
  },
  {
    "text": "with an unpopular opinion that can or canot does not have to be related to go",
    "start": "2945480",
    "end": "2950880"
  },
  {
    "text": "or programming or anything like that so we're ready to hear what is your unpopular opinion so my unpopular",
    "start": "2950880",
    "end": "2957839"
  },
  {
    "text": "opinion is that after going through all that you know hyping up static analysis",
    "start": "2957839",
    "end": "2964839"
  },
  {
    "text": "and all the things that it can do my unpopular opinion that it actually doesn't work like it works up to a point",
    "start": "2964839",
    "end": "2972720"
  },
  {
    "text": "like it does all the cute things it does the simple things but you can only make it so complicated before it all breaks",
    "start": "2972720",
    "end": "2980240"
  },
  {
    "text": "down and you get to keep the pieces and that's true for if you try to do it using formal methods and if you try to",
    "start": "2980240",
    "end": "2987040"
  },
  {
    "text": "use it to do it using machine learning no matter what you do you're still stuck",
    "start": "2987040",
    "end": "2993480"
  },
  {
    "text": "thinking very hard and trying to solve the problem by sheer force of will where",
    "start": "2993480",
    "end": "2999000"
  },
  {
    "text": "no tool can help you is this just your kind of academic brain seeking out Perfection and not finding it that's in",
    "start": "2999000",
    "end": "3007599"
  },
  {
    "text": "my grad student brain trying to do things repeatedly and failing and saying",
    "start": "3007599",
    "end": "3014119"
  },
  {
    "text": "that well maybe this doesn't work and yeah so my unpopular opinion is that",
    "start": "3014119",
    "end": "3021680"
  },
  {
    "text": "software Engineers basically are have job security and computers won't replace",
    "start": "3021680",
    "end": "3027040"
  },
  {
    "text": "them oh there you go I think that's going to be very popular we will test this on Twitter but not in my academic",
    "start": "3027040",
    "end": "3034400"
  },
  {
    "text": "Niche no it's not good for you at all at all no are you going to quit and do",
    "start": "3034400",
    "end": "3039720"
  },
  {
    "text": "something different or sticking with it no no I think I wanted to you know push it as far as it will go but keep in mind",
    "start": "3039720",
    "end": "3046480"
  },
  {
    "text": "that maybe it won't be infinitely far that's amazing I think we'll all slowly",
    "start": "3046480",
    "end": "3052079"
  },
  {
    "text": "get to be more like prompt Engineers which is sort of maybe the next level of abstraction but not necessarily but will",
    "start": "3052079",
    "end": "3058599"
  },
  {
    "text": "basically be guiding the AI to do things for us among them programming and it's",
    "start": "3058599",
    "end": "3064839"
  },
  {
    "text": "technically natural language but it's not exactly the English we're using every day and we all come with different",
    "start": "3064839",
    "end": "3071000"
  },
  {
    "text": "englishes and while we understand each other the computer understands it bit differently so it will be basically sort",
    "start": "3071000",
    "end": "3077599"
  },
  {
    "text": "of a next level of programming so in some way we will automate ourselves out of job and other way we'll just have new",
    "start": "3077599",
    "end": "3082799"
  },
  {
    "text": "jobs we could just write the tests I feel like even with the fuzzing thing it",
    "start": "3082799",
    "end": "3087839"
  },
  {
    "text": "could make this work so you say that but that is a thing like I have friends who are researching that it's called",
    "start": "3087839",
    "end": "3093280"
  },
  {
    "text": "synthesis and it's basically you write the specification of a program and like the tests are specifying what the",
    "start": "3093280",
    "end": "3099599"
  },
  {
    "text": "program should do and uh synesis like either again you do machine learning or",
    "start": "3099599",
    "end": "3105880"
  },
  {
    "text": "you just search every program pass possible in like a very specific and way that makes it actually fine program",
    "start": "3105880",
    "end": "3113280"
  },
  {
    "text": "sometimes and you can make program it that way you can do programming so Excel",
    "start": "3113280",
    "end": "3119559"
  },
  {
    "text": "if you think about it and all the autofill things that it can do is basically this you write what you wanted",
    "start": "3119559",
    "end": "3125640"
  },
  {
    "text": "to output and then you drag it and then it figures everything out especially with the new features they added oh yeah",
    "start": "3125640",
    "end": "3131880"
  },
  {
    "text": "I haven't seen them I tried it the other day and I'd put one two three and then it just repeated one two three Lads of times I was Furious I was absolutely",
    "start": "3131880",
    "end": "3138920"
  },
  {
    "text": "livid but actually right if it's doing that with the code I mean if it's got things like that points to analysis",
    "start": "3138920",
    "end": "3145319"
  },
  {
    "text": "where it understands the memory use and and performance and things it could even then optimize code like it could could",
    "start": "3145319",
    "end": "3152720"
  },
  {
    "text": "like give you an early version and over time just keep sort of improving it and things and that does get very exciting",
    "start": "3152720",
    "end": "3158359"
  },
  {
    "text": "when you think of that running at scale so again my unpopular opinion is that that will never happen that the best it",
    "start": "3158359",
    "end": "3164799"
  },
  {
    "text": "can do it you know it sort of point you in the general direction of saying well maybe you want to look at this this",
    "start": "3164799",
    "end": "3170440"
  },
  {
    "text": "could be a good place to look at but that it will never be able to do that by",
    "start": "3170440",
    "end": "3175559"
  },
  {
    "text": "itself that yeah it will never know enough about the programmer to do it interesting yeah because even even like",
    "start": "3175559",
    "end": "3183000"
  },
  {
    "text": "programs we write they contain bugs I had a manager once that said he doesn't want any more bugs in in the code right",
    "start": "3183000",
    "end": "3190079"
  },
  {
    "text": "this is yeah so just don't write any more code no more bugs easy yeah there you go there you go no code no code is a",
    "start": "3190079",
    "end": "3196559"
  },
  {
    "text": "future there's definitely truth in that but genuinely though like yes it's about",
    "start": "3196559",
    "end": "3201920"
  },
  {
    "text": "what whether the program does what we want it to do yeah like based on criteria that's external to that program",
    "start": "3201920",
    "end": "3209119"
  },
  {
    "text": "isn't it so in a way it's not available to it to know that but yeah I don't know we could could you write a test but even",
    "start": "3209119",
    "end": "3215880"
  },
  {
    "text": "the tests don't specify the program completely right we all know that writing tests is hard right writing good",
    "start": "3215880",
    "end": "3221720"
  },
  {
    "text": "tests is hard isn't it writing tests that are a good specification is even harder because well if you tell it to",
    "start": "3221720",
    "end": "3229200"
  },
  {
    "text": "you know multiply you get two you you get two it goes to four then okay yeah I",
    "start": "3229200",
    "end": "3234880"
  },
  {
    "text": "can write a program that always outputs four that works right mhm that's why you need more than one test case exactly",
    "start": "3234880",
    "end": "3241960"
  },
  {
    "text": "yeah it will always be adversarial and that it will always find the way that you know it can do the thing that you",
    "start": "3241960",
    "end": "3248440"
  },
  {
    "text": "don't want it to do instead of the thing you wanted it to do yeah also what you want can change too over time is quite",
    "start": "3248440",
    "end": "3254960"
  },
  {
    "text": "interesting could using static analysis could you check to see that tests don't contradict themselves oh that's an",
    "start": "3254960",
    "end": "3261160"
  },
  {
    "text": "interesting question I suppose you could but it like it depends what you mean by contradict",
    "start": "3261160",
    "end": "3266559"
  },
  {
    "text": "themselves you could use static analysis to extract them somehow and compare them and see yeah yeah no you definitely",
    "start": "3266559",
    "end": "3273960"
  },
  {
    "text": "could do that you could see like if what they say about the the method that",
    "start": "3273960",
    "end": "3279559"
  },
  {
    "text": "they're testing if they're unit test so you test a method if that's consistent if like it can think of a method that",
    "start": "3279559",
    "end": "3286520"
  },
  {
    "text": "outputs a certain thing so if uh you a static analysis let's say you have a",
    "start": "3286520",
    "end": "3292799"
  },
  {
    "text": "method that returns some integer then we have various sorts of uh integer",
    "start": "3292799",
    "end": "3298119"
  },
  {
    "text": "analysis that can give a bounds you know can this uh output is",
    "start": "3298119",
    "end": "3305079"
  },
  {
    "text": "between you know zero and eight give it like an interval that's interval analysis there are more complex types of",
    "start": "3305079",
    "end": "3312799"
  },
  {
    "text": "uh intergal analysis that try to figure out what the value can be and yeah it can definitely figure out that that",
    "start": "3312799",
    "end": "3319760"
  },
  {
    "text": "there's a contradiction somewhere yeah that is interesting I guess that's why pure functions like in that rust has",
    "start": "3319760",
    "end": "3326280"
  },
  {
    "text": "that must be a much easier problem set like a much easier language to work with than go because you can have side",
    "start": "3326280",
    "end": "3332960"
  },
  {
    "text": "effects to methods and functions in go so static analysis like it doesn't",
    "start": "3332960",
    "end": "3338000"
  },
  {
    "text": "really care about the side effects because it's it's not executing anything yeah if you're reading input or",
    "start": "3338000",
    "end": "3344200"
  },
  {
    "text": "something like that then obviously you can't you have no idea what value it is or what value can might be but you just",
    "start": "3344200",
    "end": "3351920"
  },
  {
    "text": "mark it as any as top and keep going and yeah that it can be anything that's fine I'll just put that into the analysis M",
    "start": "3351920",
    "end": "3359839"
  },
  {
    "text": "that sounds really cool all right folks that was very interesting and that developed even in a more interesting",
    "start": "3359839",
    "end": "3366119"
  },
  {
    "text": "Direction after the unpopular opinion I already wonder what is the next episode we're going to do about this until then",
    "start": "3366119",
    "end": "3373280"
  },
  {
    "text": "thanks everyone who joined us have a great rest of your",
    "start": "3373280",
    "end": "3378319"
  },
  {
    "text": "day it's time now for a quick shout out where we pick an upcoming Community event EV and Shout At It Go West is a go",
    "start": "3379880",
    "end": "3387760"
  },
  {
    "text": "conference for the mountain west region of the us and this year's event will be held in Utah and remote on October 21st",
    "start": "3387760",
    "end": "3394799"
  },
  {
    "text": "the organizers are still accepting talk proposals but the CFB closes May 22nd Which is less than a month away so you",
    "start": "3394799",
    "end": "3401039"
  },
  {
    "text": "better get on it learn more at goes comp.com and we'll put a link to the CFB",
    "start": "3401039",
    "end": "3406160"
  },
  {
    "text": "in your show notes if you dig go time and you're not also subscribed to the change log you're missing out on some",
    "start": "3406160",
    "end": "3412559"
  },
  {
    "text": "seriously good stuff we had Brian Kahan on the show and I asked him what Unix and the web have in common and if it can",
    "start": "3412559",
    "end": "3419480"
  },
  {
    "text": "help explain their success here's what you had to say fundamentally it's the core Simplicity of the thing these are",
    "start": "3419480",
    "end": "3425920"
  },
  {
    "text": "not complicated they are simple the essence of Unix is a handful of ideas",
    "start": "3425920",
    "end": "3431760"
  },
  {
    "text": "that work really well together I mean the hierarchical file system the programmable shell redirection not too",
    "start": "3431760",
    "end": "3437440"
  },
  {
    "text": "many system calls and interestingly text is kind of the Universal Medium of exchange of information now you look at",
    "start": "3437440",
    "end": "3445039"
  },
  {
    "text": "the web what are there's if you want to call them system calls these kinds of things there's HTTP HTML the URL that's",
    "start": "3445039",
    "end": "3452319"
  },
  {
    "text": "it there is nothing else it's got the internet as an infrastructure oh and everything that goes across the web is",
    "start": "3452319",
    "end": "3458359"
  },
  {
    "text": "text so that commonality I think is quite real listen And subscribe to the",
    "start": "3458359",
    "end": "3464280"
  },
  {
    "text": "changelog at Chang log. FM as always this episode has fastly on CDN brake",
    "start": "3464280",
    "end": "3469839"
  },
  {
    "text": "master cylinder on the beat machine and you making it all worthwhile we appreciate you listening",
    "start": "3469839",
    "end": "3475480"
  },
  {
    "text": "next time on go time Johnny is talking PHP and go stay tuned for that we'll",
    "start": "3475480",
    "end": "3480799"
  },
  {
    "text": "have it ready for you next [Music]",
    "start": "3480799",
    "end": "3489789"
  },
  {
    "text": "[Music]",
    "start": "3491980",
    "end": "3495109"
  },
  {
    "text": "week",
    "start": "3500640",
    "end": "3503640"
  }
]