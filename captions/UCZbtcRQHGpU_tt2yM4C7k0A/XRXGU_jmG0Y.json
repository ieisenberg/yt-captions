[
  {
    "text": "they look at what are the real problems that Gophers are having and then they try to make it so that the gotool can",
    "start": "40",
    "end": "5240"
  },
  {
    "text": "solve those problems so we mentioned modules before that was a real problem people were having of like how do we",
    "start": "5240",
    "end": "10280"
  },
  {
    "text": "incorporate open-source software into our programs into a way where we know",
    "start": "10280",
    "end": "16480"
  },
  {
    "text": "what version we're getting in and what versions are coming out and all that works and so this is another one where",
    "start": "16480",
    "end": "22320"
  },
  {
    "text": "people have been doing lots and lots of tools over the years including Packer and Goin data and static and blah blah",
    "start": "22320",
    "end": "28800"
  },
  {
    "text": "blah the list goes on and now we have it built into the go tool and so I think for those of us who have been using",
    "start": "28800",
    "end": "34399"
  },
  {
    "text": "those tools it's it's very exciting to see it built in bandwidth for change log is provided",
    "start": "34399",
    "end": "41039"
  },
  {
    "text": "by fastly learn more at fastly.com our feature flags are powered by launch",
    "start": "41039",
    "end": "46199"
  },
  {
    "text": "Darkly check them out at launchdarkly decom and we're hosted on Lino Cloud servers get $100 in hosting credit at",
    "start": "46199",
    "end": "52800"
  },
  {
    "text": "lin.com change log what's up Gophers this episode is brought to you by kodish",
    "start": "52800",
    "end": "58719"
  },
  {
    "text": "a podcast from the team at Heroku exploring code technology tools tips and developer life there's a ton of great",
    "start": "58719",
    "end": "64838"
  },
  {
    "text": "episodes on the codish podcast so I'd encourage you to check it out and subscribe but in particular I want to bring to your attention the recent",
    "start": "64839",
    "end": "70880"
  },
  {
    "text": "episode featuring Cornelia Davis the C2 of we Works talking about Cloud native Cloud native patterns and what it really",
    "start": "70880",
    "end": "76640"
  },
  {
    "text": "means to be a cloud native application here's a sneak peek can you define get Ops maybe give a formal definition and",
    "start": "76640",
    "end": "83880"
  },
  {
    "text": "and talk about what some of the implications are I think that the simplest formal definition actually",
    "start": "83880",
    "end": "89200"
  },
  {
    "text": "doesn't involve the word get at all it is cloud native operations is the way that I think of it",
    "start": "89200",
    "end": "96040"
  },
  {
    "text": "now let me draw an an analog there in that um one of the things I didn't mention in my intro is that I'm also the",
    "start": "96040",
    "end": "101880"
  },
  {
    "text": "author of a book called Cloud native patterns and that book is targeted at developers software developers and",
    "start": "101880",
    "end": "108680"
  },
  {
    "text": "architects who are building these you know highly distributed applications these microservice based applications",
    "start": "108680",
    "end": "115320"
  },
  {
    "text": "and helping them understand all the patterns that you have to put in place to be able ble to make these",
    "start": "115320",
    "end": "121159"
  },
  {
    "text": "microservices based apps work in this everchanging environment that they run in all right links are in the show notes",
    "start": "121159",
    "end": "128280"
  },
  {
    "text": "or head to Heroku comom podcast to listen to subscribe again check the show notes for links or Heroku",
    "start": "128280",
    "end": "135850"
  },
  {
    "text": "[Music]",
    "start": "135850",
    "end": "145500"
  },
  {
    "text": "podcasts",
    "start": "148760",
    "end": "151760"
  },
  {
    "text": "let's do it it's go time welcome to go time your source for diverse discussions",
    "start": "154760",
    "end": "161360"
  },
  {
    "text": "from around the go Community thank you to jpe maxia for requesting this episode we hope you enjoy it if this is your",
    "start": "161360",
    "end": "167760"
  },
  {
    "text": "first time listening be sure to follow the show on Apple podcasts or Spotify check out the Deep back catalog atg go",
    "start": "167760",
    "end": "174440"
  },
  {
    "text": "time. FM and join in the conversation on Twitter we are at gotime FM okay okay",
    "start": "174440",
    "end": "180800"
  },
  {
    "text": "here we [Music]",
    "start": "180800",
    "end": "187349"
  },
  {
    "text": "go hello and welcome to go time I'm Matt ryer and I think you should be able to",
    "start": "188480",
    "end": "196200"
  },
  {
    "text": "paste without formatting by default I don't think I should have to contort my",
    "start": "196200",
    "end": "201720"
  },
  {
    "text": "hand into some kind of copy and paste claw in order to get the text not matching the source formatting I've",
    "start": "201720",
    "end": "207840"
  },
  {
    "text": "never wanted it I believe that same key gesture is actually the emac one for",
    "start": "207840",
    "end": "213159"
  },
  {
    "text": "Save oh well then that's just a disaster waiting to happen isn't it um luckily I",
    "start": "213159",
    "end": "220519"
  },
  {
    "text": "use vs code well that voice you heard um preemptively before his introduction uh",
    "start": "220519",
    "end": "226080"
  },
  {
    "text": "which is strictly against the rules but there we go um to give you a sense of the man it's oh hi Mark it's Mark bat",
    "start": "226080",
    "end": "233959"
  },
  {
    "text": "hey everyone the man the myth the legend yeah well you're man aren't you definitely one out of three no I'm",
    "start": "233959",
    "end": "240120"
  },
  {
    "text": "definitely a myth actually oh yeah I'm pretty I'm all myth just all myth well",
    "start": "240120",
    "end": "246000"
  },
  {
    "text": "hopefully we have some real people here too uh let's meet them we're joined by",
    "start": "246000",
    "end": "251799"
  },
  {
    "text": "Wayne Ashley Berry hello Wayne is a principal engineer at GoDaddy and Wayne",
    "start": "251799",
    "end": "257799"
  },
  {
    "text": "you're an artist right welcome to the show thank you for having me a longtime listener and very excited to be on the",
    "start": "257799",
    "end": "264720"
  },
  {
    "text": "show you're very welcome what sort of art do you do I started drawing and then I got into into computer graphics and uh",
    "start": "264720",
    "end": "271759"
  },
  {
    "text": "it was all downhill from there and that's actually what got me into programming in the first place so wow that's why I'm here very cool uh well",
    "start": "271759",
    "end": "279680"
  },
  {
    "text": "hopefully we'll get to see some of that uh not on a podcast obviously but uh maybe you share your Twitter handle in",
    "start": "279680",
    "end": "285000"
  },
  {
    "text": "the show notes we are also joined by Carl Johnson Carl is a software engineer",
    "start": "285000",
    "end": "291400"
  },
  {
    "text": "with a PhD in philosophy and uh is the director of technology for spotlight PA",
    "start": "291400",
    "end": "297400"
  },
  {
    "text": "is that right Carl welcome to the show that's right hi thanks for having me no thanks for coming today we're talking",
    "start": "297400",
    "end": "303880"
  },
  {
    "text": "about go embed this is a new thing that came in go 116 and it lets you put files inside the",
    "start": "303880",
    "end": "311680"
  },
  {
    "text": "binary but why would you want to do such a thing tell us somebody why wouldn't",
    "start": "311680",
    "end": "317400"
  },
  {
    "text": "you want to do such a thing why is it useful then yeah that's a great question we've been doing it for years in a",
    "start": "317400",
    "end": "324440"
  },
  {
    "text": "variety of ways so it's really nice that we finally had this it this problem of one W to do this and I'll get to why we",
    "start": "324440",
    "end": "331039"
  },
  {
    "text": "want to do it has been here since the very beginning so this is my little preamble to say I'm super excited for",
    "start": "331039",
    "end": "338199"
  },
  {
    "text": "this release and I'm super excited for embedding um because why do we want to do it we want to do it for so many",
    "start": "338199",
    "end": "344720"
  },
  {
    "text": "different reasons right um the one that everybody usually talks about is web apps we want to build web apps what do",
    "start": "344720",
    "end": "351199"
  },
  {
    "text": "web apps have they have images they have stylesheets they have Js they have templates right and wouldn't it be nice",
    "start": "351199",
    "end": "358000"
  },
  {
    "text": "if all of that was self-contain ConEd we didn't have to have all those files on disk and didn't have to manage that",
    "start": "358000",
    "end": "364319"
  },
  {
    "text": "problem and that's one of the reasons why right that's kind of the the use case scenario and when I first uh",
    "start": "364319",
    "end": "370800"
  },
  {
    "text": "started talk doing Buffalo way back I talked about how it was extracted from a real project and embedding those files",
    "start": "370800",
    "end": "378479"
  },
  {
    "text": "into that binary was part of that original project because they needed to be able to ship one binary that had",
    "start": "378479",
    "end": "385039"
  },
  {
    "text": "everything um and so like I said this is a problem we've had as community uh and this goes any kind of application but",
    "start": "385039",
    "end": "392240"
  },
  {
    "text": "the canonical one is the web yeah so that's the point then you get to put files that otherwise you have",
    "start": "392240",
    "end": "398039"
  },
  {
    "text": "to Corral and manage and remember to deploy alongside the binary you get to put them inside the binary uh is it just",
    "start": "398039",
    "end": "405560"
  },
  {
    "text": "for deployment it makes deployment easier is that really the the main reason why you do it that's certainly",
    "start": "405560",
    "end": "411520"
  },
  {
    "text": "the biggest reason right um because you know again over the years we've had different solutions that have made the",
    "start": "411520",
    "end": "418080"
  },
  {
    "text": "problem either kind of cumbersome or transparent uh some required you had to",
    "start": "418080",
    "end": "423800"
  },
  {
    "text": "always compile in and now that's a that's a cumbersome thing and that's kind of you're doing that because you",
    "start": "423800",
    "end": "429000"
  },
  {
    "text": "need that advantage of probably deployment thankfully the new solution like a lot of the other ones is transparent so yeah you you want to be",
    "start": "429000",
    "end": "435440"
  },
  {
    "text": "able to deploy having that easy to ship binary and whether it be to your web",
    "start": "435440",
    "end": "441520"
  },
  {
    "text": "service or to your customers like you can just package one thing it has all your migration files like just",
    "start": "441520",
    "end": "447720"
  },
  {
    "text": "everything nice and tightly it's just simpler and cleaner it's just one thing well another example is the",
    "start": "447720",
    "end": "455720"
  },
  {
    "text": "Hugo static site generator which was created uh by Steve Francia that has",
    "start": "455720",
    "end": "461599"
  },
  {
    "text": "internal templates so it's a tool for creating your own website and you give it your templates and tell it how to",
    "start": "461599",
    "end": "468080"
  },
  {
    "text": "make your website but it also has some internal templates uh and right now if you look at the source code for it they",
    "start": "468080",
    "end": "474840"
  },
  {
    "text": "have like the HTML files in one part and then they have a go file that is",
    "start": "474840",
    "end": "479919"
  },
  {
    "text": "essentially the exact same file and it has like a comment at the top saying autogenerated do not edit uh and they",
    "start": "479919",
    "end": "485240"
  },
  {
    "text": "just have to keep them in sync that whenever the internal file changes they change the go file to match",
    "start": "485240",
    "end": "493520"
  },
  {
    "text": "it um so they probably have some kind of script or something that does that for them automatically right they have a go",
    "start": "493520",
    "end": "500280"
  },
  {
    "text": "generate script that does that so that's an example where the Hugo binary is just",
    "start": "500280",
    "end": "506879"
  },
  {
    "text": "one file it's just a single executable you can get it for Mac or Windows or Linux and it has everything it needs in",
    "start": "506879",
    "end": "513880"
  },
  {
    "text": "it um and so then that means that they have to go through this kind of annoying build process where they take these",
    "start": "513880",
    "end": "519640"
  },
  {
    "text": "templates that they want to ship with it and turn them into go code so that they can put it into the binary yeah Buffalo",
    "start": "519640",
    "end": "527839"
  },
  {
    "text": "same thing right you know anything that generates your code that does like code Generation Um has their own templates",
    "start": "527839",
    "end": "533800"
  },
  {
    "text": "that they need to ship and it's a real pain um but that problem you were just talking about keeping those go files in",
    "start": "533800",
    "end": "539399"
  },
  {
    "text": "sync was such a pain because you know if you think about it the only way you can",
    "start": "539399",
    "end": "545000"
  },
  {
    "text": "get those files in is you have to create go files and so you need to either keep those go files constantly in sync like",
    "start": "545000",
    "end": "552000"
  },
  {
    "text": "you said on disk so that if somebody does a go get they're going to get the embedded files you know or you have to",
    "start": "552000",
    "end": "558720"
  },
  {
    "text": "set up the expectation that if you want the embedded files you have to run this build script to get those files you know",
    "start": "558720",
    "end": "567240"
  },
  {
    "text": "and that was a real pain too in this new system you don't have that it's just like go modules much more",
    "start": "567240",
    "end": "574519"
  },
  {
    "text": "streamlined so Wayne have you used other solutions to solve this problem before",
    "start": "574519",
    "end": "579680"
  },
  {
    "text": "going bed uh Packer and packager as well never heard of those what I've heard of",
    "start": "579680",
    "end": "586880"
  },
  {
    "text": "they I think someone on this call might have heard of them yeah I'm sure the maintainer is happy that this is 11 16",
    "start": "586880",
    "end": "593360"
  },
  {
    "text": "has come out and doesn't have to maintain any of that anymore well that's true though cuz you really don't now have to build",
    "start": "593360",
    "end": "599760"
  },
  {
    "text": "any more of these things again Mark right yeah and it's not it's not just me I mean like I said this is a problem the",
    "start": "599760",
    "end": "604839"
  },
  {
    "text": "community has been facing for years go bin data static you know go rice the",
    "start": "604839",
    "end": "611480"
  },
  {
    "text": "lists go on and on and on and those are just the ones like that we kind of know about there have been so many over the",
    "start": "611480",
    "end": "617160"
  },
  {
    "text": "years like and then I'm sure people have written their own I definitely have I've done it where I just needed an HTML file",
    "start": "617160",
    "end": "624240"
  },
  {
    "text": "and I start with just having a const in the go code but then they don't get any help with the IDE or anything um so then",
    "start": "624240",
    "end": "631560"
  },
  {
    "text": "I had I had a separate HTML file and then the little build script I couldn't just do go build I'd have to then run",
    "start": "631560",
    "end": "637959"
  },
  {
    "text": "some other things first that would do basically that thing that we talked about that Hugo is doing but with go Ed",
    "start": "637959",
    "end": "643920"
  },
  {
    "text": "you you can just use normal build tool chain right yeah there's a saying in",
    "start": "643920",
    "end": "649680"
  },
  {
    "text": "architecture that you should pave the grass I don't know maybe somebody knows",
    "start": "649680",
    "end": "654800"
  },
  {
    "text": "the saying better but the idea is right if you have a campus of some sort uh like a college campus or whatever and",
    "start": "654800",
    "end": "660200"
  },
  {
    "text": "you have different buildings and you you're thinking about where should I put the sidewalks for it well one way to do",
    "start": "660200",
    "end": "665480"
  },
  {
    "text": "it is you just sort of guess uh I guess people are going to want to go from building one to building three a lot so let's build a sidewalk there but another",
    "start": "665480",
    "end": "672240"
  },
  {
    "text": "way to do it is you just put out a big grassy field and you leave that for a year and then you come back and you see",
    "start": "672240",
    "end": "678279"
  },
  {
    "text": "oh well people are always walking from building three to building four and I can see that because the grass is",
    "start": "678279",
    "end": "683800"
  },
  {
    "text": "completely worn over and I'm going to turn that into the sidewalk um and I think the go team has been really good",
    "start": "683800",
    "end": "689839"
  },
  {
    "text": "about Paving uh the grass like Paving what I don't know how to say this but",
    "start": "689839",
    "end": "695000"
  },
  {
    "text": "Paving the areas that people are actually using Paving the foot paths is that the phrase for it because they look",
    "start": "695000",
    "end": "700839"
  },
  {
    "text": "at what are the real problems that Gophers are having and then they try to make it so that the go tool can solve",
    "start": "700839",
    "end": "706200"
  },
  {
    "text": "those problems so we mentioned modules before that was a real problem people were having of like how do we",
    "start": "706200",
    "end": "711440"
  },
  {
    "text": "incorporate open source software into our programs into a way where we know",
    "start": "711440",
    "end": "717880"
  },
  {
    "text": "what version we're getting in and what versions are coming out and all that works um and so this is another one",
    "start": "717880",
    "end": "724000"
  },
  {
    "text": "where people have been doing lots and lots of tools over the years including Packer and Goin data and static and blah",
    "start": "724000",
    "end": "730880"
  },
  {
    "text": "blah blah the list goes on and now we have it built into the go tool and so I think for those of us who have been",
    "start": "730880",
    "end": "736880"
  },
  {
    "text": "using those tools it's it's very exciting to see it built in yeah I think for me this reminds me of when I started",
    "start": "736880",
    "end": "742959"
  },
  {
    "text": "using go and you get this promise of a single tool chain there's a built-in",
    "start": "742959",
    "end": "748199"
  },
  {
    "text": "command for compiling for testing you get that single static binary that uh",
    "start": "748199",
    "end": "753800"
  },
  {
    "text": "I've actually sent some binaries to people over slack before it's actually it's quite useful instead of email you",
    "start": "753800",
    "end": "761680"
  },
  {
    "text": "just embed the message in a binary just to use the feature it's nice idea ex and",
    "start": "761680",
    "end": "767600"
  },
  {
    "text": "um and now it's it's kind of you know you start using go and then you realize oh I actually need these HTML files and",
    "start": "767600",
    "end": "773639"
  },
  {
    "text": "these CSS files and you start to lose sight of that simple deployment me mechanism and now we're back at that",
    "start": "773639",
    "end": "779839"
  },
  {
    "text": "place where you don't need to figure out which tool do I need to use to embed files everyone can use the same tool you",
    "start": "779839",
    "end": "785880"
  },
  {
    "text": "can have standards across projects and it's it's that true kind of original promise of go that everyone's got these",
    "start": "785880",
    "end": "792360"
  },
  {
    "text": "same tools that just work that's great what about Secrets",
    "start": "792360",
    "end": "797800"
  },
  {
    "text": "should should you use go Ed for embedding secret things in binaries or is do you have to just assume that",
    "start": "797800",
    "end": "804639"
  },
  {
    "text": "people are going to be able to still see them see that content I think you always",
    "start": "804639",
    "end": "809680"
  },
  {
    "text": "have to assume that people can see everything yeah if you if you're doing it as like just I want to send this off",
    "start": "809680",
    "end": "816959"
  },
  {
    "text": "to my server I suppose it would be fine um as long as you know you keep the",
    "start": "816959",
    "end": "822079"
  },
  {
    "text": "binary secret if you're shipping it out to clients clients could easily decompile the binary and remove the",
    "start": "822079",
    "end": "829360"
  },
  {
    "text": "secret and you know spread it on the dark web um so it's it's probably not a",
    "start": "829360",
    "end": "835720"
  },
  {
    "text": "good use case for that it just depends on exactly what the nature of the secret is yeah yeah I mean one use case that",
    "start": "835720",
    "end": "842399"
  },
  {
    "text": "you could use it for um kind of a secret thing is maybe a an application that has",
    "start": "842399",
    "end": "848639"
  },
  {
    "text": "the license built in for that a particular client right where the worst thing",
    "start": "848639",
    "end": "853720"
  },
  {
    "text": "they're going to do is deconstruct the license but it you know pull it out but it's going to be hitting a license server",
    "start": "853720",
    "end": "859560"
  },
  {
    "text": "anyway so if they mess with it it's just going to break their binary yeah so that's one kind of a thing you could",
    "start": "859560",
    "end": "865880"
  },
  {
    "text": "plus you can have the go tags that build the binary to that client's license model as well right yeah a similar issue",
    "start": "865880",
    "end": "873560"
  },
  {
    "text": "that I've run into is trying to include the build version in a binary so there",
    "start": "873560",
    "end": "879240"
  },
  {
    "text": "are a couple different ways that you can do that one way is if you use the go Linker if you send a certain command to",
    "start": "879240",
    "end": "885519"
  },
  {
    "text": "it you can say here's a string variable in my binary replace it with this um and",
    "start": "885519",
    "end": "891040"
  },
  {
    "text": "so you can write a little script that says when you build my binary replace version string with the GI hash that I",
    "start": "891040",
    "end": "897560"
  },
  {
    "text": "want to have in there the problem with that is that now you're really dependent on this script for anything to build",
    "start": "897560",
    "end": "904440"
  },
  {
    "text": "your project otherwise they just get like a blank string there so another way that you could do this with go embed is",
    "start": "904440",
    "end": "911880"
  },
  {
    "text": "you could have the gith has written out to a simple text file called version.",
    "start": "911880",
    "end": "917399"
  },
  {
    "text": "text and it could either be like a human friendly version like 1.2.3 or it could be a gith has or",
    "start": "917399",
    "end": "924279"
  },
  {
    "text": "whatever you need and then you can embed that in your binary and when you're shipping it out and the client says it's",
    "start": "924279",
    "end": "929759"
  },
  {
    "text": "not working for me you can say well run command-v and let me know what the version is and then I'll tell you why",
    "start": "929759",
    "end": "936120"
  },
  {
    "text": "it's not working so go embed works by putting files in you can't like with go",
    "start": "936120",
    "end": "941920"
  },
  {
    "text": "generate run executables you can't run script or anything no but what Carl was just saying one of the things about go",
    "start": "941920",
    "end": "948800"
  },
  {
    "text": "in bed we haven't really talked too much about how it works yeah um but it has",
    "start": "948800",
    "end": "953880"
  },
  {
    "text": "basically two concepts you can have a file system which as you can imagine is",
    "start": "953880",
    "end": "959079"
  },
  {
    "text": "a collection of files um and then you can also embed stuff directly to a string or a slice of bites oh so that's",
    "start": "959079",
    "end": "967560"
  },
  {
    "text": "very interesting to Carl's example you want you could have a version string just like you do now but you can use go",
    "start": "967560",
    "end": "974279"
  },
  {
    "text": "in bed to embed the version number into that string or slice of bites",
    "start": "974279",
    "end": "980560"
  },
  {
    "text": "directly yeah I guess you'd still need to run a script before to prepare that other file but it saves you from messing",
    "start": "980560",
    "end": "986759"
  },
  {
    "text": "around with those fiddly flags the lter flags or the Linker flags that you have to pass in yeah and the the nice thing",
    "start": "986759",
    "end": "992759"
  },
  {
    "text": "there is that you'll get a compiler error if the file that you expect isn't there as opposed to you know LD Flags or",
    "start": "992759",
    "end": "1000800"
  },
  {
    "text": "some other hacky solution where sometimes you just get a silent error and then You' shipped a binary with no",
    "start": "1000800",
    "end": "1007160"
  },
  {
    "text": "version information in it at all yeah that is very that is very good someone needs to write a blog post about the",
    "start": "1007160",
    "end": "1013759"
  },
  {
    "text": "modern way of solving that problem I do it every time I do it using those LD Flags that's how I've been doing it for",
    "start": "1013759",
    "end": "1019880"
  },
  {
    "text": "years same I set the default to death I read my own blog post I have to Google",
    "start": "1019880",
    "end": "1025400"
  },
  {
    "text": "myself and then find my blog post that says what the LD flags are and look them up and just copy paste and hope that I",
    "start": "1025400",
    "end": "1032120"
  },
  {
    "text": "got it right when I wrote it I think everybody copies and pastes they like we all have one that we wrote Somewhere for",
    "start": "1032120",
    "end": "1039558"
  },
  {
    "text": "ourselves we just copy and paste it around yeah we we've actually got an internal command that generates the",
    "start": "1039559",
    "end": "1045720"
  },
  {
    "text": "parameters for that flag so you just pipe the output from that command into",
    "start": "1045720",
    "end": "1050840"
  },
  {
    "text": "the go build yeah I see this is great we have all these old Packy Solutions we can",
    "start": "1050840",
    "end": "1057120"
  },
  {
    "text": "start getting rid of [Music]",
    "start": "1057120",
    "end": "1069039"
  },
  {
    "text": "now this episode is brought to you by our friends at equinix metal globally interconnected fully automated bare",
    "start": "1069039",
    "end": "1075600"
  },
  {
    "text": "metal equinix metal gives you Hardware at your finger tips with physical infrastructure and software speed",
    "start": "1075600",
    "end": "1081240"
  },
  {
    "text": "accelerate your workloads with fully automated bare metal that's secure powerful and cost effective this is the",
    "start": "1081240",
    "end": "1087760"
  },
  {
    "text": "promise of the cloud delivered on bare metal equinex metal makes it easier than ever to take advantage of the unmatched",
    "start": "1087760",
    "end": "1094080"
  },
  {
    "text": "Global reach and connectivity ecosystem made possible by equinex which includes more than 220 data centers across 63",
    "start": "1094080",
    "end": "1100880"
  },
  {
    "text": "metros making interconnection easy and they're obsessed with making bare metal even more awesome seriously check out",
    "start": "1100880",
    "end": "1107280"
  },
  {
    "text": "these features 60-second deploys hourly pricing a customer success team that",
    "start": "1107280",
    "end": "1112320"
  },
  {
    "text": "engages over slack x86 Intel AMD and arm single tenant mvme and SSD storage",
    "start": "1112320",
    "end": "1119799"
  },
  {
    "text": "restful API first class devops Integrations equinex fabric integration",
    "start": "1119799",
    "end": "1125200"
  },
  {
    "text": "support for Enterprise osses and open source Linux os's air gapped installs without a public IP no installed agent",
    "start": "1125200",
    "end": "1132159"
  },
  {
    "text": "or Keys extensive open source love and support plus so much more visit info.",
    "start": "1132159",
    "end": "1137880"
  },
  {
    "text": "equinex metal.com changelog get $500 in free credit to play with again info.",
    "start": "1137880",
    "end": "1143120"
  },
  {
    "text": "equinix metal.com [Music]",
    "start": "1143120",
    "end": "1161600"
  },
  {
    "text": "changelog okay so maybe we could explore a little bit more then about how go Ed",
    "start": "1161600",
    "end": "1166640"
  },
  {
    "text": "works it's it's a kind of special comment isn't it and this is unusual in go it's one of the unusual things I",
    "start": "1166640",
    "end": "1173799"
  },
  {
    "text": "think of the design where specific comments have special meaning goat",
    "start": "1173799",
    "end": "1181039"
  },
  {
    "text": "generates another one and there are build tags but how does that actually how does it work how would you use go in",
    "start": "1181039",
    "end": "1187039"
  },
  {
    "text": "bed if you wanted to bring in a file into a string it's actually quite um",
    "start": "1187039",
    "end": "1192919"
  },
  {
    "text": "quite Pleasant and easy fairly straightforward um to use I I obviously hesit never I never want to say the word",
    "start": "1192919",
    "end": "1199919"
  },
  {
    "text": "easy because or simple um because it's never that matter of fact I struggled with trying to figure out how to embed",
    "start": "1199919",
    "end": "1207280"
  },
  {
    "text": "uh files by an extension um and I'll say that in minut so basically what you do is you set up uh the variable you want",
    "start": "1207280",
    "end": "1213679"
  },
  {
    "text": "to embed into whether it's a a string a slice of bites or uh an embed",
    "start": "1213679",
    "end": "1220280"
  },
  {
    "text": "FS variable those are your kind of three choices somebody please stop me if I",
    "start": "1220280",
    "end": "1225440"
  },
  {
    "text": "forgot one but I'm pretty sure those are your three choices uh that you can put this directive above so you get your",
    "start": "1225440",
    "end": "1231240"
  },
  {
    "text": "little go colon embed directive and then you tell it what kind of files you want and those files and this is as somebody",
    "start": "1231240",
    "end": "1237600"
  },
  {
    "text": "who's written these systems this is what I love those files that you're asking for are relative to the source code um",
    "start": "1237600",
    "end": "1245640"
  },
  {
    "text": "so there's this kind of consistency to it if I'm in CMD",
    "start": "1245640",
    "end": "1251919"
  },
  {
    "text": "slfu main.go and I reference templates CSS it's going to EXP expect templates",
    "start": "1251919",
    "end": "1258760"
  },
  {
    "text": "to be right next to main.go and and so on right um and that sort of",
    "start": "1258760",
    "end": "1263840"
  },
  {
    "text": "resolution can be really tricky to do if you don't have the go tooling behind you",
    "start": "1263840",
    "end": "1270200"
  },
  {
    "text": "like if you're not in the go tooling if you have to do it all aftermarket um because those what kind of problems you do uh and it works for like I said all",
    "start": "1270200",
    "end": "1277240"
  },
  {
    "text": "three of those and you can do um you know I want templates so I can do templates slash star so there's a wild",
    "start": "1277240",
    "end": "1283640"
  },
  {
    "text": "card um you can use and you can also use you know star. CSS for example what I",
    "start": "1283640",
    "end": "1289880"
  },
  {
    "text": "the struggle I came into was I had assets CSS slash and then a bunch of CSS",
    "start": "1289880",
    "end": "1295480"
  },
  {
    "text": "files and I just did for my embed directive assets star.",
    "start": "1295480",
    "end": "1300640"
  },
  {
    "text": "CSS so it was only looking in the One Directory so I needed another star another slash to kind of recurse through",
    "start": "1300640",
    "end": "1307840"
  },
  {
    "text": "all them but once I figured that out it was great the the gotcha there is that",
    "start": "1307840",
    "end": "1312960"
  },
  {
    "text": "go has a builtin uh pattern matching um it's in file path",
    "start": "1312960",
    "end": "1318720"
  },
  {
    "text": "match um and it kind of stinks um to be honest uh it's not I mean it's fine for",
    "start": "1318720",
    "end": "1324799"
  },
  {
    "text": "what it is but it's purposefully very simple uh in the way that a lot of go tools are um and so it doesn't support",
    "start": "1324799",
    "end": "1331400"
  },
  {
    "text": "star star so if you're familiar with a lot of the JavaScript asset building",
    "start": "1331400",
    "end": "1336799"
  },
  {
    "text": "tools they'll have you know star star/ star. CSS will mean any CSS file",
    "start": "1336799",
    "end": "1342480"
  },
  {
    "text": "anywhere underneath this particular path and the g file path matcher does not",
    "start": "1342480",
    "end": "1347600"
  },
  {
    "text": "have that it only supports a single star in a particular location um so if you",
    "start": "1347600",
    "end": "1353480"
  },
  {
    "text": "say go embed assets slst star. CSS it'll get any CSS files you have that are in",
    "start": "1353480",
    "end": "1360480"
  },
  {
    "text": "the assets folder but not in the CSS folder that's underneath assets so it",
    "start": "1360480",
    "end": "1366640"
  },
  {
    "text": "it's a little bit of a gotcha yeah that's interesting I kind of I don't mind that though yeah well like I said",
    "start": "1366640",
    "end": "1372520"
  },
  {
    "text": "you could do that star you could do an intermediate star just the one star and then it'll do all folders what even no",
    "start": "1372520",
    "end": "1380679"
  },
  {
    "text": "matter how deep they are I don't know about that well here's the thing though in a way it's better that it's just",
    "start": "1380679",
    "end": "1387880"
  },
  {
    "text": "really clear and obvious and if you want to embed more things you have different you know what I mean it's almost like it",
    "start": "1387880",
    "end": "1393919"
  },
  {
    "text": "would be hard to find what you were looking for potentially if uh you had lots of CSS files and a big directory",
    "start": "1393919",
    "end": "1401480"
  },
  {
    "text": "structure with CSS files say they're named the same separated only by path which happens if you've got theming and",
    "start": "1401480",
    "end": "1408279"
  },
  {
    "text": "sometimes yeah like yeah the thing for me I was like actually trying to I had um like nested JS files I had vendored a",
    "start": "1408279",
    "end": "1416279"
  },
  {
    "text": "vendor directory oh you know and trying to find the files in the vendor directory that's where I kind of ran",
    "start": "1416279",
    "end": "1422080"
  },
  {
    "text": "into that problem but it was such a simple thing I said it is very basic it is very simple um but I what I was",
    "start": "1422080",
    "end": "1429640"
  },
  {
    "text": "amazed at is my editor I use um neovim with vimo and I was getting I get",
    "start": "1429640",
    "end": "1436000"
  },
  {
    "text": "govette warnings H if my pattern is wrong if the files don't exist ooh nice",
    "start": "1436000",
    "end": "1443279"
  },
  {
    "text": "that's interesting yeah so right there in my editor I was getting a nice little warning saying oh that pattern doesn't",
    "start": "1443279",
    "end": "1449960"
  },
  {
    "text": "work that's nice and it would be a build error too right uh yeah yeah I believe",
    "start": "1449960",
    "end": "1455600"
  },
  {
    "text": "so yep yeah see that is nice I actually I forgot that you can also specify",
    "start": "1455600",
    "end": "1462400"
  },
  {
    "text": "multiple directories and multiple patterns if you're embedding into a file",
    "start": "1462400",
    "end": "1467559"
  },
  {
    "text": "system so my first take at this I would have you know V CSS and embed the CSS",
    "start": "1467559",
    "end": "1474000"
  },
  {
    "text": "directory in there and then V images and put images in there but then you can actually just have VAR static and just",
    "start": "1474000",
    "end": "1480960"
  },
  {
    "text": "embed everything in there you just need to remember that they still exist in their directories so you need to",
    "start": "1480960",
    "end": "1487919"
  },
  {
    "text": "reference HTML index.html yeah so that's actually a",
    "start": "1487919",
    "end": "1493360"
  },
  {
    "text": "really good way to do it so if you have VAR static or VAR fs and then then you say in the go embed comment above it Go",
    "start": "1493360",
    "end": "1500960"
  },
  {
    "text": "embed assets CSS star. CSS space assets",
    "start": "1500960",
    "end": "1507840"
  },
  {
    "text": "sljs star. JS uh and then images and so forth and you can put it all into a",
    "start": "1507840",
    "end": "1513200"
  },
  {
    "text": "single file system that way that's cool yeah and you can also uh if that line",
    "start": "1513200",
    "end": "1519360"
  },
  {
    "text": "starts getting too long so it's just space separated you can use multiple lines oh really didn't know that so you",
    "start": "1519360",
    "end": "1525840"
  },
  {
    "text": "can have multiple go Ed Direct above the variable declaration so you",
    "start": "1525840",
    "end": "1531760"
  },
  {
    "text": "can do it really nice and you know one one's kind of line if you've got maybe two things three things but after that",
    "start": "1531760",
    "end": "1537919"
  },
  {
    "text": "you can put a nice even ordered list you know you can sort it and just all make it all look nice right so that's really",
    "start": "1537919",
    "end": "1543159"
  },
  {
    "text": "nice too so you can build up your static very deliberately that way just in a",
    "start": "1543159",
    "end": "1548720"
  },
  {
    "text": "hurry if you just do go embed assets it will embed almost everything in the assets uh recursively um the the things",
    "start": "1548720",
    "end": "1557240"
  },
  {
    "text": "that it doesn't embed our DOT files so files that begin with DOT which you would kind of expect it also doesn't",
    "start": "1557240",
    "end": "1563120"
  },
  {
    "text": "embed files that begin with underscore um and the logic behind this is that go will not compile files that",
    "start": "1563120",
    "end": "1570760"
  },
  {
    "text": "begin with underscore so if you have underscore my file. go it it will just be ignored by the go compiler I think",
    "start": "1570760",
    "end": "1577559"
  },
  {
    "text": "that's a little bit weird to be honest the logic behind it but uh if if you find that that's a problem if you",
    "start": "1577559",
    "end": "1583480"
  },
  {
    "text": "explicitly name your underscore files or if you say assets slore star that's a",
    "start": "1583480",
    "end": "1590320"
  },
  {
    "text": "way of working around that yeah that pattern of using underscore file names is very common in the Ruby on Rails",
    "start": "1590320",
    "end": "1596159"
  },
  {
    "text": "world yeah for for doing partials um so anybody who's kind of brought that theory",
    "start": "1596159",
    "end": "1602760"
  },
  {
    "text": "over that's a great little gotcha I didn't know that that well I didn't make that connection that it would do",
    "start": "1602760",
    "end": "1609279"
  },
  {
    "text": "something like that like throw away an HTML file that begin with an underscore if you say templatesstar HTML it will",
    "start": "1609279",
    "end": "1616000"
  },
  {
    "text": "include the underscore yeah it's the default if you just say embed templates and you think okay now it's going to",
    "start": "1616000",
    "end": "1621840"
  },
  {
    "text": "embed everything in templates and all the subdirectories of templates fortunately it's the kind of error that",
    "start": "1621840",
    "end": "1627000"
  },
  {
    "text": "you'll you'll notice as soon as you try to use the partial and it's not there yeah oh here's this is actually really",
    "start": "1627000",
    "end": "1632960"
  },
  {
    "text": "great to Segway to the tooling the go tooling will tell you what it expects to embed uh in your code so if you run go",
    "start": "1632960",
    "end": "1642720"
  },
  {
    "text": "list- Json it's G to spit out kind of a Json kind of build some basic kind of",
    "start": "1642720",
    "end": "1649919"
  },
  {
    "text": "module and package information and in that it's going to be all the files it's going to embed so if wasn't there a similar",
    "start": "1649919",
    "end": "1657159"
  },
  {
    "text": "command in packager where you could Packer list and then see yeah and I use",
    "start": "1657159",
    "end": "1663159"
  },
  {
    "text": "that all the time because sometimes files would just disappear and in your CI you need to see what's actually going",
    "start": "1663159",
    "end": "1669399"
  },
  {
    "text": "on so that's a really nice way and you can obviously you could test against that um if you wanted to um but then you",
    "start": "1669399",
    "end": "1677000"
  },
  {
    "text": "start testing against the language too I think but um but the tooling has kind of",
    "start": "1677000",
    "end": "1682039"
  },
  {
    "text": "has shows you that information so if you are like what is happening what is actually being put in here you don't",
    "start": "1682039",
    "end": "1688960"
  },
  {
    "text": "have to go digging through debug logs you can just quickly run go list Das Json those are the six files it's",
    "start": "1688960",
    "end": "1696240"
  },
  {
    "text": "embedding I thought it was supposed to be embedding 106 files my pattern's",
    "start": "1696240",
    "end": "1701600"
  },
  {
    "text": "wrong I'm missing a whole folder of stuff right um so it helps you immediately jump back back to to where",
    "start": "1701600",
    "end": "1708799"
  },
  {
    "text": "that problem is it is interesting how in go generally it's a very simple language",
    "start": "1708799",
    "end": "1715000"
  },
  {
    "text": "there's very little magic but then sometimes you get these opinions baked",
    "start": "1715000",
    "end": "1720240"
  },
  {
    "text": "in to the language so you know automatically excluding files starting with an underscore if you don't know",
    "start": "1720240",
    "end": "1726399"
  },
  {
    "text": "about that then it's not very clear and it seems a little feels a bit more like",
    "start": "1726399",
    "end": "1731519"
  },
  {
    "text": "a framework than a language sometimes because the you know the the go authors",
    "start": "1731519",
    "end": "1737159"
  },
  {
    "text": "of taken opinions M and generally I find it's best to just lean into them and",
    "start": "1737159",
    "end": "1742600"
  },
  {
    "text": "enjoy them and uh it just keeps everything nice and simple and clear but you do need to figure out what those",
    "start": "1742600",
    "end": "1748760"
  },
  {
    "text": "opinions are that's a really good way to put it yeah yes polite wasn't",
    "start": "1748760",
    "end": "1755399"
  },
  {
    "text": "it um well here's one um and we're not at the unpopular opinion section yet but",
    "start": "1755399",
    "end": "1760440"
  },
  {
    "text": "if you thought that the comments to Magic comments in go was weird what's",
    "start": "1760440",
    "end": "1766080"
  },
  {
    "text": "going on with this under _ import for embed you have to import underscore",
    "start": "1766080",
    "end": "1771360"
  },
  {
    "text": "embed the reasoning behind this is that they don't want somebody who's using go",
    "start": "1771360",
    "end": "1777320"
  },
  {
    "text": "115 or below to accidentally try to build something that requires an Ed and",
    "start": "1777320",
    "end": "1784399"
  },
  {
    "text": "it looks like it works and then you go to run it and it doesn't actually work and so to get around this they require",
    "start": "1784399",
    "end": "1790080"
  },
  {
    "text": "you to import the embed package anytime you use an embed but if you're just",
    "start": "1790080",
    "end": "1796080"
  },
  {
    "text": "embedding a file as a string or embedding a file as a slice of bites you don't actually use the embed package so",
    "start": "1796080",
    "end": "1803200"
  },
  {
    "text": "to get around this you do underscore import uncore embed and that tells it",
    "start": "1803200",
    "end": "1809039"
  },
  {
    "text": "okay I'm using the embed feature in this file so make sure that it's available",
    "start": "1809039",
    "end": "1814840"
  },
  {
    "text": "but it it's another one of those things where if you don't understand why it's there it just sort of looks bizarre like",
    "start": "1814840",
    "end": "1820960"
  },
  {
    "text": "I have to include this import that doesn't do anything for no reason yeah",
    "start": "1820960",
    "end": "1826600"
  },
  {
    "text": "but there is a Reon well we do that already in several places and go the registration of a database I don't uh",
    "start": "1826600",
    "end": "1835279"
  },
  {
    "text": "package is kind of a great way a great example of that where they're doing it for the side effect now we could argue",
    "start": "1835279",
    "end": "1841679"
  },
  {
    "text": "whether they should be doing it for the side effect or not we can't we they shouldn't I've got my opinions um but",
    "start": "1841679",
    "end": "1848120"
  },
  {
    "text": "the side effect is it gets registered to a global map um when that happens right",
    "start": "1848120",
    "end": "1853760"
  },
  {
    "text": "um that driver so it's We There is precedent in the standard library for",
    "start": "1853760",
    "end": "1859200"
  },
  {
    "text": "that type of technique doesn't necessarily mean I like it this is even",
    "start": "1859200",
    "end": "1864320"
  },
  {
    "text": "more strict than that though because with the database example you only have",
    "start": "1864320",
    "end": "1869360"
  },
  {
    "text": "to import it in your package main or import it one place in your entire",
    "start": "1869360",
    "end": "1874760"
  },
  {
    "text": "program but with this every time you embed into a particular string or slice",
    "start": "1874760",
    "end": "1880159"
  },
  {
    "text": "of bites you have to make sure that the the import of embed is there or else it will say you didn't import embed see",
    "start": "1880159",
    "end": "1887639"
  },
  {
    "text": "that that doesn't bother me too much as as somebody who's again you know written these types of tools I also look",
    "start": "1887639",
    "end": "1894480"
  },
  {
    "text": "at that as a marker like before I go and start parsing this whole go file are",
    "start": "1894480",
    "end": "1900360"
  },
  {
    "text": "they even using the package if they're not using in bed why should I bother to parse this um so that to me it that is",
    "start": "1900360",
    "end": "1908200"
  },
  {
    "text": "less egregious than say the registration of a database driver I tend to put all of my",
    "start": "1908200",
    "end": "1915120"
  },
  {
    "text": "embedded resources in a single file so top level I have a Resources directory resources. go and that's the",
    "start": "1915120",
    "end": "1922480"
  },
  {
    "text": "only place I'll embed anything and then all other packages can import from there they don't need to know about embeds at",
    "start": "1922480",
    "end": "1929360"
  },
  {
    "text": "all but it is one area where I hope that the tooling can maybe get a little bit better because you know if vs code or or",
    "start": "1929360",
    "end": "1937039"
  },
  {
    "text": "Vim or neov could detect you're using 1.16 you have a go and bed directive in",
    "start": "1937039",
    "end": "1942799"
  },
  {
    "text": "your code it could just import that for you um as opposed to not I think he will I'm sure go Imports",
    "start": "1942799",
    "end": "1950320"
  },
  {
    "text": "will be updated with that functionality eventually if it hasn't been already yeah yeah I think so I once put that to",
    "start": "1950320",
    "end": "1959120"
  },
  {
    "text": "Brad Fitzpatrick about whether um those just importing a package and have",
    "start": "1959120",
    "end": "1964159"
  },
  {
    "text": "relying on the side effect of doing that whether in retrospect he'd change that",
    "start": "1964159",
    "end": "1969639"
  },
  {
    "text": "and he looked at me in a way that said yeah you are the best so and that's I",
    "start": "1969639",
    "end": "1975600"
  },
  {
    "text": "think he had just had some bad uh lunch if I remember correctly we had gone out to that really dodgy place it's",
    "start": "1975600",
    "end": "1982200"
  },
  {
    "text": "delicious yeah [Music]",
    "start": "1982200",
    "end": "1993519"
  },
  {
    "text": "well this episode is brought to you by our friends at rol retool helps you build internal tools fast and easy from",
    "start": "1993519",
    "end": "2000720"
  },
  {
    "text": "startups to Fortune 500s the world's best teams use retool to power their internal apps assemble your app in just",
    "start": "2000720",
    "end": "2006360"
  },
  {
    "text": "a few minutes by dragging and dropping from pre-built components connect to most databases or anything with the rest",
    "start": "2006360",
    "end": "2011679"
  },
  {
    "text": "graphql or grpc API retool empowers you to work with all your data sources seamlessly in one single app retool is",
    "start": "2011679",
    "end": "2019200"
  },
  {
    "text": "highly hackable so you're never limited by what's available out of the box if you can rit in JavaScript and an API you",
    "start": "2019200",
    "end": "2025000"
  },
  {
    "text": "can build it in retool you can use their cloud service or host it on Prem for yourself learn more and tryf free at",
    "start": "2025000",
    "end": "2031519"
  },
  {
    "text": "ret.com changelog again ret.com changelog",
    "start": "2031519",
    "end": "2038270"
  },
  {
    "text": "[Music]",
    "start": "2038270",
    "end": "2041740"
  },
  {
    "text": "[Music] just a quick question then I'll put this",
    "start": "2044160",
    "end": "2049638"
  },
  {
    "text": "to all three of you what's the best thing you've ever embedded Mark well you can go first",
    "start": "2049639",
    "end": "2057760"
  },
  {
    "text": "don't laugh away from the mic we need that I really need that the best thing I've ever embedded uh is an asy image of",
    "start": "2057760",
    "end": "2065919"
  },
  {
    "text": "Jim w oh what a great answer thank you can",
    "start": "2065919",
    "end": "2070960"
  },
  {
    "text": "anyone beat that as an answer I have a similar answer but uh I embedded an",
    "start": "2070960",
    "end": "2076800"
  },
  {
    "text": "image of Pikachu in a test um because we had an algorithm that was detecting",
    "start": "2076800",
    "end": "2083118"
  },
  {
    "text": "prominent colors from images so I embedded Pikachu in my test so that I",
    "start": "2083119",
    "end": "2088440"
  },
  {
    "text": "could run that through my code M that's actually a great one so Matt you said at",
    "start": "2088440",
    "end": "2094079"
  },
  {
    "text": "the the top that I have a PhD in philosophy it does doesn't come up in my job very often but it does for this",
    "start": "2094079",
    "end": "2100800"
  },
  {
    "text": "which is that I embedded a Quin um so a Quin is a kind of computer science joke",
    "start": "2100800",
    "end": "2106280"
  },
  {
    "text": "named for uh wvo Quin who was a philosopher uh very active in the 60s uh",
    "start": "2106280",
    "end": "2113240"
  },
  {
    "text": "and it's a thing in computer science where you make a program that embeds itself that can print itself out uh and",
    "start": "2113240",
    "end": "2120000"
  },
  {
    "text": "so if you want to make a program that can print itself out all you have to do is say go embed the name of your file.",
    "start": "2120000",
    "end": "2127680"
  },
  {
    "text": "go and then print out the embed uh so it's a recursive it's embedding itself",
    "start": "2127680",
    "end": "2134640"
  },
  {
    "text": "that is amazing that is very meta and I feel like is the start of how Terminator",
    "start": "2134640",
    "end": "2140520"
  },
  {
    "text": "happens like something like that and then it it just grew too complicated yes",
    "start": "2140520",
    "end": "2146000"
  },
  {
    "text": "go in bed is how Skynet starts yeah not the Amazon flying drones uh or any of",
    "start": "2146000",
    "end": "2152920"
  },
  {
    "text": "that stuff but but this this is he uses the AWS apis to control Russ Cox has started Skynet off with the go in bed",
    "start": "2152920",
    "end": "2160079"
  },
  {
    "text": "thanks Russ go generate as well that actually reminds me there there's a uh",
    "start": "2160079",
    "end": "2165119"
  },
  {
    "text": "was it Russ Cox who did the draft design presentation on YouTube of going bed um",
    "start": "2165119",
    "end": "2170920"
  },
  {
    "text": "this was June last year I believe so yeah and um one of the first things that he did was embed a file but in within a",
    "start": "2170920",
    "end": "2180240"
  },
  {
    "text": "function and it's funny because that was the first thing I tried to do when 1.6 came out but you actually can't you have",
    "start": "2180240",
    "end": "2187440"
  },
  {
    "text": "to Ed at aage level variable which I don't know how I feel about to be",
    "start": "2187440",
    "end": "2193880"
  },
  {
    "text": "Hest yeah interesting because a lot of us try and avoid Global State altogether",
    "start": "2193880",
    "end": "2200119"
  },
  {
    "text": "um but in a way is is it okay that this breaks that rule uh so the original um",
    "start": "2200119",
    "end": "2207800"
  },
  {
    "text": "the very kind of earliest drafts of The Proposal I think even the ones before",
    "start": "2207800",
    "end": "2213040"
  },
  {
    "text": "kind of they they went out um to the public kind of thing uh circulated around through some of us who had",
    "start": "2213040",
    "end": "2218520"
  },
  {
    "text": "written these kind of packages um and that was one of my first comments was why can't I do it at the at the function",
    "start": "2218520",
    "end": "2227359"
  },
  {
    "text": "level and I think people are really going to want that and you it's definitely going to come up people don't like globals yada yada yada uh and I",
    "start": "2227359",
    "end": "2235079"
  },
  {
    "text": "don't remember quite what Russ's um exact issues were or problems with it um",
    "start": "2235079",
    "end": "2240280"
  },
  {
    "text": "but he did make very valid points as to a both the technical the technical issue",
    "start": "2240280",
    "end": "2246920"
  },
  {
    "text": "around trying to make it work um and also the practicality of why you would really want that kind of a feature for",
    "start": "2246920",
    "end": "2254760"
  },
  {
    "text": "something that is essentially a global pool just like your file system right your file system is this globally",
    "start": "2254760",
    "end": "2260680"
  },
  {
    "text": "accessible pool right so you don't have a separate globally access separate only",
    "start": "2260680",
    "end": "2266800"
  },
  {
    "text": "pool within this function that doesn't that doesn't even make sense conceptually so there was a lot of he",
    "start": "2266800",
    "end": "2273359"
  },
  {
    "text": "had a lot of interesting takes on it if you get the early EST beta of go 116 it",
    "start": "2273359",
    "end": "2279720"
  },
  {
    "text": "actually did let you do embeds at the function level but then the problem that",
    "start": "2279720",
    "end": "2284920"
  },
  {
    "text": "people found as they were using it was that if you embedded a slice of bites",
    "start": "2284920",
    "end": "2290680"
  },
  {
    "text": "someone could mutate that slice of bites and it wasn't clear what that should do",
    "start": "2290680",
    "end": "2297720"
  },
  {
    "text": "so if I if I have a particular function let's say that it embeds a file as a slice of bites and then someone changes",
    "start": "2297720",
    "end": "2305319"
  },
  {
    "text": "the file what what does that mean what are the semantics of that should that cause a crash should that be legal",
    "start": "2305319",
    "end": "2312200"
  },
  {
    "text": "should it be the same when you rerun the function it was just it was too confusing and so then they decided let's",
    "start": "2312200",
    "end": "2318040"
  },
  {
    "text": "make it so that you can only do embedding at the top level you know logically speaking that's the only level",
    "start": "2318040",
    "end": "2324440"
  },
  {
    "text": "where it really makes sense to have embedding and so because that was the decision they ended up dropping the",
    "start": "2324440",
    "end": "2330920"
  },
  {
    "text": "feature of letting you do it in the function which is kind of inconvenient but it's it goes back to that idea a of",
    "start": "2330920",
    "end": "2336839"
  },
  {
    "text": "the go authors they have very kind of strong opinions it's like not magical",
    "start": "2336839",
    "end": "2343359"
  },
  {
    "text": "it's simple but at the same time the opinions are very strong and so the opinion is if you really need it you can",
    "start": "2343359",
    "end": "2350680"
  },
  {
    "text": "deal with it being a global and just don't use it wrong but you can still change those it's a variable in global",
    "start": "2350680",
    "end": "2357880"
  },
  {
    "text": "space right you can change so in the case of embeds the the fs you can swap",
    "start": "2357880",
    "end": "2363200"
  },
  {
    "text": "out one FS for another FS but the fs es themselves are readon they're thread",
    "start": "2363200",
    "end": "2369280"
  },
  {
    "text": "safe so they're meant to be used globally and they're also readon so you",
    "start": "2369280",
    "end": "2375000"
  },
  {
    "text": "can't um kind of mutate them unless you like I said unless you swap out an entire whole new FS gotcha so Matt the",
    "start": "2375000",
    "end": "2382240"
  },
  {
    "text": "issue I think you're talking about is that um if you have the slice of bites you and it's at the top level you could",
    "start": "2382240",
    "end": "2388480"
  },
  {
    "text": "of course change it but if it was in a function you could change it and then you would rerun the function and should",
    "start": "2388480",
    "end": "2394520"
  },
  {
    "text": "you get a fresh copy that was the original or should you get back the embedded one that just got changed if",
    "start": "2394520",
    "end": "2400880"
  },
  {
    "text": "you're used to C or C based languages they have a concept of a static variable where every time you run it it's the",
    "start": "2400880",
    "end": "2407160"
  },
  {
    "text": "same variable and if you change it it's the same between runs but there's no such Concept in go so they would have",
    "start": "2407160",
    "end": "2413880"
  },
  {
    "text": "had to basically invent it for it to make sense yeah that that does make sense and and you know I'm kind of with",
    "start": "2413880",
    "end": "2419119"
  },
  {
    "text": "you on this I don't mind these restrictions and um it's it's about really learning the way the right ways",
    "start": "2419119",
    "end": "2424760"
  },
  {
    "text": "to do things you can always pass arguments around you could always pass a global into some other type or something",
    "start": "2424760",
    "end": "2430520"
  },
  {
    "text": "else if that's what you want to do and that is what is encouraged by the way uh you're encouraged to write your",
    "start": "2430520",
    "end": "2436280"
  },
  {
    "text": "functions to take an fs. FS uh interface so then you can do that for testing",
    "start": "2436280",
    "end": "2442680"
  },
  {
    "text": "quite easily and then you can do that for testing like it's so you know you you'd have a global CSS folder let's say",
    "start": "2442680",
    "end": "2449319"
  },
  {
    "text": "um but your function just takes an fs. FS type so you could pass in that CSS folder or you can use uh the map app FS",
    "start": "2449319",
    "end": "2457560"
  },
  {
    "text": "um that's in the testing package for you know kind of creating your own fictitious file system for testing and",
    "start": "2457560",
    "end": "2463720"
  },
  {
    "text": "just pass that in or you can write your own interfaces around all of this you",
    "start": "2463720",
    "end": "2470079"
  },
  {
    "text": "know you can fulfill your own interface those interfaces and do all sorts of wonderful interesting stuff in the",
    "start": "2470079",
    "end": "2476079"
  },
  {
    "text": "middle but you're encouraged to take an fs. FS uh as your function and not refer",
    "start": "2476079",
    "end": "2482560"
  },
  {
    "text": "to the globals that's kind of how they're getting around it a little bit to what Mark is saying is there are two",
    "start": "2482560",
    "end": "2488680"
  },
  {
    "text": "different types there's the embed FS which is specifically used for embedding",
    "start": "2488680",
    "end": "2494520"
  },
  {
    "text": "these groups of files and now there's a new type called an IO",
    "start": "2494520",
    "end": "2500319"
  },
  {
    "text": "fs. fs and that is an interface that lets multiple different types Implement",
    "start": "2500319",
    "end": "2506599"
  },
  {
    "text": "being a file system um so embed FS implements this interface but also zip",
    "start": "2506599",
    "end": "2513400"
  },
  {
    "text": "reader does and also MF does and uh they're working on making it so the tart",
    "start": "2513400",
    "end": "2519480"
  },
  {
    "text": "text um so if you ever are on the go playground and you know how there can be multiple files in there that format is",
    "start": "2519480",
    "end": "2525280"
  },
  {
    "text": "called textar um that format they're making a um an fs. FS implementation for it so",
    "start": "2525280",
    "end": "2533720"
  },
  {
    "text": "just any different kind of format where you have a bunch of files together you can make an implementation of fs. fs and",
    "start": "2533720",
    "end": "2540599"
  },
  {
    "text": "if your function or method takes an fs. FS that can be put in there it doesn't have to be embed FS that is hardcoded",
    "start": "2540599",
    "end": "2548800"
  },
  {
    "text": "into the binary it can be anything that you swap out in real time including the local file system including the local",
    "start": "2548800",
    "end": "2555520"
  },
  {
    "text": "system right there's a helper in the OS package uh to give you the I believe it's the OS package I believe that gives",
    "start": "2555520",
    "end": "2561760"
  },
  {
    "text": "you the kind of just underlying OS so if you just you know you're building a tool that's supposed to be looking at the",
    "start": "2561760",
    "end": "2567000"
  },
  {
    "text": "underlying OS and you're taking an FS well you just grab that and kind of pass it along through so that begs the",
    "start": "2567000",
    "end": "2572520"
  },
  {
    "text": "question do you think that should be best practice if you're going to work with with files in the local file system",
    "start": "2572520",
    "end": "2577640"
  },
  {
    "text": "should we just use FS now and just use that abstraction because it's more versatile or would you still just use OS",
    "start": "2577640",
    "end": "2583480"
  },
  {
    "text": "open I'm planning on using it um to be perfectly honest because it does make my",
    "start": "2583480",
    "end": "2589119"
  },
  {
    "text": "testing I write a lot of tooling that deals with the file system right um",
    "start": "2589119",
    "end": "2594440"
  },
  {
    "text": "everything from generators Transformers reading and writing the fact that I can just mock up my file system is wonderful",
    "start": "2594440",
    "end": "2603200"
  },
  {
    "text": "is that interface read only as well like the embid file system yeah there read",
    "start": "2603200",
    "end": "2609200"
  },
  {
    "text": "only at this time yeah yeah there's no you can't add files to it and stuff like that yeah but like I said there is a",
    "start": "2609200",
    "end": "2615079"
  },
  {
    "text": "testing uh in the fs testing package there's a map FS that you can use for testing so here's here's all my",
    "start": "2615079",
    "end": "2622319"
  },
  {
    "text": "different files that I want so since this happens at build time is there a way that you can have a situation where",
    "start": "2622319",
    "end": "2629880"
  },
  {
    "text": "you can just be editing CSS files and just sort of refreshing things in order to see those updates or do you have to",
    "start": "2629880",
    "end": "2637079"
  },
  {
    "text": "rebuild you know what I mean like is there a way to have a sort of passive mode where it will just read or would",
    "start": "2637079",
    "end": "2642240"
  },
  {
    "text": "you just build that yourself in in in your particular case so that's where the",
    "start": "2642240",
    "end": "2647400"
  },
  {
    "text": "the fs concept the fs. fs comes in that you could uh have in your program you",
    "start": "2647400",
    "end": "2654520"
  },
  {
    "text": "know depending on how you do command line arguments and flags and and varial variables and whatever it is you do but",
    "start": "2654520",
    "end": "2660800"
  },
  {
    "text": "you could say if this value is true then use the embed fs and if it's false then",
    "start": "2660800",
    "end": "2666680"
  },
  {
    "text": "use the F os. fs and switch between those two as necessary so that could be",
    "start": "2666680",
    "end": "2672040"
  },
  {
    "text": "a really good way for development for things like Buffalo where you want to have things refreshing as the files get",
    "start": "2672040",
    "end": "2679040"
  },
  {
    "text": "changed on disk but then when it's time to build it and ship it either to the server or to the user you can bake it in",
    "start": "2679040",
    "end": "2686720"
  },
  {
    "text": "and make sure that it's concrete I actually like that that's not",
    "start": "2686720",
    "end": "2692000"
  },
  {
    "text": "the default Behavior because I don't often do that kind of work and I found that with the pre-existing Solutions the",
    "start": "2692000",
    "end": "2699760"
  },
  {
    "text": "third party tools for doing this kind of thing I would have so many problems with local file system embedded files you",
    "start": "2699760",
    "end": "2707000"
  },
  {
    "text": "know generated code that's lying around and it would be so difficult to know what was which files were actually being",
    "start": "2707000",
    "end": "2713240"
  },
  {
    "text": "read that I actually prefer this that there's one way of doing it you know the files are always embedded the same way",
    "start": "2713240",
    "end": "2718960"
  },
  {
    "text": "whether you're running you know locally or shipping and deploying it somewhere so I actually I love this but that",
    "start": "2718960",
    "end": "2726119"
  },
  {
    "text": "interface is incredible as well because now that can kind of just you know go through the all our libraries and the",
    "start": "2726119",
    "end": "2732880"
  },
  {
    "text": "the standard Library as well it can become that common kind of point of abstraction yeah and and it's showing up",
    "start": "2732880",
    "end": "2740319"
  },
  {
    "text": "in a lot of standard libraries places Carl was talking about a bunch but I mean like the HTTP package understands",
    "start": "2740319",
    "end": "2746839"
  },
  {
    "text": "FS um you know for doing um serving up static files um the uh templates",
    "start": "2746839",
    "end": "2753000"
  },
  {
    "text": "directory a templates package uh so you can parse an FS right so again those of us who maybe",
    "start": "2753000",
    "end": "2760400"
  },
  {
    "text": "write code generators being able to just parse an FS is",
    "start": "2760400",
    "end": "2765440"
  },
  {
    "text": "wonderful you know there's there's a lot there you can pipe them through in funny ways too like you could say distribute",
    "start": "2765440",
    "end": "2772440"
  },
  {
    "text": "to your client a zip file and and then because the zip file can now be used as",
    "start": "2772440",
    "end": "2777520"
  },
  {
    "text": "an FS you then turn the zip file into a template file system and so instead of",
    "start": "2777520",
    "end": "2784240"
  },
  {
    "text": "like saying here's this directory of templates and I need you to unzip it and put it in this particular place just",
    "start": "2784240",
    "end": "2790440"
  },
  {
    "text": "send them the one file that contains all of the templates they need and they can point it at that file and everything",
    "start": "2790440",
    "end": "2796040"
  },
  {
    "text": "will happen automatically that's good isn't it that is good that's that you know H",
    "start": "2796040",
    "end": "2803040"
  },
  {
    "text": "finally having interfaces around things like files yeah is",
    "start": "2803040",
    "end": "2808839"
  },
  {
    "text": "wonderful like I said you know I don't you know I don't know about a lot of other go developers but I I'm constantly",
    "start": "2808839",
    "end": "2815079"
  },
  {
    "text": "working with the file system and I'm constantly trying to take files and and process them through a pipeline you know",
    "start": "2815079",
    "end": "2823200"
  },
  {
    "text": "first I want to convert the mark down to HTML then I want to run that through a go templat or like you know these all",
    "start": "2823200",
    "end": "2829240"
  },
  {
    "text": "these sorts of different things or whatever it is to be able to have interfaces so I can just kind of mutate",
    "start": "2829240",
    "end": "2834920"
  },
  {
    "text": "and pass along a new version of this file down the chain just just wonderful",
    "start": "2834920",
    "end": "2840599"
  },
  {
    "text": "right I look forward to the cloud providers also implementing it in the clients so that you can just use the",
    "start": "2840599",
    "end": "2846280"
  },
  {
    "text": "file system that's in an S3 bucket or you know other storage is available and",
    "start": "2846280",
    "end": "2851400"
  },
  {
    "text": "that that's the other thing too is you could write interfaces now for S3 that",
    "start": "2851400",
    "end": "2856640"
  },
  {
    "text": "you know they just look like regular files uh and you can write an a file system",
    "start": "2856640",
    "end": "2862319"
  },
  {
    "text": "interface that that talks to S3 or talks to a database right so you can use",
    "start": "2862319",
    "end": "2868079"
  },
  {
    "text": "postgress now as a virtual file system if you wanted to right I mean there's",
    "start": "2868079",
    "end": "2874440"
  },
  {
    "text": "you could do all these different things you like I said you can use S3 as this virtual readon file systems but you know",
    "start": "2874440",
    "end": "2880559"
  },
  {
    "text": "there there you know SQL light if you're doing say an embedded kind of thing one",
    "start": "2880559",
    "end": "2886559"
  },
  {
    "text": "of the nice features of go has always been the io package um when you're a new gopher it can be a little bit confusing",
    "start": "2886559",
    "end": "2893000"
  },
  {
    "text": "like what is package IO what are these read and write methods why do I have to do them why can't I just use like a",
    "start": "2893000",
    "end": "2899440"
  },
  {
    "text": "string um but when you get to understand them how they work is basically an IO reader is a readon file and an IO writer",
    "start": "2899440",
    "end": "2907480"
  },
  {
    "text": "is a wron file and it lets you abstract away what exactly the file is is the",
    "start": "2907480",
    "end": "2913640"
  },
  {
    "text": "file on disk is the file an HTTP response that you're reading is the file",
    "start": "2913640",
    "end": "2918760"
  },
  {
    "text": "an S3 bucket somewhere that you're reading from and so go has always had a way of abstracting away an individual",
    "start": "2918760",
    "end": "2925319"
  },
  {
    "text": "file using package IO but now with package IO FS you can abstract away a",
    "start": "2925319",
    "end": "2931000"
  },
  {
    "text": "file system and so it's not just the one file that you're looking at anymore",
    "start": "2931000",
    "end": "2936240"
  },
  {
    "text": "um because you could always say you know I'm getting this IO reader from S3 or I'm getting this IO reader from a zip",
    "start": "2936240",
    "end": "2943400"
  },
  {
    "text": "file or whatever but now you can have a whole system but Io Io readers don't have file sizes they don't have mod",
    "start": "2943400",
    "end": "2951440"
  },
  {
    "text": "times they don't have any of those things right so they don't have the properties of an actual file in terms of",
    "start": "2951440",
    "end": "2957359"
  },
  {
    "text": "being a file on disk they don't have a name they don't have permissions right and so now we can mock out all of those",
    "start": "2957359",
    "end": "2963720"
  },
  {
    "text": "things yeah and that's just super exciting to me but I like to do terrible",
    "start": "2963720",
    "end": "2969119"
  },
  {
    "text": "awful things with code I've seen some of it yeah great well what's going to be",
    "start": "2969119",
    "end": "2974280"
  },
  {
    "text": "abstracted next all the things uh it's it's actually time if you check your",
    "start": "2974280",
    "end": "2979480"
  },
  {
    "text": "time pieces for unpopular [Music]",
    "start": "2979480",
    "end": "2985640"
  },
  {
    "text": "opinions unpop opinion you what I actually think should probably",
    "start": "2985640",
    "end": "2992760"
  },
  {
    "text": "leave",
    "start": "2994520",
    "end": "2997520"
  },
  {
    "text": "opinion okay so who's got an unpopular opinion for us today call what do you",
    "start": "2999839",
    "end": "3005880"
  },
  {
    "text": "think so this is not really a go opinion um this is more of kind of a global open",
    "start": "3005880",
    "end": "3011559"
  },
  {
    "text": "source software opinion I have which is that there should be some sort of system",
    "start": "3011559",
    "end": "3016640"
  },
  {
    "text": "for government funding of open- source software um so if you think about science in America we have the National",
    "start": "3016640",
    "end": "3022799"
  },
  {
    "text": "Science Foundation we have the National Institutes of Health uh for art we have the National Endowment of the Arts and we have the",
    "start": "3022799",
    "end": "3029599"
  },
  {
    "text": "Corporation for Public Broadcasting so we have these different streams for funding um but in terms of Open Source",
    "start": "3029599",
    "end": "3035760"
  },
  {
    "text": "software right now there's basically just two ways to do it one is um what go",
    "start": "3035760",
    "end": "3041319"
  },
  {
    "text": "does which is that there's a corporate sponsor in this case Google who is putting a lot of money and time into uh",
    "start": "3041319",
    "end": "3049640"
  },
  {
    "text": "these features so go embed Russ Cox did most of the actual development work on it I I mean if you just think about what",
    "start": "3049640",
    "end": "3056839"
  },
  {
    "text": "his time costs this feature probably cost Google somewhere in the ballpark of like $10,000",
    "start": "3056839",
    "end": "3063640"
  },
  {
    "text": "$50,000 right like just adding up how much time their Engineers have put onto it and that's not counting all the",
    "start": "3063640",
    "end": "3069400"
  },
  {
    "text": "people who contributed to the issues if you add it up all that time it would be even more expensive and then the other",
    "start": "3069400",
    "end": "3075280"
  },
  {
    "text": "way that we uh fund software is through kind of the patreon model so there are a couple different projects that are",
    "start": "3075280",
    "end": "3080599"
  },
  {
    "text": "funded that way like the zig programming language where somebody will either",
    "start": "3080599",
    "end": "3086040"
  },
  {
    "text": "go on Twitch or do something so that people are interested in seeing what they're doing and then you give them",
    "start": "3086040",
    "end": "3091799"
  },
  {
    "text": "money to keep them as individuals developing um but there's no real Government funding of Open Source",
    "start": "3091799",
    "end": "3098880"
  },
  {
    "text": "software um and I think it's something that really would be helpful the push back that I've gotten on this opinion is",
    "start": "3098880",
    "end": "3104280"
  },
  {
    "text": "like you're saying that the government should pay the left pad guy I think that's a fair criticism um",
    "start": "3104280",
    "end": "3112119"
  },
  {
    "text": "but I don't think that that would really happen in practice um because if you look at how science is funded usually",
    "start": "3112119",
    "end": "3118119"
  },
  {
    "text": "the government will put together some sort of Grant and the grant will say something like can you research how to",
    "start": "3118119",
    "end": "3125160"
  },
  {
    "text": "cure the Corona virus and then you go to that Grant committee and you say I have",
    "start": "3125160",
    "end": "3130960"
  },
  {
    "text": "these scientists working in my team we have this theory about how we could build a vaccine we've done these",
    "start": "3130960",
    "end": "3137799"
  },
  {
    "text": "vaccines in the past that show that we're qualified to do this and they evaluate your Grant proposal and give it",
    "start": "3137799",
    "end": "3143799"
  },
  {
    "text": "a score and the proposals that score highest get the actual money so in this case there would be something like some",
    "start": "3143799",
    "end": "3149760"
  },
  {
    "text": "sort of board of software funding where people would look at oh go is a popular",
    "start": "3149760",
    "end": "3156960"
  },
  {
    "text": "programming language it has you know millions of developers worldwide and they all say that they would be really",
    "start": "3156960",
    "end": "3163880"
  },
  {
    "text": "excited to use this embed feature so why don't we give you know $10,000 $50,000",
    "start": "3163880",
    "end": "3169319"
  },
  {
    "text": "to this developer and then get some number of months of his or her time and",
    "start": "3169319",
    "end": "3174520"
  },
  {
    "text": "they can work on the future so that everyone else can benefit so I I think something like that I don't see it",
    "start": "3174520",
    "end": "3180480"
  },
  {
    "text": "happening anytime soon that's why I'm putting it in unpopular opinions uh it seems like everybody wants to cut",
    "start": "3180480",
    "end": "3185640"
  },
  {
    "text": "Government funding instead of increasing Government funding uh but I think it would really be helpful just to have",
    "start": "3185640",
    "end": "3191319"
  },
  {
    "text": "like this third stream of ways that you could fund open- Source software and prevent you know developers from getting",
    "start": "3191319",
    "end": "3197960"
  },
  {
    "text": "burned out or the situation where the the corporation changes its mind about what it wants to work on and it walks",
    "start": "3197960",
    "end": "3204319"
  },
  {
    "text": "away yeah very interesting Corey and slack made the point which is even the government systems themselves are using",
    "start": "3204319",
    "end": "3211680"
  },
  {
    "text": "a lot of open- source software and so you know they even benefit would directly benefit so I I used to work",
    "start": "3211680",
    "end": "3219400"
  },
  {
    "text": "with former guest of the show Paul Smith at the ad hoc team and they're great um",
    "start": "3219400",
    "end": "3224680"
  },
  {
    "text": "they do as much as they can in open source um anything that they can get permission from the government to make",
    "start": "3224680",
    "end": "3231000"
  },
  {
    "text": "open source basically they do but I think that's just one one one angle of",
    "start": "3231000",
    "end": "3236799"
  },
  {
    "text": "things which is the angle of when the government builds its own software and there's no reason to keep it secret they",
    "start": "3236799",
    "end": "3242720"
  },
  {
    "text": "should probably open source it but then there's another angle which is for software that isn't necessarily useful",
    "start": "3242720",
    "end": "3248640"
  },
  {
    "text": "to the government there should be some way for the open source maintainers to",
    "start": "3248640",
    "end": "3254119"
  },
  {
    "text": "be able to earn a living with it yeah uh very interesting we will put this to the public on Twitter polls which is go",
    "start": "3254119",
    "end": "3260720"
  },
  {
    "text": "times flavor of democracy and we'll find out if that is indeed popular or unpopular but it's a good one I have a",
    "start": "3260720",
    "end": "3267720"
  },
  {
    "text": "potentially unpopular opinion okay and it is that we should strive to use as",
    "start": "3267720",
    "end": "3273440"
  },
  {
    "text": "few mocks as possible and the amount of mocks should decrease over time this",
    "start": "3273440",
    "end": "3279720"
  },
  {
    "text": "isn't go specific it's just programming in general and I actually used the philosophy that I heard from a band",
    "start": "3279720",
    "end": "3287040"
  },
  {
    "text": "member once uh and he said you should practice how you're going to play so you",
    "start": "3287040",
    "end": "3292280"
  },
  {
    "text": "know if you practice at home and and you've got your headphones on and your amp is on 2% volume and then you're",
    "start": "3292280",
    "end": "3298520"
  },
  {
    "text": "expected to walk onto stage turn the amp up to 110% and all of a sudden those skills",
    "start": "3298520",
    "end": "3304559"
  },
  {
    "text": "transfer that doesn't happen so I think in software if if you're going to run your code against my SQL then test your",
    "start": "3304559",
    "end": "3312240"
  },
  {
    "text": "code against my SQL there there are obviously limitations you know if you talk about billing you don't want to",
    "start": "3312240",
    "end": "3318640"
  },
  {
    "text": "start billing some you know charging your own credit card or something like that but often you know those kinds of",
    "start": "3318640",
    "end": "3324559"
  },
  {
    "text": "services will give you emulators that you can run locally things like that and and I find that it's actually been",
    "start": "3324559",
    "end": "3330680"
  },
  {
    "text": "incredibly helpful for me over time because I got to the point where one of the services I've been working on for",
    "start": "3330680",
    "end": "3336119"
  },
  {
    "text": "the past year I actually haven't run it locally in a year I've only run the",
    "start": "3336119",
    "end": "3342480"
  },
  {
    "text": "tests ever so someone asked me G run main.go what environment variables do I",
    "start": "3342480",
    "end": "3347960"
  },
  {
    "text": "have to set and I said I don't know you just you know you go write to test and you run the test and that's how you know",
    "start": "3347960",
    "end": "3353240"
  },
  {
    "text": "it's going to work mhm yeah yeah that's very interesting and I know I I I do",
    "start": "3353240",
    "end": "3358880"
  },
  {
    "text": "like that point we will test that one too I never mock my database calls right",
    "start": "3358880",
    "end": "3364000"
  },
  {
    "text": "you always use a real database always yeah well what how do you consider fs.",
    "start": "3364000",
    "end": "3369119"
  },
  {
    "text": "FS is that a mock or is that an interface like if in production you're using the embed FS but in development",
    "start": "3369119",
    "end": "3375920"
  },
  {
    "text": "you're using the os. fs do you consider that a mock or do you consider that",
    "start": "3375920",
    "end": "3381079"
  },
  {
    "text": "something different it's an implementation of um an interface yeah I I can see what you're saying what is a",
    "start": "3381079",
    "end": "3388280"
  },
  {
    "text": "mock it's what Matt does to Mark the whole episode long yeah and vice versa",
    "start": "3388280",
    "end": "3394240"
  },
  {
    "text": "oh I I have an I have an unpopular opinion okay before we do though just want to say Roberto clais made this",
    "start": "3394240",
    "end": "3400280"
  },
  {
    "text": "point to your point Wayne that if you if you have code that uses random numbers",
    "start": "3400280",
    "end": "3405440"
  },
  {
    "text": "then your tests should also use random numbers it's it's kind of common for us to want to control the seed in a in test",
    "start": "3405440",
    "end": "3413920"
  },
  {
    "text": "code so that you have predictable tests but in a way that stops IT being like the real world a little bit and actually",
    "start": "3413920",
    "end": "3420000"
  },
  {
    "text": "it'd be better off if you were using random numbers so that's an interesting point that extends with your to your",
    "start": "3420000",
    "end": "3426280"
  },
  {
    "text": "point Wayne yeah if you got nothing to say about that then we'll listen to Mark's",
    "start": "3426280",
    "end": "3432440"
  },
  {
    "text": "unpopular opinion mine just popped into my head",
    "start": "3432440",
    "end": "3437640"
  },
  {
    "text": "when we were talking about sandwiches uh I I know right I don't particularly care",
    "start": "3437640",
    "end": "3443680"
  },
  {
    "text": "for bacon oh wow you're kicked off the internet I think it's highly overrated to be",
    "start": "3443680",
    "end": "3450039"
  },
  {
    "text": "perfectly honest right very unpopular it's a wildly unpopular opinion I get",
    "start": "3450039",
    "end": "3455480"
  },
  {
    "text": "that what what would you rather eat I would rather have sausages instead of bacon with like my ex right that's fair",
    "start": "3455480",
    "end": "3463680"
  },
  {
    "text": "enough well there's different types of bacon isn't there because in England the bacon is very different to I've had it in the US it is yeah uh I don't care for",
    "start": "3463680",
    "end": "3471000"
  },
  {
    "text": "either yeah yeah fair enough I'm just against any kind of bacon if you like",
    "start": "3471000",
    "end": "3476200"
  },
  {
    "text": "really floppy bacon you want to get yourself to London cuz you got the floppiest bacon in town I mean in the",
    "start": "3476200",
    "end": "3482039"
  },
  {
    "text": "world so floppy bacon you thing yeah actually an American friend of mine",
    "start": "3482039",
    "end": "3487799"
  },
  {
    "text": "ordered a cocktail and I guess in New York this would be a thing the normal thing they asked for bacon in the",
    "start": "3487799",
    "end": "3494400"
  },
  {
    "text": "cocktail which if you imagine in New York in a cool place with American style bacon that's like firm and sticks up you",
    "start": "3494400",
    "end": "3501720"
  },
  {
    "text": "know big brid of the British a bit of floppy you drink that honestly it's horrific it",
    "start": "3501720",
    "end": "3507880"
  },
  {
    "text": "gave me nightmares um they wouldn't do it but you know the appeal of that is not not nearly as nice uh but yeah",
    "start": "3507880",
    "end": "3514319"
  },
  {
    "text": "that's there you go there's my unpopular opinion ah well we'll see how unpopular that is probably not that unpopular with",
    "start": "3514319",
    "end": "3519760"
  },
  {
    "text": "the vegans but maybe uh with the carnivores carnivore listeners of us",
    "start": "3519760",
    "end": "3525960"
  },
  {
    "text": "yeah I think so I do like plenty of other meats though so oh well you know maybe we should save this for another",
    "start": "3525960",
    "end": "3532000"
  },
  {
    "text": "episode cuz I think so's favorite Meats favorite kinds of flat",
    "start": "3532000",
    "end": "3537599"
  },
  {
    "text": "meat you only have really like Shaker is fine cuz you can slip that under the door but yeah a juicy riy no chance",
    "start": "3537599",
    "end": "3545240"
  },
  {
    "text": "that's right yeah okay anyone else got anything mental to add not mental I shouldn't",
    "start": "3545240",
    "end": "3550839"
  },
  {
    "text": "have said that anyone else got anything crazy to add no no uh okay well we're R",
    "start": "3550839",
    "end": "3558720"
  },
  {
    "text": "have time but you know we could just save a few minutes for some light chat um car",
    "start": "3558720",
    "end": "3565319"
  },
  {
    "text": "nothing says light chat like telling everybody to have a light chat and go",
    "start": "3565319",
    "end": "3570839"
  },
  {
    "text": "this is the light chat section yeah um Carl you've got a Blog haven't you because I read about how to use go and",
    "start": "3570839",
    "end": "3576599"
  },
  {
    "text": "bed on your blog what's the internet resource indicator for your the the UN",
    "start": "3576599",
    "end": "3582400"
  },
  {
    "text": "uniform resource indicator for your blog uh blog. Carm johnson.net that's M as in",
    "start": "3582400",
    "end": "3589240"
  },
  {
    "text": "Matthew right is that what your middle name is oh and Carl with a c it is good",
    "start": "3589240",
    "end": "3594440"
  },
  {
    "text": "good name coincidentally yeah good name um Wayne your middle name's Ashley isn't",
    "start": "3594440",
    "end": "3599599"
  },
  {
    "text": "it it is indeed do you go by Wayne Ashley Berry or just Wayne Barry I do I like using my full name I don't know why",
    "start": "3599599",
    "end": "3606079"
  },
  {
    "text": "I just you know it was given to me so why not yeah I knew I went to school",
    "start": "3606079",
    "end": "3611200"
  },
  {
    "text": "with a kid called Ashley Berry so this is what that's actually really Jarred in my head um he he was an absolute idiot",
    "start": "3611200",
    "end": "3617480"
  },
  {
    "text": "he tried to set fire to my trousers oh dear do one of you three know the most",
    "start": "3617480",
    "end": "3622960"
  },
  {
    "text": "popular Carl Johnson off the top of your heads is it in The Simpsons that's",
    "start": "3622960",
    "end": "3629480"
  },
  {
    "text": "close now then it is CJ from Grand Theft Auto 3 San Andreas that's his real full",
    "start": "3629480",
    "end": "3635880"
  },
  {
    "text": "name is it his name is Carl Johnson so if you search for my name without the M",
    "start": "3635880",
    "end": "3641200"
  },
  {
    "text": "you get pictures of Carl Johnson you know posing in front of cars in very low",
    "start": "3641200",
    "end": "3647559"
  },
  {
    "text": "polygon resolution funny is if you search Mark Bates you get the same thing except me",
    "start": "3647559",
    "end": "3653599"
  },
  {
    "text": "posing in front of car cars yes in incredibly low resolution with a tank",
    "start": "3653599",
    "end": "3659119"
  },
  {
    "text": "top on and well yeah how well she going to pose in front of a car goes with that saying and yet we did and yet we did",
    "start": "3659119",
    "end": "3668839"
  },
  {
    "text": "well that's all the time we have for today on go time but uh thanks for",
    "start": "3668839",
    "end": "3676240"
  },
  {
    "text": "listening and also thanks for being on it Mr Bates Mark Bates thank you very much for coming Carl Johnson you'll have",
    "start": "3676240",
    "end": "3683039"
  },
  {
    "text": "to come back and also you Wayne Ashley Berry please also come back another time it's been great very informative thanks",
    "start": "3683039",
    "end": "3689400"
  },
  {
    "text": "for having me whoa I'm sorry what's they got comeback anytime yeah oh you noticed",
    "start": "3689400",
    "end": "3697200"
  },
  {
    "text": "you noticed that you just kind of like waved me off you're like thanks for coming mark bye I think it was the bacon",
    "start": "3697200",
    "end": "3703720"
  },
  {
    "text": "comment that did that yeah well no Matt's a vegan so he's I don't eat bacon he's going to be on board with that one",
    "start": "3703720",
    "end": "3710119"
  },
  {
    "text": "yeah don't tell well there the fake bacon do you like fake bacon or no",
    "start": "3710119",
    "end": "3715440"
  },
  {
    "text": "I don't know why we're spending all this science energy trying to make fake meat",
    "start": "3715440",
    "end": "3721520"
  },
  {
    "text": "um so no I don't I mean no I don't get it the times when I've tried vegan diets",
    "start": "3721520",
    "end": "3727319"
  },
  {
    "text": "that that has mostly been my experience is that like all the fake meat is not worth it but I do think that some of the",
    "start": "3727319",
    "end": "3733279"
  },
  {
    "text": "fake bacon is okay to be fair there's um there are now burgers that are um very",
    "start": "3733279",
    "end": "3740039"
  },
  {
    "text": "good impossible burgers and there's another one I forget um that are just like just as I remember eating burgers",
    "start": "3740039",
    "end": "3746400"
  },
  {
    "text": "and they're actually terrible for you as well so bonus even bother to make them healthy yeah I don't know what sence all",
    "start": "3746400",
    "end": "3753160"
  },
  {
    "text": "of the health benefits of a burger with none of the taste exactly it's actually worse for you it's less healthy than uh",
    "start": "3753160",
    "end": "3760240"
  },
  {
    "text": "it's better for the animal you could say well make up for it by setting a oil",
    "start": "3760240",
    "end": "3765400"
  },
  {
    "text": "refinery on fire every time yeah exactly yeah that's what it tastes like actually",
    "start": "3765400",
    "end": "3770599"
  },
  {
    "text": "it's like a carbon offset but in Reverse man has to drive 200 miles just to get one so yeah it's carbon onset oh it's a",
    "start": "3770599",
    "end": "3778680"
  },
  {
    "text": "carbon onset yeah yeah Matt wakes up every day how much more carbon can I bring into the universe",
    "start": "3778680",
    "end": "3785079"
  },
  {
    "text": "today the answer is none CU it already all exists",
    "start": "3785079",
    "end": "3790480"
  },
  {
    "text": "oh well yeah does it no you can create carbon can you inside stars is where",
    "start": "3790480",
    "end": "3797680"
  },
  {
    "text": "things are made well let's call Neil degrass get him on go time next week and let's solve this thing yeah it won't",
    "start": "3797680",
    "end": "3803920"
  },
  {
    "text": "come on he refuses to cuz he's a JavaScript guy so he I thought it was because of what happened the last time",
    "start": "3803920",
    "end": "3809680"
  },
  {
    "text": "he was on yeah yeah yeah talking about black",
    "start": "3809680",
    "end": "3814880"
  },
  {
    "text": "holes that really was embarrassing okay well if that's not",
    "start": "3814880",
    "end": "3819920"
  },
  {
    "text": "baffling enough um join us next time I'm sure we'll be able to equal that or make",
    "start": "3819920",
    "end": "3825319"
  },
  {
    "text": "it worse thank you very much see you next [Music]",
    "start": "3825319",
    "end": "3831640"
  },
  {
    "text": "time you can support our work and and help ensure that go time continues into",
    "start": "3831640",
    "end": "3837000"
  },
  {
    "text": "the future with a change log Plus+ membership ditch the ads get closer to the metal and directly contribute to all",
    "start": "3837000",
    "end": "3843680"
  },
  {
    "text": "changelog podcasts at",
    "start": "3843680",
    "end": "3847240"
  },
  {
    "text": "[Music]",
    "start": "3851570",
    "end": "3854619"
  },
  {
    "text": "changelog.txt next time on go time Bill Kennedy joins",
    "start": "3863200",
    "end": "3868599"
  },
  {
    "text": "Johnny and Chris for a fascinating discussion on software design philosophy",
    "start": "3868599",
    "end": "3873799"
  },
  {
    "text": "and how it applies to go programs so stay tuned for that one it's coming at you next",
    "start": "3873799",
    "end": "3881380"
  },
  {
    "text": "[Music]",
    "start": "3881380",
    "end": "3892700"
  },
  {
    "text": "week",
    "start": "3893160",
    "end": "3896160"
  },
  {
    "text": "[Music]",
    "start": "3898550",
    "end": "3907079"
  },
  {
    "text": "k",
    "start": "3909960",
    "end": "3912960"
  }
]