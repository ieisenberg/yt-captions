[
  {
    "text": "[Music] what up Gophers Jared here this episode",
    "start": "410",
    "end": "6960"
  },
  {
    "text": "is different than what you're used to hearing from go time we've been clipping highlights of the show for a while now",
    "start": "6960",
    "end": "12440"
  },
  {
    "text": "to share on Twitter and YouTube and a side effect of that effort is I have a bunch of awesome Clips just sitting on",
    "start": "12440",
    "end": "17960"
  },
  {
    "text": "my hard drive collecting digital dust so here's a beta test of a best of style",
    "start": "17960",
    "end": "23480"
  },
  {
    "text": "Clips show covering the summer months I hope you enjoy it you might if you missed a few episodes or if you listen",
    "start": "23480",
    "end": "29439"
  },
  {
    "text": "distracted sometimes like I do please let me know what you think in the comments if people dig it we'll probably",
    "start": "29439",
    "end": "34520"
  },
  {
    "text": "do this more often if not well I'll just pipe the whole thing to Dev null oh yeah",
    "start": "34520",
    "end": "39760"
  },
  {
    "text": "and since it's a special kind of episode we have a very special intro song for you here we",
    "start": "39760",
    "end": "46960"
  },
  {
    "text": "[Music] go B with for change log is provided by",
    "start": "46960",
    "end": "52480"
  },
  {
    "text": "fastly learn more fastly.com we move fast and fix things here at change law",
    "start": "52480",
    "end": "57879"
  },
  {
    "text": "because of rollbar check them out at rollbar and we hosted on Leno Cloud servers at",
    "start": "57879",
    "end": "63199"
  },
  {
    "text": "the lin.com changelog this episode is brought to you",
    "start": "63199",
    "end": "69439"
  },
  {
    "text": "by digital ocean droplets managed kubernetes managed databases spaces",
    "start": "69439",
    "end": "75240"
  },
  {
    "text": "objects storage volume block storage Advanced networking like virtual private clouds and Cloud firewalls developer",
    "start": "75240",
    "end": "81880"
  },
  {
    "text": "tooling like the robust API and CLI to make sure you can interact with your infrastructure the way you want to",
    "start": "81880",
    "end": "88119"
  },
  {
    "text": "digital ocean is designed for Vel opers and built for businesses join Over",
    "start": "88119",
    "end": "93600"
  },
  {
    "text": "150,000 businesses that develop manage and scale their applications with digital ocean head to do. changelog to",
    "start": "93600",
    "end": "101200"
  },
  {
    "text": "get started with a $100 credit again do. [Music]",
    "start": "101200",
    "end": "108939"
  },
  {
    "text": "changelog I see bars and kilobytes",
    "start": "110719",
    "end": "117039"
  },
  {
    "text": "kilobytes kilobytes sites",
    "start": "117039",
    "end": "121840"
  },
  {
    "text": "[Music]",
    "start": "124110",
    "end": "127230"
  },
  {
    "text": "[Music]",
    "start": "133150",
    "end": "138870"
  },
  {
    "text": "[Music] bar",
    "start": "140920",
    "end": "146920"
  },
  {
    "text": "[Music] kill [Music]",
    "start": "147090",
    "end": "152270"
  },
  {
    "text": "[Applause] kilobytes RS kilobytes",
    "start": "152270",
    "end": "159480"
  },
  {
    "text": "RS first up we have a panel only show Jana Matt and John discuss how to affect",
    "start": "173840",
    "end": "179920"
  },
  {
    "text": "ly work with databases in episode 132 the trouble with databases it just so happens this was the most popular",
    "start": "179920",
    "end": "186440"
  },
  {
    "text": "episode of The Summer the way the database works or the way it models things there a lot of",
    "start": "186440",
    "end": "193959"
  },
  {
    "text": "things in common with the storage engine so the way you store the way you Shard the way you you know really partition",
    "start": "193959",
    "end": "200280"
  },
  {
    "text": "the data has a lot to do with the type of like capabilities it provides to",
    "start": "200280",
    "end": "205400"
  },
  {
    "text": "query so from a you know high level perspective it's always important I think for a user to understand how at",
    "start": "205400",
    "end": "212959"
  },
  {
    "text": "the like some sort of like a low layer things are stored so you can like estimate what is feasible what kind of",
    "start": "212959",
    "end": "220799"
  },
  {
    "text": "like use cases are actually a good fit for that type of database even though it sounds like a bit of work I really like",
    "start": "220799",
    "end": "227040"
  },
  {
    "text": "suggest people to take a look at like you know what type of like usage use cases Mak sense and in the end of the",
    "start": "227040",
    "end": "234200"
  },
  {
    "text": "day like at the storage level what do they do before evaluating anything",
    "start": "234200",
    "end": "240280"
  },
  {
    "text": "the classic example of that that I've heard is that I've been told that at stripe one of the common things they've done is that they have a nosql database",
    "start": "240280",
    "end": "247079"
  },
  {
    "text": "that they're using for all the you know really high-speed transactions but then on the back end when they want to run",
    "start": "247079",
    "end": "252439"
  },
  {
    "text": "analytics and do all these other things it's really hard to do that and a lot of times people want SQL you know they want to be able to use some tools that use",
    "start": "252439",
    "end": "258519"
  },
  {
    "text": "SQL for that so they actually take a lot of that data and translate it into a SQL database and while it's delayed it's",
    "start": "258519",
    "end": "263759"
  },
  {
    "text": "only used internally so that's okay so like they're taking that trade-off and deciding it's useful to have this data",
    "start": "263759",
    "end": "268880"
  },
  {
    "text": "in both formats and you know it's like you said they didn't switch from one to the other it's more of a this makes sense for this use",
    "start": "268880",
    "end": "275280"
  },
  {
    "text": "case and we ported it over to this for another use case yeah in my experience I'm seeing always like two or three",
    "start": "275280",
    "end": "281080"
  },
  {
    "text": "databases you know in a system like um you can't really fight the trade-offs you know you get benefit from them",
    "start": "281080",
    "end": "287720"
  },
  {
    "text": "differently there's usually a relational database another database for warehousing reasons like analytics and",
    "start": "287720",
    "end": "294240"
  },
  {
    "text": "so on and then there's usually a database like or something like elastic uh for you know you know for search",
    "start": "294240",
    "end": "300919"
  },
  {
    "text": "reasons so you know you can at least like list three core data resources yeah",
    "start": "300919",
    "end": "306919"
  },
  {
    "text": "and then of course backup could even be a different one where you're taking taking backup and putting it in some kind of cold storage or just less active",
    "start": "306919",
    "end": "315800"
  },
  {
    "text": "place it's common I think for developers to want to get the perfect solution from the beginning and just build that but",
    "start": "315800",
    "end": "323400"
  },
  {
    "text": "probably a better strategy is to just start with something one thing simple do what you're going to do with it",
    "start": "323400",
    "end": "330280"
  },
  {
    "text": "there are like three things you can have um you know in distributed uh systems",
    "start": "330280",
    "end": "335400"
  },
  {
    "text": "you can't have three of these things you have to pick two and those three things are represented by cap which is capap uh",
    "start": "335400",
    "end": "343520"
  },
  {
    "text": "cap means consistency sorry a means availability uh p means partition",
    "start": "343520",
    "end": "349759"
  },
  {
    "text": "tolerance like you know Network partitioning tolerance and what he says",
    "start": "349759",
    "end": "355120"
  },
  {
    "text": "is if you want a 100% consistency and 100 % Network failure partitioning",
    "start": "355120",
    "end": "362720"
  },
  {
    "text": "tolerance you can't have 100% availability you always have to have",
    "start": "362720",
    "end": "367800"
  },
  {
    "text": "make that sacrifice you know we're talking about relational databases as well as like schulas nosql type of",
    "start": "367800",
    "end": "373599"
  },
  {
    "text": "databases actually uh relational databases are more like CP systems they",
    "start": "373599",
    "end": "380120"
  },
  {
    "text": "have higher consistency they are more tolerant to partitioning on the other hand uh no SQL databases are you know",
    "start": "380120",
    "end": "388160"
  },
  {
    "text": "compromising from consistency they're eventually consistent but they provide higher availability so they're AP",
    "start": "388160",
    "end": "395520"
  },
  {
    "text": "systems so if you have this like mental model I think databases are becoming easier to understand because you know",
    "start": "395520",
    "end": "401240"
  },
  {
    "text": "that like you there's a limit like there's like physical limits to the world and you can't have it",
    "start": "401240",
    "end": "408199"
  },
  {
    "text": "all I've worked for some project managers that really just don't agree with this they want all three yes",
    "start": "408199",
    "end": "416120"
  },
  {
    "text": "because you know it's just hard to explain it's almost like spanner is actually a typical CP system it has 100%",
    "start": "416120",
    "end": "424000"
  },
  {
    "text": "consistency and it's very tolerant to partitioning but its availability is",
    "start": "424000",
    "end": "429080"
  },
  {
    "text": "significantly higher than any other relational database which is uh it provides five nines of availability",
    "start": "429080",
    "end": "436240"
  },
  {
    "text": "which means like 5 minutes downtime a year you know that's like amazing like most of the relation databases require",
    "start": "436240",
    "end": "443039"
  },
  {
    "text": "10 minutes or whatever a month for maintenance and so on or if you want to",
    "start": "443039",
    "end": "448240"
  },
  {
    "text": "upgrade the you know the the schema it requires down time or the failover requires down time so how did",
    "start": "448240",
    "end": "456720"
  },
  {
    "text": "this happen like you know the the spinner team kind of says that they're beating the cap theorem because they",
    "start": "456720",
    "end": "462080"
  },
  {
    "text": "provide this like high availability and it has a lot to do the way how the",
    "start": "462080",
    "end": "467759"
  },
  {
    "text": "internals of this distributed system is working plus our good networking",
    "start": "467759",
    "end": "473080"
  },
  {
    "text": "infastructure so we're just kind of like you know improving the available",
    "start": "473080",
    "end": "479840"
  },
  {
    "text": "not to 100% we're still talking about 59 but 59 is actually a lot in practice so",
    "start": "479840",
    "end": "486960"
  },
  {
    "text": "you know our goal is like maybe you shouldn't make as many as",
    "start": "486960",
    "end": "492639"
  },
  {
    "text": "compromises uh we will try you know provide you a higher availability but you will still have the like",
    "start": "492639",
    "end": "498479"
  },
  {
    "text": "transactional relational database but at the same time we have a lot of limitations around like you know the",
    "start": "498479",
    "end": "504400"
  },
  {
    "text": "type of the schema limitations for example some SQL limitations",
    "start": "504400",
    "end": "509800"
  },
  {
    "text": "I actually um was reading Martin kelman's book um maybe like two months",
    "start": "509800",
    "end": "515800"
  },
  {
    "text": "ago and then in my dream I saw myself writing that blog post and as soon as I",
    "start": "515800",
    "end": "523360"
  },
  {
    "text": "woke up I took notes like I think I dropped the 10 items on the cover of",
    "start": "523360",
    "end": "529959"
  },
  {
    "text": "that book so that block post actually like probably came from some of you know the ideas that I got from his book and",
    "start": "529959",
    "end": "536600"
  },
  {
    "text": "so on so that that's really funny that like you know know I saw that like the article was being very useful in my",
    "start": "536600",
    "end": "543720"
  },
  {
    "text": "dream and it turned out to be true it's so funny well if people didn't feel stupid before the fact that Yana's",
    "start": "543720",
    "end": "549959"
  },
  {
    "text": "coming up with this stuff in a sleep is certainly going to do that that's how Paul McCartney wrote Yesterday by the",
    "start": "549959",
    "end": "555680"
  },
  {
    "text": "way just woke up and have the song my dreams are way less productive yeah I",
    "start": "555680",
    "end": "560720"
  },
  {
    "text": "just dreamed my legs were made of jelly that's not helping anyone I can't turn that into a blog post probably could I",
    "start": "560720",
    "end": "568120"
  },
  {
    "text": "might [Music]",
    "start": "568120",
    "end": "574479"
  },
  {
    "text": "on episode 135 John was joined by Chris Brando Ben Johnson and Aaron slesinger",
    "start": "574519",
    "end": "580120"
  },
  {
    "text": "to discuss some of their mistakes and how they learned from them one of the mistakes I made when I",
    "start": "580120",
    "end": "586760"
  },
  {
    "text": "first was jumping into go was that I just felt like I over planned um or I I tried to like over optimize for getting",
    "start": "586760",
    "end": "592440"
  },
  {
    "text": "things perfect so you'd read about how you shouldn't use MVC and you shouldn't do all these different things and I sat",
    "start": "592440",
    "end": "598560"
  },
  {
    "text": "down I'm like guard I'm going to write this side project it was a side project it wasn't like my main work stuff so I was like I'm going to build this thing",
    "start": "598560",
    "end": "605360"
  },
  {
    "text": "and it's going to be good go code and I think I spent so much time rewriting",
    "start": "605360",
    "end": "611160"
  },
  {
    "text": "some stuff because I was like oh well this is a bad way and I realized why and then I'd go back and rewrite it and in",
    "start": "611160",
    "end": "616200"
  },
  {
    "text": "the end I'm pretty sure what I ended up doing was just using a simple MVC model and just got it done and then later I",
    "start": "616200",
    "end": "623079"
  },
  {
    "text": "was able to come back and tweak things and adjust but it just I wasted so much time trying to like meet the",
    "start": "623079",
    "end": "629920"
  },
  {
    "text": "expectations of everybody I guess is is how I'd put it and to me that was a big mistake because I feel like you learn",
    "start": "629920",
    "end": "636320"
  },
  {
    "text": "more by just kind of jumping in and doing stuff rather than like trying to find the optimal path I guess kind of a",
    "start": "636320",
    "end": "643160"
  },
  {
    "text": "long ongoing mistake uh in my career is just not understanding the underlying technologies that I use especially early",
    "start": "643160",
    "end": "650360"
  },
  {
    "text": "on like using like an HTTP framework like web framework you know just assume that that's what you do but like",
    "start": "650360",
    "end": "657120"
  },
  {
    "text": "understanding that framework and maybe even like layer on top of that framework is a lot of times more complicated than",
    "start": "657120",
    "end": "662200"
  },
  {
    "text": "just understanding HTTP or whatever the underlying technology is so I I feel like I've done that for a long time in",
    "start": "662200",
    "end": "668240"
  },
  {
    "text": "my career but more recently just trying to step back and just understand like you know what are those Frameworks",
    "start": "668240",
    "end": "673920"
  },
  {
    "text": "actually give me what do they add and just a lot of times the net HTTP is you know enough with a a router so I guess",
    "start": "673920",
    "end": "680800"
  },
  {
    "text": "first off are you talking about going all the way down to actually understanding how like TCP works and going even below that or I mean I think",
    "start": "680800",
    "end": "687720"
  },
  {
    "text": "it's a trade-off of like what do you get for that abstraction that you're you're working with like I'm I mean I'm not",
    "start": "687720",
    "end": "693240"
  },
  {
    "text": "pushing bits across an Ethernet Accord but if I can you know understand like you know just basic headers and what",
    "start": "693240",
    "end": "699639"
  },
  {
    "text": "they do rather than having some other library on top of that to actually you know set certain parameters I feel like",
    "start": "699639",
    "end": "706519"
  },
  {
    "text": "just understanding that kind of underlying HTTP RFC or some aspect aspects about it helps me just to to",
    "start": "706519",
    "end": "713399"
  },
  {
    "text": "write more direct code I feel like if you go on GitHub and you look at some popular open source projects I feel like",
    "start": "713399",
    "end": "720839"
  },
  {
    "text": "that's sort of the the Instagram of programming and that you see the perfect",
    "start": "720839",
    "end": "726600"
  },
  {
    "text": "result after everyone's you know put on the makeup and uh rolled camera and everything and you know then we put that",
    "start": "726600",
    "end": "733320"
  },
  {
    "text": "on ourselves whereas you know like Ben you just said you could just go in and write a for Loop and and it'll be good",
    "start": "733320",
    "end": "740160"
  },
  {
    "text": "for a while it's just you got to start somewhere mhm and there's always The",
    "start": "740160",
    "end": "745279"
  },
  {
    "text": "Telltale sign of like initial commit has like source files and 4,000 lines of",
    "start": "745279",
    "end": "750560"
  },
  {
    "text": "codee and you're like that was your initial commit it's like that clearly was not your initial",
    "start": "750560",
    "end": "756399"
  },
  {
    "text": "commit I like to just kill the the dogit or the folder and just restart after",
    "start": "756399",
    "end": "761760"
  },
  {
    "text": "probably a couple hundred commits in oh I'm the same way it's like I've got the initial version and then that eventually",
    "start": "761760",
    "end": "767040"
  },
  {
    "text": "gets to something that I'm like okay I'm okay with sharing this and then delete you know and just go from scratch on one",
    "start": "767040",
    "end": "772600"
  },
  {
    "text": "hand I get why you do it because you don't necessarily want that bad history there but on the other hand it is kind",
    "start": "772600",
    "end": "778600"
  },
  {
    "text": "of hard for somebody jumping in who actually thinks that might be the initial [Music]",
    "start": "778600",
    "end": "787720"
  },
  {
    "text": "commit next up 136 this is when Matt joined the show as a guest with his Pace",
    "start": "787720",
    "end": "793639"
  },
  {
    "text": "co-founder David Hernandez to talk about the technical decisions they made while building Pace with",
    "start": "793639",
    "end": "800600"
  },
  {
    "text": "go yeah absolutely and I tell teams this when I talk to different teams as well about their when they're choosing their",
    "start": "800600",
    "end": "807519"
  },
  {
    "text": "technology that's a big thing you know grpc for example might be the perfect",
    "start": "807519",
    "end": "813240"
  },
  {
    "text": "choice from a purely technical perspective but if nobody on the team has experience with grpc then there's a",
    "start": "813240",
    "end": "820399"
  },
  {
    "text": "learning curve there and some people talk about them in terms of innovation tokens and things you know you're not",
    "start": "820399",
    "end": "826160"
  },
  {
    "text": "allowed they say to just all the technology can't be new and unfamiliar you can do some of that but there's",
    "start": "826160",
    "end": "833079"
  },
  {
    "text": "effort and there's kind of a cost to being productive in any of those and we had that already on the front end",
    "start": "833079",
    "end": "839880"
  },
  {
    "text": "because we hadn't done much front end work for a while and we knew we wanted to use a it was going to be a rich front",
    "start": "839880",
    "end": "847079"
  },
  {
    "text": "end so we knew it had to be somewhat of a mod so you weren't trying to emulate",
    "start": "847079",
    "end": "854040"
  },
  {
    "text": "grpc basically you wanted to you got some ideas from how sort of it works and",
    "start": "854040",
    "end": "860720"
  },
  {
    "text": "you stole some and I use that very generously you stole some ideas some some implementation details rather and",
    "start": "860720",
    "end": "867720"
  },
  {
    "text": "you sort ofu the whole you know binary format you just went you're playing Json",
    "start": "867720",
    "end": "873040"
  },
  {
    "text": "and basically you solved your own problem in a sense and rather than sort of bringing in something for the sake of",
    "start": "873040",
    "end": "879639"
  },
  {
    "text": "because it's cool yeah stealing from open source is not really stealing isn't",
    "start": "879639",
    "end": "885000"
  },
  {
    "text": "it just kind of robing hood wise you yeah different sizes comes with",
    "start": "885000",
    "end": "892480"
  },
  {
    "text": "different problems speed is different that's why people try to put things like",
    "start": "892480",
    "end": "897880"
  },
  {
    "text": "microservices not because the micros service are better technology because it's easier to control the size of the",
    "start": "897880",
    "end": "904079"
  },
  {
    "text": "thing or the responsibility things like that in this case is everything is easy in that sense because we are two people",
    "start": "904079",
    "end": "911800"
  },
  {
    "text": "but we became from uh full stack developers to full company developers we",
    "start": "911800",
    "end": "917399"
  },
  {
    "text": "do support we do marketing we do accountancy so it's not only the tech",
    "start": "917399",
    "end": "924360"
  },
  {
    "text": "stack is quite wide in that sense you have to worry about lot of more things",
    "start": "924360",
    "end": "929759"
  },
  {
    "text": "in this case yeah I remember that release manager wanted to do like two releases a month and then be in sync",
    "start": "929759",
    "end": "937360"
  },
  {
    "text": "with everyone and they asked how many times we were releasing and and it was that day was something between 10 and 20",
    "start": "937360",
    "end": "943600"
  },
  {
    "text": "or something you know it was a very different mindset of Rapid as soon as it's a bit better than it was you know",
    "start": "943600",
    "end": "951279"
  },
  {
    "text": "we want to kind of get it [Music]",
    "start": "951279",
    "end": "957600"
  },
  {
    "text": "out on episode 137 databases we're back on the table see what I did there this",
    "start": "957600",
    "end": "964120"
  },
  {
    "text": "time Johan Bron horse joined Johnny Matt and John to focus in on",
    "start": "964120",
    "end": "971160"
  },
  {
    "text": "postgress big thing that a postgress has to se light in go specifically is really good Library support but unfortunately",
    "start": "971160",
    "end": "978160"
  },
  {
    "text": "the sqlite driver that everyone uses is a SEO driver and as most of you probably",
    "start": "978160",
    "end": "984319"
  },
  {
    "text": "know SEO means building with C it means longer build times it means uh less portable binaries and stuff like that so",
    "start": "984319",
    "end": "991440"
  },
  {
    "text": "in go with posters we actually have several different pure go libraries to speak with postr which is really great",
    "start": "991440",
    "end": "997000"
  },
  {
    "text": "so that's just one reason to use post but other things are such as the",
    "start": "997000",
    "end": "1002120"
  },
  {
    "text": "stability of the software for example as you say it's over 20 years old it's been used by thousands of companies worldwide",
    "start": "1002120",
    "end": "1008120"
  },
  {
    "text": "you know it's not going to just you know corrupt your files because those bugs have been ironed out",
    "start": "1008120",
    "end": "1014440"
  },
  {
    "text": "by now so within databases I think you often say you don't want to use something that's less than 10 years old",
    "start": "1014440",
    "end": "1021079"
  },
  {
    "text": "because like the data needs to live for a long time H you want to make sure it doesn't you know corrupt on the disc or",
    "start": "1021079",
    "end": "1027360"
  },
  {
    "text": "whatever and postc is one such stable mature solution it's also very fast",
    "start": "1027360",
    "end": "1033360"
  },
  {
    "text": "because it's written in C and sees fast yeah know I I was sitting here noing along to what you were saying",
    "start": "1033360",
    "end": "1039640"
  },
  {
    "text": "there that start with post Chris because I think a lot of users come into the space knowing what to use and that was",
    "start": "1039640",
    "end": "1045199"
  },
  {
    "text": "kind of a hope with my talk just giving you an introduction to something you can use some opinionated tips on what",
    "start": "1045199",
    "end": "1052000"
  },
  {
    "text": "libraries to use and so on giving you like a head start just getting started with actually like moving away from the",
    "start": "1052000",
    "end": "1057600"
  },
  {
    "text": "problem of choosing a technology and actually using the technology to solve your problems I really agree with that",
    "start": "1057600",
    "end": "1063760"
  },
  {
    "text": "sentiment that a lot of people will try and and you know Google what should I use to store my data or even like read",
    "start": "1063760",
    "end": "1070240"
  },
  {
    "text": "some popular programmers blog where they tested out the latest technology and found it to be really good for their",
    "start": "1070240",
    "end": "1075880"
  },
  {
    "text": "very specialized use case and then apply that to like all of their problems because that's all they know and you",
    "start": "1075880",
    "end": "1081720"
  },
  {
    "text": "know starting with something well tested well established like you say good develop mind shair like postgress will",
    "start": "1081720",
    "end": "1088200"
  },
  {
    "text": "will take you very far before you need to change how do you actually use",
    "start": "1088200",
    "end": "1094159"
  },
  {
    "text": "postgress and I'm even thinking like in the context of say a website that is",
    "start": "1094159",
    "end": "1099320"
  },
  {
    "text": "hosting a Blog at what point would you make a connection to postgress do you",
    "start": "1099320",
    "end": "1104799"
  },
  {
    "text": "tend to make one connection per instant of your code running and then create",
    "start": "1104799",
    "end": "1111520"
  },
  {
    "text": "sessions off that or does each Handler would each Handler make its own connection how does it actually work you",
    "start": "1111520",
    "end": "1118480"
  },
  {
    "text": "know from a go developer point of view yeah so if we take a step back and look at the uh standard Library database SQL",
    "start": "1118480",
    "end": "1126000"
  },
  {
    "text": "package that actually has a connection pool built in so if you come from another language like python or Ruby uh",
    "start": "1126000",
    "end": "1132200"
  },
  {
    "text": "you might be familiar with uh putting something I think there's a post bouncer or something like that which does",
    "start": "1132200",
    "end": "1137600"
  },
  {
    "text": "connection pool in between your database and your client in go you don't need to",
    "start": "1137600",
    "end": "1142760"
  },
  {
    "text": "do that sort of thing because it's already built into the standard Library so what you would normally do when you connect to the database is just create a",
    "start": "1142760",
    "end": "1148679"
  },
  {
    "text": "single SQL DB handle and then that's safe for concurrent use so you can use",
    "start": "1148679",
    "end": "1154480"
  },
  {
    "text": "that in all of your handlers even though they're being called from different gues from different clients and you can also",
    "start": "1154480",
    "end": "1159720"
  },
  {
    "text": "configure things such as Max connections on the uh SQL connection uh but normally",
    "start": "1159720",
    "end": "1166679"
  },
  {
    "text": "that's all handled by the ghost standard Library don't really have to worry about it which is really nice actually I have never had the",
    "start": "1166679",
    "end": "1173799"
  },
  {
    "text": "pleasure of using ANM so what am I doing on this show talking about databases I I",
    "start": "1173799",
    "end": "1178919"
  },
  {
    "text": "would very earone in my career I was kind of persuaded against using an RM because naturally as a beginner",
    "start": "1178919",
    "end": "1184039"
  },
  {
    "text": "programmer I was like oh this looks cool but I never really had to use it because I was told by someone who knew better",
    "start": "1184039",
    "end": "1189640"
  },
  {
    "text": "than me that that was a bad idea so here I am saying to other beginners like",
    "start": "1189640",
    "end": "1195440"
  },
  {
    "text": "myself once was that you should try not to use the RM even though it looks really appealing at first you should",
    "start": "1195440",
    "end": "1202640"
  },
  {
    "text": "probably just learn to use SQL and it's really not that bad and you'll learn to love it I think like I do I would agree",
    "start": "1202640",
    "end": "1210559"
  },
  {
    "text": "with that having come from the other side because everything specific to rails that I learned is useless to me",
    "start": "1210559",
    "end": "1216520"
  },
  {
    "text": "now and everything I learned about SQL along the way when I couldn't get that to work is much more useful to me and",
    "start": "1216520",
    "end": "1222280"
  },
  {
    "text": "it'll carry over to any language that's right well that that would have been an unpopular opinion section but everyone",
    "start": "1222280",
    "end": "1230240"
  },
  {
    "text": "agrees it's not that unpopular I guess it's not happened before where we all agree I need to ask have you met Bobby",
    "start": "1230240",
    "end": "1237159"
  },
  {
    "text": "tables I have met Bobby tables this is a great one actually uh so the reference",
    "start": "1237159",
    "end": "1242200"
  },
  {
    "text": "that Johnny's making there is to an XKCD comic which has a very illustrative way",
    "start": "1242200",
    "end": "1247559"
  },
  {
    "text": "of showing just exactly what SQL injection means where there's a school principal who's making a call to a",
    "start": "1247559",
    "end": "1254600"
  },
  {
    "text": "concerned parent I suppose asking about their son Bobby tables dash dash",
    "start": "1254600",
    "end": "1260840"
  },
  {
    "text": "droptable students or something like that the parents says yes we call him Bobby tables and then the principal says",
    "start": "1260840",
    "end": "1267159"
  },
  {
    "text": "well I hope you're happy we've lost this year's Student Records which really funny because obviously the implication",
    "start": "1267159",
    "end": "1273039"
  },
  {
    "text": "there is that they had to enter their um kids name somewhere in some sort of form",
    "start": "1273039",
    "end": "1278440"
  },
  {
    "text": "or something and they thought hey it will be fun to see if this is vulnerable to SQL injection and then they put in a",
    "start": "1278440",
    "end": "1283640"
  },
  {
    "text": "command that would if it was vulnerable to SQL injection drop the table called student and of course the joke then is that it",
    "start": "1283640",
    "end": "1291039"
  },
  {
    "text": "actually did and principal is furious about it and uh the kind of lesson I guess is that you shouldn't have been",
    "start": "1291039",
    "end": "1296840"
  },
  {
    "text": "vulnerable to squl injection now he's got no job though so",
    "start": "1296840",
    "end": "1302279"
  },
  {
    "text": "that's no no good telling him that is his life's devastated by that but",
    "start": "1302279",
    "end": "1308340"
  },
  {
    "text": "[Music] yeah episode 138 was quite a departure",
    "start": "1308340",
    "end": "1316440"
  },
  {
    "text": "and inspiring to many listeners so we here Jackie grindrod and deshun Carter joined John to talk about their first",
    "start": "1316440",
    "end": "1323000"
  },
  {
    "text": "week with the go programming language you know if somebody's trying to learn go what do you suggest I think",
    "start": "1323000",
    "end": "1329760"
  },
  {
    "text": "Jackie you said exorcism is that where you would suggest people start so I I found it worked really well for me",
    "start": "1329760",
    "end": "1335279"
  },
  {
    "text": "because you'd Put Your solution in you could see how other people solved it but you'd also have mentors come and comment",
    "start": "1335279",
    "end": "1340880"
  },
  {
    "text": "and the really nice thing for me about the mentors was that they're really good at giving like iterative feedback so it'",
    "start": "1340880",
    "end": "1346559"
  },
  {
    "text": "give me like some feedback and be like here how you can solve this a little bit more elegantly and then I would do that and then they'd come back and be like",
    "start": "1346559",
    "end": "1352120"
  },
  {
    "text": "okay so now that you've done that here's like another step you can do until we got to like that final iteration and I do have all those commits like tracked",
    "start": "1352120",
    "end": "1358640"
  },
  {
    "text": "so I can kind of watch the way that I grew as I was learning and the feedback I got so I would actually recommend that",
    "start": "1358640",
    "end": "1363840"
  },
  {
    "text": "because it was a very nice experience for me you got to do it and you also got like professional feedback from people who do this which you might not always",
    "start": "1363840",
    "end": "1370159"
  },
  {
    "text": "get if you're just learning a language on your own in the front of learning things an advantage that I didn't really",
    "start": "1370159",
    "end": "1375919"
  },
  {
    "text": "realize like I knew I had it but I didn't really consider it until a conversation I had I think last week or this week was about Concepts like",
    "start": "1375919",
    "end": "1383000"
  },
  {
    "text": "garbage collection I would have learned that in my computer science classes and there are things that I just kind of knew about going into this that I didn't",
    "start": "1383000",
    "end": "1389880"
  },
  {
    "text": "really think about as in terms of like when I'm learning it on the job and an Ops rle maybe that's not something that",
    "start": "1389880",
    "end": "1395480"
  },
  {
    "text": "just gets presented to you it might be like those kind of Concepts that you need to learn outside of just the code",
    "start": "1395480",
    "end": "1401240"
  },
  {
    "text": "and that's kind of been interesting to figure out like how do you review either like best practices across different languages or different architecture",
    "start": "1401240",
    "end": "1407960"
  },
  {
    "text": "patterns which is not my strength but trying to figure that out while learning the language can be pretty overwhelming",
    "start": "1407960",
    "end": "1414320"
  },
  {
    "text": "and just figuring out where to start but yeah there was people that were consistently there and it was nice",
    "start": "1414320",
    "end": "1420880"
  },
  {
    "text": "it was kind of like having this little support Circle that I really didn't expect this like I expected streaming to",
    "start": "1420880",
    "end": "1426720"
  },
  {
    "text": "be more like people coming in and being like hey you're doing that wrong like hey why didn't you do this so it was it",
    "start": "1426720",
    "end": "1433840"
  },
  {
    "text": "was really nice I'm going to paint a picture this is very similar like I'd",
    "start": "1433840",
    "end": "1438919"
  },
  {
    "text": "said every rep counts I've been to the gym you guys been to the gym maybe not lately uh but it's kind of the same",
    "start": "1438919",
    "end": "1444679"
  },
  {
    "text": "experience like you definitely went out and you kind of said hey I'm G to go to the gym I put it on a schedule and I'm",
    "start": "1444679",
    "end": "1451200"
  },
  {
    "text": "going and maybe you have a gym buddy I think everything goes better you know you're pairing you had some",
    "start": "1451200",
    "end": "1456400"
  },
  {
    "text": "accountability and I basically said ah I'm gonna buy some weights and I'm gonna put them down here and this was my path",
    "start": "1456400",
    "end": "1462880"
  },
  {
    "text": "I didn't put any like deadline or I didn't have any severe accountability I",
    "start": "1462880",
    "end": "1468039"
  },
  {
    "text": "was kind of fitting it in but it was my number one Focus but still not only is",
    "start": "1468039",
    "end": "1473159"
  },
  {
    "text": "it going to be stickier for you I think that accountability yeah I think you probably went further",
    "start": "1473159",
    "end": "1478720"
  },
  {
    "text": "[Music] faster how much time does your team",
    "start": "1478720",
    "end": "1484919"
  },
  {
    "text": "spend building and maintaining internal tooling I'm talking about those behind the-scenes apps the ones no one else",
    "start": "1484919",
    "end": "1490880"
  },
  {
    "text": "sees the S3 uploader you built last year for the marketing team that quick Firebase admin panel that let you",
    "start": "1490880",
    "end": "1496559"
  },
  {
    "text": "monitor key kpi is maybe even the tool your data science team haded together so they can provide custom ad spend",
    "start": "1496559",
    "end": "1502840"
  },
  {
    "text": "analytics now these are tools you need so you build them and that makes sense but the question is could you have built",
    "start": "1502840",
    "end": "1509919"
  },
  {
    "text": "them in less time with less effort and less overhead and maintenance required and the answer to that question is yes",
    "start": "1509919",
    "end": "1517080"
  },
  {
    "text": "that's where retto comes in Rohan Chopra engineering director at door Dash has this to say about retto quote the tools",
    "start": "1517080",
    "end": "1523360"
  },
  {
    "text": "we've been able to quickly build with retool have allowed us to empower and scale our local operators all while",
    "start": "1523360",
    "end": "1529200"
  },
  {
    "text": "reducing the dependency on engineering end quote now the internal tooling process at door Dash was bogged down",
    "start": "1529200",
    "end": "1534919"
  },
  {
    "text": "with manual data entry missed handoffs and long turnaround times and after integrating retool door Dash was able to",
    "start": "1534919",
    "end": "1541039"
  },
  {
    "text": "cut the engineering time required to build tools by a factor of 10x and eliminate the airpr manual processes",
    "start": "1541039",
    "end": "1547080"
  },
  {
    "text": "that play their workflows they were able to empower backend Engineers who wouldn't otherwise be able to build frontends from scratch and these",
    "start": "1547080",
    "end": "1553080"
  },
  {
    "text": "Engineers were able to build fully functional apps in retool in hours not days or weeks",
    "start": "1553080",
    "end": "1558279"
  },
  {
    "text": "your next step is to try it free at ret.com changelog again ret.com",
    "start": "1558279",
    "end": "1564640"
  },
  {
    "text": "[Music]",
    "start": "1564640",
    "end": "1573680"
  },
  {
    "text": "changelog next up testifies maintainer Buon subach chov joins Matt and Mark",
    "start": "1577120",
    "end": "1582440"
  },
  {
    "text": "Bates to talk about testing Frameworks in go cuz you literally put those things as",
    "start": "1582440",
    "end": "1588559"
  },
  {
    "text": "strings into the test code don't you and then from that you can generate some",
    "start": "1588559",
    "end": "1593679"
  },
  {
    "text": "quite nice looking failures if if something fails you can it you know it reads quite nicely but I found it to be",
    "start": "1593679",
    "end": "1600520"
  },
  {
    "text": "to Vose actually in just just saying you know not equal and then showing you the two values or something was just easier",
    "start": "1600520",
    "end": "1607399"
  },
  {
    "text": "to see the thing I like about bdd versus unit testing actually has to do with",
    "start": "1607399",
    "end": "1613840"
  },
  {
    "text": "those kind of the names of the tests you know when you're writing a simple test right you know test that create does",
    "start": "1613840",
    "end": "1621039"
  },
  {
    "text": "something right that's a pretty simple test name but when you start having all those weird variants right then the string based",
    "start": "1621039",
    "end": "1628440"
  },
  {
    "text": "text names become really really useful you know when you can when you just need",
    "start": "1628440",
    "end": "1633840"
  },
  {
    "text": "a little bit more description as to what it is you're trying to test and that's harder to do in a unit type of a test",
    "start": "1633840",
    "end": "1641200"
  },
  {
    "text": "where you have a function name yeah have you seen uh property",
    "start": "1641200",
    "end": "1646320"
  },
  {
    "text": "based testing as well this is a another kind of uh style yeah it's um almost",
    "start": "1646320",
    "end": "1653159"
  },
  {
    "text": "like fuzzing for your functions where you specify not what values to test with",
    "start": "1653159",
    "end": "1659559"
  },
  {
    "text": "but what types of values your function takes as input and obviously also what",
    "start": "1659559",
    "end": "1666840"
  },
  {
    "text": "uh kind of output you expect and then the property based testing framework of",
    "start": "1666840",
    "end": "1673039"
  },
  {
    "text": "which one example is copter will then just generate a you know whether it's",
    "start": "1673039",
    "end": "1678919"
  },
  {
    "text": "random or in some specific sequence will generate plenty of values to the intest your function and try and find edge",
    "start": "1678919",
    "end": "1684720"
  },
  {
    "text": "cases for you that do not conform to the specification that's really cool isn't it yeah the first exposure I had to that",
    "start": "1684720",
    "end": "1692120"
  },
  {
    "text": "was with hypothesis in Python and it was pretty awesome I mean an obvious problem",
    "start": "1692120",
    "end": "1697519"
  },
  {
    "text": "there is you now have especially if your functions are a bit more complex that it",
    "start": "1697519",
    "end": "1702640"
  },
  {
    "text": "can take a while for test to run because you're now running the same function 10,000 times rather than once",
    "start": "1702640",
    "end": "1709679"
  },
  {
    "text": "or five times but you know for Pure functions where you know where your code",
    "start": "1709679",
    "end": "1715440"
  },
  {
    "text": "doesn't have side effects yeah it's very good at finding edge cases and and",
    "start": "1715440",
    "end": "1722279"
  },
  {
    "text": "little behaviors that you didn't anticipate in Ruby we had a great thing called time cop and it was such a random",
    "start": "1722279",
    "end": "1729279"
  },
  {
    "text": "Ruby thing where it would override basically time. now to be",
    "start": "1729279",
    "end": "1734480"
  },
  {
    "text": "whatever you wanted it to be cuz you could just override anything so you could say like I want to be 3 weeks into",
    "start": "1734480",
    "end": "1740720"
  },
  {
    "text": "the future and time. now would return three weeks in the future Great Scott oh",
    "start": "1740720",
    "end": "1747320"
  },
  {
    "text": "God it was spectacularly awful and good and fun",
    "start": "1747320",
    "end": "1753080"
  },
  {
    "text": "yeah it was one of those things you can only do in a dynamic language though yeah it's also the reason I'm not using",
    "start": "1753080",
    "end": "1758159"
  },
  {
    "text": "a dynamic language now the the the way I look at it at least is uh if it's something",
    "start": "1758159",
    "end": "1766320"
  },
  {
    "text": "that's How likely is it to change uh basically How likely is your database state to change How likely is your time",
    "start": "1766320",
    "end": "1774080"
  },
  {
    "text": "to change if it's anything other than low take it out mock it out make it as a",
    "start": "1774080",
    "end": "1779399"
  },
  {
    "text": "dependency that's injected but that's a rule of thumb that I follow",
    "start": "1779399",
    "end": "1785120"
  },
  {
    "text": "[Music] anyways episode 140 was our most",
    "start": "1785120",
    "end": "1792240"
  },
  {
    "text": "anticipated show of the summer the latest draft proposal for generics was posted in late June and it took us a few",
    "start": "1792240",
    "end": "1798840"
  },
  {
    "text": "weeks but we managed to get Robert geser and Ian Lance Taylor on the show to answer many of the community's nagging",
    "start": "1798840",
    "end": "1805399"
  },
  {
    "text": "questions about the latest proposal uh Robert and I released the",
    "start": "1805399",
    "end": "1811279"
  },
  {
    "text": "updated design draft for moving forward with generic the biggest change was that we dropped the idea of",
    "start": "1811279",
    "end": "1818240"
  },
  {
    "text": "contract and uh just decided that instead of having a separate uh syntactic construct which was a contract",
    "start": "1818240",
    "end": "1826399"
  },
  {
    "text": "that we could just use interface types to describe the contract between the uh",
    "start": "1826399",
    "end": "1833240"
  },
  {
    "text": "type argument and the type parameter a lot of people looking at contracts had seen that they seemed a lot like",
    "start": "1833240",
    "end": "1839000"
  },
  {
    "text": "interfaces and people had trouble sort of separating out exactly when you would use a contract and when you would use an",
    "start": "1839000",
    "end": "1845039"
  },
  {
    "text": "interface so uh we simplified this um and this was I should add almost entirely due to Robert we simplified",
    "start": "1845039",
    "end": "1851600"
  },
  {
    "text": "this to uh just use interface types and then the second big step we made was we've released a a translation tool and",
    "start": "1851600",
    "end": "1859240"
  },
  {
    "text": "a type Checker so we have a type Checker that works um for the design draft the",
    "start": "1859240",
    "end": "1864559"
  },
  {
    "text": "description of generics in the design draft so that gives us you know some confidence that what we have uh written",
    "start": "1864559",
    "end": "1870840"
  },
  {
    "text": "about can actually work and we have a translation tool which translates code into ordinary go the translation tool is",
    "start": "1870840",
    "end": "1877919"
  },
  {
    "text": "not by any means a final thing there's cases it doesn't handle it's just an experimental tool but it lets people",
    "start": "1877919",
    "end": "1883360"
  },
  {
    "text": "actually write code that can actually run using generics so we can get a feel for whether generics actually works for",
    "start": "1883360",
    "end": "1891039"
  },
  {
    "text": "people and whether it actually addresses the issues that they have so more",
    "start": "1891039",
    "end": "1896159"
  },
  {
    "text": "practically for the go Community when do you think that you're going to get the",
    "start": "1896159",
    "end": "1902480"
  },
  {
    "text": "enough feedback to move forward with moving from a draft proposal to actually",
    "start": "1902480",
    "end": "1907760"
  },
  {
    "text": "putting it forth as a proposal to change in the language yeah we don't have any",
    "start": "1907760",
    "end": "1913399"
  },
  {
    "text": "timelines in mind I'd say as we mentioned earlier we're still trying to pin down some of the precise semantics",
    "start": "1913399",
    "end": "1920639"
  },
  {
    "text": "which I don't think is going to affect any existing code in fact I'm sure it's not going to affect any existing code we",
    "start": "1920639",
    "end": "1925880"
  },
  {
    "text": "want to make sure that we understand it we want to make sure that you know the multiple go compilers will all implement",
    "start": "1925880",
    "end": "1931279"
  },
  {
    "text": "the same thing we're going to have to have some sense of how to add to the language spec so those are the steps",
    "start": "1931279",
    "end": "1936720"
  },
  {
    "text": "we're looking at now I mean we're certainly going to move forward as fast as we can toward making a formal",
    "start": "1936720",
    "end": "1942399"
  },
  {
    "text": "proposal of course at that time none of it will be a surprise people will have seen all of the ideas already and uh",
    "start": "1942399",
    "end": "1948559"
  },
  {
    "text": "we'll just have to see how it flies so far I feel like the reaction's been largely positive which is encouraging",
    "start": "1948559",
    "end": "1954720"
  },
  {
    "text": "but I don't know exactly what the timeline is going to be U my experience",
    "start": "1954720",
    "end": "1959880"
  },
  {
    "text": "with generics was maybe C++ with templates and probably the highest point",
    "start": "1959880",
    "end": "1965960"
  },
  {
    "text": "there was when I was able to as as Ian alluded to before it's t in complete I was able to write a program using C++",
    "start": "1965960",
    "end": "1973880"
  },
  {
    "text": "templates that would decide whether a constant was a prime number or not and the compiler would decide it at compile",
    "start": "1973880",
    "end": "1979840"
  },
  {
    "text": "time so that's not the kind of thing we would like to support with respect to",
    "start": "1979840",
    "end": "1985480"
  },
  {
    "text": "you know what what I'd like to see or not see is honestly I'm I'm worried",
    "start": "1985480",
    "end": "1990760"
  },
  {
    "text": "about the kind of code that people are going to write I mean there's no question about that and we see some of",
    "start": "1990760",
    "end": "1996880"
  },
  {
    "text": "the examples that people send us that cause crashes in the Prototype and they're just unbelievably convoluted and",
    "start": "1996880",
    "end": "2003519"
  },
  {
    "text": "really really hard to decipher but as other people have pointed out those people are really pushing the",
    "start": "2003519",
    "end": "2009559"
  },
  {
    "text": "envelope they're trying to just see what can I do with this thing and I hope this is not going to be you know the kind of",
    "start": "2009559",
    "end": "2015360"
  },
  {
    "text": "code that people are going to write down the road I think one of the first things we need to do if we have this for real",
    "start": "2015360",
    "end": "2021240"
  },
  {
    "text": "we need to come up with a kind of best practices guide that guides everybody a",
    "start": "2021240",
    "end": "2028200"
  },
  {
    "text": "little bit as to how you should use generics and when you should use them and when you should not use them very",
    "start": "2028200",
    "end": "2033519"
  },
  {
    "text": "similar to what we developed for for you know go routines and channels in the in",
    "start": "2033519",
    "end": "2038919"
  },
  {
    "text": "the early days of go everybody was using go routines and channels for everything and it took a little while for us to",
    "start": "2038919",
    "end": "2044919"
  },
  {
    "text": "learn where it was appropriate and where it wasn't the experimental tool has no",
    "start": "2044919",
    "end": "2050520"
  },
  {
    "text": "similarity whatsoever to any real implementation so we know it's slow and uh it's going to be slow and that's just",
    "start": "2050520",
    "end": "2057480"
  },
  {
    "text": "inevitable if this does move forward to become a proposal uh and it gets accepted then we most likely the",
    "start": "2057480",
    "end": "2063839"
  },
  {
    "text": "implementation will be to start with a branch of the main uh gold tool chain and we'll start adding generic support",
    "start": "2063839",
    "end": "2071000"
  },
  {
    "text": "on that branch which will involve changing compiler mainly um and any",
    "start": "2071000",
    "end": "2076358"
  },
  {
    "text": "other changes to other tools that are required and so that'll be the time to start uh giving feedback about changes",
    "start": "2076359",
    "end": "2082638"
  },
  {
    "text": "to build speed we've talked about it with some of the compil developers I like Keith Randall especially and uh we",
    "start": "2082639",
    "end": "2090000"
  },
  {
    "text": "we think we can do it without a significant increase in build speed I mean there will be some increase in build speed we don't think it's going to",
    "start": "2090000",
    "end": "2095398"
  },
  {
    "text": "be um a huge increase but but you know this is really speculative at this point so the time to give that feedback is",
    "start": "2095399",
    "end": "2101480"
  },
  {
    "text": "when uh when we're able to start doing development and hopefully hopefully people will also be able to contribute work when we start doing that work on",
    "start": "2101480",
    "end": "2107599"
  },
  {
    "text": "the public Branch programming language evolution is really a social process",
    "start": "2107599",
    "end": "2114960"
  },
  {
    "text": "okay it doesn't actually matter if you have if you have seen the light and you know exactly the perfect language you",
    "start": "2114960",
    "end": "2121720"
  },
  {
    "text": "know and you would just put it out there and you know maybe it's 20 years ahead nobody would even buy it because",
    "start": "2121720",
    "end": "2127359"
  },
  {
    "text": "people would not see the reasoning why you got to that point and so you really have to get everybody along and some",
    "start": "2127359",
    "end": "2135119"
  },
  {
    "text": "people may already be where you are and some people may not but you have to get everybody along in Little Steps and",
    "start": "2135119",
    "end": "2141720"
  },
  {
    "text": "that's how we eventually end up where we want to be and we can see this with all kinds of things like garbage collection",
    "start": "2141720",
    "end": "2147920"
  },
  {
    "text": "garbage collection was invented you know 1950 something with lisp you know the",
    "start": "2147920",
    "end": "2153240"
  },
  {
    "text": "first lisp had garbage collection 1958 I believe and and it's taken forever",
    "start": "2153240",
    "end": "2158960"
  },
  {
    "text": "before it became accepted as something that the programming language should you know a mainstream programming language",
    "start": "2158960",
    "end": "2164119"
  },
  {
    "text": "should have maybe Java was the first one that really made it mainstream and and",
    "start": "2164119",
    "end": "2169520"
  },
  {
    "text": "now this is not something that is I mean still disputed or debated I should say but it's not as outrageous anymore and",
    "start": "2169520",
    "end": "2176839"
  },
  {
    "text": "so I think that's true for other things [Music]",
    "start": "2176839",
    "end": "2184079"
  },
  {
    "text": "too on episode 141 guest Daniel Marti helped Matt and Johnny explore goes",
    "start": "2184079",
    "end": "2190880"
  },
  {
    "text": "encoding Json package yeah and it's JavaScript object",
    "start": "2190880",
    "end": "2196720"
  },
  {
    "text": "notation so it comes out of uh JavaScript uh but it turns out to be",
    "start": "2196720",
    "end": "2201920"
  },
  {
    "text": "really kind of useful across lot any every language really has now some kind of Json support H it's it's practically",
    "start": "2201920",
    "end": "2209119"
  },
  {
    "text": "everywhere practically every language out there that's modern today has to have Json support because you just do",
    "start": "2209119",
    "end": "2214720"
  },
  {
    "text": "and your computer you might not see it but it definitely is running Json at some level yeah and so there's like it's",
    "start": "2214720",
    "end": "2221520"
  },
  {
    "text": "an object and it has fields and those fields have some types and it's the types that we're used to as well in go",
    "start": "2221520",
    "end": "2227800"
  },
  {
    "text": "like strings and numbers and booleans any others other objects arrays those",
    "start": "2227800",
    "end": "2234040"
  },
  {
    "text": "kinds of things I think that's that might be the whole list and why did it get such popular use on the web I mean",
    "start": "2234040",
    "end": "2240520"
  },
  {
    "text": "it kind of is Kind of Perfect Isn't it for web Technologies I I would say it",
    "start": "2240520",
    "end": "2245839"
  },
  {
    "text": "came from the from all the success that browsers had you know the modern web had and you know suddenly HTTP HTML CSS and",
    "start": "2245839",
    "end": "2253880"
  },
  {
    "text": "JavaScript and Json all these Technologies kind of took everybody by surprise initially everybody thought",
    "start": "2253880",
    "end": "2259400"
  },
  {
    "text": "they were just toys but now suddenly people are building real companies on top of them and Json is just you know",
    "start": "2259400",
    "end": "2266800"
  },
  {
    "text": "has too much momentum I don't think anything is ever going to replace it at this point honestly and I have mixed",
    "start": "2266800",
    "end": "2273440"
  },
  {
    "text": "opinions and feelings about all the third party Json re implementations out there I think some of them do make sense",
    "start": "2273440",
    "end": "2280480"
  },
  {
    "text": "for example one use case is you do absolutely want the most performance you can get because maybe this is a",
    "start": "2280480",
    "end": "2287760"
  },
  {
    "text": "bottleneck for you and you don't mind go generating some code uh to then you know",
    "start": "2287760",
    "end": "2293960"
  },
  {
    "text": "write generate automatically a decoder for you for Json so you can use packages like easy Json for that which is pretty",
    "start": "2293960",
    "end": "2300359"
  },
  {
    "text": "popular and the trade of there is you have to run go generate and your binary is going to weigh quite a little bit",
    "start": "2300359",
    "end": "2305400"
  },
  {
    "text": "more because it has quite a lot of extra code but that extra code it just encodes all the logic directly in binary code in",
    "start": "2305400",
    "end": "2312160"
  },
  {
    "text": "machine code so there's no reflect there's no references there's no extra work involved so I think that's clearly",
    "start": "2312160",
    "end": "2319680"
  },
  {
    "text": "one of the cases where it might make sense for you use case I like how you framed that as well you're saying maybe",
    "start": "2319680",
    "end": "2324839"
  },
  {
    "text": "it's a bottleneck in your case and that's the thing it's like once you've seen that this is a place where an",
    "start": "2324839",
    "end": "2330599"
  },
  {
    "text": "improvement is going to make a difference for you then it's worth taking on the extra pain whether it's",
    "start": "2330599",
    "end": "2336079"
  },
  {
    "text": "complex or learning a new API or whatever it is I like that approach because well I think it's what we should",
    "start": "2336079",
    "end": "2342839"
  },
  {
    "text": "always be doing you know as you alluded to Johnny we kind of can get a bit obsessed with why wouldn't we want the",
    "start": "2342839",
    "end": "2349079"
  },
  {
    "text": "fastest possible thing and the answer is it might be good enough just using the standard Library there are some bugs for",
    "start": "2349079",
    "end": "2356359"
  },
  {
    "text": "example um there's one that I would say affects most code bases out there which",
    "start": "2356359",
    "end": "2361920"
  },
  {
    "text": "is the standard you know you have an HTP end point and the body is J so you want to decode it so what you do is you take",
    "start": "2361920",
    "end": "2369480"
  },
  {
    "text": "the rbody and you do json. new decod new decoder decode with the body and then",
    "start": "2369480",
    "end": "2376040"
  },
  {
    "text": "into some structure and if you do that it's buggy if you just do that I've just got to",
    "start": "2376040",
    "end": "2381800"
  },
  {
    "text": "go what do you mean it's boogy tell me why please so this was found by Joe uh",
    "start": "2381800",
    "end": "2387640"
  },
  {
    "text": "one of the maintainers I I want to say about a year ago and the bug is the decoder is meant to be useful for",
    "start": "2387640",
    "end": "2395960"
  },
  {
    "text": "streaming of Json values and that is for example when you do go test with the Json flag it's going to give you a new",
    "start": "2395960",
    "end": "2403000"
  },
  {
    "text": "line separated stream of Json of Json values of Json objects yeah that's kind of how what I was using in those tools I",
    "start": "2403000",
    "end": "2409480"
  },
  {
    "text": "was talking about yeah exactly in a way it is kind of streaming in a in a way like takes the reader for each object it",
    "start": "2409480",
    "end": "2417560"
  },
  {
    "text": "buffers it I guess but it discards that previous object doesn't it yeah yeah next time right so in a sense it's",
    "start": "2417560",
    "end": "2424240"
  },
  {
    "text": "streaming it appears to you as of streaming but internally that's what always doing well it's still doing it",
    "start": "2424240",
    "end": "2429640"
  },
  {
    "text": "only one object at a time which you could say is a stream it's just if it's a great big fat object then exactly get",
    "start": "2429640",
    "end": "2436480"
  },
  {
    "text": "in trouble [Music]",
    "start": "2436480",
    "end": "2443319"
  },
  {
    "text": "yeah episode 142 was all about that infrastructure with special guest shca",
    "start": "2443319",
    "end": "2451400"
  },
  {
    "text": "Jalan maybe we should bust some of this jargon because you know you he infra I",
    "start": "2451400",
    "end": "2457280"
  },
  {
    "text": "hear systems engineering and I hear devops do we agree at least on what",
    "start": "2457280",
    "end": "2462640"
  },
  {
    "text": "these terms mean no we don't I mean I mean it's it's kind",
    "start": "2462640",
    "end": "2468480"
  },
  {
    "text": "of funny I mean let's take for example one of the hot new titles out there right Sr right yeah and you'd think that",
    "start": "2468480",
    "end": "2475520"
  },
  {
    "text": "like that would carry some sort of consistency right from organization to organization that is entirely not the",
    "start": "2475520",
    "end": "2481760"
  },
  {
    "text": "case like at all right an Sr at Google is going to be very different for an s Salesforce which is going to be very",
    "start": "2481760",
    "end": "2487560"
  },
  {
    "text": "different from this are as Microsoft yes there is a through line between these things and that and that goes for the",
    "start": "2487560",
    "end": "2492599"
  },
  {
    "text": "other titles as well system Eng engineering you know devops engineer I cringe a little bit when I say that but",
    "start": "2492599",
    "end": "2498280"
  },
  {
    "text": "like basically these things are going to mean different things and different organizations even in different sort of",
    "start": "2498280",
    "end": "2503839"
  },
  {
    "text": "U in over the lifespan of of an engineering team right that that the definition of that role may also change",
    "start": "2503839",
    "end": "2511280"
  },
  {
    "text": "right so it's it's it's not I don't think I don't think there is one sort of solid definition right of of what you",
    "start": "2511280",
    "end": "2517280"
  },
  {
    "text": "know software engineer database engineer infrastructure engineer Ops whatever it is I think it's going to be different",
    "start": "2517280",
    "end": "2522480"
  },
  {
    "text": "everywhere you go yeah I thought Sr was text speak for sorry that's how I always",
    "start": "2522480",
    "end": "2529760"
  },
  {
    "text": "thought that's exactly what I ran into as well it's a chicken and neck problem you need experience to get a job but to",
    "start": "2529800",
    "end": "2536560"
  },
  {
    "text": "get a job you need experience so like where do you actually start because there is a very hard limit to like how",
    "start": "2536560",
    "end": "2542720"
  },
  {
    "text": "much you can do and learn on your own when it comes to a job of this type especially if you want to work at scale",
    "start": "2542720",
    "end": "2548720"
  },
  {
    "text": "like you simply cannot replicate the kind of things you'll be doing every day at home so why is that that and it's",
    "start": "2548720",
    "end": "2554800"
  },
  {
    "text": "such a big missed opportunity like I'm seeing a lot of like people without a lot of experience coming into this field",
    "start": "2554800",
    "end": "2561280"
  },
  {
    "text": "and like looking things from a very like New Perspective yeah in my experience they've been really much more effective",
    "start": "2561280",
    "end": "2567640"
  },
  {
    "text": "in terms of like pointing out the you know the core friction points than the experienced Engineers I think",
    "start": "2567640",
    "end": "2573839"
  },
  {
    "text": "experienced people have a lot of like you know their accept ing the current status and they always assume that like",
    "start": "2573839",
    "end": "2580079"
  },
  {
    "text": "there's all these like layers of layers of things that you know you have to satisfy in order to kind of like provide but is a new uh inexperienced engineer",
    "start": "2580079",
    "end": "2587079"
  },
  {
    "text": "just coming in like questioning some of these like things more carefully and",
    "start": "2587079",
    "end": "2592319"
  },
  {
    "text": "that's sort of like the perspective that we are missing in infrastructure in general because you know there's no good",
    "start": "2592319",
    "end": "2598240"
  },
  {
    "text": "connectivity and we are just doing a bad job in terms of hiring people into this area yeah I completely",
    "start": "2598240",
    "end": "2605079"
  },
  {
    "text": "agree [Music]",
    "start": "2605079",
    "end": "2611200"
  },
  {
    "text": "last but not least on episode 143 Frances campoy and Isabella rdelm join",
    "start": "2611200",
    "end": "2617520"
  },
  {
    "text": "Matt and Jana for a deep dive on Go's context",
    "start": "2617520",
    "end": "2622599"
  },
  {
    "text": "package like there's a a very straightforward way of cutting down the",
    "start": "2622599",
    "end": "2628319"
  },
  {
    "text": "latency like the tail latency in your requests so if you have a request let's say that you you have a request that you",
    "start": "2628319",
    "end": "2634760"
  },
  {
    "text": "send into a server and it takes five milliseconds 99% of the time but then",
    "start": "2634760",
    "end": "2640880"
  },
  {
    "text": "there's 1% of the time that it takes one minute which is not good so what you could do is make that code multiple",
    "start": "2640880",
    "end": "2648400"
  },
  {
    "text": "times and you're gonna do it with with cancellation so you're going to do context with cancel of your original",
    "start": "2648400",
    "end": "2654800"
  },
  {
    "text": "context and then what you're going to do is you're going to use the same context for all of those calls and have defer",
    "start": "2654800",
    "end": "2661640"
  },
  {
    "text": "cancel at the top of your function and then as soon as any of those those values returns and you return from that",
    "start": "2661640",
    "end": "2668520"
  },
  {
    "text": "function the rest will be cancelled and that's going to take down your 99th percenti from like one minute down to",
    "start": "2668520",
    "end": "2675480"
  },
  {
    "text": "five milliseconds so that's like small things that you can get a lot of performance especially when you're using",
    "start": "2675480",
    "end": "2681559"
  },
  {
    "text": "a server that is not something you manage so you cannot go and complain",
    "start": "2681559",
    "end": "2687200"
  },
  {
    "text": "complain to them about like hey your 99% all latency is awful you can still fix a b doing this little hack why is there",
    "start": "2687200",
    "end": "2695319"
  },
  {
    "text": "context to do H great question yeah I don't",
    "start": "2695319",
    "end": "2701359"
  },
  {
    "text": "know so context. too and context. background do exactly the same thing",
    "start": "2701359",
    "end": "2708760"
  },
  {
    "text": "they return an empty context in an empty context NE that doesn't have values doesn't have timeouts it doesn't it",
    "start": "2708760",
    "end": "2715480"
  },
  {
    "text": "never get cancelled so it's like literally an empty struct that's what it is so the interesting thing is that when",
    "start": "2715480",
    "end": "2721839"
  },
  {
    "text": "you return uh background what you're saying is that oh this is something that I'm starting from scratch so you're",
    "start": "2721839",
    "end": "2728839"
  },
  {
    "text": "basically saying there's no previous context this is something that I'm creating right so for instance in the example of the CLI you're running your",
    "start": "2728839",
    "end": "2736280"
  },
  {
    "text": "your CLI and at the beginning there's no previous context or anything like maybe at one point we will have actually a",
    "start": "2736280",
    "end": "2742119"
  },
  {
    "text": "context coming from signal that would be an interesting thing but otherwise we don't have anything so so you you would",
    "start": "2742119",
    "end": "2747760"
  },
  {
    "text": "call Background context do to do is actually was added just so as different",
    "start": "2747760",
    "end": "2755119"
  },
  {
    "text": "functions like you need to start like you're creating a tree of functions that are calling and passing context around",
    "start": "2755119",
    "end": "2761880"
  },
  {
    "text": "so how do you do it if you want to add it to all of them but little by little",
    "start": "2761880",
    "end": "2768920"
  },
  {
    "text": "like if you start from the top it's going to be you cannot pass functions until they're accepted but if you do it",
    "start": "2768920",
    "end": "2775680"
  },
  {
    "text": "the other way around like you build a function that starts by saying oh I accept a context now and you can pass a",
    "start": "2775680",
    "end": "2782520"
  },
  {
    "text": "context to me then the caller could say oh okay so I should have a context but I",
    "start": "2782520",
    "end": "2787720"
  },
  {
    "text": "do not have it yet so instead of calling context. background which implicitly says I do not have a context and I will",
    "start": "2787720",
    "end": "2794760"
  },
  {
    "text": "never will told to do is just hey I do not have it yet but let's fix it later",
    "start": "2794760",
    "end": "2800079"
  },
  {
    "text": "so it's literally just so when you grab to do you can find where you need to still do more do more work and I think",
    "start": "2800079",
    "end": "2806559"
  },
  {
    "text": "that's kind of cool like the fact that they thought about these otherwise I mean you could have done the same",
    "start": "2806559",
    "end": "2812440"
  },
  {
    "text": "calling context. background and then having on top like a comment doing to do has a real context yeah but they did it",
    "start": "2812440",
    "end": "2819240"
  },
  {
    "text": "this way so it's more explicit and you actually could do code analysis and look like hey this is not done",
    "start": "2819240",
    "end": "2824790"
  },
  {
    "text": "[Music] [Applause] yet what's up Gophers are you looking",
    "start": "2824790",
    "end": "2830319"
  },
  {
    "text": "for a way to instantly debug and troubleshoot your applications and services running a production on",
    "start": "2830319",
    "end": "2836319"
  },
  {
    "text": "kubernetes that's a mouthful well pixie gives you a magical API to get instant debug data and the best part is this",
    "start": "2836319",
    "end": "2843640"
  },
  {
    "text": "doesn't involve changing code there are no manual uis and all this lives inside",
    "start": "2843640",
    "end": "2848800"
  },
  {
    "text": "kubernetes pixie is an API which lives inside your platform Harvest all of your",
    "start": "2848800",
    "end": "2854280"
  },
  {
    "text": "data that you need and exposes a bunch of interfaces that you can ping to get data you need pixie is essentially like",
    "start": "2854280",
    "end": "2861240"
  },
  {
    "text": "a decentralized Splunk it's a programmable Edge intelligence platform which captures metrics traces logs and",
    "start": "2861240",
    "end": "2868000"
  },
  {
    "text": "events without any code changes and the team behind pixie is working hard to bring it to market for broad use by the",
    "start": "2868000",
    "end": "2874280"
  },
  {
    "text": "end of 2020 but but I'm here to tell you how you can get your hands on the beta today links are in the show notes so",
    "start": "2874280",
    "end": "2879839"
  },
  {
    "text": "check them out so you can click through to the beta and their slack Community once again links from the show notes check them out and look forward to pixie",
    "start": "2879839",
    "end": "2886440"
  },
  {
    "text": "day coming [Music]",
    "start": "2886440",
    "end": "2898049"
  },
  {
    "text": "soon of course no gotime hits collection would be complete without some unpopular",
    "start": "2898640",
    "end": "2904240"
  },
  {
    "text": "opinions in the mix let's finish up with a whole package of them log bot roll",
    "start": "2904240",
    "end": "2909760"
  },
  {
    "text": "that unpop jingle do you want to hear the break master cylinder mix or the rockapella version H let's rock that",
    "start": "2909760",
    "end": "2917520"
  },
  {
    "text": "rockapella version why not a fine selection if I do say so myself rolling",
    "start": "2917520",
    "end": "2923040"
  },
  {
    "text": "onp rockapella",
    "start": "2923040",
    "end": "2926640"
  },
  {
    "text": "enjoy",
    "start": "2928799",
    "end": "2931799"
  },
  {
    "text": "opinion popular",
    "start": "2934599",
    "end": "2939480"
  },
  {
    "text": "opinion I don't know I feel like most new technologies are just not necessary",
    "start": "2941319",
    "end": "2946760"
  },
  {
    "text": "I guess would be my unpopular opinion Docker honestly like uh kubernetes a a",
    "start": "2946760",
    "end": "2952440"
  },
  {
    "text": "lot of those I feel like you can run you know a stack not you know not the same stack but you can run basically like",
    "start": "2952440",
    "end": "2958000"
  },
  {
    "text": "what we used to run back in the 90s or whatnot or early 2000s where it's just like there's a web server running you",
    "start": "2958000",
    "end": "2963240"
  },
  {
    "text": "can run a business off of that probably be fine I obviously back up your data but that'd be my unpopular",
    "start": "2963240",
    "end": "2969119"
  },
  {
    "text": "opinion I think for me an unpopular opinion I have is uh I guess once your",
    "start": "2969119",
    "end": "2975440"
  },
  {
    "text": "organization or your I guess the engineers in your organization reach a certain level that you shouldn't really",
    "start": "2975440",
    "end": "2980760"
  },
  {
    "text": "just take software from other companies like I think grpc is like a big one for",
    "start": "2980760",
    "end": "2986240"
  },
  {
    "text": "me where it's just like once you have a group of people that understands how to like build things with TCP and hddp you",
    "start": "2986240",
    "end": "2992599"
  },
  {
    "text": "could probably just build it yourself and you should do that because your organization's needs are going to be",
    "start": "2992599",
    "end": "2997680"
  },
  {
    "text": "very different than like what Google needed for when they built your RPC so I think it's like I fall closer to that",
    "start": "2997680",
    "end": "3004119"
  },
  {
    "text": "what used to be called not invented here syndrome and I think like that's probably where we should be edging back",
    "start": "3004119",
    "end": "3009960"
  },
  {
    "text": "to but I realize that that is wildly unpopular with a lot of people and they usually say you know just use whatever",
    "start": "3009960",
    "end": "3016359"
  },
  {
    "text": "is out there because that's better well I mentioned rest apis earlier I don't",
    "start": "3016359",
    "end": "3021760"
  },
  {
    "text": "think they're good that's my unpopular opinion I think they cause more",
    "start": "3021760",
    "end": "3027720"
  },
  {
    "text": "confusion than problems they solve actually an unpopular opinion I have is",
    "start": "3027720",
    "end": "3033400"
  },
  {
    "text": "you know should try and work in tiny teams a lot of the problems when it comes to software engineering come at",
    "start": "3033400",
    "end": "3041599"
  },
  {
    "text": "scale and that's not just code scale but people scale so if you can have tiny",
    "start": "3041599",
    "end": "3046920"
  },
  {
    "text": "little teams working on a problem and you can do this within bigger teams like",
    "start": "3046920",
    "end": "3052240"
  },
  {
    "text": "just literally as you know two or three people you are are now a new little team",
    "start": "3052240",
    "end": "3057680"
  },
  {
    "text": "you can be so effective in such a small group because you cut out a lot of the",
    "start": "3057680",
    "end": "3062880"
  },
  {
    "text": "work needed really to Marshall the team you can't always do it and it sounds a little bit antisocial but that would be",
    "start": "3062880",
    "end": "3068839"
  },
  {
    "text": "my unpopular opinion tiny teams I have this library that I like to use which is called a squirrel and it's",
    "start": "3068839",
    "end": "3075880"
  },
  {
    "text": "a query Builder and it uses the Builder pattern ha everyone everyone hates the",
    "start": "3075880",
    "end": "3082480"
  },
  {
    "text": "Builder pattern and go right and for good reason because the build patter doesn't work well with with the static",
    "start": "3082480",
    "end": "3088280"
  },
  {
    "text": "um typing that go provides because we don't have generics and squirel suffers from this problem as well but it's also",
    "start": "3088280",
    "end": "3095480"
  },
  {
    "text": "provides a lot of power at the same time so it's like the one exception to the rule of don't use Builder the Builder",
    "start": "3095480",
    "end": "3101240"
  },
  {
    "text": "patter anywhere is for query building use the squirrel package because it's really easy to use and constructing uh",
    "start": "3101240",
    "end": "3109160"
  },
  {
    "text": "queries with so the Builder package then just just for anyone not familiar this is where you get these fluent a API",
    "start": "3109160",
    "end": "3115960"
  },
  {
    "text": "where every method Returns the main object itself and then yeah right and I",
    "start": "3115960",
    "end": "3123319"
  },
  {
    "text": "should say I hate these because you can't Define interfaces that work with them like at all it's just a nightmare",
    "start": "3123319",
    "end": "3129839"
  },
  {
    "text": "so I I do have one question Johan could you reconstruct the swirl package using like functional options uh",
    "start": "3129839",
    "end": "3138119"
  },
  {
    "text": "potentially so do either of you have something you'd like to share I have one I I think that PA programming is an",
    "start": "3138119",
    "end": "3144960"
  },
  {
    "text": "unpop opinion you know I did it early in my career took a lot of time off like companies a lot of companies are afraid",
    "start": "3144960",
    "end": "3150960"
  },
  {
    "text": "to adopt it I work for a company that I think does it really well but I still think it's an unpopular opinion that par",
    "start": "3150960",
    "end": "3157599"
  },
  {
    "text": "programming mod programming uh I think that's the way things are going to be done if you want to be successful in the future I think the closest I have is",
    "start": "3157599",
    "end": "3165280"
  },
  {
    "text": "that uh hopefully it's not controversial here because that make me sad but that documentation contribution is",
    "start": "3165280",
    "end": "3171359"
  },
  {
    "text": "contribution that is as important and sometimes more important than just the actual code and I see a lot of that",
    "start": "3171359",
    "end": "3176839"
  },
  {
    "text": "where people always kind of drop the docks that's closest thing I have right now but you know it's important it builds up that how do we bring people",
    "start": "3176839",
    "end": "3183280"
  },
  {
    "text": "into our Circle that's building this Tech and expand and then be able to build better things together so",
    "start": "3183280",
    "end": "3189119"
  },
  {
    "text": "hopefully not too much of a hot take here but I I think it is I think it's a hot take and yeah let's fight the good",
    "start": "3189119",
    "end": "3195240"
  },
  {
    "text": "fight like keep preaching it I don't know if it's an unpopular opinion but you know I like short",
    "start": "3195240",
    "end": "3201440"
  },
  {
    "text": "identifiers I do and um I feel like",
    "start": "3201440",
    "end": "3206520"
  },
  {
    "text": "the closer they are to where you use them the shorter they can be and the further away they are from where you use",
    "start": "3206520",
    "end": "3213520"
  },
  {
    "text": "them the longer they should be and then there are some exceptions like when an",
    "start": "3213520",
    "end": "3219000"
  },
  {
    "text": "identifier is really really really important in your package and prevalent",
    "start": "3219000",
    "end": "3225119"
  },
  {
    "text": "then it can be one letter even if it's a global and you know the most prominent",
    "start": "3225119",
    "end": "3230839"
  },
  {
    "text": "example for that is perhaps testing. T I'm not sure if you're allowed to be a teacher",
    "start": "3230839",
    "end": "3235920"
  },
  {
    "text": "now oh why Don every teacher like expects you to write really long like",
    "start": "3235920",
    "end": "3242119"
  },
  {
    "text": "explanatory like self-explanatory variable names regardless of where you use them or when you're at least that",
    "start": "3242119",
    "end": "3247559"
  },
  {
    "text": "was my experience I felt like every teacher wanted long variable names so I I will comment on your change list if it",
    "start": "3247559",
    "end": "3255000"
  },
  {
    "text": "uses you know in a in a simple for Loop if the iteration variable is called",
    "start": "3255000",
    "end": "3260200"
  },
  {
    "text": "index I will you know probably comment on that say you know call it I or J",
    "start": "3260200",
    "end": "3267040"
  },
  {
    "text": "okay I don't know if this opinion is unpopular but I feel like I write it a lot so there's certainly people who",
    "start": "3267040",
    "end": "3273400"
  },
  {
    "text": "don't seem to grasp it and that's that the language is not perfect but every",
    "start": "3273400",
    "end": "3279319"
  },
  {
    "text": "change to the language carries a heavy cost so when you want to come and argue",
    "start": "3279319",
    "end": "3285559"
  },
  {
    "text": "for why the language should be changed and you know we see that a lot I'd say that there's a probably one a day",
    "start": "3285559",
    "end": "3292559"
  },
  {
    "text": "suggestion for some way to change the go language don't just talk about how it makes the",
    "start": "3292559",
    "end": "3298680"
  },
  {
    "text": "language better but also spend some time to talk about how it makes the language",
    "start": "3298680",
    "end": "3303760"
  },
  {
    "text": "worse because there's no such thing as a 100% good change to language I shouldn't",
    "start": "3303760",
    "end": "3309119"
  },
  {
    "text": "say there's no such thing maybe it's out there maybe no one has thought of it yet but probably it's a good bet that all",
    "start": "3309119",
    "end": "3316920"
  },
  {
    "text": "the 100% good changes to the language of already been made and so when you want",
    "start": "3316920",
    "end": "3322000"
  },
  {
    "text": "to change the language spend some time to think about how it makes things worse as well as how it makes things better I",
    "start": "3322000",
    "end": "3328599"
  },
  {
    "text": "think I just saw you drop a metaphorical [Laughter]",
    "start": "3328599",
    "end": "3335599"
  },
  {
    "text": "mic we're going to go back now and think a lot about how generics makes things worse so my unpopular opinion is that",
    "start": "3335599",
    "end": "3344720"
  },
  {
    "text": "encoding Json is fast enough come on wow this is the guy",
    "start": "3344720",
    "end": "3351599"
  },
  {
    "text": "responsible for making it faster well I'm going to say generally where",
    "start": "3351599",
    "end": "3358280"
  },
  {
    "text": "generally means it most it most likely applies to you but it might not apply to the one% that's doing something",
    "start": "3358280",
    "end": "3364400"
  },
  {
    "text": "completely esoteric such as handling 20 Gigabytes of Json but most people don't",
    "start": "3364400",
    "end": "3369640"
  },
  {
    "text": "do that and kind of my point goes back to the trade-offs right yes if you pick another package you can get maybe a 2X",
    "start": "3369640",
    "end": "3377640"
  },
  {
    "text": "3x maybe even 4X Improvement but is it really worth sticking with Jason at that",
    "start": "3377640",
    "end": "3383200"
  },
  {
    "text": "point the overlap between the people that are stuck with Json because they are and the people that have to deal",
    "start": "3383200",
    "end": "3388839"
  },
  {
    "text": "with a lot of data is very small because the people that have to deal with a lot of data they generally pick better",
    "start": "3388839",
    "end": "3394640"
  },
  {
    "text": "formats that that are faster to decode I think that is a pretty solid argument",
    "start": "3394640",
    "end": "3399720"
  },
  {
    "text": "actually yeah that's not unpopular with me that one I think you've nailed that yeah uh yeah well you would think that",
    "start": "3399720",
    "end": "3406119"
  },
  {
    "text": "the amount of people yelling about encoding Json being too slow would disagree sure well but that's because we",
    "start": "3406119",
    "end": "3413079"
  },
  {
    "text": "gave them the tools to Benchmark things I don't know what you expect of course going be mo take them",
    "start": "3413079",
    "end": "3419480"
  },
  {
    "text": "back Json isn't always as bad as people make it out to be tell me more who is he who is this",
    "start": "3419480",
    "end": "3427799"
  },
  {
    "text": "Jason you talk about yeah that that Jason who gets so much Flack why are you defending him all the time yeah well",
    "start": "3427799",
    "end": "3434520"
  },
  {
    "text": "I've seen a lot of people switch in my opinion prematurely to protuff in particular sometimes to Thrift where you",
    "start": "3434520",
    "end": "3443039"
  },
  {
    "text": "just change from one problem to another and especially I think for anything that is used externally to your company so",
    "start": "3443039",
    "end": "3450480"
  },
  {
    "text": "for example open source code Proto Buffs can get very complicated especially if you're exposing something that is going",
    "start": "3450480",
    "end": "3456880"
  },
  {
    "text": "to be used across multiple languages so nice to use in go not necessarily As",
    "start": "3456880",
    "end": "3462760"
  },
  {
    "text": "Nice to use in Ruby for example or in PHP yeah or indeed the web browser",
    "start": "3462760",
    "end": "3467960"
  },
  {
    "text": "actually you yeah we we did we did an episode on this very recently we called",
    "start": "3467960",
    "end": "3473240"
  },
  {
    "text": "it encoding Json and we actually spelled the episode title using Json to see if",
    "start": "3473240",
    "end": "3479480"
  },
  {
    "text": "any podcasting technology is vulnerable to a Json injection attacks so far",
    "start": "3479480",
    "end": "3485359"
  },
  {
    "text": "everything's just been fine which is a shame Jana do you have an unpopular",
    "start": "3485359",
    "end": "3490760"
  },
  {
    "text": "opinion I have a controversial one oh let's do it let me just re-record the theme tune",
    "start": "3490760",
    "end": "3497880"
  },
  {
    "text": "then go it's a controversial opinion I do think that like I really like go as a",
    "start": "3499400",
    "end": "3505599"
  },
  {
    "text": "language you know like the Simplicity and you know verbosity Wise it's just",
    "start": "3505599",
    "end": "3511000"
  },
  {
    "text": "one of the best options that you have but uh all the protogen artifacts is",
    "start": "3511000",
    "end": "3516760"
  },
  {
    "text": "just making everything just kind of like messed up like I each time I have to",
    "start": "3516760",
    "end": "3522319"
  },
  {
    "text": "touch you know some protog generated protos it just doesn't look like go",
    "start": "3522319",
    "end": "3527799"
  },
  {
    "text": "anymore it's like so cryptic like there's all these like Types on top of the standard Library I have to learn",
    "start": "3527799",
    "end": "3533559"
  },
  {
    "text": "about you know prot has its own like struck like all of the like you know mess and even like the time stamp for",
    "start": "3533559",
    "end": "3541520"
  },
  {
    "text": "example type is like a completely different representation so you basically have to adopt into that like",
    "start": "3541520",
    "end": "3549599"
  },
  {
    "text": "verbos um alternative universe and it's just like my main pain Point um and I've",
    "start": "3549599",
    "end": "3556880"
  },
  {
    "text": "been like trying to collect all this like gas and tips and everything about protos for a long time and I can tell",
    "start": "3556880",
    "end": "3563480"
  },
  {
    "text": "you there's like at least 20 pages of me putting some tips like here and there",
    "start": "3563480",
    "end": "3569119"
  },
  {
    "text": "and I still need to go back to that document in reference to be able to kind of like take a look like hey this is",
    "start": "3569119",
    "end": "3575280"
  },
  {
    "text": "what I'm supposed to do if I you know see a type like this put protog generated type like this and that's just",
    "start": "3575280",
    "end": "3581160"
  },
  {
    "text": "like a big big struggle to me they've been trying to improve you know the",
    "start": "3581160",
    "end": "3586359"
  },
  {
    "text": "generated artifacts but it's just too late I think I don't know if it's popular or unpopular but I think that",
    "start": "3586359",
    "end": "3595240"
  },
  {
    "text": "generics and go are a good idea I would say that's unpopular with many people",
    "start": "3595240",
    "end": "3600760"
  },
  {
    "text": "that I know but I do think that like I gave",
    "start": "3600760",
    "end": "3606240"
  },
  {
    "text": "this talk long time ago around functional programming and go and and basically why not to do it",
    "start": "3606240",
    "end": "3613839"
  },
  {
    "text": "and one of the biggest reasons like there were two reasons the first one is because there's no tail recursion",
    "start": "3613839",
    "end": "3619359"
  },
  {
    "text": "optimization which means that your program is actually 10 times slower just because of it so that's you know like a",
    "start": "3619359",
    "end": "3624880"
  },
  {
    "text": "small thing that maybe we should fix but the biggest thing was the fact that if you want to do any kind of like interesting composition of types without",
    "start": "3624880",
    "end": "3632079"
  },
  {
    "text": "generics you're out of luck you cannot really do it you need to do empty interfaces everywhere right so generic",
    "start": "3632079",
    "end": "3639400"
  },
  {
    "text": "I'm very excited about seeing them like I've been trying them and and how they look and now that you know contracts are",
    "start": "3639400",
    "end": "3645799"
  },
  {
    "text": "kind of like gone or at least like they make much more sense they're not as complicated as they used to be I'm",
    "start": "3645799",
    "end": "3652200"
  },
  {
    "text": "pretty excited about getting to use it so I don't know when it's going to be released for real but looking forward to",
    "start": "3652200",
    "end": "3659240"
  },
  {
    "text": "that okay those were your summer hits I'd love to know if you find Value in",
    "start": "3660880",
    "end": "3666440"
  },
  {
    "text": "this style episode please leave a comment one way or the other open your show notes click discuss on chog news",
    "start": "3666440",
    "end": "3673319"
  },
  {
    "text": "and let your voice be heard you can also tweet at me if that's easier I'm at Jared Santo that's j e r o d s a n t o",
    "start": "3673319",
    "end": "3682319"
  },
  {
    "text": "special thanks to BMC for all of the music and sounds you hear on our shows especially that Johnny Boro I see bars",
    "start": "3682319",
    "end": "3689680"
  },
  {
    "text": "remix we played at the top I see bars and KES pretty dope if you ask me thanks",
    "start": "3689680",
    "end": "3696359"
  },
  {
    "text": "also to our longtime sponsors shout out to fley shout out to Lode shout out to",
    "start": "3696359",
    "end": "3702480"
  },
  {
    "text": "robbar that's all for now back to our regularly scheduled programming next week the panel did a Reddit amama so",
    "start": "3702480",
    "end": "3709200"
  },
  {
    "text": "we're answering all of the community's questions with a couple special guests stay tuned for that we appreciate you",
    "start": "3709200",
    "end": "3715240"
  },
  {
    "text": "listening talk to you again next [Music]",
    "start": "3715240",
    "end": "3743359"
  },
  {
    "text": "time [Music]",
    "start": "3743359",
    "end": "3764820"
  },
  {
    "text": "TR",
    "start": "3766000",
    "end": "3769000"
  }
]