[
  {
    "text": "Last week I put up a video introducing quantum computing,",
    "start": "0",
    "end": "2608"
  },
  {
    "text": "and in the final section we were stepping through something known as Grover's algorithm.",
    "start": "2608",
    "end": "6680"
  },
  {
    "text": "And based on the comments that I saw, I think there was a very common point of confusion",
    "start": "7140",
    "end": "10958"
  },
  {
    "text": "that reveals I clearly could have done a better job explaining a core piece of it.",
    "start": "10958",
    "end": "14560"
  },
  {
    "text": "Right here I wanted to throw together a very quick",
    "start": "14820",
    "end": "16800"
  },
  {
    "text": "supplement in the hopes of adding a bit of clarity.",
    "start": "16800",
    "end": "18859"
  },
  {
    "text": "The premise was to have a function which is somehow triggered by a unique value",
    "start": "19520",
    "end": "23670"
  },
  {
    "text": "out of a big bag of options, and the puzzle is basically to figure out how do",
    "start": "23670",
    "end": "27768"
  },
  {
    "text": "you find that unique value just by applying the function on various inputs.",
    "start": "27768",
    "end": "31760"
  },
  {
    "text": "Now in a classical setting, it's not a very interesting question,",
    "start": "32259",
    "end": "35170"
  },
  {
    "text": "the best you can do is guess and check, but what we walked through was a completely",
    "start": "35171",
    "end": "38934"
  },
  {
    "text": "different approach that you can take that becomes possible in the setting of a",
    "start": "38934",
    "end": "42474"
  },
  {
    "text": "quantum computer.",
    "start": "42474",
    "end": "43280"
  },
  {
    "text": "When we did this, there was a certain key step where,",
    "start": "44100",
    "end": "46386"
  },
  {
    "text": "if I'm understanding the comments correctly, it looked to a lot of people",
    "start": "46387",
    "end": "49581"
  },
  {
    "text": "like in order to apply this key step, you would have to already know the",
    "start": "49581",
    "end": "52731"
  },
  {
    "text": "value that you're searching for, which would of course defeat the whole",
    "start": "52731",
    "end": "55837"
  },
  {
    "text": "purpose of the algorithm.",
    "start": "55838",
    "end": "56960"
  },
  {
    "text": "More specifically, we had this very high dimensional vector space,",
    "start": "57280",
    "end": "60934"
  },
  {
    "text": "and one of the axes in that space corresponded to the value that we're searching for,",
    "start": "60935",
    "end": "65697"
  },
  {
    "text": "and this step of the algorithm looked like flipping along that axis,",
    "start": "65697",
    "end": "69518"
  },
  {
    "text": "multiplying any component of a vector in that direction by negative one.",
    "start": "69518",
    "end": "73560"
  },
  {
    "text": "Now viewers were essentially asking, whoa whoa whoa,",
    "start": "74280",
    "end": "76622"
  },
  {
    "text": "how could you know how to do that without already knowing which axis",
    "start": "76622",
    "end": "79729"
  },
  {
    "text": "you're searching for?",
    "start": "79729",
    "end": "80719"
  },
  {
    "text": "I genuinely tried to forestall that objection, but I think I failed,",
    "start": "81040",
    "end": "84494"
  },
  {
    "text": "so backing up, I think the whole discussion might be clearer if we",
    "start": "84494",
    "end": "87897"
  },
  {
    "text": "focus on a very concrete example, something like solving a sudoku.",
    "start": "87897",
    "end": "91300"
  },
  {
    "text": "On your normal classical computer, it's not hard to write a function that checks",
    "start": "91780",
    "end": "95991"
  },
  {
    "text": "whether a proposed solution follows all of the sudoku rules and solves the puzzle.",
    "start": "95991",
    "end": "100360"
  },
  {
    "text": "You know, it would check the rows, the columns, squares for duplicates, things like that.",
    "start": "100900",
    "end": "104240"
  },
  {
    "text": "If you have written this function, just because you know how to verify a solution,",
    "start": "104720",
    "end": "108971"
  },
  {
    "text": "it's not at all obvious what the solution is in the first place.",
    "start": "108971",
    "end": "112340"
  },
  {
    "text": "This is, after all, why a sudoku is a puzzle.",
    "start": "112340",
    "end": "115100"
  },
  {
    "text": "The rules alone don't reveal the answer.",
    "start": "115580",
    "end": "117700"
  },
  {
    "text": "There are other situations where this is actually a much stronger assumption.",
    "start": "118380",
    "end": "121780"
  },
  {
    "text": "The function SHA-256, for example, is what's called a cryptographic hash function.",
    "start": "122380",
    "end": "126780"
  },
  {
    "text": "That basically means if you want to find what input gives you a particular output,",
    "start": "127100",
    "end": "131094"
  },
  {
    "text": "it is strongly believed that you really can't gain much insight",
    "start": "131094",
    "end": "134211"
  },
  {
    "text": "by looking at how the function is implemented.",
    "start": "134211",
    "end": "136500"
  },
  {
    "text": "If someone could reverse engineer it, they would be mining all of the",
    "start": "137140",
    "end": "140365"
  },
  {
    "text": "bitcoin in the world and breaking numerous other cryptographic schemes.",
    "start": "140365",
    "end": "143730"
  },
  {
    "text": "But it's believed that the best thing you can do when you're",
    "start": "144290",
    "end": "146795"
  },
  {
    "text": "searching for a particular output is guess and check.",
    "start": "146795",
    "end": "149050"
  },
  {
    "text": "So it's not that the key value is like hiding inside the function behind some curtain,",
    "start": "149550",
    "end": "154056"
  },
  {
    "text": "it's more of a difficult-to-find emergent phenomenon of the function itself.",
    "start": "154056",
    "end": "158090"
  },
  {
    "text": "Now the idea with Grover's algorithm is that if you have this sort of verifier",
    "start": "158650",
    "end": "162487"
  },
  {
    "text": "function for some hard problem and you translate it into the language of",
    "start": "162487",
    "end": "166078"
  },
  {
    "text": "quantum computing, there is a method for sifting out valid solutions which",
    "start": "166078",
    "end": "169767"
  },
  {
    "text": "requires fewer steps than simple guessing and checking over all the possibilities.",
    "start": "169767",
    "end": "173850"
  },
  {
    "text": "Now to be clear, it is not dramatically faster, it's only a quadratic speedup,",
    "start": "174470",
    "end": "178140"
  },
  {
    "text": "and given the overheads for making quantum computing work,",
    "start": "178140",
    "end": "180915"
  },
  {
    "text": "this frankly has questionable utility.",
    "start": "180915",
    "end": "182750"
  },
  {
    "text": "In fact, let's talk a little bit more about that at the end.",
    "start": "183110",
    "end": "185610"
  },
  {
    "text": "First, to the clarification, if you have this Sudoku verifying function,",
    "start": "186250",
    "end": "190001"
  },
  {
    "text": "it's not like you can just run it on a quantum computer.",
    "start": "190001",
    "end": "192970"
  },
  {
    "text": "After all, quantum computers speak an entirely different language,",
    "start": "193410",
    "end": "196350"
  },
  {
    "text": "it's a totally different framework for computing that looks a lot more like vector",
    "start": "196350",
    "end": "200046"
  },
  {
    "text": "manipulation.",
    "start": "200046",
    "end": "200670"
  },
  {
    "text": "The first step to port over this verification function into the",
    "start": "201570",
    "end": "205078"
  },
  {
    "text": "new context is to imagine that we've kind of compiled your",
    "start": "205078",
    "end": "208363"
  },
  {
    "text": "verifier into a bunch of logic gates, things like AND, OR, and NOT.",
    "start": "208363",
    "end": "212150"
  },
  {
    "text": "So for any proposed Sudoku solution, you would represent it all in binary,",
    "start": "212750",
    "end": "217026"
  },
  {
    "text": "all of those bits would be processed by your web of logic gates,",
    "start": "217026",
    "end": "220781"
  },
  {
    "text": "and the output would be a 1 if it's a valid Sudoku solution,",
    "start": "220781",
    "end": "224306"
  },
  {
    "text": "and a 0 for all the invalid ones.",
    "start": "224306",
    "end": "226270"
  },
  {
    "text": "And again, being able to assemble these logic gates does not",
    "start": "226850",
    "end": "230103"
  },
  {
    "text": "require knowing ahead of time which input solves the puzzle.",
    "start": "230103",
    "end": "233410"
  },
  {
    "text": "The logic gates distill the rules of the game, but not the strategy.",
    "start": "233730",
    "end": "236790"
  },
  {
    "text": "Now I'm assuming everyone has watched the main video,",
    "start": "237950",
    "end": "240711"
  },
  {
    "text": "in particular the core section about the fundamentals of the state vector,",
    "start": "240711",
    "end": "244619"
  },
  {
    "text": "but as a quick recap, the upshot is that you think of every possible",
    "start": "244619",
    "end": "248214"
  },
  {
    "text": "bit string as a unit vector along a coordinate axis in some high dimensional space.",
    "start": "248214",
    "end": "252590"
  },
  {
    "text": "In the language of linear algebra, you would call",
    "start": "252970",
    "end": "255263"
  },
  {
    "text": "these the basis vectors of your coordinate system.",
    "start": "255263",
    "end": "257648"
  },
  {
    "text": "For example, with a 2-qubit quantum computer, you would have 4 possible bit strings,",
    "start": "258290",
    "end": "262826"
  },
  {
    "text": "and these would all look like basis directions in some 4-dimensional space.",
    "start": "262826",
    "end": "266930"
  },
  {
    "text": "These state vectors get very big very fast.",
    "start": "267670",
    "end": "269930"
  },
  {
    "text": "If you have a k-qubit quantum computer, that gives you 2 to the k possible bit strings,",
    "start": "270290",
    "end": "274980"
  },
  {
    "text": "and you think of each one of them as being a coordinate direction",
    "start": "274980",
    "end": "278538"
  },
  {
    "text": "in some very high dimensional vector space.",
    "start": "278538",
    "end": "280910"
  },
  {
    "text": "Now operations on a quantum computer don't spit out true",
    "start": "281550",
    "end": "284167"
  },
  {
    "text": "or false the way you can see on a classical computer.",
    "start": "284167",
    "end": "286690"
  },
  {
    "text": "Instead they take in a vector and spit out a new vector,",
    "start": "287210",
    "end": "290201"
  },
  {
    "text": "both of which live in the same space.",
    "start": "290201",
    "end": "292229"
  },
  {
    "text": "And like I said last video, you often think about them as",
    "start": "292790",
    "end": "295403"
  },
  {
    "text": "somehow flipping or rotating the vectors in that space.",
    "start": "295403",
    "end": "297970"
  },
  {
    "text": "Now here's the crux of the confusion.",
    "start": "298730",
    "end": "300170"
  },
  {
    "text": "I mentioned how if you have this classical verifier function,",
    "start": "300510",
    "end": "303762"
  },
  {
    "text": "something like a Sudoku checker that spits out a 1 or a 0,",
    "start": "303762",
    "end": "306906"
  },
  {
    "text": "it is possible to translate it into an operation on a quantum computer that",
    "start": "306906",
    "end": "310957"
  },
  {
    "text": "has the following behavior.",
    "start": "310957",
    "end": "312450"
  },
  {
    "text": "If a bit string returns 1 for true up in the classical case,",
    "start": "312810",
    "end": "316603"
  },
  {
    "text": "then down in the quantum case, the corresponding basis vector",
    "start": "316603",
    "end": "320521"
  },
  {
    "text": "gets multiplied by negative 1, effectively flipping 180 degrees.",
    "start": "320521",
    "end": "324630"
  },
  {
    "text": "And then if in the classical case a bit string outputs 0 for false,",
    "start": "324970",
    "end": "328722"
  },
  {
    "text": "then in the quantum translation, the corresponding basis vector is unchanged.",
    "start": "328722",
    "end": "333090"
  },
  {
    "text": "Now I can see three reasons that this step might have caused some confusion.",
    "start": "333670",
    "end": "337390"
  },
  {
    "text": "First of all, I didn't explain how it actually works.",
    "start": "338090",
    "end": "340430"
  },
  {
    "text": "I didn't step through the translation.",
    "start": "340570",
    "end": "341870"
  },
  {
    "text": "Now my hope with that video was that it's just not too huge a leap to",
    "start": "342530",
    "end": "346037"
  },
  {
    "text": "have you accept that in principle there exists this correspondence",
    "start": "346037",
    "end": "349442"
  },
  {
    "text": "between returning true and false up in the classical world and",
    "start": "349442",
    "end": "352643"
  },
  {
    "text": "multiplying by negative 1 or positive 1 down in the quantum world with vectors.",
    "start": "352644",
    "end": "356710"
  },
  {
    "text": "Now maybe that is a leap.",
    "start": "357070",
    "end": "358030"
  },
  {
    "text": "I could preview for you what that translation looks like.",
    "start": "358210",
    "end": "360650"
  },
  {
    "text": "The relevant search term here is quantum compilation, but I'm going to be honest,",
    "start": "360650",
    "end": "364397"
  },
  {
    "text": "I don't think it would add much clarity, in the same way that knowing the logic",
    "start": "364397",
    "end": "368099"
  },
  {
    "text": "gates that implement addition don't really teach you much about how to add two numbers.",
    "start": "368099",
    "end": "372170"
  },
  {
    "text": "Now it's not exactly like this, but loosely speaking, every time you see an AND gate,",
    "start": "372670",
    "end": "376690"
  },
  {
    "text": "you translate it into a quantum operation that looks kind of like an AND.",
    "start": "376690",
    "end": "380190"
  },
  {
    "text": "Every time you see a NOT gate, there's a quantum",
    "start": "380490",
    "end": "382410"
  },
  {
    "text": "analogue that does something kind of like a NOT.",
    "start": "382410",
    "end": "384370"
  },
  {
    "text": "I suspect the real cause of confusion originates not from a lack of low-level detail,",
    "start": "384990",
    "end": "389720"
  },
  {
    "text": "but from how I had framed the entire setup.",
    "start": "389721",
    "end": "392170"
  },
  {
    "text": "I opened that video by having you imagine that there was some mystery number that",
    "start": "392510",
    "end": "396363"
  },
  {
    "text": "we're searching for, and as one commenter helpfully pointed out,",
    "start": "396363",
    "end": "399455"
  },
  {
    "text": "this made it seem like the computer kind of knows the answer ahead of time,",
    "start": "399455",
    "end": "403069"
  },
  {
    "text": "it's just hiding it from us.",
    "start": "403070",
    "end": "404450"
  },
  {
    "text": "And this is almost certainly exacerbated by me briefly flashing",
    "start": "404690",
    "end": "407572"
  },
  {
    "text": "an example function that just checks if the input is 12,",
    "start": "407572",
    "end": "410179"
  },
  {
    "text": "and saying that we were going to treat the function as a black box.",
    "start": "410179",
    "end": "413289"
  },
  {
    "text": "That's on me.",
    "start": "413630",
    "end": "414250"
  },
  {
    "text": "That's a misleading way to open things.",
    "start": "414410",
    "end": "416010"
  },
  {
    "text": "What I wanted to foreshadow is how, with Grover's algorithm,",
    "start": "416010",
    "end": "419223"
  },
  {
    "text": "the only way you use the new quantum function is by trying it out on inputs,",
    "start": "419223",
    "end": "423345"
  },
  {
    "text": "as opposed to maybe like reverse engineering it.",
    "start": "423346",
    "end": "425970"
  },
  {
    "text": "So in that sense, it's treated as a black box.",
    "start": "426290",
    "end": "428750"
  },
  {
    "text": "But to be clear, in order to translate the classical verifier into the quantum version,",
    "start": "429170",
    "end": "433394"
  },
  {
    "text": "you absolutely need to get into the guts of the function.",
    "start": "433394",
    "end": "436210"
  },
  {
    "text": "And if this is going to be a compelling example,",
    "start": "436530",
    "end": "438724"
  },
  {
    "text": "it would be very silly if the only thing the function did was just check if the",
    "start": "438724",
    "end": "442381"
  },
  {
    "text": "input equals some hidden number.",
    "start": "442381",
    "end": "443890"
  },
  {
    "text": "The Sudoku example is much better, and a cryptographic",
    "start": "443890",
    "end": "447162"
  },
  {
    "text": "hash like SHA-256 would be much better still.",
    "start": "447162",
    "end": "449949"
  },
  {
    "text": "In these contexts, there is one value that will trigger the function,",
    "start": "450290",
    "end": "453466"
  },
  {
    "text": "and we don't know what it is, but the computer also doesn't know what it is.",
    "start": "453466",
    "end": "457010"
  },
  {
    "text": "It's not like the key value is just hiding in the source code.",
    "start": "457230",
    "end": "460130"
  },
  {
    "text": "Whether we're up here in the classical setting,",
    "start": "460390",
    "end": "462838"
  },
  {
    "text": "where triggering the function means returning true, or down in the quantum setting,",
    "start": "462838",
    "end": "467213"
  },
  {
    "text": "where triggering the function means multiplying by negative one,",
    "start": "467213",
    "end": "470598"
  },
  {
    "text": "which specific key input does this is a difficult to find and emergent",
    "start": "470598",
    "end": "474296"
  },
  {
    "text": "property of those logic gates.",
    "start": "474296",
    "end": "475910"
  },
  {
    "text": "It's not something that's baked in ahead of time.",
    "start": "476270",
    "end": "478330"
  },
  {
    "text": "The other potential source of confusion, I suspect,",
    "start": "478730",
    "end": "481480"
  },
  {
    "text": "is that I didn't appropriately emphasize the idea of linearity.",
    "start": "481480",
    "end": "484930"
  },
  {
    "text": "In fact, this is a central enough feature of quantum computing and quantum mechanics that",
    "start": "485310",
    "end": "489596"
  },
  {
    "text": "half of my reason for making this whole follow-up video is as an excuse to talk about it.",
    "start": "489596",
    "end": "493930"
  },
  {
    "text": "So most vectors don't look like a pure basis direction,",
    "start": "494310",
    "end": "497184"
  },
  {
    "text": "they look like some weighted sum of all the different basis vectors.",
    "start": "497184",
    "end": "500789"
  },
  {
    "text": "One way you can represent this is with a column vector,",
    "start": "501310",
    "end": "504033"
  },
  {
    "text": "where we think of each component as being associated with one of the possible bitstrings.",
    "start": "504033",
    "end": "508490"
  },
  {
    "text": "The more common convention among physicists is to write general vectors as an",
    "start": "508910",
    "end": "513023"
  },
  {
    "text": "explicit weighted sum of all the basis directions, each one represented with a ket.",
    "start": "513023",
    "end": "517510"
  },
  {
    "text": "When the state vector for a computer looks like this, you say that it's in superposition,",
    "start": "517970",
    "end": "522716"
  },
  {
    "text": "meaning it has some non-zero component associated with multiple distinct bitstrings.",
    "start": "522717",
    "end": "527250"
  },
  {
    "text": "It's a lot like saying if someone is walking northeast,",
    "start": "527810",
    "end": "530686"
  },
  {
    "text": "their velocity is a superposition of north and east,",
    "start": "530686",
    "end": "533457"
  },
  {
    "text": "they're travelling both directions at the same time.",
    "start": "533458",
    "end": "536230"
  },
  {
    "text": "A core idea from the last video is that you never actually see",
    "start": "536650",
    "end": "539780"
  },
  {
    "text": "the coordinates of a state vector in superposition like this.",
    "start": "539780",
    "end": "542910"
  },
  {
    "text": "When you read out from the computer, all you see is one of the bitstrings at random,",
    "start": "543250",
    "end": "548002"
  },
  {
    "text": "and the probability of seeing it is equal to the square of the magnitude",
    "start": "548002",
    "end": "552133"
  },
  {
    "text": "of the component of the state vector associated with that value.",
    "start": "552133",
    "end": "555810"
  },
  {
    "text": "I'm saying magnitude here with the absolute value signs, because in general,",
    "start": "555810",
    "end": "559708"
  },
  {
    "text": "these components can be complex numbers, but for simplicity,",
    "start": "559708",
    "end": "562836"
  },
  {
    "text": "I'm only going to be showing real values.",
    "start": "562836",
    "end": "564990"
  },
  {
    "text": "When I say that operations in quantum computers are linear,",
    "start": "565790",
    "end": "569141"
  },
  {
    "text": "what I mean is that if you pass in one of these weighted sums of the",
    "start": "569141",
    "end": "573060"
  },
  {
    "text": "different basis directions, that is to say, a superposition,",
    "start": "573060",
    "end": "576524"
  },
  {
    "text": "then the output looks like the same weighted sum,",
    "start": "576524",
    "end": "579364"
  },
  {
    "text": "but of the transformed versions of each vector.",
    "start": "579364",
    "end": "582090"
  },
  {
    "text": "So here's a very small example.",
    "start": "582570",
    "end": "584130"
  },
  {
    "text": "On a single qubit, there's an operation that we call a z-gate.",
    "start": "584490",
    "end": "587670"
  },
  {
    "text": "What it does is it leaves the 0 direction unchanged,",
    "start": "588170",
    "end": "591346"
  },
  {
    "text": "but it multiplies that vertical 1 direction by negative 1.",
    "start": "591346",
    "end": "594950"
  },
  {
    "text": "These are only two out of the infinitely many possible state vectors,",
    "start": "595490",
    "end": "598571"
  },
  {
    "text": "but they're all you need to know.",
    "start": "598572",
    "end": "600090"
  },
  {
    "text": "If you pass in a superposition of those two, something that has a",
    "start": "600570",
    "end": "604015"
  },
  {
    "text": "little bit of 0 plus a little bit of 1, what you do is look at what",
    "start": "604015",
    "end": "607620"
  },
  {
    "text": "the z-gate does to each part separately, and then add those together.",
    "start": "607620",
    "end": "611330"
  },
  {
    "text": "Again, with the same components.",
    "start": "611330",
    "end": "612890"
  },
  {
    "text": "In this case, that means flipping the sign associated with the 1 component.",
    "start": "613410",
    "end": "617290"
  },
  {
    "text": "Geometrically, when you draw this vector in a 2D space,",
    "start": "617730",
    "end": "620850"
  },
  {
    "text": "the action of a z-gate looks like flipping around the x-axis.",
    "start": "620851",
    "end": "624370"
  },
  {
    "text": "The z-gate is simple enough that just by looking at the definition,",
    "start": "624890",
    "end": "628062"
  },
  {
    "text": "you can clearly see which direction gets flipped.",
    "start": "628062",
    "end": "630430"
  },
  {
    "text": "But keep in mind, for more complicated functions,",
    "start": "630950",
    "end": "633821"
  },
  {
    "text": "the definition alone might not so easily reveal how it behaves.",
    "start": "633821",
    "end": "637570"
  },
  {
    "text": "Take a look back at the Sudoku verification function and its translation onto a quantum",
    "start": "638190",
    "end": "643201"
  },
  {
    "text": "computer, and then say that the state of your computer is not one of those clean basis",
    "start": "643201",
    "end": "648211"
  },
  {
    "text": "directions, but it is a combination of all the basis vectors,",
    "start": "648211",
    "end": "651782"
  },
  {
    "text": "a superposition of every possible bit string in this context representing every possible",
    "start": "651782",
    "end": "656907"
  },
  {
    "text": "solution to the Sudoku.",
    "start": "656908",
    "end": "658290"
  },
  {
    "text": "To figure out what our verifier does to this new vector,",
    "start": "658890",
    "end": "662116"
  },
  {
    "text": "what you do is look at what it would do to each basis separately,",
    "start": "662116",
    "end": "665918"
  },
  {
    "text": "and then the output is going to be the same scaled sum of the result.",
    "start": "665918",
    "end": "669950"
  },
  {
    "text": "In this case, most parts of that sum stay unchanged, but one of them,",
    "start": "670530",
    "end": "674155"
  },
  {
    "text": "the one that's associated with the key input that represents a Sudoku solution,",
    "start": "674155",
    "end": "678358"
  },
  {
    "text": "that part is going to have it sign flipped.",
    "start": "678358",
    "end": "680670"
  },
  {
    "text": "When you do this, it's very tempting to look at it and say that the function is acting",
    "start": "681250",
    "end": "685411"
  },
  {
    "text": "on every possible basis vector at once in parallel, and then adding the results.",
    "start": "685411",
    "end": "689330"
  },
  {
    "text": "Now that might be true, but I invite you to reflect on",
    "start": "689710",
    "end": "692346"
  },
  {
    "text": "whether that's necessarily a fair way to summarize it.",
    "start": "692346",
    "end": "695030"
  },
  {
    "text": "As an analogy, if a hiker is walking northeast,",
    "start": "695290",
    "end": "697995"
  },
  {
    "text": "and you tell him to rotate 90 degrees, that rotation is a linear operation.",
    "start": "697995",
    "end": "702370"
  },
  {
    "text": "In other words, the final direction is the same as what you would get by rotating the",
    "start": "702730",
    "end": "707615"
  },
  {
    "text": "north vector 90 degrees, rotating the east vector 90 degrees, and adding the two results.",
    "start": "707616",
    "end": "712790"
  },
  {
    "text": "But that doesn't mean that you have to perform two",
    "start": "713210",
    "end": "715623"
  },
  {
    "text": "separate rotations in parallel in order to move the hiker.",
    "start": "715623",
    "end": "718470"
  },
  {
    "text": "The linearity is a property of the transformation,",
    "start": "718770",
    "end": "721506"
  },
  {
    "text": "it's not necessarily a set of instructions on how to do it.",
    "start": "721506",
    "end": "724790"
  },
  {
    "text": "It's very similar over here.",
    "start": "725310",
    "end": "726529"
  },
  {
    "text": "The effect of the quantum translation for our verifier looks like",
    "start": "727010",
    "end": "730545"
  },
  {
    "text": "adding together what its effect would be on all of the basis vectors,",
    "start": "730545",
    "end": "734351"
  },
  {
    "text": "but I will leave it to your interpretation whether this means that",
    "start": "734351",
    "end": "737995"
  },
  {
    "text": "it is necessarily acting on all 2 to the k possible bitstrings at once.",
    "start": "737995",
    "end": "741910"
  },
  {
    "text": "Here, I've been writing the vector the physicist way,",
    "start": "742370",
    "end": "745240"
  },
  {
    "text": "but if I write it with a column vector instead,",
    "start": "745241",
    "end": "747840"
  },
  {
    "text": "what this operation looks like is taking one component of that vector",
    "start": "747840",
    "end": "751631"
  },
  {
    "text": "and multiplying it by negative 1, specifically whichever component",
    "start": "751631",
    "end": "755260"
  },
  {
    "text": "corresponds to the sudoku solution.",
    "start": "755260",
    "end": "757210"
  },
  {
    "text": "So stepping back, hopefully this helps clear up",
    "start": "758130",
    "end": "760475"
  },
  {
    "text": "some of the confusion there was in that last video.",
    "start": "760475",
    "end": "763069"
  },
  {
    "text": "The starting point of Grover's algorithm is to assume that you're given a function",
    "start": "763490",
    "end": "767937"
  },
  {
    "text": "that flips one component of a vector like this, though you don't know which one.",
    "start": "767937",
    "end": "772330"
  },
  {
    "text": "The puzzle is to somehow figure out which direction is getting flipped,",
    "start": "772630",
    "end": "776640"
  },
  {
    "text": "where all you're allowed to do is apply this function to some well-chosen set of inputs,",
    "start": "776640",
    "end": "781666"
  },
  {
    "text": "and in Grover's case, it involves interleaving it with a certain other",
    "start": "781666",
    "end": "785676"
  },
  {
    "text": "operation in the toolkit of quantum computing.",
    "start": "785676",
    "end": "788330"
  },
  {
    "text": "I get it, that is a really weird place to start from.",
    "start": "788750",
    "end": "791370"
  },
  {
    "text": "And it doesn't help that this is a famously confusing topic.",
    "start": "791570",
    "end": "794370"
  },
  {
    "text": "If you find it weird to work with a state vector whose components",
    "start": "794570",
    "end": "797932"
  },
  {
    "text": "you never actually observe and which instead acts like a kind",
    "start": "797932",
    "end": "801139"
  },
  {
    "text": "of square root of a probability distribution, you're not alone.",
    "start": "801139",
    "end": "804449"
  },
  {
    "text": "Everyone finds that very weird.",
    "start": "804450",
    "end": "806490"
  },
  {
    "text": "At this point I genuinely can't tell if I'm overexplaining things",
    "start": "806990",
    "end": "809967"
  },
  {
    "text": "or still under-explaining them, but there is one final aspect of",
    "start": "809967",
    "end": "812944"
  },
  {
    "text": "the explanation from last time that may have added to this confusion.",
    "start": "812944",
    "end": "816149"
  },
  {
    "text": "When we visualized the algorithm, we chose to view everything on a",
    "start": "816630",
    "end": "820284"
  },
  {
    "text": "certain two-dimensional slice of the enormous n-dimensional vector",
    "start": "820284",
    "end": "823993"
  },
  {
    "text": "space where all these state vectors live, and this slice, by definition,",
    "start": "823993",
    "end": "828034"
  },
  {
    "text": "included the axis associated with that mystery value we're searching for.",
    "start": "828034",
    "end": "832130"
  },
  {
    "text": "Now, in case that left anyone with the impression that part of the",
    "start": "832130",
    "end": "835706"
  },
  {
    "text": "algorithm was to choose that slice, let me be very clear, it's not.",
    "start": "835706",
    "end": "839390"
  },
  {
    "text": "The algorithm is just doing what it's going to do.",
    "start": "839690",
    "end": "841990"
  },
  {
    "text": "It interleaves two operations that go back and forth.",
    "start": "842210",
    "end": "844610"
  },
  {
    "text": "It doesn't have a care in the world how you and I choose to visualize it.",
    "start": "844890",
    "end": "848230"
  },
  {
    "text": "The fact that the state vector stays confined to this particular plane,",
    "start": "848470",
    "end": "852717"
  },
  {
    "text": "that's a happy emergent property of the algorithm.",
    "start": "852718",
    "end": "855770"
  },
  {
    "text": "It is in no way part of the instruction set that we're giving to the computer.",
    "start": "856090",
    "end": "859610"
  },
  {
    "text": "One very final thing that I do think deserves some added reflection is how",
    "start": "860350",
    "end": "863979"
  },
  {
    "text": "Grover's algorithm, while very thought-provoking, is maybe just not really useful.",
    "start": "863979",
    "end": "868050"
  },
  {
    "text": "Take the Sudoku example.",
    "start": "868550",
    "end": "869570"
  },
  {
    "text": "The number of possible solutions will depend on how many of those 81",
    "start": "869910",
    "end": "873576"
  },
  {
    "text": "squares start off blank, but let's call it something like 9 to the power 60.",
    "start": "873577",
    "end": "877730"
  },
  {
    "text": "If you tried to use your classical verifier function to find a solution by brute force,",
    "start": "878190",
    "end": "883034"
  },
  {
    "text": "there are way, way too many possibilities to check.",
    "start": "883034",
    "end": "885930"
  },
  {
    "text": "But even if you had a fully functioning quantum computer,",
    "start": "885930",
    "end": "888933"
  },
  {
    "text": "sitting on your desk right now with ample qubits and no issues maintaining",
    "start": "888933",
    "end": "892884"
  },
  {
    "text": "coherence and all that, using Grover's algorithm,",
    "start": "892884",
    "end": "895517"
  },
  {
    "text": "this would still take around 9 to the 30 steps, which is a much smaller number,",
    "start": "895518",
    "end": "899733"
  },
  {
    "text": "but it's still enormous.",
    "start": "899733",
    "end": "901050"
  },
  {
    "text": "In this case, there's obviously many smarter ways to solve a Sudoku than",
    "start": "901530",
    "end": "905470"
  },
  {
    "text": "a brute force search, but if you take something like SHA-256,",
    "start": "905470",
    "end": "908862"
  },
  {
    "text": "inverting it by brute force takes 2 to the 256 steps on a classical computer.",
    "start": "908862",
    "end": "913130"
  },
  {
    "text": "Using Grover's algorithm, that becomes 2 to the 128,",
    "start": "913510",
    "end": "916406"
  },
  {
    "text": "at least up to that pi-fourths constant that we saw last video.",
    "start": "916406",
    "end": "919970"
  },
  {
    "text": "So even in some sci-fi future where quantum computers are as far along as",
    "start": "920450",
    "end": "924296"
  },
  {
    "text": "today's classical computers, that is still an infeasibly large number of steps.",
    "start": "924296",
    "end": "928510"
  },
  {
    "text": "The way some people write about quantum computing,",
    "start": "929050",
    "end": "931075"
  },
  {
    "text": "it makes it sound like the moment they arrive,",
    "start": "931075",
    "end": "932978"
  },
  {
    "text": "everything is going to change and all of cryptography will break.",
    "start": "932978",
    "end": "935650"
  },
  {
    "text": "And it's true that there are specific problems that have exponential speedups,",
    "start": "936110",
    "end": "940066"
  },
  {
    "text": "and especially with RSA, some of those are relevant to cryptography,",
    "start": "940067",
    "end": "943567"
  },
  {
    "text": "but that's not true in general.",
    "start": "943567",
    "end": "945190"
  },
  {
    "text": "This quadratic speedup is much more representative of what you get for most problems.",
    "start": "945450",
    "end": "949490"
  },
  {
    "text": "It's really cool, and the math is just beautiful,",
    "start": "949730",
    "end": "952032"
  },
  {
    "text": "and there continues to be lots of interesting research in the field,",
    "start": "952032",
    "end": "955273"
  },
  {
    "text": "but one of my hopes with this whole project is that you now have enough",
    "start": "955273",
    "end": "958655"
  },
  {
    "text": "background to maybe see through some of the hyperbole that certain",
    "start": "958655",
    "end": "961803"
  },
  {
    "text": "outlets are so fond of.",
    "start": "961803",
    "end": "962930"
  },
  {
    "text": "Thank you.",
    "start": "982730",
    "end": "982810"
  }
]