[
  {
    "start": "0",
    "end": "363000"
  },
  {
    "text": "A lot of pop science outlets give a certain summary of quantum computing that I can almost guarantee leads to misconceptions.",
    "start": "0",
    "end": "5960"
  },
  {
    "text": "The summary goes something like this. In a classical computer, data is stored with bits, some sequence of ones and zeros,",
    "start": "6420",
    "end": "12997"
  },
  {
    "text": "but in a quantum computer, you are able to represent every possible sequence of bits of some fixed length all at once in one big thing known as a superposition.",
    "start": "12998",
    "end": "21840"
  },
  {
    "text": "And sometimes the implication of these summaries is that quantum computers can be faster by basically doing whatever a classical computer would do,",
    "start": "22280",
    "end": "29892"
  },
  {
    "text": "but to all of these sequences in parallel. Now, this does gesture at something that's kind of true,",
    "start": "29892",
    "end": "35950"
  },
  {
    "text": "but let me see if I can prove to you why I think this leads to misconceptions, and I'll prove it using a quiz.",
    "start": "35950",
    "end": "41360"
  },
  {
    "text": "To set it up, I want you to imagine that I have a mystery function, and I tell you that there's a certain secret number among all the numbers",
    "start": "41780",
    "end": "49092"
  },
  {
    "text": "from 0 up to n-1, where if you plug that value into my function, it returns true, but if you were to plug in any other value, it returns false.",
    "start": "49092",
    "end": "56560"
  },
  {
    "text": "And let's say you can't look at the innards of the function to learn anything about it, the only thing you're allowed to do with it is just try it out on numbers.",
    "start": "57080",
    "end": "62880"
  },
  {
    "text": "The warmup question is, how many times, on average, would you have to apply this mystery function in order to find the secret key?",
    "start": "63380",
    "end": "70000"
  },
  {
    "text": "Well, if the setup was in an ordinary classical computer, there's really nothing better that you can do than guess and check.",
    "start": "71140",
    "end": "77320"
  },
  {
    "text": "You go through all the numbers, and maybe you're lucky and find it early, maybe you're unlucky and it doesn't come up until later, but on average,",
    "start": "77800",
    "end": "85029"
  },
  {
    "text": "with a list of n possibilities, it takes one half of n attempts to find the key. Now, in computer science, people care about how runtimes scale.",
    "start": "85029",
    "end": "92580"
  },
  {
    "text": "If you had a list ten times as big, how much longer would it take? And computer scientists have a way of categorizing runtimes.",
    "start": "92960",
    "end": "99160"
  },
  {
    "text": "They would call this one O of n, where that big O communicates that maybe there's some constants like the one half, or maybe some factors that grow slower than n,",
    "start": "99320",
    "end": "108302"
  },
  {
    "text": "but the factor of n is what explains how quickly it scales as n grows. If n goes up by a factor of ten, the runtime also goes up by a factor of ten.",
    "start": "108303",
    "end": "116220"
  },
  {
    "text": "Now, here's your quiz. For the equivalent of this setup, but in a quantum computer, what's the best runtime for finding the secret key?",
    "start": "116700",
    "end": "124200"
  },
  {
    "text": "I've asked a variant of this quiz many times in a certain lecture that I've given over the years, and the options I typically offer are O of square root of n,",
    "start": "124600",
    "end": "132877"
  },
  {
    "text": "O of log of n, O of log of log of n, and O of one, where here O of one would mean that the runtime is just some constant that",
    "start": "132878",
    "end": "139478"
  },
  {
    "text": "doesn't actually grow as n grows. Now, to be fair, I have not defined quantum computing.",
    "start": "139479",
    "end": "144100"
  },
  {
    "text": "In fact, doing so from the ground up is going to be the goal of this video. So without showing you what this mystery function would look like in that setting,",
    "start": "144500",
    "end": "151536"
  },
  {
    "text": "it's kind of an incoherent question. But it's not really meant as a quiz that I'm grading you on or anything, it's just meant to be a gut check of intuition before we dive in.",
    "start": "151536",
    "end": "159140"
  },
  {
    "text": "In principle, it's the same task. Finding a needle in a haystack, where you want to discover",
    "start": "159360",
    "end": "164640"
  },
  {
    "text": "which value out of many options uniquely triggers some function. I asked this as a YouTube post last month, which 100,000 of you kindly answered.",
    "start": "164641",
    "end": "172560"
  },
  {
    "text": "The most recent time I gave it live was to a group of Stanford students. I also posed it to those attending the International Math Olympiad.",
    "start": "172800",
    "end": "178780"
  },
  {
    "text": "And in all of these and many other instances, the answer distribution looks very similar. The most common answer is always O of one.",
    "start": "179020",
    "end": "186379"
  },
  {
    "text": "And this is wrong, and I'm pretty sure that it stems from that misleading summary. That summary implies that you would put all of the n values that you need",
    "start": "186660",
    "end": "194311"
  },
  {
    "text": "to search into this mysterious superposition, and then you would process them all in parallel, and then somehow the answer would be revealed.",
    "start": "194311",
    "end": "201180"
  },
  {
    "text": "The second most common answer is typically O of log of n, and this is also wrong. You would call this an exponential speedup.",
    "start": "201800",
    "end": "208420"
  },
  {
    "text": "For example, if you increase the size of the list by factors of 10, an O of log n runtime would only tick up by the same additive increment each time.",
    "start": "208720",
    "end": "217220"
  },
  {
    "text": "Now this wrong answer I suspect stems from a misconception about how much better quantum computers are in general.",
    "start": "217880",
    "end": "223800"
  },
  {
    "text": "There are very certain special problems where you can achieve an exponential speedup. The most famous case is probably Shor's algorithm for factoring large numbers.",
    "start": "223800",
    "end": "231620"
  },
  {
    "text": "But most problems are not like that. In this case, the correct answer is O of square root of n.",
    "start": "232020",
    "end": "236880"
  },
  {
    "text": "And this is a lot more representative of the typical speedup that you could get with a quantum computer. In 1994, it was proven that a quantum computer could not",
    "start": "237260",
    "end": "245676"
  },
  {
    "text": "possibly do any better than O of square root of n on this task. And then two years later, Lav Grover found a specific",
    "start": "245676",
    "end": "252484"
  },
  {
    "text": "procedure that actually achieves that runtime. So searching through a bag of a million options takes on the order of a thousand steps.",
    "start": "252484",
    "end": "258799"
  },
  {
    "text": "A bag of a trillion options takes on the order of a million. This big O actually hides something that's pretty fun,",
    "start": "259160",
    "end": "264920"
  },
  {
    "text": "which is the constant of pi fourths in the precise runtime, and that pi has its own whole fun story to tell, which I'll get to later.",
    "start": "264920",
    "end": "271620"
  },
  {
    "text": "You might think that this puzzle with a mystery function triggered by one specific value is super contrived.",
    "start": "272480",
    "end": "278120"
  },
  {
    "text": "But I want you to keep in mind this is meant to be a generic stand-in for any problem where you know how to quickly verify a solution,",
    "start": "278460",
    "end": "285655"
  },
  {
    "text": "even if you don't know how to find that solution in the first place. This describes an enormous class of problems in computer science known as NP problems.",
    "start": "285655",
    "end": "294540"
  },
  {
    "text": "So while a square root speedup is frankly not as earth-shattering as an exponential speedup would be, and while big O runtimes are often a lot less important than other",
    "start": "295160",
    "end": "303647"
  },
  {
    "text": "practical considerations, it is thought-provoking that something like Grover's algorithm is even possible at all, providing this catch-all method for speeding up any NP problem.",
    "start": "303647",
    "end": "312640"
  },
  {
    "text": "My goal with this lesson is to build up to a step-by-step walkthrough of how that algorithm works.",
    "start": "313760",
    "end": "318659"
  },
  {
    "text": "It's actually very geometric and very beautiful. But we need to build up a lot of background in order to get there.",
    "start": "318940",
    "end": "323880"
  },
  {
    "text": "The first two-thirds or so of the video will be spent building up the fundamentals of quantum computing, not with a set of analogies,",
    "start": "324140",
    "end": "330514"
  },
  {
    "text": "which as we've seen can lead to misconceptions, but as a piece of math, which I think offers you a pair of glasses through which you can see a much more",
    "start": "330514",
    "end": "337847"
  },
  {
    "text": "honest depiction of the whole field. This is one of those topics that has a few premises that are just going to feel a",
    "start": "337847",
    "end": "343506"
  },
  {
    "text": "little bit strange at first, and I should warn you they take a little getting used to. My current plan is to follow this lesson with another one",
    "start": "343506",
    "end": "350051"
  },
  {
    "text": "about some of the underlying physics, which hopefully can help motivate a few of the odd-looking rules that you'll see here.",
    "start": "350051",
    "end": "355600"
  },
  {
    "text": "But today the goal is to provide the minimal viable path to seeing a genuine, bona fide quantum algorithm.",
    "start": "356020",
    "end": "361840"
  },
  {
    "start": "363000",
    "end": "720000"
  },
  {
    "text": "Let me pull up again that contrast between classical computing and quantum computing, and let's see if we can build up something of a more representative mental model.",
    "start": "364440",
    "end": "371920"
  },
  {
    "text": "It is true of course that data in a classical computer looks like a series of ones and zeros, and at a higher layer of abstraction that might represent",
    "start": "372240",
    "end": "379831"
  },
  {
    "text": "an actual data type, like an integer or some text, and at a lower layer of abstraction, those ones and zeros represent some actual thing in the physical world,",
    "start": "379831",
    "end": "387875"
  },
  {
    "text": "like voltages across a capacitor or something like that. These same layers of abstraction provide a pretty",
    "start": "387875",
    "end": "393396"
  },
  {
    "text": "helpful framing when we discuss quantum computing. Over there, there's also some underlying physical measurement,",
    "start": "393396",
    "end": "399692"
  },
  {
    "text": "and again you represent the outcome of that measurement with some sequence of ones and zeros, and again this might implement some actual data type that you care about,",
    "start": "399692",
    "end": "408072"
  },
  {
    "text": "like a number. This symbol that I'm showing by the way is called a ket. I'll explain it properly in a couple minutes, but for right now just",
    "start": "408072",
    "end": "415065"
  },
  {
    "text": "think of it as conveying that something is coming from a quantum computer. Let's start things off with a description of quantum computing through the lens of that",
    "start": "415066",
    "end": "422344"
  },
  {
    "text": "middle layer of abstraction, meaning we're going to postpone all of the underlying physics for now, which is a little bit like teaching computer science without discussing",
    "start": "422345",
    "end": "430222"
  },
  {
    "text": "hardware. In a classical computer, there's no need to distinguish between the state of memory and what you read out from the memory,",
    "start": "430222",
    "end": "437329"
  },
  {
    "text": "both of them just look like the same sequence of bits, but it's a very different story in a quantum computer.",
    "start": "437329",
    "end": "442440"
  },
  {
    "text": "Our main job today is going to be to understand something called the state vector, which is continuous, this is the thing the computer actually operates on,",
    "start": "442880",
    "end": "450319"
  },
  {
    "text": "but it has a very unusual relationship with the values that you actually read out, those discrete sequences of bits.",
    "start": "450320",
    "end": "455900"
  },
  {
    "text": "Before I can define this state vector, you need to know one other key difference from classical computers, which is that this value that you read out,",
    "start": "456240",
    "end": "463293"
  },
  {
    "text": "which again just looks like some sequence of ones and zeros, is random. Or to be a little more accurate, I should say it's typically random.",
    "start": "463294",
    "end": "470180"
  },
  {
    "text": "The way you can think about this is that if you run a program on a quantum computer, that program doesn't necessarily determine a particular output,",
    "start": "470540",
    "end": "478412"
  },
  {
    "text": "instead it determines a probability distribution across all possible outputs. So for the example I'm showing on screen, this would be a very small quantum",
    "start": "478412",
    "end": "487109"
  },
  {
    "text": "computer where the thing that you read out has four bits, meaning that there are 2 to the 4, or 16 possible outputs,",
    "start": "487109",
    "end": "493281"
  },
  {
    "text": "and the specific program you run determines some kind of distribution across all those possible outputs.",
    "start": "493281",
    "end": "498819"
  },
  {
    "text": "Some programs might manage to concentrate more probability on just one of those outputs, but other programs might give a more even spread across everything.",
    "start": "499260",
    "end": "506660"
  },
  {
    "text": "This example, by the way, where the thing you read out has four bits, would be called a 4-qubit quantum computer, and more generally,",
    "start": "507340",
    "end": "514521"
  },
  {
    "text": "if you have a k-qubit quantum computer, that means there are 2 to the k distinct possible outputs, and any program gives a distribution across all of those,",
    "start": "514521",
    "end": "522998"
  },
  {
    "text": "and the thing that you read out has k distinct bits. That word qubit, by the way, is another thing I'm",
    "start": "522998",
    "end": "528660"
  },
  {
    "text": "going to define more precisely in just a minute. I do want to emphasize that this distribution is implicit.",
    "start": "528660",
    "end": "533920"
  },
  {
    "text": "You never actually see it directly, you instead infer what it must be based on the program that you run.",
    "start": "534240",
    "end": "539380"
  },
  {
    "text": "You never see all bit strings coexisting at once in some kind of way. You just see one of them, drawn at random, according to this distribution.",
    "start": "539920",
    "end": "547640"
  },
  {
    "text": "At a lower layer of abstraction, what I'm describing as reading out from memory looks like a physical measurement, and the randomness stems from the laws of quantum mechanics.",
    "start": "548300",
    "end": "557000"
  },
  {
    "text": "If you're curious about the physics, that lower layer of abstraction, that's exactly what the next video is for.",
    "start": "557000",
    "end": "562140"
  },
  {
    "text": "Up in this layer, you just think about probability distributions over all possible bit strings.",
    "start": "562520",
    "end": "567120"
  },
  {
    "text": "One more funny rule here, which does bubble up from the underlying quantum mechanics, is that after you read out from memory, and you see some particular value,",
    "start": "567860",
    "end": "576003"
  },
  {
    "text": "the underlying state of the computer changes such that now all of the probability is concentrated on whatever value you read out.",
    "start": "576003",
    "end": "582620"
  },
  {
    "text": "So if you kept reading out from memory over and over, you would just keep seeing that same value. You might imagine these programs as creating a very delicate and",
    "start": "582860",
    "end": "590490"
  },
  {
    "text": "sensitive probability distribution, where the moment you look at it, sampling from that distribution, the whole thing collapses to one value.",
    "start": "590490",
    "end": "597300"
  },
  {
    "text": "Now you might be wondering, where does this distribution come from? This is both the most important and the most confusing part.",
    "start": "598060",
    "end": "603600"
  },
  {
    "text": "You think of the state of the computer as being described by a big vector. Right now when I say the word vector, you can just think big list of numbers,",
    "start": "603960",
    "end": "611783"
  },
  {
    "text": "although as you'll see later on, it can be helpful to think of this as a direction in some super high dimensional space.",
    "start": "611783",
    "end": "617100"
  },
  {
    "text": "Each component of this vector corresponds to one of the possible values you might read out, one of those distinct bit strings.",
    "start": "618420",
    "end": "625440"
  },
  {
    "text": "So in this example where what you read out has 4 bits, the state vector would have 16 distinct components.",
    "start": "625880",
    "end": "631360"
  },
  {
    "text": "The state vector is not the same thing as the probability distribution over all possible outputs, but it is very closely related.",
    "start": "631900",
    "end": "638020"
  },
  {
    "text": "The fundamental rule, which I admit is going to look very strange at first, is that if you take the magnitude of each component in that state vector and you square",
    "start": "638380",
    "end": "646802"
  },
  {
    "text": "it, that gives you the probability of seeing the corresponding output, the corresponding bit string.",
    "start": "646802",
    "end": "652019"
  },
  {
    "text": "Let me just say up front, a lot of people learning quantum computing find this state vector a bit weird. What is it actually, and why are we squaring things to get probability?",
    "start": "652500",
    "end": "660380"
  },
  {
    "text": "As it is, for the sake of simplicity, there's a certain important detail that I'm neglecting until the end of the video here.",
    "start": "660860",
    "end": "666319"
  },
  {
    "text": "I just want to flag that for most people, this takes a little getting used to. And to be super clear on what I mean with the fundamental rule here,",
    "start": "666560",
    "end": "674204"
  },
  {
    "text": "let's suppose that after this program processes this vector, maybe the component of it associated with some specific bit string, like 0011,",
    "start": "674204",
    "end": "682653"
  },
  {
    "text": "happened to be 0.5. Then when you square that value, 0.5 squared is 0.25,",
    "start": "682653",
    "end": "687904"
  },
  {
    "text": "so the observable implication of this is that when you read out from memory,",
    "start": "687904",
    "end": "693315"
  },
  {
    "text": "you have a 25% chance of seeing that bit string, 0011. One thing I'll highlight is that it is perfectly valid for the values in this state",
    "start": "693315",
    "end": "701971"
  },
  {
    "text": "vector to be negative, and at first you might think that has no real impact, since flipping the sign doesn't change the square,",
    "start": "701971",
    "end": "708342"
  },
  {
    "text": "and therefore all the probabilities stay the same. It is true that the probabilities stay the same,",
    "start": "708342",
    "end": "713622"
  },
  {
    "text": "but we absolutely consider this to be a distinct state, and as you'll see, the idea of flipping signs plays a very central role in Grover's algorithm.",
    "start": "713622",
    "end": "720800"
  },
  {
    "start": "720000",
    "end": "952000"
  },
  {
    "text": "Here, this example with four qubits has kind of a lot on screen, with not a lot of visualization to back it up,",
    "start": "721940",
    "end": "727875"
  },
  {
    "text": "so let's scale things down to the smallest possible case where the computer has just two possible outputs, represented with a 0 and a 1.",
    "start": "727875",
    "end": "735199"
  },
  {
    "text": "In this simplest possible case, the state vector would only be two-dimensional, so we can actually represent it geometrically as an arrow inside a 2D space.",
    "start": "735980",
    "end": "744459"
  },
  {
    "text": "In this case, the x-coordinate corresponds to the outcome 0, in the sense that the square of that coordinate tells you the",
    "start": "744860",
    "end": "750897"
  },
  {
    "text": "probability that when you read out from the computer, you would read a 0. Maybe it's helpful if I add a little bar to show that probability.",
    "start": "750898",
    "end": "757740"
  },
  {
    "text": "You'll notice that as the vector points more in the horizontal direction, more of that probability mass is concentrated on the 0.",
    "start": "758260",
    "end": "764560"
  },
  {
    "text": "Similarly, the y-coordinate corresponds to a 1 in the same way. A more vertical state vector means you're more likely",
    "start": "765200",
    "end": "771395"
  },
  {
    "text": "to see a 1 when you read out from the computer. Now, notice, because the two probabilities should add up to 1, after all,",
    "start": "771395",
    "end": "778082"
  },
  {
    "text": "something is going to happen, x squared plus y squared should equal 1. Geometrically, this means that the state vector has a length of 1,",
    "start": "778083",
    "end": "785572"
  },
  {
    "text": "so you could think of it as being confined to a unit circle. More generally, the state vector for a quantum computer will always have a length of 1,",
    "start": "785572",
    "end": "794046"
  },
  {
    "text": "and you can think of it as living on some very high-dimensional unit sphere. This two-dimensional example has a special name, which I've already mentioned.",
    "start": "794046",
    "end": "801500"
  },
  {
    "text": "It's called a qubit, short for quantum bit. The analogy with a classical bit is that when you read out from the computer,",
    "start": "801720",
    "end": "808278"
  },
  {
    "text": "you see either a 0 or a 1, but other than that, it is a completely different animal. Mathematically, a qubit is a unit vector in a two-dimensional space,",
    "start": "808278",
    "end": "816384"
  },
  {
    "text": "together with a coordinate system where these two perpendicular x and y directions correspond to the two values that you might read out when you measure.",
    "start": "816384",
    "end": "824500"
  },
  {
    "text": "You should know there is that added bit of complexity that I'm postponing, but this is 90% of the right idea.",
    "start": "825420",
    "end": "830800"
  },
  {
    "text": "And again, you have this funny rule where when you measure the qubit, seeing either a 0 or a 1, the vector then collapses to fall onto that corresponding",
    "start": "831520",
    "end": "840308"
  },
  {
    "text": "direction. So unless something is done to prepare that qubit back into a diagonal direction,",
    "start": "840308",
    "end": "845624"
  },
  {
    "text": "any follow-on observations that you make are always going to show the same outcome.",
    "start": "845624",
    "end": "849900"
  },
  {
    "text": "It's very possible that at this point you're thinking something like, okay, grant, this is a super bizarre set of premises you're asking me to accept, and if so,",
    "start": "850820",
    "end": "858315"
  },
  {
    "text": "you are not alone. What I'm describing, as you can no doubt probably tell, are basically the postulates of quantum mechanics.",
    "start": "858315",
    "end": "864080"
  },
  {
    "text": "There are many systems throughout physics, like the spin of an electron or the polarization of a photon, that have this property,",
    "start": "864080",
    "end": "871071"
  },
  {
    "text": "where the outcome of a measurement is random, and our best laws of physics have us model the state of that system using a vector,",
    "start": "871072",
    "end": "878118"
  },
  {
    "text": "just like the one I'm describing here, where squaring the magnitudes of that vector's components give you the probabilities for seeing various possible outcomes.",
    "start": "878119",
    "end": "886900"
  },
  {
    "text": "That actually has a special name, it's called the Born rule. This idea of a qubit is basically meant to be an abstraction over many possible",
    "start": "887240",
    "end": "894111"
  },
  {
    "text": "systems like this, in just the same way that a bit is meant to be an abstraction over many possible physical systems that can toggle one of two directions.",
    "start": "894111",
    "end": "902860"
  },
  {
    "text": "The symbol I've been showing, by the way, is used throughout any subject with the word quantum in its name to refer to a unit vector in this state space.",
    "start": "903960",
    "end": "911940"
  },
  {
    "text": "What you put inside that ket is often going to give some kind of readable meaning for what that vector represents.",
    "start": "912520",
    "end": "918079"
  },
  {
    "text": "So in our example with a qubit, the unit vector to the right is often shown with a zero inside the ket, because if that's the state vector,",
    "start": "918080",
    "end": "925227"
  },
  {
    "text": "it means you deterministically read out a zero from the computer. Likewise, the unit vector in the vertical direction is",
    "start": "925227",
    "end": "931689"
  },
  {
    "text": "represented with a ket that has a one inside of it. And if you go on and read more about this, something that you'll very commonly",
    "start": "931689",
    "end": "938249"
  },
  {
    "text": "see is that instead of writing down a general qubit with a column vector, the way I've been showing you, a lot of people like to write it as an explicit",
    "start": "938249",
    "end": "945446"
  },
  {
    "text": "weighted sum of these two unit vectors in the two coordinate directions. That's a very physicist kind of convention.",
    "start": "945446",
    "end": "951160"
  },
  {
    "start": "952000",
    "end": "1118000"
  },
  {
    "text": "Now classical computing has this idea of logic gates, certain basic operations like AND, OR, and NOT that you can use to",
    "start": "952460",
    "end": "958818"
  },
  {
    "text": "process bits and that you can string together to create arbitrarily complicated functions.",
    "start": "958818",
    "end": "963640"
  },
  {
    "text": "Analogously we have what are called quantum gates, which are certain fundamental operations that you can apply to a qubit or to",
    "start": "964320",
    "end": "971582"
  },
  {
    "text": "a system of multiple qubits. And they always look like somehow flipping or rotating the state vector.",
    "start": "971582",
    "end": "977100"
  },
  {
    "text": "Now I'm not going to delve too deeply into the details of all the different quantum gates, but if you are curious, I'll show you an example of what one of them looks like.",
    "start": "977580",
    "end": "984300"
  },
  {
    "text": "Here's a very standard one known as a Hadamard gate. What it does is it maps the unit vector in that horizontal zero direction",
    "start": "984620",
    "end": "991839"
  },
  {
    "text": "into the diagonal northeast direction, and it maps the unit vector in the vertical one direction into that kind of diagonal southeast direction.",
    "start": "991839",
    "end": "1000100"
  },
  {
    "text": "You would very commonly use this to take a deterministic state, something that's either a zero or a one, and turn it into something with a 50-50 equal",
    "start": "1000420",
    "end": "1007912"
  },
  {
    "text": "balance, or vice versa, too. This is just one example, but there are a number of others forming the building blocks",
    "start": "1007912",
    "end": "1014201"
  },
  {
    "text": "for quantum computing, and the art of writing an algorithm in this setting is to somehow compose a bunch of different quantum gates together that will progressively manipulate",
    "start": "1014202",
    "end": "1023209"
  },
  {
    "text": "and flip and massage this vector until it points almost entirely in one particular coordinate direction, presumably one that actually answers a question you care about.",
    "start": "1023209",
    "end": "1031859"
  },
  {
    "text": "Now down with the simplest example of a qubit, you only have two coordinate directions to work with, so you would be constrained to answer simple yes-no questions.",
    "start": "1032920",
    "end": "1040160"
  },
  {
    "text": "And although I can't illustrate a geometric vector with more than three dimensions, in principle, a system with k qubits is going to have 2 to the k",
    "start": "1040500",
    "end": "1049062"
  },
  {
    "text": "distinct coordinate directions, one for each bit string. So if you can somehow manage to coerce this vector to point",
    "start": "1049062",
    "end": "1055802"
  },
  {
    "text": "along just one of those directions, you could potentially answer some more interesting question, carrying more information.",
    "start": "1055802",
    "end": "1062320"
  },
  {
    "text": "Maybe one of them represents a prime divisor in a very large number you're trying to factor, or maybe one of them represents",
    "start": "1062800",
    "end": "1068430"
  },
  {
    "text": "that secret key value from the opening puzzle of this video. Even though the potential power of quantum computers has a long tradition now of",
    "start": "1068430",
    "end": "1075905"
  },
  {
    "text": "being greatly exaggerated, insofar as there really is potentially more power there, one of the key reasons is that the size of the state vector grows exponentially.",
    "start": "1075905",
    "end": "1084660"
  },
  {
    "text": "As few as 100 qubits would already imply a mind-bogglingly massive state vector.",
    "start": "1085020",
    "end": "1090640"
  },
  {
    "text": "But the catch is that you have no direct access to the values inside this vector. It's effectively invisible to you.",
    "start": "1091140",
    "end": "1097140"
  },
  {
    "text": "The only way it can be useful is if you have a way to manipulate it in such a way that all of the probability, or at least most of it,",
    "start": "1097460",
    "end": "1104589"
  },
  {
    "text": "gets concentrated on one single component, and if that component corresponds to an answer to a question that you care about.",
    "start": "1104589",
    "end": "1111240"
  },
  {
    "text": "Grover's algorithm offers us a really great example to actually see how this looks, and it's high time that we get there.",
    "start": "1111760",
    "end": "1117700"
  },
  {
    "start": "1118000",
    "end": "1770000"
  },
  {
    "text": "Let me offer you a very high-level preview for how it looks. I promise I will explain all of this in more detail, but here's the bird's eye view.",
    "start": "1121300",
    "end": "1128160"
  },
  {
    "text": "It initializes this state vector in such a way that there's an equal balance of probability across all possible outcomes.",
    "start": "1128640",
    "end": "1135440"
  },
  {
    "text": "One of those outcomes is going to be the secret key that you're searching for, and the tool that you'll have available, which I promise to motivate later,",
    "start": "1135880",
    "end": "1143422"
  },
  {
    "text": "is to flip the sign of the state vector at that coordinate. This doesn't immediately affect the probabilities,",
    "start": "1143422",
    "end": "1149598"
  },
  {
    "text": "but when you interleave this with a certain other operation, and you kind of go back and forth between the two of these,",
    "start": "1149598",
    "end": "1155642"
  },
  {
    "text": "what happens is that the probability mass slowly starts to get concentrated over that secret key value, and at a certain point, almost all of it will be there,",
    "start": "1155642",
    "end": "1163635"
  },
  {
    "text": "so when you read out from the computer, you will almost certainly see the secret key you're looking for.",
    "start": "1163635",
    "end": "1168880"
  },
  {
    "text": "Okay, so that's the high level, but let's unpack it in some more detail. The first thing to address is this idea of flipping the",
    "start": "1169760",
    "end": "1175965"
  },
  {
    "text": "sign of the component associated with the secret key. That might feel a little bit weird. Why would we assume that that operation is available to us?",
    "start": "1175965",
    "end": "1183260"
  },
  {
    "text": "Backing up, remember that Grover's algorithm is meant to apply to any problem where you can verify a solution quickly, even if finding a solution in the first place is hard.",
    "start": "1183720",
    "end": "1192840"
  },
  {
    "text": "Examples here would include solving Sudokus, finding a valid coloring of a map where no two border regions share a color,",
    "start": "1193240",
    "end": "1199497"
  },
  {
    "text": "or countless tasks throughout cryptography, where security often depends on a certain value being hard to find, even though for pragmatism it has",
    "start": "1199497",
    "end": "1207047"
  },
  {
    "text": "to be easily verifiable. We began this video with a generic stand-in for all of these problems,",
    "start": "1207047",
    "end": "1212769"
  },
  {
    "text": "where you imagine some function that takes in any number from 0 to n-1 and returns true on one and only one of those.",
    "start": "1212769",
    "end": "1219460"
  },
  {
    "text": "In principle, we'll think of such a function as being built out of a bunch of classical logic gates. Those logic gates act on some binary representation of the inputs,",
    "start": "1219680",
    "end": "1228125"
  },
  {
    "text": "and the final output is either 0 or 1. Now here's the key point. Grover knew that given any ensemble of logic gates like this,",
    "start": "1228125",
    "end": "1235344"
  },
  {
    "text": "you can translate it into a system of quantum gates so that if in the classical case the",
    "start": "1235344",
    "end": "1240458"
  },
  {
    "text": "function takes in some binary input and returns a 1, for true, then in the quantum case the effect of all of these gates is to flip the sign of that",
    "start": "1240458",
    "end": "1249018"
  },
  {
    "text": "state, the state associated with the same bit string. Similarly, if in the classical case the function maps some binary input to 0,",
    "start": "1249018",
    "end": "1256675"
  },
  {
    "text": "for false, then in this quantum translation the effect on the corresponding state would be to leave it unchanged.",
    "start": "1256675",
    "end": "1263420"
  },
  {
    "text": "More generally, because all of these quantum operations are linear, if the state is a combination of multiple pure coordinate directions,",
    "start": "1263940",
    "end": "1270954"
  },
  {
    "text": "then the effect is to simply flip the sign for the component associated with whatever bit string triggers that classical function.",
    "start": "1270954",
    "end": "1277659"
  },
  {
    "text": "It means that if you have any NP problem, anything where you can quickly verify solutions, you're able to create an operation on a quantum computer that flips the",
    "start": "1278060",
    "end": "1287227"
  },
  {
    "text": "sign of a state vector at the position corresponding to a solution of that problem.",
    "start": "1287227",
    "end": "1291980"
  },
  {
    "text": "This might feel kind of useless at first. After all, flipping signs doesn't affect the probabilities.",
    "start": "1292560",
    "end": "1297320"
  },
  {
    "text": "But Grover realized that this could be used in conjunction with another step that slowly amplifies the probability of that key value.",
    "start": "1297800",
    "end": "1305340"
  },
  {
    "text": "There's actually a really nice way to visualize his algorithm. To set it up, let's imagine that our state vector has only three dimensions.",
    "start": "1305900",
    "end": "1312100"
  },
  {
    "text": "Obviously in principle it would be way bigger, but this lets me draw the first picture. The three directions here would correspond to the values 0,",
    "start": "1312600",
    "end": "1319518"
  },
  {
    "text": "1, and 2, and the whole problem statement here is that one of those values would be a secret key that we're searching for.",
    "start": "1319518",
    "end": "1325560"
  },
  {
    "text": "Many different quantum algorithms will begin by putting that state vector into a kind of equal balance, where all of the components have the same value.",
    "start": "1326100",
    "end": "1333100"
  },
  {
    "text": "I want to give that equal balance vector a name. Let's call it B. I hope you don't object too much to me simply declaring that this is possible",
    "start": "1333700",
    "end": "1340510"
  },
  {
    "text": "without dwelling on the underlying quantum gates that make it happen. In this case it essentially looks like a big pile of Hadamard gates,",
    "start": "1340510",
    "end": "1346810"
  },
  {
    "text": "but all you need to know is that this equal balance direction is abundantly accessible. So starting from here, the goal is to somehow coerce this",
    "start": "1346810",
    "end": "1354860"
  },
  {
    "text": "vector to instead point up in that secret key direction. And what's very helpful for the visualization purposes here",
    "start": "1354860",
    "end": "1361944"
  },
  {
    "text": "is that throughout Grover's algorithm, the vector only ever moves inside the 2D plane that's spanned by these two vectors.",
    "start": "1361944",
    "end": "1369040"
  },
  {
    "text": "So what I'm going to do is draw everything on that two-dimensional slice. And this is going to give us a faithful representation even when",
    "start": "1369520",
    "end": "1376375"
  },
  {
    "text": "the full dimension is way too big for me to draw literally. The convention I'll use here in drawing that slice will be to put the secret key",
    "start": "1376375",
    "end": "1383813"
  },
  {
    "text": "direction, whatever it is, along this y-axis, and then the x-axis is going to represent something that's an equal balance of all",
    "start": "1383813",
    "end": "1390541"
  },
  {
    "text": "of the other states, the non-key states. So in our very small three-dimensional example,",
    "start": "1390541",
    "end": "1395570"
  },
  {
    "text": "if that secret key was the 2 state up in the z direction, that would mean this perpendicular is an equal balance of 0 and 1,",
    "start": "1395570",
    "end": "1402403"
  },
  {
    "text": "which sits on the xy plane perpendicular to that z-axis. Notice the fully equally balanced state, b, has some component in that secret key",
    "start": "1402404",
    "end": "1410845"
  },
  {
    "text": "direction, since by its definition it has a little bit of that secret key within it. Instead of drawing this slice from three dimensions,",
    "start": "1410845",
    "end": "1418182"
  },
  {
    "text": "here's what it would look like if it was taken from some larger number of dimensions. It's almost identical, but the main difference is that that equal balance state",
    "start": "1418182",
    "end": "1426871"
  },
  {
    "text": "vector gets closer and closer to being perpendicular to the secret key direction. Crucially though, this angle is never quite 90 degrees,",
    "start": "1426871",
    "end": "1434538"
  },
  {
    "text": "since that balance state always has a little bit of that secret key value inside of it.",
    "start": "1434538",
    "end": "1439240"
  },
  {
    "text": "In fact, calculating this angle is going to be essential for understanding the runtime of Grover's algorithm.",
    "start": "1439640",
    "end": "1445020"
  },
  {
    "text": "This is the main bit of math you actually have to do for it. You can find this angle by taking a dot product",
    "start": "1445020",
    "end": "1450183"
  },
  {
    "text": "between the balance state and the key direction. The components of that balance state vector are all going to look like",
    "start": "1450183",
    "end": "1456560"
  },
  {
    "text": "1 divided by the square root of n, since remember it needs to be true that when you add the squares of all of these, it would give you 1.",
    "start": "1456560",
    "end": "1463460"
  },
  {
    "text": "Since the key vector is 0 almost everywhere but 1 in one of the components, it means that the dot product between these two is 1 divided by the square root of n.",
    "start": "1464080",
    "end": "1472419"
  },
  {
    "text": "If you know a little about dot products, you'll know that this is also the cosine of the angle between those two vectors.",
    "start": "1472420",
    "end": "1478720"
  },
  {
    "text": "I'm going to translate this fact a little to make it more useful for our purposes later. This is the same as saying the sine of the complementary angle down over here,",
    "start": "1479440",
    "end": "1487028"
  },
  {
    "text": "which I'll call theta, is 1 over the square root of n. For really small angles, the sine of theta and theta are approximately the same,",
    "start": "1487029",
    "end": "1494552"
  },
  {
    "text": "so if n is very large, we can safely say that this angle is about 1 divided by the square root of n, as long as it's measured in radians.",
    "start": "1494552",
    "end": "1501679"
  },
  {
    "text": "This value for theta is ultimately where the square root in the runtime is going to come from.",
    "start": "1502200",
    "end": "1506760"
  },
  {
    "text": "So let's remember it. I'll throw it up in the corner here. Okay, having spent a while setting up the actual picture,",
    "start": "1507220",
    "end": "1512658"
  },
  {
    "text": "let me show you the procedure here. It's surprisingly simple. Remember that key operation we were looking at earlier?",
    "start": "1512659",
    "end": "1518140"
  },
  {
    "text": "The one where you take the verification function for whatever NP problem you're trying to solve, and you translate it into some quantum gates,",
    "start": "1518460",
    "end": "1525458"
  },
  {
    "text": "and the effect is to flip the sine associated with that key value? Well, what does that look like inside our diagram?",
    "start": "1525458",
    "end": "1531520"
  },
  {
    "text": "In this diagram, if you flip the sine for the component associated with the key value, but all other components stay the same, what it looks like is flipping about the x-axis.",
    "start": "1532240",
    "end": "1542360"
  },
  {
    "text": "And the final ingredient you need to know is that it is also possible to flip this state vector around this equal balance direction.",
    "start": "1544620",
    "end": "1551620"
  },
  {
    "text": "I realize it might be a little unsatisfying for me to keep declaring that certain operations are available, but one thing to know is that in general,",
    "start": "1552400",
    "end": "1559822"
  },
  {
    "text": "if you can clearly describe and access one of these state vectors, it's also perfectly possible to reflect around it.",
    "start": "1559822",
    "end": "1565700"
  },
  {
    "text": "There are some quantum gates, they let you flip around this balance direction, but trust me that dwelling on the details of how those look isn't really",
    "start": "1566100",
    "end": "1572422"
  },
  {
    "text": "going to add much clarity or intuition to the whole algorithm. The insight really just comes from geometry.",
    "start": "1572422",
    "end": "1577140"
  },
  {
    "text": "Notice how if you first flip around the x-axis, and then flip around this off-diagonal direction,",
    "start": "1577540",
    "end": "1582750"
  },
  {
    "text": "the state now points slightly more in the vertical direction. If you were to read out from memory now, you would have a slightly",
    "start": "1582750",
    "end": "1589690"
  },
  {
    "text": "larger chance of seeing the secret key value than all the others. Here, maybe it's helpful if I show the actual coordinates,",
    "start": "1589690",
    "end": "1596061"
  },
  {
    "text": "in this case where n equals 100, along with some probability bars based on the squares of those coordinates.",
    "start": "1596061",
    "end": "1601100"
  },
  {
    "text": "Notice how each time I flip around the x-axis, and then flip around this off-diagonal axis, the component associated with that",
    "start": "1601540",
    "end": "1608265"
  },
  {
    "text": "secret key gets a little bit larger. So Grover's algorithm is remarkably simple.",
    "start": "1608265",
    "end": "1613179"
  },
  {
    "text": "All you do is repeat this over and over until the vector points as close as it can get to the secret key direction.",
    "start": "1613540",
    "end": "1619500"
  },
  {
    "text": "The final bit of reasoning you have to do is to figure out how many repetitions that should be. A wonderful fact from geometry is that if you successively flip about two",
    "start": "1620000",
    "end": "1628981"
  },
  {
    "text": "different lines like this, the overall effect is the same as a rotation, more specifically a rotation by two times the angle between those two lines.",
    "start": "1628981",
    "end": "1637860"
  },
  {
    "text": "So in our case, applying the two operations we have available one after the other, the net effect is to rotate the state vector by two times theta,",
    "start": "1638480",
    "end": "1646676"
  },
  {
    "text": "where again theta is that little angle that we calculated earlier, approximately one over the square root of n.",
    "start": "1646676",
    "end": "1652920"
  },
  {
    "text": "The ultimate goal is to rotate our initial state a little under 90 degrees, or about pi halves radians.",
    "start": "1653320",
    "end": "1658800"
  },
  {
    "text": "This means the optimal number of repetitions looks like pi halves divided by two theta, which is pi fourths times one over theta, and critically,",
    "start": "1659380",
    "end": "1667220"
  },
  {
    "text": "because theta is about one divided by the square root of n, it means the total number of steps looks like pi fourths times the square root of n.",
    "start": "1667220",
    "end": "1675059"
  },
  {
    "text": "So what Grover's algorithm says is first find whatever whole number is closest to this value and then repeat your two available flips that specific number of times.",
    "start": "1675700",
    "end": "1685179"
  },
  {
    "text": "As a concrete example, let's say that n was two to the power of twenty, meaning you're searching for a secret key out of about a million options.",
    "start": "1685580",
    "end": "1692360"
  },
  {
    "text": "You would be running this on a computer with at least twenty qubits, and what the algorithm would say is first compute pi fourths times the square",
    "start": "1692360",
    "end": "1698950"
  },
  {
    "text": "root of this number, which is around eight hundred and four, meaning you now repeat those two operations you have available,",
    "start": "1698950",
    "end": "1704592"
  },
  {
    "text": "the one flipping the sign of the key state and the one that's flipping around the balance direction eight hundred and four times.",
    "start": "1704592",
    "end": "1710460"
  },
  {
    "text": "Now remember, this state vector is invisible to you. There is nothing that you can do that will read out the values that it has.",
    "start": "1710860",
    "end": "1716840"
  },
  {
    "text": "You instead have to infer where it must be through reasoning, and in this case, through all the geometric reasoning, you can conclude that after this specific number",
    "start": "1717140",
    "end": "1725416"
  },
  {
    "text": "of times, the vector should be pointed almost entirely in that secret key direction. So when you read out from the computer, you are",
    "start": "1725416",
    "end": "1732237"
  },
  {
    "text": "almost guaranteed to see that secret key value. Now to be clear, you're not guaranteed to see it.",
    "start": "1732237",
    "end": "1737380"
  },
  {
    "text": "There is some small chance that after reading out, you would see something that's not the secret key. So to be sure, you could always quickly verify the answer, since after all,",
    "start": "1737560",
    "end": "1745680"
  },
  {
    "text": "the whole premise of this situation is that you have some quick way of verifying answers. You can just do that on a classical computer.",
    "start": "1745680",
    "end": "1751900"
  },
  {
    "text": "Worst case, if you got unlucky and sampled a different number, you run the whole thing again, and it becomes vanishingly unlikely",
    "start": "1752480",
    "end": "1758151"
  },
  {
    "text": "that you would ever need to run this more than just a couple times. To wrap up, I want to come clean about a lie that I've been telling you,",
    "start": "1758151",
    "end": "1765630"
  },
  {
    "text": "and also reflect a little bit about where this speedup came from, and then highlight a surprising analogy.",
    "start": "1765630",
    "end": "1770340"
  },
  {
    "start": "1770000",
    "end": "1811000"
  },
  {
    "text": "Before I do, now might be as good a time as any to say a thanks to the community of channel supporters on Patreon.",
    "start": "1770920",
    "end": "1776440"
  },
  {
    "text": "Putting together visualized lessons like this takes an enormous amount of time. As you probably know, most YouTubers monetize their content with in-video sponsorships,",
    "start": "1776740",
    "end": "1784684"
  },
  {
    "text": "but for many years now that's something that I've opted to decline. I think it makes the videos better, and the only reason it's not a wildly costly decision",
    "start": "1784685",
    "end": "1792560"
  },
  {
    "text": "is that enough viewers who agree with that directly support the channel through Patreon. In exchange, I offer supporters early views of new content,",
    "start": "1792560",
    "end": "1799904"
  },
  {
    "text": "which is actually very helpful for developing it, and there's other perks in there too. In general though, if you like this content, it",
    "start": "1799904",
    "end": "1805603"
  },
  {
    "text": "would mean a lot if you considered joining. No pressure though, one of the big values is that the content can be free.",
    "start": "1805603",
    "end": "1810660"
  },
  {
    "start": "1811000",
    "end": "1887000"
  },
  {
    "text": "Anyway, back to those three finishing points. The lie is a lie by omission. I've been showing these state vectors with positive and negative real number values,",
    "start": "1812060",
    "end": "1821007"
  },
  {
    "text": "but more generally, these components can be complex numbers. Now my hope is to motivate why that's the case in the follow-on video about physics.",
    "start": "1821007",
    "end": "1827880"
  },
  {
    "text": "The general idea is that any time you're working with waves, you care about both amplitude and phase, and a complex number",
    "start": "1828180",
    "end": "1834247"
  },
  {
    "text": "is a really elegant way to encode an amplitude and phase together. So if you look at one of the components inside the state vector,",
    "start": "1834248",
    "end": "1841157"
  },
  {
    "text": "the fuller picture for how to think about it is that it has some magnitude and some phase. The magnitude is the thing that you square to get the probability,",
    "start": "1841157",
    "end": "1849021"
  },
  {
    "text": "and the phase is essentially a more general version of our whole discussion here around positive and negative values.",
    "start": "1849021",
    "end": "1854600"
  },
  {
    "text": "Changing phase doesn't immediately affect the probabilities, but it does affect the state, which in turn affects how it gets processed and how it",
    "start": "1854940",
    "end": "1861724"
  },
  {
    "text": "interacts with the world. Now needless to say, throwing in a bunch of complex numbers adds a lot of potential confusion to an already complicated topic.",
    "start": "1861724",
    "end": "1868740"
  },
  {
    "text": "That's why I avoided it. But we were safe to ignore complex values for the purposes of Grover's algorithm,",
    "start": "1868960",
    "end": "1874332"
  },
  {
    "text": "since very mercifully, during that algorithm, you only ever see positive and negative values.",
    "start": "1874332",
    "end": "1879080"
  },
  {
    "text": "I want you to know, though, that this availability of complex values plays a crucial role in other quantum algorithms, like Shor's for factoring numbers.",
    "start": "1879440",
    "end": "1887340"
  },
  {
    "start": "1887000",
    "end": "2041000"
  },
  {
    "text": "Next, even if you understood everything that I described with this whole algorithm, it's not easy to summarize where exactly the speedup came from.",
    "start": "1887340",
    "end": "1895240"
  },
  {
    "text": "The fact that you begin by applying a certain operation to this equal balance state makes it very tempting to say that the speedup",
    "start": "1895700",
    "end": "1902352"
  },
  {
    "text": "comes from parallelizing the operation over all possible inputs. But like I mentioned at the start, that summary, at least to me,",
    "start": "1902353",
    "end": "1908948"
  },
  {
    "text": "just really doesn't feel right, and it definitely leads to misconceptions. As you now know, that step, on its own, does nothing to reveal the key value.",
    "start": "1908948",
    "end": "1917520"
  },
  {
    "text": "I'll leave it up to your interpretation whether it feels apt to describe this first step as applying a function to many inputs in parallel,",
    "start": "1917860",
    "end": "1924644"
  },
  {
    "text": "or if it feels better to say that the balance state is just its own new thing, and the function we have always applies to individual inputs one at a time,",
    "start": "1924644",
    "end": "1932209"
  },
  {
    "text": "never multiple at once. It's just that those inputs are now a new kind of thing. In my view, for this algorithm, if you want the one-word summary for",
    "start": "1932209",
    "end": "1939815"
  },
  {
    "text": "where the speedup comes from, I think a better choice would be Pythagoras. As a loose analogy, if you want to get from one corner of a unit square to the opposite,",
    "start": "1939815",
    "end": "1948028"
  },
  {
    "text": "if you're limited to move only in the x and y directions, you have to walk two units. But if you're allowed to move diagonally, you can get there in the square root of two.",
    "start": "1948029",
    "end": "1956100"
  },
  {
    "text": "And more generally, if you're up in n dimensions, you would have to walk n units to get from one corner of a cube to the opposite",
    "start": "1956420",
    "end": "1962574"
  },
  {
    "text": "one if you can only move along the edges, but if you can go diagonally, you can get there in the square root of n.",
    "start": "1962574",
    "end": "1968060"
  },
  {
    "text": "In the worldview of quantum mechanics, different observable states all represent perpendicular directions in some state space.",
    "start": "1968620",
    "end": "1976480"
  },
  {
    "text": "So viewed from this framework, what the classical deterministic world looks like is one where you only have access to these pure coordinate directions.",
    "start": "1976940",
    "end": "1984660"
  },
  {
    "text": "If you think about it, anytime you're doing computation, your computer is somehow walking through a series of different states",
    "start": "1985220",
    "end": "1991353"
  },
  {
    "text": "that are available to it, and algorithmic runtime is all about understanding how many steps you have to walk in the space of all possible states.",
    "start": "1991353",
    "end": "1998460"
  },
  {
    "text": "So from this quantum worldview, where classical states look like pure coordinate directions, the key difference with quantum computing is that you now also have",
    "start": "1998920",
    "end": "2007044"
  },
  {
    "text": "available to you a panoply of additional diagonal directions that you can work with.",
    "start": "2007044",
    "end": "2011360"
  },
  {
    "text": "Now, to be clear, the analogy is not too literal, you should take it with a grain of salt. It's not like runtime necessarily looks like a distance",
    "start": "2012100",
    "end": "2018187"
  },
  {
    "text": "travelled through this particular state space. But it is true that if you follow the state vector throughout Grover's algorithm,",
    "start": "2018187",
    "end": "2025018"
  },
  {
    "text": "what it's doing is slowly walking along a quarter circle arc from an initial condition to the target condition, tracing a path that would be entirely",
    "start": "2025018",
    "end": "2033050"
  },
  {
    "text": "unavailable if you were limited to move only in pure coordinate directions. And the effect is to provide this square root-sized shortcut.",
    "start": "2033050",
    "end": "2040580"
  },
  {
    "start": "2041000",
    "end": "2108000"
  },
  {
    "text": "And as the very last point before I let you go, regular viewers will know that one of my reasons for covering this topic is because of",
    "start": "2041240",
    "end": "2047432"
  },
  {
    "text": "a promised analogy between this algorithm and something we covered last video, about two colliding blocks that can compute pi.",
    "start": "2047432",
    "end": "2053300"
  },
  {
    "text": "In that video, we are also studying a point in a certain two-dimensional state space bouncing around a circle, and in fact, the series of bounces that it",
    "start": "2053800",
    "end": "2061509"
  },
  {
    "text": "took is essentially identical to what we just saw here with Grover's algorithm. The story here is that when a physicist friend of mine, Adam Brown,",
    "start": "2061509",
    "end": "2068963"
  },
  {
    "text": "saw the first version of that video, he had recently been reading up on Grover's algorithm and immediately realized that both processes were identical.",
    "start": "2068964",
    "end": "2075780"
  },
  {
    "text": "Now I had this whole cockamamie plan for this video where I was going to explain quantum computing and Grover's algorithm in the",
    "start": "2075780",
    "end": "2081749"
  },
  {
    "text": "context of that analogy, but it turned out to be just a terrible idea. The whole thing only really made sense if you already understood Grover's algorithm.",
    "start": "2081749",
    "end": "2088658"
  },
  {
    "text": "So instead, now that you have seen both topics in isolation, what I'll do is leave up a rough outline of how the analogy looks.",
    "start": "2089199",
    "end": "2095280"
  },
  {
    "text": "Think of this as an open-ended homework puzzle, where the task is to draw the connection for yourself. As an answer key of sorts, I will link to the very delightful paper",
    "start": "2095580",
    "end": "2103936"
  },
  {
    "text": "by Adam Brown outlining precisely what that analogy looks like. If you want to learn more of the fundamentals of quantum computing,",
    "start": "2103936",
    "end": "2111079"
  },
  {
    "start": "2108000",
    "end": "2214000"
  },
  {
    "text": "several years ago two very smart friends of mine, Andy Matuszczak and Michael Nielsen, put together a really nice resource for learning the topic,",
    "start": "2111079",
    "end": "2117791"
  },
  {
    "text": "offering a pretty unique approach to making sure that you actually remember it in the long term. To learn some of the fundamental quantum mechanics,",
    "start": "2117791",
    "end": "2124781"
  },
  {
    "text": "Mithina Yoganathan from the channel Looking Glass Universe has been putting together a very beginner-friendly course on the topic.",
    "start": "2124781",
    "end": "2130280"
  },
  {
    "text": "She was actually the one to teach me how Grover's algorithm works many years ago, and honestly I owe a lot of the content of this video to many helpful conversations with",
    "start": "2130640",
    "end": "2138275"
  },
  {
    "text": "her. And as a very last note to end on, one of the conversations I had while making this video was with Scott Aaronson,",
    "start": "2138275",
    "end": "2144762"
  },
  {
    "text": "a very widely respected researcher and utterly delightful author on the topic. I recorded the Zoom call for notes, and there's one",
    "start": "2144762",
    "end": "2150883"
  },
  {
    "text": "little piece of it which I just wanted to share with you. You know, I have this dream of writing a science fiction novel where I know",
    "start": "2150884",
    "end": "2158016"
  },
  {
    "text": "it's going to be the climactic scene, where the heroes will be, you know, Ron and Grover's algorithm to try to find this cryptographic key, right?",
    "start": "2158016",
    "end": "2167220"
  },
  {
    "text": "The whole fate of the world will depend on whether they can find it, OK? The bad guys have surrounded their base, you know, they're bashing down the walls.",
    "start": "2167440",
    "end": "2176400"
  },
  {
    "text": "But Grover's algorithm is still running, and it has only like a 30 percent probability of giving you the solution if you measure.",
    "start": "2176780",
    "end": "2184100"
  },
  {
    "text": "So the question is, like, do you measure now or do you let it run for another minute? Right? And if you measure now, you know, and you don't get it, then you've lost everything.",
    "start": "2184220",
    "end": "2192920"
  },
  {
    "text": "Then you have to restart from the beginning. So this is this is not a plot that you could have with any classical algorithm.",
    "start": "2192920",
    "end": "2199420"
  },
  {
    "text": "Right.",
    "start": "2199700",
    "end": "2200200"
  }
]