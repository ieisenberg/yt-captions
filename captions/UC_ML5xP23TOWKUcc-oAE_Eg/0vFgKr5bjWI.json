[
  {
    "text": "what is going on guys my name is russain",
    "start": "290",
    "end": "3750"
  },
  {
    "text": "and in this video I want to talk about",
    "start": "3750",
    "end": "5520"
  },
  {
    "text": "three four four things yes",
    "start": "5520",
    "end": "9139"
  },
  {
    "text": "synchronized operations asynchronous",
    "start": "9139",
    "end": "11519"
  },
  {
    "text": "operations multi-threading and multi",
    "start": "11519",
    "end": "13440"
  },
  {
    "text": "processing I hope I nail all of them if",
    "start": "13440",
    "end": "16710"
  },
  {
    "text": "you are interested stay tuned so the",
    "start": "16710",
    "end": "18570"
  },
  {
    "text": "first one guys synchronous operation",
    "start": "18570",
    "end": "22310"
  },
  {
    "text": "synchronicity is when you make a request",
    "start": "22310",
    "end": "25320"
  },
  {
    "text": "whether this is a network call or a",
    "start": "25320",
    "end": "28050"
  },
  {
    "text": "request to read from disk or a request",
    "start": "28050",
    "end": "32070"
  },
  {
    "text": "to send to a printer to print does",
    "start": "32070",
    "end": "34860"
  },
  {
    "text": "anybody print these days I don't think",
    "start": "34860",
    "end": "37649"
  },
  {
    "text": "so",
    "start": "37649",
    "end": "38160"
  },
  {
    "text": "right but yeah if you're doing that then",
    "start": "38160",
    "end": "41690"
  },
  {
    "text": "there is this magic thing that's what we",
    "start": "41690",
    "end": "45719"
  },
  {
    "text": "call the process and there's in this",
    "start": "45719",
    "end": "47969"
  },
  {
    "text": "process there's always by default one",
    "start": "47969",
    "end": "50190"
  },
  {
    "text": "thread that does the work actually does",
    "start": "50190",
    "end": "54390"
  },
  {
    "text": "the actual work now think about it guys",
    "start": "54390",
    "end": "57090"
  },
  {
    "text": "if you're calculating a prime number",
    "start": "57090",
    "end": "59070"
  },
  {
    "text": "then you that thread is just busy in the",
    "start": "59070",
    "end": "61980"
  },
  {
    "text": "CPU right this is using the resource of",
    "start": "61980",
    "end": "64198"
  },
  {
    "text": "the CPU to calculate things 1 plus 1",
    "start": "64199",
    "end": "66770"
  },
  {
    "text": "divided by 3 how do you calculate a",
    "start": "66770",
    "end": "69270"
  },
  {
    "text": "prime number alright so now it's busy",
    "start": "69270",
    "end": "71820"
  },
  {
    "text": "but think about it if you're reading",
    "start": "71820",
    "end": "74820"
  },
  {
    "text": "from disk you ask your thread is asking",
    "start": "74820",
    "end": "77520"
  },
  {
    "text": "the operating system to read a file from",
    "start": "77520",
    "end": "79770"
  },
  {
    "text": "disk the thread is not doing actually",
    "start": "79770",
    "end": "83880"
  },
  {
    "text": "any work it's basically blocked and",
    "start": "83880",
    "end": "86790"
  },
  {
    "text": "waiting that's it it's just waiting so",
    "start": "86790",
    "end": "90420"
  },
  {
    "text": "if you reading then who who is doing the",
    "start": "90420",
    "end": "93270"
  },
  {
    "text": "actual work from reading the disk that's",
    "start": "93270",
    "end": "95220"
  },
  {
    "text": "the disk controller",
    "start": "95220",
    "end": "96659"
  },
  {
    "text": "it's called IO controller it's it's",
    "start": "96659",
    "end": "98939"
  },
  {
    "text": "something on the motherboard that I",
    "start": "98939",
    "end": "101939"
  },
  {
    "text": "forgot how it actually works it's just",
    "start": "101939",
    "end": "104549"
  },
  {
    "text": "some driver on the battle board",
    "start": "104549",
    "end": "107790"
  },
  {
    "text": "maybe the operating system is",
    "start": "107790",
    "end": "109280"
  },
  {
    "text": "responsible that so the thread here is",
    "start": "109280",
    "end": "111840"
  },
  {
    "text": "just sitting here like that it's just",
    "start": "111840",
    "end": "113250"
  },
  {
    "text": "yeah alright I'm just waiting here not",
    "start": "113250",
    "end": "116640"
  },
  {
    "text": "doing nothing so the rest of your code",
    "start": "116640",
    "end": "119009"
  },
  {
    "text": "guess what it's also blocked and that's",
    "start": "119009",
    "end": "121799"
  },
  {
    "text": "called synchronous execution because",
    "start": "121799",
    "end": "124189"
  },
  {
    "text": "you're sending a request and you're",
    "start": "124189",
    "end": "126930"
  },
  {
    "text": "waiting and blocked despite you not",
    "start": "126930",
    "end": "131819"
  },
  {
    "text": "doing any work really",
    "start": "131819",
    "end": "133240"
  },
  {
    "text": "is just blocked so that's synchronous",
    "start": "133240",
    "end": "135160"
  },
  {
    "text": "exclusion same thing applies to",
    "start": "135160",
    "end": "136630"
  },
  {
    "text": "ascending a rest request to the endpoint",
    "start": "136630",
    "end": "138640"
  },
  {
    "text": "to the to the server right you're not",
    "start": "138640",
    "end": "142750"
  },
  {
    "text": "doing any work the server is doing the",
    "start": "142750",
    "end": "144280"
  },
  {
    "text": "work you're just waiting for result",
    "start": "144280",
    "end": "145780"
  },
  {
    "text": "right the TCP just file descriptor is",
    "start": "145780",
    "end": "148540"
  },
  {
    "text": "waiting for something to wake it up and",
    "start": "148540",
    "end": "151090"
  },
  {
    "text": "receive them for mayhem well until that",
    "start": "151090",
    "end": "154450"
  },
  {
    "text": "is you also block so if there are code",
    "start": "154450",
    "end": "157030"
  },
  {
    "text": "here you cannot execute that code",
    "start": "157030",
    "end": "159100"
  },
  {
    "text": "unfortunately if there is a UI thread",
    "start": "159100",
    "end": "162660"
  },
  {
    "text": "right no if you if there is a user",
    "start": "162660",
    "end": "165100"
  },
  {
    "text": "experience or UI and peep the user is",
    "start": "165100",
    "end": "168250"
  },
  {
    "text": "actually pressing assuming you're a",
    "start": "168250",
    "end": "169990"
  },
  {
    "text": "single threaded that button doesn't do",
    "start": "169990",
    "end": "172810"
  },
  {
    "text": "anything you cannot do anything because",
    "start": "172810",
    "end": "174180"
  },
  {
    "text": "that thread cannot leave that state to",
    "start": "174180",
    "end": "178600"
  },
  {
    "text": "actually go and serve and animate the",
    "start": "178600",
    "end": "181450"
  },
  {
    "text": "button as if it was clicked because",
    "start": "181450",
    "end": "183850"
  },
  {
    "text": "guess what it's blocked assuming a",
    "start": "183850",
    "end": "187000"
  },
  {
    "text": "single threaded right most application",
    "start": "187000",
    "end": "189070"
  },
  {
    "text": "has a UI thread in but let's assume just",
    "start": "189070",
    "end": "192100"
  },
  {
    "text": "for simplicity if you're asking a visual",
    "start": "192100",
    "end": "194470"
  },
  {
    "text": "basic 5 application like 1998 kind of a",
    "start": "194470",
    "end": "197770"
  },
  {
    "text": "things right but yeah one application is",
    "start": "197770",
    "end": "200320"
  },
  {
    "text": "blocked right now people say this is a",
    "start": "200320",
    "end": "207850"
  },
  {
    "text": "ridiculous we cannot do this this is",
    "start": "207850",
    "end": "210160"
  },
  {
    "text": "dumb how about we introduce some other",
    "start": "210160",
    "end": "213880"
  },
  {
    "text": "thread let the let the process execute",
    "start": "213880",
    "end": "216370"
  },
  {
    "text": "another thread that does more work",
    "start": "216370",
    "end": "219840"
  },
  {
    "text": "sounds cool so what is a thread a thread",
    "start": "219840",
    "end": "222310"
  },
  {
    "text": "is we have the process think of it as",
    "start": "222310",
    "end": "224860"
  },
  {
    "text": "like a container but think of it like",
    "start": "224860",
    "end": "228760"
  },
  {
    "text": "almost like a container that has 1/3 of",
    "start": "228760",
    "end": "232300"
  },
  {
    "text": "execution all the time right if you as",
    "start": "232300",
    "end": "234790"
  },
  {
    "text": "the process owner a writer of the",
    "start": "234790",
    "end": "237490"
  },
  {
    "text": "application can spin up another threat",
    "start": "237490",
    "end": "239470"
  },
  {
    "text": "to do some other work another third can",
    "start": "239470",
    "end": "242230"
  },
  {
    "text": "do some other work all these threads",
    "start": "242230",
    "end": "244060"
  },
  {
    "text": "have in common is they share the same",
    "start": "244060",
    "end": "246550"
  },
  {
    "text": "resources that the process has that is",
    "start": "246550",
    "end": "249730"
  },
  {
    "text": "big big big big big problem because they",
    "start": "249730",
    "end": "253450"
  },
  {
    "text": "can start tracing for these memory",
    "start": "253450",
    "end": "257019"
  },
  {
    "text": "locations and you can get into the same",
    "start": "257020",
    "end": "259570"
  },
  {
    "text": "situation that you get with a database",
    "start": "259570",
    "end": "260769"
  },
  {
    "text": "which is locking and race conditions and",
    "start": "260770",
    "end": "264490"
  },
  {
    "text": "all that jazz right so",
    "start": "264490",
    "end": "266730"
  },
  {
    "text": "what do you do guys what do you do right",
    "start": "266730",
    "end": "269780"
  },
  {
    "text": "you don't do multi-threading because",
    "start": "269780",
    "end": "272040"
  },
  {
    "text": "multi-threading is evil right",
    "start": "272040",
    "end": "274310"
  },
  {
    "text": "check out this white paper that people",
    "start": "274310",
    "end": "277800"
  },
  {
    "text": "just say stay away from multi-threading",
    "start": "277800",
    "end": "280290"
  },
  {
    "text": "so people says okay some people stayed",
    "start": "280290",
    "end": "283320"
  },
  {
    "text": "away from multi-threading because they",
    "start": "283320",
    "end": "284670"
  },
  {
    "text": "cannot get it right because it's very",
    "start": "284670",
    "end": "286440"
  },
  {
    "text": "hard to build your application so it's a",
    "start": "286440",
    "end": "288860"
  },
  {
    "text": "thread safe right that's what calls",
    "start": "288860",
    "end": "292200"
  },
  {
    "text": "thread safety is essentially having",
    "start": "292200",
    "end": "294060"
  },
  {
    "text": "mutexes on your resources so no two",
    "start": "294060",
    "end": "297030"
  },
  {
    "text": "threads can actually access the same",
    "start": "297030",
    "end": "298740"
  },
  {
    "text": "process resources at the same time",
    "start": "298740",
    "end": "300300"
  },
  {
    "text": "what's the problem right that's the",
    "start": "300300",
    "end": "303390"
  },
  {
    "text": "that's the big problem right so people",
    "start": "303390",
    "end": "305340"
  },
  {
    "text": "shied away from multi-threading some",
    "start": "305340",
    "end": "307650"
  },
  {
    "text": "people like there's still a thing some",
    "start": "307650",
    "end": "309930"
  },
  {
    "text": "people still doing here and they are",
    "start": "309930",
    "end": "311840"
  },
  {
    "text": "bragging that their applications through",
    "start": "311840",
    "end": "313950"
  },
  {
    "text": "itself definitely sequel light per hour",
    "start": "313950",
    "end": "317880"
  },
  {
    "text": "cycle light does not like",
    "start": "317880",
    "end": "319320"
  },
  {
    "text": "multi-threading check out check that out",
    "start": "319320",
    "end": "321150"
  },
  {
    "text": "he despised it so yeah so",
    "start": "321150",
    "end": "324240"
  },
  {
    "text": "multi-threading is essentially evil",
    "start": "324240",
    "end": "325800"
  },
  {
    "text": "that's my personal opinion you might",
    "start": "325800",
    "end": "327420"
  },
  {
    "text": "have different let me know in the",
    "start": "327420",
    "end": "328470"
  },
  {
    "text": "comment section but essentially",
    "start": "328470",
    "end": "331890"
  },
  {
    "text": "multi-threading is yeah it's very hard",
    "start": "331890",
    "end": "334320"
  },
  {
    "text": "to write it's very very difficult to get",
    "start": "334320",
    "end": "337110"
  },
  {
    "text": "right you need to have a very very",
    "start": "337110",
    "end": "339180"
  },
  {
    "text": "skillful understanding of how operating",
    "start": "339180",
    "end": "341910"
  },
  {
    "text": "system works and your CPU because your",
    "start": "341910",
    "end": "345000"
  },
  {
    "text": "CPU can have multi cores and your",
    "start": "345000",
    "end": "346440"
  },
  {
    "text": "threads can execute in parallel",
    "start": "346440",
    "end": "348200"
  },
  {
    "text": "literally important not time slice in",
    "start": "348200",
    "end": "350670"
  },
  {
    "text": "parallel like that's that's good but",
    "start": "350670",
    "end": "353580"
  },
  {
    "text": "doesn't give you much in for much",
    "start": "353580",
    "end": "356450"
  },
  {
    "text": "benefit to be honest some smart people",
    "start": "356450",
    "end": "360630"
  },
  {
    "text": "came and says you know what we're gonna",
    "start": "360630",
    "end": "363600"
  },
  {
    "text": "execute something called asynchronous",
    "start": "363600",
    "end": "365570"
  },
  {
    "text": "accusin and nodejs is a very elegant",
    "start": "365570",
    "end": "369110"
  },
  {
    "text": "example of this it's a single threaded",
    "start": "369110",
    "end": "372260"
  },
  {
    "text": "non blocking asynchronous framework",
    "start": "372260",
    "end": "375870"
  },
  {
    "text": "that's that's the title of this so let's",
    "start": "375870",
    "end": "378060"
  },
  {
    "text": "talk about asynchronous ctz right i",
    "start": "378060",
    "end": "381980"
  },
  {
    "text": "cannot spell guys and i cannot talk",
    "start": "381980",
    "end": "384420"
  },
  {
    "text": "about asynchronous cities asynchronicity",
    "start": "384420",
    "end": "388590"
  },
  {
    "text": "is the idea of having a single threaded",
    "start": "388590",
    "end": "393030"
  },
  {
    "text": "single process single thread that does",
    "start": "393030",
    "end": "395130"
  },
  {
    "text": "the work the process cannot do work by",
    "start": "395130",
    "end": "397500"
  },
  {
    "text": "itself well",
    "start": "397500",
    "end": "399840"
  },
  {
    "text": "it needs a thread but well that is also",
    "start": "399840",
    "end": "402660"
  },
  {
    "text": "based on the operating system Linux",
    "start": "402660",
    "end": "404580"
  },
  {
    "text": "treat threads as a sub process versus",
    "start": "404580",
    "end": "407520"
  },
  {
    "text": "windows actually just three stories",
    "start": "407520",
    "end": "411000"
  },
  {
    "text": "either actual thread of thing which",
    "start": "411000",
    "end": "412860"
  },
  {
    "text": "would kind of complicate things but",
    "start": "412860",
    "end": "414420"
  },
  {
    "text": "never Maya back to the point single",
    "start": "414420",
    "end": "418560"
  },
  {
    "text": "thread single process if you're reading",
    "start": "418560",
    "end": "421440"
  },
  {
    "text": "from desk we're gonna do it",
    "start": "421440",
    "end": "424380"
  },
  {
    "text": "asynchronously here's what I'm gonna do",
    "start": "424380",
    "end": "426090"
  },
  {
    "text": "because the thread doesn't literally it",
    "start": "426090",
    "end": "428670"
  },
  {
    "text": "is not doing anything it's just waiting",
    "start": "428670",
    "end": "431070"
  },
  {
    "text": "and it's being blocked and the rest of",
    "start": "431070",
    "end": "432810"
  },
  {
    "text": "the code cannot be executed it's blocked",
    "start": "432810",
    "end": "434940"
  },
  {
    "text": "here right and the rest of the code",
    "start": "434940",
    "end": "436260"
  },
  {
    "text": "can't get executed right so what do we",
    "start": "436260",
    "end": "438090"
  },
  {
    "text": "do what do we do guys and I'm sending a",
    "start": "438090",
    "end": "441750"
  },
  {
    "text": "request to the i/o controller to read",
    "start": "441750",
    "end": "443490"
  },
  {
    "text": "from disk and I'm sending a request a",
    "start": "443490",
    "end": "445740"
  },
  {
    "text": "fetch command for example JavaScript and",
    "start": "445740",
    "end": "447990"
  },
  {
    "text": "I'm reading from network resources",
    "start": "447990",
    "end": "450390"
  },
  {
    "text": "breast endpoint G RPC right and I'm",
    "start": "450390",
    "end": "453570"
  },
  {
    "text": "waiting I'm just just sitting here",
    "start": "453570",
    "end": "454860"
  },
  {
    "text": "waiting doing nothing right the",
    "start": "454860",
    "end": "458810"
  },
  {
    "text": "application knows this and you say oh",
    "start": "458810",
    "end": "461550"
  },
  {
    "text": "okay this thread is not really doing",
    "start": "461550",
    "end": "465300"
  },
  {
    "text": "anything so what we're gonna do is let's",
    "start": "465300",
    "end": "467280"
  },
  {
    "text": "send that request that is essentially",
    "start": "467280",
    "end": "469760"
  },
  {
    "text": "that a quiz that is actually was",
    "start": "469760",
    "end": "472350"
  },
  {
    "text": "blocking and here's what I'm gonna do",
    "start": "472350",
    "end": "474950"
  },
  {
    "text": "we're gonna tell whoever owns that other",
    "start": "474950",
    "end": "478080"
  },
  {
    "text": "end",
    "start": "478080",
    "end": "478830"
  },
  {
    "text": "io control network says hey here's a",
    "start": "478830",
    "end": "481350"
  },
  {
    "text": "request I want to read this resource I",
    "start": "481350",
    "end": "483780"
  },
  {
    "text": "want to read this rest endpoint I want",
    "start": "483780",
    "end": "486210"
  },
  {
    "text": "to read this block of desc",
    "start": "486210",
    "end": "488930"
  },
  {
    "text": "and here's the thing I'm gonna go away",
    "start": "488930",
    "end": "491070"
  },
  {
    "text": "and here's a function it's called a",
    "start": "491070",
    "end": "493800"
  },
  {
    "text": "callback call me back all right",
    "start": "493800",
    "end": "496590"
  },
  {
    "text": "whenever you're done I'm gonna do my own",
    "start": "496590",
    "end": "498840"
  },
  {
    "text": "thing here so the the thread immediately",
    "start": "498840",
    "end": "502290"
  },
  {
    "text": "unblocked and start executing other",
    "start": "502290",
    "end": "504210"
  },
  {
    "text": "codes until that function finishes right",
    "start": "504210",
    "end": "509700"
  },
  {
    "text": "that actual reading is done and the",
    "start": "509700",
    "end": "512010"
  },
  {
    "text": "reader will call back that function",
    "start": "512010",
    "end": "514349"
  },
  {
    "text": "which will trigger some sort of an event",
    "start": "514349",
    "end": "516390"
  },
  {
    "text": "which the thread oh there's something",
    "start": "516390",
    "end": "518070"
  },
  {
    "text": "here let me go and execute and this is",
    "start": "518070",
    "end": "519900"
  },
  {
    "text": "in JavaScript the implementation is that",
    "start": "519900",
    "end": "521669"
  },
  {
    "text": "literally an event loop the thread goes",
    "start": "521669",
    "end": "523620"
  },
  {
    "text": "is okay do I have jobs to execute do I",
    "start": "523620",
    "end": "526710"
  },
  {
    "text": "have actual code that I need to execute",
    "start": "526710",
    "end": "528540"
  },
  {
    "text": "is there something coming from a",
    "start": "528540",
    "end": "530010"
  },
  {
    "text": "callback is there something going a lot",
    "start": "530010",
    "end": "531330"
  },
  {
    "text": "yeah so that's how work async",
    "start": "531330",
    "end": "533450"
  },
  {
    "text": "honestly beautiful beautiful design one",
    "start": "533450",
    "end": "537020"
  },
  {
    "text": "slight problem",
    "start": "537020",
    "end": "538720"
  },
  {
    "text": "and I don't know if you feel coded and",
    "start": "538720",
    "end": "541760"
  },
  {
    "text": "callbacks in Ajax back in the 2000s 2004",
    "start": "541760",
    "end": "546530"
  },
  {
    "text": "2003 that's when I started coding with",
    "start": "546530",
    "end": "549500"
  },
  {
    "text": "Ajax that cord is ugly as f you cannot",
    "start": "549500",
    "end": "553940"
  },
  {
    "text": "read it because most of the time we need",
    "start": "553940",
    "end": "556580"
  },
  {
    "text": "go a callback you need some information",
    "start": "556580",
    "end": "558890"
  },
  {
    "text": "from the callback to do something else",
    "start": "558890",
    "end": "560270"
  },
  {
    "text": "so you start doing ok callback and then",
    "start": "560270",
    "end": "562430"
  },
  {
    "text": "is okay this function and then you take",
    "start": "562430",
    "end": "564830"
  },
  {
    "text": "this function and then let me go do all",
    "start": "564830",
    "end": "567890"
  },
  {
    "text": "this other thing and then that thing",
    "start": "567890",
    "end": "569570"
  },
  {
    "text": "needs a callback so you end up doing a",
    "start": "569570",
    "end": "571340"
  },
  {
    "text": "curly braces in the cooler braces in",
    "start": "571340",
    "end": "572900"
  },
  {
    "text": "color braces and color braces and it's",
    "start": "572900",
    "end": "577250"
  },
  {
    "text": "completely unreadable right so people",
    "start": "577250",
    "end": "580490"
  },
  {
    "text": "when they invented this meanwhile some",
    "start": "580490",
    "end": "584000"
  },
  {
    "text": "people didn't like it",
    "start": "584000",
    "end": "584900"
  },
  {
    "text": "the multi-threaded people says yeah",
    "start": "584900",
    "end": "586760"
  },
  {
    "text": "that's just ugly code like multi so it",
    "start": "586760",
    "end": "590870"
  },
  {
    "text": "is a beautiful code huh right but some",
    "start": "590870",
    "end": "593990"
  },
  {
    "text": "people defer to from this because it's",
    "start": "593990",
    "end": "595460"
  },
  {
    "text": "just a cleanest the JavaScript community",
    "start": "595460",
    "end": "598400"
  },
  {
    "text": "came in and says you know what we'll fix",
    "start": "598400",
    "end": "601070"
  },
  {
    "text": "this we still like I synchronous but",
    "start": "601070",
    "end": "603650"
  },
  {
    "text": "we're gonna bring promises they promises",
    "start": "603650",
    "end": "607490"
  },
  {
    "text": "and the picture and now the code is",
    "start": "607490",
    "end": "609350"
  },
  {
    "text": "better with that vendor then the then",
    "start": "609350",
    "end": "612980"
  },
  {
    "text": "the then the catch some people even did",
    "start": "612980",
    "end": "616190"
  },
  {
    "text": "it even better and that's pretty much a",
    "start": "616190",
    "end": "618800"
  },
  {
    "text": "standard I think async await you write",
    "start": "618800",
    "end": "622190"
  },
  {
    "text": "the function you code this is",
    "start": "622190",
    "end": "623540"
  },
  {
    "text": "asynchronous function and every code",
    "start": "623540",
    "end": "625700"
  },
  {
    "text": "that is essentially blocking you write",
    "start": "625700",
    "end": "627440"
  },
  {
    "text": "and await on top of it and that's it it",
    "start": "627440",
    "end": "630110"
  },
  {
    "text": "will act asynchronously but look",
    "start": "630110",
    "end": "633560"
  },
  {
    "text": "synchronous to you and it's all sheesh",
    "start": "633560",
    "end": "637340"
  },
  {
    "text": "and syntactical sugar shin tack she can",
    "start": "637340",
    "end": "641570"
  },
  {
    "text": "you think syntactical sugar three times",
    "start": "641570",
    "end": "643370"
  },
  {
    "text": "in a row I dare you guys you cannot",
    "start": "643370",
    "end": "645470"
  },
  {
    "text": "syntactical sugar I cannot think damn it",
    "start": "645470",
    "end": "649310"
  },
  {
    "text": "okay all right go back all right so",
    "start": "649310",
    "end": "653000"
  },
  {
    "text": "that's that's a a syncretic sujin that's",
    "start": "653000",
    "end": "654950"
  },
  {
    "text": "my favorite thing nor I like my process",
    "start": "654950",
    "end": "659240"
  },
  {
    "text": "to have single threaded and I don't care",
    "start": "659240",
    "end": "661610"
  },
  {
    "text": "about multi-threaded I'm gonna use",
    "start": "661610",
    "end": "663590"
  },
  {
    "text": "asynchronous execution",
    "start": "663590",
    "end": "665890"
  },
  {
    "text": "all this mess of synchronous",
    "start": "665890",
    "end": "668480"
  },
  {
    "text": "asynchronous and multi-threaded some",
    "start": "668480",
    "end": "670520"
  },
  {
    "text": "people said if all that we are multi",
    "start": "670520",
    "end": "674420"
  },
  {
    "text": "processing guys multi processing I'm",
    "start": "674420",
    "end": "676880"
  },
  {
    "text": "also with this team multi processing and",
    "start": "676880",
    "end": "679430"
  },
  {
    "text": "I'm gonna define it the way I understand",
    "start": "679430",
    "end": "682940"
  },
  {
    "text": "it if if that doesn't make sense let me",
    "start": "682940",
    "end": "685940"
  },
  {
    "text": "know or if he if you disagree let me",
    "start": "685940",
    "end": "688310"
  },
  {
    "text": "know because I would love to learn how",
    "start": "688310",
    "end": "690410"
  },
  {
    "text": "do you perceive this so multi processing",
    "start": "690410",
    "end": "692780"
  },
  {
    "text": "the idea of spin up instead of splitting",
    "start": "692780",
    "end": "697520"
  },
  {
    "text": "up threads in a single process which",
    "start": "697520",
    "end": "701120"
  },
  {
    "text": "shares the same resource of the process",
    "start": "701120",
    "end": "702800"
  },
  {
    "text": "right what the heck is that",
    "start": "702800",
    "end": "705550"
  },
  {
    "text": "okay so instead of spinning up multiple",
    "start": "705550",
    "end": "709250"
  },
  {
    "text": "threads in a process spit up just unique",
    "start": "709250",
    "end": "712990"
  },
  {
    "text": "processes with their own beautiful",
    "start": "712990",
    "end": "715940"
  },
  {
    "text": "memory structure with their own resource",
    "start": "715940",
    "end": "718460"
  },
  {
    "text": "with their own everything and then what",
    "start": "718460",
    "end": "720740"
  },
  {
    "text": "do you do you just communicate between",
    "start": "720740",
    "end": "723350"
  },
  {
    "text": "them use inter process communication you",
    "start": "723350",
    "end": "726470"
  },
  {
    "text": "can use a centralized Redis database and",
    "start": "726470",
    "end": "729310"
  },
  {
    "text": "yeah there are many ways to communicate",
    "start": "729310",
    "end": "731660"
  },
  {
    "text": "between processes you can use sockets",
    "start": "731660",
    "end": "733730"
  },
  {
    "text": "between them I know it's a little bit",
    "start": "733730",
    "end": "735350"
  },
  {
    "text": "overkill but you can list literally",
    "start": "735350",
    "end": "737480"
  },
  {
    "text": "listen on a server here localhost",
    "start": "737480",
    "end": "739160"
  },
  {
    "text": "localhost localhost and ports and",
    "start": "739160",
    "end": "740960"
  },
  {
    "text": "communicate with port and all the",
    "start": "740960",
    "end": "742880"
  },
  {
    "text": "communication will happen with ccp's",
    "start": "742880",
    "end": "745280"
  },
  {
    "text": "right that's fine it's all localhost",
    "start": "745280",
    "end": "748880"
  },
  {
    "text": "anyway who cares you can do that people",
    "start": "748880",
    "end": "750710"
  },
  {
    "text": "do this absolutely fine right there are",
    "start": "750710",
    "end": "754100"
  },
  {
    "text": "some limitations but here's one example",
    "start": "754100",
    "end": "756920"
  },
  {
    "text": "where multi process is actually good",
    "start": "756920",
    "end": "758630"
  },
  {
    "text": "let's say you want write a function that",
    "start": "758630",
    "end": "763030"
  },
  {
    "text": "brute-force a password that example I",
    "start": "763480",
    "end": "767570"
  },
  {
    "text": "know but you want to write it so that",
    "start": "767570",
    "end": "770740"
  },
  {
    "text": "multi-threaded application",
    "start": "770740",
    "end": "772450"
  },
  {
    "text": "multiprocessors and asynchronous write",
    "start": "772450",
    "end": "774680"
  },
  {
    "text": "the best way to write it in my opinion",
    "start": "774680",
    "end": "776750"
  },
  {
    "text": "is use a multi processor because multi",
    "start": "776750",
    "end": "779630"
  },
  {
    "text": "process can be spin up on multiple not",
    "start": "779630",
    "end": "781580"
  },
  {
    "text": "just judgin the same machine could be",
    "start": "781580",
    "end": "783290"
  },
  {
    "text": "scaled to run on multiple machines as",
    "start": "783290",
    "end": "786440"
  },
  {
    "text": "well alright and i believe this is",
    "start": "786440",
    "end": "788240"
  },
  {
    "text": "essentially how containers work in a",
    "start": "788240",
    "end": "790910"
  },
  {
    "text": "nutshell they're more isolated than a",
    "start": "790910",
    "end": "792740"
  },
  {
    "text": "process but sure but here's a here is a",
    "start": "792740",
    "end": "795980"
  },
  {
    "text": "good problem I want",
    "start": "795980",
    "end": "799010"
  },
  {
    "text": "- this is a hash right md5 hash and I",
    "start": "799010",
    "end": "803029"
  },
  {
    "text": "want to know I want to reverse it which",
    "start": "803029",
    "end": "805370"
  },
  {
    "text": "is an almost an impossible problem",
    "start": "805370",
    "end": "807760"
  },
  {
    "text": "impossible it is a very hard problem to",
    "start": "807760",
    "end": "810290"
  },
  {
    "text": "solve so what do you do well you",
    "start": "810290",
    "end": "813380"
  },
  {
    "text": "basically come up with garbage strings",
    "start": "813380",
    "end": "816560"
  },
  {
    "text": "and try to hash it and see if they match",
    "start": "816560",
    "end": "819019"
  },
  {
    "text": "it and the string matches the hash of",
    "start": "819019",
    "end": "821209"
  },
  {
    "text": "this thing matches the hash that you",
    "start": "821209",
    "end": "822980"
  },
  {
    "text": "were given that means that's an input is",
    "start": "822980",
    "end": "824899"
  },
  {
    "text": "a candidate input right well one machine",
    "start": "824899",
    "end": "830480"
  },
  {
    "text": "can just take a string and then just",
    "start": "830480",
    "end": "833540"
  },
  {
    "text": "loop through and take a dictionary a",
    "start": "833540",
    "end": "835760"
  },
  {
    "text": "rainbow table and just loop through all",
    "start": "835760",
    "end": "837740"
  },
  {
    "text": "of them and then generally start",
    "start": "837740",
    "end": "839300"
  },
  {
    "text": "generating the hash that's absolutely",
    "start": "839300",
    "end": "840860"
  },
  {
    "text": "fun but here's the thing you can have",
    "start": "840860",
    "end": "844850"
  },
  {
    "text": "multiple processes throw multiple",
    "start": "844850",
    "end": "846680"
  },
  {
    "text": "processes at the problem and you say",
    "start": "846680",
    "end": "848480"
  },
  {
    "text": "okay you process one take this rainbow",
    "start": "848480",
    "end": "851600"
  },
  {
    "text": "table you process to take this",
    "start": "851600",
    "end": "853850"
  },
  {
    "text": "dictionary from A to M and this process",
    "start": "853850",
    "end": "858050"
  },
  {
    "text": "take from n to Z right and so on",
    "start": "858050",
    "end": "861410"
  },
  {
    "text": "you can stop splitting a problem and",
    "start": "861410",
    "end": "863360"
  },
  {
    "text": "multiple process so your multi process",
    "start": "863360",
    "end": "866269"
  },
  {
    "text": "sink right and if you're kind of hip",
    "start": "866269",
    "end": "869029"
  },
  {
    "text": "right and it's like yeah if you're hip",
    "start": "869029",
    "end": "871970"
  },
  {
    "text": "you can use a reverse proxy send that",
    "start": "871970",
    "end": "875120"
  },
  {
    "text": "problem to reverse proxy and let the",
    "start": "875120",
    "end": "876620"
  },
  {
    "text": "reverse proxy actually divide the",
    "start": "876620",
    "end": "879199"
  },
  {
    "text": "problem you can write logic in the",
    "start": "879199",
    "end": "881149"
  },
  {
    "text": "reverse proxy I believe it's a proxy",
    "start": "881149",
    "end": "882589"
  },
  {
    "text": "Ingenix allow you to write some checks",
    "start": "882589",
    "end": "884630"
  },
  {
    "text": "at least lower code to actually split",
    "start": "884630",
    "end": "887779"
  },
  {
    "text": "Hey oh you yours",
    "start": "887779",
    "end": "890600"
  },
  {
    "text": "this server spin up a container or",
    "start": "890600",
    "end": "893720"
  },
  {
    "text": "multiple containers and throw some",
    "start": "893720",
    "end": "895790"
  },
  {
    "text": "problems at it it's like between this",
    "start": "895790",
    "end": "897079"
  },
  {
    "text": "and this and you server between this and",
    "start": "897079",
    "end": "898970"
  },
  {
    "text": "this and you between this and this and",
    "start": "898970",
    "end": "900260"
  },
  {
    "text": "so you're kinda multi-processing twindom",
    "start": "900260",
    "end": "903170"
  },
  {
    "text": "hadoop kinda work the same way as well",
    "start": "903170",
    "end": "905720"
  },
  {
    "text": "but yeah so that's essentially a multi",
    "start": "905720",
    "end": "908240"
  },
  {
    "text": "processing that's in the way I see it",
    "start": "908240",
    "end": "910579"
  },
  {
    "text": "might be wrong but that one's I can",
    "start": "910579",
    "end": "913220"
  },
  {
    "text": "brief discussion between synchronous",
    "start": "913220",
    "end": "915980"
  },
  {
    "text": "asynchronous multi-threading and multi",
    "start": "915980",
    "end": "919819"
  },
  {
    "text": "processing guys I hope you enjoyed this",
    "start": "919819",
    "end": "921920"
  },
  {
    "text": "video you guys see you in the next one",
    "start": "921920",
    "end": "924649"
  },
  {
    "text": "keep up those good good questions coming",
    "start": "924649",
    "end": "926899"
  },
  {
    "text": "guys I love them so much get see in the",
    "start": "926899",
    "end": "929959"
  },
  {
    "text": "next one you guys stay safe out there",
    "start": "929959",
    "end": "933188"
  }
]