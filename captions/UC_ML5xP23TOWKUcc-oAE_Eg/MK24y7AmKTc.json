[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "the other day I made a video about the current state of my SQL the database",
    "start": "280",
    "end": "7000"
  },
  {
    "text": "specifically version 8 uh there are a lot of a my SQL Community is in a little",
    "start": "7000",
    "end": "13559"
  },
  {
    "text": "bit of a bumpy ride and I talked about this in detailed go watch that video if",
    "start": "13559",
    "end": "18560"
  },
  {
    "text": "you're interested so you see the challenges that my SQL the the the recent uh you know",
    "start": "18560",
    "end": "25840"
  },
  {
    "text": "downish fall of my SQL and does doesn't mean my SQL is done it's a bumpy ride I",
    "start": "25840",
    "end": "34360"
  },
  {
    "text": "think they'll pick up pick back up there are lot so many decisions that were made",
    "start": "34360",
    "end": "40600"
  },
  {
    "text": "in my SQL 8 that led to critical bugs performance degradation",
    "start": "40600",
    "end": "47039"
  },
  {
    "text": "regressions other stuff as well you know slowness in general but these are",
    "start": "47039",
    "end": "52920"
  },
  {
    "text": "getting fixed know with my SQL the latest versions I think nine okay so",
    "start": "52920",
    "end": "59320"
  },
  {
    "text": "made a video about that lesson learned all of that stuff my squel is trying to",
    "start": "59320",
    "end": "64360"
  },
  {
    "text": "pick that up so but but but in this particular video I want to talk about",
    "start": "64360",
    "end": "70240"
  },
  {
    "text": "the good things the the the Beauties the juices the gold",
    "start": "70240",
    "end": "76320"
  },
  {
    "text": "nuggets or nuggets the gold nuggets in my SQL 8 that we as Engineers love you know I",
    "start": "76320",
    "end": "87479"
  },
  {
    "text": "always love these kind of featur features that improve the performance",
    "start": "87479",
    "end": "93079"
  },
  {
    "text": "and you cannot build such features unless you understand how stuff works",
    "start": "93079",
    "end": "98759"
  },
  {
    "text": "under the hood this net so in this particular case I'm talking about B plus",
    "start": "98759",
    "end": "107360"
  },
  {
    "text": "3es or just B3 for General every time we say B3 we mean plus b plus three in",
    "start": "107360",
    "end": "112600"
  },
  {
    "text": "databases B3 the original OGB Tre is not used in databases you know because we",
    "start": "112600",
    "end": "119039"
  },
  {
    "text": "love this and leaf B so in this video I want to talk about this Improvement the",
    "start": "119039",
    "end": "124320"
  },
  {
    "text": "evolution of specifically MySQL 8 anod",
    "start": "124320",
    "end": "130560"
  },
  {
    "text": "DB B3 optimization right so this is a little",
    "start": "130560",
    "end": "136200"
  },
  {
    "text": "bit of an advanc kind of video If you will but what I want to do is I will",
    "start": "136200",
    "end": "141640"
  },
  {
    "text": "talk about briefly what B+ 3 are I'm going to show you a little bit of a nice",
    "start": "141640",
    "end": "146879"
  },
  {
    "text": "visualization from the University of San Fran Frisco and then uh and then go back to",
    "start": "146879",
    "end": "154519"
  },
  {
    "text": "actual blog written by none other than B I think that's how I pronounce his name",
    "start": "154519",
    "end": "161480"
  },
  {
    "text": "he's a MySQL uh developer and he writes amazing blogs right at least the ones I",
    "start": "161480",
    "end": "168599"
  },
  {
    "text": "I can read in English the rest are are Chinese and my Chinese is not amazing of",
    "start": "168599",
    "end": "175760"
  },
  {
    "text": "course so how about we jump into it you guys so this comes from",
    "start": "175760",
    "end": "182680"
  },
  {
    "start": "180000",
    "end": "720000"
  },
  {
    "text": "biao the evolution of anod B3 latch optimization we'll come to what that",
    "start": "182680",
    "end": "190200"
  },
  {
    "text": "means but essentially when you try to change an internal data",
    "start": "190200",
    "end": "196360"
  },
  {
    "text": "structure one and you have a multi-threaded system like a database",
    "start": "196360",
    "end": "202239"
  },
  {
    "text": "system which is you have to have multi-threaded with databases of course or multi-processes doesn't have to be",
    "start": "202239",
    "end": "208360"
  },
  {
    "text": "multi-threaded then you run into problems and these",
    "start": "208360",
    "end": "213959"
  },
  {
    "text": "problems are concurrency and RIS condition when updating the same memory data structure right we know about these",
    "start": "213959",
    "end": "220840"
  },
  {
    "text": "problems they've been there since the dawn of time so to solve these you need",
    "start": "220840",
    "end": "226560"
  },
  {
    "text": "to lock this particular data structure right and locking involves so",
    "start": "226560",
    "end": "232720"
  },
  {
    "text": "many other you know certain techniques to do so but before we jump into the",
    "start": "232720",
    "end": "238400"
  },
  {
    "text": "problem in my SQL 5.6 and how it was addressed in my SQL 8 I want to go",
    "start": "238400",
    "end": "246840"
  },
  {
    "text": "through B+ 3 visualization V",
    "start": "246840",
    "end": "253599"
  },
  {
    "text": "visualization so you see b+3 is a beautiful data structure that allows one",
    "start": "253599",
    "end": "261479"
  },
  {
    "text": "to insert values and read the values all right and in in a by eliminating",
    "start": "261479",
    "end": "271720"
  },
  {
    "text": "vast amount of entries when you read so so inserts are relatively cheap reads",
    "start": "272479",
    "end": "280639"
  },
  {
    "text": "are very fast because you go through certain elimination techniques",
    "start": "280639",
    "end": "288320"
  },
  {
    "text": "right and I'm going to go through some example here so I'm not going to go details you can you can check out my",
    "start": "288320",
    "end": "294440"
  },
  {
    "text": "video and my course on this if you're interested but uh a B3 consist of nodes",
    "start": "294440",
    "end": "302919"
  },
  {
    "text": "and a node in a database is just a page we just call it node and there is like a number of element right and this called",
    "start": "302919",
    "end": "310039"
  },
  {
    "text": "a degree how many how many elements spare node you can put so I'm going to",
    "start": "310039",
    "end": "315840"
  },
  {
    "text": "put the maximum as three in databases is way more of course how many element you",
    "start": "315840",
    "end": "321199"
  },
  {
    "text": "can do that you can put in a given uh node and in database is a little bit",
    "start": "321199",
    "end": "326960"
  },
  {
    "text": "different it's calculated different because you don't really know how many rows you can put but you know the fix",
    "start": "326960",
    "end": "332600"
  },
  {
    "text": "size nodes or Pages or fixed size and you calculate the number of rows the other way so the degree is derived based",
    "start": "332600",
    "end": "339000"
  },
  {
    "text": "on the Sid right we play it this way so if I now insert a new value you",
    "start": "339000",
    "end": "345440"
  },
  {
    "text": "can see that the first node that is created is called one node one",
    "start": "345440",
    "end": "351840"
  },
  {
    "text": "right and then I insert the value of two you can see that the same node or the",
    "start": "351840",
    "end": "358880"
  },
  {
    "text": "same page got another row with the value of two then I insert a value of",
    "start": "358880",
    "end": "364319"
  },
  {
    "text": "three and you can see that immediately I reach the maximum which is three so we",
    "start": "364319",
    "end": "369800"
  },
  {
    "text": "split the root node and now what we have is something called The Leaf pages so",
    "start": "369800",
    "end": "375800"
  },
  {
    "text": "now I have a root node and I have the leaf Pages Leaf pages is where the",
    "start": "375800",
    "end": "381400"
  },
  {
    "text": "actual data is stored okay they very critical to know understand this concept",
    "start": "381400",
    "end": "386680"
  },
  {
    "text": "of leaf page so now if I want to find let's insert actually another value four",
    "start": "386680",
    "end": "394160"
  },
  {
    "text": "okay and you can see that you started splitting and started balancing this",
    "start": "394880",
    "end": "400199"
  },
  {
    "text": "three as you inserting values so now we have two and three in the root to the left side of the loot anything less than",
    "start": "400199",
    "end": "406599"
  },
  {
    "text": "or equal to to the right side uh anything uh greater or or equal to the",
    "start": "406599",
    "end": "413599"
  },
  {
    "text": "to the right hand side so three and four were there two one and two is there and",
    "start": "413599",
    "end": "419000"
  },
  {
    "text": "you duplicate at these values because you want every single value to be found in the leaf Pages because that's your",
    "start": "419000",
    "end": "424720"
  },
  {
    "text": "data this is where your data is this is just how we can reach you so now if I'm",
    "start": "424720",
    "end": "430479"
  },
  {
    "text": "finding four what happen is we look at the root node and say all right uh four",
    "start": "430479",
    "end": "436080"
  },
  {
    "text": "is greater than three so we have to go to the right hand side and by that we eliminated all this stuff and that's the",
    "start": "436080",
    "end": "442919"
  },
  {
    "text": "trick right so if we keep inserting values you know eventually",
    "start": "442919",
    "end": "450160"
  },
  {
    "text": "we will get this middle tier which is",
    "start": "450160",
    "end": "455440"
  },
  {
    "text": "what what is called um internal nodes or non Leaf pages and",
    "start": "455440",
    "end": "463840"
  },
  {
    "text": "so this is what it's important so now if I find Value 88 right if I want to find 88 we go to the root oh 88 is greater",
    "start": "463840",
    "end": "472520"
  },
  {
    "text": "than three go right oh 88 right 88 greater than 66 so go right and then so",
    "start": "472520",
    "end": "478199"
  },
  {
    "text": "you're doing just a nice comparison which is very cheap yeah CPU operation but very cheap right uh I'm going to",
    "start": "478199",
    "end": "484120"
  },
  {
    "text": "zoom in so you can see the stuff actually I'm going to yes maybe better this way right yes yeah you see very",
    "start": "484120",
    "end": "492400"
  },
  {
    "text": "nice right and you keep inserting you keep inserting values you can insert duplicates that's fine right index is",
    "start": "492400",
    "end": "500240"
  },
  {
    "text": "doesn't have to be unique right and then that's it you'll end up with these values and leave pages and the leaf",
    "start": "500240",
    "end": "506919"
  },
  {
    "text": "pages will chain they chain together right and this chain is very critical",
    "start": "506919",
    "end": "512399"
  },
  {
    "text": "it's actually not just one way chain it's a two-way chain right at least in databases so you can go back and forth",
    "start": "512399",
    "end": "519399"
  },
  {
    "text": "with chains all right so if I find technically if I want to do a range scan",
    "start": "519399",
    "end": "525000"
  },
  {
    "text": "right uh finding values between two and five I go I find two and then I just",
    "start": "525000",
    "end": "532519"
  },
  {
    "text": "don't have to go through an internal no just jump jump through this until I find",
    "start": "532519",
    "end": "537600"
  },
  {
    "text": "what I want right so now if you understand what's going on here you'll see that I'm modif I'm",
    "start": "537600",
    "end": "544360"
  },
  {
    "text": "reading and I'm writing to the pages right so if I let's let's write another",
    "start": "544360",
    "end": "549920"
  },
  {
    "text": "value 77 right so you can see that 77 po po po poop we read read and we we keep",
    "start": "549920",
    "end": "556440"
  },
  {
    "text": "splitting we're modifying the structure of the B3 as we're as we splitting these",
    "start": "556440",
    "end": "562880"
  },
  {
    "text": "notes because we're reaching the max degree right the three we cannot exceed three remember H and and of course in",
    "start": "562880",
    "end": "568920"
  },
  {
    "text": "database that that number would be could be a thousand who knows right cuz cuz it",
    "start": "568920",
    "end": "574760"
  },
  {
    "text": "depends how many depends on the data type of your uh the table you're indexing and did I mention that of",
    "start": "574760",
    "end": "581959"
  },
  {
    "text": "course this indexes are based on b3s and those are used to you know eliminate",
    "start": "581959",
    "end": "588720"
  },
  {
    "text": "massive amount of entries to go exactly to the beauty to the Fine stuff you're",
    "start": "588720",
    "end": "594959"
  },
  {
    "text": "looking for so you can see that I'm reading and I'm writing I'm splitting",
    "start": "594959",
    "end": "600160"
  },
  {
    "text": "some of these stuff right so if I'm writing something and I happen to touch",
    "start": "600160",
    "end": "607720"
  },
  {
    "text": "just the leaf page then I need any page essentially that I'm writing to I need",
    "start": "607720",
    "end": "615040"
  },
  {
    "text": "to lock it because if you don't lock it you get into problems because let's say",
    "start": "615040",
    "end": "622200"
  },
  {
    "text": "I'm writing to this Leaf page 7788 but then someone is reading at the",
    "start": "622200",
    "end": "628600"
  },
  {
    "text": "same time you don't want that right because what if you wrote you they read",
    "start": "628600",
    "end": "634720"
  },
  {
    "text": "something and then you wrote so they are reading an old value you don't want that you want them to always read the latest",
    "start": "634720",
    "end": "642000"
  },
  {
    "text": "right you don't want them to miss a value and same thing you don't want two people writing to the same data",
    "start": "642000",
    "end": "647480"
  },
  {
    "text": "structure two people writing to the same page like if I read a page I wrote something and I flush the page back back",
    "start": "647480",
    "end": "653120"
  },
  {
    "text": "to memory from the CPU then what is happening is uh both Maybe um two",
    "start": "653120",
    "end": "660320"
  },
  {
    "text": "threads writing to the same page two threads on different cores they both read they both try to write and they",
    "start": "660320",
    "end": "666519"
  },
  {
    "text": "overwrite each other's value so lock is very very critical and there are operations in the CPU that like compare",
    "start": "666519",
    "end": "673680"
  },
  {
    "text": "and swap but they're limited you know they are limited for for certain values",
    "start": "673680",
    "end": "678880"
  },
  {
    "text": "right like base integers or not a whole memory data structure does that make sense so you work either with an atomic",
    "start": "678880",
    "end": "687120"
  },
  {
    "text": "operation in the CPU to ensure atom or you use semaphor mutexes things that",
    "start": "687120",
    "end": "695120"
  },
  {
    "text": "the OS gives you to serialize that's the word I'm looking for you want to",
    "start": "695120",
    "end": "700320"
  },
  {
    "text": "serialize you know it's like if two people are trying to access the same thing serialize them hey you came in a",
    "start": "700320",
    "end": "707680"
  },
  {
    "text": "microsc before this guy so there is a person a Persona that manages this",
    "start": "707680",
    "end": "714639"
  },
  {
    "text": "locking scene which is the operating system now case right so with that out",
    "start": "714639",
    "end": "720000"
  },
  {
    "start": "720000",
    "end": "900000"
  },
  {
    "text": "of the way that's how b3s work now we go into",
    "start": "720000",
    "end": "725079"
  },
  {
    "text": "this beautiful blog by B chiao let's read this blur a little bit in anod",
    "start": "725079",
    "end": "733399"
  },
  {
    "text": "B3 has two main type of locks index lock and a page lock now page is a node as we",
    "start": "733399",
    "end": "741680"
  },
  {
    "text": "talked about right index log refers to the log on the",
    "start": "741680",
    "end": "746720"
  },
  {
    "text": "entire index so we're talking about now we're dive into how anod was implemented",
    "start": "746720",
    "end": "751760"
  },
  {
    "text": "with luxs don't stick to this implementation you can build your own this is just how anod DB just happen to",
    "start": "751760",
    "end": "759000"
  },
  {
    "text": "implement it okay so index lock refers to the lock on the entire index so they",
    "start": "759000",
    "end": "765880"
  },
  {
    "text": "are loing locking the entire index now what do a lock really means here right",
    "start": "765880",
    "end": "773399"
  },
  {
    "text": "so there are actually two types of locks in that concept of a lock itself there",
    "start": "773399",
    "end": "779639"
  },
  {
    "text": "is a shared lock and exclusive lock and you might know what's the difference uh shared lock or call read locks that",
    "start": "779639",
    "end": "786360"
  },
  {
    "text": "means to obtain something to read it and you want to ensure that no one changes it you obtain a shared lock and if",
    "start": "786360",
    "end": "792839"
  },
  {
    "text": "there's an object item that is shared locked you can also obtain another",
    "start": "792839",
    "end": "800720"
  },
  {
    "text": "shared lock on the same object as another thread so he all right I know there's another thread has a share loock",
    "start": "800720",
    "end": "807639"
  },
  {
    "text": "but I also want to make sure that nobody else changes so youire another shared lock so shared lock and shared lock they",
    "start": "807639",
    "end": "813760"
  },
  {
    "text": "are not conflicting but then exclusive lock is the other sign of the equation",
    "start": "813760",
    "end": "819320"
  },
  {
    "text": "if you want to write something and you want to make sure no one no readers because we talked about that you don't",
    "start": "819320",
    "end": "825720"
  },
  {
    "text": "want to write something and someone is reading at the same time and I'm not talking about databases transactions",
    "start": "825720",
    "end": "831600"
  },
  {
    "text": "here let's just and this is internal stuff you're talking about the page in",
    "start": "831600",
    "end": "837240"
  },
  {
    "text": "memory you need to ensure this level of correctness at that level",
    "start": "837240",
    "end": "843320"
  },
  {
    "text": "now so exclusive locks to obtain exclusive",
    "start": "843320",
    "end": "848639"
  },
  {
    "text": "lock there should be no shared locks and the moment you obtain exclusive lock that guarantees you there will not be",
    "start": "848639",
    "end": "854759"
  },
  {
    "text": "any shared locks any readers because the if there is an exclusive lock in an item",
    "start": "854759",
    "end": "861720"
  },
  {
    "text": "and a thread wants to read and wants to obtain a sh shared shared luck on that",
    "start": "861720",
    "end": "867120"
  },
  {
    "text": "item or that page or that index then it will be blocked you block readers you",
    "start": "867120",
    "end": "873800"
  },
  {
    "text": "can block writers based on that okay simple concept very ubiquitous in the",
    "start": "873800",
    "end": "879600"
  },
  {
    "text": "software engineering community so page lock page index lock",
    "start": "879600",
    "end": "886639"
  },
  {
    "text": "refers to this entire structure what we talked about this whole thing this whole",
    "start": "886639",
    "end": "892120"
  },
  {
    "text": "thing is you're locking the whole index it's very critical to lock the index says hey that that that's what ANB",
    "start": "892120",
    "end": "900040"
  },
  {
    "start": "900000",
    "end": "1020000"
  },
  {
    "text": "decides like you know what we'll just lock in the whole thing I don't this a",
    "start": "900040",
    "end": "905079"
  },
  {
    "text": "simple beautiful elegant design does it have limitations of",
    "start": "905079",
    "end": "912519"
  },
  {
    "text": "course what doesn't but this this beauty of",
    "start": "912519",
    "end": "917639"
  },
  {
    "text": "implicitly acquiring an index lock whether shared or exclusive doesn't",
    "start": "917639",
    "end": "922759"
  },
  {
    "text": "matter right that locks the whole index and this is what makes 5. simple at the",
    "start": "922759",
    "end": "930240"
  },
  {
    "text": "same time it made it a little bit less performance let's talk about that the second type of lock is Page lock so the",
    "start": "930240",
    "end": "938720"
  },
  {
    "text": "page itself the leaf page the internal page the root page this itself can also",
    "start": "938720",
    "end": "945560"
  },
  {
    "text": "be locked all right so if I'm doing a a leaf page",
    "start": "945560",
    "end": "952120"
  },
  {
    "text": "modification I lock it if I'm doing a leaf page read remember what we did with",
    "start": "952120",
    "end": "957560"
  },
  {
    "text": "the uh the B3 visualization I'm reading I found the leaf page you have to lock",
    "start": "957560",
    "end": "963759"
  },
  {
    "text": "it a shared lock he I'm about read it just to just for that fraction of a",
    "start": "963759",
    "end": "969759"
  },
  {
    "text": "millisecond you shared lock it read release you don't want to leave the lock",
    "start": "969759",
    "end": "975480"
  },
  {
    "text": "forever of course right uh that would be bad right",
    "start": "975480",
    "end": "980519"
  },
  {
    "text": "so this in this particular case page locks right now in 5.6 now let's go to",
    "start": "980519",
    "end": "986680"
  },
  {
    "text": "the original design 5.6 old myql the myql that was actually faster I know",
    "start": "986680",
    "end": "994560"
  },
  {
    "text": "it's ironic right but my 5.6 if you didn't watch that video is faster than",
    "start": "994560",
    "end": "1001519"
  },
  {
    "text": "80 in most of the use cases there are used cases where 80 is faster than 5.6",
    "start": "1001519",
    "end": "1009360"
  },
  {
    "text": "and I talked about all of those right but in this particular case let's focus on on on the design here let's go",
    "start": "1009360",
    "end": "1015319"
  },
  {
    "text": "through a query request here and I want you to little bit find the visualization here cuz it's",
    "start": "1015319",
    "end": "1022399"
  },
  {
    "start": "1020000",
    "end": "1188000"
  },
  {
    "text": "not all it's not all it's not accurate",
    "start": "1022399",
    "end": "1028199"
  },
  {
    "text": "to to what I'm about to explain right uh don't don't mind the values and the",
    "start": "1028199",
    "end": "1035160"
  },
  {
    "text": "we're going to talk through it right it's not fully I wish I wish I wish they draw a",
    "start": "1035160",
    "end": "1041280"
  },
  {
    "text": "diagram for every single operation but this is just for the right actually",
    "start": "1041280",
    "end": "1046600"
  },
  {
    "text": "right when when both people are writing so so let's do this the B+ 3 index is",
    "start": "1046600",
    "end": "1053240"
  },
  {
    "text": "locked with an S lock so I'm doing a query select star ROM table where ID",
    "start": "1053240",
    "end": "1060520"
  },
  {
    "text": "equal one ID is index so I'm looking going through the index I want to find",
    "start": "1060520",
    "end": "1065799"
  },
  {
    "text": "the value what one so I go before you do anything you is lock the index you share",
    "start": "1065799",
    "end": "1073799"
  },
  {
    "text": "loock that index okay just because hey you're just reading you're not really",
    "start": "1073799",
    "end": "1079320"
  },
  {
    "text": "modifying it right you're just reading in this particular case and so forget about these Nables for now right I'm",
    "start": "1079320",
    "end": "1086200"
  },
  {
    "text": "just reading so someone is reading you just read which is nice you s lock right",
    "start": "1086200",
    "end": "1093559"
  },
  {
    "text": "the leaf node is locked with an S lock and the index is released after finding",
    "start": "1093559",
    "end": "1099080"
  },
  {
    "text": "the leaf note because you're querying right because you query something right and it's lock the index then you go",
    "start": "1099080",
    "end": "1105120"
  },
  {
    "text": "through the route you go through internal not and here's what is most important the internal nodes and the",
    "start": "1105120",
    "end": "1111240"
  },
  {
    "text": "root you don't lock those that's the design of 5.6 you just go Breeze through",
    "start": "1111240",
    "end": "1116320"
  },
  {
    "text": "them you don't lock them for purpose why because we locked already the index so that's sufficient and that's purposely",
    "start": "1116320",
    "end": "1124480"
  },
  {
    "text": "was done to minimize the number of locks because if you have a lot of pages and you're walking this data structure and",
    "start": "1124480",
    "end": "1131640"
  },
  {
    "text": "you're locking everything to them that was expensive cuz the more locks you",
    "start": "1131640",
    "end": "1136840"
  },
  {
    "text": "have the more memory management the more C you overhead the more concurrency problems you have right so that 5.6",
    "start": "1136840",
    "end": "1143360"
  },
  {
    "text": "design was hey let's lock the whole index instead read and lock right we",
    "start": "1143360",
    "end": "1149039"
  },
  {
    "text": "lock that and we go you find you find I found the Lea page you also do an S lock",
    "start": "1149039",
    "end": "1154960"
  },
  {
    "text": "forget about this now right assume this is ANS lock because we're just reading now I'm reading once you finish reading",
    "start": "1154960",
    "end": "1163480"
  },
  {
    "text": "obtain an S lock on the leaf page read and then release",
    "start": "1163480",
    "end": "1169440"
  },
  {
    "text": "the S lock and then after you're done you just release also the index is",
    "start": "1169440",
    "end": "1177960"
  },
  {
    "text": "lock because you're done your operation is finished right now let's go with an example where",
    "start": "1177960",
    "end": "1185840"
  },
  {
    "text": "actually we're modifying h a page right if we're",
    "start": "1185840",
    "end": "1191280"
  },
  {
    "start": "1188000",
    "end": "1640000"
  },
  {
    "text": "modifying a page I.E I'm writing to the table I'm writing a new RW which means I",
    "start": "1191280",
    "end": "1198799"
  },
  {
    "text": "have a new ID which means I need to update the index ID right with this new",
    "start": "1198799",
    "end": "1204679"
  },
  {
    "text": "value so what we need to do is insert something like we showed in the visualization I'm inserting something in",
    "start": "1204679",
    "end": "1211480"
  },
  {
    "text": "this beautiful B tree what do we do in the insertion an insertion is nothing but a leaf page modification",
    "start": "1211480",
    "end": "1220120"
  },
  {
    "text": "request right if it if we're lucky and the insert operation that we're about to",
    "start": "1220400",
    "end": "1226720"
  },
  {
    "text": "do right now it goes this same page here I'm about to modify the leaf page what",
    "start": "1226720",
    "end": "1232960"
  },
  {
    "text": "do you do same thing you acquire a shared lock not an exclusive lock yeah",
    "start": "1232960",
    "end": "1238520"
  },
  {
    "text": "I'm writing but wait a minute let's find the page first then we'll deal with writing that's smart why because you",
    "start": "1238520",
    "end": "1245320"
  },
  {
    "text": "don't you don't want to lock too early right you just go and find what you",
    "start": "1245320",
    "end": "1253640"
  },
  {
    "text": "want and then in the process of querying it's like you're doing a normal query you found the page oh that's the page I",
    "start": "1253640",
    "end": "1260400"
  },
  {
    "text": "need to write to now don't do an is loock cuz you already did an is lock on the index you do an X lock on the leaf",
    "start": "1260400",
    "end": "1269440"
  },
  {
    "text": "page only boom you lock that page now we sure that nobody will ever read it and you",
    "start": "1269440",
    "end": "1276559"
  },
  {
    "text": "might fail here because someone else might be reading that look that that leaf page or not fail necessarily just",
    "start": "1276559",
    "end": "1283320"
  },
  {
    "text": "maybe you're waiting for the other thread to finish reading the Lea page right",
    "start": "1283320",
    "end": "1289480"
  },
  {
    "text": "so what do we do after finding the leaf node it is locked with an X lock for modification and the index lock is",
    "start": "1289480",
    "end": "1296919"
  },
  {
    "text": "released so once we locked the leaf page for modification we no longer need the X",
    "start": "1296919",
    "end": "1303840"
  },
  {
    "text": "lock right because now we're safe we were safe that we're traversing that tree we know that nobody changed that",
    "start": "1303840",
    "end": "1311320"
  },
  {
    "text": "tree right because we acquired an index lock on the on the index a shared lock",
    "start": "1311320",
    "end": "1316919"
  },
  {
    "text": "on the index so if I share loock that that means nobody else did an exclusive",
    "start": "1316919",
    "end": "1322640"
  },
  {
    "text": "lock on the index to modify the structure so that my structure was sound I'm good and that's why why why we",
    "start": "1322640",
    "end": "1330000"
  },
  {
    "text": "acquire an shared lock on the index so we we went through we acquire X lock we",
    "start": "1330000",
    "end": "1336159"
  },
  {
    "text": "release the X lock because we we we traversed the tree right we're good we're safe",
    "start": "1336159",
    "end": "1342440"
  },
  {
    "text": "now we write the leaf page iner in new row",
    "start": "1342440",
    "end": "1348919"
  },
  {
    "text": "done release the X lock if we are not",
    "start": "1348919",
    "end": "1354600"
  },
  {
    "text": "lucky and that leaf page cause the split because that's what happened right when",
    "start": "1354760",
    "end": "1360200"
  },
  {
    "text": "you insert a new thing in a leaf page that is and leaf pages are ordered right",
    "start": "1360200",
    "end": "1365360"
  },
  {
    "text": "the index is always ordered and if you do that what will happen is you're",
    "start": "1365360",
    "end": "1371320"
  },
  {
    "text": "you're going to stick something in the middle you need to stick oh well there's there's one two three and",
    "start": "1371320",
    "end": "1378919"
  },
  {
    "text": "five six seven and I want to insert four oh you got to push the five and three",
    "start": "1378919",
    "end": "1385039"
  },
  {
    "text": "you know and then stick your four in the middle right and then that could blow",
    "start": "1385039",
    "end": "1392360"
  },
  {
    "text": "your page and that could increase the go beyond the maximum page size or the",
    "start": "1392360",
    "end": "1399080"
  },
  {
    "text": "degree in the B3 right that cause a problem right you cannot go beyond the",
    "start": "1399080",
    "end": "1405400"
  },
  {
    "text": "fixed page size and databases so we split the page put the half the stuff here put the half stuff here chain them",
    "start": "1405400",
    "end": "1412120"
  },
  {
    "text": "again this is one of the most expensive operations in b3s page split because you",
    "start": "1412120",
    "end": "1417360"
  },
  {
    "text": "have to write desk you have to lock both Pages you have to do it's a management",
    "start": "1417360",
    "end": "1424360"
  },
  {
    "text": "nightmare that's where fill Factor comes in the picture but",
    "start": "1424360",
    "end": "1429760"
  },
  {
    "text": "now nevertheless we modified that tree and as a result we",
    "start": "1429760",
    "end": "1436760"
  },
  {
    "text": "split and that split could cause a split and a split a split goes up to the root",
    "start": "1436760",
    "end": "1442600"
  },
  {
    "text": "and this is called a schema modification uh what is it called what",
    "start": "1442600",
    "end": "1449000"
  },
  {
    "text": "do you call it schema modification operation Smo since the Le can affect the entire",
    "start": "1449000",
    "end": "1455760"
  },
  {
    "text": "path up an X loock is necessary to prevent access by other thre by preventing uh uh causing of I operation",
    "start": "1455760",
    "end": "1463559"
  },
  {
    "text": "significant flu fluctuation right so this particular case explain that hey",
    "start": "1463559",
    "end": "1469559"
  },
  {
    "text": "because if we did a structure change what we do is we now because if we feel",
    "start": "1469559",
    "end": "1477760"
  },
  {
    "text": "that if the leaf page that we acquired ex Lo on and we changed in that",
    "start": "1477760",
    "end": "1483360"
  },
  {
    "text": "particular case caused a structure modification like a page split which then splitted perhaps the internal node",
    "start": "1483360",
    "end": "1491120"
  },
  {
    "text": "which goes all the way to the root if we feel that is going to happen if we feel",
    "start": "1491120",
    "end": "1497039"
  },
  {
    "text": "which we can detect that kind of happen right then you no longer release that s lock on the",
    "start": "1497039",
    "end": "1505080"
  },
  {
    "text": "index you actually acquire you promote your s lock to an X lock you lock the",
    "start": "1505080",
    "end": "1511840"
  },
  {
    "text": "whole index and this is where problems happen most",
    "start": "1511840",
    "end": "1517880"
  },
  {
    "text": "operations will change the structure of the tree right and if that happen you",
    "start": "1517880",
    "end": "1525039"
  },
  {
    "text": "lock the entire index what happened if you lock the entire index can you guess if you lock the entire",
    "start": "1525039",
    "end": "1531320"
  },
  {
    "text": "index with an exclusive lock nobody can read nobody can read so normal queries",
    "start": "1531320",
    "end": "1540120"
  },
  {
    "text": "that you want to go through the index path they're waiting they're blocked and",
    "start": "1540120",
    "end": "1545559"
  },
  {
    "text": "that was the problem with 5.6 right and this is where it's beautifully explained here right you",
    "start": "1545559",
    "end": "1552840"
  },
  {
    "text": "modify the tree youire an X loock and all of these steps right so first of all you you're doing",
    "start": "1552840",
    "end": "1560480"
  },
  {
    "text": "an the diagrams are not the the best let's let's I wish I wish they were drawn differently maybe I'll I'll do it",
    "start": "1560480",
    "end": "1566960"
  },
  {
    "text": "in another blog but give full full you know credit of course to this blog but",
    "start": "1566960",
    "end": "1572279"
  },
  {
    "text": "essentially what you're doing is you're you're changing something you're inserting something happen to touch the",
    "start": "1572279",
    "end": "1578360"
  },
  {
    "text": "leaf page that leaf page if you're lucky you didn't split it then didn't cause",
    "start": "1578360",
    "end": "1583960"
  },
  {
    "text": "any schema modification you're good the there is an S lock on the index people still can't read the problem",
    "start": "1583960",
    "end": "1590880"
  },
  {
    "text": "happens when your change happen to cause a schema modification update which changed the",
    "start": "1590880",
    "end": "1597520"
  },
  {
    "text": "whole index we cannot trust that we need the path intact right we cannot be",
    "start": "1597520",
    "end": "1604279"
  },
  {
    "text": "splitting and changing the path of the tree while someone is traversing it that's bad that's just bad right that's",
    "start": "1604279",
    "end": "1613520"
  },
  {
    "text": "another problem with concurrency you have to retain that problem you you have",
    "start": "1613520",
    "end": "1618799"
  },
  {
    "text": "to save that so and that's the problem the main problem is because we know we",
    "start": "1618799",
    "end": "1624960"
  },
  {
    "text": "know we don't lock these intermediate nodes right as we said we only have an",
    "start": "1624960",
    "end": "1630120"
  },
  {
    "text": "index long for Simplicity you know you see how this is going there is nothing free in this",
    "start": "1630120",
    "end": "1637600"
  },
  {
    "text": "world you want Simplicity you got to suffer with certain side effects let's say right if",
    "start": "1637600",
    "end": "1646679"
  },
  {
    "start": "1640000",
    "end": "1755000"
  },
  {
    "text": "you want a simple thing one lock for the entire index you end up",
    "start": "1646679",
    "end": "1653320"
  },
  {
    "text": "with a beautiful simple design does that mean it's perfect nothing is perfect in",
    "start": "1653320",
    "end": "1659520"
  },
  {
    "text": "this life right nothing is perfect and that's",
    "start": "1659520",
    "end": "1665399"
  },
  {
    "text": "okay you have yin and yang the bad the good with everything in",
    "start": "1665399",
    "end": "1672080"
  },
  {
    "text": "life and once you ex ex accept that once",
    "start": "1672080",
    "end": "1678440"
  },
  {
    "text": "you accept that there's no perfect solution you'll be relaxed when you",
    "start": "1678440",
    "end": "1683519"
  },
  {
    "text": "code because you're not out there looking for the perfect solution",
    "start": "1683519",
    "end": "1690320"
  },
  {
    "text": "anymore what what what serves you better is get with a simple",
    "start": "1691559",
    "end": "1699200"
  },
  {
    "text": "solution that you know its drawbacks and you say hey I'm going with that it's",
    "start": "1699200",
    "end": "1706760"
  },
  {
    "text": "simple because it's simplifies coding simplifies design simplifies",
    "start": "1706760",
    "end": "1711840"
  },
  {
    "text": "architecture I know what's going on I have a handle on things but yeah is it perfect no nothing",
    "start": "1711840",
    "end": "1719559"
  },
  {
    "text": "is perfect give me one design that is perfect doesn't exist even what you",
    "start": "1719559",
    "end": "1726200"
  },
  {
    "text": "think is a perfect design right now it's not going to be perfect in 10 years",
    "start": "1726200",
    "end": "1731320"
  },
  {
    "text": "there one there will be one use case that will break it that's just how life is",
    "start": "1731320",
    "end": "1740039"
  },
  {
    "text": "yin and yang always everywhere everywhere",
    "start": "1743080",
    "end": "1750000"
  },
  {
    "text": "everywhere okay I'll step down from my soap box",
    "start": "1750000",
    "end": "1755039"
  },
  {
    "start": "1755000",
    "end": "2002000"
  },
  {
    "text": "right now and continue now we know I went to the simple design yeah what's",
    "start": "1755039",
    "end": "1761279"
  },
  {
    "text": "the drawback in case of a schema modification we're going to lock the the whole index and if that happens and",
    "start": "1761279",
    "end": "1768600"
  },
  {
    "text": "what's going to happen is we're going to starve",
    "start": "1768600",
    "end": "1773640"
  },
  {
    "text": "readers the myquel developers said no we can't be",
    "start": "1774200",
    "end": "1779919"
  },
  {
    "text": "just starving readers CU if if you have write heavy",
    "start": "1779919",
    "end": "1787440"
  },
  {
    "text": "and read heavy operations then you will feel it because those wres change the index",
    "start": "1787440",
    "end": "1795799"
  },
  {
    "text": "rapidly right and that change change will affect all these heavy concurrent",
    "start": "1795799",
    "end": "1802200"
  },
  {
    "text": "readers to the same tables I'm saying readers readers that go to the same index path right of course and this is",
    "start": "1802200",
    "end": "1809559"
  },
  {
    "text": "exacerbated by like if you have like a lot of indexes right it hurts start to feel it",
    "start": "1809559",
    "end": "1816399"
  },
  {
    "text": "so what did what do those people do in my SQL 8 right what do those people do",
    "start": "1816399",
    "end": "1823600"
  },
  {
    "text": "right what do those people do so all right let's a new shared a new lock we",
    "start": "1823600",
    "end": "1830519"
  },
  {
    "text": "call it SX lock I don't know what it stands for maybe schema modification X",
    "start": "1830519",
    "end": "1836519"
  },
  {
    "text": "lock SX lock it's an intent lock I.E",
    "start": "1836519",
    "end": "1843600"
  },
  {
    "text": "hey I'm about to change something and it it does not",
    "start": "1843600",
    "end": "1852039"
  },
  {
    "text": "conflict with s locks so if you have an SX lock you can still continue to read so",
    "start": "1852039",
    "end": "1862760"
  },
  {
    "text": "you can acquire an SX lock on the index and continue to read you might say like",
    "start": "1862760",
    "end": "1869760"
  },
  {
    "text": "isn't that a problem because uh well you're going to we're going to solve it differently wait a",
    "start": "1869760",
    "end": "1877720"
  },
  {
    "text": "minute and of course uh he also includes the PO",
    "start": "1877720",
    "end": "1884080"
  },
  {
    "text": "request where this was introduced right so this is this is the new is lock type all right and we also introduced that's",
    "start": "1884080",
    "end": "1890960"
  },
  {
    "text": "the first lock we introduced the new lock type instead of just straight up shared and exclusive locks right we have",
    "start": "1890960",
    "end": "1899399"
  },
  {
    "text": "now nonleaf page locks as well we we can",
    "start": "1899399",
    "end": "1904519"
  },
  {
    "text": "lock the pages so we we have essentially did we're doing",
    "start": "1904519",
    "end": "1911200"
  },
  {
    "text": "more to solve this problem we're doing",
    "start": "1911200",
    "end": "1916639"
  },
  {
    "text": "more so so both leaf and nonleaf Pages now have page locks so they had to of",
    "start": "1916639",
    "end": "1922480"
  },
  {
    "text": "course probably change the data structure of the page itself how it",
    "start": "1922480",
    "end": "1927679"
  },
  {
    "text": "looks like the UN Leaf page add probably couple of field metadata there to do",
    "start": "1927679",
    "end": "1933000"
  },
  {
    "text": "that right this allows for latch coupling where child node locks are acquired",
    "start": "1933000",
    "end": "1940600"
  },
  {
    "text": "before releasing parent node locks minimizing the lock range so let's go",
    "start": "1940600",
    "end": "1947159"
  },
  {
    "text": "through an example we're going through the query normal read nothing changes with reads we",
    "start": "1947159",
    "end": "1954960"
  },
  {
    "text": "shouldn't even go through that reads are still as locks but the difference is when you're reading now right forget",
    "start": "1954960",
    "end": "1962760"
  },
  {
    "text": "about this modify leav just let's say this is I'm reading not lot writing right if I'm reading and this guy is",
    "start": "1962760",
    "end": "1968559"
  },
  {
    "text": "reading we're going to acquire an shared lock on the index and on the root and on",
    "start": "1968559",
    "end": "1975320"
  },
  {
    "text": "every single internal node that we visit including the leaf page so once",
    "start": "1975320",
    "end": "1982840"
  },
  {
    "text": "I'm done I release all the locks and I release all of these guys right okay so",
    "start": "1982840",
    "end": "1988279"
  },
  {
    "text": "that is how we query in at o the only",
    "start": "1988279",
    "end": "1994159"
  },
  {
    "text": "change we're now acquiring shared locks on the internal nodes or the non-leaf",
    "start": "1994159",
    "end": "1999279"
  },
  {
    "text": "pages so what do we do when we want to change something so if we want to change",
    "start": "1999279",
    "end": "2006000"
  },
  {
    "start": "2002000",
    "end": "2280000"
  },
  {
    "text": "something right I'm inserting a new row then we do the same exact thing we",
    "start": "2006000",
    "end": "2011360"
  },
  {
    "text": "continue to find the page to find the page we have to Shared lock all the way",
    "start": "2011360",
    "end": "2018200"
  },
  {
    "text": "we found that leaf page now we're about to change that leaf page oo now I want",
    "start": "2018200",
    "end": "2025080"
  },
  {
    "text": "to change this Leaf page aquar exclus blog it's like 5.6 what's the only",
    "start": "2025080",
    "end": "2030200"
  },
  {
    "text": "difference here if you lucky and you just hey I'm not changing anything no",
    "start": "2030200",
    "end": "2037240"
  },
  {
    "text": "structure change happened I just inserted a arrow and the leaf page",
    "start": "2037240",
    "end": "2042679"
  },
  {
    "text": "happened to have a space thankfully you had a good F Factor there right and you",
    "start": "2042679",
    "end": "2048320"
  },
  {
    "text": "inserted a value nice no split happen no structure change",
    "start": "2048320",
    "end": "2054040"
  },
  {
    "text": "you're safe right people can still read can do all of that stuff but if we had a",
    "start": "2054040",
    "end": "2061520"
  },
  {
    "text": "structural change what do we do the moment we feel there is a structural change then we",
    "start": "2061520",
    "end": "2067480"
  },
  {
    "text": "have to to tell the index that hey I'm about to do a structural modification you lock the index with an X SX lock in",
    "start": "2067480",
    "end": "2075320"
  },
  {
    "text": "this particular case right and if you lock that index with SX lock you can",
    "start": "2075320",
    "end": "2081000"
  },
  {
    "text": "continue to read you can continue to do a shared lock what will be blocked is",
    "start": "2081000",
    "end": "2086679"
  },
  {
    "text": "exclusive logs which no longer are there on the index but s other SX locks will",
    "start": "2086679",
    "end": "2092320"
  },
  {
    "text": "be blocked so you cannot to do two concurrent structural modification",
    "start": "2092320",
    "end": "2098400"
  },
  {
    "text": "in 80 right just like but it's better than",
    "start": "2098400",
    "end": "2104760"
  },
  {
    "text": "well you couldn't do do it either in 5.6 right canot do two structure modification but in 56 you cann't even",
    "start": "2104760",
    "end": "2112280"
  },
  {
    "text": "write and read at the same time you can do even a structure modification and read at the same time now you can",
    "start": "2112280",
    "end": "2119880"
  },
  {
    "text": "right what's the cost we don't know right so now if that happened what",
    "start": "2119880",
    "end": "2125320"
  },
  {
    "text": "happened you do an SX loog and then what you do is remember you already shared",
    "start": "2125320",
    "end": "2131119"
  },
  {
    "text": "locked all these guys right what you can do is you start moving up to your nonleaf",
    "start": "2131119",
    "end": "2140480"
  },
  {
    "text": "pages you change this now again I'm about to split this page actually oh you want to xlock this parent go ahead and",
    "start": "2140480",
    "end": "2148000"
  },
  {
    "text": "normally just acquire an xlock on this guy and then change it now if someone",
    "start": "2148000",
    "end": "2153599"
  },
  {
    "text": "was reading you'll be blocked right so if there was a read operation that",
    "start": "2153599",
    "end": "2159160"
  },
  {
    "text": "happened to Traverse the same path as you were while changing something you'll",
    "start": "2159160",
    "end": "2165359"
  },
  {
    "text": "be blocked so blocking can still happen but the chances are rarer in this particular case right it's like how",
    "start": "2165359",
    "end": "2171680"
  },
  {
    "text": "often you going to meet a path right unless it's like a very common hot path",
    "start": "2171680",
    "end": "2177400"
  },
  {
    "text": "right so you can see that it got a little bit complex but it solved one problem did it",
    "start": "2177400",
    "end": "2185400"
  },
  {
    "text": "introduce other problems definitely it did there are still a list of optimization points that needs to happen",
    "start": "2185400",
    "end": "2192280"
  },
  {
    "text": "and so you can you you get the point now we acquired an SX locks change all this",
    "start": "2192280",
    "end": "2197359"
  },
  {
    "text": "stuff once you're done release the SX lock and then move on your Merry way",
    "start": "2197359",
    "end": "2203760"
  },
  {
    "text": "right so if you're lucky and the read operations happen to go somewhere else",
    "start": "2203760",
    "end": "2211440"
  },
  {
    "text": "right other path then you're fine if you're going the same path",
    "start": "2211440",
    "end": "2217760"
  },
  {
    "text": "then probably not it won't be very useful right because going through the same path will you will hit you're",
    "start": "2217760",
    "end": "2224079"
  },
  {
    "text": "probably going to hit an X locked non-leaf page which you cannot acquire",
    "start": "2224079",
    "end": "2230400"
  },
  {
    "text": "because remember we now acquire shared lock on the internal nodes in in at all",
    "start": "2230400",
    "end": "2235839"
  },
  {
    "text": "so this is a list of things that uh can be optimized of course there's still work that needs to happen in at all but",
    "start": "2235839",
    "end": "2243240"
  },
  {
    "text": "in general I loved this blog it tells you like there's there's things you can do to optimize this this was published",
    "start": "2243240",
    "end": "2250680"
  },
  {
    "text": "June 9th 2024 and uh I love these kind of blogs it just makes you think you",
    "start": "2250680",
    "end": "2256599"
  },
  {
    "text": "know makes you um it makes you think about how implementation are done and it",
    "start": "2256599",
    "end": "2262319"
  },
  {
    "text": "makes you actually question and as I was making these videos like what if about this what about this case what about",
    "start": "2262319",
    "end": "2267560"
  },
  {
    "text": "this case you know and you're at this point you're at the mercy of the use case what are you",
    "start": "2267560",
    "end": "2275160"
  },
  {
    "text": "doing in the database what is the workload are",
    "start": "2275160",
    "end": "2282599"
  },
  {
    "start": "2280000",
    "end": "2434000"
  },
  {
    "text": "you is it is it mostly like insert based",
    "start": "2282599",
    "end": "2288480"
  },
  {
    "text": "if you're insert based you're basically just adding New Leaf page that yeah of",
    "start": "2288480",
    "end": "2295160"
  },
  {
    "text": "course the new live Pages changes the modification right",
    "start": "2295160",
    "end": "2300280"
  },
  {
    "text": "because now you have to modify the parent to add this extra node right it says all right go here",
    "start": "2300280",
    "end": "2307640"
  },
  {
    "text": "not always though if you're updating and I'm saying when I'm saying",
    "start": "2307640",
    "end": "2314520"
  },
  {
    "text": "upd updating a value or a column that happen to be an indexed right and if",
    "start": "2314520",
    "end": "2320440"
  },
  {
    "text": "you're doing that then also depends on the type of updates right are you",
    "start": "2320440",
    "end": "2326920"
  },
  {
    "text": "updating to a values that happen to be in the middle now you're just changing stuff in the middle which just changing",
    "start": "2326920",
    "end": "2333400"
  },
  {
    "text": "the heart of the tree if you will that that going to hurt it's an",
    "start": "2333400",
    "end": "2339760"
  },
  {
    "text": "interesting problem to think about to be honest right it's almost like we're",
    "start": "2339760",
    "end": "2345760"
  },
  {
    "text": "solving You're Building I always say this you're building a general purpose thing and the problem with general",
    "start": "2345760",
    "end": "2352960"
  },
  {
    "text": "purpose thing is that you have no idea how the user will use your stuff right and if you don't know that",
    "start": "2352960",
    "end": "2361400"
  },
  {
    "text": "then you're just you you're just and shooting and hopefully you hit the hit",
    "start": "2361400",
    "end": "2367880"
  },
  {
    "text": "the jackpot you're just hoping right versus hey I'm building a database",
    "start": "2367880",
    "end": "2375200"
  },
  {
    "text": "that solves this use case that's it right that's it I'm not only building a",
    "start": "2375200",
    "end": "2381560"
  },
  {
    "text": "general purpose so this is a challenge for anything general purpose operate general purpose operating system have",
    "start": "2381560",
    "end": "2387200"
  },
  {
    "text": "the same problem general purpose databases general purpose web servers pretty much everything has the same",
    "start": "2387200",
    "end": "2394440"
  },
  {
    "text": "problems general purpose reverse proxy we've seen how uh what what cloud Fair did with to",
    "start": "2394440",
    "end": "2399720"
  },
  {
    "text": "engine X they said this general purpose reverse B doesn't work for us because our case is so unique that we",
    "start": "2399720",
    "end": "2407640"
  },
  {
    "text": "had to build Pandora pingora pingora sorry not Pandora Pandora's back that's",
    "start": "2407640",
    "end": "2413599"
  },
  {
    "text": "God of for reference but yeah regardless we love to read this",
    "start": "2413599",
    "end": "2420599"
  },
  {
    "text": "stuff and understand and you know be humbled and learn all this stuff",
    "start": "2420599",
    "end": "2428440"
  },
  {
    "text": "anyway guys uh I'll let you go this is good stuff what do you think goodbye",
    "start": "2428440",
    "end": "2435200"
  }
]