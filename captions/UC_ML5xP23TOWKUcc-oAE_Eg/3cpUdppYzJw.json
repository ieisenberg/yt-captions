[
  {
    "start": "0",
    "end": "465000"
  },
  {
    "text": "their communication between the backend application and the database itself has",
    "start": "0",
    "end": "6060"
  },
  {
    "text": "always fascinated me especially with their many many protocols",
    "start": "6060",
    "end": "12360"
  },
  {
    "text": "really custom built for this communication I'm surprised that we didn't have a standardized on a actual",
    "start": "12360",
    "end": "20279"
  },
  {
    "text": "own wire protocol for that yeah we did a standardize on the interfaces like odbc",
    "start": "20279",
    "end": "26039"
  },
  {
    "text": "and whatnot but we never actually standardize on the communication protocol between the app and the",
    "start": "26039",
    "end": "33480"
  },
  {
    "text": "database right I might be missing something but as far as I know there is no standard each",
    "start": "33480",
    "end": "40140"
  },
  {
    "text": "vendor kind of create their own flavor of a binary protocol fits their needs",
    "start": "40140",
    "end": "48000"
  },
  {
    "text": "effectively you know you MySQL balls Chris they have their own have their own",
    "start": "48000",
    "end": "53940"
  },
  {
    "text": "custom on-wire protocol yeah all of them are probably built on TCP",
    "start": "53940",
    "end": "61620"
  },
  {
    "text": "most definitely built on TCP the end of the day that's the only thing you have on the network right",
    "start": "61620",
    "end": "69960"
  },
  {
    "text": "UDP dcpn maybe some other things but that's that's the that's the ubiquitous",
    "start": "69960",
    "end": "75119"
  },
  {
    "text": "protocol but uh if you've been following this channel",
    "start": "75119",
    "end": "80580"
  },
  {
    "text": "and this podcast if you're listening for a while you you might have",
    "start": "80580",
    "end": "86119"
  },
  {
    "text": "noticed me kind of advocating the use of a multiplexed based protocol",
    "start": "86119",
    "end": "93060"
  },
  {
    "text": "what does that mean the communication between the backend",
    "start": "93060",
    "end": "99360"
  },
  {
    "text": "application and database is kind of interesting it's like a proxy almost right a reverse proxy of some sort why",
    "start": "99360",
    "end": "106920"
  },
  {
    "text": "because as a client as a user you almost never",
    "start": "106920",
    "end": "113159"
  },
  {
    "text": "actually send the query right the back end application does",
    "start": "113159",
    "end": "119659"
  },
  {
    "text": "you where you live behind all these apps you will almost use a web app or a",
    "start": "119659",
    "end": "127020"
  },
  {
    "text": "python script or some sort of a electron app that sends something to our web server",
    "start": "127020",
    "end": "134280"
  },
  {
    "text": "often and that web server turns around and send one or more query",
    "start": "134280",
    "end": "141000"
  },
  {
    "text": "to the database to fulfill your request so that's why you don't have",
    "start": "141000",
    "end": "146940"
  },
  {
    "text": "even need a database user behind that it's all hidden tucked in",
    "start": "146940",
    "end": "152640"
  },
  {
    "text": "that's why one of the best practices like for backing application to create a user that is so long a database user",
    "start": "152640",
    "end": "158700"
  },
  {
    "text": "that you get a persist on the back and has to be so long and random and the password has been super complex because",
    "start": "158700",
    "end": "166140"
  },
  {
    "text": "no human is going to use it it's always going to be helpful in a tucked in and",
    "start": "166140",
    "end": "171360"
  },
  {
    "text": "not even saved anyway I was just probably in the process memory loaded up in an environment variable",
    "start": "171360",
    "end": "177720"
  },
  {
    "text": "what not but regardless what you're gonna notice is all these clients that they're gonna",
    "start": "177720",
    "end": "184500"
  },
  {
    "text": "talk to the backend eventually gonna pull in all these requests",
    "start": "184500",
    "end": "190620"
  },
  {
    "text": "but all of them are talking to the same database eventually so even if you have",
    "start": "190620",
    "end": "195959"
  },
  {
    "text": "a hundred thousand users those hundred thousand users coming from different connections right",
    "start": "195959",
    "end": "202200"
  },
  {
    "text": "the backend to database connection is is a is is determined and well known",
    "start": "202200",
    "end": "210000"
  },
  {
    "text": "it's one back end most of the time talking to one database sure you have replication and",
    "start": "210000",
    "end": "216860"
  },
  {
    "text": "distributed databases that's most of the case it's limited",
    "start": "216860",
    "end": "222420"
  },
  {
    "text": "and the real world comes a concept called The Connection pooling which most of you listeners",
    "start": "222420",
    "end": "228180"
  },
  {
    "text": "and followers of this channel know the counts of the connection pooling is",
    "start": "228180",
    "end": "233940"
  },
  {
    "text": "it's pointless to have a connection for every single front-end user that just",
    "start": "233940",
    "end": "239519"
  },
  {
    "text": "that doesn't make any sense right what you want is to pull these connections",
    "start": "239519",
    "end": "245760"
  },
  {
    "text": "so that even of these thousand web clients comes in we don't really need a thousand",
    "start": "245760",
    "end": "252360"
  },
  {
    "text": "database connection we can have one or two or three or Thirty and then we",
    "start": "252360",
    "end": "258600"
  },
  {
    "text": "Multiplex Multiplex that's how it Multiplex right Multiplex things into these fewer",
    "start": "258600",
    "end": "266580"
  },
  {
    "text": "connections so you create a pool of connection and do the same thing and uh",
    "start": "266580",
    "end": "273440"
  },
  {
    "text": "we can get into more details but one of the most uh ubiquitous things that was discovered",
    "start": "273540",
    "end": "280380"
  },
  {
    "text": "is this problem actually exist on the web today right where we have this kind of multiplexity",
    "start": "280380",
    "end": "286560"
  },
  {
    "text": "is that even a word I don't know where a browser",
    "start": "286560",
    "end": "291780"
  },
  {
    "text": "talking to one domain masoned multiple concurrent requests to the same domain",
    "start": "291780",
    "end": "297300"
  },
  {
    "text": "you know because of the mess we created that is called the web was CSS and JavaScript 700 JavaScript",
    "start": "297300",
    "end": "304199"
  },
  {
    "text": "files 300 bootstrap CSS right and so",
    "start": "304199",
    "end": "310080"
  },
  {
    "text": "many other resources and jpegs and images so you find yourself Talking sending a lot of requests to the same",
    "start": "310080",
    "end": "317940"
  },
  {
    "text": "domain so what do you do it's the same problem",
    "start": "317940",
    "end": "323720"
  },
  {
    "text": "same problem always appear in life it's like it's almost like life I'm going all",
    "start": "323820",
    "end": "329160"
  },
  {
    "text": "over the place those like life is is a pattern like these problems appear everywhere",
    "start": "329160",
    "end": "334740"
  },
  {
    "text": "so you have these connections like this requests you Multiplex them into one right",
    "start": "334740",
    "end": "340740"
  },
  {
    "text": "previously in HTTP one one we didn't have that we have to send one request per connection and then we invented",
    "start": "340740",
    "end": "349620"
  },
  {
    "text": "multiplexing where we have hdb2 we can create one beautiful TCP connection secure and now",
    "start": "349620",
    "end": "356880"
  },
  {
    "text": "all that stuff and then Multiplex all these requests into its own streams like",
    "start": "356880",
    "end": "362039"
  },
  {
    "text": "dedicated streams and client created streams are odd numbers so you have one three seven and you can have server side",
    "start": "362039",
    "end": "369180"
  },
  {
    "text": "streams and do magic so this concept kind of applied to the",
    "start": "369180",
    "end": "374639"
  },
  {
    "text": "database so it technically makes sense for the backend application to use a HTTP Multiplex protocols such as HTTP 2",
    "start": "374639",
    "end": "382500"
  },
  {
    "text": "or 3. right and use that on the backend and that's",
    "start": "382500",
    "end": "388319"
  },
  {
    "text": "what the topic of this this video is and",
    "start": "388319",
    "end": "393600"
  },
  {
    "text": "can we use hdb3 or hdb2",
    "start": "393600",
    "end": "398900"
  },
  {
    "text": "on the back end right planets scale",
    "start": "398900",
    "end": "404940"
  },
  {
    "text": "Planet scale wrote up a Blog article actually on January 4th",
    "start": "404940",
    "end": "411660"
  },
  {
    "text": "a beautiful article showing an experimental case where they",
    "start": "411660",
    "end": "417780"
  },
  {
    "text": "used MySQL they swept up their MySQL binary and replaced it with both HTTP 2",
    "start": "417780",
    "end": "424740"
  },
  {
    "text": "protocol and it should be three and they show us the numbers so this is what I'm gonna go through I'm going to go through this article and",
    "start": "424740",
    "end": "430800"
  },
  {
    "text": "this could discuss and see the benefits of HTTP 3. how about we jump into it alright so this comes from",
    "start": "430800",
    "end": "438560"
  },
  {
    "text": "planetscale.com this comes from Matt Rob benold",
    "start": "438560",
    "end": "445460"
  },
  {
    "text": "entitled faster MySQL with HTTP 3. they do actually explain HTTP 2 and hdb3 and",
    "start": "445460",
    "end": "452220"
  },
  {
    "text": "we're gonna learn necessarily it's not really faster there's areas where it's fast and and that's what we're going to",
    "start": "452220",
    "end": "460259"
  },
  {
    "text": "focus on right so let's read the blurb here the background and then discuss the",
    "start": "460259",
    "end": "466620"
  },
  {
    "start": "465000",
    "end": "620000"
  },
  {
    "text": "background as a part of our infrastructure initiative we demanded new apis and",
    "start": "466620",
    "end": "473699"
  },
  {
    "text": "connectivity features for our database to support features that were not available on the MySQL protocol we",
    "start": "473699",
    "end": "480840"
  },
  {
    "text": "decided to stop bolting on a publicly accessible HTTP API the API is not",
    "start": "480840",
    "end": "485940"
  },
  {
    "text": "documented for public consumption just yet I will I will it will be I promise",
    "start": "485940",
    "end": "491099"
  },
  {
    "text": "but it is grpc compatible the HTTP interface led to the",
    "start": "491099",
    "end": "497039"
  },
  {
    "text": "development of our serverless driver Planet skill connect in serverless compute context your code",
    "start": "497039",
    "end": "503520"
  },
  {
    "text": "is fundamentally not able to open a TCP socket and speak the MySQL binary",
    "start": "503520",
    "end": "510599"
  },
  {
    "text": "protocol to us the platforms require communication through HTTP so it ended up being a nice",
    "start": "510599",
    "end": "517620"
  },
  {
    "text": "fit oh okay so there while they're talking about the serverless thing for security reason serverless can't just",
    "start": "517620",
    "end": "524039"
  },
  {
    "text": "open TCP so they effectively I think restrictive to hdb so it end up to being",
    "start": "524039",
    "end": "529080"
  },
  {
    "text": "nice right but can HTTP be faster than MySQL protocol so you see a lot of",
    "start": "529080",
    "end": "535440"
  },
  {
    "text": "people actually might have considered using hdb but kind of shied from HTTP",
    "start": "535440",
    "end": "541080"
  },
  {
    "text": "because of the concept of these headers the extra headers that has nothing to do with databases that's why database",
    "start": "541080",
    "end": "546899"
  },
  {
    "text": "people don't use hdb but we always need to break into things and understand the",
    "start": "546899",
    "end": "553440"
  },
  {
    "text": "benefits of using these protocols",
    "start": "553440",
    "end": "558839"
  },
  {
    "text": "our new API aren't just jrpc specifically in our end we use connect go which is a grpc compatible and gives",
    "start": "558839",
    "end": "566640"
  },
  {
    "text": "us a bunch of a lot of features one of these features the ability to potentially use HTTP 3 as a transport",
    "start": "566640",
    "end": "573000"
  },
  {
    "text": "HTTP 3 to me started making things very interesting if you and me here and I as",
    "start": "573000",
    "end": "579839"
  },
  {
    "text": "the author of course not me Hussein if you're not familiar with HTTP 3 I",
    "start": "579839",
    "end": "585420"
  },
  {
    "text": "suggest taking a detour of a research then back here but it just is the HTTP 3",
    "start": "585420",
    "end": "591420"
  },
  {
    "text": "is built on top of UDP rather than TCP using the transport protocol called quick we talked about HTTP 3 in this",
    "start": "591420",
    "end": "598680"
  },
  {
    "text": "Channel and I if you're interested go to my course back in dodos and also.com I",
    "start": "598680",
    "end": "603779"
  },
  {
    "text": "go even in more details there uh my my theory was that the benefit of",
    "start": "603779",
    "end": "609420"
  },
  {
    "text": "our new API started to yield tangible benefits let's see what is the benefit okay he talks about the setup here",
    "start": "609420",
    "end": "615720"
  },
  {
    "text": "um and uh uh we can kind of skip this setup it's just we're not really interested in",
    "start": "615720",
    "end": "622019"
  },
  {
    "start": "620000",
    "end": "900000"
  },
  {
    "text": "the setup we we know about the result right so they configured three",
    "start": "622019",
    "end": "628459"
  },
  {
    "text": "configurations the first configuration is the native MySQL binary protocol",
    "start": "628459",
    "end": "633540"
  },
  {
    "text": "client with TLS 1.2 I wish they made this a little bit more clear but it's",
    "start": "633540",
    "end": "639180"
  },
  {
    "text": "not uh that's the first configuration because you still need to secure the",
    "start": "639180",
    "end": "645360"
  },
  {
    "text": "communication between backend and database right and MySQL does support that through TS 1.2 and you can do it",
    "start": "645360",
    "end": "652200"
  },
  {
    "text": "through 3x 1.3 but it's a little more hectic HTTP client speaking HTTP 2 name I I",
    "start": "652200",
    "end": "661440"
  },
  {
    "text": "really appreciate the the language being used here right it's very clear and and",
    "start": "661440",
    "end": "669000"
  },
  {
    "text": "you know concise HTTP client speaking HTTP 3 through what they call the psdp",
    "start": "669000",
    "end": "677399"
  },
  {
    "text": "which is their Planet scale database right plus H2 HTTP 3. right let's go on",
    "start": "677399",
    "end": "682440"
  },
  {
    "text": "and continue we chose these because we wanted to see fundamentally if hdb can compare to mySQL and fhdb3 yields any",
    "start": "682440",
    "end": "690540"
  },
  {
    "text": "tangible benefits on top of hdb2 we're ignoring hdb1 since it's going to",
    "start": "690540",
    "end": "696540"
  },
  {
    "text": "be objectively worse than both HTTP 2 and http 3.",
    "start": "696540",
    "end": "702360"
  },
  {
    "text": "I'm not sure about that that's that's a that's a that's a statement",
    "start": "702360",
    "end": "709019"
  },
  {
    "text": "I don't know it really depends what you told you can't just assume it's worse",
    "start": "709019",
    "end": "714300"
  },
  {
    "text": "right I mean uh we've seen it with many backend application and articles that",
    "start": "714300",
    "end": "721019"
  },
  {
    "text": "people actually moving away from hdb to back to hdb1 because the resource consumption just shot High because what",
    "start": "721019",
    "end": "727980"
  },
  {
    "text": "what they don't discuss here is the cost of HTTP 200b3 they only discuss the benefits but nobody discusses the cost",
    "start": "727980",
    "end": "734279"
  },
  {
    "text": "of HTTP 2 and gp3 there is a cost associated with and if you handle it sure take it but if you can't there is a",
    "start": "734279",
    "end": "741899"
  },
  {
    "text": "lot of overhead to manage these puppies there is no almost zero overhead to",
    "start": "741899",
    "end": "747360"
  },
  {
    "text": "manage this because it's hdb one is native to TCP it's literally text on TCP here there are in wire headers",
    "start": "747360",
    "end": "757200"
  },
  {
    "text": "for HTTP 2 like the streams the magic stuff the magic numbers",
    "start": "757200",
    "end": "764940"
  },
  {
    "text": "the headers and the window sizes and there is a lot of chattiness when it comes to hdbt compared to vanilla hdp1",
    "start": "764940",
    "end": "772740"
  },
  {
    "text": "which is like really basic and simple so I don't I don't agree with that statement this is okay it's gonna it's",
    "start": "772740",
    "end": "778740"
  },
  {
    "text": "going to be a objective reverse you can't just make statements like that right",
    "start": "778740",
    "end": "784800"
  },
  {
    "text": "right all right so here's here are the tests there you know connect plus select one this is attempting to test the cold",
    "start": "784800",
    "end": "791579"
  },
  {
    "text": "start so what is called start uh to explain it cold start is the",
    "start": "791579",
    "end": "797279"
  },
  {
    "text": "we don't have anything I want to send a query but in order to send a query we need to initiate a connection",
    "start": "797279",
    "end": "804420"
  },
  {
    "text": "right the work the setup cost to send a query that is like hidden cost",
    "start": "804420",
    "end": "811680"
  },
  {
    "text": "and that's the called the cold store the next time you start up you want to send a query the cold start having already",
    "start": "811680",
    "end": "818519"
  },
  {
    "text": "done you already started you can send stuff on top of your query right instead",
    "start": "818519",
    "end": "823740"
  },
  {
    "text": "of on top of your connection sorry it establishes a connection to us and runs a select one using the new",
    "start": "823740",
    "end": "830160"
  },
  {
    "text": "connection each run using a new connection each run serially right so that's what they do there is",
    "start": "830160",
    "end": "836459"
  },
  {
    "text": "parallel the test simply warms up a connection pool ahead of time then runs",
    "start": "836459",
    "end": "841620"
  },
  {
    "text": "select one in parallel right um medium select the test reads 250 rows",
    "start": "841620",
    "end": "849180"
  },
  {
    "text": "from a table with two columns select start from medium the total result size is approximately 50 kilobytes",
    "start": "849180",
    "end": "856040"
  },
  {
    "text": "so the the here they're probably testing the response probably",
    "start": "856040",
    "end": "861180"
  },
  {
    "text": "uh coming back insert the test doing inverse of writing in the same that it",
    "start": "861180",
    "end": "867779"
  },
  {
    "text": "is in bulk so they are inserting a bulk insert so what we're testing here",
    "start": "867779",
    "end": "873360"
  },
  {
    "text": "effectively is the size of the request whereas in the previous one we're testing the size of the response right",
    "start": "873360",
    "end": "879779"
  },
  {
    "text": "here medium insert we're testing because the infrastrome is going to be massive so compressing that is really",
    "start": "879779",
    "end": "887180"
  },
  {
    "text": "valuable right becoming compressing is really becomes really valuable here",
    "start": "887180",
    "end": "892399"
  },
  {
    "text": "large select this test reads a hundred thousand rows so 27 Megs coming back and",
    "start": "892399",
    "end": "898860"
  },
  {
    "text": "so the query is Tiny I mean the size of the actual request but the what's comes",
    "start": "898860",
    "end": "906060"
  },
  {
    "start": "900000",
    "end": "1320000"
  },
  {
    "text": "back is large right so let's look at the results right for those listening we're looking at the connect plus select so",
    "start": "906060",
    "end": "911459"
  },
  {
    "text": "they're each protocol is tested against a connect so that",
    "start": "911459",
    "end": "916860"
  },
  {
    "text": "means they're creating a connection encrypting the connection right that's the TLs session and then",
    "start": "916860",
    "end": "923639"
  },
  {
    "text": "sending the select one which is a very simple query and we all were all testing the latency",
    "start": "923639",
    "end": "930120"
  },
  {
    "text": "here so it took my sequel native binary protocol",
    "start": "930120",
    "end": "937019"
  },
  {
    "text": "with TLS 1.2 and again I really wish they actually spelled that out",
    "start": "937019",
    "end": "943019"
  },
  {
    "text": "okay it took my sequel around one what's that 200 175 milliseconds right while their",
    "start": "943019",
    "end": "952920"
  },
  {
    "text": "psdb on hdb2 took it 50 millisecond only while the P the hdb3 is also 50",
    "start": "952920",
    "end": "961440"
  },
  {
    "text": "milliseconds really identical so 50 millisecond versus 175 so you have 100",
    "start": "961440",
    "end": "967639"
  },
  {
    "text": "milliseconds there and the saving is is that the cost is really just uh the",
    "start": "967639",
    "end": "974160"
  },
  {
    "text": "connection itself so that connection establishment which we know it's all TCP",
    "start": "974160",
    "end": "979620"
  },
  {
    "text": "right except for hdb3 which is quick which is UDP still there is a connection",
    "start": "979620",
    "end": "984660"
  },
  {
    "text": "establishment but um the cost really goes into this because",
    "start": "984660",
    "end": "991920"
  },
  {
    "text": "TLS 1.2 is two round trip right you you have to first kind of flirt until at",
    "start": "991920",
    "end": "998339"
  },
  {
    "text": "some point this is hey I support this and I support all this uh",
    "start": "998339",
    "end": "1003500"
  },
  {
    "text": "you know key exchange algorithm I support these ciphers let's pick for me so another server say okay pick this I",
    "start": "1003500",
    "end": "1009199"
  },
  {
    "text": "picked the film and pick this and then we go ahead and actually do the connection well a TS 1.3 says you don't",
    "start": "1009199",
    "end": "1015440"
  },
  {
    "text": "get a choice I'm gonna assume something let's always communicate in key exchange",
    "start": "1015440",
    "end": "1020839"
  },
  {
    "text": "and this is the difference and here's my parameters just go ahead and do it right and then the server will pick the cipher",
    "start": "1020839",
    "end": "1029540"
  },
  {
    "text": "which is the symmetric key Cipher not the key exchange okay exchange order to determine right and then we'll pick this",
    "start": "1029540",
    "end": "1036980"
  },
  {
    "text": "off and then we'll tell the coin hey I picked that Cipher and here's my parameter let's complete by this time",
    "start": "1036980",
    "end": "1042319"
  },
  {
    "text": "server already has this session key so that's why it's TLS 1.3 is way faster",
    "start": "1042319",
    "end": "1047839"
  },
  {
    "text": "than 50 faster actually than TS 1.2 and that's what exactly what we're",
    "start": "1047839",
    "end": "1054020"
  },
  {
    "text": "seeing with mySQL so nothing about MySQL is bad so far my sequel is okay right",
    "start": "1054020",
    "end": "1060919"
  },
  {
    "text": "it's just it I would really love to see the same graph with mySQL DLS 1.3 and",
    "start": "1060919",
    "end": "1066620"
  },
  {
    "text": "see if there is benefits for connection establishment that is that's it right if my sequel binary can be built",
    "start": "1066620",
    "end": "1074419"
  },
  {
    "text": "on top of TLS 1.3 or can be used with TS 1.3 that's that's fine let's read the",
    "start": "1074419",
    "end": "1079640"
  },
  {
    "text": "highlights which is I think they might mention some of this stuff from my laptop I expected a major",
    "start": "1079640",
    "end": "1085700"
  },
  {
    "text": "Improvement but the men went the minimum went from",
    "start": "1085700",
    "end": "1090919"
  },
  {
    "text": "162 to 35-ish millisecond to 35 not 50.",
    "start": "1090919",
    "end": "1097640"
  },
  {
    "text": "over HTTP while the max also stayed steady for HTTP and jumps up quite a bit",
    "start": "1097640",
    "end": "1105559"
  },
  {
    "text": "for my sequel I'd suspect the biggest one here is fundamentally because of the TLs okay",
    "start": "1105559",
    "end": "1110600"
  },
  {
    "text": "this we can agree here because of the difference of TLS both HTTP interior",
    "start": "1110600",
    "end": "1116120"
  },
  {
    "text": "requires to be 1.3 both hdb2 and hdb3 require TLS 1.3 another false statement",
    "start": "1116120",
    "end": "1122660"
  },
  {
    "text": "no they they're not hdv2 do not require sales 1.3 hdb 3 is built on TLS 1.3 you",
    "start": "1122660",
    "end": "1130640"
  },
  {
    "text": "don't have an option TL is one point HTTP 3 is built on quick quick is kind of merged with the",
    "start": "1130640",
    "end": "1138559"
  },
  {
    "text": "connection setup as TLS 1.3 so you do the sin and you also establish the TLs",
    "start": "1138559",
    "end": "1143720"
  },
  {
    "text": "1.3 Connection in one thing the quick setup is really one round trip it is the TLs 1.3 hdb2 is built on TCP right and",
    "start": "1143720",
    "end": "1154059"
  },
  {
    "text": "the TLs is kind of disconnected from the TCP so definitely of course you can",
    "start": "1154059",
    "end": "1161480"
  },
  {
    "text": "have TLS 1.2 on top of thdp so that's a wrong statement right so that's another",
    "start": "1161480",
    "end": "1168080"
  },
  {
    "text": "thing so I bet if you use hdb2 with CLS 1.2 then you're gonna see a similar bump and",
    "start": "1168080",
    "end": "1176020"
  },
  {
    "text": "latency in a negative way with psdb HTTP",
    "start": "1176020",
    "end": "1181160"
  },
  {
    "text": "2 because that will just be slower right and of course the Taylor's 1.3 also supports zero rtt if you have a",
    "start": "1181160",
    "end": "1189080"
  },
  {
    "text": "already established a session and then you can have a pre-share",
    "start": "1189080",
    "end": "1195620"
  },
  {
    "text": "key extension TLS extension that will allow you to kind of encrypt your data",
    "start": "1195620",
    "end": "1201380"
  },
  {
    "text": "and re-establish the session right get a brand new um a brand new session key effectively",
    "start": "1201380",
    "end": "1208700"
  },
  {
    "text": "and then go ahead and continue the encryption right and the server can",
    "start": "1208700",
    "end": "1213820"
  },
  {
    "text": "recreate this new session key just just like that very quickly right on on the",
    "start": "1213820",
    "end": "1219140"
  },
  {
    "text": "same breath so no round trip is required right where a tier 1.3 by default is one",
    "start": "1219140",
    "end": "1225320"
  },
  {
    "text": "round trip so you can actually you have to send and wait for one for the server",
    "start": "1225320",
    "end": "1231260"
  },
  {
    "text": "to respond so you can actually send the encrypted zero rtt with the same breath",
    "start": "1231260",
    "end": "1238100"
  },
  {
    "text": "if you have communicated before you can do that so it's really powerful stuff well in theory",
    "start": "1238100",
    "end": "1244280"
  },
  {
    "text": "MySQL clients could also support TLS 1.3 tier support inclines and is typically",
    "start": "1244280",
    "end": "1249919"
  },
  {
    "text": "not great I have to agree right it's very slow to roll uh you know older",
    "start": "1249919",
    "end": "1255020"
  },
  {
    "text": "libraries with newer features like DS 1.3 so in this case negotiated with TS",
    "start": "1255020",
    "end": "1261620"
  },
  {
    "text": "1.2 so they did mention this right uh I wish it's spelled out on the graph right",
    "start": "1261620",
    "end": "1267260"
  },
  {
    "text": "so MySQL should be like between parentheses TS 1.2 right",
    "start": "1267260",
    "end": "1272500"
  },
  {
    "text": "uh this saves a full round trip when establishing a new connection so",
    "start": "1272500",
    "end": "1278660"
  },
  {
    "text": "what was surprising to me I expected this to only reflect it on high latency",
    "start": "1278660",
    "end": "1283880"
  },
  {
    "text": "Network and Geographic distances but this was surprising better uh on our ac2",
    "start": "1283880",
    "end": "1290000"
  },
  {
    "text": "anistas on us West from 11 millisecond down to three to four milliseconds okay",
    "start": "1290000",
    "end": "1296000"
  },
  {
    "text": "overall it's very clear that HTTP both hdb that HTTP both HTTP 2 and 3 are",
    "start": "1296000",
    "end": "1302299"
  },
  {
    "text": "substantially better for cold start",
    "start": "1302299",
    "end": "1307760"
  },
  {
    "text": "again can't just say that you gotta try my",
    "start": "1307760",
    "end": "1313340"
  },
  {
    "text": "sequel on TS 1.3 to if that is true then",
    "start": "1313340",
    "end": "1318620"
  },
  {
    "text": "then you will because at this point there is it's just connection has",
    "start": "1318620",
    "end": "1324320"
  },
  {
    "start": "1320000",
    "end": "1560000"
  },
  {
    "text": "nothing to do with HTTP technically right we're testing connection establishment right so if you do the",
    "start": "1324320",
    "end": "1331460"
  },
  {
    "text": "same thing with mySQL on top of ts140 which is most of the cost then you should see the similar",
    "start": "1331460",
    "end": "1339440"
  },
  {
    "text": "time you know you should see it's very similar latencies effectively right so it can't",
    "start": "1339440",
    "end": "1347360"
  },
  {
    "text": "just saying like oh hdb three two is better",
    "start": "1347360",
    "end": "1353260"
  },
  {
    "text": "while these results all look relatively similar to me that's a good thing we can",
    "start": "1353600",
    "end": "1359059"
  },
  {
    "text": "see some improvement now they're doing the parallel select which kind of proves the point here the parallel select",
    "start": "1359059",
    "end": "1365720"
  },
  {
    "text": "one all the numbers are similar why the numbers are similar because the",
    "start": "1365720",
    "end": "1372740"
  },
  {
    "text": "connections is what took time the rest of the stuff doesn't really buy you anything you know where this will",
    "start": "1372740",
    "end": "1379460"
  },
  {
    "text": "actually be beneficial to actually see numbers which I don't think it exists is in a high concurrent environment which",
    "start": "1379460",
    "end": "1386360"
  },
  {
    "text": "doesn't no test actually does that you should have",
    "start": "1386360",
    "end": "1391960"
  },
  {
    "text": "uh like a thousand or Twenty Thousand",
    "start": "1392000",
    "end": "1397220"
  },
  {
    "text": "requests pulled in into fewer connections try sending uh concurrently or start",
    "start": "1397220",
    "end": "1405260"
  },
  {
    "text": "multiple transactions I don't know are off the Catholic",
    "start": "1405260",
    "end": "1410360"
  },
  {
    "text": "3000 transactions concurrently from the backend application to the database and",
    "start": "1410360",
    "end": "1416299"
  },
  {
    "text": "let the let each of the transactions sends a lot of queries test that on HTTP 3 hdb2 and MySQL right",
    "start": "1416299",
    "end": "1425419"
  },
  {
    "text": "for MySQL you will have to establish many connections because I don't think they support pipelining",
    "start": "1425419",
    "end": "1432260"
  },
  {
    "text": "and postgres really started support pipeline recently but pipelining it always gets you like",
    "start": "1432260",
    "end": "1438559"
  },
  {
    "text": "very weird results you know you gotta make sure that if you send multiple",
    "start": "1438559",
    "end": "1444620"
  },
  {
    "text": "requests one after the other on the same connection they better be executed in the same order and then give you back",
    "start": "1444620",
    "end": "1451580"
  },
  {
    "text": "the result but yeah uh uh that that's all that would be a fantastic test and at that same test",
    "start": "1451580",
    "end": "1459080"
  },
  {
    "text": "will really measure now there's there's the second test what we would like uh",
    "start": "1459080",
    "end": "1465860"
  },
  {
    "text": "will be nice to see is the server the database server cost and the back end as",
    "start": "1465860",
    "end": "1473059"
  },
  {
    "text": "well cpu-wise and not much memory but CPU is most",
    "start": "1473059",
    "end": "1478400"
  },
  {
    "text": "important because and here's the thing and the rest of this stuff is not really doesn't really",
    "start": "1478400",
    "end": "1484220"
  },
  {
    "text": "matter with you we don't need to go through it that's basically the summary or we have so let's go through this what",
    "start": "1484220",
    "end": "1490520"
  },
  {
    "text": "we need to see is the cost of HTTP 2 and hdb3 mainly comes",
    "start": "1490520",
    "end": "1497240"
  },
  {
    "text": "back is to parsing what does that mean",
    "start": "1497240",
    "end": "1502280"
  },
  {
    "text": "how this to understand that we need to understand how uh how networking works",
    "start": "1502280",
    "end": "1507860"
  },
  {
    "text": "and I don't think we need the screen anymore so a very well written article a",
    "start": "1507860",
    "end": "1513140"
  },
  {
    "text": "lot of details here which we have more of course everything can be improvised it's experimental at the end of the day",
    "start": "1513140",
    "end": "1518960"
  },
  {
    "text": "they actually did mention great work from the planet scale team Matt great",
    "start": "1518960",
    "end": "1524059"
  },
  {
    "text": "job I apologize I might be a little bit of harsh in samples it was just ticket",
    "start": "1524059",
    "end": "1529279"
  },
  {
    "text": "it's just a criticism you can delay it or take it that's fine but uh very well",
    "start": "1529279",
    "end": "1534380"
  },
  {
    "text": "alerted absolutely love it we never seen anything like this before hdb3 using xv3",
    "start": "1534380",
    "end": "1539960"
  },
  {
    "text": "on a database so you guys are are pushing the boundary and this is what we need in in the realm of database and",
    "start": "1539960",
    "end": "1546799"
  },
  {
    "text": "back in engineering so Kudos great work you guys I know the work that have been",
    "start": "1546799",
    "end": "1553520"
  },
  {
    "text": "mostly you guys I know the work that must have been took",
    "start": "1553520",
    "end": "1558919"
  },
  {
    "text": "you know to actually replace the client like libraries so that it supports HTTP",
    "start": "1558919",
    "end": "1564679"
  },
  {
    "start": "1560000",
    "end": "2182000"
  },
  {
    "text": "3 and hdb2 and collect these numbers and run all these tests right so fantastic",
    "start": "1564679",
    "end": "1571640"
  },
  {
    "text": "work keep up the good work and with that said let's go and continue the",
    "start": "1571640",
    "end": "1577220"
  },
  {
    "text": "discussion on why on why HTTP 2 HTTP 3 is costlier so in",
    "start": "1577220",
    "end": "1585380"
  },
  {
    "text": "order to understand that right the benefits of hdb2 and HTTP 3 is is really",
    "start": "1585380",
    "end": "1591320"
  },
  {
    "text": "to me is the multiplexing nature we have one back-end application sending",
    "start": "1591320",
    "end": "1597320"
  },
  {
    "text": "many clients that's the number one benefit here right and that's why proxies like Envoy use",
    "start": "1597320",
    "end": "1604820"
  },
  {
    "text": "HTTP 2 on their back end that's why grpc use hdv2 you know the beauty of having",
    "start": "1604820",
    "end": "1611720"
  },
  {
    "text": "to control the low level stream having the multiplexing features really powerful so we have established the",
    "start": "1611720",
    "end": "1617419"
  },
  {
    "text": "connection once and I can send many quests on the SIM",
    "start": "1617419",
    "end": "1622840"
  },
  {
    "text": "on the same connection that's the power here but we got to understand that at",
    "start": "1622840",
    "end": "1628460"
  },
  {
    "text": "the end of the day these requests right sending a thousand",
    "start": "1628460",
    "end": "1634100"
  },
  {
    "text": "query on a single connection will transmit into each of these query will",
    "start": "1634100",
    "end": "1639860"
  },
  {
    "text": "be their own uh HTTP 2 or hdb3",
    "start": "1639860",
    "end": "1645200"
  },
  {
    "text": "I know I think they call it datagram you know and then this these guys have their own",
    "start": "1645200",
    "end": "1651559"
  },
  {
    "text": "headers so hdb2 have their own headers it says oh this is the stream ID this is",
    "start": "1651559",
    "end": "1657080"
  },
  {
    "text": "I don't know what this is the window size this is the like in case of HTTP",
    "start": "1657080",
    "end": "1662600"
  },
  {
    "text": "there's the connection ID so there is so much you know overhead",
    "start": "1662600",
    "end": "1668600"
  },
  {
    "text": "to tagging these things so each query that you send yeah sure is going to be compressed HTTP speak",
    "start": "1668600",
    "end": "1676159"
  },
  {
    "text": "and we'll be binary but there is headers added by the end of the day they will in",
    "start": "1676159",
    "end": "1681200"
  },
  {
    "text": "the network they either fill on top of TCP which is hdb2 or UDP which is it",
    "start": "1681200",
    "end": "1687860"
  },
  {
    "text": "should be three so today in the Linux and windows kernel",
    "start": "1687860",
    "end": "1695539"
  },
  {
    "text": "these Sparkles are not understood at the kernel level the kernel knows UDP and the kernel U",
    "start": "1695539",
    "end": "1703700"
  },
  {
    "text": "knows TCP and it's gonna do work for you in that layer so if you send these queries will",
    "start": "1703700",
    "end": "1711140"
  },
  {
    "text": "end up into TCP segments and they're gonna be carried into a bunch of TCP segments with the destination Port",
    "start": "1711140",
    "end": "1717340"
  },
  {
    "text": "destination IP Source Port Society that's it at the end of the day yeah",
    "start": "1717340",
    "end": "1722480"
  },
  {
    "text": "these stream of segment will be encrypted by higher layers and that's it",
    "start": "1722480",
    "end": "1729260"
  },
  {
    "text": "so what happens is this stream of TCP segments will arrive in the neck the",
    "start": "1729260",
    "end": "1734960"
  },
  {
    "text": "network controller then turning the face controller will be buffered coalist in some cases",
    "start": "1734960",
    "end": "1741380"
  },
  {
    "text": "some network card and then this will trigger an interrupt",
    "start": "1741380",
    "end": "1747380"
  },
  {
    "text": "right to the CPU or the dma the direct memory access in the",
    "start": "1747380",
    "end": "1753520"
  },
  {
    "text": "motherboard all that stuff to trigger says Hey I want to transfer it now this",
    "start": "1753520",
    "end": "1759140"
  },
  {
    "text": "please transfer this amount of segments that I just received to you kernel so",
    "start": "1759140",
    "end": "1764720"
  },
  {
    "text": "the kernel will do that will will instruct that to the move from the",
    "start": "1764720",
    "end": "1771500"
  },
  {
    "text": "buffer from the neck this data is just at this point it's just encrypted bytes right they go from the neck to the",
    "start": "1771500",
    "end": "1779620"
  },
  {
    "text": "kernel memory still the back end not even close to see any of this HTTP or",
    "start": "1779620",
    "end": "1784760"
  },
  {
    "text": "three or two data now the kernel will look at this and says okay which process actually the asks for this well it's",
    "start": "1784760",
    "end": "1792440"
  },
  {
    "text": "going to Port this oh so it's this actually in this file descriptor this socket so let me copy this data into",
    "start": "1792440",
    "end": "1801140"
  },
  {
    "text": "that particular buffer so start copying this data into the buffer and now it's",
    "start": "1801140",
    "end": "1807799"
  },
  {
    "text": "up to the the kernel doesn't even decrypt or do anything",
    "start": "1807799",
    "end": "1813020"
  },
  {
    "text": "right it's just to to the kernels just data that arrived now the backend application is responsible to call a",
    "start": "1813020",
    "end": "1819980"
  },
  {
    "text": "function called read to actually read the data from the kernel into its own",
    "start": "1819980",
    "end": "1825320"
  },
  {
    "text": "process virtual memory right that's what will happen so now we're",
    "start": "1825320",
    "end": "1831440"
  },
  {
    "text": "going to move the data from the kernel and what's this data this again it's an encrypted byte we have no clue about",
    "start": "1831440",
    "end": "1839000"
  },
  {
    "text": "streams we have no Global query we have no clue about anything so this data is",
    "start": "1839000",
    "end": "1844520"
  },
  {
    "text": "copied into the process Murray which is now your backend application or the database server application my second in",
    "start": "1844520",
    "end": "1852140"
  },
  {
    "text": "this case will will need to actually understand how to take this encrypted",
    "start": "1852140",
    "end": "1859279"
  },
  {
    "text": "segments first of all because now we're layer four right we go up play one layer layer five",
    "start": "1859279",
    "end": "1865580"
  },
  {
    "text": "right session layer and then we'll start the corrupting which is TLS will take care of this so we okay which session",
    "start": "1865580",
    "end": "1872299"
  },
  {
    "text": "key we used okay this session key we use for this particular connection",
    "start": "1872299",
    "end": "1877520"
  },
  {
    "text": "do the mapping and now we'll start decrypting that's a cost right will the",
    "start": "1877520",
    "end": "1884059"
  },
  {
    "text": "cost of decrypting the content now we have a bunch of unencrypted stuff in my process memory",
    "start": "1884059",
    "end": "1890000"
  },
  {
    "text": "and even that will involve some copying and we're gonna involve the CPU on the process right so now we have unencrypted",
    "start": "1890000",
    "end": "1896899"
  },
  {
    "text": "data but still the job is not done if this was HTTP 1 the job is done",
    "start": "1896899",
    "end": "1904100"
  },
  {
    "text": "because that segment is the data",
    "start": "1904100",
    "end": "1909440"
  },
  {
    "text": "that's it because HTTP one is a simple text and then we can just group a bunch",
    "start": "1909440",
    "end": "1916520"
  },
  {
    "text": "of unencrypted segments right and that becomes oh here's where the start of the",
    "start": "1916520",
    "end": "1921919"
  },
  {
    "text": "request here's the end of the request binary I have no idea how the mystical binary looks like but it would be",
    "start": "1921919",
    "end": "1928340"
  },
  {
    "text": "something similar they will stop parsing in HTTP 2 and HTTP 3 the job is not even",
    "start": "1928340",
    "end": "1933799"
  },
  {
    "text": "close to done and again who's doing this work is the backend application and the database if",
    "start": "1933799",
    "end": "1939500"
  },
  {
    "text": "it supports hdv towards GB3 area now with HTTP 2 now you have to start",
    "start": "1939500",
    "end": "1946940"
  },
  {
    "text": "assembling this unencrypted data and then look for not requests you look for",
    "start": "1946940",
    "end": "1952100"
  },
  {
    "text": "streams now so stream one is oh this header is now stream one this is stream two this is",
    "start": "1952100",
    "end": "1958460"
  },
  {
    "text": "stream five this is stream seven and then start start parsing to find the streams and then once you find the",
    "start": "1958460",
    "end": "1965240"
  },
  {
    "text": "streams you find requests within streams and this is another kind of parsing right and that additional overhead is",
    "start": "1965240",
    "end": "1973520"
  },
  {
    "text": "where HTTP 2 and hdb3 right cost more CPU and slightly more RAM",
    "start": "1973520",
    "end": "1982700"
  },
  {
    "text": "compared to Native simpler protocol",
    "start": "1982700",
    "end": "1988220"
  },
  {
    "text": "if you add something there's always cost to it and that's what the Lucid chart I",
    "start": "1988220",
    "end": "1993740"
  },
  {
    "text": "mean a few years back they they found out this problem right away they enable hdb2 blindly and all of a sudden their",
    "start": "1993740",
    "end": "2000519"
  },
  {
    "text": "backend applications CPUs just shot really high to 90 to 100 percent",
    "start": "2000519",
    "end": "2006760"
  },
  {
    "text": "right because of the load of the this additional thing they are using and of",
    "start": "2006760",
    "end": "2012159"
  },
  {
    "text": "course there is a lot of progress from the community from the quick community and",
    "start": "2012159",
    "end": "2019120"
  },
  {
    "text": "the hdb2 community to improve this the cost of parsing",
    "start": "2019120",
    "end": "2024220"
  },
  {
    "text": "I call it parsing maybe there is another word the community would like to use but to me it's just parsing you're parsing",
    "start": "2024220",
    "end": "2030820"
  },
  {
    "text": "the protocol to find out the actual content right but this could get better",
    "start": "2030820",
    "end": "2036220"
  },
  {
    "text": "and better of course but that's the cost associated with using HTTP 3 hdb2 if you",
    "start": "2036220",
    "end": "2042460"
  },
  {
    "text": "have unlimited CPU and RAM knock yourself out use hdb2 and G3 just understand the cost",
    "start": "2042460",
    "end": "2049240"
  },
  {
    "text": "if you really hdb1 is not that bad really the only Badness if you want to",
    "start": "2049240",
    "end": "2054940"
  },
  {
    "text": "call it bad is is the is the lack of multiplexing if you want",
    "start": "2054940",
    "end": "2061118"
  },
  {
    "text": "to send a lot of requests on the same connection you gotta wait for the response to come back",
    "start": "2061119",
    "end": "2067780"
  },
  {
    "text": "for the previous request before you send another request there have been",
    "start": "2067780",
    "end": "2073000"
  },
  {
    "text": "uh you know Improvement on the idea of pipelining where you can send multiple requests",
    "start": "2073000",
    "end": "2079960"
  },
  {
    "text": "without waiting for a response but then there must be a kind of symbiotic",
    "start": "2079960",
    "end": "2085480"
  },
  {
    "text": "relationship between the client and the server to guarantee the order of things that come back if I send request number",
    "start": "2085480",
    "end": "2092378"
  },
  {
    "text": "one request number two request number three what if request number one what take takes takes longer than request",
    "start": "2092379",
    "end": "2099820"
  },
  {
    "text": "number two so the server can process request number two right",
    "start": "2099820",
    "end": "2105099"
  },
  {
    "text": "and might respond before right if a response before then the whole thing",
    "start": "2105099",
    "end": "2111339"
  },
  {
    "text": "just breaks apart because now you got request number two before request number and you have no idea is this the",
    "start": "2111339",
    "end": "2117460"
  },
  {
    "text": "response for the first the request or the second you have no clue right until unless you built it in the protocol",
    "start": "2117460",
    "end": "2124119"
  },
  {
    "text": "itself such that you tag the response with the request you can absolutely do that and the application itself okay and",
    "start": "2124119",
    "end": "2130599"
  },
  {
    "text": "you can build something like that but again there are problems with of course hdb2 TCP head offline blocking",
    "start": "2130599",
    "end": "2137740"
  },
  {
    "text": "and things like that but uh again I absolutely enjoy when I saw this on Twitter I really enjoyed and I thought",
    "start": "2137740",
    "end": "2143740"
  },
  {
    "text": "you know what let's let's make a quick video about this again great work on on this and uh I think there is there is a",
    "start": "2143740",
    "end": "2150820"
  },
  {
    "text": "potential for this I just need I I think I still think we need to",
    "start": "2150820",
    "end": "2156099"
  },
  {
    "text": "understand the the ramification of this you know the cost uh the cost has to be",
    "start": "2156099",
    "end": "2161980"
  },
  {
    "text": "highlighted to using these new protocols that's it for me today hope you enjoyed",
    "start": "2161980",
    "end": "2167800"
  },
  {
    "text": "this video uh what do you guys think about this uh let me know call me out of anything I said and again thanks for",
    "start": "2167800",
    "end": "2174400"
  },
  {
    "text": "plant scale great articles I would love to see more of these beautiful articles really good job thank you so much",
    "start": "2174400",
    "end": "2183060"
  }
]