[
  {
    "start": "0",
    "end": "86000"
  },
  {
    "text": "what's going on guys this is a collection of my popular rabbit mq content here on youtube",
    "start": "399",
    "end": "7279"
  },
  {
    "text": "so i'm going to discuss rabbitmq as a technology i'm going to show you a little bit of my",
    "start": "7279",
    "end": "13519"
  },
  {
    "text": "deep discussions of rabbitmq as a technology my pros and cons i think what what i",
    "start": "13519",
    "end": "19439"
  },
  {
    "text": "think is good what i think is bad about rabbitmq then we're going to dive deep into",
    "start": "19439",
    "end": "25519"
  },
  {
    "text": "some sort of philosophical discussions of what rabbitmq can evolve into like a",
    "start": "25519",
    "end": "32640"
  },
  {
    "text": "can can you implement like quick technology and rapid mq or or something like http 2 multiplexing and instead of having their",
    "start": "32640",
    "end": "39520"
  },
  {
    "text": "own custom channel idea and their tcp right some a lot more discussion there",
    "start": "39520",
    "end": "45280"
  },
  {
    "text": "i'm gonna dive a little bit deep into how do you how rapid mq works today under the hood",
    "start": "45280",
    "end": "52719"
  },
  {
    "text": "by doing a little bit of a wire sharking uh uh that protocol the advanced message",
    "start": "52719",
    "end": "59760"
  },
  {
    "text": "queue protocol and see how it looks like how chatty it is how how consumer uh",
    "start": "59760",
    "end": "65439"
  },
  {
    "text": "and consumes and how publisher actually publish pop sub cues all that jazz",
    "start": "65439",
    "end": "70720"
  },
  {
    "text": "can i talk about all that stuff so if you're interested check out this content and i'm gonna see you in the",
    "start": "70720",
    "end": "76320"
  },
  {
    "text": "next one check out the other content of of this channel i discuss anything back in engineering that's",
    "start": "76320",
    "end": "82159"
  },
  {
    "text": "what i love to discuss i'm gonna see on the next one enjoy",
    "start": "82159",
    "end": "87840"
  },
  {
    "start": "86000",
    "end": "879000"
  },
  {
    "text": "what is going on guys my name is hussain and this video i want to discuss cues and when to use the cues message queues",
    "start": "95600",
    "end": "103360"
  },
  {
    "text": "to be specific like there are other type of queues but i don't i'm not sure what are they so i'm talking about rabbitmq 0mq",
    "start": "103360",
    "end": "111360"
  },
  {
    "text": "kafka when do you want to use this in your architecture and do you really need it right and that's the question here you",
    "start": "111360",
    "end": "118079"
  },
  {
    "text": "always have a question that hey do i really need to implement this in my system design or not",
    "start": "118079",
    "end": "124079"
  },
  {
    "text": "and i'm just trying to kind of assess that and help you with that if possible so how",
    "start": "124079",
    "end": "131360"
  },
  {
    "text": "about we jump into it and if you're new here guys i discuss all sorts of backend engineering in this channel so if you're interested",
    "start": "131360",
    "end": "137599"
  },
  {
    "text": "subscribe and like this video and share with your friends that's it let's just jump into it",
    "start": "137599",
    "end": "142640"
  },
  {
    "text": "all right so what is a queue and when do we need to use it and uh guys if you if you already",
    "start": "142640",
    "end": "150640"
  },
  {
    "text": "uh subscribe to my channel you would see me repeat this over and over again any technology out there any back-end",
    "start": "150640",
    "end": "157120"
  },
  {
    "text": "technology out there it exists for a reason and it exists to solve a problem so i know",
    "start": "157120",
    "end": "164720"
  },
  {
    "text": "that might sound cliche and makes just perfect sense right just yeah of course it",
    "start": "164720",
    "end": "169920"
  },
  {
    "text": "exists for reason and that also means that there's no technology just exists for a fun of it or because it's",
    "start": "169920",
    "end": "176080"
  },
  {
    "text": "cool right you need to use it if that problem exists for you you",
    "start": "176080",
    "end": "181920"
  },
  {
    "text": "cannot just use grpc because it's hip and cool right no",
    "start": "181920",
    "end": "187680"
  },
  {
    "text": "you should use it when you absolutely the problems that grpc addresses solves your problem right",
    "start": "187680",
    "end": "195280"
  },
  {
    "text": "addresses your problem same thing with a queue so how about we talk about the actual problems with the queue solved",
    "start": "195280",
    "end": "203040"
  },
  {
    "text": "back to the request response architecture when i make a request to a backend",
    "start": "203040",
    "end": "210159"
  },
  {
    "text": "and regardless of the communication protocol that i use whether it's tcp stateful tcp raw",
    "start": "210159",
    "end": "218560"
  },
  {
    "text": "or whether i'm using grpc again stateful or with mm whether i'm using a stateless",
    "start": "218560",
    "end": "225599"
  },
  {
    "text": "wrist architecture that request requires some",
    "start": "225599",
    "end": "230799"
  },
  {
    "text": "resources at the back end to be served right to be consumed",
    "start": "230799",
    "end": "237200"
  },
  {
    "text": "and executed that request what does that mean it means that",
    "start": "237200",
    "end": "242480"
  },
  {
    "text": "request might be less to get all the employees right or",
    "start": "242480",
    "end": "248239"
  },
  {
    "text": "an update to do a booking system right so hey i'm on a book this seat",
    "start": "248239",
    "end": "253599"
  },
  {
    "text": "that's that's a that's same thing right and this requires a finite amount of time of your server",
    "start": "253599",
    "end": "261199"
  },
  {
    "text": "to actually process this and we talked about the ways you can serve your request",
    "start": "261199",
    "end": "269120"
  },
  {
    "text": "and one way to solve this problem is asynchronous execution with a single",
    "start": "269120",
    "end": "276800"
  },
  {
    "text": "thread like your server has one thread and that thread just keeps working the problems that it have",
    "start": "276800",
    "end": "284880"
  },
  {
    "text": "right it's so serving request this is now it's listening to tcp connection this is now doing that that's how node.js does it right other other",
    "start": "284880",
    "end": "292160"
  },
  {
    "text": "web servers uh does it differently multi-threading multi-processing right regardless right so apache does it",
    "start": "292160",
    "end": "298800"
  },
  {
    "text": "multi-threading node.js does a single thread but it's asynchronous and we talked about that i'm going to reference the video here i think it's",
    "start": "298800",
    "end": "304800"
  },
  {
    "text": "here go check it out but sometimes a single thread",
    "start": "304800",
    "end": "310160"
  },
  {
    "text": "in a node.js or multi-processing or multi-threading in a web server",
    "start": "310160",
    "end": "318720"
  },
  {
    "text": "could not cut it because you will quickly overwhelm that single server to execute",
    "start": "318720",
    "end": "325520"
  },
  {
    "text": "all these requests right it really depends if that request is taking a long",
    "start": "325520",
    "end": "330960"
  },
  {
    "text": "time to process and if it does that if that equals taking a huge amount of time",
    "start": "330960",
    "end": "336639"
  },
  {
    "text": "and unpredictable amount of time to process then there are flood of other requests",
    "start": "336639",
    "end": "344800"
  },
  {
    "text": "that is coming i'm not talking about queues yet guys right just normal request response there are a lot",
    "start": "344800",
    "end": "350800"
  },
  {
    "text": "of requests coming and they are waiting and when i say waiting they",
    "start": "350800",
    "end": "356400"
  },
  {
    "text": "the client is actually just blocked because that access to the tcp",
    "start": "356400",
    "end": "362479"
  },
  {
    "text": "connection didn't even get a response back okay and that could be harmful for the",
    "start": "362479",
    "end": "369360"
  },
  {
    "text": "user experience right the user will feel it so what is going on i click and nothing happened",
    "start": "369360",
    "end": "375039"
  },
  {
    "text": "and users hate that when they click and nothing happens you show me something that happens or",
    "start": "375039",
    "end": "381759"
  },
  {
    "text": "tell me that something is happening but don't tell me that i'm",
    "start": "381759",
    "end": "386880"
  },
  {
    "text": "doing something and i did something and i don't see any results they hate that you're a user you probably seen that",
    "start": "386880",
    "end": "395919"
  },
  {
    "text": "so how do we trick that a requ a normal request response architecture",
    "start": "395919",
    "end": "401520"
  },
  {
    "text": "doesn't cut it in this case if your response time is unpredictable right because",
    "start": "401520",
    "end": "409199"
  },
  {
    "text": "you have a lot of requests coming and you might say hey who's saying i'm going to scale horizontally and that's",
    "start": "409199",
    "end": "415199"
  },
  {
    "text": "absolutely fine you can do that you can put a reverse proxy have it configured to be a load balancer",
    "start": "415199",
    "end": "422000"
  },
  {
    "text": "and swizzle the request to all the other services and if you have if you start",
    "start": "422000",
    "end": "429199"
  },
  {
    "text": "waiting if you've started seeing requests taking a long time to process",
    "start": "429199",
    "end": "436000"
  },
  {
    "text": "right then you start spinning up more services or containers if you're in a microservices architecture and then",
    "start": "436000",
    "end": "442080"
  },
  {
    "text": "start serving that and people do this to this day without a queue without the idea of a queue right",
    "start": "442080",
    "end": "448319"
  },
  {
    "text": "and as i said this doesn't really scale well if your processing at the back end is is very hungry processing hungry or",
    "start": "448319",
    "end": "456080"
  },
  {
    "text": "cpu hungry or even ram hungry because you cannot spend a lot of time",
    "start": "456080",
    "end": "462400"
  },
  {
    "text": "just uh having this process take time so if you're",
    "start": "462400",
    "end": "467599"
  },
  {
    "text": "predicting that responses will always take a long time probably spinning up multiple services will not",
    "start": "467599",
    "end": "474720"
  },
  {
    "text": "help you right because the request will be the same whether it's going",
    "start": "474720",
    "end": "480160"
  },
  {
    "text": "uh it's sending to another server which are for which is free or a service that is server doing",
    "start": "480160",
    "end": "486560"
  },
  {
    "text": "other things as well yeah you're gonna see some mindless cool",
    "start": "486560",
    "end": "492240"
  },
  {
    "text": "minus school is that the right word minuscule difference but still it's going to take",
    "start": "492240",
    "end": "498160"
  },
  {
    "text": "a long time so here's where a cue is useful if you",
    "start": "498160",
    "end": "504560"
  },
  {
    "text": "really think that request will always exponentially go large yeah maybe if",
    "start": "504560",
    "end": "511680"
  },
  {
    "text": "your database is uh doesn't have any rows but as you grow large that request will go slower and slower",
    "start": "511680",
    "end": "517760"
  },
  {
    "text": "slower would such exponentially not necessary exponentially just uh polynomially",
    "start": "517760",
    "end": "523120"
  },
  {
    "text": "with your number of rows so here's where q really beneficial so what you would do",
    "start": "523120",
    "end": "529519"
  },
  {
    "text": "in this case is what is what i'm gonna do i'm gonna employ a queue in my system a message",
    "start": "529519",
    "end": "536399"
  },
  {
    "text": "queue and that means if i am receiving a request a server",
    "start": "536399",
    "end": "541680"
  },
  {
    "text": "i will do a very quick operation that is constant",
    "start": "541680",
    "end": "548640"
  },
  {
    "text": "that is a big o of one it's a very fast operation and i'm gonna respond to",
    "start": "548640",
    "end": "555040"
  },
  {
    "text": "the user with a with some sort of an identifier right and here's that's that's how a",
    "start": "555040",
    "end": "563040"
  },
  {
    "text": "queue works so if i send me a request i'm gonna put it in a queue that's a",
    "start": "563040",
    "end": "568959"
  },
  {
    "text": "big off one because writing is always fast especially if you're in a lsm3 kind of a database right and",
    "start": "568959",
    "end": "576160"
  },
  {
    "text": "most databases now especially write only just right to the end lsm right log structure multi you write",
    "start": "576160",
    "end": "583200"
  },
  {
    "text": "it and then you respond back to the user hey i committed to you user that i have",
    "start": "583200",
    "end": "590000"
  },
  {
    "text": "received your request and it's now processing or it's now it's",
    "start": "590000",
    "end": "595839"
  },
  {
    "text": "in the queue it i can't promise anything else but hey i received it better than having a request that is not",
    "start": "595839",
    "end": "604640"
  },
  {
    "text": "served right that is not just waiting so",
    "start": "604640",
    "end": "609680"
  },
  {
    "text": "check user experience better right okay i'm willing to wait as a user yeah at",
    "start": "609680",
    "end": "614800"
  },
  {
    "text": "least i still they received it and now really up to you as an architect",
    "start": "614800",
    "end": "621839"
  },
  {
    "text": "you can have a client come back and ask and paul",
    "start": "621839",
    "end": "628720"
  },
  {
    "text": "p-o-l-l this task id that we're given he's like hey how's",
    "start": "628720",
    "end": "634640"
  },
  {
    "text": "how's this job down we're doing how's this job going how's just just job done",
    "start": "634640",
    "end": "639760"
  },
  {
    "text": "and once that response actually complete the response will come",
    "start": "639760",
    "end": "645279"
  },
  {
    "text": "back so hey that job is done okay you can now do whatever you want to do that's one way of solving the problem",
    "start": "645279",
    "end": "652240"
  },
  {
    "text": "rabbit in the queue doesn't do it this way uh rabbit mq does it the push way right",
    "start": "652240",
    "end": "660000"
  },
  {
    "text": "where it's just like a stateful connection i forgot with the the protocol that robert mcqueen is but it's",
    "start": "660000",
    "end": "666480"
  },
  {
    "text": "a it's a it's a very elegant way of using channels it's awesome i love it and i'm going to make",
    "start": "666480",
    "end": "671760"
  },
  {
    "text": "another video about this compared to http 2 the idea of rabbitmq using channels it's very similar to streams",
    "start": "671760",
    "end": "679200"
  },
  {
    "text": "and i don't know who came up with this idea before regardless get back to the point if i",
    "start": "679200",
    "end": "684800"
  },
  {
    "text": "response back if that job is dequeued right or executed that",
    "start": "684800",
    "end": "692959"
  },
  {
    "text": "could push results back to the client immediately as they are received right",
    "start": "692959",
    "end": "700560"
  },
  {
    "text": "so this way you eliminated the latency of waiting clients still technically",
    "start": "700560",
    "end": "709279"
  },
  {
    "text": "didn't receive the result right because you don't receive the result but i can",
    "start": "709279",
    "end": "714480"
  },
  {
    "text": "unblock the user experience i can show some sort of a progress bar i can i can",
    "start": "714480",
    "end": "719760"
  },
  {
    "text": "give a better user experience and i elevated the flood of request on my server now",
    "start": "719760",
    "end": "726880"
  },
  {
    "text": "i'm going to have a nice queue yes it's a centralized system still but it's an ice cube",
    "start": "726880",
    "end": "732320"
  },
  {
    "text": "and people people services can listen to the skew and start pulling jobs pulling tasks",
    "start": "732320",
    "end": "740160"
  },
  {
    "text": "and execute and write it back to the queue right very very similar to a pub sub system",
    "start": "740160",
    "end": "746240"
  },
  {
    "text": "except the only difference between a queue and a pub sub a queue is whenever you remove an item",
    "start": "746240",
    "end": "753760"
  },
  {
    "text": "from the queue it is gone right that service owns it it is dq'd",
    "start": "753760",
    "end": "761440"
  },
  {
    "text": "versus the pub sub system you have a topic or very similarly right",
    "start": "761440",
    "end": "768160"
  },
  {
    "text": "the brokers have these topics and the service can as infinitely",
    "start": "768160",
    "end": "773839"
  },
  {
    "text": "consume the same item many services can consume the same item right but now each service",
    "start": "773839",
    "end": "781440"
  },
  {
    "text": "have some sort of a position that remembers oh i consumed this yes i consumed this i consumed this and the",
    "start": "781440",
    "end": "787120"
  },
  {
    "text": "service optionally can have a way to go back and forth in the queue and then the pop sub system so that's a",
    "start": "787120",
    "end": "794000"
  },
  {
    "text": "very cool very quick way of knowing how do you actually when do you want to use a queue versus",
    "start": "794000",
    "end": "801680"
  },
  {
    "text": "just a normal request process circuit system and load balancing and all that stuff right",
    "start": "801680",
    "end": "807839"
  },
  {
    "text": "so very quick if your request is indeterministic you don't know how long it's going to take",
    "start": "807839",
    "end": "813760"
  },
  {
    "text": "a queue is probably a good idea for you if your process is by nature long running a queue is",
    "start": "813760",
    "end": "820480"
  },
  {
    "text": "good for you right just cue it and let other process pick up the work and",
    "start": "820480",
    "end": "825839"
  },
  {
    "text": "write it back to the queue or if it's a resource hungry if you're by default your process back",
    "start": "825839",
    "end": "832320"
  },
  {
    "text": "in processing is a resource hungry it's a bad idea to have the web server itself do the work",
    "start": "832320",
    "end": "837680"
  },
  {
    "text": "for you the web server should do one job and one job only shouldn't process your stinking",
    "start": "837680",
    "end": "843519"
  },
  {
    "text": "request it should just response back to web traffic it serves web it is a web",
    "start": "843519",
    "end": "850720"
  },
  {
    "text": "server it serves web traffic and that's it don't let it process your prime numbers",
    "start": "850720",
    "end": "856160"
  },
  {
    "text": "or do a very complex operations in the web servers stuff try to separate concerns as much",
    "start": "856160",
    "end": "862000"
  },
  {
    "text": "as possible all right guys that's a quick video just to let you know the difference between when to use a queue when do not use a",
    "start": "862000",
    "end": "868480"
  },
  {
    "text": "queue hope you enjoyed this video subscribe if you like this content like",
    "start": "868480",
    "end": "874000"
  },
  {
    "text": "this video if you like it i'm gonna see you in the next one you say guys stay awesome",
    "start": "874000",
    "end": "885839"
  },
  {
    "start": "879000",
    "end": "2690000"
  },
  {
    "text": "one of you guys asked me a question which is better wrist or message queue",
    "start": "887199",
    "end": "893839"
  },
  {
    "text": "i struggled to answer for a while but after thinking about it i discovered that both rest and message queue does boil",
    "start": "893839",
    "end": "901839"
  },
  {
    "text": "down to the basic elements which are basically rest being http",
    "start": "901839",
    "end": "908480"
  },
  {
    "text": "which is request response and message queue being publish subscribe in this video i",
    "start": "908480",
    "end": "914639"
  },
  {
    "text": "want to discuss both the request response and the publish subscribe architecture and talk about the pros and cons of each",
    "start": "914639",
    "end": "921839"
  },
  {
    "text": "so if you're interested stay tuned you know here welcome my name is hussain and this",
    "start": "921839",
    "end": "927440"
  },
  {
    "text": "channel we discuss all sorts of software engineering by example so if you want to become a better software engineer consider subscribing",
    "start": "927440",
    "end": "934480"
  },
  {
    "text": "hit that bell icon so you get notified every time i upload a new video what that say let's just jump into this video",
    "start": "934480",
    "end": "940160"
  },
  {
    "text": "pub sub let's do this all right here's the agenda what you're gonna do is like we're gonna",
    "start": "940160",
    "end": "945759"
  },
  {
    "text": "talk about request response a little bit and then we're gonna talk about where the request response actually",
    "start": "945759",
    "end": "951839"
  },
  {
    "text": "breaks right because nothing is perfect in life apparently right and as i start talking about that",
    "start": "951839",
    "end": "958240"
  },
  {
    "text": "you guys are going to see time codes where you can jump to the interesting part of the video request response pros",
    "start": "958240",
    "end": "964560"
  },
  {
    "text": "and cons that's another thing we're going to discuss right what's the good what's the bad about this technology",
    "start": "964560",
    "end": "970320"
  },
  {
    "text": "publish subscribe architecture we're going to talk about that how it actually works",
    "start": "970320",
    "end": "975759"
  },
  {
    "text": "what is it right with example and then finally we're going to talk about pep seb pros and cones if you're",
    "start": "975759",
    "end": "982639"
  },
  {
    "text": "interested stay tuned let's start with request response model it's a very elegant and simple",
    "start": "982639",
    "end": "989920"
  },
  {
    "text": "design that have been designed in the 90s and the whole internet is running on this thing",
    "start": "989920",
    "end": "995759"
  },
  {
    "text": "it's very very simple design that's why it's popular so you're a client you're a web server",
    "start": "995759",
    "end": "1003759"
  },
  {
    "text": "and the client makes a request let's say this is a get request over http the",
    "start": "1003759",
    "end": "1010079"
  },
  {
    "text": "client waits the client is blocked now you can argue with that whether it's blocked and cannot do anything else",
    "start": "1010079",
    "end": "1018240"
  },
  {
    "text": "right which is no longer true because we have asynchronous requests right you can make a request and you can",
    "start": "1018240",
    "end": "1024798"
  },
  {
    "text": "do other stuff in the background that's okay right because it's just",
    "start": "1024799",
    "end": "1029918"
  },
  {
    "text": "you make a request you wait and you don't actively wait you don't spend any",
    "start": "1029919",
    "end": "1036240"
  },
  {
    "text": "processing power waiting right just break a request and forget about it right and then once the request comes back you",
    "start": "1036240",
    "end": "1043199"
  },
  {
    "text": "get back a content and then you do something with this content right so that's the request response model",
    "start": "1043199",
    "end": "1048799"
  },
  {
    "text": "it's always the client initiating the request there is no other way coming from the",
    "start": "1048799",
    "end": "1054240"
  },
  {
    "text": "web server okay and i'm gonna reference a video here for the asynchronous versus asynchronous so there are a list",
    "start": "1054240",
    "end": "1061440"
  },
  {
    "text": "of playlists that you can go and watch that if you're interested to know more all right and where does this break is this",
    "start": "1061440",
    "end": "1068160"
  },
  {
    "text": "perfect obviously nothing is perfect let's assume you have this system",
    "start": "1068160",
    "end": "1073360"
  },
  {
    "text": "where you want to upload a video let's say this is youtube and obviously when you upload a video to",
    "start": "1073360",
    "end": "1078960"
  },
  {
    "text": "youtube you don't just upload a video there are a lot of stuff happening in the background so you want to upload the whole video",
    "start": "1078960",
    "end": "1085360"
  },
  {
    "text": "you wanna youtube want to compress the video because usually it's that raw mp4 file is",
    "start": "1085360",
    "end": "1091520"
  },
  {
    "text": "very huge right you want to compress it and after compress is done you want to pick that up by the format",
    "start": "1091520",
    "end": "1098559"
  },
  {
    "text": "service you want to format and what does that mean you want to produce different video ties for",
    "start": "1098559",
    "end": "1103919"
  },
  {
    "text": "the appropriate devices so you want to provide a video for mobile phones so that's up maybe 480 or 720 or",
    "start": "1103919",
    "end": "1110960"
  },
  {
    "text": "1080 or 4k i want to produce different kind of content right based on the viewing platform and",
    "start": "1110960",
    "end": "1117600"
  },
  {
    "text": "provide that and you want to also once this is done you want to notify subscribers so how do",
    "start": "1117600",
    "end": "1123120"
  },
  {
    "text": "you do that with just request response well it's still simple but it really breaks",
    "start": "1123120",
    "end": "1128559"
  },
  {
    "text": "down if you think about it so client makes a request uploads that beautiful raw mp4 video right and it waits",
    "start": "1128559",
    "end": "1136880"
  },
  {
    "text": "right it can do other stuff in the background but still waiting right and then upload service processing that",
    "start": "1136880",
    "end": "1143280"
  },
  {
    "text": "stuff and then once it's done it now it is waiting and it's making",
    "start": "1143280",
    "end": "1150000"
  },
  {
    "text": "a request to the compressed service to compress the uploaded video all right okay that maker code now the",
    "start": "1150000",
    "end": "1156960"
  },
  {
    "text": "compressed video is processing and once it is done it is waiting and make a request to the",
    "start": "1156960",
    "end": "1164480"
  },
  {
    "text": "format service and waits right so a lot of people are waiting there's a chain of people waiting",
    "start": "1164480",
    "end": "1170160"
  },
  {
    "text": "for this thing to get done format service is processing producing all these 418",
    "start": "1170160",
    "end": "1176960"
  },
  {
    "text": "720 and 1080 and 4k and 8k there's no 8k right it's a fad",
    "start": "1176960",
    "end": "1183120"
  },
  {
    "text": "all right i don't know if that's true okay format services just processing",
    "start": "1183120",
    "end": "1189280"
  },
  {
    "text": "that stuff and then once it's done it will makes a request to the notification so it's like",
    "start": "1189280",
    "end": "1195200"
  },
  {
    "text": "okay i'm done let's make a request to the notification service which will notify all the subscribers obviously that hey",
    "start": "1195200",
    "end": "1202720"
  },
  {
    "text": "we're done this video is uploaded go and and that and then the for myself is waiting for",
    "start": "1202720",
    "end": "1207919"
  },
  {
    "text": "the notification service and you guys can't argue with this like oh go no really we can notify people",
    "start": "1207919",
    "end": "1213280"
  },
  {
    "text": "once it's uploaded right no really you want to notify people when it's ready to be consumed when it's here it's",
    "start": "1213280",
    "end": "1220799"
  },
  {
    "text": "not ready to be consumed right so and that even get more complicated as we talk about it all right",
    "start": "1220799",
    "end": "1226559"
  },
  {
    "text": "notification server said okay i'm done the first response format server says i'm done don't press",
    "start": "1226559",
    "end": "1232720"
  },
  {
    "text": "it i'm done so people start unblocking services start unblocking requests as they come in and",
    "start": "1232720",
    "end": "1239600"
  },
  {
    "text": "finally the client would say done upload it all right obviously guys",
    "start": "1239600",
    "end": "1245280"
  },
  {
    "text": "put anything that breaks in the middle the whole thing is broken i'm sorry",
    "start": "1245280",
    "end": "1250799"
  },
  {
    "text": "about that okay so the whole thing is essentially",
    "start": "1250799",
    "end": "1256640"
  },
  {
    "text": "broken right once you put any obstacle and network error the whole",
    "start": "1256640",
    "end": "1262640"
  },
  {
    "text": "chain is broken and you don't know if this thing is finished or not that's the problem we're facing with",
    "start": "1262640",
    "end": "1268240"
  },
  {
    "text": "request response if you're training multiple services especially in a microservices architecture",
    "start": "1268240",
    "end": "1273360"
  },
  {
    "text": "that breaks down let's say we i want to add another copyrighted service",
    "start": "1273360",
    "end": "1278720"
  },
  {
    "text": "and we want this uh to the copyright service like to check the contents for content ids",
    "start": "1278720",
    "end": "1285360"
  },
  {
    "text": "and check if there is like a copyright infringement right so you want to consume the",
    "start": "1285360",
    "end": "1291120"
  },
  {
    "text": "compressed service need to send the compressed file to both format",
    "start": "1291120",
    "end": "1296240"
  },
  {
    "text": "and copyrighted oh my god right this topology gets really complicated real",
    "start": "1296240",
    "end": "1301760"
  },
  {
    "text": "quick son right all right what's good what's bad about this",
    "start": "1301760",
    "end": "1308080"
  },
  {
    "text": "pros it's very elegant and simple yes if you have only two pieces of",
    "start": "1308080",
    "end": "1315039"
  },
  {
    "text": "software talking to each other that's beautiful and i still love that but once you get into",
    "start": "1315039",
    "end": "1321280"
  },
  {
    "text": "complicated scenarios not really right it's elegant and simple i love that",
    "start": "1321280",
    "end": "1326559"
  },
  {
    "text": "it's stateless especially when you use http that's not really true for like uh request response like a database",
    "start": "1326559",
    "end": "1333760"
  },
  {
    "text": "like database you make a sequel that's still a request response you make a update table where",
    "start": "1333760",
    "end": "1341679"
  },
  {
    "text": "blah blah blah that's a request and then when you get a better result like hey the 70 year old updated that's a",
    "start": "1341679",
    "end": "1348240"
  },
  {
    "text": "response right that's still a request response but that's that's nowhere stateless this is the stateflies gets",
    "start": "1348240",
    "end": "1354159"
  },
  {
    "text": "right http another is stateless but yes you can argue with that but but it is if",
    "start": "1354159",
    "end": "1360000"
  },
  {
    "text": "it's stateless it's good because it's scalable right you can scale it horizontally and that's a very",
    "start": "1360000",
    "end": "1366080"
  },
  {
    "text": "overloaded word i hate putting it there but i have to put something in the pros section scalable here means that it is scalable",
    "start": "1366080",
    "end": "1373600"
  },
  {
    "text": "at that receiver end where you can duplicate the receiver if it's",
    "start": "1373600",
    "end": "1379120"
  },
  {
    "text": "the same content right if it's the same it has the same functionality you can duplicate",
    "start": "1379120",
    "end": "1384640"
  },
  {
    "text": "it easily and you can scale it easily right because it's just making the same request right you can put it behind load balance",
    "start": "1384640",
    "end": "1391039"
  },
  {
    "text": "and beautiful idea right load balancer can just route request to any service and",
    "start": "1391039",
    "end": "1396960"
  },
  {
    "text": "just scales very nicely right but not really scalable in other terms right so",
    "start": "1396960",
    "end": "1402000"
  },
  {
    "text": "scalable here is a very overloaded word and i'm really mean about",
    "start": "1402000",
    "end": "1407200"
  },
  {
    "text": "horizontal scalability of the same duplicated service oh my god that's getting complicated",
    "start": "1407200",
    "end": "1413360"
  },
  {
    "text": "okay what was that cons what's bad about this obviously as we said it's very bad for",
    "start": "1413360",
    "end": "1418799"
  },
  {
    "text": "multiple receivers the moment you start seeing a lot of raseivas a lot of consumers you start",
    "start": "1418799",
    "end": "1424799"
  },
  {
    "text": "really wearing yourself down and and and yeah things can go really long at the",
    "start": "1424799",
    "end": "1430559"
  },
  {
    "text": "moment you insert any thing in the middle right you your architecture falls apart okay",
    "start": "1430559",
    "end": "1437279"
  },
  {
    "text": "that's why you have to start hacking things around how do you hack things around right you basically introduce high coupling",
    "start": "1437279",
    "end": "1445279"
  },
  {
    "text": "so people a lot of services start talking to each other which produces a lot of high coupled services",
    "start": "1445279",
    "end": "1451600"
  },
  {
    "text": "so services start knowing each other and that's bad we want software to have social anxiety",
    "start": "1451600",
    "end": "1458080"
  },
  {
    "text": "we do not want software to talk to each other that's bad in software high coupling is bad we want",
    "start": "1458080",
    "end": "1464320"
  },
  {
    "text": "software to be as oblivious as possible about the whole system hi",
    "start": "1464320",
    "end": "1470720"
  },
  {
    "text": "coupling yeah we talked about that client and server have to be running you won't say hussain that's just weird",
    "start": "1470720",
    "end": "1477919"
  },
  {
    "text": "of course i'm gonna send a request of the servers down yeah of course the client have and",
    "start": "1477919",
    "end": "1483039"
  },
  {
    "text": "server has to be running to communicate are you telling me there's something better than that where the client can go",
    "start": "1483039",
    "end": "1489039"
  },
  {
    "text": "offline and or the server can go fly and still they can communicate oh we're gonna see about that all right",
    "start": "1489039",
    "end": "1496080"
  },
  {
    "text": "yeah so that's kind of a disadvantage pop sub has this advantage still have my concerns about",
    "start": "1496080",
    "end": "1503440"
  },
  {
    "text": "that but we're going to talk about that all right so chaining circuit breaking",
    "start": "1503440",
    "end": "1508720"
  },
  {
    "text": "retries all that stuff that we introduced just to solve the problem of of how can",
    "start": "1508720",
    "end": "1514960"
  },
  {
    "text": "we guarantee that these topology of systems connect together",
    "start": "1514960",
    "end": "1520159"
  },
  {
    "text": "right the highly coupled system can correctly talk to each other right we need to time out correctly we need to",
    "start": "1520159",
    "end": "1526640"
  },
  {
    "text": "retry if that didn't work and that just put a lot of pressure on the service and complicate things",
    "start": "1526640",
    "end": "1532640"
  },
  {
    "text": "even worse right and that is a problem by itself it's not an easy problem to",
    "start": "1532640",
    "end": "1538159"
  },
  {
    "text": "solve yes service meshes take care of that stuff clients like finagle on twitter that",
    "start": "1538159",
    "end": "1546080"
  },
  {
    "text": "open source to finagle can take care of that stuff for you right if you make a request but to me",
    "start": "1546080",
    "end": "1552799"
  },
  {
    "text": "still sounds like we have a very complex system so i don't know about that right yeah",
    "start": "1552799",
    "end": "1559360"
  },
  {
    "text": "all right pops up to the rescue it's the best thing ever not",
    "start": "1559360",
    "end": "1564480"
  },
  {
    "text": "really all right so let's talk about pabst up publish subscribe model all right we'll",
    "start": "1564480",
    "end": "1569520"
  },
  {
    "text": "take the same example the youtube uploading service and we're gonna upload a video and we're",
    "start": "1569520",
    "end": "1575120"
  },
  {
    "text": "gonna compress the video we're gonna format the video we're gonna notify people how about that",
    "start": "1575120",
    "end": "1580240"
  },
  {
    "text": "so there is as you can see here that you can see still the services here the client here the notification services",
    "start": "1580240",
    "end": "1586080"
  },
  {
    "text": "all that jazz but there's some box here this box is the middle middle layer that everybody's",
    "start": "1586080",
    "end": "1593760"
  },
  {
    "text": "communicating to and this is called multiple names people call it broker people call it",
    "start": "1593760",
    "end": "1599200"
  },
  {
    "text": "message queue people call it streaming processing a lot of names but it's a middleware",
    "start": "1599200",
    "end": "1606000"
  },
  {
    "text": "layer where you can push and publish content to it and it will take care of",
    "start": "1606000",
    "end": "1614159"
  },
  {
    "text": "delivering that content to someone else okay based on the subscription model so these",
    "start": "1614159",
    "end": "1621440"
  },
  {
    "text": "guys subscribe these guys publish everybody can publish and subscribe at the same time and you",
    "start": "1621440",
    "end": "1627279"
  },
  {
    "text": "publish and you subscribe and publish to what is called a queue or sometimes called topic like kafka",
    "start": "1627279",
    "end": "1634240"
  },
  {
    "text": "call it topic uh rabbit mq call it q",
    "start": "1634240",
    "end": "1639279"
  },
  {
    "text": "channels it's called i think red is called channels right so by the way this and kafka and rabbit",
    "start": "1639279",
    "end": "1645279"
  },
  {
    "text": "mq 0mq all of that stuff are just this message queue that supports pops up right",
    "start": "1645279",
    "end": "1650960"
  },
  {
    "text": "all right let's go through an example and see if this thing is good or not right so here's the thing here's what we're gonna do i'm gonna i'm making a client",
    "start": "1650960",
    "end": "1657760"
  },
  {
    "text": "i'm gonna upload the service still this is to add to an extent this is still a",
    "start": "1657760",
    "end": "1663200"
  },
  {
    "text": "request response right you can still mission mash what does that mean mission match i don't think",
    "start": "1663200",
    "end": "1669440"
  },
  {
    "text": "it's a word but yeah you can do a hybrid between request response and pops up so that's okay",
    "start": "1669440",
    "end": "1674960"
  },
  {
    "text": "right so you make a request and upload server is still processing waiting for all your stuff so the client",
    "start": "1674960",
    "end": "1681440"
  },
  {
    "text": "is blocked now right and again guys when i say block doesn't mean he cannot do anything or she cannot do anything",
    "start": "1681440",
    "end": "1687440"
  },
  {
    "text": "why am i referring to computers as gender okay i don't know all right so you make",
    "start": "1687440",
    "end": "1693200"
  },
  {
    "text": "a request and it waits right it still can't do other stuff in the background obviously",
    "start": "1693200",
    "end": "1698799"
  },
  {
    "text": "but it is asynchronous nevertheless so upload service processing once it's done the upload",
    "start": "1698799",
    "end": "1705600"
  },
  {
    "text": "service will say you know what just give me a second give me a second give me a second i'm gonna",
    "start": "1705600",
    "end": "1710960"
  },
  {
    "text": "publish this really quick to this topic and once i get the result and which is",
    "start": "1710960",
    "end": "1716960"
  },
  {
    "text": "usually this quick because these guys are in the same network interface i'm assuming this is another",
    "start": "1716960",
    "end": "1722320"
  },
  {
    "text": "network interface and this is another network interface so they communicate with this i am",
    "start": "1722320",
    "end": "1727919"
  },
  {
    "text": "hoping this is in the same hopefully a lan area and they will communicate",
    "start": "1727919",
    "end": "1734320"
  },
  {
    "text": "whether like in a 10 gigabit uh ethernet network or whatever and that will become fast",
    "start": "1734320",
    "end": "1740240"
  },
  {
    "text": "right so we make a request and then we'll get a response real quick upload that five gig video once it's done",
    "start": "1740240",
    "end": "1748080"
  },
  {
    "text": "that's it your job is done as upload service so your client you can notify the client that it's done let's repeat that right",
    "start": "1748080",
    "end": "1753679"
  },
  {
    "text": "all right so upload once it's done publish it to a topic",
    "start": "1753679",
    "end": "1758720"
  },
  {
    "text": "or a channel and get back a result and then sure upload it done that's it the client now done its job",
    "start": "1758720",
    "end": "1766000"
  },
  {
    "text": "you can disconnect the client you can just move on with your life the video is in the system and",
    "start": "1766000",
    "end": "1773440"
  },
  {
    "text": "leave right obviously that means this guy has to be up all the time that's what she said but what we have here is",
    "start": "1773440",
    "end": "1779360"
  },
  {
    "text": "essentially a topic and that topic or the channel has the content it's sometimes called a cue a topic a channel",
    "start": "1779360",
    "end": "1786799"
  },
  {
    "text": "and that has the raw mp4 videos now how do people consume it these guys",
    "start": "1786799",
    "end": "1792559"
  },
  {
    "text": "would have been subscribed already to a topic that already exists i just",
    "start": "1792559",
    "end": "1797919"
  },
  {
    "text": "hide it i did some animation but compressed service in this case is subscribing to this topic now we're",
    "start": "1797919",
    "end": "1804799"
  },
  {
    "text": "gonna talk in details like how this is actually done is it",
    "start": "1804799",
    "end": "1810240"
  },
  {
    "text": "what does it mean to subscribe right it's very weird abstract word right is it",
    "start": "1810240",
    "end": "1816720"
  },
  {
    "text": "are you pushing the result to compress service the moment you have a raw mp4 video or is the",
    "start": "1816720",
    "end": "1823840"
  },
  {
    "text": "compressed service actually pulling information or is is it like pinging what's",
    "start": "1823840",
    "end": "1829120"
  },
  {
    "text": "happening here right so you got to tell me more right so the compressed service there are multiple implementations we're",
    "start": "1829120",
    "end": "1835039"
  },
  {
    "text": "going to talk about them but posh and long polling and then polling just",
    "start": "1835039",
    "end": "1840240"
  },
  {
    "text": "polling is just useless i don't know why would you do that it's just same as a request response but all right",
    "start": "1840240",
    "end": "1846720"
  },
  {
    "text": "so the compressed service will receive now the raw mp4 value let's imagine that it",
    "start": "1846720",
    "end": "1852000"
  },
  {
    "text": "just got it like immediately pushed to it right that has this limitation obviously but we're",
    "start": "1852000",
    "end": "1857440"
  },
  {
    "text": "going to talk about that the compressed service receive this raw mp4 video start processing it and guess what it",
    "start": "1857440",
    "end": "1864399"
  },
  {
    "text": "will publish its own compressed video to another topic that says hey",
    "start": "1864399",
    "end": "1869440"
  },
  {
    "text": "compass video here is it all right it's a topic so it doesn't really know who's going to",
    "start": "1869440",
    "end": "1875200"
  },
  {
    "text": "consume it the upload service didn't know that the compressed server is going to consume it and that's the decoupling that we talked",
    "start": "1875200",
    "end": "1881279"
  },
  {
    "text": "about just decouple that everybody from each other the format services now",
    "start": "1881279",
    "end": "1886640"
  },
  {
    "text": "subscribe to the compressed video topic and it will get it immediately unless",
    "start": "1886640",
    "end": "1892320"
  },
  {
    "text": "this is a little bit okay yeah you get it whether it's push or long polling whatever you get it format",
    "start": "1892320",
    "end": "1899519"
  },
  {
    "text": "service it's just like publishing content look at that 480p 1080p this is garyvee man format",
    "start": "1899519",
    "end": "1906799"
  },
  {
    "text": "services garyvee just just producing content like there is no tomorrow format service publishes all",
    "start": "1906799",
    "end": "1912000"
  },
  {
    "text": "our stuff so that it's done now the notification service let's say you're notification that you",
    "start": "1912000",
    "end": "1917760"
  },
  {
    "text": "want to identify people when the 4k video is ready i know this is a little bit harsh",
    "start": "1917760",
    "end": "1923039"
  },
  {
    "text": "you want to notify people the moment the 480p videos is ready so it's up to you you want for",
    "start": "1923039",
    "end": "1929279"
  },
  {
    "text": "example to notify people when the highest quality videos available that's gonna take long",
    "start": "1929279",
    "end": "1935200"
  },
  {
    "text": "time to notify people obviously but nevertheless right you got it all right and then you can easily fit",
    "start": "1935200",
    "end": "1941279"
  },
  {
    "text": "the copyright service right we talked about them just slam it there and subscribe to the",
    "start": "1941279",
    "end": "1946960"
  },
  {
    "text": "i don't know the compressed video and i will just immediately find any content id and then",
    "start": "1946960",
    "end": "1952799"
  },
  {
    "text": "there right so it's a beautiful design is it perfect though i don't know let's find out pros what's",
    "start": "1952799",
    "end": "1960559"
  },
  {
    "text": "good about this let's find out obviously scales with multiple subscribers",
    "start": "1960559",
    "end": "1966080"
  },
  {
    "text": "right multiple receivers multiple consumers is great for multiple receivers because they can you can add as many",
    "start": "1966080",
    "end": "1972559"
  },
  {
    "text": "receivers and unique receivers here we're talking about unique different distinct",
    "start": "1972559",
    "end": "1978799"
  },
  {
    "text": "receivers right they are different from each other they have different needs they have different",
    "start": "1978799",
    "end": "1985600"
  },
  {
    "text": "wants and they want to be scaled you can scale them beautifully right unlike very cost",
    "start": "1985600",
    "end": "1992080"
  },
  {
    "text": "response where they have to be aware of each other and that's bad all right so this thing is",
    "start": "1992080",
    "end": "1997279"
  },
  {
    "text": "great for micro services all right it's amazing right because the moment you have",
    "start": "1997279",
    "end": "2003919"
  },
  {
    "text": "multiple services in order to avoid the spaghetti uh",
    "start": "2003919",
    "end": "2009840"
  },
  {
    "text": "mesh topology of everything is connected to everything you can you can just have this one place",
    "start": "2009840",
    "end": "2016640"
  },
  {
    "text": "and everything is connected to this place now you have a center almost like a center single point of failure but that can be",
    "start": "2016640",
    "end": "2023679"
  },
  {
    "text": "dealt with differently right we're going to talk about the pros and cons",
    "start": "2023679",
    "end": "2029679"
  },
  {
    "text": "loose coupling you just decoupled things now the services are not aware of each other",
    "start": "2029679",
    "end": "2034960"
  },
  {
    "text": "that's good we like that stuff right the moment the the the less things are",
    "start": "2034960",
    "end": "2040399"
  },
  {
    "text": "coupled to each other the more they can essentially scale and be added and the",
    "start": "2040399",
    "end": "2045679"
  },
  {
    "text": "the system can be modified easily right because you cannot you can smartly",
    "start": "2045679",
    "end": "2053040"
  },
  {
    "text": "to change one thing without breaking the entire system because low coupling are bad because the moment",
    "start": "2053040",
    "end": "2060320"
  },
  {
    "text": "you have a service that depends on 700 services any small change can break any of these",
    "start": "2060320",
    "end": "2067760"
  },
  {
    "text": "700 clients right so if you have if you're sure that your only client is the pub sub system",
    "start": "2067760",
    "end": "2074240"
  },
  {
    "text": "you're golden right works while clients not running well yeah but",
    "start": "2074240",
    "end": "2081839"
  },
  {
    "text": "right so if if we go back to the example there and we like the notification service if",
    "start": "2081839",
    "end": "2089118"
  },
  {
    "text": "if any of these services are offline we don't really care the moment they",
    "start": "2089119",
    "end": "2094560"
  },
  {
    "text": "come back online they will subscribe and they will say hey we have a new message",
    "start": "2094560",
    "end": "2099599"
  },
  {
    "text": "we have a new topic let's consume it right so that's okay because the",
    "start": "2099599",
    "end": "2105119"
  },
  {
    "text": "messages are already stored in the queue and the topic in the channel right so that's how but that",
    "start": "2105119",
    "end": "2112400"
  },
  {
    "text": "also mean there's problems let's talk about the problems cones",
    "start": "2112400",
    "end": "2119599"
  },
  {
    "text": "all right there are obviously message delivery issues all right so the",
    "start": "2119599",
    "end": "2124720"
  },
  {
    "text": "message delivery issues about when we have a subscriber and we have a",
    "start": "2124720",
    "end": "2130400"
  },
  {
    "text": "message queue or we have a publisher and we have this message queue and you're publishing something how do you know that the the queue",
    "start": "2130400",
    "end": "2138240"
  },
  {
    "text": "the message has been published it's first thing okay well you can say that well just saying",
    "start": "2138240",
    "end": "2143839"
  },
  {
    "text": "message queue will will will send me a notification i can only mean hey you're done good stuff we're good all right",
    "start": "2143839",
    "end": "2152560"
  },
  {
    "text": "and that you don't care about anything else for the publisher that's good okay if you don't receive that",
    "start": "2152560",
    "end": "2157680"
  },
  {
    "text": "acknowledgement you might try again and that's a problem okay like how do you know that if if i",
    "start": "2157680",
    "end": "2163760"
  },
  {
    "text": "actually if i published again how do i know i didn't publish that same content twice right we have ways of solving this with",
    "start": "2163760",
    "end": "2170960"
  },
  {
    "text": "item potency but still can it still complicate complication going on there right and who's taking",
    "start": "2170960",
    "end": "2177760"
  },
  {
    "text": "care of this complication should it be me as a publisher or should it be the message queue",
    "start": "2177760",
    "end": "2183280"
  },
  {
    "text": "i don't know right the other problem is the subscriber now the subscriber that's that's that's the challenging",
    "start": "2183280",
    "end": "2189760"
  },
  {
    "text": "part how do you know as a subscriber that that's this subscriber this consumer",
    "start": "2189760",
    "end": "2196960"
  },
  {
    "text": "this compressed service actually got the content first how do you know that it actually",
    "start": "2196960",
    "end": "2203040"
  },
  {
    "text": "processed the content because it has to tell the service hey by the way i read that i read this message",
    "start": "2203040",
    "end": "2209280"
  },
  {
    "text": "just the fact that this acknowledgement that hey i read the message people are taking phds",
    "start": "2209280",
    "end": "2216160"
  },
  {
    "text": "in this because it's so hard right it is so hard to know that a",
    "start": "2216160",
    "end": "2222240"
  },
  {
    "text": "message has been consumed or not how do you know right you can send an economy but what if the economy didn't",
    "start": "2222240",
    "end": "2228960"
  },
  {
    "text": "you didn't get it all right so we talked about the message delivery issues obviously and now let's talk about the complexity",
    "start": "2228960",
    "end": "2236160"
  },
  {
    "text": "it is very complex system because of the message delivery issue we try to find",
    "start": "2236160",
    "end": "2242480"
  },
  {
    "text": "ways around it okay and to find ways around it we add complexity",
    "start": "2242480",
    "end": "2248000"
  },
  {
    "text": "okay so it's very simple here let's talk about the posh and the pull and the long pulling model",
    "start": "2248000",
    "end": "2256640"
  },
  {
    "text": "how do you deliver a message from the topic right how do the broker",
    "start": "2256640",
    "end": "2263119"
  },
  {
    "text": "deliver a message from the topic to the subscriber or to the consumer okay how does that happen right you can",
    "start": "2263119",
    "end": "2270480"
  },
  {
    "text": "you can imagine like rabbit mq already and we made a rabbit mq video",
    "start": "2270480",
    "end": "2275760"
  },
  {
    "text": "here i'm gonna reference it here so you can you guys check it out but it's very interesting",
    "start": "2275760",
    "end": "2281040"
  },
  {
    "text": "and what you want to do essentially is first thing is you wanted to establish a",
    "start": "2281040",
    "end": "2286320"
  },
  {
    "text": "two-way communication like a tcp channel right and then rapid mq has its own protocol i",
    "start": "2286320",
    "end": "2292320"
  },
  {
    "text": "think it's called it's not really its own but it's a standard advanced message queue protocol and they're using that it's a two-way",
    "start": "2292320",
    "end": "2298160"
  },
  {
    "text": "communication it's a two-way binary protocol and they talk about it redis have its own rest protocol",
    "start": "2298160",
    "end": "2304079"
  },
  {
    "text": "i don't know what's stands for what but i forgot so they again it's a byway",
    "start": "2304079",
    "end": "2311119"
  },
  {
    "text": "two-way communication where it's like you communicate on both directions and then now you can",
    "start": "2311119",
    "end": "2316960"
  },
  {
    "text": "start sending push messages as a result because it's a two-way communication right and push messages",
    "start": "2316960",
    "end": "2323680"
  },
  {
    "text": "push notification or push models very complicated you might it might sound nice hey the",
    "start": "2323680",
    "end": "2329839"
  },
  {
    "text": "moment i get a topic immediately pushed to the subscriber that sounds beautiful because it's almost real time",
    "start": "2329839",
    "end": "2337280"
  },
  {
    "text": "but what happened if the client is offline whatever if the consumer's offline you",
    "start": "2337280",
    "end": "2342960"
  },
  {
    "text": "okay you can say they let's hold the message until they are online and then when they are online push it",
    "start": "2342960",
    "end": "2348160"
  },
  {
    "text": "okay that seems reasonable all right but how do you know that they are offline and then that that that status right you're",
    "start": "2348160",
    "end": "2356000"
  },
  {
    "text": "almost keeping track of the subscriber in your message queue and that might be okay",
    "start": "2356000",
    "end": "2361040"
  },
  {
    "text": "if you think about it but that adds additional complexity another complexity is the back pressure",
    "start": "2361040",
    "end": "2367440"
  },
  {
    "text": "where you the publisher is so fast in producing content let's say a",
    "start": "2367440",
    "end": "2374640"
  },
  {
    "text": "publisher is garyvee it's just like grinding content daily right not daily every second just",
    "start": "2374640",
    "end": "2381359"
  },
  {
    "text": "publishing stuff all the time and then the poor consumer can barely consume these",
    "start": "2381359",
    "end": "2388160"
  },
  {
    "text": "messages they're right this is just the flood of push messages them little tiny",
    "start": "2388160",
    "end": "2396320"
  },
  {
    "text": "device for example that consumes that stuff cannot handle that load it just cannot",
    "start": "2396320",
    "end": "2403200"
  },
  {
    "text": "it cannot handle something that shoves down their throat obviously it's gonna wait right and this",
    "start": "2403200",
    "end": "2410079"
  },
  {
    "text": "what do you do with these awaited messages do you just put them back and do you do you",
    "start": "2410079",
    "end": "2416240"
  },
  {
    "text": "time out do you put them do you and do you now keep track oh this client",
    "start": "2416240",
    "end": "2422720"
  },
  {
    "text": "is is slow so i'm gonna slow down this kind of fast i'm gonna speed up that's a very",
    "start": "2422720",
    "end": "2429200"
  },
  {
    "text": "complex problem to solve by itself right that's itself that's a problem right",
    "start": "2429200",
    "end": "2434640"
  },
  {
    "text": "and then another problem is okay so you might say that's the rabbitmq and redis uses that",
    "start": "2434640",
    "end": "2440079"
  },
  {
    "text": "okay that has its own limitation so the other approach is to do like the polling method right where",
    "start": "2440079",
    "end": "2445440"
  },
  {
    "text": "do i have a message do i have a message do i have a message as a client you say do i have a message do i have a message do i have a message do i have a message",
    "start": "2445440",
    "end": "2451280"
  },
  {
    "text": "do i have a message do i have a message well if you don't then you just",
    "start": "2451280",
    "end": "2456480"
  },
  {
    "text": "kind of saturate the network with empty requests which kind of business right right that's a problem okay that's it",
    "start": "2456480",
    "end": "2464000"
  },
  {
    "text": "and that's that's a lot of processing wasted cycles for requesting empty responses",
    "start": "2464000",
    "end": "2471520"
  },
  {
    "text": "right there's nothing for you so why you keep requesting so the so the solution the part solution is use",
    "start": "2471520",
    "end": "2478160"
  },
  {
    "text": "long polling with which kafka uses right which is like hey you make a request",
    "start": "2478160",
    "end": "2483440"
  },
  {
    "text": "and you block yourself right we're going to block you essentially as if you made a request and",
    "start": "2483440",
    "end": "2490800"
  },
  {
    "text": "we're taking a long time processing it is really nothing to process nobody is",
    "start": "2490800",
    "end": "2495839"
  },
  {
    "text": "busy and because it's a beautiful of asynchronousy in this age",
    "start": "2495839",
    "end": "2501119"
  },
  {
    "text": "it's fine you can wait but you can do other stuff in the meantime you the only",
    "start": "2501119",
    "end": "2507599"
  },
  {
    "text": "thing that i spent is memory here that's the only thing i spent maybe a",
    "start": "2507599",
    "end": "2513119"
  },
  {
    "text": "little bit of an event main loop just checking if there's something came back or not",
    "start": "2513119",
    "end": "2518240"
  },
  {
    "text": "but that you're doing that anyway right so it's it's not much so the long pulling that's what",
    "start": "2518240",
    "end": "2524319"
  },
  {
    "text": "kafka uses right and then that has it's also limitation obviously because like",
    "start": "2524319",
    "end": "2529440"
  },
  {
    "text": "you might not get best real time but you solve the problem of",
    "start": "2529440",
    "end": "2536400"
  },
  {
    "text": "essentially the back pressure of shoving a lot of messages for clients",
    "start": "2536400",
    "end": "2541520"
  },
  {
    "text": "who cannot be ready to consume messages right obviously it's a very complex system",
    "start": "2541520",
    "end": "2547520"
  },
  {
    "text": "and network saturation in case of push you're pushing a lot of messages you're",
    "start": "2547520",
    "end": "2552560"
  },
  {
    "text": "shoving the network with the huge amount of notifications and content",
    "start": "2552560",
    "end": "2558000"
  },
  {
    "text": "right that that's a lot of content going at the network sometimes unnecessarily because the",
    "start": "2558000",
    "end": "2563920"
  },
  {
    "text": "client doesn't really necessarily can process these messages which which might lead to failure which may",
    "start": "2563920",
    "end": "2570000"
  },
  {
    "text": "which may lead to you retrying the broker can have to retry these requests which is",
    "start": "2570000",
    "end": "2577359"
  },
  {
    "text": "also bad right and then network saturation on the other hand is like the other way under utilization which i didn't write",
    "start": "2577359",
    "end": "2583520"
  },
  {
    "text": "here it's just like hey i make a request but i don't see anything i make a request i don't see anything so summary",
    "start": "2583520",
    "end": "2590000"
  },
  {
    "text": "what did we discuss in this video we talked about where the request",
    "start": "2590000",
    "end": "2595839"
  },
  {
    "text": "response model breaks right it's a beautiful design but it has",
    "start": "2595839",
    "end": "2601119"
  },
  {
    "text": "its limitation right we talked about the pros and cons of this request pose we talked about the publish subscribe pattern or",
    "start": "2601119",
    "end": "2608400"
  },
  {
    "text": "architecture i don't know what you call it right publish subscribe architecture or",
    "start": "2608400",
    "end": "2613839"
  },
  {
    "text": "pattern whatever rocks your boat and we talked about the pros and cons of that thing okay",
    "start": "2613839",
    "end": "2619280"
  },
  {
    "text": "the example of this is kafka rabbit mq and radius we made a video about redis",
    "start": "2619280",
    "end": "2625599"
  },
  {
    "text": "we made a video about rabbit mcu i am making a video about kafka still in the process",
    "start": "2625599",
    "end": "2633920"
  },
  {
    "text": "i'm gonna let you guys know if you wanna know if you wanna really see the video about the kafka",
    "start": "2633920",
    "end": "2640160"
  },
  {
    "text": "write down in the comment section right now write kafka so we can actually i see if there's a",
    "start": "2640160",
    "end": "2647680"
  },
  {
    "text": "lot of interest in that you guys give me a lot of great suggestion i love those videos",
    "start": "2647680",
    "end": "2652960"
  },
  {
    "text": "suggestion i'm making them i'm enjoying making all these content it's a long form content i know it's a",
    "start": "2652960",
    "end": "2659520"
  },
  {
    "text": "lecture this is not a three minute video they will watch right and then you move on",
    "start": "2659520",
    "end": "2665040"
  },
  {
    "text": "it's a this is videos that you watch for your series to learn obviously and no like no 10 minute video can give you",
    "start": "2665040",
    "end": "2672640"
  },
  {
    "text": "any value really or five minutes video you're gonna watch and learn about a lot of stuff okay",
    "start": "2672640",
    "end": "2679280"
  },
  {
    "text": "that's the kind of content we make in this channel so if you're interested consider subscribing like this video like it and share it",
    "start": "2679280",
    "end": "2685520"
  },
  {
    "text": "with your friend i'm gonna see you on the next one you guys stay awesome",
    "start": "2685520",
    "end": "2691839"
  },
  {
    "start": "2690000",
    "end": "5280000"
  },
  {
    "text": "rabbitmq is an open source distributed message queue written in airlang and supports many communication",
    "start": "2697359",
    "end": "2704160"
  },
  {
    "text": "protocols it was trying to solve a problem with what we call the spaghetti mesh",
    "start": "2704160",
    "end": "2710319"
  },
  {
    "text": "architecture you know guys remember where every client is trying to talk to another",
    "start": "2710319",
    "end": "2715599"
  },
  {
    "text": "client in the system remember guys the days of the enterprise message buzz and all these",
    "start": "2715599",
    "end": "2722400"
  },
  {
    "text": "god awful days you know so probably q was introduced to solve this problem right by introducing this",
    "start": "2722400",
    "end": "2728560"
  },
  {
    "text": "intermediate layer in this video we will explain the main basic components",
    "start": "2728560",
    "end": "2736000"
  },
  {
    "text": "of rabbitmq right and you got to start seeing jump codes or time codes gear guys",
    "start": "2736000",
    "end": "2741200"
  },
  {
    "text": "where you want to jump to the interesting topics and and you don't have to watch the whole videos just whatever you're interested",
    "start": "2741200",
    "end": "2747440"
  },
  {
    "text": "in you can jump to that right so we're going to talk about the rabbit in queue components i said such as",
    "start": "2747440",
    "end": "2752960"
  },
  {
    "text": "the advanced message queue protocol amqp what is a channel what is a queue what",
    "start": "2752960",
    "end": "2758560"
  },
  {
    "text": "is a publisher what is a consumer what is agreement exchange what is all that stuff right and then we're",
    "start": "2758560",
    "end": "2764240"
  },
  {
    "text": "going to talk about the meat and potatoes of all this stuff where we will actually spin up",
    "start": "2764240",
    "end": "2770160"
  },
  {
    "text": "our own rabbit mq server with docker okay then obviously that's not enough we're",
    "start": "2770160",
    "end": "2775599"
  },
  {
    "text": "gonna write some code we're gonna write our own publisher that uses node.js okay that publishes to the rabbitmq",
    "start": "2775599",
    "end": "2782880"
  },
  {
    "text": "server okay and then we're gonna write our own consumer piece with javascript node.js that will",
    "start": "2782880",
    "end": "2789920"
  },
  {
    "text": "consume that queue that will consume these messages okay finally guys i want to talk about",
    "start": "2789920",
    "end": "2798079"
  },
  {
    "text": "my thoughts my personal thoughts about this technology finally obviously we're going",
    "start": "2798079",
    "end": "2804240"
  },
  {
    "text": "to summarize the whole thing all right guys if you're new here welcome my name is hussein and in this channel we discuss",
    "start": "2804240",
    "end": "2810160"
  },
  {
    "text": "all sorts of software engineering by example so if you want to become a better software engineer consider subscribing hit that bell icon so you",
    "start": "2810160",
    "end": "2816000"
  },
  {
    "text": "get notified every time i upload a new video would i say let's just jump into this video guys all right so rabbit mq",
    "start": "2816000",
    "end": "2822480"
  },
  {
    "text": "so here's the architecture of rabbitmq rabbitmq uses this middle layer and solves as we",
    "start": "2822480",
    "end": "2829920"
  },
  {
    "text": "talked about so the problem where clients want to talk another to other clients in the same system or",
    "start": "2829920",
    "end": "2835760"
  },
  {
    "text": "external systems and instead of having each client having knowledge of other clients",
    "start": "2835760",
    "end": "2841280"
  },
  {
    "text": "we kind of grouped everything into this layer okay we call this rabbitmq server",
    "start": "2841280",
    "end": "2846800"
  },
  {
    "text": "rabbitmq server listens to 57672 port by default because it's a server",
    "start": "2846800",
    "end": "2852160"
  },
  {
    "text": "it has to listen right because it's using tcp okay so that's the first abstraction the rabbit mq server there's",
    "start": "2852160",
    "end": "2859520"
  },
  {
    "text": "a lot of pieces inside of that i'm not going to go through that yet but i want to explain that first piece",
    "start": "2859520",
    "end": "2866079"
  },
  {
    "text": "which is the server this could be multiple servers could be distributed replicated and all that's",
    "start": "2866079",
    "end": "2871359"
  },
  {
    "text": "jazz right but we have this first piece robert mcq server the second piece third piece is the",
    "start": "2871359",
    "end": "2878400"
  },
  {
    "text": "publisher where hey i am a client and i want to publish a message for certain consumers that are interested in",
    "start": "2878400",
    "end": "2884880"
  },
  {
    "text": "this message and we're going to talk about an actual example guys where we write the code",
    "start": "2884880",
    "end": "2891119"
  },
  {
    "text": "but essentially what the publisher does is establishes a stateful tcp connection between itself",
    "start": "2891119",
    "end": "2899760"
  },
  {
    "text": "and the rabbit mcq server and this is very critical to understand it's a two-way communication",
    "start": "2899760",
    "end": "2906400"
  },
  {
    "text": "okay so the underlining transport protocol is tcp okay it's not http okay it's using tcp",
    "start": "2906400",
    "end": "2914000"
  },
  {
    "text": "raw tcp and there's a nice protocol on top of it okay there are multiple protocols but we're interested",
    "start": "2914000",
    "end": "2920240"
  },
  {
    "text": "in is is the advanced message queue protocol there's like certain headers certain messages right",
    "start": "2920240",
    "end": "2925440"
  },
  {
    "text": "think of it's just like an application layer http where it uses tcp right it has its own headers and body",
    "start": "2925440",
    "end": "2932000"
  },
  {
    "text": "and git and methods and posts right the advanced message queue protocol has its own",
    "start": "2932000",
    "end": "2938240"
  },
  {
    "text": "format as well it has its own protocol okay so it uses that okay and then it uses that and and publisher",
    "start": "2938240",
    "end": "2945119"
  },
  {
    "text": "can send messages to the server the server kind of sends messages to the publisher so it's a two-way communication very critical to",
    "start": "2945119",
    "end": "2951040"
  },
  {
    "text": "understand okay so there is a connection so that's the second abstraction a connection third approach exactly so a",
    "start": "2951040",
    "end": "2958720"
  },
  {
    "text": "publisher a connection to the server there's a consumer who want to consume",
    "start": "2958720",
    "end": "2964240"
  },
  {
    "text": "messages so they will connect again using a stateful two-way",
    "start": "2964240",
    "end": "2970839"
  },
  {
    "text": "bi-directional tcp connection to the server using the advanced message protocol",
    "start": "2970839",
    "end": "2976559"
  },
  {
    "text": "there are other protocols but i'm not gonna talk about this in this video right so let's focus on just one protocol here",
    "start": "2976559",
    "end": "2982319"
  },
  {
    "text": "so the am amqp protocols man that's hard to pronounce",
    "start": "2982319",
    "end": "2987520"
  },
  {
    "text": "all right so the consumer establishes a two-way communication with the server and says hey",
    "start": "2987520",
    "end": "2993280"
  },
  {
    "text": "what's up server sup give me some messages right so and the server will start",
    "start": "2993280",
    "end": "2999599"
  },
  {
    "text": "pushing messages emphasis on the pushing guys very strong word here the pushing the",
    "start": "2999599",
    "end": "3006559"
  },
  {
    "text": "server pushes messages to the consumer okay very interesting",
    "start": "3006559",
    "end": "3011839"
  },
  {
    "text": "okay so the server pushes messages to the consumer when they are ready okay when they have them messages",
    "start": "3011839",
    "end": "3019359"
  },
  {
    "text": "and there is the publisher sent messages to the server another abstraction for rabbitmq is what",
    "start": "3019359",
    "end": "3025200"
  },
  {
    "text": "they call the channel okay and the channel is a logical connection in your connections",
    "start": "3025200",
    "end": "3032880"
  },
  {
    "text": "just like a mini connection think of it right and the reason they did that they want to separate the consumer connection",
    "start": "3032880",
    "end": "3039040"
  },
  {
    "text": "from multiple consumers inside that consumer an example would be you would create",
    "start": "3039040",
    "end": "3044960"
  },
  {
    "text": "this consumer have three channels using the same tcp connection and",
    "start": "3044960",
    "end": "3050640"
  },
  {
    "text": "the reason they're using that is this instead of if you're trying to like instead of having three consumers",
    "start": "3050640",
    "end": "3057680"
  },
  {
    "text": "having three tcp connections let's have one consumers or three channels with one tcp connection",
    "start": "3057680",
    "end": "3062960"
  },
  {
    "text": "this is called multiplexing where you bring a lot of stuff into one pipe",
    "start": "3062960",
    "end": "3068559"
  },
  {
    "text": "and that's a good thing i like this about it i like it a lot right you can use the same tcp connection but",
    "start": "3068559",
    "end": "3073680"
  },
  {
    "text": "you can send certain bits with the channel id say hey this is by the way this belongs to this",
    "start": "3073680",
    "end": "3078960"
  },
  {
    "text": "channel this belongs to this channel this belongs to this channel so they can segregate and do certain things based on that so",
    "start": "3078960",
    "end": "3084480"
  },
  {
    "text": "that's an a nice abstraction right a channel okay same thing with the publisher so you can",
    "start": "3084480",
    "end": "3090079"
  },
  {
    "text": "send through a certain channel okay if you don't have channels then the",
    "start": "3090079",
    "end": "3096160"
  },
  {
    "text": "publisher let's say you write a publisher that does more than one thing okay you have you will be forced to use",
    "start": "3096160",
    "end": "3104319"
  },
  {
    "text": "multiple publishers instead of kind of putting all your code into one",
    "start": "3104319",
    "end": "3109599"
  },
  {
    "text": "publisher or one consumer right another abstraction is is what the q stands for is the queue right all of",
    "start": "3109599",
    "end": "3117680"
  },
  {
    "text": "this stuff goes into the queues okay so the queue is like you send an information goes to the queue",
    "start": "3117680",
    "end": "3123520"
  },
  {
    "text": "and then other the consumer will per basically pull information from the",
    "start": "3123520",
    "end": "3129119"
  },
  {
    "text": "queue right and that that's that's where the queue is right but however that's very important the publisher and",
    "start": "3129119",
    "end": "3135119"
  },
  {
    "text": "consumer are not aware of cues okay technically they are aware of what they call exchanges and that's the",
    "start": "3135119",
    "end": "3142880"
  },
  {
    "text": "seventh abstraction on this rubbish mq there is an exchange where",
    "start": "3142880",
    "end": "3147920"
  },
  {
    "text": "the whole thing is is an exchange there is a default exchange and you send all the stuff to an exchange and that will take care of propagating",
    "start": "3147920",
    "end": "3155119"
  },
  {
    "text": "into a queue right you don't have to know about this we're not going to talk about exchanges as well we're going to use the default",
    "start": "3155119",
    "end": "3161280"
  },
  {
    "text": "exchange with takes at all i'll care about a lot of stuff right an exchange can be used to",
    "start": "3161280",
    "end": "3167040"
  },
  {
    "text": "use different algorithms to to kind of fan out and do a round drop and into",
    "start": "3167040",
    "end": "3173920"
  },
  {
    "text": "uh different cues but that's that's out of the scope of the video as well because we have exchanges we have queues",
    "start": "3173920",
    "end": "3180559"
  },
  {
    "text": "but let's let's just think about the concept of a key where you put a messages publisher publish a message goes to the queue",
    "start": "3180559",
    "end": "3186880"
  },
  {
    "text": "consumer consumes a message from the queue and the exchange is that default exchange",
    "start": "3186880",
    "end": "3192319"
  },
  {
    "text": "thing right you can have multiple exchanges as well all right guys how about we spin up our own rabbit mq and we",
    "start": "3192319",
    "end": "3199520"
  },
  {
    "text": "play with this thing okay all right guys so to spin up our own rabbit mq server",
    "start": "3199520",
    "end": "3206160"
  },
  {
    "text": "i'm not gonna tell you to download and install that thing right you don't have to pollute your machine with with your with these installers so what",
    "start": "3206160",
    "end": "3213680"
  },
  {
    "text": "you have to do is just install docker make sure you can say docker and you get some sort of a feedback here",
    "start": "3213680",
    "end": "3220640"
  },
  {
    "text": "and you make sure to you can do docker run hello dash word if this gives you back hello",
    "start": "3220640",
    "end": "3228559"
  },
  {
    "text": "docker that means you have docker installed once you have docker installed we're gonna spin up",
    "start": "3228559",
    "end": "3234079"
  },
  {
    "text": "our own rabbitmq message container if you will and that",
    "start": "3234079",
    "end": "3241359"
  },
  {
    "text": "message container message server that container will have a rabbitmq server from which",
    "start": "3241359",
    "end": "3247359"
  },
  {
    "text": "we will start writing code okay and we're going to talk about what we're going to write but let's first",
    "start": "3247359",
    "end": "3252480"
  },
  {
    "text": "spin up that that thing how do we do it very simple okay so first thing we want to do is",
    "start": "3252480",
    "end": "3260079"
  },
  {
    "text": "write docker run okay and by always",
    "start": "3260079",
    "end": "3266480"
  },
  {
    "text": "make it a habit to give your container a name let's give it a name rabbit mq okay and then",
    "start": "3266480",
    "end": "3273040"
  },
  {
    "text": "once we give it a name we will expose the port of that container to my machine so",
    "start": "3273040",
    "end": "3280559"
  },
  {
    "text": "i can communicate with it right so that's essentially what's the default part of rabbitmq you have to memorize that 5672",
    "start": "3280559",
    "end": "3288319"
  },
  {
    "text": "right and what is that's what i want to expose to my machine this could be anything right the second",
    "start": "3288319",
    "end": "3294079"
  },
  {
    "text": "part five six seven two is what is inside your container",
    "start": "3294079",
    "end": "3299280"
  },
  {
    "text": "right so that has to stay that has to stay five six seven two this",
    "start": "3299280",
    "end": "3305920"
  },
  {
    "text": "could be anything you want okay and then let's let's just use this default thing okay",
    "start": "3305920",
    "end": "3311920"
  },
  {
    "text": "and then finally we do rabbit mq and that's the image from which we're",
    "start": "3311920",
    "end": "3317839"
  },
  {
    "text": "gonna pull the rabbit mq docker image from which we're gonna spin a container let's go ahead and spin that",
    "start": "3317839",
    "end": "3323680"
  },
  {
    "text": "and just like that we're gonna start downloading all that stuff right and then",
    "start": "3323680",
    "end": "3330880"
  },
  {
    "text": "yeah just like that this terminal is now occupied all right so this you can start",
    "start": "3332240",
    "end": "3337359"
  },
  {
    "text": "seeing the messages that goes into this docker uh container which is the rabbit mq",
    "start": "3337359",
    "end": "3342880"
  },
  {
    "text": "okay now we have a container that is running and half rabbit mq what",
    "start": "3342880",
    "end": "3349200"
  },
  {
    "text": "we're going to build with this technology here's what we're going to build we will build an asynchronous job",
    "start": "3349200",
    "end": "3354880"
  },
  {
    "text": "execution okay engine and how this works is essentially we'll have a publisher that will publish",
    "start": "3354880",
    "end": "3361359"
  },
  {
    "text": "jobs and say hey consumers i want you to execute this job and you need to execute this job and",
    "start": "3361359",
    "end": "3367200"
  },
  {
    "text": "then there was would be adequate consumer which is essentially a process that will take that job and start executing it",
    "start": "3367200",
    "end": "3373040"
  },
  {
    "text": "right this could be like think of it like you you're publishing tasks and these",
    "start": "3373040",
    "end": "3378799"
  },
  {
    "text": "tasks are executed by actual processes right and this could be heavy processes",
    "start": "3378799",
    "end": "3383839"
  },
  {
    "text": "like i don't know calculating the prime number of certain number or finding or going to the database and",
    "start": "3383839",
    "end": "3390160"
  },
  {
    "text": "doing a batch job or doing a hadoop job right a map reduce right",
    "start": "3390160",
    "end": "3395520"
  },
  {
    "text": "so all kind of job you're going to publish it to the queue i'm going to publish it to the rabbitmq",
    "start": "3395520",
    "end": "3400799"
  },
  {
    "text": "message and then the consumers will start pulling the don't stop pulling they will get",
    "start": "3400799",
    "end": "3408559"
  },
  {
    "text": "that message that get that job and start executing it all right so now we know what we're gonna build let's",
    "start": "3408559",
    "end": "3414960"
  },
  {
    "text": "go ahead and build it all right guys so what are you gonna need here is you're gonna install visual studio code",
    "start": "3414960",
    "end": "3420960"
  },
  {
    "text": "or any favorite editor you have i'm gonna use node.js as my execution engine here to build my",
    "start": "3420960",
    "end": "3429359"
  },
  {
    "text": "publisher and consumer and here's what we're going to build right so let's go ahead and build a publisher okay my publisher and",
    "start": "3429359",
    "end": "3437680"
  },
  {
    "text": "consumer will live in the same project that's okay because we're going to do have a different kind of input to things",
    "start": "3437680",
    "end": "3444400"
  },
  {
    "text": "right so let's go ahead and build this project so you go go ahead and go file open and then we'll go to",
    "start": "3444400",
    "end": "3452000"
  },
  {
    "text": "javascript here playground let's get rid of project called rabbit mq just a blank folder",
    "start": "3452000",
    "end": "3460400"
  },
  {
    "text": "we're going to go ahead and create a publisher.js file and here's the thing",
    "start": "3460400",
    "end": "3467760"
  },
  {
    "text": "guys let's go ahead and initialize npm so we create a project in pm",
    "start": "3467760",
    "end": "3474559"
  },
  {
    "text": "init dash y right that means shut up i know what i'm doing just give me a package.json we're going to",
    "start": "3474559",
    "end": "3480799"
  },
  {
    "text": "use that later and now here's what i want to do i'm going to create",
    "start": "3480799",
    "end": "3486000"
  },
  {
    "text": "a const and then what we want to do is we talked about this a little bit and",
    "start": "3486000",
    "end": "3492160"
  },
  {
    "text": "when we explained that right and that we talked about rabbitmq uses the advanced message queue",
    "start": "3492160",
    "end": "3498880"
  },
  {
    "text": "protocol amqp and this protocol has a lot of clients and",
    "start": "3498880",
    "end": "3504559"
  },
  {
    "text": "node.js has that client so i'm going to create an advanced message queue protocol instance and then we're going",
    "start": "3504559",
    "end": "3512240"
  },
  {
    "text": "to acquire that library which is called a advanced message queue protocol library okay that's what it's called",
    "start": "3512240",
    "end": "3519280"
  },
  {
    "text": "and that's a promise based library which is amazing because we love permafsside stuff it's using something a blue bird",
    "start": "3519280",
    "end": "3526880"
  },
  {
    "text": "to promote from permusify a cut i can't pronounce anything okay",
    "start": "3526880",
    "end": "3532400"
  },
  {
    "text": "promisify this things okay so i have that so that what is the first",
    "start": "3532400",
    "end": "3537520"
  },
  {
    "text": "abstraction we do right i'm gonna create a connection to my server do you remember where my",
    "start": "3537520",
    "end": "3543920"
  },
  {
    "text": "server is running do you remember the port guys i hope you do yeah because now we're going to use that",
    "start": "3543920",
    "end": "3549520"
  },
  {
    "text": "but first of all since we're going to use a promise based thing let's create a function",
    "start": "3549520",
    "end": "3555119"
  },
  {
    "text": "obviously it's going to be an async function i'm going to call it connect right you can call it publish anything",
    "start": "3555119",
    "end": "3560960"
  },
  {
    "text": "you want and we're going to do a try catch just to catch any",
    "start": "3560960",
    "end": "3566960"
  },
  {
    "text": "bad things right and then console.error ex so just just build a skeleton here",
    "start": "3566960",
    "end": "3575119"
  },
  {
    "text": "and here's the first thing we're gonna do we're gonna do a connection",
    "start": "3575119",
    "end": "3581119"
  },
  {
    "text": "create a connection how do we do that amqp dot connect that's not hard what do you",
    "start": "3581680",
    "end": "3587839"
  },
  {
    "text": "expect you want a string from me what's the url here's the url guys since we're using the advanced message",
    "start": "3587839",
    "end": "3594880"
  },
  {
    "text": "queue protocol that's the protocol we're using and",
    "start": "3594880",
    "end": "3600079"
  },
  {
    "text": "since my rabbit mq is used running on my mac it's gonna be localhost or the machine",
    "start": "3600079",
    "end": "3605599"
  },
  {
    "text": "so what is the port guys it's five six seven two i can memorize that thing okay",
    "start": "3605599",
    "end": "3611440"
  },
  {
    "text": "and here's the thing guys since this is a returns a promise right it's a blue bird that means it's a",
    "start": "3611440",
    "end": "3617680"
  },
  {
    "text": "promise you gotta await that thing await that thing and here's my",
    "start": "3617680",
    "end": "3623599"
  },
  {
    "text": "tcp connection remember there's another abstraction with rabbitmq which is called the channel",
    "start": "3623599",
    "end": "3629200"
  },
  {
    "text": "which is just one channel that goes in your connection so you can create",
    "start": "3629200",
    "end": "3634400"
  },
  {
    "text": "i don't know how what's the maximum number of channels per connection but you you have to create a channel because",
    "start": "3634400",
    "end": "3639599"
  },
  {
    "text": "that that's the channel of communication so that's not enough so let's create a channel how do you",
    "start": "3639599",
    "end": "3646000"
  },
  {
    "text": "create a channel again you await a connection.create channel that sounds not hard at all okay",
    "start": "3646000",
    "end": "3652079"
  },
  {
    "text": "that creates also that's a promise based so that means it will be awaited there's a rejected promise we go",
    "start": "3652079",
    "end": "3657680"
  },
  {
    "text": "go here you can use then dot then up to you guys but here's the thing now",
    "start": "3657680",
    "end": "3662960"
  },
  {
    "text": "we have a channel what do we do right the idea here is we're gonna publish to",
    "start": "3662960",
    "end": "3670640"
  },
  {
    "text": "a queue okay rabbitmq documentation says the client doesn't know off a queue i",
    "start": "3670640",
    "end": "3677040"
  },
  {
    "text": "kind of disagree because i write a cue job i literally specify the queue name",
    "start": "3677040",
    "end": "3682480"
  },
  {
    "text": "in my publisher that means so don't tell me that the client is not aware of that queue it just doesn't make any sense to",
    "start": "3682480",
    "end": "3687760"
  },
  {
    "text": "me right so that coin is aware of a cue right but internally you kind of publish to an",
    "start": "3687760",
    "end": "3693440"
  },
  {
    "text": "exchange but i don't know it's just a whole just mumbo jumbo abstraction to me right i don't i don't believe in any of",
    "start": "3693440",
    "end": "3699599"
  },
  {
    "text": "that so a channel can do something called assert queue and",
    "start": "3699599",
    "end": "3706640"
  },
  {
    "text": "that assert queue will make sure that your queue exists on the server and if it doesn't",
    "start": "3706640",
    "end": "3713200"
  },
  {
    "text": "it's going to create it for you so what do we do we're going to create a queue that's",
    "start": "3713200",
    "end": "3718319"
  },
  {
    "text": "called jobs right and let's just use use the default there's like whether you want durable that means the",
    "start": "3718319",
    "end": "3724799"
  },
  {
    "text": "persisted disk or now let's just use the default here okay and then constant result",
    "start": "3724799",
    "end": "3732079"
  },
  {
    "text": "equal await since this is also going through the tcp you get away because it's going to take",
    "start": "3732079",
    "end": "3737599"
  },
  {
    "text": "some time await everything and to know basically if you see bluebird as a result that means that",
    "start": "3737599",
    "end": "3743920"
  },
  {
    "text": "it's a promise based okay we got a result now we got a queue what do we do we asserted that we have a",
    "start": "3743920",
    "end": "3750160"
  },
  {
    "text": "queue if you don't do this you might get an error the second statement so here's the thing what do we do now i",
    "start": "3750160",
    "end": "3757599"
  },
  {
    "text": "want to send something send to a queue what do we send which queue which queue or sending here i'm going to",
    "start": "3757599",
    "end": "3764079"
  },
  {
    "text": "send to the jobs queue what do you want to sense on i'm going to send",
    "start": "3764079",
    "end": "3769280"
  },
  {
    "text": "an array of buffer essentially which is just like a buffer and the buffer is uh you have to send a",
    "start": "3769280",
    "end": "3775760"
  },
  {
    "text": "buffer and to send a buffer you can do buffer from and then pass a string so let's just send a json object here",
    "start": "3775760",
    "end": "3784240"
  },
  {
    "text": "and then let's just do a message what's our message here what's the message what are we going to",
    "start": "3784240",
    "end": "3789760"
  },
  {
    "text": "do const message equal let's say i'm going to send a number",
    "start": "3789760",
    "end": "3795440"
  },
  {
    "text": "here okay and this is the json object with the number 2 right or just 19. and then i'm going to",
    "start": "3795440",
    "end": "3803440"
  },
  {
    "text": "send that json object so you cannot send just the json object as as it is you have to stringify it so",
    "start": "3803440",
    "end": "3810559"
  },
  {
    "text": "you're going to do a string json.stringify message and that string will become a",
    "start": "3810559",
    "end": "3816640"
  },
  {
    "text": "buffer so you obviously need to send a buffer you can also if you want just to send",
    "start": "3816640",
    "end": "3822079"
  },
  {
    "text": "text say hi you can do that right but we want to be fancier guys we want to be fancy",
    "start": "3822079",
    "end": "3827920"
  },
  {
    "text": "okay we send the job what else guys is that is that all i think that's it so",
    "start": "3827920",
    "end": "3834160"
  },
  {
    "text": "we can if you want to you can close the connection here okay and just be happy but",
    "start": "3834160",
    "end": "3842240"
  },
  {
    "text": "let's just just say console.log let's say job sent successfully",
    "start": "3842240",
    "end": "3850160"
  },
  {
    "text": "all right just and what's the job that's the job",
    "start": "3850160",
    "end": "3855200"
  },
  {
    "text": "what's the job the job is the number i don't know you're sending a",
    "start": "3856960",
    "end": "3863520"
  },
  {
    "text": "number and that the process will take that number and process that input right think of it as an input you're sending a message to the",
    "start": "3863520",
    "end": "3870880"
  },
  {
    "text": "queue and then one of the your processes will pick that and start processing that okay whether it's gonna do whatever",
    "start": "3870880",
    "end": "3878160"
  },
  {
    "text": "right okay how about we run this thing guys",
    "start": "3878160",
    "end": "3883680"
  },
  {
    "text": "before we run we have to call this function we never called it so let's go ahead and run it and",
    "start": "3883680",
    "end": "3889039"
  },
  {
    "text": "hopefully that works let's do uh i might it might fail because i didn't install yep",
    "start": "3889039",
    "end": "3896160"
  },
  {
    "text": "cannot find module amqblib well how do we install a module very simple",
    "start": "3896160",
    "end": "3901760"
  },
  {
    "text": "sir we do npm install amqp lib",
    "start": "3901760",
    "end": "3909119"
  },
  {
    "text": "just for you to see it guys we have to install the library that we use it doesn't come",
    "start": "3909119",
    "end": "3914480"
  },
  {
    "text": "default by no with node.js okay now we have it let's run",
    "start": "3914480",
    "end": "3921440"
  },
  {
    "text": "i'm gonna by the way guys give you the code so don't have to worry about pausing the video and doing all that stuff right today there",
    "start": "3921440",
    "end": "3928000"
  },
  {
    "text": "get a channel after we get the channel we got the channel successfully what is the result what is that",
    "start": "3928000",
    "end": "3933680"
  },
  {
    "text": "so it gives you back the queue essentially so we can print that queue if you want okay and then that sends to the job and",
    "start": "3933680",
    "end": "3940960"
  },
  {
    "text": "then we say job send successfully and then obviously my debugger still running because we",
    "start": "3940960",
    "end": "3946319"
  },
  {
    "text": "didn't kill the connection right so it might be a good idea just to kill the connection afterwards okay so we submitted something to the",
    "start": "3946319",
    "end": "3953440"
  },
  {
    "text": "cube how about we consume it guys so let's create another another one",
    "start": "3953440",
    "end": "3960079"
  },
  {
    "text": "right another one consumer.js who is a consumer it's the same code",
    "start": "3960079",
    "end": "3967760"
  },
  {
    "text": "almost the same code so here's what i'm going to do same mq",
    "start": "3967760",
    "end": "3973119"
  },
  {
    "text": "so it's just it's just steel code guys because it's almost the same but i don't",
    "start": "3973119",
    "end": "3979280"
  },
  {
    "text": "want to do all this mumbo jumbo right i don't want to send anything to the",
    "start": "3979280",
    "end": "3985280"
  },
  {
    "text": "queue i want to do something else so just delete that",
    "start": "3985280",
    "end": "3990480"
  },
  {
    "text": "all right okay so that's i don't think i need a message because i'm consuming messages here so",
    "start": "3991039",
    "end": "3999359"
  },
  {
    "text": "we connect to the server we did the channel because you have to",
    "start": "3999359",
    "end": "4004559"
  },
  {
    "text": "do a channel by the way this channel is different than the channel of the publisher they are completely different channels right they are",
    "start": "4004559",
    "end": "4010960"
  },
  {
    "text": "completely different tcp connections to begin with right so what i want to do here is",
    "start": "4010960",
    "end": "4018160"
  },
  {
    "text": "we have to keep the consumer alive unlike the publisher publisher you can actually kill the connection if you want",
    "start": "4018559",
    "end": "4024000"
  },
  {
    "text": "after you're done but you might want to keep the client the consumer",
    "start": "4024000",
    "end": "4029440"
  },
  {
    "text": "happy and dandy so what do you want to do is the console log listen uh",
    "start": "4029440",
    "end": "4036480"
  },
  {
    "text": "waiting for messages something like that right we're just waiting for messages but how",
    "start": "4036480",
    "end": "4042160"
  },
  {
    "text": "how do i do how do i get messages well you do this",
    "start": "4042160",
    "end": "4048160"
  },
  {
    "text": "channel dot consume and guess what what do you consume guys you consume",
    "start": "4048160",
    "end": "4054799"
  },
  {
    "text": "a queue and what's the queue name it's called jobs and what do you want to do when you",
    "start": "4054799",
    "end": "4060960"
  },
  {
    "text": "consume a job i want you sir to call this function when a message comes in okay and here's",
    "start": "4060960",
    "end": "4068000"
  },
  {
    "text": "what i want to do i just want to do console.log all right and then just print their message",
    "start": "4068000",
    "end": "4076000"
  },
  {
    "text": "okay and then i'll go pay attention to what will happen here i'm gonna run this thing now i'm gonna",
    "start": "4076000",
    "end": "4082079"
  },
  {
    "text": "run the consumer and let's see what will happen this is a debug",
    "start": "4082079",
    "end": "4088000"
  },
  {
    "text": "i put a debug here so after if the after the connection if the",
    "start": "4088000",
    "end": "4094720"
  },
  {
    "text": "server which is rabbitmq sent to me as a consumer a message i am going to get triggered",
    "start": "4094720",
    "end": "4100400"
  },
  {
    "text": "here and here's what we're going to do what we're gonna do i just wanna print",
    "start": "4100400",
    "end": "4107600"
  },
  {
    "text": "what we got oh we went to the publisher for some reason i don't want that all right so let's run my consumer",
    "start": "4107600",
    "end": "4118480"
  },
  {
    "text": "ooh nice look at that so we got a message what does this message",
    "start": "4118480",
    "end": "4124238"
  },
  {
    "text": "have it has a content that's the buffer we got guys remember we sent a buffer we get a",
    "start": "4124239",
    "end": "4131359"
  },
  {
    "text": "buffer back how do we get from the buffer we get a string back which is what we're interested in we're",
    "start": "4131359",
    "end": "4137120"
  },
  {
    "text": "going to talk about that so it's it's unreadable so let's make it into but we didn't we didn't get the",
    "start": "4137120",
    "end": "4142719"
  },
  {
    "text": "message which is pretty cool-ish guys all right so here's what i want to do if i just",
    "start": "4142719",
    "end": "4148480"
  },
  {
    "text": "started again what i thought a cue",
    "start": "4148480",
    "end": "4153679"
  },
  {
    "text": "when you just read the message the message is dequeued right but every time i restart the consumer i",
    "start": "4153679",
    "end": "4160640"
  },
  {
    "text": "always get the same message again let's print it so we can we can see content the two string",
    "start": "4160640",
    "end": "4166880"
  },
  {
    "text": "just print it let's see what we get as a as a consumer",
    "start": "4166880",
    "end": "4174080"
  },
  {
    "text": "and look at that we got the number 19 okay it's a little bit boring so",
    "start": "4174080",
    "end": "4181359"
  },
  {
    "text": "let's make it into actual json right input equal json dot",
    "start": "4181359",
    "end": "4188238"
  },
  {
    "text": "parse right how this is how you convert the string back to jason maybe we get the basin and",
    "start": "4188239",
    "end": "4195280"
  },
  {
    "text": "then we do console.log received job",
    "start": "4195280",
    "end": "4202400"
  },
  {
    "text": "with input input dot number right that's all that's",
    "start": "4202400",
    "end": "4208640"
  },
  {
    "text": "the function and then let's do the fancy text here template lateral literals right guys",
    "start": "4208640",
    "end": "4217840"
  },
  {
    "text": "let's do that consume again and we got it we get it then we get",
    "start": "4217840",
    "end": "4223600"
  },
  {
    "text": "receive job with input 19. now you can take that number query the database do your thing and",
    "start": "4223600",
    "end": "4229600"
  },
  {
    "text": "here's the interesting part guys the reason we keep receiving the same message over and",
    "start": "4229600",
    "end": "4235600"
  },
  {
    "text": "over and over and over and over again right is because we did not tell",
    "start": "4235600",
    "end": "4242239"
  },
  {
    "text": "the server that we have received it as a consumer that's what's called acknowledgement and",
    "start": "4242239",
    "end": "4248080"
  },
  {
    "text": "i didn't talk about that but we're gonna we're gonna talk about a little bit now okay so why do we do what do we do",
    "start": "4248080",
    "end": "4254880"
  },
  {
    "text": "all right so let me first clean up some some of stuff guys right i want to",
    "start": "4254880",
    "end": "4260159"
  },
  {
    "text": "do is there's two certain things i want to create an a script here an npm so that if i do npm",
    "start": "4260159",
    "end": "4266159"
  },
  {
    "text": "run publish right i will run node publisher",
    "start": "4266159",
    "end": "4274239"
  },
  {
    "text": "dot js okay that's what i want to do and if someone says consume i'm gonna do go to node",
    "start": "4274239",
    "end": "4281920"
  },
  {
    "text": "consumer is that what it called the js okay this way if i do if i go to a terminal",
    "start": "4281920",
    "end": "4289440"
  },
  {
    "text": "how do i clear this thing right if i do a camera i do npm run",
    "start": "4289440",
    "end": "4296880"
  },
  {
    "text": "publish i'm going to publish the message okay and let's kill it if i do npm run consume",
    "start": "4296880",
    "end": "4304320"
  },
  {
    "text": "i'm gonna consume that message and you can see i received two jobs with the same id because i just published another",
    "start": "4304320",
    "end": "4310239"
  },
  {
    "text": "one another thing i want to fix here let's kill this job in the publish i want to get",
    "start": "4310239",
    "end": "4318800"
  },
  {
    "text": "i want to publish a number that the user sends me how do i do that right as i wouldn't do npm run publish",
    "start": "4318800",
    "end": "4326719"
  },
  {
    "text": "and then i put a number and that number will be published this way we are always hard-coding the",
    "start": "4326719",
    "end": "4332320"
  },
  {
    "text": "number 19. we don't like that right so here's what i want to do to do that kind of hacky but why not so",
    "start": "4332320",
    "end": "4339120"
  },
  {
    "text": "do process dot arg v and i believe it's the third element is of the",
    "start": "4339120",
    "end": "4347120"
  },
  {
    "text": "input will be the input right because the i think zero is",
    "start": "4347120",
    "end": "4353440"
  },
  {
    "text": "the node js.xe or whatever in your mac what's it called i forgot",
    "start": "4353440",
    "end": "4358800"
  },
  {
    "text": "the second thing is the path to the javascript the third thing is the input right so if i do that that will be the input so",
    "start": "4358800",
    "end": "4365679"
  },
  {
    "text": "let's try it out so now if i do npm run let's zoom in here so you can see",
    "start": "4365679",
    "end": "4374159"
  },
  {
    "text": "npr run publish eight job send successful e8 right that's",
    "start": "4374159",
    "end": "4381040"
  },
  {
    "text": "pretty cool if i do npm run consume",
    "start": "4381040",
    "end": "4385840"
  },
  {
    "text": "yay we got 19 19 and eight okay so we keep keep getting these jobs",
    "start": "4386320",
    "end": "4392080"
  },
  {
    "text": "here's the thing now okay so we now have that let's get out of this and show you that",
    "start": "4392080",
    "end": "4397600"
  },
  {
    "text": "we can actually run it out of the terminal guys it doesn't have to be in the visual studio code so let's go ahead",
    "start": "4397600",
    "end": "4403040"
  },
  {
    "text": "and do something fancier here i'm going to create a new terminal",
    "start": "4403040",
    "end": "4412239"
  },
  {
    "text": "right and let's go ahead and create another terminal here",
    "start": "4412239",
    "end": "4417040"
  },
  {
    "text": "all right so i have two terminals here we're going to do here go to the same folder which is i think called javascript",
    "start": "4418800",
    "end": "4424640"
  },
  {
    "text": "javascript playground and then it's called rabbitmq right and then what i'm going to do is nvm run",
    "start": "4424640",
    "end": "4431520"
  },
  {
    "text": "publish 7 and just publish 7 successfully and i'm going to do here is go to the",
    "start": "4431520",
    "end": "4437360"
  },
  {
    "text": "same folder javascript playground wrap it in queue and then npm",
    "start": "4437360",
    "end": "4443040"
  },
  {
    "text": "con run consume and then we can see that we got all of them now okay so that's",
    "start": "4443040",
    "end": "4449840"
  },
  {
    "text": "just another way of consuming stuff here's the thing guys the last thing",
    "start": "4449840",
    "end": "4455199"
  },
  {
    "text": "before we end this video with the exercises i want to tell the server",
    "start": "4455199",
    "end": "4460239"
  },
  {
    "text": "server please dq this job because i have processed it how do we do that here's",
    "start": "4460239",
    "end": "4466480"
  },
  {
    "text": "what we do go back to the code the consumer job",
    "start": "4466480",
    "end": "4473199"
  },
  {
    "text": "is to dequeue or to acknowledge that they receive that",
    "start": "4473199",
    "end": "4479040"
  },
  {
    "text": "job in order for the server to pull it from the queue okay and there's a lot of",
    "start": "4479040",
    "end": "4486640"
  },
  {
    "text": "stuff here this is a complicated topic kafkas have their own implementation of how",
    "start": "4486640",
    "end": "4493360"
  },
  {
    "text": "like guarantees of delivery like uh at least once or at most once or",
    "start": "4493360",
    "end": "4500239"
  },
  {
    "text": "exactly one right so there is like a lot of guarantees without which i'm not gonna go through this because it's just",
    "start": "4500239",
    "end": "4505440"
  },
  {
    "text": "gonna get longer and longer but that would be another topic to discuss but",
    "start": "4505440",
    "end": "4510480"
  },
  {
    "text": "the rabbit mq guarantees i think at least once delivery or at",
    "start": "4510480",
    "end": "4516560"
  },
  {
    "text": "most once it cannot guarantee that exactly you received it once right it's just a little bit",
    "start": "4516560",
    "end": "4522480"
  },
  {
    "text": "tricky stuff that people take uh phd in right this is really complicated because",
    "start": "4522480",
    "end": "4527840"
  },
  {
    "text": "even above my head really it's just really complicated stuff",
    "start": "4527840",
    "end": "4533120"
  },
  {
    "text": "all right so here's what i think if i received a message i want to acknowledge that message",
    "start": "4533120",
    "end": "4539280"
  },
  {
    "text": "certain thing let's say if the input dot number is equal equal to seven",
    "start": "4539280",
    "end": "4544880"
  },
  {
    "text": "just like that i just want to process number seven for some reason right i don't want to process all the cues go",
    "start": "4544880",
    "end": "4551679"
  },
  {
    "text": "ahead and do channel dot ack and you can acknowledge everything",
    "start": "4551679",
    "end": "4558480"
  },
  {
    "text": "you can ignore just a certain message so i'm gonna acknowledge this particular message which is called",
    "start": "4558480",
    "end": "4563920"
  },
  {
    "text": "massage right when a message is received if that message is satisfied certain",
    "start": "4563920",
    "end": "4569920"
  },
  {
    "text": "criteria let's say you went to the database and you process and you get a successful message you processed it you run your hadoop job",
    "start": "4569920",
    "end": "4576719"
  },
  {
    "text": "you got all all of the stuff you run your uh everything and you got back the results",
    "start": "4576719",
    "end": "4582560"
  },
  {
    "text": "you want the way you want it then you can tell the server it's safe to remove it from your queue",
    "start": "4582560",
    "end": "4587840"
  },
  {
    "text": "and that's what acknowledging me okay let's go ahead and acknowledge this thing only okay seven if i go back",
    "start": "4587840",
    "end": "4594000"
  },
  {
    "text": "here and i say npm run consume you can see that i received job with",
    "start": "4594000",
    "end": "4600320"
  },
  {
    "text": "all of them again but this one was acknowledged but it doesn't show here so now if i kill that consumer and i run",
    "start": "4600320",
    "end": "4607199"
  },
  {
    "text": "another consumer you can see that it's still there this is a problem with",
    "start": "4607199",
    "end": "4612880"
  },
  {
    "text": "it's it's it's my problem now i'm going to show tell you exactly why it's just a javascript and something with",
    "start": "4612880",
    "end": "4619040"
  },
  {
    "text": "javascript right let's go ahead and show all right the prob the the reason it was not",
    "start": "4619040",
    "end": "4624239"
  },
  {
    "text": "acknowledged is because i think this is this is a very",
    "start": "4624239",
    "end": "4630480"
  },
  {
    "text": "javascripty thing right where i told it hey if the number is exactly equal seven and the type is also matching",
    "start": "4630480",
    "end": "4637600"
  },
  {
    "text": "right but i bet that this number is actually a string right it's not actually a seven so if i",
    "start": "4637600",
    "end": "4643360"
  },
  {
    "text": "do just double equal this will work so let's go ahead and do that all right so what",
    "start": "4643360",
    "end": "4648640"
  },
  {
    "text": "what happens here is equal equal the reference quickly really quick triple equal that means the numbers the",
    "start": "4648640",
    "end": "4654960"
  },
  {
    "text": "the values do match without implicit conversion right that means if this is a number the",
    "start": "4654960",
    "end": "4660400"
  },
  {
    "text": "second side has to be a number if you say just equal equal that means this",
    "start": "4660400",
    "end": "4668320"
  },
  {
    "text": "is true right if you do this is yeah let's just let right now this is",
    "start": "4669760",
    "end": "4675760"
  },
  {
    "text": "true but if you do this this is actually false right that's the",
    "start": "4675760",
    "end": "4682000"
  },
  {
    "text": "difference okay so now that we actually coursed it let's go ahead",
    "start": "4682000",
    "end": "4687280"
  },
  {
    "text": "back to the terminal and clear npm run consume",
    "start": "4687280",
    "end": "4694320"
  },
  {
    "text": "and you can see that we have acknowledged it hopefully this time run it again and then it's no longer",
    "start": "4694320",
    "end": "4700560"
  },
  {
    "text": "there all right guys long video but hopefully you",
    "start": "4700560",
    "end": "4706719"
  },
  {
    "text": "uh have you got some benefit from it so let's jump back to the slides continue this give you my take into this technology",
    "start": "4706719",
    "end": "4713600"
  },
  {
    "text": "then we can summarize this video let's go back all right guys so we finished the consumer we built the consumer visa we built an",
    "start": "4713600",
    "end": "4719440"
  },
  {
    "text": "asynchronous job system with rabbitmq we have a publisher we have a consumer",
    "start": "4719440",
    "end": "4725040"
  },
  {
    "text": "we send a job and we execute and we have all this fancy stuff and we talked about all the beautiful stuff in rabbitmq",
    "start": "4725040",
    "end": "4732400"
  },
  {
    "text": "and here's my thoughts about this technology",
    "start": "4732400",
    "end": "4736800"
  },
  {
    "text": "it has too many abstractions and here's the thing my old boss told me",
    "start": "4738239",
    "end": "4743679"
  },
  {
    "text": "says if you building a system",
    "start": "4743679",
    "end": "4749280"
  },
  {
    "text": "with a lot of abstractions and you want to introduce a new abstraction you gotta remove an abstraction you have",
    "start": "4749280",
    "end": "4755520"
  },
  {
    "text": "to remove something you cannot have this many abstraction what do i mean by abstractions well let me",
    "start": "4755520",
    "end": "4762560"
  },
  {
    "text": "explain to you right when i started researching this produ this this technology seriously last week i was",
    "start": "4762560",
    "end": "4770400"
  },
  {
    "text": "so confused because there are so many terms for this technology it's a message",
    "start": "4770400",
    "end": "4776560"
  },
  {
    "text": "queue what the heck are you guys doing what the heck is a publisher consumer channel",
    "start": "4776560",
    "end": "4782239"
  },
  {
    "text": "exchange what else there was like so many things and channel and then connection and then",
    "start": "4782239",
    "end": "4787360"
  },
  {
    "text": "two duplex and then push and pull so many stuff",
    "start": "4787360",
    "end": "4793360"
  },
  {
    "text": "and then they are supporting three or four protocols so there's an advanced message",
    "start": "4793360",
    "end": "4798800"
  },
  {
    "text": "queue protocol and there is the stump protocol there's the http protocol there's too many abstractions you know",
    "start": "4798800",
    "end": "4804800"
  },
  {
    "text": "what you get when you have too many obstructions you get a complex system and complex",
    "start": "4804800",
    "end": "4810400"
  },
  {
    "text": "systems do not scale with a human we are not designed to work",
    "start": "4810400",
    "end": "4815760"
  },
  {
    "text": "with complex systems we are not designed and this is my opinion take it with a grain",
    "start": "4815760",
    "end": "4821040"
  },
  {
    "text": "of salt guys you might be smarter than i am but if you're introducing this much",
    "start": "4821040",
    "end": "4827040"
  },
  {
    "text": "complexity right i i even i don't remember all the abstractions this is just few of the abstractions i'm pretty",
    "start": "4827040",
    "end": "4832560"
  },
  {
    "text": "sure there are more and if you're introducing all these abstractions your system is going to get",
    "start": "4832560",
    "end": "4838239"
  },
  {
    "text": "complex and if this is good complex adoptions will slow down okay and that's why i believe rabbitmq",
    "start": "4838239",
    "end": "4845360"
  },
  {
    "text": "is getting less and less popular with these years and that that's one of the reasons in my opinion it's just too complex",
    "start": "4845360",
    "end": "4852080"
  },
  {
    "text": "does it do the job of course it does but if you figure it out right there's like",
    "start": "4852080",
    "end": "4858800"
  },
  {
    "text": "and i didn't even go deep into this like you know what i'm i'm just gonna scratch the surface i'm not gonna go deep",
    "start": "4858800",
    "end": "4864239"
  },
  {
    "text": "because it's so confusing guys right so to me it's a very complex system",
    "start": "4864239",
    "end": "4869760"
  },
  {
    "text": "right another thing i want to talk about here is the posh model the the the decision that rabbitmq team did says",
    "start": "4869760",
    "end": "4878880"
  },
  {
    "text": "as a consumer if you connect to a rabbitmq server which is called an exchange which is as talented and",
    "start": "4878880",
    "end": "4885120"
  },
  {
    "text": "ultimately goes to a queue through a channel oh my god look at all this stuff right that's what i'm talking",
    "start": "4885120",
    "end": "4890560"
  },
  {
    "text": "about look at how complex that to talk about things is so much",
    "start": "4890560",
    "end": "4895679"
  },
  {
    "text": "look at the http how simple it is request response system over tcp that's it right that's a whole internet",
    "start": "4895679",
    "end": "4902320"
  },
  {
    "text": "is running on this thing guys difference between this to see how complex this thing is and i think the",
    "start": "4902320",
    "end": "4908239"
  },
  {
    "text": "rabbit mq like community made the same problem with with the enterprise servers bus is a",
    "start": "4908239",
    "end": "4914719"
  },
  {
    "text": "little bit better enterprise service audio asb was even worse it was so complex",
    "start": "4914719",
    "end": "4920239"
  },
  {
    "text": "and it's just an equalizer between whether you want to have a completely",
    "start": "4920239",
    "end": "4926880"
  },
  {
    "text": "open system extendable extensible versus a simple system it's that is kind of closed and i don't",
    "start": "4926880",
    "end": "4934080"
  },
  {
    "text": "mean closed source here closed in in the limited functionality that it gives right",
    "start": "4934080",
    "end": "4939360"
  },
  {
    "text": "reddit redis did this very well i think redis zaid hey it's an in-memory database yeah",
    "start": "4939360",
    "end": "4945920"
  },
  {
    "text": "we can give durability but i'm going to give you functionality very simple publish subscribe and that's",
    "start": "4945920",
    "end": "4951120"
  },
  {
    "text": "it right it's a very limited set of functionality and memcache d i didn't research memcached but it has the same",
    "start": "4951120",
    "end": "4957360"
  },
  {
    "text": "concept which is a very simple model simplicity rules guys so",
    "start": "4957360",
    "end": "4963280"
  },
  {
    "text": "let's talk about push model so when a consumer consumes a certain queue",
    "start": "4963280",
    "end": "4970840"
  },
  {
    "text": "rabbitmq pushes messages as you as you saw guys i didn't ask for it",
    "start": "4970840",
    "end": "4976320"
  },
  {
    "text": "i didn't actually hey say hey do i have a message do i have a message do i have a message i didn't do that i just said hey",
    "start": "4976320",
    "end": "4983360"
  },
  {
    "text": "by the way if you got a message push it to this function and the function got called and triggered and then we got",
    "start": "4983360",
    "end": "4989840"
  },
  {
    "text": "the results right the problem with this is it does not scale how do you guarantee that the consumer",
    "start": "4989840",
    "end": "4998400"
  },
  {
    "text": "will receive that message right and how do you not overwhelm a consumer",
    "start": "4998400",
    "end": "5004159"
  },
  {
    "text": "because guys remember i am a just poor consumer if you have like thousand messages and you're pushing this this",
    "start": "5004159",
    "end": "5012480"
  },
  {
    "text": "down my throat there's this what is called a backfill problem i think",
    "start": "5012480",
    "end": "5017679"
  },
  {
    "text": "where where as you start pushing more messages i cannot process them fast enough for you",
    "start": "5017679",
    "end": "5024000"
  },
  {
    "text": "so now you're kind of putting more work on the server right to",
    "start": "5024000",
    "end": "5031520"
  },
  {
    "text": "to start pushing start slowing down the pushing process because now your",
    "start": "5031520",
    "end": "5037920"
  },
  {
    "text": "thing that can see you're telling the server says hey server please slow down",
    "start": "5037920",
    "end": "5042960"
  },
  {
    "text": "that's the option that the rabbit mq have i think it's called the maximum something right so it's like hey by the way i can only",
    "start": "5042960",
    "end": "5048719"
  },
  {
    "text": "process five messages at a in a second right so don't send me more than five messages",
    "start": "5048719",
    "end": "5053840"
  },
  {
    "text": "now you're pushing this complexity to the server that's why your server became more",
    "start": "5053840",
    "end": "5059920"
  },
  {
    "text": "complicated and that's an a kind of an unneeded complexity on the",
    "start": "5059920",
    "end": "5065040"
  },
  {
    "text": "server side because the server now will start pushing more and more messages to you and let's start oh",
    "start": "5065040",
    "end": "5070239"
  },
  {
    "text": "i have oh this consumer is slow this consumer is is fast so i'm gonna pushing more message to this consumer",
    "start": "5070239",
    "end": "5076400"
  },
  {
    "text": "versus this one it's very complicated kafka i think i agree with what kafka did with this",
    "start": "5076400",
    "end": "5082400"
  },
  {
    "text": "and they said you know what we're not going to do a push model we're going to do a long polling model pull it back push this",
    "start": "5082400",
    "end": "5090080"
  },
  {
    "text": "complexity on the consumer and let the consumer consume whenever they",
    "start": "5090080",
    "end": "5095360"
  },
  {
    "text": "want right whenever they are ready to consume they run into another problem which is",
    "start": "5095360",
    "end": "5100400"
  },
  {
    "text": "the acknowledgement problem which way which they solved in a very smart way i didn't research kafka in detail but",
    "start": "5100400",
    "end": "5106239"
  },
  {
    "text": "when i do and leave a comment in the comment section below if you want to see the kafka message",
    "start": "5106239",
    "end": "5111760"
  },
  {
    "text": "right a kafka video and um i'm really interested to make that video but",
    "start": "5111760",
    "end": "5117040"
  },
  {
    "text": "i think ra kafka did a better job at this by shoving that responsibility to the",
    "start": "5117040",
    "end": "5123280"
  },
  {
    "text": "consumer to the client instead of having the server push push push messages right so that's what",
    "start": "5123280",
    "end": "5129920"
  },
  {
    "text": "we're doing with with the notification system as well like why youtube have problem with notification",
    "start": "5129920",
    "end": "5136239"
  },
  {
    "text": "because of the push system right there is always pros and cons with this redis picked the push model",
    "start": "5136239",
    "end": "5145040"
  },
  {
    "text": "but i would understand what the red is it has limited clients consumers because it's all a",
    "start": "5145040",
    "end": "5151840"
  },
  {
    "text": "back end technology unlike this this is very front endy the message key because consumers will",
    "start": "5151840",
    "end": "5159120"
  },
  {
    "text": "immediately consume the red uh the rabbit mq message queue",
    "start": "5159120",
    "end": "5164159"
  },
  {
    "text": "versus redis it's always a caching technology so it is always going to be in the back in",
    "start": "5164159",
    "end": "5170080"
  },
  {
    "text": "deep deep deep back end so the number of clients will be limited compared to the number of clients to",
    "start": "5170080",
    "end": "5176480"
  },
  {
    "text": "rabbitmq i might be wrong i might be mistaken but that's my take on it hopefully you guys uh give me your second what do",
    "start": "5176480",
    "end": "5183440"
  },
  {
    "text": "you think right all right guys summary what did we discuss in this video we just got the components",
    "start": "5183440",
    "end": "5191840"
  },
  {
    "text": "right i'm not even i don't even remember the components there are a lot of components guys exchange and and queues and",
    "start": "5191840",
    "end": "5200159"
  },
  {
    "text": "publisher and consumer and channels and connections there is other stuff that i didn't",
    "start": "5200159",
    "end": "5205440"
  },
  {
    "text": "discuss by the way guys by that we just got therapy in queue we discussed how to",
    "start": "5205440",
    "end": "5210639"
  },
  {
    "text": "spin a rabbit mq server with docker i think this is if you want to try anything you use docker all the time don't install",
    "start": "5210639",
    "end": "5217280"
  },
  {
    "text": "garbage on your machine guys don't install things and just take memory whenever you install",
    "start": "5217280",
    "end": "5222960"
  },
  {
    "text": "something piece of technology do docker start rabbit mq when you're done docker stop",
    "start": "5222960",
    "end": "5228800"
  },
  {
    "text": "rub it mq so you just even if you're studying machine the containers will not stop by default so",
    "start": "5228800",
    "end": "5234719"
  },
  {
    "text": "you kind of save on memory right and if you're done with it docker rm rapid mq okay",
    "start": "5234719",
    "end": "5242880"
  },
  {
    "text": "we wrote a publisher right we also wrote a consumer and we did essentially we we",
    "start": "5242880",
    "end": "5248960"
  },
  {
    "text": "built an asynchronous job system where a publisher publishes a job and the consumer just",
    "start": "5248960",
    "end": "5255760"
  },
  {
    "text": "starts and pick a job and start working on it and then do this thing and then produces the output okay and i i finally gave you my",
    "start": "5255760",
    "end": "5262800"
  },
  {
    "text": "thoughts about this technology guys hope you enjoyed this video i'm gonna see you in the next one you guys stay",
    "start": "5262800",
    "end": "5268480"
  },
  {
    "text": "awesome",
    "start": "5268480",
    "end": "5270960"
  },
  {
    "text": "what is going on guys uh my name is hussein and then today's video i'm gonna spin up a cloud version of",
    "start": "5277360",
    "end": "5284239"
  },
  {
    "start": "5280000",
    "end": "5820000"
  },
  {
    "text": "rabbitmq using the cloud advanced message q protocol",
    "start": "5284239",
    "end": "5289280"
  },
  {
    "text": "so the advanced message queue protocol uh protocol applies for many messaging queues right",
    "start": "5289280",
    "end": "5296320"
  },
  {
    "text": "and one software that uses this protocol as this one protocol is rabbit mq so in this uh video i'm",
    "start": "5296320",
    "end": "5304000"
  },
  {
    "text": "going to spin up one rabbitmq instance on this service and then i'm it's it's very simple and i'm gonna uh",
    "start": "5304000",
    "end": "5311280"
  },
  {
    "text": "create a publisher and create a new queue on this uh instance and then start consuming the same",
    "start": "5311280",
    "end": "5317360"
  },
  {
    "text": "instance from um from a consumer that i'm gonna build i'm gonna use node.js to build these applications",
    "start": "5317360",
    "end": "5322880"
  },
  {
    "text": "and this is just to tell you that you don't have to basically spin up these uh rabbitmq instances on locally on your",
    "start": "5322880",
    "end": "5329840"
  },
  {
    "text": "machine so you can just use one of these services and it's really nice and easy and how about we jump into",
    "start": "5329840",
    "end": "5336639"
  },
  {
    "text": "it guys all right so i'm gonna go ahead and log in to go to",
    "start": "5336639",
    "end": "5342120"
  },
  {
    "text": "cloudamqp.com and hit enter log in and this is my email feel free to email me uh anything any",
    "start": "5342120",
    "end": "5348480"
  },
  {
    "text": "questions i really appreciate all your stuff guys and we go ahead and create a new instance",
    "start": "5348480",
    "end": "5354159"
  },
  {
    "text": "and what we're going to do is going to call it i don't know test and you can choose any uh any plan you want free",
    "start": "5354159",
    "end": "5361760"
  },
  {
    "text": "is more than enough right i'm just going to go ahead and select region east really where whatever you wanted",
    "start": "5361760",
    "end": "5369600"
  },
  {
    "text": "this instance to be and the closest thing is the west i'm going to pick it like i don't know north carol california sure this is the closest to",
    "start": "5369600",
    "end": "5376320"
  },
  {
    "text": "me because i'm in california i'll go ahead and review and just like that zero dollar a month by the way this this",
    "start": "5376320",
    "end": "5383840"
  },
  {
    "text": "is not a sponsored or anything like that it's just i just enjoy their services and i i thought i'd just give them some love",
    "start": "5383840",
    "end": "5390639"
  },
  {
    "text": "and trying their service so go ahead and create instance and just like that",
    "start": "5390639",
    "end": "5396239"
  },
  {
    "text": "we have a new server ruby in queue manager you can go to the rabbitmq manager",
    "start": "5396239",
    "end": "5401360"
  },
  {
    "text": "take a look at that obviously i don't have any queues i don't have any exchanges i don't have any channels nothing right so all i'm going to do is",
    "start": "5401360",
    "end": "5408639"
  },
  {
    "text": "go to edit and let's take take a look at the services that's the host that's the host",
    "start": "5408639",
    "end": "5415440"
  },
  {
    "text": "bubba and this is the amqp",
    "start": "5415440",
    "end": "5420719"
  },
  {
    "text": "url so i'm going to go ahead and copy this puppy and let's go to the code",
    "start": "5420719",
    "end": "5426560"
  },
  {
    "text": "guys how about that go to the code this is the code guys i'm going to share with you i have done",
    "start": "5426560",
    "end": "5432239"
  },
  {
    "text": "a rabbitmq crash course go check that video off you want details about what",
    "start": "5432239",
    "end": "5437440"
  },
  {
    "text": "rabbit mq is what is all that stuff what is a channel what is the connection talking about all that stuff where we",
    "start": "5437440",
    "end": "5443840"
  },
  {
    "text": "actually built this application from scratch but in this video i'm not going to show you how uh how i'm going to build it",
    "start": "5443840",
    "end": "5449280"
  },
  {
    "text": "from sky i'm going to consume this stuff all right so publisher the publisher will publish will connect",
    "start": "5449280",
    "end": "5455760"
  },
  {
    "text": "to the rabbitmq server which is currently set to my localhost i'm going",
    "start": "5455760",
    "end": "5460800"
  },
  {
    "text": "to change that and i'm literally going to put this huge url that i got from the server right and can",
    "start": "5460800",
    "end": "5468239"
  },
  {
    "text": "i connect to the server i'm going to create a channel because this is like the stream level just like http 2 create a channel and",
    "start": "5468239",
    "end": "5474159"
  },
  {
    "text": "then we can do stuff in this channel we can have many many channels by default i think that servers give you like around 200",
    "start": "5474159",
    "end": "5480400"
  },
  {
    "text": "channels by default that's pretty much uh for a free version is enough right we're gonna create a new",
    "start": "5480400",
    "end": "5487920"
  },
  {
    "text": "queue called jobs and we're going to send content to the queue based on whatever",
    "start": "5487920",
    "end": "5493120"
  },
  {
    "text": "the parameter that we send to this application right in this case i'm going to send a number and then once december we're going to",
    "start": "5493120",
    "end": "5500320"
  },
  {
    "text": "make it into a json and then send it back to the server and then the moment we send it we close the connection",
    "start": "5500320",
    "end": "5506239"
  },
  {
    "text": "close the channel and close that connection at the other end i'm going to consume that new content",
    "start": "5506239",
    "end": "5513440"
  },
  {
    "text": "right on the consumer side right how about we connect and test this thing node",
    "start": "5513440",
    "end": "5520040"
  },
  {
    "text": "publisher.js and i'm going to send the number 107",
    "start": "5520040",
    "end": "5526560"
  },
  {
    "text": "boom just like that we have connected we have sent the job we have created the",
    "start": "5526560",
    "end": "5532960"
  },
  {
    "text": "job cube because it didn't exist right this is what essertz does and then we send the queue",
    "start": "5532960",
    "end": "5538000"
  },
  {
    "text": "and then we close we send that job an entry to the queue and then we close",
    "start": "5538000",
    "end": "5543840"
  },
  {
    "text": "the chat and we close the connection let's look at the at the dashboard",
    "start": "5543840",
    "end": "5549600"
  },
  {
    "text": "how do i go to the dashboard still figuring this thing out probably in key manager all right look",
    "start": "5549679",
    "end": "5557120"
  },
  {
    "text": "at that we got a brand new queue it's called jobs how about channels there's no channels",
    "start": "5557120",
    "end": "5564639"
  },
  {
    "text": "weird because yeah because we just closed the channel right and uh yeah that's the jobs",
    "start": "5564639",
    "end": "5571040"
  },
  {
    "text": "there's some content in it probably right this is the queue message there's one ready hasn't been",
    "start": "5571040",
    "end": "5578400"
  },
  {
    "text": "there's no connections and yeah there's all this stuff there's one queue seven exchanges i",
    "start": "5578400",
    "end": "5585520"
  },
  {
    "text": "didn't create any exchanges these are the default exchanges i guess right i never use these exchanges in rabbidm",
    "start": "5585520",
    "end": "5590719"
  },
  {
    "text": "here so i'm not really familiar with it but yeah let's go ahead and play with the consumer side of this",
    "start": "5590719",
    "end": "5597360"
  },
  {
    "text": "start consuming this we'll take this thing consumer and uh yeah",
    "start": "5597360",
    "end": "5603920"
  },
  {
    "text": "we can just uh do the same thing here huh",
    "start": "5603920",
    "end": "5608560"
  },
  {
    "text": "let's connect that's and what do we do we're going to consume",
    "start": "5609120",
    "end": "5617120"
  },
  {
    "text": "same exact thing right i'm going to connect create a channel",
    "start": "5617120",
    "end": "5622960"
  },
  {
    "text": "assert that the queue exists right we don't really need the results i'm not going to do anything with the results and then we start consuming and",
    "start": "5625040",
    "end": "5632000"
  },
  {
    "text": "the moment we consume anything we receive the job with the number and",
    "start": "5632000",
    "end": "5637840"
  },
  {
    "text": "we print that number and that's just this is just wasn't some example with the acts and stuff so i want to",
    "start": "5637840",
    "end": "5643600"
  },
  {
    "text": "acknowledge that stuff but i'm not going to acknowledge anything i'm just going to consume and print let's go ahead and do that node",
    "start": "5643600",
    "end": "5650679"
  },
  {
    "text": "consumer.js i'm not going to pass anything else when i do that so look at that receive job with input",
    "start": "5650679",
    "end": "5657280"
  },
  {
    "text": "107 and the connection is still there i did not close the consumer for some reason",
    "start": "5657280",
    "end": "5662480"
  },
  {
    "text": "right i i want to show you that if i go back to the dashboard and go to channels look at that we have",
    "start": "5662480",
    "end": "5669679"
  },
  {
    "text": "a channel that is opened it tells you this is my public ip address it's dynamic so don't worry",
    "start": "5669679",
    "end": "5675440"
  },
  {
    "text": "about it the moment i restart my router is going to give you another uh stuff and just generate an android",
    "start": "5675440",
    "end": "5681760"
  },
  {
    "text": "username that's the that's my local port apparently cues that's the cues a high availability",
    "start": "5681760",
    "end": "5688719"
  },
  {
    "text": "queue and all that stuff so yeah and if i kill my",
    "start": "5688719",
    "end": "5694400"
  },
  {
    "text": "q my consumer and i did this i'm going to receive the same thing you know why guys right",
    "start": "5694400",
    "end": "5700719"
  },
  {
    "text": "because we have not told rabbitmq to actually dequeue that job",
    "start": "5700719",
    "end": "5707440"
  },
  {
    "text": "however while i'm working on 107 that job 107 if someone else connected",
    "start": "5707440",
    "end": "5713360"
  },
  {
    "text": "to the queue at the same time what they will do is let's do it how about that actually just",
    "start": "5713360",
    "end": "5719760"
  },
  {
    "text": "know it consumer.js it's great two connections look at that this this puppy",
    "start": "5719760",
    "end": "5725040"
  },
  {
    "text": "had did not get the queue did god did not get 107 because",
    "start": "5725040",
    "end": "5730159"
  },
  {
    "text": "to robert mq right the other puppy is using the 107 right but the",
    "start": "5730159",
    "end": "5736719"
  },
  {
    "text": "consumer didn't did not acknowledge it right so for all we know if i kill this",
    "start": "5736719",
    "end": "5742800"
  },
  {
    "text": "connection i go back let's see what will happen right look at that because the first consumer died i go to",
    "start": "5742800",
    "end": "5750080"
  },
  {
    "text": "the second consumer immediately got the job because they say hey looks like this consumer didn't acknowledge me right that's why",
    "start": "5750080",
    "end": "5755920"
  },
  {
    "text": "acknowledgements are very very tricky to get right right so that's why uh get that thing right guys and i",
    "start": "5755920",
    "end": "5760960"
  },
  {
    "text": "talked about this stuff in rabbitmeq all right guys so a very short video to talk about ramroom q and how to spin up",
    "start": "5760960",
    "end": "5766960"
  },
  {
    "text": "a rabbitmq in a cloud version that's i think that's the first video i make on a cloud",
    "start": "5766960",
    "end": "5773600"
  },
  {
    "text": "and start using the cloud more because it's just very convenient all right guys that's it for me today uh",
    "start": "5773600",
    "end": "5779119"
  },
  {
    "text": "hope you enjoyed this video give it a like if you like it share it with your friends i'm gonna see you on the next one",
    "start": "5779119",
    "end": "5784639"
  },
  {
    "text": "you guys stay awesome",
    "start": "5784639",
    "end": "5788800"
  },
  {
    "text": "what is going on guys my name is hussain in this video i want to discuss rabbit mq and http 2.",
    "start": "5795119",
    "end": "5801760"
  },
  {
    "text": "uh rapid mq i made a video about ramen q check it out guys here it's a very",
    "start": "5801760",
    "end": "5807199"
  },
  {
    "text": "interesting message queue that i have my doubt about but i a little bit changing my",
    "start": "5807199",
    "end": "5812800"
  },
  {
    "text": "my my mind about it because it's a really really great tech and it had a feature that i fall in love",
    "start": "5812800",
    "end": "5820239"
  },
  {
    "start": "5820000",
    "end": "6360000"
  },
  {
    "text": "the moment i read about it and it's called channels and let's talk about that a little bit and then",
    "start": "5820239",
    "end": "5825280"
  },
  {
    "text": "compare it to http 2 streams that also we're going to talk about it",
    "start": "5825280",
    "end": "5830480"
  },
  {
    "text": "right so when you have um a rabbit mq server or a",
    "start": "5830480",
    "end": "5835920"
  },
  {
    "text": "broker right here right and we have a client which is usually called a consumer the client establishes",
    "start": "5835920",
    "end": "5843440"
  },
  {
    "text": "a tcp connection between itself and the server and we know how tcp works",
    "start": "5843440",
    "end": "5848960"
  },
  {
    "text": "guys check it out there is in the client library for rabbitmq they add",
    "start": "5848960",
    "end": "5856000"
  },
  {
    "text": "some abstraction called the channel and the reason they did that is like every",
    "start": "5856000",
    "end": "5861840"
  },
  {
    "text": "request you want to send to the server you have to specify the",
    "start": "5861840",
    "end": "5867040"
  },
  {
    "text": "channel id and they have headers for every request they send tagged with the channel id and you might",
    "start": "5867040",
    "end": "5872719"
  },
  {
    "text": "say why do you want to do this this is so awesome technology the reason",
    "start": "5872719",
    "end": "5878639"
  },
  {
    "text": "is instead of having multiple clients to establish multiple tcp connections",
    "start": "5878639",
    "end": "5887199"
  },
  {
    "text": "to the server you now have one tcp connection and all of these requests are funneled",
    "start": "5887199",
    "end": "5893360"
  },
  {
    "text": "in the team's tcp connection and now you can send a request and expect a response back",
    "start": "5893360",
    "end": "5899280"
  },
  {
    "text": "even if that request is already you're sending another request in the same tcp channel because",
    "start": "5899280",
    "end": "5906880"
  },
  {
    "text": "they are very uniquely tagged with the channel id so now you can simultaneously send",
    "start": "5906880",
    "end": "5913679"
  },
  {
    "text": "requests on the same tcp connection and that's exactly how http 2",
    "start": "5913679",
    "end": "5919520"
  },
  {
    "text": "works guys the idea of streams browsers before http 2 what did they do",
    "start": "5919520",
    "end": "5925679"
  },
  {
    "text": "remember every request you send you can only send one request at a time",
    "start": "5925679",
    "end": "5931280"
  },
  {
    "text": "and you better send one request at a time because you cannot we don't know the response",
    "start": "5931280",
    "end": "5938639"
  },
  {
    "text": "that comes back which request was it for because",
    "start": "5938639",
    "end": "5943920"
  },
  {
    "text": "it's just garbage data coming out and end right so they made their decision way back to so",
    "start": "5943920",
    "end": "5950000"
  },
  {
    "text": "oh it's syndrome request and wait for the response to come back and that request must be for that",
    "start": "5950000",
    "end": "5956320"
  },
  {
    "text": "that response must be for that request and so on that's that's called essentially head offline blocking so it's like so",
    "start": "5956320",
    "end": "5962400"
  },
  {
    "text": "that the rest of the requests are blocked until that response is actually the first response received",
    "start": "5962400",
    "end": "5968159"
  },
  {
    "text": "and that's a problem right and that same problem exists with tcp and any request response system",
    "start": "5968159",
    "end": "5974080"
  },
  {
    "text": "so what rabbit mcq did is they added this abstraction of the idea of channels",
    "start": "5974080",
    "end": "5979679"
  },
  {
    "text": "in that tcp connection so every request is almost uniquely identified in the",
    "start": "5979679",
    "end": "5985920"
  },
  {
    "text": "channel itself that is very similar to the idea of http",
    "start": "5985920",
    "end": "5993440"
  },
  {
    "text": "2 streams which we talked about it right here go check it out so http 2 streams",
    "start": "5993440",
    "end": "6001199"
  },
  {
    "text": "serves a very similar idea you have one tcp connection instead of",
    "start": "6001600",
    "end": "6006639"
  },
  {
    "text": "six like what the browsers used to do in http1 and then if you make a git request",
    "start": "6006639",
    "end": "6013440"
  },
  {
    "text": "they are tagged with a stream id if you make a post request simultaneously they are tagged with a",
    "start": "6013440",
    "end": "6019199"
  },
  {
    "text": "stream id if you make another get request to fetch an image if you make another request to fetch in",
    "start": "6019199",
    "end": "6024320"
  },
  {
    "text": "css or or an html file or javascript file they are tagged uniquely with a stream",
    "start": "6024320",
    "end": "6031119"
  },
  {
    "text": "id very similar to the channel id and they are shoved into the tcp connection",
    "start": "6031119",
    "end": "6037119"
  },
  {
    "text": "right and now when you come back the the response that comes back is tagged",
    "start": "6037119",
    "end": "6042480"
  },
  {
    "text": "with a stream id so you know oh so you know that oh this this response",
    "start": "6042480",
    "end": "6048000"
  },
  {
    "text": "is actually for this stream all right so you actually can assemble things in the client so it doesn't matter what the",
    "start": "6048000",
    "end": "6053760"
  },
  {
    "text": "order comes back if this comes back or this comes back first and it doesn't really",
    "start": "6053760",
    "end": "6058880"
  },
  {
    "text": "matter so even if there are some delays right so why i made this video was like i'm",
    "start": "6058880",
    "end": "6064400"
  },
  {
    "text": "not sure who actually invented this idea of of multi-concurrent tagging of request",
    "start": "6064400",
    "end": "6072159"
  },
  {
    "text": "so rabbitmq or http2 or speedy google was invented this idea right so i was just",
    "start": "6072159",
    "end": "6078560"
  },
  {
    "text": "like i'm just were very curious about this so both obviously come back to that",
    "start": "6078560",
    "end": "6084000"
  },
  {
    "text": "final my final point is both http 2 and rabbitmq suffer from a very severe",
    "start": "6084000",
    "end": "6090880"
  },
  {
    "text": "problem which is the tcp it's a problem with the tcp itself",
    "start": "6090880",
    "end": "6097760"
  },
  {
    "text": "right and the problem with tcp is like if you sing a packet and the packet is damaged or haven't",
    "start": "6097760",
    "end": "6104159"
  },
  {
    "text": "received by the server and there's no acknowledgement and that's a packet right it's just a packet",
    "start": "6104159",
    "end": "6110400"
  },
  {
    "text": "the client always retransmits that packet back",
    "start": "6110400",
    "end": "6116560"
  },
  {
    "text": "right and that causes any other requests",
    "start": "6116560",
    "end": "6123199"
  },
  {
    "text": "packets that you are about to send to have wait for an acknowledgement to be received",
    "start": "6123199",
    "end": "6129760"
  },
  {
    "text": "from the server this is at the packet level guys this is not at the stream level so",
    "start": "6129760",
    "end": "6136000"
  },
  {
    "text": "if you're that means if stream one technically didn't receive an",
    "start": "6136000",
    "end": "6141440"
  },
  {
    "text": "acknowledgement stream two cannot even be fired to the server which is very bad",
    "start": "6141440",
    "end": "6147280"
  },
  {
    "text": "right that's a problem with tcp that's a very large and and that problem carries with rabbit in",
    "start": "6147280",
    "end": "6152800"
  },
  {
    "text": "the queue it's a very similar problem and that's why guys quick was invented to say so you know",
    "start": "6152800",
    "end": "6158800"
  },
  {
    "text": "what we cannot rely on on the idea of free transmission to put it at the",
    "start": "6158800",
    "end": "6164639"
  },
  {
    "text": "at that lower level of our architecture you cannot implement that at the lower",
    "start": "6164639",
    "end": "6170000"
  },
  {
    "text": "level so what they said is that i'm not gonna we're not gonna use tcp for re-transmission we're gonna use the",
    "start": "6170000",
    "end": "6177600"
  },
  {
    "text": "bare bone udp which doesn't have any of this feature it just sends a request",
    "start": "6177600",
    "end": "6183040"
  },
  {
    "text": "and relies on the higher level of application two actually does",
    "start": "6183040",
    "end": "6190000"
  },
  {
    "text": "that re-transmission and verification of the packets and that's what quake did quick",
    "start": "6190000",
    "end": "6195840"
  },
  {
    "text": "implemented re-implemented tcp by the higher level and they built in stream in it so now you can use",
    "start": "6195840",
    "end": "6203520"
  },
  {
    "text": "one logical connection there are no connections in udp so they create a kind of a similar logical connection",
    "start": "6203520",
    "end": "6211520"
  },
  {
    "text": "and now you can send as many requests as you want and they are tagged with a stream id",
    "start": "6211520",
    "end": "6217040"
  },
  {
    "text": "and if one stream had a bug in it i don't know the packet didn't",
    "start": "6217040",
    "end": "6223840"
  },
  {
    "text": "receive correctly that the quick client will",
    "start": "6223840",
    "end": "6229119"
  },
  {
    "text": "only retransmit that it will not stop the rest of the streams right all the all the channels if you",
    "start": "6229119",
    "end": "6235679"
  },
  {
    "text": "want to call them right the rest of the stuff will just go normally right because they have nothing to do with that first one",
    "start": "6235679",
    "end": "6242000"
  },
  {
    "text": "because if the stream 2 is good or stream 3 is good and stream one is bad why do you have them to suffer right",
    "start": "6242000",
    "end": "6248000"
  },
  {
    "text": "like what http does today right htb2 if stream one is bad or has a",
    "start": "6248000",
    "end": "6253600"
  },
  {
    "text": "i don't know it was transferred in the ocean and the fiber was caught right the stream one will",
    "start": "6253600",
    "end": "6261679"
  },
  {
    "text": "will suffer and stream two as stream three or stream five all the streams will suffer so you will",
    "start": "6261679",
    "end": "6266880"
  },
  {
    "text": "feel the slowness with http two that's the problem with this right so",
    "start": "6266880",
    "end": "6272000"
  },
  {
    "text": "quick solves this problem very elegantly at that level and now http 3 is built",
    "start": "6272000",
    "end": "6280000"
  },
  {
    "text": "as a very thin layer on top of quick that uses all these particles that",
    "start": "6280000",
    "end": "6287040"
  },
  {
    "text": "brings me back to the farm my final point is like i think most message queues",
    "start": "6287040",
    "end": "6294800"
  },
  {
    "text": "right and databases and protocols should start using cues to",
    "start": "6294800",
    "end": "6301280"
  },
  {
    "text": "be honest right because that solves a huge problem with tcp tcp had this problem with",
    "start": "6301280",
    "end": "6307360"
  },
  {
    "text": "re-transmission and the packets right and now concurrent sending concurrent requests at the same time and that",
    "start": "6307360",
    "end": "6314080"
  },
  {
    "text": "just magnificently quick solves this problem for you right today i just wanted to talk about rabbit mq",
    "start": "6314080",
    "end": "6321040"
  },
  {
    "text": "and the idea of channels and then uh http 2 and then how both of these are",
    "start": "6321040",
    "end": "6327600"
  },
  {
    "text": "having this problem now solves with quick and quick have their own problem i'm not gonna discuss on",
    "start": "6327600",
    "end": "6333760"
  },
  {
    "text": "this channel but definitely i'm gonna make a video dedicated for quick but i was very",
    "start": "6333760",
    "end": "6339119"
  },
  {
    "text": "interested to know that the similarities between rabbit mq as its own from scratch protocol",
    "start": "6339119",
    "end": "6345760"
  },
  {
    "text": "building of the channels very similar to the http 2 protocol all right guys i'm going to see you in",
    "start": "6345760",
    "end": "6352480"
  },
  {
    "text": "the next one leave a like if you like this video subscribe and what do you guys think what is the",
    "start": "6352480",
    "end": "6357840"
  },
  {
    "text": "future protocol do you think quick will hold to its glory and it's going to become really well known pearl that is used",
    "start": "6357840",
    "end": "6364800"
  },
  {
    "start": "6360000",
    "end": "7380000"
  },
  {
    "text": "everywhere because i'm i have a good feeling in the next 10 years quick was",
    "start": "6364800",
    "end": "6370560"
  },
  {
    "text": "going to become a big thing there's one problem that i'm going to i'm not going to mention here is essentially the udp and how the",
    "start": "6370560",
    "end": "6376480"
  },
  {
    "text": "internet treats udp but that's in for another video like this video if you like it",
    "start": "6376480",
    "end": "6382000"
  },
  {
    "text": "i'm going to see in the next one you guys stay awesome",
    "start": "6382000",
    "end": "6387840"
  },
  {
    "text": "what's going on guys my name is hussain and welcome to another episode of wireshark them all and today we're gonna",
    "start": "6392320",
    "end": "6399280"
  },
  {
    "text": "wire shark rabbit mq so we made a video about",
    "start": "6399280",
    "end": "6404800"
  },
  {
    "text": "rabbit mq guys check out that course discussing this tech discussing this beautiful message queue",
    "start": "6404800",
    "end": "6412880"
  },
  {
    "text": "that uses the advanced message queue protocol and as we did with the previous",
    "start": "6412880",
    "end": "6420000"
  },
  {
    "text": "episode with wireshark we're gonna establish a connection between a client which is this node.js",
    "start": "6420000",
    "end": "6426239"
  },
  {
    "text": "application that connects to an advanced message queue protocol server which is a rapid mq",
    "start": "6426239",
    "end": "6432800"
  },
  {
    "text": "server in this instance that i spun up in a cloud-based architecture and i'm going to make another video showing you",
    "start": "6432800",
    "end": "6438719"
  },
  {
    "text": "how today i did that it was literally two clicks i love this stuff and the reason i needed to do that because i",
    "start": "6438719",
    "end": "6445119"
  },
  {
    "text": "cannot run a rabbitmq locally on my mac and run wireshark the same machine",
    "start": "6445119",
    "end": "6451520"
  },
  {
    "text": "because i won't capture those packets right and uh yeah so how about we jump into a guy so",
    "start": "6451520",
    "end": "6457520"
  },
  {
    "text": "here's what i have i have a rabbitmq server running on the cloud",
    "start": "6457520",
    "end": "6462639"
  },
  {
    "text": "and uh i am this piece of application literally",
    "start": "6462639",
    "end": "6468840"
  },
  {
    "text": "connects creates a channel and i described in that video what a what is the difference",
    "start": "6468840",
    "end": "6474000"
  },
  {
    "text": "between a connection and a channel right it's like in http 2 you have the connection",
    "start": "6474000",
    "end": "6479840"
  },
  {
    "text": "and streams very very similar right and then uh i'm not sure who came",
    "start": "6479840",
    "end": "6485119"
  },
  {
    "text": "up with this idea first so yeah similar like even ssh same thing",
    "start": "6485119",
    "end": "6490480"
  },
  {
    "text": "right their idea of connection and channels so we can allow multiplexing essentially all right so the channel and then what",
    "start": "6490480",
    "end": "6496960"
  },
  {
    "text": "we do here is we create a channel and then immediately in this channel we create a queue and then we send a job to the queue and",
    "start": "6496960",
    "end": "6504000"
  },
  {
    "text": "this is basically whatever we pass in in the in the in the buffer uh i'm gonna say hi",
    "start": "6504000",
    "end": "6509840"
  },
  {
    "text": "for example and that's it and just we print something and then immediately we close the channel we close the connection and i'm gonna",
    "start": "6509840",
    "end": "6515760"
  },
  {
    "text": "capture the whole thing right how about we jump into it so create a brand new terminal",
    "start": "6515760",
    "end": "6522159"
  },
  {
    "text": "do node publisher.js that's the file and the source code will be available",
    "start": "6522159",
    "end": "6527760"
  },
  {
    "text": "guys for you i'm going to say hi boom",
    "start": "6527760",
    "end": "6532960"
  },
  {
    "text": "so he's going to it just prints it and immediately quits so let's go to wireshark and see what we captured",
    "start": "6532960",
    "end": "6540639"
  },
  {
    "text": "here's our shot guys and i did a filter just so i can only filter between my",
    "start": "6540639",
    "end": "6547880"
  },
  {
    "text": "server my ip address client and the server which is uh that's the",
    "start": "6547880",
    "end": "6554080"
  },
  {
    "text": "who wherever this thing is i just pinged the host and then got the ip address and",
    "start": "6554080",
    "end": "6559920"
  },
  {
    "text": "literally filtered it so let's go let's go through all this garbage let's see if we can explain all",
    "start": "6559920",
    "end": "6565520"
  },
  {
    "text": "that stuff guys how about we do that first three things guys we know what it is is right this is the",
    "start": "6565520",
    "end": "6572560"
  },
  {
    "text": "client is start with 10 and this server is 72 just for simplicity",
    "start": "6572560",
    "end": "6577599"
  },
  {
    "text": "we know this what these three things are right sen senec ack that's the three-way handshake to establish a tcp connection",
    "start": "6577599",
    "end": "6584400"
  },
  {
    "text": "that's just to prove that uh rabbitmq uses tcp and that's not bad that's just",
    "start": "6584400",
    "end": "6589840"
  },
  {
    "text": "something we need to be aware of so that's the three-way handshake to establish the tcp connection right then we know",
    "start": "6589840",
    "end": "6597679"
  },
  {
    "text": "that uh sen senec enac and here's the first contents that the client sends",
    "start": "6597679",
    "end": "6605840"
  },
  {
    "text": "protocol header says hey since the robert mq uses the advanced message queue protocol the first thing it says",
    "start": "6605840",
    "end": "6611599"
  },
  {
    "text": "is hey i'm using the advanced message pro q protocol right and this is my minimum version",
    "start": "6611599",
    "end": "6619280"
  },
  {
    "text": "this is my maximum version version 1.9 whatever right 0.9 actually right that's",
    "start": "6619280",
    "end": "6625199"
  },
  {
    "text": "the version of the amqp 091 right and the server acknowledges that packet",
    "start": "6625199",
    "end": "6633520"
  },
  {
    "text": "and then once we acknowledge that packet says okay i got your request and now i think we're",
    "start": "6633520",
    "end": "6640400"
  },
  {
    "text": "good let's establish a logical connection and that's look who's who's initiating this it's",
    "start": "6640400",
    "end": "6647360"
  },
  {
    "text": "very interesting guys right that was i believe a result",
    "start": "6647360",
    "end": "6653040"
  },
  {
    "text": "of the connection when we created the connection right the first thing but the server responds back okay i'm",
    "start": "6653040",
    "end": "6658960"
  },
  {
    "text": "ready to establish the connection for you right so now it establishes it's just",
    "start": "6658960",
    "end": "6664480"
  },
  {
    "text": "to us at that level it's just a bunch of data well to the to the tcp stack but we're sending connection.start",
    "start": "6664480",
    "end": "6671360"
  },
  {
    "text": "and look at how beautiful this thing is wireshark actually shows us this stuff",
    "start": "6671360",
    "end": "6679440"
  },
  {
    "text": "it actually decor doesn't decrypt it's just it's already plain text i'm not using any encryption here",
    "start": "6679520",
    "end": "6685360"
  },
  {
    "text": "so it knows says hey this is the version this is the capabilities and that's all the things i support and",
    "start": "6685360",
    "end": "6691760"
  },
  {
    "text": "here let's start the connection and the client acknowledges that request",
    "start": "6691760",
    "end": "6697199"
  },
  {
    "text": "that packet and then this the client now sends its version of connection start",
    "start": "6697199",
    "end": "6703199"
  },
  {
    "text": "okay i'm happy with everything you did server here's the things i support uh here's my",
    "start": "6703199",
    "end": "6710239"
  },
  {
    "text": "configuration and let's go ahead and establish a connection right so technically if you think about it we have a tcp connection",
    "start": "6710239",
    "end": "6716800"
  },
  {
    "text": "but this is the logical advanced message queue protocol without rabbit mqs is to establish a",
    "start": "6716800",
    "end": "6724040"
  },
  {
    "text": "physiological connection on top of the physical tcp connection the server says okay",
    "start": "6724040",
    "end": "6729920"
  },
  {
    "text": "let's tune things a little bit right and you might say why do we need to tune if we can we do",
    "start": "6729920",
    "end": "6737040"
  },
  {
    "text": "the tuning in this that's kind of a optimization that the advanced message queue can do i",
    "start": "6737040",
    "end": "6744560"
  },
  {
    "text": "guess but for some reason we're doing it in another step but sure so i'm doing a tuning and here's the thing",
    "start": "6744560",
    "end": "6750960"
  },
  {
    "text": "channel maximum right the server says i only support 200 channels and that's a",
    "start": "6750960",
    "end": "6758000"
  },
  {
    "text": "good idea for uh for a cloud application because they don't want to make it in like a thousand channels",
    "start": "6758000",
    "end": "6764239"
  },
  {
    "text": "otherwise they they're gonna deplete a free i'm using the free tier right and this is the maximum frame size every",
    "start": "6764239",
    "end": "6770639"
  },
  {
    "text": "each frame that you send that's the maximum i can support and here's the heartbeats like we're",
    "start": "6770639",
    "end": "6777520"
  },
  {
    "text": "gonna ping each other every 120 seconds to see if we are alive or not right so that's the",
    "start": "6777520",
    "end": "6783760"
  },
  {
    "text": "thing so the third the client acknowledges that packet that connection tune and then the",
    "start": "6783760",
    "end": "6790159"
  },
  {
    "text": "server the client sends back connection tune okay and here's the thing the client agreed",
    "start": "6790159",
    "end": "6797599"
  },
  {
    "text": "on the 200 the client agreed on the heartbeat but he didn't agree on the frame max it says okay",
    "start": "6797599",
    "end": "6803599"
  },
  {
    "text": "dude your frame max is so big son i'm gonna only send you for 496. that's",
    "start": "6803599",
    "end": "6810320"
  },
  {
    "text": "the only thing i um support also awesome so that services",
    "start": "6810320",
    "end": "6815920"
  },
  {
    "text": "acknowledges that and now we're actually opening the connection see we didn't even start this thing yet",
    "start": "6815920",
    "end": "6823760"
  },
  {
    "text": "so we're opening that connection and this thing is like look at this this is now the client actually",
    "start": "6823760",
    "end": "6831199"
  },
  {
    "text": "opening that connection that's was just starting the connection now we're actually opening the connection for to send to",
    "start": "6831199",
    "end": "6838560"
  },
  {
    "text": "send data we acknowledge the server acknowledges that connection open and then the server sends back a",
    "start": "6838560",
    "end": "6844560"
  },
  {
    "text": "connection open okay so if we get any errors we will see these errors and um",
    "start": "6844560",
    "end": "6849920"
  },
  {
    "text": "yeah it even sends back known hosts that's if it's null i guess that's the",
    "start": "6849920",
    "end": "6855760"
  },
  {
    "text": "only host that supports in case if you want to do like a load balancing or stuff like that",
    "start": "6855760",
    "end": "6860880"
  },
  {
    "text": "uh client acknowledge that now channel open let's look at the code",
    "start": "6860880",
    "end": "6870639"
  },
  {
    "text": "we're right here guys now all of that stuff was here",
    "start": "6870639",
    "end": "6877599"
  },
  {
    "text": "right now we're here okay line 13. look at that stuff now the client",
    "start": "6877599",
    "end": "6885679"
  },
  {
    "text": "opens a channel and and the channel what is a channel this is is like a",
    "start": "6885679",
    "end": "6891119"
  },
  {
    "text": "strip in a connection that we allow uh basically multiplexing right",
    "start": "6891119",
    "end": "6896159"
  },
  {
    "text": "so we can have multiple threads in the same process mult ascending in parallel",
    "start": "6896159",
    "end": "6903440"
  },
  {
    "text": "multiple packets on the same tcp connection right so this is a great idea and people have been doing it for years",
    "start": "6903440",
    "end": "6910400"
  },
  {
    "text": "re-transmission something happened here apparently the client restaurant retransmitted",
    "start": "6910400",
    "end": "6916080"
  },
  {
    "text": "some packet that have been lost or because either we didn't get an acknowledgement or something bad",
    "start": "6916080",
    "end": "6921360"
  },
  {
    "text": "happened right so let's send back and the server replies with",
    "start": "6921360",
    "end": "6926800"
  },
  {
    "text": "share channel channel open let's open let's go ahead and open that connection and we we don't have a channel id for",
    "start": "6926800",
    "end": "6933520"
  },
  {
    "text": "some reason right and uh yeah looks like i have not specified a channel id",
    "start": "6933520",
    "end": "6939599"
  },
  {
    "text": "i have an option if i want to to i believe to specify a channel id huh",
    "start": "6939599",
    "end": "6946239"
  },
  {
    "text": "maybe maybe not i remember there was like an idea to specify channel id but looks",
    "start": "6946239",
    "end": "6952159"
  },
  {
    "text": "like uh there isn't never mind acknowledgement from the client that we receive the",
    "start": "6952159",
    "end": "6957920"
  },
  {
    "text": "channel open and here's the thing guys we're declaring a queue",
    "start": "6957920",
    "end": "6963520"
  },
  {
    "text": "now the client is about to click create a new queue that's the queue right this is it we're",
    "start": "6963520",
    "end": "6969760"
  },
  {
    "text": "asserting the queue so we can create a new queue on the server and since i created this",
    "start": "6969760",
    "end": "6975119"
  },
  {
    "text": "before that queue already exists so a bunch of free transmission we're going",
    "start": "6975119",
    "end": "6980639"
  },
  {
    "text": "to ignore this stuff right because that's what happened when you connect things to the internet dupe acts",
    "start": "6980639",
    "end": "6986320"
  },
  {
    "text": "stuff like that and then we come back and then he's like queue declare okay that's the from the",
    "start": "6986320",
    "end": "6992880"
  },
  {
    "text": "server says okay i got you this queue already exists and uh go ahead and this is we have nine",
    "start": "6992880",
    "end": "7000560"
  },
  {
    "text": "messages in the queue currently because i i used this cue before to do stuff in it",
    "start": "7000560",
    "end": "7007119"
  },
  {
    "text": "and the client acknowledges the queue and here's the thing we're gonna publish",
    "start": "7007119",
    "end": "7013760"
  },
  {
    "text": "now we are aware we're sending content we're sending the hi which is",
    "start": "7013760",
    "end": "7019840"
  },
  {
    "text": "this is two letters right two letters two characters right let's see if this is",
    "start": "7019840",
    "end": "7025280"
  },
  {
    "text": "actually there and the payload where's the high there we go",
    "start": "7025280",
    "end": "7032239"
  },
  {
    "text": "i actually send the jason it says number i why is it number high let's see what did i do i forgot what i did a code",
    "start": "7032239",
    "end": "7040480"
  },
  {
    "text": "oh look at that i'm sending a json of message object what is this oh",
    "start": "7040480",
    "end": "7047119"
  },
  {
    "text": "there you go look at this i'm sending i forgot i wrote this code a long time ago so it's it's a json object",
    "start": "7047119",
    "end": "7052560"
  },
  {
    "text": "with the number i'm supposed to be numbers but for some reason i said hi sure right so we're sending adjacent",
    "start": "7052560",
    "end": "7058880"
  },
  {
    "text": "number and high doesn't matter guys you get the idea all right so we're sending that",
    "start": "7058880",
    "end": "7064719"
  },
  {
    "text": "and now we're acknowledging the server acknowledges that we got the publish and now here's the cool thing guys",
    "start": "7064719",
    "end": "7072639"
  },
  {
    "text": "the client closes the channel right",
    "start": "7072639",
    "end": "7077440"
  },
  {
    "text": "right here we're closing the channel but the server didn't respond with anything",
    "start": "7078560",
    "end": "7084159"
  },
  {
    "text": "and that's a very very interesting thing guys right if because when you publish something",
    "start": "7084159",
    "end": "7092480"
  },
  {
    "text": "and that's one powerful feature in advanced message queue protocol",
    "start": "7092480",
    "end": "7097599"
  },
  {
    "text": "when we publish the only thing we need to know that our",
    "start": "7097599",
    "end": "7104159"
  },
  {
    "text": "content has been published to the queue is this puppy the acknowledgement and that's it that's",
    "start": "7104159",
    "end": "7109199"
  },
  {
    "text": "a lower level thing that we don't have control as developers as programs back and engineers we don't",
    "start": "7109199",
    "end": "7114480"
  },
  {
    "text": "have any control over this thing right so it's just the moment we get acknowledgement we know it's it's it's in the server and i don't",
    "start": "7114480",
    "end": "7121840"
  },
  {
    "text": "really care about this reply because we're publishing a queue it's going to be at the other end of the",
    "start": "7121840",
    "end": "7127760"
  },
  {
    "text": "consumer to consume that stuff it's not our job anymore we're closing the connection the server",
    "start": "7127760",
    "end": "7133599"
  },
  {
    "text": "acknowledges the close that the server closes the channel from its side right and then",
    "start": "7133599",
    "end": "7141280"
  },
  {
    "text": "acknowledge the client acknowledges the close and then",
    "start": "7141280",
    "end": "7146639"
  },
  {
    "text": "what is it so the client now physically let's say logically closes the",
    "start": "7146719",
    "end": "7152080"
  },
  {
    "text": "connection right because you can open and close as many channels as you want while keeping",
    "start": "7152080",
    "end": "7158000"
  },
  {
    "text": "the connection alive right you can have many channels in the stem tcp connection and",
    "start": "7158000",
    "end": "7163599"
  },
  {
    "text": "no i shouldn't say tcp action you can have many channels in this logical connection that is actually just one",
    "start": "7163599",
    "end": "7169679"
  },
  {
    "text": "physical tcp connection does that make sense guys and then yeah we closes this puppy",
    "start": "7169679",
    "end": "7175520"
  },
  {
    "text": "right the sir the client says okay i'm done even with this uh connection just like let's go ahead and close the connection",
    "start": "7175520",
    "end": "7182400"
  },
  {
    "text": "right and the server says okay here's the interesting thing this is the delayed beautiful acknowledgement part of this",
    "start": "7182400",
    "end": "7189520"
  },
  {
    "text": "thing what happened here is when we closed it if the server can it",
    "start": "7189520",
    "end": "7194960"
  },
  {
    "text": "start instead of acknowledging the close data packet a wait since i'm about to",
    "start": "7194960",
    "end": "7201920"
  },
  {
    "text": "close it anyway let's wait let's not acknowledge that stuff and let's send you the data",
    "start": "7201920",
    "end": "7207360"
  },
  {
    "text": "with the acknowledgement so if we look at the acknowledgement we say okay we're acknowledging this",
    "start": "7207360",
    "end": "7212960"
  },
  {
    "text": "the same content right here right so if you look at this it should be the next number is 5569",
    "start": "7212960",
    "end": "7221280"
  },
  {
    "text": "and if we look at technologies is also 569 so yeah we're acknowledging and sending the data that's the best",
    "start": "7221280",
    "end": "7227360"
  },
  {
    "text": "thing that we can do if possible and that's where a good well-written server",
    "start": "7227360",
    "end": "7234000"
  },
  {
    "text": "shines really right and that's the back-end is written very well we're acknowledging and sending that",
    "start": "7234000",
    "end": "7239440"
  },
  {
    "text": "data at the same time if we can do that low level thing we'll see great performance despite some",
    "start": "7239440",
    "end": "7244880"
  },
  {
    "text": "dupes and stuff like that happen in the internet we cannot control that obviously but",
    "start": "7244880",
    "end": "7250239"
  },
  {
    "text": "what happened here where the client acknowledges the close okay which is this response",
    "start": "7250239",
    "end": "7258080"
  },
  {
    "text": "from the server and here's the thing who's initiating the close hmm the client is initiating the close",
    "start": "7258080",
    "end": "7264960"
  },
  {
    "text": "awesome so if the client is generating the close right and uh look at that some error",
    "start": "7264960",
    "end": "7270960"
  },
  {
    "text": "happened it got reset right so so far from test to multiple tests to rabbit mq",
    "start": "7270960",
    "end": "7277840"
  },
  {
    "text": "i never seen a clean close of the tcp connection and i'm not sure",
    "start": "7277840",
    "end": "7283760"
  },
  {
    "text": "why and we can dig deeper in into this thing and i i i'm probably going to need some help",
    "start": "7283760",
    "end": "7289840"
  },
  {
    "text": "from the network engineers because i don't know why these resets happen but whenever you see reset that means",
    "start": "7289840",
    "end": "7296719"
  },
  {
    "text": "something wacky happened in the internet and and uh the packets went out of",
    "start": "7296719",
    "end": "7304639"
  },
  {
    "text": "order and then uh we couldn't close the connection in a clean manner so we reset so to the client and the server this is",
    "start": "7304639",
    "end": "7312159"
  },
  {
    "text": "an error we close the connection in error despite me just closing in neatly to be honest right i",
    "start": "7312159",
    "end": "7318560"
  },
  {
    "text": "just immediately opened and closed it right and if i look at the code i also awaited i",
    "start": "7318560",
    "end": "7324639"
  },
  {
    "text": "made the mistake of the i i ha i didn't have these puppies right i didn't have a weight i'm i'm",
    "start": "7324639",
    "end": "7331360"
  },
  {
    "text": "mistakenly didn't that and when you do don't do that since this is asynchronous code",
    "start": "7331360",
    "end": "7336880"
  },
  {
    "text": "we're gonna do that and since this is asynchronous we're gonna send the code and immediately go to the",
    "start": "7336880",
    "end": "7342639"
  },
  {
    "text": "next thing and close the connection we don't wait for a result from that right and then when when you do that bad",
    "start": "7342639",
    "end": "7350480"
  },
  {
    "text": "things happen man right because you start closing the connection and and before actually receiving content from",
    "start": "7350480",
    "end": "7356639"
  },
  {
    "text": "the server it's going to be uh awful all right so that's uh that's essentially robert mcq",
    "start": "7356639",
    "end": "7361760"
  },
  {
    "text": "wireframing i hope you enjoyed this video guys give it a like share it with your friends i'm going to see you on the next one",
    "start": "7361760",
    "end": "7367520"
  },
  {
    "text": "you guys say awesome goodbye what should our wire shark next let me know in the comment section below",
    "start": "7367520",
    "end": "7375440"
  },
  {
    "text": "goodbye what is going on guys my name is hussein",
    "start": "7378840",
    "end": "7385280"
  },
  {
    "start": "7380000",
    "end": "9201000"
  },
  {
    "text": "and this is a very interesting article from doordash uh they're basically uh at a food",
    "start": "7385280",
    "end": "7392480"
  },
  {
    "text": "delivering service here in the us and uh",
    "start": "7392480",
    "end": "7398080"
  },
  {
    "text": "they have a very interesting piece of article here they're moving",
    "start": "7398080",
    "end": "7403760"
  },
  {
    "text": "from rabbit mq to apache kafka",
    "start": "7403760",
    "end": "7409360"
  },
  {
    "text": "back in technologies to back in technology that we discussed in this channel guys so check out",
    "start": "7409360",
    "end": "7415199"
  },
  {
    "text": "the rabbitmaq video right here also you can check out the apache kafka",
    "start": "7415199",
    "end": "7421920"
  },
  {
    "text": "video right here if you want to learn deep dive around an hour video",
    "start": "7421920",
    "end": "7427440"
  },
  {
    "text": "detailing both of those tech so guys that let's be clear about this guys",
    "start": "7427440",
    "end": "7436480"
  },
  {
    "text": "that does not mean rabid mq is bad right let's be clear about that and even",
    "start": "7436480",
    "end": "7443280"
  },
  {
    "text": "after i read the article i still think that is very specific use case",
    "start": "7443280",
    "end": "7451679"
  },
  {
    "text": "to do door dash that just didn't work with rabbit mq right so the outages",
    "start": "7451679",
    "end": "7459920"
  },
  {
    "text": "being caused with rabbit mq i think it has to do with something that i'm going to discuss",
    "start": "7459920",
    "end": "7465840"
  },
  {
    "text": "in this article right i'm going to reference the article here you guys go ahead and read it i'm going to summarize some of the stuff",
    "start": "7465840",
    "end": "7471760"
  },
  {
    "text": "here so i'm going to summarize the article what what the doordash engineering team",
    "start": "7471760",
    "end": "7477119"
  },
  {
    "text": "did to overcome these problems and then that why did they choose kafka they did a great",
    "start": "7477119",
    "end": "7482719"
  },
  {
    "text": "job guys detailing the problem detailing the the scalability and availability problem",
    "start": "7482719",
    "end": "7489599"
  },
  {
    "text": "they have detailing even the solution they they even came up with a proposed different solutions and pros and cons i",
    "start": "7489599",
    "end": "7496239"
  },
  {
    "text": "like that the only uh if i'm gonna critique this article",
    "start": "7496239",
    "end": "7501440"
  },
  {
    "text": "is that i'd like to see a little bit more details technical",
    "start": "7501440",
    "end": "7507760"
  },
  {
    "text": "details that is yeah even that yeah i i would like to see i had a lot of questions that i just",
    "start": "7507760",
    "end": "7514159"
  },
  {
    "text": "couldn't find answers for in the article itself right and i'm going",
    "start": "7514159",
    "end": "7520400"
  },
  {
    "text": "to get into these in this video so guys they",
    "start": "7520400",
    "end": "7527360"
  },
  {
    "text": "rabbit uh no rabbit door dash have a back in task processing",
    "start": "7527360",
    "end": "7533280"
  },
  {
    "text": "specifically an asynchronous task processing",
    "start": "7533280",
    "end": "7538560"
  },
  {
    "text": "uh system eh exactly that's it an asynchronous task processing",
    "start": "7538560",
    "end": "7544719"
  },
  {
    "text": "so we talked about that a little bit guys we built one actually we built one very very simple",
    "start": "7544719",
    "end": "7551119"
  },
  {
    "text": "one with rabbit in qfr if i if i remember correctly",
    "start": "7551119",
    "end": "7556159"
  },
  {
    "text": "and and what that what does that mean right what is what is an asynchronous task processing",
    "start": "7556159",
    "end": "7561520"
  },
  {
    "text": "really mean right so that means synchronous versus asynchronous we talked about these two",
    "start": "7561520",
    "end": "7567440"
  },
  {
    "text": "guys what is the difference between these two techniques check out this video if you want to learn more about but synchronous is a",
    "start": "7567440",
    "end": "7574560"
  },
  {
    "text": "i'm gonna make a request and i'm gonna sit down and wait right for the result",
    "start": "7574560",
    "end": "7582719"
  },
  {
    "text": "and this waiting doesn't have to be blocking necessarily",
    "start": "7582719",
    "end": "7589040"
  },
  {
    "text": "right because i could wait in an event loop right like i can have an event loop that okay i'm waiting for",
    "start": "7589040",
    "end": "7595840"
  },
  {
    "text": "a result a callback to give me the result but i'm doing my my other stuff as well that's that's how",
    "start": "7595840",
    "end": "7601520"
  },
  {
    "text": "java's gonna node.js works right even that that's the synchronicity or asynchronous means",
    "start": "7601520",
    "end": "7608079"
  },
  {
    "text": "i'm gonna make a request and i'm gonna give back a response",
    "start": "7608079",
    "end": "7615119"
  },
  {
    "text": "immediately from the service from the server from the backend but",
    "start": "7615119",
    "end": "7621599"
  },
  {
    "text": "that service is queued that job that task is actually",
    "start": "7621599",
    "end": "7629360"
  },
  {
    "text": "not executed immediately but it is essentially queued to get executed",
    "start": "7629360",
    "end": "7635760"
  },
  {
    "text": "at a later time right that's asynchronous processing here so let's be very clear",
    "start": "7635760",
    "end": "7641599"
  },
  {
    "text": "about that asynchronous in the front and it's a little bit different from asynchronous and the back end right",
    "start": "7641599",
    "end": "7647760"
  },
  {
    "text": "we're talking about the back end here it's all back end we're back in here right guys",
    "start": "7647760",
    "end": "7653119"
  },
  {
    "text": "so if i if i if i make an asynchronous job that's it means i'm gonna execute",
    "start": "7653119",
    "end": "7660159"
  },
  {
    "text": "a request and i'm gonna immediately immediately get a response back saying",
    "start": "7660159",
    "end": "7666159"
  },
  {
    "text": "here's your job id come back and check with me later right so that's that's in a nutshell doesn't mean this",
    "start": "7666159",
    "end": "7672960"
  },
  {
    "text": "is exactly what's happening here but that's what an asynchronous system is and then once the job actually",
    "start": "7672960",
    "end": "7680000"
  },
  {
    "text": "finishes we write the result back into some sort of uh",
    "start": "7680000",
    "end": "7685280"
  },
  {
    "text": "place it could be the same message broker could be it could be a desk it could be another",
    "start": "7685280",
    "end": "7691280"
  },
  {
    "text": "service who cares right and that that basically picks up the result and you can do stuff with it right",
    "start": "7691280",
    "end": "7697679"
  },
  {
    "text": "so that's that's what asynchronous task process and you they have tons of this stuff they have a lot",
    "start": "7697679",
    "end": "7702960"
  },
  {
    "text": "how much did they say there there was a number 900 different",
    "start": "7702960",
    "end": "7709040"
  },
  {
    "text": "asynchronous tasks ordering merchant order check out you can imagine right all of",
    "start": "7709040",
    "end": "7716400"
  },
  {
    "text": "this stuff you want to get a response back to the server to the user as much as fast as possible right",
    "start": "7716400",
    "end": "7722320"
  },
  {
    "text": "let's execute a request get the result that okay i have submitted your order",
    "start": "7722320",
    "end": "7727440"
  },
  {
    "text": "i am processing it go do something else right that's how the back end works yeah the",
    "start": "7727440",
    "end": "7733040"
  },
  {
    "text": "back end is executing it right versus synchronicity where you the back end is actually serving you and",
    "start": "7733040",
    "end": "7740239"
  },
  {
    "text": "executing you and you're waiting for it so here's a technology that i never heard about",
    "start": "7740239",
    "end": "7745760"
  },
  {
    "text": "before celery guys and you might you might laugh now because i i have never heard of celery before so",
    "start": "7745760",
    "end": "7752239"
  },
  {
    "text": "celery is exactly does the job that i talked about here it is it's an it's an asynchronous and",
    "start": "7752239",
    "end": "7758480"
  },
  {
    "text": "synchronous task processing software it has nothing to do with brokers has nothing to do with messaging",
    "start": "7758480",
    "end": "7764560"
  },
  {
    "text": "it is it is it is is a software written in python that you submit tasks for it it spins up",
    "start": "7764560",
    "end": "7772239"
  },
  {
    "text": "the thread executes the task for you and then gets you back the result so that it runs you can either run it in a",
    "start": "7772239",
    "end": "7779440"
  },
  {
    "text": "single node or multiple node and that's it right celery and that's that's one",
    "start": "7779440",
    "end": "7785440"
  },
  {
    "text": "critique that i'm gonna say that maybe it's well known that's why they didn't mention this in the article i",
    "start": "7785440",
    "end": "7792239"
  },
  {
    "text": "wish they talked about more about this their existing architecture i felt that they didn't",
    "start": "7792239",
    "end": "7798239"
  },
  {
    "text": "clarify that to be honest right they jumped into the problem but they didn't draw uh",
    "start": "7798239",
    "end": "7804400"
  },
  {
    "text": "diagrams of their existing architecture so uh that if i'm gonna critique it that will",
    "start": "7804400",
    "end": "7809440"
  },
  {
    "text": "be one critique in this article right i'd love to see their existing architecture",
    "start": "7809440",
    "end": "7815040"
  },
  {
    "text": "instead of the problems right make sense so they have salary as this asynchronous",
    "start": "7815040",
    "end": "7822239"
  },
  {
    "text": "job executing but they pull the jobs and and and all these",
    "start": "7822239",
    "end": "7828880"
  },
  {
    "text": "messages from a broker because salary can be actually uh connected uh actually let's let's",
    "start": "7828880",
    "end": "7835920"
  },
  {
    "text": "pull it where is salary let's go to wiki yeah so salary can be optionally connected",
    "start": "7835920",
    "end": "7843760"
  },
  {
    "text": "to a message broker and the recommender is robertson q and orredis right because writers have this",
    "start": "7843760",
    "end": "7849679"
  },
  {
    "text": "pop sub system right rabbit mq is also there they are not supporting kafka as far as we",
    "start": "7849679",
    "end": "7855520"
  },
  {
    "text": "learned from this article beautiful article guys beautiful good job saba and ashwan",
    "start": "7855520",
    "end": "7862000"
  },
  {
    "text": "good job guys so so this is the current architecture",
    "start": "7862000",
    "end": "7867520"
  },
  {
    "text": "salary as this task execution system or written in python",
    "start": "7867520",
    "end": "7872880"
  },
  {
    "text": "and then rabbit mq as the back end that that basically submits acts like a queue basically",
    "start": "7872880",
    "end": "7880239"
  },
  {
    "text": "the message broker that submits to the exchange and then writes to the queue and then a salary",
    "start": "7880239",
    "end": "7886719"
  },
  {
    "text": "agent a salary worker will pick up a new job will pick up a new task and it's",
    "start": "7886719",
    "end": "7893360"
  },
  {
    "text": "from rabbitmq and start processing this stuff so they're using celery as the vehicle right for all for the",
    "start": "7893360",
    "end": "7901119"
  },
  {
    "text": "longest time i didn't think and i still believe we don't really need that extra layer",
    "start": "7901119",
    "end": "7908000"
  },
  {
    "text": "right i would have built this myself if i would write",
    "start": "7908000",
    "end": "7914159"
  },
  {
    "text": "and i i built a task manager before right in my my carrier so i would i would basically",
    "start": "7914159",
    "end": "7921360"
  },
  {
    "text": "use a queue i still looking for a simple queue that does only a q right i couldn't find one yet rabbit",
    "start": "7921360",
    "end": "7928400"
  },
  {
    "text": "mq's i had my little bit of of critique let's say for rabbit mq if you",
    "start": "7928400",
    "end": "7935360"
  },
  {
    "text": "if you know this channel i talked about a little rabbit mcu i like this architecture but i think they went too far right",
    "start": "7935360",
    "end": "7941679"
  },
  {
    "text": "they started with being a cube but then moved to a pop sub system right kafka started as as a streaming",
    "start": "7941679",
    "end": "7948000"
  },
  {
    "text": "pop sub system and and and that's that's that's the good thing right rabbit mq is starting to do so much",
    "start": "7948000",
    "end": "7954400"
  },
  {
    "text": "they're trying to expand when you try to expand you don't have focus anymore right and that your software becomes a little",
    "start": "7954400",
    "end": "7960960"
  },
  {
    "text": "bit complex and it suffers i feel mongodb is hitted the same route",
    "start": "7960960",
    "end": "7966880"
  },
  {
    "text": "in my opinion i know i know some of you like mongodb and nosql i'm have nothing",
    "start": "7966880",
    "end": "7973040"
  },
  {
    "text": "against those right but i just think if you're starting with nosql and you are",
    "start": "7973040",
    "end": "7978960"
  },
  {
    "text": "nosql and you're schema-less then trying to expand to become relational",
    "start": "7978960",
    "end": "7985360"
  },
  {
    "text": "is a little bit weird right you're trying to solve different problems now you're trying just to steal",
    "start": "7985360",
    "end": "7990800"
  },
  {
    "text": "to eat from the market share from the relational right so that's why mongodb is i know i'm",
    "start": "7990800",
    "end": "7997040"
  },
  {
    "text": "getting off the road but i'm i'm just talking about the rabbit mqs the same size says the same problem that i have with these",
    "start": "7997040",
    "end": "8003360"
  },
  {
    "text": "systems right mongodb now started supporting transaction full asset transactions",
    "start": "8003360",
    "end": "8009360"
  },
  {
    "text": "why right just because people were complaining that oh i would not",
    "start": "8009360",
    "end": "8014400"
  },
  {
    "text": "move to because it's not relational right if it's not transactional so they built in transactions on this and they have some",
    "start": "8014400",
    "end": "8021679"
  },
  {
    "text": "other problems like limiting the transactions and stuff because of that right i think they they're heading into the",
    "start": "8021679",
    "end": "8027280"
  },
  {
    "text": "wrong direction if you ask me mongodb but still it's a great database",
    "start": "8027280",
    "end": "8032800"
  },
  {
    "text": "the engineers behind are so smart solving extremely hard problems they're solving transaction across chart which is",
    "start": "8032800",
    "end": "8038880"
  },
  {
    "text": "which is nuts right this is nuts it's a very difficult problem to solve but my point",
    "start": "8038880",
    "end": "8044880"
  },
  {
    "text": "with rabbit and q is the same right that rabbit and q is from the name it's a message queue but",
    "start": "8044880",
    "end": "8050159"
  },
  {
    "text": "it does so much other stuff well there's these exchanges and stuff right awkward but regardless it doesn't mean",
    "start": "8050159",
    "end": "8057760"
  },
  {
    "text": "arbitrary is bad i just my opinion and you can have your own opinion so celery and rabbit mq are two systems and",
    "start": "8057760",
    "end": "8065040"
  },
  {
    "text": "what happened if you include too too many systems guys right complexity right",
    "start": "8065040",
    "end": "8073679"
  },
  {
    "text": "this is not a system written by you it's an open source yeah but you have dependency on this you have",
    "start": "8073679",
    "end": "8079440"
  },
  {
    "text": "dependency this and this is what happened this is what causes the problems they",
    "start": "8079440",
    "end": "8084880"
  },
  {
    "text": "start to see a spike and you can read this article spike on rabbit mq robot mq will just go down because",
    "start": "8084880",
    "end": "8092800"
  },
  {
    "text": "it will hit a limitation in rabbit mq and it's called the high surge",
    "start": "8092800",
    "end": "8100400"
  },
  {
    "text": "turn churn excessive connection turn they will hit",
    "start": "8100400",
    "end": "8108239"
  },
  {
    "text": "this excessive connection churn guys",
    "start": "8108239",
    "end": "8116079"
  },
  {
    "text": "let's read this this is what they hit the door dash team that what what what happened is like",
    "start": "8116159",
    "end": "8122639"
  },
  {
    "text": "they will get a lot of orders a lot of these execution and salary jobs will just skyrocket and it",
    "start": "8122639",
    "end": "8129360"
  },
  {
    "text": "will start shoving lots of jobs to rabbit mq",
    "start": "8129360",
    "end": "8134560"
  },
  {
    "text": "and execute not just publishing consuming and publishing both right and rabbiting q hit this",
    "start": "8134560",
    "end": "8141440"
  },
  {
    "text": "high connection churn let's read this a little bit let me zoom so we can read clearly a system is safe to have high",
    "start": "8141440",
    "end": "8148560"
  },
  {
    "text": "connection churn when it's rate of newly opened connection is consistently high",
    "start": "8148560",
    "end": "8154079"
  },
  {
    "text": "and and its rate of close connection is also consistently high",
    "start": "8154079",
    "end": "8160239"
  },
  {
    "text": "what do we know in the back end guys why did we build http 1 1",
    "start": "8160239",
    "end": "8167679"
  },
  {
    "text": "because http 100 had the same problem",
    "start": "8167679",
    "end": "8172639"
  },
  {
    "text": "http 10 we're trying to to be so precious saving our precious",
    "start": "8172880",
    "end": "8179119"
  },
  {
    "text": "memory so we said every request opens a connection and and and sends the request and then closes the",
    "start": "8179119",
    "end": "8185119"
  },
  {
    "text": "connection we regretted this decision immediately because it was a bad idea",
    "start": "8185119",
    "end": "8190880"
  },
  {
    "text": "opening and closing connection is bad it looks like from what i thought and",
    "start": "8190880",
    "end": "8196960"
  },
  {
    "text": "it's not clear salary is the cause of this thing celery",
    "start": "8196960",
    "end": "8202800"
  },
  {
    "text": "is every time you want to all connect to the rabbit in the queue they open a new",
    "start": "8202800",
    "end": "8208558"
  },
  {
    "text": "tcp connection which we talked about and then they send the request and then they close it",
    "start": "8208559",
    "end": "8214960"
  },
  {
    "text": "resulting in a churn of closing and opening closing and opening you shouldn't be opening and closing",
    "start": "8216559",
    "end": "8222080"
  },
  {
    "text": "connections in my opinion keep them alive why do we have hdb11",
    "start": "8222080",
    "end": "8227678"
  },
  {
    "text": "hdb2 keep those dang connections alive keep them running and that's the problem",
    "start": "8227679",
    "end": "8235518"
  },
  {
    "text": "of using existing software and not building your own and i'm not saying don't use existing software of course",
    "start": "8235519",
    "end": "8241760"
  },
  {
    "text": "but and again i don't know if this salary is the problem i never used it but",
    "start": "8241760",
    "end": "8247359"
  },
  {
    "text": "it seems like it from the description here from what i'm reading and guys if you if anyone from doordash here and i said",
    "start": "8247360",
    "end": "8254000"
  },
  {
    "text": "anything that is dumb or incorrect correct me guys i would love to learn more details",
    "start": "8254000",
    "end": "8259760"
  },
  {
    "text": "i'm starving for details here i'm starving i'm starving i need to learn more is salary can we i need to know",
    "start": "8259760",
    "end": "8268080"
  },
  {
    "text": "what is the architecture between celery and rabbit mq here",
    "start": "8268080",
    "end": "8275518"
  },
  {
    "text": "and why are we so chatty when it comes to that because rabbit and mcq connections are",
    "start": "8275519",
    "end": "8281439"
  },
  {
    "text": "not cheap they are very similar to http 2.",
    "start": "8281440",
    "end": "8286800"
  },
  {
    "text": "very similar and we know how expensive http 2 when it comes to cpu usage right",
    "start": "8286800",
    "end": "8293840"
  },
  {
    "text": "we know that because all these streams which ruby mq have",
    "start": "8293840",
    "end": "8299920"
  },
  {
    "text": "it's called channels right all these channels are in the same tcp connection",
    "start": "8299920",
    "end": "8305678"
  },
  {
    "text": "so robin mcq team i loved that in rabid mq i love their design and i don't know who",
    "start": "8305679",
    "end": "8311120"
  },
  {
    "text": "came up with this idea first rabbitmq as the advanced message queue protocol",
    "start": "8311120",
    "end": "8316638"
  },
  {
    "text": "or http 2 from speedy google i don't know who came up with this stream or channel i prefer the word",
    "start": "8316639",
    "end": "8323120"
  },
  {
    "text": "channel over stream i hate the word stream and hdb2 i don't like it one bit",
    "start": "8323120",
    "end": "8328319"
  },
  {
    "text": "i think it doesn't have anything to do with stream it's it's a channel i love the word channels more clear if",
    "start": "8328320",
    "end": "8334000"
  },
  {
    "text": "you tell me his channel it's called channel in ssh it's called channel rabbitmq",
    "start": "8334000",
    "end": "8339518"
  },
  {
    "text": "speedy decided to call his stream okay wherever all right",
    "start": "8339519",
    "end": "8346000"
  },
  {
    "text": "so i think that that's that's what caused basically the problem and you have a huge churn",
    "start": "8346000",
    "end": "8353439"
  },
  {
    "text": "in in rabbit mq causes what it causes downtime it causes basically",
    "start": "8353440",
    "end": "8360000"
  },
  {
    "text": "you cannot accept more because th the the the the single",
    "start": "8360000",
    "end": "8366000"
  },
  {
    "text": "master we can't say master anymore uh the leader node in rabid mq is",
    "start": "8366000",
    "end": "8373120"
  },
  {
    "text": "busy doing closing and opening connection which is extremely expensive and i and i bet it's even more",
    "start": "8373120",
    "end": "8380638"
  },
  {
    "text": "expensive in case of ramen with you because they have the the logical connection idea of",
    "start": "8380639",
    "end": "8386080"
  },
  {
    "text": "channel so i bet that's even made the problem even worse",
    "start": "8386080",
    "end": "8392560"
  },
  {
    "text": "so yeah availability scalability so they they they clarify these problems in",
    "start": "8393040",
    "end": "8398640"
  },
  {
    "text": "details they talk about all that stuff they're using python which is which is not a bad idea i think it's just just any",
    "start": "8398640",
    "end": "8404720"
  },
  {
    "text": "language will run into the same problem if you ask me and uh here's another thing guys here's",
    "start": "8404720",
    "end": "8409840"
  },
  {
    "text": "another thing i forgot to mention so celery talking about that southern burst of traffic would leave",
    "start": "8409840",
    "end": "8415120"
  },
  {
    "text": "rabbitmq in a downgraded state where task consumption was significantly lower than exception",
    "start": "8415120",
    "end": "8421040"
  },
  {
    "text": "in our experience this could only be resolved with a rabbit in queue bounds wow that's",
    "start": "8421040",
    "end": "8427600"
  },
  {
    "text": "just unacceptable rubber mq has a concept of flow control where it",
    "start": "8427600",
    "end": "8433359"
  },
  {
    "text": "will reduce the speed of connections which are published too quickly so that that cues can",
    "start": "8433359",
    "end": "8440960"
  },
  {
    "text": "keep up floor control guys it's a it's a very similar concept in tcp tcp have",
    "start": "8440960",
    "end": "8447359"
  },
  {
    "text": "flow control quick that's quick they built i believe",
    "start": "8447359",
    "end": "8452880"
  },
  {
    "text": "they built the flow control constant in quick yes so rabbit rabbitmq also",
    "start": "8452880",
    "end": "8458080"
  },
  {
    "text": "implement an application level flow control you know",
    "start": "8458080",
    "end": "8463280"
  },
  {
    "text": "which makes sense you don't want to shove thousands and thousands of packets all at once right you need to taste the",
    "start": "8463280",
    "end": "8470240"
  },
  {
    "text": "network see if it just like tcp slow start which we talked about right here",
    "start": "8470240",
    "end": "8476720"
  },
  {
    "text": "this is very similar i believe right which i i never knew that robin q had a flow control",
    "start": "8476720",
    "end": "8482000"
  },
  {
    "text": "kudos i love it so yeah so that's why it is it is a how what does what's the english word",
    "start": "8482000",
    "end": "8488399"
  },
  {
    "text": "for it double-edged sword yes it is a double edged sword so could it could hurt and it could",
    "start": "8488399",
    "end": "8493920"
  },
  {
    "text": "its beneficial network latencies yeah but they will kill the system otherwise",
    "start": "8493920",
    "end": "8500560"
  },
  {
    "text": "so they talk about all this stuff here consumers the salary consumers to kafka no kaka",
    "start": "8500560",
    "end": "8507200"
  },
  {
    "text": "robert mq we don't talk about kafka here so all this stuff they they propose so many other solutions",
    "start": "8507200",
    "end": "8512640"
  },
  {
    "text": "uh and then they they say okay let's switch up since celery supports redis let's switch",
    "start": "8512640",
    "end": "8518160"
  },
  {
    "text": "up radius instead of rabbit in the queue i don't know if that will help maybe it",
    "start": "8518160",
    "end": "8523840"
  },
  {
    "text": "will because what does radius use yeah rydis uses the resp protocol right there",
    "start": "8523840",
    "end": "8529280"
  },
  {
    "text": "their own custom one i have no idea if they're using channels or not though so maybe if seller is doing the same thing",
    "start": "8529280",
    "end": "8535760"
  },
  {
    "text": "closing an opening connection with every single request and consumption and i think you're going",
    "start": "8535760",
    "end": "8544080"
  },
  {
    "text": "to have the same problem right",
    "start": "8544080",
    "end": "8548960"
  },
  {
    "text": "that's the what they call the harakiri that's the closing and reopening harakiri connection churn does not",
    "start": "8550560",
    "end": "8556399"
  },
  {
    "text": "significantly degrade redis performance okay all right so they actually tested this thing i",
    "start": "8556399",
    "end": "8562080"
  },
  {
    "text": "like it so they said that the closing and",
    "start": "8562080",
    "end": "8567359"
  },
  {
    "text": "connection churn is not a problem in redis probably because it's not it's not the",
    "start": "8567359",
    "end": "8572399"
  },
  {
    "text": "chat it's not it's not the advanced message q protocol in rabbit mq is different than",
    "start": "8572399",
    "end": "8580560"
  },
  {
    "text": "redis right it's a completely different protocol so then maybe it's a little bit more lenient but to me i would solve the",
    "start": "8580560",
    "end": "8588080"
  },
  {
    "text": "root problem why we do we have this churn of connections you open a connection",
    "start": "8588080",
    "end": "8593359"
  },
  {
    "text": "open-end connection is so expensive open-end connection is so so expensive especially if it's tcp",
    "start": "8593359",
    "end": "8601120"
  },
  {
    "text": "what other connections do we have i mean quick we don't have that yet but yeah opening tcp is just so",
    "start": "8601120",
    "end": "8607520"
  },
  {
    "text": "expensive guys three-way handshake and then they didn't mention if it's tls",
    "start": "8607520",
    "end": "8612960"
  },
  {
    "text": "or not but yeah if you have tls on top of that if you have ts 1.2 sheesh",
    "start": "8612960",
    "end": "8619280"
  },
  {
    "text": "i bet it's secured they didn't mention anything about tls did they nope see this is what i crave",
    "start": "8619280",
    "end": "8626160"
  },
  {
    "text": "i crave informacion guys guys i crave information i need more",
    "start": "8626160",
    "end": "8633040"
  },
  {
    "text": "information there is not enough details here so yeah like",
    "start": "8633040",
    "end": "8638560"
  },
  {
    "text": "is the architecture between salary and rabbitmq is this secure doesn't mention because",
    "start": "8638560",
    "end": "8645439"
  },
  {
    "text": "if it's secure this will compound the problem even worse and if it's ts 1.2 it's even even worse than that",
    "start": "8645439",
    "end": "8653120"
  },
  {
    "text": "because we have like what two round trips plus the handshake and then you close it",
    "start": "8653120",
    "end": "8660479"
  },
  {
    "text": "that's why we need to understand how backhand works guys i i i i keep saying this in this channel i",
    "start": "8661760",
    "end": "8667120"
  },
  {
    "text": "keep saying it fundamentals guys fundamentals not tools do not use tools",
    "start": "8667120",
    "end": "8672560"
  },
  {
    "text": "and obviously i'm talking to to to to my community here i know not",
    "start": "8672560",
    "end": "8677840"
  },
  {
    "text": "your dash engineering per se but yeah is so important forget about this",
    "start": "8677840",
    "end": "8684479"
  },
  {
    "text": "all these tools once you understand how stuff basically work you you you are unstoppable you just",
    "start": "8684479",
    "end": "8692160"
  },
  {
    "text": "understand everything you just need to understand the basic fundamentals you build this stuff on top you you know what you're using so they",
    "start": "8692160",
    "end": "8698880"
  },
  {
    "text": "switch it to kafka and i believe first of all they built a",
    "start": "8698880",
    "end": "8704240"
  },
  {
    "text": "a smart python interface on top of their celery uh",
    "start": "8704240",
    "end": "8711200"
  },
  {
    "text": "workers so that they they kind of canary deploy the thing between rabbit mq and kafka right",
    "start": "8711200",
    "end": "8719840"
  },
  {
    "text": "wait a second i think they they removed celery altogether did they yes because you can you cannot connect",
    "start": "8719840",
    "end": "8726960"
  },
  {
    "text": "celery directly to kafka as far as i know so they built their own custom",
    "start": "8726960",
    "end": "8734479"
  },
  {
    "text": "system from scratch right that's the mvp they built it from scratch it's a custom solution right is that what",
    "start": "8734479",
    "end": "8740800"
  },
  {
    "text": "i a pretty custom custom i read the word custom here custom solution there you go they build",
    "start": "8740800",
    "end": "8746880"
  },
  {
    "text": "their own custom switch again guys if correct me if i said anything wrong with that right so",
    "start": "8746880",
    "end": "8752080"
  },
  {
    "text": "even that custom solution they still had problem with kafka guys right so before we go to the problems of",
    "start": "8752080",
    "end": "8759600"
  },
  {
    "text": "kafka they started just canary deployed between kafka and robin",
    "start": "8759600",
    "end": "8765040"
  },
  {
    "text": "say this was shifted all the load from kafk robert mc2 kafka i'd like to see how did the system",
    "start": "8765040",
    "end": "8773520"
  },
  {
    "text": "behave without kafka and the custom solution celery out of the way how did that",
    "start": "8773520",
    "end": "8780720"
  },
  {
    "text": "behave did they try that",
    "start": "8780720",
    "end": "8785920"
  },
  {
    "text": "because i have a strong feeling that celery is the problem here i don't know why",
    "start": "8786240",
    "end": "8791359"
  },
  {
    "text": "again guys i don't i don't know i don't know i might i'm i don't want to be that guy but it",
    "start": "8791359",
    "end": "8798240"
  },
  {
    "text": "feels like celery is the problem here custom solution very thin layer job processing and just",
    "start": "8798240",
    "end": "8806880"
  },
  {
    "text": "use rabbitmq as a broker i still don't understand why do we need the salary as a software",
    "start": "8806880",
    "end": "8813680"
  },
  {
    "text": "when was it built i'm just interested when was salary built right it's like was it",
    "start": "8813680",
    "end": "8820800"
  },
  {
    "text": "before the idea of broker was it was designed to solve certain",
    "start": "8820800",
    "end": "8825840"
  },
  {
    "text": "problems i think i don't know i know instagram uses salary i read this somewhere here but i",
    "start": "8825840",
    "end": "8832000"
  },
  {
    "text": "still don't know again guys i never used salary before so i don't know let me know if any of you",
    "start": "8832000",
    "end": "8837200"
  },
  {
    "text": "guys use celery that would be interesting to know right if you guys have similar problem but yeah",
    "start": "8837200",
    "end": "8843200"
  },
  {
    "text": "just because uh doordash moved to kafka does not mean that kafka is better",
    "start": "8843200",
    "end": "8849200"
  },
  {
    "text": "than rabbitmq i mean kafka's is way feature feature-wise is",
    "start": "8849200",
    "end": "8855280"
  },
  {
    "text": "better than rabbitmq that's for for sure just because of the design decision we",
    "start": "8855280",
    "end": "8861359"
  },
  {
    "text": "talked about that i'm not gonna dive deep into that again but the design choices of seamless adoption guys so",
    "start": "8861359",
    "end": "8868080"
  },
  {
    "text": "they started shifting everything back to kafka all right and they they had some problems they hit some",
    "start": "8868080",
    "end": "8875120"
  },
  {
    "text": "problems which is called the head of line blocking problem guys and i was surprised when i saw this like",
    "start": "8875120",
    "end": "8882720"
  },
  {
    "text": "wow how can i never thought about that because we talked about consumer grouping kafka",
    "start": "8882720",
    "end": "8887840"
  },
  {
    "text": "check out the kafka video and and you can use the youtube chapters to jump into consumer group to read exactly you're",
    "start": "8887840",
    "end": "8894960"
  },
  {
    "text": "going to understand whoa exactly you'll understand why this happened",
    "start": "8894960",
    "end": "8900160"
  },
  {
    "text": "so consumer group guys is the ability to is",
    "start": "8900160",
    "end": "8906640"
  },
  {
    "text": "kafka's solution for parallelism so that you can spin up in number of consumers in",
    "start": "8906640",
    "end": "8913840"
  },
  {
    "text": "a given consumer group and what will happen here is every",
    "start": "8913840",
    "end": "8919920"
  },
  {
    "text": "consumer will get one partition and one partition only right and",
    "start": "8919920",
    "end": "8928240"
  },
  {
    "text": "and and yeah so that's that's this that's the thing that's that's the idea of uh kafka topic",
    "start": "8928240",
    "end": "8934000"
  },
  {
    "text": "partitioning right so so that means also means if you have a consumer that is just a",
    "start": "8934000",
    "end": "8941760"
  },
  {
    "text": "slow consumer then and this is a slow message this consumer is just taking a long time processing this message for",
    "start": "8941760",
    "end": "8948000"
  },
  {
    "text": "any any reason right then you have to come it's like okay",
    "start": "8948000",
    "end": "8954399"
  },
  {
    "text": "first of all if this is slow then the whole thing is just blocked right this is called head of line blocking we",
    "start": "8954399",
    "end": "8960080"
  },
  {
    "text": "have the same problem with with http uh in pipelining http one one",
    "start": "8960080",
    "end": "8968479"
  },
  {
    "text": "right where you send a request you cannot execute any of the other unless that that the interquest is",
    "start": "8968479",
    "end": "8974800"
  },
  {
    "text": "executed right it's just ordered so that's the same problem here right see the fast messages are okay",
    "start": "8974800",
    "end": "8980800"
  },
  {
    "text": "slow message is the problem and and and now we start questioning why do we have a",
    "start": "8980800",
    "end": "8986479"
  },
  {
    "text": "slow message versus a fast message message right why would an order one order take",
    "start": "8986479",
    "end": "8992080"
  },
  {
    "text": "more to execute than others they should be identical right it's not that",
    "start": "8992080",
    "end": "9000720"
  },
  {
    "text": "again i'm i'm not 100 sure but if an order is an order if i submit",
    "start": "9000720",
    "end": "9005840"
  },
  {
    "text": "a thousand if i want thousand burgers from in and out versus one it's an order who cares if",
    "start": "9005840",
    "end": "9013280"
  },
  {
    "text": "yeah i'm not it's not like me i'm gonna make the burgers just in and out so yeah i'd like to know more",
    "start": "9013280",
    "end": "9019680"
  },
  {
    "text": "about why what is a slow message per se i'd like to know more about that so yeah",
    "start": "9019680",
    "end": "9026000"
  },
  {
    "text": "solving these kind of problems will be interesting i'm just very interested so yeah",
    "start": "9026000",
    "end": "9031840"
  },
  {
    "text": "parallelism and then they're going through all that stuff so they they start to break down the the consumer",
    "start": "9031840",
    "end": "9039600"
  },
  {
    "text": "and trying to find other solutions they're still still still working into these problems guys so i'm",
    "start": "9039600",
    "end": "9045520"
  },
  {
    "text": "gonna i'm gonna leave i'm gonna leave this uh to you guys it's a it's an interesting read",
    "start": "9045520",
    "end": "9051120"
  },
  {
    "text": "definitely i loved i'd like to see more and more articles like this",
    "start": "9051120",
    "end": "9056399"
  },
  {
    "text": "written in a very detailed manner uh it could be just me i'd love to see",
    "start": "9056399",
    "end": "9062560"
  },
  {
    "text": "more details in my opinion because like as i read i have more questions but yeah it's worldwide good job good",
    "start": "9062560",
    "end": "9069280"
  },
  {
    "text": "job guys i love it saba and ashwan excellent job guys excellent i love it this is a great art",
    "start": "9069280",
    "end": "9077359"
  },
  {
    "text": "article uh we need more visibility like this we need to know real peop real people real",
    "start": "9077359",
    "end": "9084880"
  },
  {
    "text": "businesses uses using these back in technologies and how this",
    "start": "9084880",
    "end": "9091359"
  },
  {
    "text": "technologies are performing right again guys again i'm going to repeat it for",
    "start": "9091359",
    "end": "9097280"
  },
  {
    "text": "the for the millions time does not mean that apache kafka is always the right solution to you",
    "start": "9097280",
    "end": "9102479"
  },
  {
    "text": "does that mean rabbit mq is a bad solution to you although most of your comments guys on",
    "start": "9102479",
    "end": "9108240"
  },
  {
    "text": "my rabbit mq video was like yeah you're right robin mq we we moved from rabbiting q because it",
    "start": "9108240",
    "end": "9113840"
  },
  {
    "text": "was so complex again guys that robin mq i used it at my work and",
    "start": "9113840",
    "end": "9120800"
  },
  {
    "text": "i built a course i made a video talking about rameki and i made a video",
    "start": "9120800",
    "end": "9126720"
  },
  {
    "text": "talking about kafka and kafka if you start with kafka it's it's it's way more",
    "start": "9126720",
    "end": "9132960"
  },
  {
    "text": "how do i say what i cannot say than complex it's more intertwined compared to rabbit q right",
    "start": "9132960",
    "end": "9139680"
  },
  {
    "text": "but i came with rabbit mq a little bit confused i saw there are so many",
    "start": "9139680",
    "end": "9144960"
  },
  {
    "text": "abstractions that kind of uh the barrier to entry becomes",
    "start": "9144960",
    "end": "9150640"
  },
  {
    "text": "real high and and learning rubbing mq becomes really difficult to the amount of features that i have",
    "start": "9150640",
    "end": "9156960"
  },
  {
    "text": "and that is that was my problem with it again i might change my mind anything that i say in this channel",
    "start": "9156960",
    "end": "9163200"
  },
  {
    "text": "i could tomorrow then i could definitely learn something new and say okay i was",
    "start": "9163200",
    "end": "9168720"
  },
  {
    "text": "wrong i would i'm i'm very happy to be proven wrong in",
    "start": "9168720",
    "end": "9173840"
  },
  {
    "text": "anything i say obviously that's how we learn right we keep learning to learn everything who",
    "start": "9173840",
    "end": "9178880"
  },
  {
    "text": "who knows everything nobody right we keep learning guys all right what do you think of this",
    "start": "9178880",
    "end": "9184240"
  },
  {
    "text": "article guys have you used celery have you used rabbitmq have you used apache kafka did you build",
    "start": "9184240",
    "end": "9190399"
  },
  {
    "text": "your own asynchronous task processing at all let me know in the comment",
    "start": "9190399",
    "end": "9195680"
  },
  {
    "text": "section below and then see you on the next one you guys stay awesome goodbye",
    "start": "9195680",
    "end": "9202640"
  }
]