[
  {
    "start": "0",
    "end": "254000"
  },
  {
    "text": "if you build it back and such as a REST",
    "start": "30",
    "end": "2190"
  },
  {
    "text": "API or what the application of web",
    "start": "2190",
    "end": "4380"
  },
  {
    "text": "service you need to account for requests",
    "start": "4380",
    "end": "7319"
  },
  {
    "text": "that yield expensive processing",
    "start": "7319",
    "end": "9870"
  },
  {
    "text": "expensive requests will block other",
    "start": "9870",
    "end": "12059"
  },
  {
    "text": "requests from being served if you only",
    "start": "12059",
    "end": "14639"
  },
  {
    "text": "have a single process or a single thread",
    "start": "14639",
    "end": "17460"
  },
  {
    "text": "for execution this is when you might",
    "start": "17460",
    "end": "20160"
  },
  {
    "text": "want to spin up another process to",
    "start": "20160",
    "end": "23070"
  },
  {
    "text": "execute your request leaving the main",
    "start": "23070",
    "end": "25619"
  },
  {
    "text": "process freely receiving requests right",
    "start": "25619",
    "end": "28769"
  },
  {
    "text": "so you again emphasis on the mightier",
    "start": "28769",
    "end": "32008"
  },
  {
    "text": "guys in this video we will build a",
    "start": "32009",
    "end": "34739"
  },
  {
    "text": "multi-process non-blocking web server",
    "start": "34739",
    "end": "37170"
  },
  {
    "text": "using an OGS by forking incoming",
    "start": "37170",
    "end": "40649"
  },
  {
    "text": "requests into their own child processes",
    "start": "40649",
    "end": "43410"
  },
  {
    "text": "for execution while keeping the main",
    "start": "43410",
    "end": "46289"
  },
  {
    "text": "process free and happy and dandy to",
    "start": "46289",
    "end": "48899"
  },
  {
    "text": "receive incoming requests we'll also",
    "start": "48899",
    "end": "52280"
  },
  {
    "text": "like oh we always do in this channel",
    "start": "52280",
    "end": "54809"
  },
  {
    "text": "explain the pros and cons of doing so",
    "start": "54809",
    "end": "57149"
  },
  {
    "text": "since it might not always be a good idea",
    "start": "57149",
    "end": "60300"
  },
  {
    "text": "to create multiple processes as it",
    "start": "60300",
    "end": "63660"
  },
  {
    "text": "increases the complexity of your",
    "start": "63660",
    "end": "66060"
  },
  {
    "text": "application advice if you're new here",
    "start": "66060",
    "end": "67890"
  },
  {
    "text": "welcome my name is Christine and in this",
    "start": "67890",
    "end": "69930"
  },
  {
    "text": "channel we discussed also social",
    "start": "69930",
    "end": "71520"
  },
  {
    "text": "software engineering by example so if",
    "start": "71520",
    "end": "73770"
  },
  {
    "text": "you're gonna become a better software",
    "start": "73770",
    "end": "74700"
  },
  {
    "text": "engine consider subscribing and hit that",
    "start": "74700",
    "end": "77310"
  },
  {
    "text": "Bell icon so you get notified every time",
    "start": "77310",
    "end": "78780"
  },
  {
    "text": "I upload a new video that's it let's",
    "start": "78780",
    "end": "80850"
  },
  {
    "text": "just jump into this video alright guys",
    "start": "80850",
    "end": "82380"
  },
  {
    "text": "I'm gonna divide this video into three",
    "start": "82380",
    "end": "84210"
  },
  {
    "text": "parts and you're gonna see now under the",
    "start": "84210",
    "end": "87689"
  },
  {
    "text": "screen jump codes to jump to the",
    "start": "87689",
    "end": "90270"
  },
  {
    "text": "interesting part of the video where you",
    "start": "90270",
    "end": "92430"
  },
  {
    "text": "want to watch alright so the first part",
    "start": "92430",
    "end": "94979"
  },
  {
    "text": "we're gonna explain a blocking process",
    "start": "94979",
    "end": "97950"
  },
  {
    "text": "write a service that is essentially",
    "start": "97950",
    "end": "100170"
  },
  {
    "text": "called is prime that one you're seeing",
    "start": "100170",
    "end": "102000"
  },
  {
    "text": "right now right and how it works a",
    "start": "102000",
    "end": "104610"
  },
  {
    "text": "blocking single process single threaded",
    "start": "104610",
    "end": "106890"
  },
  {
    "text": "application that blocks and executes",
    "start": "106890",
    "end": "109619"
  },
  {
    "text": "this thing and you cannot do anything",
    "start": "109619",
    "end": "111090"
  },
  {
    "text": "else after while this is executing the",
    "start": "111090",
    "end": "113579"
  },
  {
    "text": "second part you get a week and it turned",
    "start": "113579",
    "end": "115229"
  },
  {
    "text": "this is prime function into a multi",
    "start": "115229",
    "end": "118320"
  },
  {
    "text": "process back-end where it can receive a",
    "start": "118320",
    "end": "122399"
  },
  {
    "text": "lot of requests and spin up processes to",
    "start": "122399",
    "end": "125430"
  },
  {
    "text": "churnin into these the prime function",
    "start": "125430",
    "end": "128970"
  },
  {
    "text": "and calculate if whether my function is",
    "start": "128970",
    "end": "131220"
  },
  {
    "text": "prime or not and instead of blocking",
    "start": "131220",
    "end": "133650"
  },
  {
    "text": "main process or the parent process right",
    "start": "133650",
    "end": "136470"
  },
  {
    "text": "and the third part of the video we're",
    "start": "136470",
    "end": "138480"
  },
  {
    "text": "going to talk about the pros and cons of",
    "start": "138480",
    "end": "140099"
  },
  {
    "text": "doing so right",
    "start": "140099",
    "end": "141239"
  },
  {
    "text": "obviously this increases the complexity",
    "start": "141239",
    "end": "143099"
  },
  {
    "text": "and we're gonna talk about whether is",
    "start": "143099",
    "end": "144870"
  },
  {
    "text": "wor fit to do so or not especially in",
    "start": "144870",
    "end": "147480"
  },
  {
    "text": "this age where everything almost goes",
    "start": "147480",
    "end": "149430"
  },
  {
    "text": "into micro services and containers and",
    "start": "149430",
    "end": "151530"
  },
  {
    "text": "so simple just to spin up another",
    "start": "151530",
    "end": "153390"
  },
  {
    "text": "application and instead of complex and",
    "start": "153390",
    "end": "156599"
  },
  {
    "text": "complicating your application what I say",
    "start": "156599",
    "end": "158640"
  },
  {
    "text": "let's just jump into this video",
    "start": "158640",
    "end": "160019"
  },
  {
    "text": "all right part one here is this is a",
    "start": "160019",
    "end": "162540"
  },
  {
    "text": "service that I built",
    "start": "162540",
    "end": "163799"
  },
  {
    "text": "it's a REST API ish right but",
    "start": "163799",
    "end": "167849"
  },
  {
    "text": "essentially what it does it accept a",
    "start": "167849",
    "end": "170069"
  },
  {
    "text": "query parameter and you give it a number",
    "start": "170069",
    "end": "172769"
  },
  {
    "text": "and it's gonna do send return Jason",
    "start": "172769",
    "end": "175290"
  },
  {
    "text": "payload and it this jason tells you hey",
    "start": "175290",
    "end": "177930"
  },
  {
    "text": "this is the number you told me it is",
    "start": "177930",
    "end": "179940"
  },
  {
    "text": "prime or not and how long it took me to",
    "start": "179940",
    "end": "182250"
  },
  {
    "text": "find out so if I say it like oh is my is",
    "start": "182250",
    "end": "186540"
  },
  {
    "text": "hundred a prime is gonna say no it is",
    "start": "186540",
    "end": "189209"
  },
  {
    "text": "not a prime and it took me just zero",
    "start": "189209",
    "end": "191670"
  },
  {
    "text": "milliseconds to find out right but if",
    "start": "191670",
    "end": "194159"
  },
  {
    "text": "you give it like a huge number such as",
    "start": "194159",
    "end": "196409"
  },
  {
    "text": "this one I know this is a problem I",
    "start": "196409",
    "end": "198239"
  },
  {
    "text": "stole it from online from one of the",
    "start": "198239",
    "end": "200730"
  },
  {
    "text": "sides and if you hit that you can see",
    "start": "200730",
    "end": "203280"
  },
  {
    "text": "what happens here is the process is",
    "start": "203280",
    "end": "206269"
  },
  {
    "text": "processing a bit back in because with",
    "start": "206269",
    "end": "208829"
  },
  {
    "text": "the way I wrote this function is that it",
    "start": "208829",
    "end": "211079"
  },
  {
    "text": "is the most inefficient way you can",
    "start": "211079",
    "end": "213540"
  },
  {
    "text": "think of of calculating a prompt right",
    "start": "213540",
    "end": "215700"
  },
  {
    "text": "and it is obviously gonna take a long",
    "start": "215700",
    "end": "218190"
  },
  {
    "text": "time to find out right and if I weren't",
    "start": "218190",
    "end": "220919"
  },
  {
    "text": "here and like say ask the ask the",
    "start": "220919",
    "end": "223680"
  },
  {
    "text": "function or ask the service hey is seven",
    "start": "223680",
    "end": "226019"
  },
  {
    "text": "a prime guess what it's gonna get",
    "start": "226019",
    "end": "227940"
  },
  {
    "text": "blocked it's not gonna get any result",
    "start": "227940",
    "end": "230220"
  },
  {
    "text": "it's two of prime no it's not a prime",
    "start": "230220",
    "end": "233190"
  },
  {
    "text": "right so you really don't know because",
    "start": "233190",
    "end": "236069"
  },
  {
    "text": "there is one single process and it's",
    "start": "236069",
    "end": "238049"
  },
  {
    "text": "busy executing this largest number",
    "start": "238049",
    "end": "241470"
  },
  {
    "text": "all right so guess what we got a block",
    "start": "241470",
    "end": "244590"
  },
  {
    "text": "is this good right it's not right so",
    "start": "244590",
    "end": "247919"
  },
  {
    "text": "here's what we're gonna do we're gonna",
    "start": "247919",
    "end": "249900"
  },
  {
    "text": "let's go ahead and look at how the",
    "start": "249900",
    "end": "251910"
  },
  {
    "text": "sausage is made guys the code and here's",
    "start": "251910",
    "end": "255269"
  },
  {
    "start": "254000",
    "end": "375000"
  },
  {
    "text": "the code guys right let's stop the",
    "start": "255269",
    "end": "257130"
  },
  {
    "text": "process right now and just go through it",
    "start": "257130",
    "end": "259079"
  },
  {
    "text": "real quick",
    "start": "259079",
    "end": "260449"
  },
  {
    "text": "and what do we have here is a node",
    "start": "260449",
    "end": "263389"
  },
  {
    "text": "replicate nodejs application using",
    "start": "263389",
    "end": "265280"
  },
  {
    "text": "express framework and what we have here",
    "start": "265280",
    "end": "267949"
  },
  {
    "text": "is we spinning an application we have a",
    "start": "267949",
    "end": "270199"
  },
  {
    "text": "get request and if someone requested the",
    "start": "270199",
    "end": "273500"
  },
  {
    "text": "as prime endpoint we will create a",
    "start": "273500",
    "end": "276650"
  },
  {
    "text": "function and then we will get the",
    "start": "276650",
    "end": "279469"
  },
  {
    "text": "request that query parameter we talked",
    "start": "279469",
    "end": "281930"
  },
  {
    "text": "about required parameter in this channel",
    "start": "281930",
    "end": "283520"
  },
  {
    "text": "what's the difference between this is",
    "start": "283520",
    "end": "284810"
  },
  {
    "text": "the URL thing essentially get the number",
    "start": "284810",
    "end": "288129"
  },
  {
    "text": "variable and since this is a string we",
    "start": "288129",
    "end": "290930"
  },
  {
    "text": "have to parse it into an integer so tell",
    "start": "290930",
    "end": "293539"
  },
  {
    "text": "the Java say hey it's a number call this",
    "start": "293539",
    "end": "297680"
  },
  {
    "text": "magic function that's called as Prime",
    "start": "297680",
    "end": "299509"
  },
  {
    "text": "and this magic function will return",
    "start": "299509",
    "end": "301569"
  },
  {
    "text": "which your studio code actually nicely",
    "start": "301569",
    "end": "304219"
  },
  {
    "text": "shows you this it returns three one JSON",
    "start": "304219",
    "end": "307250"
  },
  {
    "text": "object code three information that one",
    "start": "307250",
    "end": "309620"
  },
  {
    "text": "use so right number what the number is",
    "start": "309620",
    "end": "311960"
  },
  {
    "text": "that one I processing is prime whether",
    "start": "311960",
    "end": "315110"
  },
  {
    "text": "it's prime or not and how long it took",
    "start": "315110",
    "end": "317539"
  },
  {
    "text": "me right to finish essentially gonna get",
    "start": "317539",
    "end": "320000"
  },
  {
    "text": "better jason back send the jason back to",
    "start": "320000",
    "end": "323300"
  },
  {
    "text": "the web application right so which is",
    "start": "323300",
    "end": "325729"
  },
  {
    "text": "the one who made the request this is the",
    "start": "325729",
    "end": "327680"
  },
  {
    "text": "listening part and this is the function",
    "start": "327680",
    "end": "329240"
  },
  {
    "text": "you take the number you stamp the",
    "start": "329240",
    "end": "331460"
  },
  {
    "text": "starting point and then you say hey loop",
    "start": "331460",
    "end": "333830"
  },
  {
    "text": "from start from three and go and tell",
    "start": "333830",
    "end": "336560"
  },
  {
    "text": "the number minus one obviously because",
    "start": "336560",
    "end": "339379"
  },
  {
    "text": "it's listening and then if you found any",
    "start": "339379",
    "end": "341810"
  },
  {
    "text": "number between those two that is",
    "start": "341810",
    "end": "344659"
  },
  {
    "text": "divisible by by by the number alright",
    "start": "344659",
    "end": "348319"
  },
  {
    "text": "then this is not a prime there exit",
    "start": "348319",
    "end": "351710"
  },
  {
    "text": "right break that okay obviously this is",
    "start": "351710",
    "end": "353750"
  },
  {
    "text": "the worst way to write there is a prime",
    "start": "353750",
    "end": "355729"
  },
  {
    "text": "number but I just wanted to demonstrate",
    "start": "355729",
    "end": "358159"
  },
  {
    "text": "how slow this thing out and you're gonna",
    "start": "358159",
    "end": "360500"
  },
  {
    "text": "break here and if your function survives",
    "start": "360500",
    "end": "362870"
  },
  {
    "text": "here that means you are a prime because",
    "start": "362870",
    "end": "364639"
  },
  {
    "text": "you prime it we set that variable to",
    "start": "364639",
    "end": "367400"
  },
  {
    "text": "true by default and if it's prime stem",
    "start": "367400",
    "end": "370939"
  },
  {
    "text": "the end time and then essentially return",
    "start": "370939",
    "end": "372830"
  },
  {
    "text": "this payload very cool stuff right very",
    "start": "372830",
    "end": "375289"
  },
  {
    "start": "375000",
    "end": "420000"
  },
  {
    "text": "simple let's see how I can turn this",
    "start": "375289",
    "end": "377719"
  },
  {
    "text": "into a multi process application guys",
    "start": "377719",
    "end": "379939"
  },
  {
    "text": "and to do that I'm gonna copy this code",
    "start": "379939",
    "end": "382430"
  },
  {
    "text": "here I'm gonna create a brand new",
    "start": "382430",
    "end": "384889"
  },
  {
    "text": "project let's go ahead and do that",
    "start": "384889",
    "end": "386979"
  },
  {
    "text": "and a new project Java Script playground",
    "start": "386979",
    "end": "391009"
  },
  {
    "text": "let's call it is prime none below",
    "start": "391009",
    "end": "393800"
  },
  {
    "text": "how about that guys create a new project",
    "start": "393800",
    "end": "395990"
  },
  {
    "text": "in Dexter j/s and then let's paste the",
    "start": "395990",
    "end": "401389"
  },
  {
    "text": "whole code it's the same exact code but",
    "start": "401389",
    "end": "403550"
  },
  {
    "text": "it is the difference let's go ahead and",
    "start": "403550",
    "end": "405349"
  },
  {
    "text": "just initialize NPM just for fun and in",
    "start": "405349",
    "end": "409430"
  },
  {
    "text": "PM and youth - why that means just",
    "start": "409430",
    "end": "412580"
  },
  {
    "text": "created",
    "start": "412580",
    "end": "413449"
  },
  {
    "text": "like I should chase it for me and then",
    "start": "413449",
    "end": "415520"
  },
  {
    "text": "we have a chat package suggesting we're",
    "start": "415520",
    "end": "417169"
  },
  {
    "text": "ready to do this guys let's do this",
    "start": "417169",
    "end": "420830"
  },
  {
    "start": "420000",
    "end": "490000"
  },
  {
    "text": "here's what I want to do every time I",
    "start": "420830",
    "end": "423879"
  },
  {
    "text": "receive a get request on his prime I",
    "start": "423879",
    "end": "427190"
  },
  {
    "text": "don't want to call this function I want",
    "start": "427190",
    "end": "429319"
  },
  {
    "text": "to spin a process a child process and",
    "start": "429319",
    "end": "432560"
  },
  {
    "text": "that child process will execute it as",
    "start": "432560",
    "end": "435349"
  },
  {
    "text": "prime function that means one thing is",
    "start": "435349",
    "end": "437870"
  },
  {
    "text": "prime function has a wrong location it",
    "start": "437870",
    "end": "440960"
  },
  {
    "text": "doesn't live here it should live in its",
    "start": "440960",
    "end": "443150"
  },
  {
    "text": "own file because other processes need to",
    "start": "443150",
    "end": "446030"
  },
  {
    "text": "access that file so that's a plus for",
    "start": "446030",
    "end": "448280"
  },
  {
    "text": "this architecture decoupling right",
    "start": "448280",
    "end": "451610"
  },
  {
    "text": "you're decoupling the function which is",
    "start": "451610",
    "end": "453500"
  },
  {
    "text": "this guy the web framework from the",
    "start": "453500",
    "end": "459830"
  },
  {
    "text": "actual execution which is that kind of a",
    "start": "459830",
    "end": "462110"
  },
  {
    "text": "good thing right so let's go ahead and",
    "start": "462110",
    "end": "464000"
  },
  {
    "text": "create an is primed ojs function here or",
    "start": "464000",
    "end": "468229"
  },
  {
    "text": "jail for file and then I'm gonna go",
    "start": "468229",
    "end": "471050"
  },
  {
    "text": "ahead and copy the whole thing or cut",
    "start": "471050",
    "end": "473419"
  },
  {
    "text": "the whole thing here and you can see",
    "start": "473419",
    "end": "475190"
  },
  {
    "text": "just I have some sample prime numbers",
    "start": "475190",
    "end": "477259"
  },
  {
    "text": "for me to test and we have the function",
    "start": "477259",
    "end": "480110"
  },
  {
    "text": "its prime is this enough not yet because",
    "start": "480110",
    "end": "483710"
  },
  {
    "text": "it's a function you need to invoke it",
    "start": "483710",
    "end": "485419"
  },
  {
    "text": "somehow right we didn't invoke it here's",
    "start": "485419",
    "end": "488719"
  },
  {
    "text": "what we want to do if I receive a get",
    "start": "488719",
    "end": "492740"
  },
  {
    "start": "490000",
    "end": "565000"
  },
  {
    "text": "request here I want to do the phone I",
    "start": "492740",
    "end": "495860"
  },
  {
    "text": "want to spin a new process is spinning",
    "start": "495860",
    "end": "498590"
  },
  {
    "text": "the incorrect work because what we're",
    "start": "498590",
    "end": "500060"
  },
  {
    "text": "actually doing is forking and forking is",
    "start": "500060",
    "end": "502819"
  },
  {
    "text": "in the UNIX terms is essentially cloning",
    "start": "502819",
    "end": "505880"
  },
  {
    "text": "or copying a process and that's that how",
    "start": "505880",
    "end": "508699"
  },
  {
    "text": "essentially it's done so let's do this",
    "start": "508699",
    "end": "511419"
  },
  {
    "text": "to do that we need to get access to the",
    "start": "511419",
    "end": "516169"
  },
  {
    "text": "fork child process framework right the",
    "start": "516169",
    "end": "521390"
  },
  {
    "text": "package and to do that we can do this",
    "start": "521390",
    "end": "523339"
  },
  {
    "text": "fork equal require there is a package",
    "start": "523339",
    "end": "527120"
  },
  {
    "text": "called",
    "start": "527120",
    "end": "527420"
  },
  {
    "text": "child process here so you can either do",
    "start": "527420",
    "end": "529910"
  },
  {
    "text": "this which will give you the fork class",
    "start": "529910",
    "end": "533660"
  },
  {
    "text": "if you will or function and or you can",
    "start": "533660",
    "end": "537170"
  },
  {
    "text": "use this structuring assignments to do",
    "start": "537170",
    "end": "540230"
  },
  {
    "text": "this both of them will work alright we",
    "start": "540230",
    "end": "543200"
  },
  {
    "text": "get the fork and here's what we want to",
    "start": "543200",
    "end": "545060"
  },
  {
    "text": "do we're gonna create a child process",
    "start": "545060",
    "end": "547540"
  },
  {
    "text": "equal fork and guess what we want to",
    "start": "547540",
    "end": "553459"
  },
  {
    "text": "execute is prime s which is the function",
    "start": "553459",
    "end": "556540"
  },
  {
    "text": "which is the which is essentially that",
    "start": "556540",
    "end": "559430"
  },
  {
    "text": "file which has nothing in it",
    "start": "559430",
    "end": "561500"
  },
  {
    "text": "it's just have a function which is not",
    "start": "561500",
    "end": "562880"
  },
  {
    "text": "even invoked yet here is the trick does",
    "start": "562880",
    "end": "566300"
  },
  {
    "start": "565000",
    "end": "602000"
  },
  {
    "text": "that trick isn't this guy we get back a",
    "start": "566300",
    "end": "569329"
  },
  {
    "text": "child process we get access to the child",
    "start": "569329",
    "end": "572720"
  },
  {
    "text": "process and here's the interesting about",
    "start": "572720",
    "end": "576139"
  },
  {
    "text": "this communication that we're going to",
    "start": "576139",
    "end": "578120"
  },
  {
    "text": "happen we have by default a process",
    "start": "578120",
    "end": "581480"
  },
  {
    "text": "object you get this all the time when",
    "start": "581480",
    "end": "584269"
  },
  {
    "text": "you spin up a new node application and",
    "start": "584269",
    "end": "588190"
  },
  {
    "text": "process will point to the current",
    "start": "588190",
    "end": "590209"
  },
  {
    "text": "executing process okay and by default",
    "start": "590209",
    "end": "593959"
  },
  {
    "text": "you can listen you can do certain things",
    "start": "593959",
    "end": "596870"
  },
  {
    "text": "with this parent process right it's an",
    "start": "596870",
    "end": "599449"
  },
  {
    "text": "ojs process however this guy is a little",
    "start": "599449",
    "end": "603560"
  },
  {
    "text": "bit different this guide is a child",
    "start": "603560",
    "end": "605480"
  },
  {
    "text": "process and child process has the",
    "start": "605480",
    "end": "607699"
  },
  {
    "text": "function called send okay and by default",
    "start": "607699",
    "end": "610970"
  },
  {
    "text": "when you do child process dot send you",
    "start": "610970",
    "end": "613730"
  },
  {
    "text": "can send information to that child",
    "start": "613730",
    "end": "618170"
  },
  {
    "text": "process and from alright so it's really",
    "start": "618170",
    "end": "621410"
  },
  {
    "text": "interesting that's so let's get into it",
    "start": "621410",
    "end": "623300"
  },
  {
    "text": "here so if I have the child process here",
    "start": "623300",
    "end": "626420"
  },
  {
    "text": "what I want to do is I spin up a process",
    "start": "626420",
    "end": "629000"
  },
  {
    "text": "that's not enough I want to send it some",
    "start": "629000",
    "end": "630949"
  },
  {
    "text": "information how do I do that child",
    "start": "630949",
    "end": "633640"
  },
  {
    "text": "process that's send send you a message",
    "start": "633640",
    "end": "637550"
  },
  {
    "text": "and that message is JSON object and I'm",
    "start": "637550",
    "end": "640880"
  },
  {
    "text": "gonna send it basically guess what guys",
    "start": "640880",
    "end": "642680"
  },
  {
    "text": "the number that you guys need to crunch",
    "start": "642680",
    "end": "645110"
  },
  {
    "text": "I want you to crunch this proper this",
    "start": "645110",
    "end": "647060"
  },
  {
    "text": "number what's the number this is the",
    "start": "647060",
    "end": "649339"
  },
  {
    "text": "number let's go ahead and send it here",
    "start": "649339",
    "end": "652160"
  },
  {
    "start": "652000",
    "end": "733000"
  },
  {
    "text": "and once we do the child process to send",
    "start": "652160",
    "end": "655699"
  },
  {
    "text": "we got a listen on the child process",
    "start": "655699",
    "end": "660889"
  },
  {
    "text": "or that number and pick it up right we",
    "start": "660889",
    "end": "663109"
  },
  {
    "text": "will do that but here's what I want to",
    "start": "663109",
    "end": "664939"
  },
  {
    "text": "do here I want to listen on so what you",
    "start": "664939",
    "end": "668839"
  },
  {
    "text": "get back from that forking this machine",
    "start": "668839",
    "end": "672259"
  },
  {
    "text": "you get the forked child process object",
    "start": "672259",
    "end": "675470"
  },
  {
    "text": "and you can send that child process",
    "start": "675470",
    "end": "677749"
  },
  {
    "text": "message and you can listen on messages",
    "start": "677749",
    "end": "680269"
  },
  {
    "text": "on that fork process let's go ahead and",
    "start": "680269",
    "end": "682819"
  },
  {
    "text": "just get that message right and what is",
    "start": "682819",
    "end": "685579"
  },
  {
    "text": "this message this will be the response",
    "start": "685579",
    "end": "687470"
  },
  {
    "text": "by the way guys this will be the",
    "start": "687470",
    "end": "689720"
  },
  {
    "text": "response from the child okay once the",
    "start": "689720",
    "end": "693679"
  },
  {
    "text": "child finished processing is going to",
    "start": "693679",
    "end": "695239"
  },
  {
    "text": "send us that parent the information and",
    "start": "695239",
    "end": "698269"
  },
  {
    "text": "to do that we will essentially get a",
    "start": "698269",
    "end": "701629"
  },
  {
    "text": "function and guess what we will",
    "start": "701629",
    "end": "704720"
  },
  {
    "text": "immediately responds with that message",
    "start": "704720",
    "end": "707199"
  },
  {
    "text": "immediately and that message will be the",
    "start": "707199",
    "end": "711169"
  },
  {
    "text": "JSON response that we saw essentially",
    "start": "711169",
    "end": "713359"
  },
  {
    "text": "right so let's go ahead and delete that",
    "start": "713359",
    "end": "715009"
  },
  {
    "text": "we don't need any of that anymore right",
    "start": "715009",
    "end": "717290"
  },
  {
    "text": "so we establish half of the",
    "start": "717290",
    "end": "719989"
  },
  {
    "text": "communication here we're sending the",
    "start": "719989",
    "end": "722720"
  },
  {
    "text": "input to the process and we're waiting",
    "start": "722720",
    "end": "726470"
  },
  {
    "text": "for a result from the child process to",
    "start": "726470",
    "end": "730129"
  },
  {
    "text": "send us information let's go to the",
    "start": "730129",
    "end": "732559"
  },
  {
    "text": "child what do we do in the child when",
    "start": "732559",
    "end": "735499"
  },
  {
    "start": "733000",
    "end": "767000"
  },
  {
    "text": "you do the child here when you spin the",
    "start": "735499",
    "end": "737809"
  },
  {
    "text": "child here is the what you get for free",
    "start": "737809",
    "end": "739519"
  },
  {
    "text": "you get the process object I did not",
    "start": "739519",
    "end": "741889"
  },
  {
    "text": "create it it's a global process object",
    "start": "741889",
    "end": "744110"
  },
  {
    "text": "and here's an interesting thing between",
    "start": "744110",
    "end": "746419"
  },
  {
    "text": "this process object and this process",
    "start": "746419",
    "end": "749749"
  },
  {
    "text": "object there is this process object to",
    "start": "749749",
    "end": "753919"
  },
  {
    "text": "this is a parent right it cannot send",
    "start": "753919",
    "end": "756769"
  },
  {
    "text": "anything if you do not send you're gonna",
    "start": "756769",
    "end": "758480"
  },
  {
    "text": "get an error right because it's it is",
    "start": "758480",
    "end": "761959"
  },
  {
    "text": "known as a parent process it cannot send",
    "start": "761959",
    "end": "764569"
  },
  {
    "text": "information to anything but this process",
    "start": "764569",
    "end": "768289"
  },
  {
    "start": "767000",
    "end": "828000"
  },
  {
    "text": "object can actually send because it",
    "start": "768289",
    "end": "770299"
  },
  {
    "text": "knows itself it's a child so by default",
    "start": "770299",
    "end": "773179"
  },
  {
    "text": "loonies sent is gonna send information",
    "start": "773179",
    "end": "774980"
  },
  {
    "text": "to the parent which which is essentially",
    "start": "774980",
    "end": "777439"
  },
  {
    "text": "to the forked process whoever listened",
    "start": "777439",
    "end": "780169"
  },
  {
    "text": "to that fourth process so that's the",
    "start": "780169",
    "end": "782660"
  },
  {
    "text": "that's kind of the tricky part on if I",
    "start": "782660",
    "end": "786109"
  },
  {
    "text": "listened to the message here I am gonna",
    "start": "786109",
    "end": "789559"
  },
  {
    "text": "receive request that is coming from",
    "start": "789559",
    "end": "792730"
  },
  {
    "text": "parent right so what is the request here",
    "start": "792730",
    "end": "795600"
  },
  {
    "text": "message what did we send we send a",
    "start": "795600",
    "end": "799329"
  },
  {
    "text": "number a member message dot number which",
    "start": "799329",
    "end": "801670"
  },
  {
    "text": "is this object that we sent so here's",
    "start": "801670",
    "end": "804699"
  },
  {
    "text": "what we're gonna do we're gonna do it",
    "start": "804699",
    "end": "807010"
  },
  {
    "text": "cons JSON response equal is Prime and",
    "start": "807010",
    "end": "811930"
  },
  {
    "text": "then we're gonna send it message number",
    "start": "811930",
    "end": "814050"
  },
  {
    "text": "so weird",
    "start": "814050",
    "end": "815639"
  },
  {
    "text": "look at that so if I sent them message",
    "start": "815639",
    "end": "818350"
  },
  {
    "text": "number I am going to execute exactly the",
    "start": "818350",
    "end": "822160"
  },
  {
    "text": "same function again I get exactly that",
    "start": "822160",
    "end": "824110"
  },
  {
    "text": "payload and it is exact that payload is",
    "start": "824110",
    "end": "826740"
  },
  {
    "text": "the JSON response so how do I send it",
    "start": "826740",
    "end": "830199"
  },
  {
    "start": "828000",
    "end": "863000"
  },
  {
    "text": "back to my parent used you guess the",
    "start": "830199",
    "end": "833230"
  },
  {
    "text": "guys process the sent and if you do that",
    "start": "833230",
    "end": "836139"
  },
  {
    "text": "you just immediately send it exactly the",
    "start": "836139",
    "end": "838990"
  },
  {
    "text": "same thing okay there's a tricky part",
    "start": "838990",
    "end": "841720"
  },
  {
    "text": "guys I am going to usually what you want",
    "start": "841720",
    "end": "844690"
  },
  {
    "text": "to do is to kill the process here but",
    "start": "844690",
    "end": "846459"
  },
  {
    "text": "I'm gonna leave it to show you what's",
    "start": "846459",
    "end": "847779"
  },
  {
    "text": "the difference right because if you've",
    "start": "847779",
    "end": "849670"
  },
  {
    "text": "done you really need to kill the process",
    "start": "849670",
    "end": "851620"
  },
  {
    "text": "and due process third exit if you don't",
    "start": "851620",
    "end": "853930"
  },
  {
    "text": "do that right then the process will get",
    "start": "853930",
    "end": "857110"
  },
  {
    "text": "orphaned and that will just eat your",
    "start": "857110",
    "end": "861010"
  },
  {
    "text": "memory let's do this okay I think we",
    "start": "861010",
    "end": "864370"
  },
  {
    "start": "863000",
    "end": "893000"
  },
  {
    "text": "have all the pieces lined up guys so",
    "start": "864370",
    "end": "866769"
  },
  {
    "text": "let's go ahead and we cannot debug",
    "start": "866769",
    "end": "869319"
  },
  {
    "text": "anymore you guys",
    "start": "869319",
    "end": "870130"
  },
  {
    "text": "you know why if we debug we're gonna",
    "start": "870130",
    "end": "873310"
  },
  {
    "text": "debug the main process we cannot step",
    "start": "873310",
    "end": "876279"
  },
  {
    "text": "into the child process and debug because",
    "start": "876279",
    "end": "878319"
  },
  {
    "text": "debugging essentially listens to one",
    "start": "878319",
    "end": "881139"
  },
  {
    "text": "process right",
    "start": "881139",
    "end": "882310"
  },
  {
    "text": "so what are we gonna do here instead as",
    "start": "882310",
    "end": "884110"
  },
  {
    "text": "you're gonna do node index they're just",
    "start": "884110",
    "end": "889329"
  },
  {
    "text": "so just go ahead and execute that and",
    "start": "889329",
    "end": "891130"
  },
  {
    "text": "you can see that 80 81 is listening",
    "start": "891130",
    "end": "893740"
  },
  {
    "start": "893000",
    "end": "925000"
  },
  {
    "text": "what's the difference now the difference",
    "start": "893740",
    "end": "896050"
  },
  {
    "text": "is if I go here and I say give me",
    "start": "896050",
    "end": "899560"
  },
  {
    "text": "hundred is one hundred prime no seven it",
    "start": "899560",
    "end": "905529"
  },
  {
    "text": "is a prime now it's working how about",
    "start": "905529",
    "end": "907720"
  },
  {
    "text": "give it a large number like that sweet",
    "start": "907720",
    "end": "911560"
  },
  {
    "text": "is processing while is probably can I do",
    "start": "911560",
    "end": "914560"
  },
  {
    "text": "something else will you cancer",
    "start": "914560",
    "end": "917170"
  },
  {
    "text": "look at that you can you can execute all",
    "start": "917170",
    "end": "920050"
  },
  {
    "text": "of these normally because each of them",
    "start": "920050",
    "end": "922720"
  },
  {
    "text": "is spinning a new child process and what",
    "start": "922720",
    "end": "926710"
  },
  {
    "text": "happening here is you get here I think",
    "start": "926710",
    "end": "929170"
  },
  {
    "text": "we can debug here and show you some of",
    "start": "929170",
    "end": "930850"
  },
  {
    "text": "the power but what you get here is you",
    "start": "930850",
    "end": "933760"
  },
  {
    "text": "will get into this get function child",
    "start": "933760",
    "end": "936150"
  },
  {
    "text": "spin up a child process send it to the",
    "start": "936150",
    "end": "939640"
  },
  {
    "text": "information this is this into the input",
    "start": "939640",
    "end": "941670"
  },
  {
    "text": "immediately what happens here the",
    "start": "941670",
    "end": "944500"
  },
  {
    "text": "function will get this will get",
    "start": "944500",
    "end": "946750"
  },
  {
    "text": "triggered right it will call that as",
    "start": "946750",
    "end": "949600"
  },
  {
    "text": "prime function execute it take whatever",
    "start": "949600",
    "end": "954190"
  },
  {
    "text": "time it takes give back and send back",
    "start": "954190",
    "end": "957850"
  },
  {
    "text": "the forked process which is the child",
    "start": "957850",
    "end": "959920"
  },
  {
    "text": "process that the object handler the",
    "start": "959920",
    "end": "962110"
  },
  {
    "text": "parent has a handler off send it back",
    "start": "962110",
    "end": "964750"
  },
  {
    "text": "the JSON response comes back here the",
    "start": "964750",
    "end": "968650"
  },
  {
    "text": "parent gets triggered this gets",
    "start": "968650",
    "end": "971530"
  },
  {
    "text": "triggered and then gets the message this",
    "start": "971530",
    "end": "973330"
  },
  {
    "text": "is the response and we send it back",
    "start": "973330",
    "end": "974830"
  },
  {
    "text": "this remained essentially waiting until",
    "start": "974830",
    "end": "978850"
  },
  {
    "text": "we receive a response but that does not",
    "start": "978850",
    "end": "981400"
  },
  {
    "text": "mean that the event loop function is",
    "start": "981400",
    "end": "985000"
  },
  {
    "text": "blocked it's continuing waiting right",
    "start": "985000",
    "end": "988330"
  },
  {
    "text": "for that response but it's",
    "start": "988330",
    "end": "989380"
  },
  {
    "text": "asynchronously has no choice",
    "start": "989380",
    "end": "990790"
  },
  {
    "text": "and then my stuff is working out despite",
    "start": "990790",
    "end": "993880"
  },
  {
    "start": "991000",
    "end": "1035000"
  },
  {
    "text": "this process still working or we don't",
    "start": "993880",
    "end": "996790"
  },
  {
    "text": "care where is the problem let's go to a",
    "start": "996790",
    "end": "999370"
  },
  {
    "text": "terminal and type table you can see that",
    "start": "999370",
    "end": "1002370"
  },
  {
    "text": "how many node J has applications we have",
    "start": "1002370",
    "end": "1005280"
  },
  {
    "text": "that are orphaned right and the problem",
    "start": "1005280",
    "end": "1007920"
  },
  {
    "text": "is because we did not kill those",
    "start": "1007920",
    "end": "1010620"
  },
  {
    "text": "processes so you need to do process that",
    "start": "1010620",
    "end": "1013230"
  },
  {
    "text": "exit in order to kill this processes",
    "start": "1013230",
    "end": "1016890"
  },
  {
    "text": "after you're done all right guys so",
    "start": "1016890",
    "end": "1020010"
  },
  {
    "text": "that's how we do multi processes we",
    "start": "1020010",
    "end": "1022290"
  },
  {
    "text": "talked about the blocking with single",
    "start": "1022290",
    "end": "1023820"
  },
  {
    "text": "processes we talked about the multiple",
    "start": "1023820",
    "end": "1027050"
  },
  {
    "text": "processes and how you do it essentially",
    "start": "1027050",
    "end": "1029610"
  },
  {
    "text": "and then I'm gonna give you the source",
    "start": "1029610",
    "end": "1031380"
  },
  {
    "text": "code so you don't have to stop and copy",
    "start": "1031380",
    "end": "1033000"
  },
  {
    "text": "that stuff from the source code will be",
    "start": "1033000",
    "end": "1034800"
  },
  {
    "text": "in the description below let's talk",
    "start": "1034800",
    "end": "1036839"
  },
  {
    "start": "1035000",
    "end": "1364000"
  },
  {
    "text": "about the pros and cons of this to me",
    "start": "1036839",
    "end": "1039150"
  },
  {
    "text": "personally what I prefer is to avoid",
    "start": "1039150",
    "end": "1043199"
  },
  {
    "text": "this as as much as possible because of",
    "start": "1043200",
    "end": "1046199"
  },
  {
    "text": "the complexity that comes with it",
    "start": "1046200",
    "end": "1048560"
  },
  {
    "text": "managing a multi processing application",
    "start": "1048560",
    "end": "1052230"
  },
  {
    "text": "is difficult and I have worked with many",
    "start": "1052230",
    "end": "1054360"
  },
  {
    "text": "project with they have like",
    "start": "1054360",
    "end": "1056250"
  },
  {
    "text": "multi-threading and and in a complexity",
    "start": "1056250",
    "end": "1059640"
  },
  {
    "text": "of debugging",
    "start": "1059640",
    "end": "1060570"
  },
  {
    "text": "the thing becomes huge sometimes you get",
    "start": "1060570",
    "end": "1064830"
  },
  {
    "text": "orphaned processes and you will get",
    "start": "1064830",
    "end": "1066960"
  },
  {
    "text": "orphan processes with this design with",
    "start": "1066960",
    "end": "1068910"
  },
  {
    "text": "this architecture so if you get our firm",
    "start": "1068910",
    "end": "1071550"
  },
  {
    "text": "processes that means you have to add",
    "start": "1071550",
    "end": "1073170"
  },
  {
    "text": "tracks on your parent which is this poor",
    "start": "1073170",
    "end": "1075900"
  },
  {
    "text": "slob to check the list of processes is",
    "start": "1075900",
    "end": "1079350"
  },
  {
    "text": "actually are they alive are still",
    "start": "1079350",
    "end": "1081840"
  },
  {
    "text": "processing are they still working and",
    "start": "1081840",
    "end": "1084660"
  },
  {
    "text": "you can see the complexity by just",
    "start": "1084660",
    "end": "1087360"
  },
  {
    "text": "adding these health checks",
    "start": "1087360",
    "end": "1089340"
  },
  {
    "text": "another thing is debugging debugging",
    "start": "1089340",
    "end": "1091410"
  },
  {
    "text": "becomes a nightmare right if let's say",
    "start": "1091410",
    "end": "1094350"
  },
  {
    "text": "if if one of the processes is hanging",
    "start": "1094350",
    "end": "1098490"
  },
  {
    "text": "for some reason how do you know how do",
    "start": "1098490",
    "end": "1100170"
  },
  {
    "text": "you add debugging how do you step into",
    "start": "1100170",
    "end": "1103470"
  },
  {
    "text": "the process I mean you can argue that",
    "start": "1103470",
    "end": "1105360"
  },
  {
    "text": "kind attach your debugger to that",
    "start": "1105360",
    "end": "1108330"
  },
  {
    "text": "process if you know the process ID but",
    "start": "1108330",
    "end": "1110730"
  },
  {
    "text": "it becomes really hard to do essentially",
    "start": "1110730",
    "end": "1113700"
  },
  {
    "text": "okay so that's another disadvantage if",
    "start": "1113700",
    "end": "1117150"
  },
  {
    "text": "you will right the advantage obviously",
    "start": "1117150",
    "end": "1119370"
  },
  {
    "text": "yes you don't have you do not have a",
    "start": "1119370",
    "end": "1122130"
  },
  {
    "text": "blocking application you do not have a",
    "start": "1122130",
    "end": "1125520"
  },
  {
    "text": "blocking whip service your service or",
    "start": "1125520",
    "end": "1128100"
  },
  {
    "text": "micro service can just execute normal",
    "start": "1128100",
    "end": "1130620"
  },
  {
    "text": "you can always spin up or another",
    "start": "1130620",
    "end": "1132090"
  },
  {
    "text": "process you can argue that hey I'm",
    "start": "1132090",
    "end": "1134670"
  },
  {
    "text": "saying I'm not gonna spin up many",
    "start": "1134670",
    "end": "1137250"
  },
  {
    "text": "processes I'm gonna create a pool of",
    "start": "1137250",
    "end": "1139020"
  },
  {
    "text": "processes and and and you can a lot of",
    "start": "1139020",
    "end": "1142680"
  },
  {
    "text": "process and a lot of clients don't do",
    "start": "1142680",
    "end": "1144900"
  },
  {
    "text": "that such as non Postgres package where",
    "start": "1144900",
    "end": "1147960"
  },
  {
    "text": "you can essentially work with a pool of",
    "start": "1147960",
    "end": "1151110"
  },
  {
    "text": "connections to the Postgres database and",
    "start": "1151110",
    "end": "1154860"
  },
  {
    "text": "the clients can consume one of the",
    "start": "1154860",
    "end": "1157380"
  },
  {
    "text": "available processes right so so you can",
    "start": "1157380",
    "end": "1160800"
  },
  {
    "text": "do that you can create a pool of",
    "start": "1160800",
    "end": "1162000"
  },
  {
    "text": "available processes and only limit to",
    "start": "1162000",
    "end": "1166050"
  },
  {
    "text": "your application to let's say say seven",
    "start": "1166050",
    "end": "1169830"
  },
  {
    "text": "processes and only execute these seven",
    "start": "1169830",
    "end": "1172770"
  },
  {
    "text": "process if you exceeded these processes",
    "start": "1172770",
    "end": "1175530"
  },
  {
    "text": "has to wait and you can you can create a",
    "start": "1175530",
    "end": "1178910"
  },
  {
    "text": "extensive application and configuration",
    "start": "1178910",
    "end": "1182730"
  },
  {
    "text": "around that right apache does that I",
    "start": "1182730",
    "end": "1185190"
  },
  {
    "text": "believe it has like a max number of",
    "start": "1185190",
    "end": "1187530"
  },
  {
    "text": "threads that allows you to increase that",
    "start": "1187530",
    "end": "1190230"
  },
  {
    "text": "or decrease that based on how many",
    "start": "1190230",
    "end": "1192210"
  },
  {
    "text": "requests you get you",
    "start": "1192210",
    "end": "1193600"
  },
  {
    "text": "application yes and you can configure",
    "start": "1193600",
    "end": "1195220"
  },
  {
    "text": "that but to me I think it's a it comes",
    "start": "1195220",
    "end": "1198910"
  },
  {
    "text": "back to like the complexity of the",
    "start": "1198910",
    "end": "1201160"
  },
  {
    "text": "application the application becomes",
    "start": "1201160",
    "end": "1202360"
  },
  {
    "text": "really unmaintainable right so to me I",
    "start": "1202360",
    "end": "1208049"
  },
  {
    "text": "like the way the simple blocking one",
    "start": "1208049",
    "end": "1212230"
  },
  {
    "text": "process right building one application",
    "start": "1212230",
    "end": "1215650"
  },
  {
    "text": "that does one thing really well yes it",
    "start": "1215650",
    "end": "1218710"
  },
  {
    "text": "is blocking so if someone else wants to",
    "start": "1218710",
    "end": "1221799"
  },
  {
    "text": "consume that application while it is",
    "start": "1221799",
    "end": "1225039"
  },
  {
    "text": "processing a certain request that has",
    "start": "1225039",
    "end": "1227470"
  },
  {
    "text": "tends to be expensive then you can abhi",
    "start": "1227470",
    "end": "1231460"
  },
  {
    "text": "get blocked but here's the thing that's",
    "start": "1231460",
    "end": "1233980"
  },
  {
    "text": "why we have Micro Services that's why we",
    "start": "1233980",
    "end": "1236980"
  },
  {
    "text": "have containers now you can spin up ten",
    "start": "1236980",
    "end": "1240520"
  },
  {
    "text": "containers each one is single process",
    "start": "1240520",
    "end": "1244510"
  },
  {
    "text": "blocking why they are own they are their",
    "start": "1244510",
    "end": "1247450"
  },
  {
    "text": "own container isolated and put them",
    "start": "1247450",
    "end": "1250780"
  },
  {
    "text": "behind a nice load balancer right and",
    "start": "1250780",
    "end": "1253720"
  },
  {
    "text": "you want to use a layer seven Lord Lord",
    "start": "1253720",
    "end": "1256179"
  },
  {
    "text": "balancer here which you can argue that",
    "start": "1256179",
    "end": "1258610"
  },
  {
    "text": "adds more complexity but it gives you",
    "start": "1258610",
    "end": "1261549"
  },
  {
    "text": "more visibility and context to that",
    "start": "1261549",
    "end": "1264549"
  },
  {
    "text": "layer until you're like hey if you're",
    "start": "1264549",
    "end": "1267280"
  },
  {
    "text": "executing this endpoint then we know",
    "start": "1267280",
    "end": "1269830"
  },
  {
    "text": "that chances that you're gonna take a",
    "start": "1269830",
    "end": "1272260"
  },
  {
    "text": "long time I'm gonna take I'm gonna point",
    "start": "1272260",
    "end": "1275320"
  },
  {
    "text": "you to this micro service on this port",
    "start": "1275320",
    "end": "1278559"
  },
  {
    "text": "based on a certain service discovery",
    "start": "1278559",
    "end": "1282000"
  },
  {
    "text": "mechanism that will point you to that",
    "start": "1282000",
    "end": "1284289"
  },
  {
    "text": "list of pool of containers and then you",
    "start": "1284289",
    "end": "1287559"
  },
  {
    "text": "can the load balancer can just point you",
    "start": "1287559",
    "end": "1289510"
  },
  {
    "text": "to one of these and then execute them",
    "start": "1289510",
    "end": "1291730"
  },
  {
    "text": "and then the load balancer can keep",
    "start": "1291730",
    "end": "1293260"
  },
  {
    "text": "track of how long each process is",
    "start": "1293260",
    "end": "1296230"
  },
  {
    "text": "executing and you can all you might",
    "start": "1296230",
    "end": "1298120"
  },
  {
    "text": "argue that you can actually do that with",
    "start": "1298120",
    "end": "1300340"
  },
  {
    "text": "a layer four LED band so without the",
    "start": "1300340",
    "end": "1302620"
  },
  {
    "text": "load balance of being blind of the",
    "start": "1302620",
    "end": "1304929"
  },
  {
    "text": "actual context and avoid the ability to",
    "start": "1304929",
    "end": "1308080"
  },
  {
    "text": "have to terminate TLS and re-encrypt at",
    "start": "1308080",
    "end": "1311440"
  },
  {
    "text": "the back end or maybe you have you might",
    "start": "1311440",
    "end": "1314320"
  },
  {
    "text": "argue that say I don't want to encrypt",
    "start": "1314320",
    "end": "1316030"
  },
  {
    "text": "it on the back end",
    "start": "1316030",
    "end": "1317480"
  },
  {
    "text": "leave it as pure HTTP and have my front",
    "start": "1317480",
    "end": "1320419"
  },
  {
    "text": "and be encrypted but essentially you can",
    "start": "1320419",
    "end": "1323240"
  },
  {
    "text": "you can have multiple load balancers and",
    "start": "1323240",
    "end": "1326870"
  },
  {
    "text": "then it becomes really interesting to",
    "start": "1326870",
    "end": "1329270"
  },
  {
    "text": "pick one architecture over the other",
    "start": "1329270",
    "end": "1331669"
  },
  {
    "text": "it comes down boils down to what you're",
    "start": "1331669",
    "end": "1334730"
  },
  {
    "text": "trying to do and whether it's worth it",
    "start": "1334730",
    "end": "1337940"
  },
  {
    "text": "to do a multi processing versus",
    "start": "1337940",
    "end": "1339950"
  },
  {
    "text": "essentially a single process with",
    "start": "1339950",
    "end": "1342020"
  },
  {
    "text": "horizontal scalability all right guys",
    "start": "1342020",
    "end": "1345140"
  },
  {
    "text": "leave your comments below what do you",
    "start": "1345140",
    "end": "1346760"
  },
  {
    "text": "think you get you do you prefer the",
    "start": "1346760",
    "end": "1348410"
  },
  {
    "text": "ability to have multiple processes or",
    "start": "1348410",
    "end": "1351160"
  },
  {
    "text": "have horizontal scale scalability with",
    "start": "1351160",
    "end": "1354770"
  },
  {
    "text": "application being a blocking single",
    "start": "1354770",
    "end": "1357470"
  },
  {
    "text": "process right leave your comments beyond",
    "start": "1357470",
    "end": "1359630"
  },
  {
    "text": "what do you think let's have a",
    "start": "1359630",
    "end": "1360559"
  },
  {
    "text": "discussion and I'm gonna see you on the",
    "start": "1360559",
    "end": "1362540"
  },
  {
    "text": "next one you guys stay awesome",
    "start": "1362540",
    "end": "1366190"
  }
]