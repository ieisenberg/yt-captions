[
  {
    "text": "Django is a very popular python based",
    "start": "0",
    "end": "2760"
  },
  {
    "text": "web framework it's been used by a lot of",
    "start": "2760",
    "end": "5940"
  },
  {
    "text": "companies a lot of developers love it",
    "start": "5940",
    "end": "7740"
  },
  {
    "text": "especially because you can get up and",
    "start": "7740",
    "end": "9540"
  },
  {
    "text": "running really quick Django is also an",
    "start": "9540",
    "end": "11820"
  },
  {
    "text": "RM which means it connects to the back",
    "start": "11820",
    "end": "14460"
  },
  {
    "text": "end as a database connects to the",
    "start": "14460",
    "end": "16440"
  },
  {
    "text": "database and it simplifies the way a",
    "start": "16440",
    "end": "20580"
  },
  {
    "text": "developer can connect to a database",
    "start": "20580",
    "end": "22439"
  },
  {
    "text": "instead of writing their own SQL they",
    "start": "22439",
    "end": "24660"
  },
  {
    "text": "can just use objects which is very",
    "start": "24660",
    "end": "26580"
  },
  {
    "text": "familiar and in this video I want to",
    "start": "26580",
    "end": "29160"
  },
  {
    "text": "actually explain that back-end portion",
    "start": "29160",
    "end": "31859"
  },
  {
    "text": "of Django because this is the backend",
    "start": "31859",
    "end": "33540"
  },
  {
    "text": "channel the end of the day and I like to",
    "start": "33540",
    "end": "36059"
  },
  {
    "text": "talk about the architecture of Django",
    "start": "36059",
    "end": "38579"
  },
  {
    "text": "when it comes to connection management",
    "start": "38579",
    "end": "40200"
  },
  {
    "text": "to the database at the end I'm gonna",
    "start": "40200",
    "end": "42480"
  },
  {
    "text": "talk about the advantages and also the",
    "start": "42480",
    "end": "45360"
  },
  {
    "text": "disadvantages of this architecture let's",
    "start": "45360",
    "end": "48000"
  },
  {
    "text": "jump into it so if we if we took this",
    "start": "48000",
    "end": "50399"
  },
  {
    "text": "for example we have a back-end database",
    "start": "50399",
    "end": "52500"
  },
  {
    "text": "right here we have our Django framework",
    "start": "52500",
    "end": "55800"
  },
  {
    "text": "which is spun up and we have three",
    "start": "55800",
    "end": "58440"
  },
  {
    "text": "worker threads heads of execution",
    "start": "58440",
    "end": "61440"
  },
  {
    "text": "available for us here and you can",
    "start": "61440",
    "end": "63899"
  },
  {
    "text": "control that of course right you have",
    "start": "63899",
    "end": "65939"
  },
  {
    "text": "many clients that try to connect to the",
    "start": "65939",
    "end": "67680"
  },
  {
    "text": "web framework here since HTTP request",
    "start": "67680",
    "end": "70439"
  },
  {
    "text": "get post stuff like those requests will",
    "start": "70439",
    "end": "73080"
  },
  {
    "text": "turn around and connect to the database",
    "start": "73080",
    "end": "75000"
  },
  {
    "text": "to execute certain queries get the",
    "start": "75000",
    "end": "78360"
  },
  {
    "text": "results and then build the response for",
    "start": "78360",
    "end": "80580"
  },
  {
    "text": "the server classic three-tier",
    "start": "80580",
    "end": "82439"
  },
  {
    "text": "architecture so now we get into the",
    "start": "82439",
    "end": "84240"
  },
  {
    "text": "nitty-gritty details here first of all",
    "start": "84240",
    "end": "85979"
  },
  {
    "text": "the client will need to connect to",
    "start": "85979",
    "end": "88320"
  },
  {
    "text": "Django as a TCP connection it means to",
    "start": "88320",
    "end": "91200"
  },
  {
    "text": "establish a connection I am not talking",
    "start": "91200",
    "end": "93960"
  },
  {
    "text": "about the front end here in details",
    "start": "93960",
    "end": "96479"
  },
  {
    "text": "because I want to leave it to another",
    "start": "96479",
    "end": "97740"
  },
  {
    "text": "video but there must be a listener here",
    "start": "97740",
    "end": "100740"
  },
  {
    "text": "that listens for connections whether",
    "start": "100740",
    "end": "103259"
  },
  {
    "text": "this listener is a single threaded or",
    "start": "103259",
    "end": "105560"
  },
  {
    "text": "multiple thread listening on the same",
    "start": "105560",
    "end": "108060"
  },
  {
    "text": "port using the socket option reuse port",
    "start": "108060",
    "end": "111000"
  },
  {
    "text": "and they'll kernel would load balance",
    "start": "111000",
    "end": "113640"
  },
  {
    "text": "the the connection to multiple threads",
    "start": "113640",
    "end": "115619"
  },
  {
    "text": "it's it's all of the you know",
    "start": "115619",
    "end": "118220"
  },
  {
    "text": "this is out of the score of the",
    "start": "118220",
    "end": "120659"
  },
  {
    "text": "discussion but let's say we have one",
    "start": "120659",
    "end": "122640"
  },
  {
    "text": "connection that is owned by this thread",
    "start": "122640",
    "end": "124500"
  },
  {
    "text": "and this client is sending an HTTP",
    "start": "124500",
    "end": "127020"
  },
  {
    "text": "request to that thread to that server so",
    "start": "127020",
    "end": "131220"
  },
  {
    "text": "what the HTTP request here is like as a",
    "start": "131220",
    "end": "133140"
  },
  {
    "text": "get request it goes to that thread",
    "start": "133140",
    "end": "137459"
  },
  {
    "text": "the thread picks it up it parses it",
    "start": "137459",
    "end": "139739"
  },
  {
    "text": "understand that second request and then",
    "start": "139739",
    "end": "141599"
  },
  {
    "text": "it turns around and then oh we're trying",
    "start": "141599",
    "end": "143700"
  },
  {
    "text": "to fetch certain API right and I need to",
    "start": "143700",
    "end": "147060"
  },
  {
    "text": "make a database query so what Django",
    "start": "147060",
    "end": "149220"
  },
  {
    "text": "does here is upon receiving the request",
    "start": "149220",
    "end": "151620"
  },
  {
    "text": "and upon needing to connect to the",
    "start": "151620",
    "end": "153900"
  },
  {
    "text": "database and it's executing a query",
    "start": "153900",
    "end": "156480"
  },
  {
    "text": "Django will establish a connection to",
    "start": "156480",
    "end": "158819"
  },
  {
    "text": "the database arrive there and then only",
    "start": "158819",
    "end": "161220"
  },
  {
    "text": "it doesn't establish it on Startup and",
    "start": "161220",
    "end": "164580"
  },
  {
    "text": "by default right so in this particular",
    "start": "164580",
    "end": "167040"
  },
  {
    "text": "case the TCP connection will be handled",
    "start": "167040",
    "end": "169980"
  },
  {
    "text": "to the database right so there is a",
    "start": "169980",
    "end": "172080"
  },
  {
    "text": "three-way hashject if TLS is is",
    "start": "172080",
    "end": "174720"
  },
  {
    "text": "configured also we're gonna do a TLS so",
    "start": "174720",
    "end": "176940"
  },
  {
    "text": "the cost of established connection",
    "start": "176940",
    "end": "178680"
  },
  {
    "text": "establishment is incurred on the request",
    "start": "178680",
    "end": "181680"
  },
  {
    "text": "itself right by default so after that of",
    "start": "181680",
    "end": "185580"
  },
  {
    "text": "course we're going to send the query and",
    "start": "185580",
    "end": "187440"
  },
  {
    "text": "what will happen here Django will send",
    "start": "187440",
    "end": "189420"
  },
  {
    "text": "the query the database will process the",
    "start": "189420",
    "end": "192480"
  },
  {
    "text": "query whatever the SQL query is it's",
    "start": "192480",
    "end": "194940"
  },
  {
    "text": "going to take x amount of time and then",
    "start": "194940",
    "end": "197640"
  },
  {
    "text": "meanwhile the client is waiting here",
    "start": "197640",
    "end": "199980"
  },
  {
    "text": "right and technically not only the",
    "start": "199980",
    "end": "202379"
  },
  {
    "text": "client is waiting right let's be very",
    "start": "202379",
    "end": "205080"
  },
  {
    "text": "careful here when we speak not only the",
    "start": "205080",
    "end": "208019"
  },
  {
    "text": "clients waiting the threat is also",
    "start": "208019",
    "end": "209459"
  },
  {
    "text": "waiting the threat is doing nothing here",
    "start": "209459",
    "end": "211519"
  },
  {
    "text": "so you can actually serve stuff here",
    "start": "211519",
    "end": "215400"
  },
  {
    "text": "with this threat because it's doing",
    "start": "215400",
    "end": "217080"
  },
  {
    "text": "nothing sending an i o right it's not",
    "start": "217080",
    "end": "220019"
  },
  {
    "text": "like just doing computational stuff",
    "start": "220019",
    "end": "222060"
  },
  {
    "text": "right so when the database responds back",
    "start": "222060",
    "end": "224879"
  },
  {
    "text": "it gets the response and then Django",
    "start": "224879",
    "end": "228120"
  },
  {
    "text": "will write the response to the client",
    "start": "228120",
    "end": "230040"
  },
  {
    "text": "socket right so it will build",
    "start": "230040",
    "end": "232379"
  },
  {
    "text": "effectively it will whatever you wrote",
    "start": "232379",
    "end": "235080"
  },
  {
    "text": "the code here it will write down their",
    "start": "235080",
    "end": "237540"
  },
  {
    "text": "response as an HTTP response to the",
    "start": "237540",
    "end": "240000"
  },
  {
    "text": "client very simple stuff right and once",
    "start": "240000",
    "end": "242580"
  },
  {
    "text": "that response is written what Django",
    "start": "242580",
    "end": "245400"
  },
  {
    "text": "does is closes the backend connection it",
    "start": "245400",
    "end": "248400"
  },
  {
    "text": "was designed to do this which is very",
    "start": "248400",
    "end": "250319"
  },
  {
    "text": "good uh initially looking at this right",
    "start": "250319",
    "end": "252900"
  },
  {
    "text": "because the goal here was we need to",
    "start": "252900",
    "end": "256760"
  },
  {
    "text": "minimize the number of connections to",
    "start": "256760",
    "end": "259380"
  },
  {
    "text": "the database because a lot of database",
    "start": "259380",
    "end": "261479"
  },
  {
    "text": "connections to the database will",
    "start": "261479",
    "end": "264300"
  },
  {
    "text": "increase the load of the database right",
    "start": "264300",
    "end": "266880"
  },
  {
    "text": "the usage here that might be true maybe",
    "start": "266880",
    "end": "269940"
  },
  {
    "text": "10 years ago I don't think that is as",
    "start": "269940",
    "end": "273660"
  },
  {
    "text": "effective here because people are now",
    "start": "273660",
    "end": "276240"
  },
  {
    "text": "moving to something called persistent",
    "start": "276240",
    "end": "278580"
  },
  {
    "text": "connections right the HTTP model if you",
    "start": "278580",
    "end": "281220"
  },
  {
    "text": "think about it right HTTP 1-0 was",
    "start": "281220",
    "end": "283560"
  },
  {
    "text": "exactly like what Django's described",
    "start": "283560",
    "end": "285600"
  },
  {
    "text": "every request you send HTTP was designed",
    "start": "285600",
    "end": "289380"
  },
  {
    "text": "if you send request to an HTV server you",
    "start": "289380",
    "end": "292860"
  },
  {
    "text": "establish a tcv connection you send the",
    "start": "292860",
    "end": "295020"
  },
  {
    "text": "request",
    "start": "295020",
    "end": "296040"
  },
  {
    "text": "you get a response you close you must",
    "start": "296040",
    "end": "299040"
  },
  {
    "text": "close the connection that's how HTTP 10",
    "start": "299040",
    "end": "301560"
  },
  {
    "text": "was designed right but then quickly we",
    "start": "301560",
    "end": "304680"
  },
  {
    "text": "we throw that away because because that",
    "start": "304680",
    "end": "308280"
  },
  {
    "text": "was so expensive right because every",
    "start": "308280",
    "end": "311040"
  },
  {
    "text": "time we send a request we establishing a",
    "start": "311040",
    "end": "313680"
  },
  {
    "text": "TCP connection and we're doing the the",
    "start": "313680",
    "end": "315419"
  },
  {
    "text": "TCP and followed by TRS right so that",
    "start": "315419",
    "end": "318479"
  },
  {
    "text": "was very expensive to do so we opted for",
    "start": "318479",
    "end": "322020"
  },
  {
    "text": "keep alive HTTP 11 and then HTTP 2 the",
    "start": "322020",
    "end": "325800"
  },
  {
    "text": "connection is always alive and we're",
    "start": "325800",
    "end": "327780"
  },
  {
    "text": "sending tons of streamed Multiplex",
    "start": "327780",
    "end": "330960"
  },
  {
    "text": "requests and the same connection so",
    "start": "330960",
    "end": "333479"
  },
  {
    "text": "persistent connection is the way to go",
    "start": "333479",
    "end": "335100"
  },
  {
    "text": "that's the model today",
    "start": "335100",
    "end": "337320"
  },
  {
    "text": "again because we it depends all and what",
    "start": "337320",
    "end": "342180"
  },
  {
    "text": "we're trying to do here and for this",
    "start": "342180",
    "end": "344160"
  },
  {
    "text": "scenario especially if you're chatty",
    "start": "344160",
    "end": "346259"
  },
  {
    "text": "with the backend with the database",
    "start": "346259",
    "end": "347820"
  },
  {
    "text": "versus the connection is the way to go",
    "start": "347820",
    "end": "349680"
  },
  {
    "text": "of course if you can opt in for this",
    "start": "349680",
    "end": "352680"
  },
  {
    "text": "approach if you know that the number of",
    "start": "352680",
    "end": "355139"
  },
  {
    "text": "connections to the database are very",
    "start": "355139",
    "end": "357240"
  },
  {
    "text": "very low but sometimes it's not the case",
    "start": "357240",
    "end": "360240"
  },
  {
    "text": "that's why you really need to study your",
    "start": "360240",
    "end": "362100"
  },
  {
    "text": "use case and your requirements here and",
    "start": "362100",
    "end": "364680"
  },
  {
    "text": "think about your architecture when you",
    "start": "364680",
    "end": "366720"
  },
  {
    "text": "configure these things",
    "start": "366720",
    "end": "368699"
  },
  {
    "text": "so this is how persistent connections",
    "start": "368699",
    "end": "370680"
  },
  {
    "text": "are done in Django you can do this today",
    "start": "370680",
    "end": "372320"
  },
  {
    "text": "you can configure something called",
    "start": "372320",
    "end": "374580"
  },
  {
    "text": "connection max age equal none and when",
    "start": "374580",
    "end": "378360"
  },
  {
    "text": "you set it to a none it will become",
    "start": "378360",
    "end": "379680"
  },
  {
    "text": "persistent and the first client that",
    "start": "379680",
    "end": "382440"
  },
  {
    "text": "connects will establish the connection",
    "start": "382440",
    "end": "383699"
  },
  {
    "text": "and it will remain alive",
    "start": "383699",
    "end": "386340"
  },
  {
    "text": "or effectively Forever Until it fails",
    "start": "386340",
    "end": "389039"
  },
  {
    "text": "right so if the connection fails for",
    "start": "389039",
    "end": "391199"
  },
  {
    "text": "like I don't know something happened to",
    "start": "391199",
    "end": "393600"
  },
  {
    "text": "the network you know socket here you",
    "start": "393600",
    "end": "396120"
  },
  {
    "text": "lost connection the Django will close it",
    "start": "396120",
    "end": "398460"
  },
  {
    "text": "and the next request will basically open",
    "start": "398460",
    "end": "400139"
  },
  {
    "text": "it and you can see that you can send",
    "start": "400139",
    "end": "401759"
  },
  {
    "text": "many requests and these threads will",
    "start": "401759",
    "end": "403740"
  },
  {
    "text": "take these requests and serve this",
    "start": "403740",
    "end": "406319"
  },
  {
    "text": "connections effectively and this is",
    "start": "406319",
    "end": "408780"
  },
  {
    "text": "pretty good persistent connection we use",
    "start": "408780",
    "end": "410819"
  },
  {
    "text": "them all the time right but here is one",
    "start": "410819",
    "end": "413460"
  },
  {
    "text": "kind of limitation when it comes to",
    "start": "413460",
    "end": "415919"
  },
  {
    "text": "Django Django according to the",
    "start": "415919",
    "end": "418199"
  },
  {
    "text": "documentation I didn't make this up",
    "start": "418199",
    "end": "419699"
  },
  {
    "text": "right I'm going to reference this",
    "start": "419699",
    "end": "420780"
  },
  {
    "text": "documentation Below in the comment",
    "start": "420780",
    "end": "424380"
  },
  {
    "text": "section right",
    "start": "424380",
    "end": "426020"
  },
  {
    "text": "Django is one connection one thread",
    "start": "426020",
    "end": "429180"
  },
  {
    "text": "model so if your thread",
    "start": "429180",
    "end": "431280"
  },
  {
    "text": "if you have one thread you get one",
    "start": "431280",
    "end": "433199"
  },
  {
    "text": "connection only and that's it I didn't",
    "start": "433199",
    "end": "435960"
  },
  {
    "text": "read anything else and the entire",
    "start": "435960",
    "end": "438360"
  },
  {
    "text": "documentation so that's must be true and",
    "start": "438360",
    "end": "440880"
  },
  {
    "text": "so what does that mean it means that if",
    "start": "440880",
    "end": "443580"
  },
  {
    "text": "you have three clients here three TCP",
    "start": "443580",
    "end": "445680"
  },
  {
    "text": "connections are spread around the",
    "start": "445680",
    "end": "447240"
  },
  {
    "text": "threads again this is not necessarily",
    "start": "447240",
    "end": "449280"
  },
  {
    "text": "true it depends how did you how your",
    "start": "449280",
    "end": "451380"
  },
  {
    "text": "front end listening model is and this is",
    "start": "451380",
    "end": "455280"
  },
  {
    "text": "It's on video by itself right but assume",
    "start": "455280",
    "end": "457979"
  },
  {
    "text": "it is assume is every thread is it is is",
    "start": "457979",
    "end": "460800"
  },
  {
    "text": "accepting a connection for every client",
    "start": "460800",
    "end": "463800"
  },
  {
    "text": "right so in this case these this is this",
    "start": "463800",
    "end": "467280"
  },
  {
    "text": "client sends a request to this and the",
    "start": "467280",
    "end": "469560"
  },
  {
    "text": "thread takes the request opens the",
    "start": "469560",
    "end": "471960"
  },
  {
    "text": "obviously the back end TCP connection to",
    "start": "471960",
    "end": "474479"
  },
  {
    "text": "the database sends the query and then",
    "start": "474479",
    "end": "477180"
  },
  {
    "text": "the query is just spinning on the",
    "start": "477180",
    "end": "478740"
  },
  {
    "text": "database because queries are not cheap",
    "start": "478740",
    "end": "480120"
  },
  {
    "text": "right sometimes you have query that is",
    "start": "480120",
    "end": "482400"
  },
  {
    "text": "expensive one two three seconds",
    "start": "482400",
    "end": "484620"
  },
  {
    "text": "yeah then you have another one at the",
    "start": "484620",
    "end": "487139"
  },
  {
    "text": "same time concurrently same thing",
    "start": "487139",
    "end": "489479"
  },
  {
    "text": "another one so now you have the three",
    "start": "489479",
    "end": "491940"
  },
  {
    "text": "threads",
    "start": "491940",
    "end": "493259"
  },
  {
    "text": "has sent three queries to the database",
    "start": "493259",
    "end": "495539"
  },
  {
    "text": "and all of these queries are just being",
    "start": "495539",
    "end": "499319"
  },
  {
    "text": "executed in the database",
    "start": "499319",
    "end": "501240"
  },
  {
    "text": "their clients are waiting for a response",
    "start": "501240",
    "end": "504560"
  },
  {
    "text": "the threads are also as we explained",
    "start": "504560",
    "end": "508319"
  },
  {
    "text": "earlier",
    "start": "508319",
    "end": "509220"
  },
  {
    "text": "are also waiting",
    "start": "509220",
    "end": "511680"
  },
  {
    "text": "which is not good you never want your",
    "start": "511680",
    "end": "514320"
  },
  {
    "text": "threats to be idle in this particular",
    "start": "514320",
    "end": "516360"
  },
  {
    "text": "case yeah the first can still do things",
    "start": "516360",
    "end": "518820"
  },
  {
    "text": "you know because this is an asynchronous",
    "start": "518820",
    "end": "521159"
  },
  {
    "text": "call right the thread is free to do",
    "start": "521159",
    "end": "523680"
  },
  {
    "text": "other stuff but what exactly right",
    "start": "523680",
    "end": "527580"
  },
  {
    "text": "let's say if you if this if this client",
    "start": "527580",
    "end": "531420"
  },
  {
    "text": "sends a request right connects to the",
    "start": "531420",
    "end": "533279"
  },
  {
    "text": "thread it will accept it because hey",
    "start": "533279",
    "end": "535019"
  },
  {
    "text": "it's not doing anything so this third",
    "start": "535019",
    "end": "536820"
  },
  {
    "text": "will accept this client",
    "start": "536820",
    "end": "538860"
  },
  {
    "text": "if that request let's say this request",
    "start": "538860",
    "end": "541500"
  },
  {
    "text": "that that this pink request okay is um I",
    "start": "541500",
    "end": "545940"
  },
  {
    "text": "want to connect to the database so what",
    "start": "545940",
    "end": "547860"
  },
  {
    "text": "the third rule does is like we'll take",
    "start": "547860",
    "end": "549360"
  },
  {
    "text": "this request and say wait a minute you",
    "start": "549360",
    "end": "551100"
  },
  {
    "text": "wanted to connect to the Davis I'm sorry",
    "start": "551100",
    "end": "552720"
  },
  {
    "text": "but this connection that I have is",
    "start": "552720",
    "end": "555120"
  },
  {
    "text": "already busy",
    "start": "555120",
    "end": "556500"
  },
  {
    "text": "I cannot send multiple requests on the",
    "start": "556500",
    "end": "560940"
  },
  {
    "text": "same connection",
    "start": "560940",
    "end": "562459"
  },
  {
    "text": "this is",
    "start": "562459",
    "end": "564959"
  },
  {
    "text": "a discussion by itself you might say no",
    "start": "564959",
    "end": "567480"
  },
  {
    "text": "why why not well you can try that not",
    "start": "567480",
    "end": "571740"
  },
  {
    "text": "all database supports this pipelining",
    "start": "571740",
    "end": "573959"
  },
  {
    "text": "concept where you can just pump in",
    "start": "573959",
    "end": "575640"
  },
  {
    "text": "multiple SQL",
    "start": "575640",
    "end": "577740"
  },
  {
    "text": "statements one after the other on the",
    "start": "577740",
    "end": "580080"
  },
  {
    "text": "same connection without waiting for a",
    "start": "580080",
    "end": "581760"
  },
  {
    "text": "response it's very dangerous to do that",
    "start": "581760",
    "end": "583860"
  },
  {
    "text": "because if you send a SQL statement",
    "start": "583860",
    "end": "586440"
  },
  {
    "text": "right here right if you're using the SQL",
    "start": "586440",
    "end": "588180"
  },
  {
    "text": "query and then the database style",
    "start": "588180",
    "end": "590160"
  },
  {
    "text": "process and you in the same connection",
    "start": "590160",
    "end": "592080"
  },
  {
    "text": "you sent another SQL right",
    "start": "592080",
    "end": "594959"
  },
  {
    "text": "and let's say the second query was",
    "start": "594959",
    "end": "597600"
  },
  {
    "text": "faster you the database immediately",
    "start": "597600",
    "end": "600839"
  },
  {
    "text": "responded with that with the second",
    "start": "600839",
    "end": "603839"
  },
  {
    "text": "response right",
    "start": "603839",
    "end": "606180"
  },
  {
    "text": "so the database responded with the",
    "start": "606180",
    "end": "608040"
  },
  {
    "text": "second SQL",
    "start": "608040",
    "end": "609480"
  },
  {
    "text": "response",
    "start": "609480",
    "end": "611100"
  },
  {
    "text": "how does the thread know that o is now",
    "start": "611100",
    "end": "613980"
  },
  {
    "text": "is this what are yours is this what",
    "start": "613980",
    "end": "615720"
  },
  {
    "text": "you're sending me is this for the first",
    "start": "615720",
    "end": "617220"
  },
  {
    "text": "query or the second query it doesn't",
    "start": "617220",
    "end": "618600"
  },
  {
    "text": "know there is no identifier when it",
    "start": "618600",
    "end": "621300"
  },
  {
    "text": "comes to SQL statements right when you",
    "start": "621300",
    "end": "623399"
  },
  {
    "text": "send back results it all depends on the",
    "start": "623399",
    "end": "626459"
  },
  {
    "text": "protocol of the databases most databases",
    "start": "626459",
    "end": "628620"
  },
  {
    "text": "don't have this concept if Django built",
    "start": "628620",
    "end": "632339"
  },
  {
    "text": "something like that and the database",
    "start": "632339",
    "end": "634320"
  },
  {
    "text": "supported",
    "start": "634320",
    "end": "635959"
  },
  {
    "text": "postgres just I think in posca 13",
    "start": "635959",
    "end": "639899"
  },
  {
    "text": "supported pipeline where you can send",
    "start": "639899",
    "end": "641580"
  },
  {
    "text": "multiple requests on the same database",
    "start": "641580",
    "end": "643680"
  },
  {
    "text": "but most of the time you can't do this",
    "start": "643680",
    "end": "646560"
  },
  {
    "text": "you just say hey you know what just be",
    "start": "646560",
    "end": "649500"
  },
  {
    "text": "safe establish another specific action",
    "start": "649500",
    "end": "651360"
  },
  {
    "text": "but the problem with Django it's it's a",
    "start": "651360",
    "end": "654660"
  },
  {
    "text": "one correction pair thread model so that",
    "start": "654660",
    "end": "656579"
  },
  {
    "text": "connection is now busy you cannot use it",
    "start": "656579",
    "end": "659160"
  },
  {
    "text": "for something else right so in this",
    "start": "659160",
    "end": "660720"
  },
  {
    "text": "particular case",
    "start": "660720",
    "end": "662160"
  },
  {
    "text": "this client is waiting is not doing",
    "start": "662160",
    "end": "664200"
  },
  {
    "text": "anything so let's let's say this other",
    "start": "664200",
    "end": "666480"
  },
  {
    "text": "client now let's not say he's waiting",
    "start": "666480",
    "end": "668399"
  },
  {
    "text": "let's say um I'm sending a request right",
    "start": "668399",
    "end": "670740"
  },
  {
    "text": "but this request has nothing to the",
    "start": "670740",
    "end": "672839"
  },
  {
    "text": "database it's just uh I don't know it's",
    "start": "672839",
    "end": "674880"
  },
  {
    "text": "reading from the cache a file from the",
    "start": "674880",
    "end": "677579"
  },
  {
    "text": "cash and responding it's an HTML file",
    "start": "677579",
    "end": "680220"
  },
  {
    "text": "the thread will happily process that for",
    "start": "680220",
    "end": "684600"
  },
  {
    "text": "you why because the thread is",
    "start": "684600",
    "end": "686519"
  },
  {
    "text": "technically not busy it's just waiting",
    "start": "686519",
    "end": "688920"
  },
  {
    "text": "for stuff right",
    "start": "688920",
    "end": "691079"
  },
  {
    "text": "as long as the communication is",
    "start": "691079",
    "end": "693540"
  },
  {
    "text": "asynchronous and I wrote a medium",
    "start": "693540",
    "end": "695220"
  },
  {
    "text": "article about this right asynchronous",
    "start": "695220",
    "end": "697019"
  },
  {
    "text": "communication",
    "start": "697019",
    "end": "698100"
  },
  {
    "text": "the third is is not doing anything it's",
    "start": "698100",
    "end": "700380"
  },
  {
    "text": "just hey send a request I'm just sitting",
    "start": "700380",
    "end": "702480"
  },
  {
    "text": "here not doing anything right so it can",
    "start": "702480",
    "end": "705899"
  },
  {
    "text": "do CPU intensive operation you can send",
    "start": "705899",
    "end": "708120"
  },
  {
    "text": "it to do compute hash that's fine the",
    "start": "708120",
    "end": "711060"
  },
  {
    "text": "thread can do this work but if you are",
    "start": "711060",
    "end": "714779"
  },
  {
    "text": "IO bound where these guys actually want",
    "start": "714779",
    "end": "717839"
  },
  {
    "text": "to talk to the database you're stuck",
    "start": "717839",
    "end": "719760"
  },
  {
    "text": "these guys are will be blocked so what",
    "start": "719760",
    "end": "722519"
  },
  {
    "text": "can you do well you can you can simply",
    "start": "722519",
    "end": "724440"
  },
  {
    "text": "just spin up multiple threads for Django",
    "start": "724440",
    "end": "726899"
  },
  {
    "text": "right",
    "start": "726899",
    "end": "728300"
  },
  {
    "text": "and yeah because if you spend another",
    "start": "728300",
    "end": "731220"
  },
  {
    "text": "thread",
    "start": "731220",
    "end": "732420"
  },
  {
    "text": "each thread will get another connection",
    "start": "732420",
    "end": "734339"
  },
  {
    "text": "that's fine right so you have more",
    "start": "734339",
    "end": "737100"
  },
  {
    "text": "threats to serve uh clients",
    "start": "737100",
    "end": "740459"
  },
  {
    "text": "the problem with this is the",
    "start": "740459",
    "end": "744480"
  },
  {
    "text": "you now established",
    "start": "744480",
    "end": "747779"
  },
  {
    "text": "you can you can go up to a num a certain",
    "start": "747779",
    "end": "750959"
  },
  {
    "text": "number of thread after that you will see",
    "start": "750959",
    "end": "755000"
  },
  {
    "text": "severe degradation and performance let",
    "start": "755000",
    "end": "757980"
  },
  {
    "text": "me explain right the number of threads",
    "start": "757980",
    "end": "760560"
  },
  {
    "text": "are usually right what nginx NHA proxy",
    "start": "760560",
    "end": "763620"
  },
  {
    "text": "and void recommends because technically",
    "start": "763620",
    "end": "765899"
  },
  {
    "text": "if you look at Django's acting like a",
    "start": "765899",
    "end": "768300"
  },
  {
    "text": "proxy right talking to the database",
    "start": "768300",
    "end": "770220"
  },
  {
    "text": "right so the num the recommended thing",
    "start": "770220",
    "end": "773700"
  },
  {
    "text": "is every one thread pair core pair",
    "start": "773700",
    "end": "776639"
  },
  {
    "text": "Hardware thread to be specific but one",
    "start": "776639",
    "end": "778560"
  },
  {
    "text": "thread per core right so if you spin up",
    "start": "778560",
    "end": "781200"
  },
  {
    "text": "four threads you have four cores right",
    "start": "781200",
    "end": "784500"
  },
  {
    "text": "right or four or eight Hardware threads",
    "start": "784500",
    "end": "787440"
  },
  {
    "text": "to be like if you have multi-threaded uh",
    "start": "787440",
    "end": "789540"
  },
  {
    "text": "if you have hyper threading on your CPU",
    "start": "789540",
    "end": "791940"
  },
  {
    "text": "enabled then you can have every thread",
    "start": "791940",
    "end": "794700"
  },
  {
    "text": "set on a core why do you want every",
    "start": "794700",
    "end": "797040"
  },
  {
    "text": "thread to be pinned to a core because",
    "start": "797040",
    "end": "800519"
  },
  {
    "text": "context switching right if your thread",
    "start": "800519",
    "end": "803519"
  },
  {
    "text": "lives in that CPU and just sits there",
    "start": "803519",
    "end": "805920"
  },
  {
    "text": "and and and all the processing happening",
    "start": "805920",
    "end": "808500"
  },
  {
    "text": "there in that thread then the CPU will",
    "start": "808500",
    "end": "812040"
  },
  {
    "text": "not move it out of the CPU you know to",
    "start": "812040",
    "end": "814680"
  },
  {
    "text": "put other stuff in it in the CPU right",
    "start": "814680",
    "end": "819120"
  },
  {
    "text": "if you have hundred threads then what",
    "start": "819120",
    "end": "821880"
  },
  {
    "text": "the CPU will do is like okay I can only",
    "start": "821880",
    "end": "824220"
  },
  {
    "text": "have one foot at simultaneously right",
    "start": "824220",
    "end": "826740"
  },
  {
    "text": "it's running on my on my CPU right so I",
    "start": "826740",
    "end": "831000"
  },
  {
    "text": "I will execute this and then okay one",
    "start": "831000",
    "end": "832800"
  },
  {
    "text": "other thread comes in and start to do",
    "start": "832800",
    "end": "834420"
  },
  {
    "text": "stuff it will put in the thread and",
    "start": "834420",
    "end": "836279"
  },
  {
    "text": "we'll move the other thread right to",
    "start": "836279",
    "end": "838320"
  },
  {
    "text": "execute stuff so you the CPU will be",
    "start": "838320",
    "end": "841320"
  },
  {
    "text": "shuffling the four chords in this",
    "start": "841320",
    "end": "843540"
  },
  {
    "text": "particular case we'll be shuffling 100",
    "start": "843540",
    "end": "845700"
  },
  {
    "text": "threads left and right removing removing",
    "start": "845700",
    "end": "849000"
  },
  {
    "text": "context switch contact switch and that",
    "start": "849000",
    "end": "851700"
  },
  {
    "text": "the cost of context switching will",
    "start": "851700",
    "end": "853380"
  },
  {
    "text": "actually kill your performance",
    "start": "853380",
    "end": "854579"
  },
  {
    "text": "eventually and that's why they they say",
    "start": "854579",
    "end": "857940"
  },
  {
    "text": "don't don't spin up 50 or 100 threads",
    "start": "857940",
    "end": "860639"
  },
  {
    "text": "right it's not going to become faster",
    "start": "860639",
    "end": "861920"
  },
  {
    "text": "you're bounded by the number of CPU",
    "start": "861920",
    "end": "865440"
  },
  {
    "text": "cores at the end of the day yeah if you",
    "start": "865440",
    "end": "867420"
  },
  {
    "text": "have 48 cores go nuts right but if you",
    "start": "867420",
    "end": "869940"
  },
  {
    "text": "have like 16 or 8 or 4",
    "start": "869940",
    "end": "873240"
  },
  {
    "text": "then you can only go by that right and",
    "start": "873240",
    "end": "876420"
  },
  {
    "text": "that's assuming you have Django's only",
    "start": "876420",
    "end": "879480"
  },
  {
    "text": "running on this machine that's the only",
    "start": "879480",
    "end": "882720"
  },
  {
    "text": "thing that is running on this server",
    "start": "882720",
    "end": "884100"
  },
  {
    "text": "right that's why I absolutely love",
    "start": "884100",
    "end": "886199"
  },
  {
    "text": "system architecture and back in",
    "start": "886199",
    "end": "887639"
  },
  {
    "text": "architecture all right guys uh that's it",
    "start": "887639",
    "end": "889440"
  },
  {
    "text": "for me today uh if you enjoyed this",
    "start": "889440",
    "end": "890880"
  },
  {
    "text": "content hit that like button and check",
    "start": "890880",
    "end": "893820"
  },
  {
    "text": "out my udemy course",
    "start": "893820",
    "end": "895339"
  },
  {
    "text": "database.nosore.com fundamentals of",
    "start": "895339",
    "end": "897300"
  },
  {
    "text": "database engineer I talk about this",
    "start": "897300",
    "end": "899040"
  },
  {
    "text": "stuff uh you know I absolutely love this",
    "start": "899040",
    "end": "901260"
  },
  {
    "text": "stuff and check out my networking course",
    "start": "901260",
    "end": "902940"
  },
  {
    "text": "if you're interested in not working",
    "start": "902940",
    "end": "904079"
  },
  {
    "text": "network.hose.com",
    "start": "904079",
    "end": "906300"
  },
  {
    "text": "thank you so much I'm going to see you",
    "start": "906300",
    "end": "907920"
  },
  {
    "text": "in the next one guys stay awesome",
    "start": "907920",
    "end": "908820"
  },
  {
    "text": "goodbye",
    "start": "908820",
    "end": "911120"
  }
]