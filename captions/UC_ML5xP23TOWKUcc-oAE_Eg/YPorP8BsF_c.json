[
  {
    "start": "0",
    "end": "210000"
  },
  {
    "text": "if you're using postgres partitioning you might want to watch out for this one you see guys postgres partitioning is",
    "start": "0",
    "end": "7859"
  },
  {
    "text": "this capability that allows you to horizontally slice your large table and",
    "start": "7859",
    "end": "13320"
  },
  {
    "text": "effectively put them into multiple partitions or just literally multiple",
    "start": "13320",
    "end": "18660"
  },
  {
    "text": "tables the the difference between creating your own tables and partitioning is just",
    "start": "18660",
    "end": "24740"
  },
  {
    "text": "it is still presented to you as one logical table and it's hiding the the",
    "start": "24740",
    "end": "30960"
  },
  {
    "text": "fact that it's actually multiple tables and the beauty of this is when you do a",
    "start": "30960",
    "end": "36059"
  },
  {
    "text": "partition key you can specify based on your where Clause that key and postgres will immediately",
    "start": "36059",
    "end": "44700"
  },
  {
    "text": "know exactly which partition to hit so it doesn't really scan all the partitions just scan one or two",
    "start": "44700",
    "end": "50640"
  },
  {
    "text": "partition depends on what you're trying to do so instead of working with massive table",
    "start": "50640",
    "end": "57420"
  },
  {
    "text": "with billions of rows you work with a smaller tables with maybe millions of rows like a smaller",
    "start": "57420",
    "end": "65040"
  },
  {
    "text": "tens of thousands and the smaller the table the smaller the index is the faster the queries that's",
    "start": "65040",
    "end": "72420"
  },
  {
    "text": "that's the rule we talked about always I talk about it in my course right my database course the best way to work",
    "start": "72420",
    "end": "78240"
  },
  {
    "text": "with a billion raw table is to avoid working with a billion rows you take as",
    "start": "78240",
    "end": "83759"
  },
  {
    "text": "much as possible you do absolutely everything you can to avoid touching billion rows you work with smaller thing",
    "start": "83759",
    "end": "90479"
  },
  {
    "text": "and that's basically that's the idea of indexing really right we take shortcuts",
    "start": "90479",
    "end": "96180"
  },
  {
    "text": "like okay the skip this branches skip this Branch so we can directly hit what we want but",
    "start": "96180",
    "end": "104400"
  },
  {
    "text": "partitioning has a price and this is something I never knew before again this",
    "start": "104400",
    "end": "110700"
  },
  {
    "text": "is only postgres and Kyle Haley is a really",
    "start": "110700",
    "end": "117439"
  },
  {
    "text": "experienced dbas been working in this industry for over maybe 20 years since",
    "start": "117439",
    "end": "123799"
  },
  {
    "text": "1984. so he has like 13 years of experience in Oracle and other new work",
    "start": "123799",
    "end": "130560"
  },
  {
    "text": "with the other companies you know this is a new startup they're using postgres and he's been blogging about the some of",
    "start": "130560",
    "end": "137940"
  },
  {
    "text": "the Pains of postgres I know I took a lot of good thing about postgres in this channel but nothing is nothing is without you",
    "start": "137940",
    "end": "146640"
  },
  {
    "text": "know limitations and it's good to actually understand these limitations and see if there are",
    "start": "146640",
    "end": "153480"
  },
  {
    "text": "solutions for them and the good news is there is most of these I would say bugs if you will issues not",
    "start": "153480",
    "end": "161940"
  },
  {
    "text": "30 bucks has been fixed and addressed in your version of postgres how about we",
    "start": "161940",
    "end": "166980"
  },
  {
    "text": "actually go into this article and discuss it in detail this is fascinating",
    "start": "166980",
    "end": "172680"
  },
  {
    "text": "stuff I love this I absolutely love this stuff let's jump into it alright this comes",
    "start": "172680",
    "end": "179580"
  },
  {
    "text": "from Kyle Haley's blog uh titled postgres partition pains lock manager",
    "start": "179580",
    "end": "187920"
  },
  {
    "text": "weights I'm not gonna read the whole article I'm gonna read some blurbs and and kind of add my commentary to the",
    "start": "187920",
    "end": "194459"
  },
  {
    "text": "sort of I'm gonna reference this article in the in the show notes below of course this episode is available on both in",
    "start": "194459",
    "end": "201300"
  },
  {
    "text": "podcast form and on YouTube so you can listen to it",
    "start": "201300",
    "end": "206400"
  },
  {
    "text": "if you prefer different if you prefer the podcast form so let's get started so the blog starts",
    "start": "206400",
    "end": "214200"
  },
  {
    "start": "210000",
    "end": "390000"
  },
  {
    "text": "with showing some charts about a degradation of query performance",
    "start": "214200",
    "end": "221159"
  },
  {
    "text": "application retries and failures and essentially weights and errors and",
    "start": "221159",
    "end": "227640"
  },
  {
    "text": "usually when you when you see that you freak out right there's like a failures",
    "start": "227640",
    "end": "232680"
  },
  {
    "text": "and and weights and if queries are are waiting and and essentially",
    "start": "232680",
    "end": "239780"
  },
  {
    "text": "causing other queries to avoids and failures at the application Level",
    "start": "239780",
    "end": "245659"
  },
  {
    "text": "debugging and logging that's when when basically things are going wrong at the database so it's certain time chart that",
    "start": "245659",
    "end": "252480"
  },
  {
    "text": "at the start at this particular point and is adding a very nice summary of what happened so let's read that summary",
    "start": "252480",
    "end": "259380"
  },
  {
    "text": "in the above charts our production system hit the wall by a blind siding pile up on a lock manager weight he",
    "start": "259380",
    "end": "267000"
  },
  {
    "text": "doesn't explain what a lock manager is neither did he know what a lock manager was when he when he encountered that",
    "start": "267000",
    "end": "274080"
  },
  {
    "text": "neither did I to be honest so I don't know what a lock manager is right and causing the application I'm gonna we're",
    "start": "274080",
    "end": "281040"
  },
  {
    "text": "gonna explain all of that causing the application to start hitting thousand errors a second that's just nuts right I",
    "start": "281040",
    "end": "289259"
  },
  {
    "text": "managed to mitigate the pile up by detaching seven partitions for the core",
    "start": "289259",
    "end": "294900"
  },
  {
    "text": "table so now he's explaining that I was using partitions right but there's",
    "start": "294900",
    "end": "301560"
  },
  {
    "text": "like a story to all of that so the partitioning is already there so he",
    "start": "301560",
    "end": "307380"
  },
  {
    "text": "solved that by detaching partitioning but what is the problem right it goes",
    "start": "307380",
    "end": "312720"
  },
  {
    "text": "into you know painstakingly good details I absolutely love I just recently discovered them to be honest and I",
    "start": "312720",
    "end": "319320"
  },
  {
    "text": "absolutely love the way he goes into the details so now he's saying he's like look at this like picture this you're an",
    "start": "319320",
    "end": "325500"
  },
  {
    "text": "experienced Gray beard database administrator walking into one of the most buzzed about an Innovative startup",
    "start": "325500",
    "end": "331800"
  },
  {
    "text": "your entry ticket your depth experience so he is really experienced he has like what over 20 years maybe more you know",
    "start": "331800",
    "end": "337800"
  },
  {
    "text": "in database you know administrations so people rely on that for the database and",
    "start": "337800",
    "end": "343620"
  },
  {
    "text": "stuff right and I like how humble he is here you know and I absolutely like this",
    "start": "343620",
    "end": "350039"
  },
  {
    "text": "it's not she's not afraid to call himself out for not getting this right so now they discovered the database like",
    "start": "350039",
    "end": "357720"
  },
  {
    "text": "this startup is using postgres and we're talking eight terabyte with this",
    "start": "357720",
    "end": "364020"
  },
  {
    "text": "database is eight terabyte in size with 10 000 queries per second is described in the workload and 10 million new",
    "start": "364020",
    "end": "371580"
  },
  {
    "text": "records added daily each receiving an average of three updates",
    "start": "371580",
    "end": "377060"
  },
  {
    "text": "you know so 10 million rows and each one receiving an update so you're talking 30",
    "start": "377060",
    "end": "382740"
  },
  {
    "text": "million tuples effectively right because that updates in postgres is actually an",
    "start": "382740",
    "end": "388680"
  },
  {
    "text": "insert right many things managing this is not small feed and this is where the",
    "start": "388680",
    "end": "394080"
  },
  {
    "start": "390000",
    "end": "510000"
  },
  {
    "text": "experience comes in I want to jump into where he actually talked about this is",
    "start": "394080",
    "end": "400560"
  },
  {
    "text": "the orders table this is the massive table where things go in",
    "start": "400560",
    "end": "406460"
  },
  {
    "text": "and there was a problem with this large order table this is pre-partitioning",
    "start": "406460",
    "end": "412800"
  },
  {
    "text": "right so this table became so large that",
    "start": "412800",
    "end": "418259"
  },
  {
    "text": "vacuuming started to stall you know query is getting started to slow down",
    "start": "418259",
    "end": "424259"
  },
  {
    "text": "and as a result as a you know naturally you partition the stable into smaller",
    "start": "424259",
    "end": "431460"
  },
  {
    "text": "and smaller and smaller small table now you can make strategy what do you partition with right",
    "start": "431460",
    "end": "437120"
  },
  {
    "text": "and one the strategy that he initially picked was to Partition by day",
    "start": "437120",
    "end": "445800"
  },
  {
    "text": "so by date the order date but to Partition by day so every table every",
    "start": "445800",
    "end": "452699"
  },
  {
    "text": "day you get a new tables that's what it is because hey it's a 10 million rows it's like 10 million a table that's",
    "start": "452699",
    "end": "459000"
  },
  {
    "text": "that's a nice right I would have done the same thing to be honest like okay 10 minute table let's do that",
    "start": "459000",
    "end": "464520"
  },
  {
    "text": "all right so he started here's another complete blog I'm gonna reference it as well he's",
    "start": "464520",
    "end": "470220"
  },
  {
    "text": "referencing it to say hey this is where we did the work we moved from a single table to a partitioned by day right so",
    "start": "470220",
    "end": "477900"
  },
  {
    "text": "every day there is a new table added so think about how many tables this instance has now and instead of one big",
    "start": "477900",
    "end": "486060"
  },
  {
    "text": "table now we have smaller and smaller table but a lot of them right and there is a partitioning so still looking at",
    "start": "486060",
    "end": "492419"
  },
  {
    "text": "the orders table but behind the scenes it's it's essentially um it's essentially partitioned right",
    "start": "492419",
    "end": "499879"
  },
  {
    "text": "cool right so they did this work everything was happy everything was good",
    "start": "499879",
    "end": "504900"
  },
  {
    "text": "they so great performance you know so they did the conversion April 1st 2023. this is where",
    "start": "504900",
    "end": "511620"
  },
  {
    "start": "510000",
    "end": "630000"
  },
  {
    "text": "the April 1st they did it everything was good he didn't pay my attention they he",
    "start": "511620",
    "end": "516839"
  },
  {
    "text": "sold like a little Spike up and it was so tiny it didn't really zoom in just to",
    "start": "516839",
    "end": "521940"
  },
  {
    "text": "take a look at May 6 to be exact 2023 right the database begin to experience",
    "start": "521940",
    "end": "528660"
  },
  {
    "text": "severe lock manager weights that's when the client started feeling that's why the user started to feel it you only you",
    "start": "528660",
    "end": "535680"
  },
  {
    "text": "I mean yeah you can have all the chart and monitoring you have right but oh the",
    "start": "535680",
    "end": "542220"
  },
  {
    "text": "real real production is like you only really take a look really deep look",
    "start": "542220",
    "end": "548640"
  },
  {
    "text": "when something is affecting the users so when I click a button or I submit",
    "start": "548640",
    "end": "554100"
  },
  {
    "text": "something and the backend application struggles to process this because of",
    "start": "554100",
    "end": "559440"
  },
  {
    "text": "another backing request to the data store in this case postgres then you",
    "start": "559440",
    "end": "564959"
  },
  {
    "text": "start your notice okay let's take a look at the neighbors and there it is May 6 lock manager wait like what is lock",
    "start": "564959",
    "end": "571980"
  },
  {
    "text": "manager it's marked a sudden change from a smooth operation we've seen since the part partition conversion on April 1st",
    "start": "571980",
    "end": "579180"
  },
  {
    "text": "the primary function of the database the work EQ operation started to stall so he's showing a graph here for the log",
    "start": "579180",
    "end": "585600"
  },
  {
    "text": "manager where it's buy sessions and you can see that there are weights started",
    "start": "585600",
    "end": "592080"
  },
  {
    "text": "to pile up and especially in May 6 that weight started to really show there was",
    "start": "592080",
    "end": "598860"
  },
  {
    "text": "something but it's barely noticeable was very noticeable right so and then he's",
    "start": "598860",
    "end": "605519"
  },
  {
    "text": "like comparing it with the application errors so it's like matching up that's how we that's how you do basically",
    "start": "605519",
    "end": "611120"
  },
  {
    "text": "forensics now he's doing DBA forensics you don't see really much details until",
    "start": "611120",
    "end": "616500"
  },
  {
    "text": "you do log scale right so logos skills basically scales your chart so you can see everything and there it is when did",
    "start": "616500",
    "end": "624660"
  },
  {
    "text": "this happen the real thing that started to happen is actually on April 11 they",
    "start": "624660",
    "end": "631740"
  },
  {
    "start": "630000",
    "end": "720000"
  },
  {
    "text": "started to see these weights right it's not as much as May 6 but April 11 is where it started so a mere 10 days",
    "start": "631740",
    "end": "640680"
  },
  {
    "text": "remember what happened April first they started partitioning every day they add a new table remember right every table",
    "start": "640680",
    "end": "648959"
  },
  {
    "text": "is a 10 million row table that's the average here right so so let's read this",
    "start": "648959",
    "end": "654839"
  },
  {
    "text": "part that's what I'm interested in when we examine the log manager wait on a logarithmic scale it becomes apparent",
    "start": "654839",
    "end": "660899"
  },
  {
    "text": "that these weights actually commence on April 11th a mere 10 days after the partition conversion this suggests that",
    "start": "660899",
    "end": "667920"
  },
  {
    "text": "once we had 12 partitions including all data in in one of the partition so total",
    "start": "667920",
    "end": "674339"
  },
  {
    "text": "of 12 and then a partition for each day the database began to struggle with",
    "start": "674339",
    "end": "680220"
  },
  {
    "text": "managing the volume of lock requests now we're going to need to talk about lock",
    "start": "680220",
    "end": "685560"
  },
  {
    "text": "request here with each partition having 22 indexes so this this is the first",
    "start": "685560",
    "end": "692220"
  },
  {
    "text": "time I think he mentions how many indexes right or I mentioned maybe it did so",
    "start": "692220",
    "end": "698279"
  },
  {
    "text": "the table has 22 indexes that's a lot of indexes but they are necessary of course for for the business but when you",
    "start": "698279",
    "end": "705600"
  },
  {
    "text": "partition you don't have just normal 22 indexes anymore you have 22 index per",
    "start": "705600",
    "end": "711899"
  },
  {
    "text": "partition because it's just another table right so you still need these indexes on every single partition so now",
    "start": "711899",
    "end": "721579"
  },
  {
    "start": "720000",
    "end": "930000"
  },
  {
    "text": "remember let's talk about locks a little bit when you do end a select on a table on",
    "start": "721920",
    "end": "730680"
  },
  {
    "text": "postgres at least or insert or update you acquire essentially two types of",
    "start": "730680",
    "end": "736500"
  },
  {
    "text": "logs something called the table lock and something called the roll locks and the",
    "start": "736500",
    "end": "741660"
  },
  {
    "text": "table lock or the relation lock when you do a select you do something called we acquire something called",
    "start": "741660",
    "end": "748019"
  },
  {
    "text": "access share access share lock it's a very weak lock it doesn't do",
    "start": "748019",
    "end": "755640"
  },
  {
    "text": "anything it just acquires it such that to till the lock manager such that to",
    "start": "755640",
    "end": "762120"
  },
  {
    "text": "tell the who the database say hey someone is selecting something from this table",
    "start": "762120",
    "end": "767639"
  },
  {
    "text": "it doesn't care what right just say this table is being selected by this process and if you know postgres each connection",
    "start": "767639",
    "end": "775940"
  },
  {
    "text": "made to postgres creates a new back end process so it's like a one-to-one thing",
    "start": "775940",
    "end": "783000"
  },
  {
    "text": "and that's a whole discussion uh in in uh in a neat recent thread to for",
    "start": "783000",
    "end": "789480"
  },
  {
    "text": "postgres to move from processes to threads that's a whole different thing you know discussion so it's a",
    "start": "789480",
    "end": "795839"
  },
  {
    "text": "heavyweight operation to process versus thread so we have processes so every connection Creator process so and every",
    "start": "795839",
    "end": "801959"
  },
  {
    "text": "process if it queries anything any table touches any table in a transaction",
    "start": "801959",
    "end": "807000"
  },
  {
    "text": "okay it it create it gets this table lock right so if you select you get this",
    "start": "807000",
    "end": "812639"
  },
  {
    "text": "access share lock it's a very simple log why because we want to know that someone",
    "start": "812639",
    "end": "818100"
  },
  {
    "text": "is selecting to block other things such as ddls you can do a ddl if you're",
    "start": "818100",
    "end": "824940"
  },
  {
    "text": "selecting we don't let you because those are conflicting logs I talked about that in another video I'm going to reference",
    "start": "824940",
    "end": "830700"
  },
  {
    "text": "it there here to learn if you want to learn more about it but there's you need",
    "start": "830700",
    "end": "836040"
  },
  {
    "text": "to have these conflicting locks right so there are certain table locks that conflict with each other some are they",
    "start": "836040",
    "end": "842220"
  },
  {
    "text": "do not conflict right so while you select you can still insert you can still update that's fine and we also",
    "start": "842220",
    "end": "850019"
  },
  {
    "text": "acquire raw locks that I'm not going to talk about for update logs when you do an insert or",
    "start": "850019",
    "end": "856260"
  },
  {
    "text": "you do an update we do an F4 update log at the row level but here we're talking only about the table level locks and",
    "start": "856260",
    "end": "863760"
  },
  {
    "text": "also index blocks so when we do that we acquire let's do",
    "start": "863760",
    "end": "871260"
  },
  {
    "text": "just the select right select across that table log if you do an insert update or",
    "start": "871260",
    "end": "876600"
  },
  {
    "text": "delete we acquire I think called raw exclusive lock that's while it's",
    "start": "876600",
    "end": "881699"
  },
  {
    "text": "confusing that's actually a table log right raw exclusive log is actually a table Block it's just called Draw",
    "start": "881699",
    "end": "887639"
  },
  {
    "text": "exclusive right but that is another type of Lock and",
    "start": "887639",
    "end": "892680"
  },
  {
    "text": "it's a table log so that's that has to be an entry that says hey I am acquiring this lock I am",
    "start": "892680",
    "end": "900180"
  },
  {
    "text": "acquiring this lock can you imagine the cost of this locking so you need a lock",
    "start": "900180",
    "end": "906720"
  },
  {
    "text": "manager to manage all of this thing all of the stories are stored in a table called pulse the postgres lock stable",
    "start": "906720",
    "end": "913019"
  },
  {
    "text": "and there's a post the lock manager manage all this stuff you can see that it's not cheap to",
    "start": "913019",
    "end": "919860"
  },
  {
    "text": "manage many many logs so let's go back to the article C here each partition having 22 indexes",
    "start": "919860",
    "end": "927480"
  },
  {
    "text": "querying the order still just just squaring forget about editing just query because querying is a select select is",
    "start": "927480",
    "end": "935160"
  },
  {
    "start": "930000",
    "end": "1050000"
  },
  {
    "text": "an access share lock right so just querying",
    "start": "935160",
    "end": "942180"
  },
  {
    "text": "you get 20 220 locks per query why how",
    "start": "942180",
    "end": "947639"
  },
  {
    "text": "do they get that because you have 22 indexes right and for each partition",
    "start": "947639",
    "end": "955560"
  },
  {
    "text": "uh each partition has 22 index not only you get a lock on the table",
    "start": "955560",
    "end": "961800"
  },
  {
    "text": "itself you also get a lock on the indexes as well access share lock on the",
    "start": "961800",
    "end": "969300"
  },
  {
    "text": "indexes yes because an index technically is also a relation right in postgres everything is a relation so you have 10",
    "start": "969300",
    "end": "977820"
  },
  {
    "text": "times 22 indexes I think he missed to include also the the partition itself so",
    "start": "977820",
    "end": "986519"
  },
  {
    "text": "technically it should be 22 plus 1 so 23 times 10 right really",
    "start": "986519",
    "end": "994680"
  },
  {
    "text": "that's that's how it should be because you want to also include the table itself the partition itself so it's",
    "start": "994680",
    "end": "1000740"
  },
  {
    "text": "actually 230 and that's why you say 2 220 plus right and it's thin partition",
    "start": "1000740",
    "end": "1007459"
  },
  {
    "text": "because every day they are adding a new Partition that's there's a",
    "start": "1007459",
    "end": "1012500"
  },
  {
    "text": "can you do it like automatically it has to be a script that doesn't right to automatically add a partition",
    "start": "1012500",
    "end": "1019040"
  },
  {
    "text": "so fast forward again they didn't notice that but again when you get a lot of queries",
    "start": "1019040",
    "end": "1025760"
  },
  {
    "text": "you get all of this stuff you might say I was saying we're querying okay sure we're clearing the order table if you",
    "start": "1025760",
    "end": "1031880"
  },
  {
    "text": "query the entire table you get 220 230 logs right because you're scanning all",
    "start": "1031880",
    "end": "1037938"
  },
  {
    "text": "the partition but what if I select one row here is where a performance",
    "start": "1037939",
    "end": "1043579"
  },
  {
    "text": "degradation and postgres version 13 which is what they are on exist",
    "start": "1043579",
    "end": "1049580"
  },
  {
    "text": "if you are querying even a single order on a specific date let's say I want to pick give me the order on this day",
    "start": "1049580",
    "end": "1057200"
  },
  {
    "start": "1050000",
    "end": "1200000"
  },
  {
    "text": "that that's it just give me that order on the Day postcard is still unfortunately creates a lock which is",
    "start": "1057200",
    "end": "1065299"
  },
  {
    "text": "the table lock access share lock on all the partitions yes this is really bad",
    "start": "1065299",
    "end": "1072320"
  },
  {
    "text": "that just exacerbated the problem that's why he mentions that at the end of the block fortunately it's it's something",
    "start": "1072320",
    "end": "1078919"
  },
  {
    "text": "has been fixed in postgres 14. it's not mentioned anywhere that I can find I",
    "start": "1078919",
    "end": "1084679"
  },
  {
    "text": "actually had to uh I have to verify it myself in the stop boss is 13 and",
    "start": "1084679",
    "end": "1089900"
  },
  {
    "text": "compared to Tobuscus 14 and there it is I query one partition all the partitions",
    "start": "1089900",
    "end": "1095539"
  },
  {
    "text": "are are gets this lock so what's the problem with this so many locks creates contention so fast",
    "start": "1095539",
    "end": "1102679"
  },
  {
    "text": "forward 40 days later and the lock manager Waits had become a significant",
    "start": "1102679",
    "end": "1107900"
  },
  {
    "text": "part of the total weight at this part at this point we had 40 partition now times 22 times 22 10 23 if you add",
    "start": "1107900",
    "end": "1116780"
  },
  {
    "text": "then you have what 880 logs per query despite my effort to explicitly limit",
    "start": "1116780",
    "end": "1124039"
  },
  {
    "text": "queries to specific partition ranges the database continued to enforce locks on",
    "start": "1124039",
    "end": "1130400"
  },
  {
    "text": "every partition and that is I wouldn't I don't want to call it a bug I think it was by Design",
    "start": "1130400",
    "end": "1138679"
  },
  {
    "text": "because when you query they still need to look at the other tape partitions postgres 14 they optimize that not to do",
    "start": "1138679",
    "end": "1147440"
  },
  {
    "text": "that that's my thing that's how I think about it I don't know if I call it a bug to be honest",
    "start": "1147440",
    "end": "1153500"
  },
  {
    "text": "maybe you can disagree with me he's sharing the same thought I had here upon",
    "start": "1153500",
    "end": "1158600"
  },
  {
    "text": "initially partitioning the orders table my apprehension centered on the potential issue of increa of the an",
    "start": "1158600",
    "end": "1164780"
  },
  {
    "text": "increasing number of partitions with parse and execution time progressively lengthening I had anticipated a slower",
    "start": "1164780",
    "end": "1171799"
  },
  {
    "text": "gradual increase in latencies I certainly did not foresee the Deb is hitting an Abrupt wall that's a wall",
    "start": "1171799",
    "end": "1178880"
  },
  {
    "text": "actually they have a lot of partitions okay as we scan the Partridge as we",
    "start": "1178880",
    "end": "1184220"
  },
  {
    "text": "figure out which partition to scan we're gonna hit a little bit of a latency but I didn't really know that we're gonna",
    "start": "1184220",
    "end": "1191299"
  },
  {
    "text": "hit it so quick and 40 day 40 days after that",
    "start": "1191299",
    "end": "1197740"
  },
  {
    "text": "and now he's sharing queries like okay how to find out all the logs how to find",
    "start": "1197740",
    "end": "1203299"
  },
  {
    "start": "1200000",
    "end": "1440000"
  },
  {
    "text": "out all the other stuff like I'm gonna describe part of this knowing what a",
    "start": "1203299",
    "end": "1208520"
  },
  {
    "text": "lock manager is has a Google re a Google",
    "start": "1208520",
    "end": "1214160"
  },
  {
    "text": "search didn't really turn up much stuff but there was something called fast path and I want to talk about that a little",
    "start": "1214160",
    "end": "1220220"
  },
  {
    "text": "bit you know you see I'm gonna summarize this little bit and then we'll skip skipping a little bit",
    "start": "1220220",
    "end": "1225440"
  },
  {
    "text": "fast path locking is locking that doesn't use the",
    "start": "1225440",
    "end": "1231980"
  },
  {
    "text": "lock manager essentially and as a backend process which is you think of it",
    "start": "1231980",
    "end": "1237320"
  },
  {
    "text": "as a connection you get 16 of those and essentially what we use we use like an in-memory data structure like a tiny",
    "start": "1237320",
    "end": "1243799"
  },
  {
    "text": "in-memory data structure a part of the lock manager and there is a hard coded",
    "start": "1243799",
    "end": "1249080"
  },
  {
    "text": "literally a hard-coded I wish I can have it I think I have it here maybe actually do here's the source code for those",
    "start": "1249080",
    "end": "1256760"
  },
  {
    "text": "listening I'm looking at file and postgres proc.h",
    "start": "1256760",
    "end": "1262940"
  },
  {
    "text": "there is a constant called FP underscore log underscore slots underscore pair",
    "start": "1262940",
    "end": "1269720"
  },
  {
    "text": "underscore back end and that constant is 16. so it's it's not configurable at all it's a you have to recompile postgres to",
    "start": "1269720",
    "end": "1276860"
  },
  {
    "text": "change it and so you can get 16 fast locks what does that mean it means",
    "start": "1276860",
    "end": "1282500"
  },
  {
    "text": "once you hit that 16 table relation which is whether indexes or tables",
    "start": "1282500",
    "end": "1287660"
  },
  {
    "text": "you're stuck that's it you're now out of your Slots of the fast path now you have",
    "start": "1287660",
    "end": "1294080"
  },
  {
    "text": "to switch to this slow path I suppose which is using the lock manager right if you use the lock manager then air your",
    "start": "1294080",
    "end": "1301039"
  },
  {
    "text": "best just basically fighting with mutexes you know because I was like how",
    "start": "1301039",
    "end": "1307280"
  },
  {
    "text": "do you guarantee shared memory access right with with this it's like you're contending a lot of processes are",
    "start": "1307280",
    "end": "1314419"
  },
  {
    "text": "contending on these uh shared resource which is the lock manager and that's",
    "start": "1314419",
    "end": "1320299"
  },
  {
    "text": "where problems start to happen if we acquired a lot of logs problems happen and here's your he's showing a query how",
    "start": "1320299",
    "end": "1328700"
  },
  {
    "text": "to actually see if you are in the fast path or or or the not of the fast path",
    "start": "1328700",
    "end": "1334460"
  },
  {
    "text": "essentially and it's it's in the PG lock it's literally at Boolean Fastpass true or false and it's pair process it will",
    "start": "1334460",
    "end": "1342440"
  },
  {
    "text": "tell you that okay this lock has a kawaii has been acquired with with fast pass fast pass what's that isn't that",
    "start": "1342440",
    "end": "1349460"
  },
  {
    "text": "the road thingy foreign",
    "start": "1349460",
    "end": "1353140"
  },
  {
    "text": "Genie the Disney magic Genie right the fast lightning Lane",
    "start": "1354700",
    "end": "1361360"
  },
  {
    "text": "so fast path right or the lock manager essentially so every lock entry you see",
    "start": "1361400",
    "end": "1367460"
  },
  {
    "text": "you can know if it's as required by the fast path or the slow path essentially pair process which is a back-end process",
    "start": "1367460",
    "end": "1374059"
  },
  {
    "text": "and guess what not only that he you're essentially other processes can acquire",
    "start": "1374059",
    "end": "1380900"
  },
  {
    "text": "locks as well right like the vacuum when you do vacuum and you also acquire lock",
    "start": "1380900",
    "end": "1386120"
  },
  {
    "text": "but that's another another account essentially right it is it has its own",
    "start": "1386120",
    "end": "1391159"
  },
  {
    "text": "count per process I don't think uh that counts against the fast path the vacuum",
    "start": "1391159",
    "end": "1397580"
  },
  {
    "text": "Auto vacuum may have a different counter for a fast bet I might be wrong there and then it goes into like okay how how",
    "start": "1397580",
    "end": "1404600"
  },
  {
    "text": "did I find about this it goes through the source code the only solution is to actually read The Source can still learn about this and um",
    "start": "1404600",
    "end": "1412039"
  },
  {
    "text": "so yeah if you have a lot of partitions a lot of tables essentially and and your",
    "start": "1412039",
    "end": "1417080"
  },
  {
    "text": "process is reading many many many tables then be wary of this especially if you",
    "start": "1417080",
    "end": "1424340"
  },
  {
    "text": "have long transactions if you're like if you do a transaction and you commit quick query and commit you release those",
    "start": "1424340",
    "end": "1429620"
  },
  {
    "text": "lock so it's like what do I do he's like what do I do right",
    "start": "1429620",
    "end": "1436460"
  },
  {
    "text": "solution is like okay time to move from daily partitions to weekly",
    "start": "1436460",
    "end": "1442220"
  },
  {
    "start": "1440000",
    "end": "1890000"
  },
  {
    "text": "because he just learned that hey the daily part having a lot of partition",
    "start": "1442220",
    "end": "1448100"
  },
  {
    "text": "is a bad idea because of this so he moved from daily to weekly so now he has a hundred",
    "start": "1448100",
    "end": "1453679"
  },
  {
    "text": "million rows per partition instead of 10. well let's say 700 770 million seven a",
    "start": "1453679",
    "end": "1461059"
  },
  {
    "text": "week has seven days right and we so he started what what do you want to",
    "start": "1461059",
    "end": "1467179"
  },
  {
    "text": "do look at this let's just start moving stuff so he had problems moving",
    "start": "1467179",
    "end": "1472580"
  },
  {
    "text": "data because he wanted to move seven tables into one and even that created",
    "start": "1472580",
    "end": "1478700"
  },
  {
    "text": "more contention because now he's inserting and creating more logs he's just been locking himself and he'd been",
    "start": "1478700",
    "end": "1484520"
  },
  {
    "text": "on call left and right and so so nothing went right essentially for him at all",
    "start": "1484520",
    "end": "1492620"
  },
  {
    "text": "and also very good important Point here is when he was moving the seven partitions",
    "start": "1492620",
    "end": "1499820"
  },
  {
    "text": "into one weekly uh were inserting right remember we have what we have",
    "start": "1499820",
    "end": "1506120"
  },
  {
    "text": "essentially 22 indexes so what he said okay oh let me drop these indexes so inserts are faster because we have to",
    "start": "1506120",
    "end": "1512360"
  },
  {
    "text": "maintain index management like I don't I don't need indexes I mean it's a new table anyway so let me just drop it by",
    "start": "1512360",
    "end": "1519020"
  },
  {
    "text": "dropping the index he created an axis exclusive lock which essentially created",
    "start": "1519020",
    "end": "1524360"
  },
  {
    "text": "a lock on them on that table I don't think that query be that table was not",
    "start": "1524360",
    "end": "1530179"
  },
  {
    "text": "queried actively there but the fact that it is dropping the index essentially",
    "start": "1530179",
    "end": "1536000"
  },
  {
    "text": "created more problems for him because now locking contention started to happen more locking and more locking when you",
    "start": "1536000",
    "end": "1542600"
  },
  {
    "text": "drop an index essentially what happened is the the full table is is locked as as",
    "start": "1542600",
    "end": "1548900"
  },
  {
    "text": "exclusive right unless you use concurrently which I don't believe he did there for other reasons as well",
    "start": "1548900",
    "end": "1554720"
  },
  {
    "text": "right so it is really interesting when you knew actually into the in the mix of",
    "start": "1554720",
    "end": "1560779"
  },
  {
    "text": "actually doing something right everything goes wrong and this is exactly what happened back to the video",
    "start": "1560779",
    "end": "1567500"
  },
  {
    "text": "oh look at that they are using nginx as a Gateway so it's this is where it says",
    "start": "1567500",
    "end": "1572600"
  },
  {
    "text": "that Gateway errors which is nginx uses the back end the back end returns a Gateway error and the backend talks to",
    "start": "1572600",
    "end": "1578480"
  },
  {
    "text": "the database and that's where the weights happening right so what he started to do is essentially all right",
    "start": "1578480",
    "end": "1583880"
  },
  {
    "text": "let's now okay we moved thanks to the to the Wii to the weekly now let's let's",
    "start": "1583880",
    "end": "1589760"
  },
  {
    "text": "start to detach the partitions another problem happened detach",
    "start": "1589760",
    "end": "1595700"
  },
  {
    "text": "essentially to detach this daily partition because you no longer leave them right you need to remove them and",
    "start": "1595700",
    "end": "1602059"
  },
  {
    "text": "to detach these daily partitions posca is actually a consider this a ddl",
    "start": "1602059",
    "end": "1608600"
  },
  {
    "text": "because you're doing an alter table detach all right and when you do that",
    "start": "1608600",
    "end": "1614539"
  },
  {
    "text": "it's a ddl what does a ddl do acquires an access exclusive this is the most aggressive lock it's not a weak lock",
    "start": "1614539",
    "end": "1620840"
  },
  {
    "text": "like the other types right so we we talked about like weak locks or can be candidates for fast path right only the",
    "start": "1620840",
    "end": "1627919"
  },
  {
    "text": "weak locks by the way I I don't think I mentioned that all right which is a weak locks or",
    "start": "1627919",
    "end": "1633320"
  },
  {
    "text": "things that you acquire an insert update delete and select that's basically it I",
    "start": "1633320",
    "end": "1638720"
  },
  {
    "text": "think also other operations maybe the auto vacuum also there's a way clock I might be wrong there but but access",
    "start": "1638720",
    "end": "1645200"
  },
  {
    "text": "exclusive is the most aggressive one it's like doing a vacuum fall not the vacuum a vacuum full or an",
    "start": "1645200",
    "end": "1654020"
  },
  {
    "text": "A Drop table detached partition is also an axis exclusive so",
    "start": "1654020",
    "end": "1660500"
  },
  {
    "text": "so just by doing that he actually blocks by doing that you blocked essentially",
    "start": "1660500",
    "end": "1666919"
  },
  {
    "text": "selects too you can even select from the from other tables the pattern table gets",
    "start": "1666919",
    "end": "1673100"
  },
  {
    "text": "I think when you detach it you get an access exclusive on the pattern table so the order table became completely",
    "start": "1673100",
    "end": "1680480"
  },
  {
    "text": "unaccessible it's like oh my God that's even just skyrocketed the the weights",
    "start": "1680480",
    "end": "1687380"
  },
  {
    "text": "even more and more so and guess what in postgres 14 there is a",
    "start": "1687380",
    "end": "1693860"
  },
  {
    "text": "fix for this called detach concurrently which acquires as a softer look which allows",
    "start": "1693860",
    "end": "1702620"
  },
  {
    "text": "you to continue to edit essentially and that's and that's basically the problem yeah so this is my tool that I",
    "start": "1702620",
    "end": "1710120"
  },
  {
    "text": "wrote to actually show all the postgres blocks and what conflicts with what right so uh there if you scroll down you",
    "start": "1710120",
    "end": "1719600"
  },
  {
    "text": "will see that uh detach partition there is detached partition",
    "start": "1719600",
    "end": "1728299"
  },
  {
    "text": "and there's this Earth partition concurrently if you click on detach partition it requires an access exclusive log and look what it blocks it",
    "start": "1728299",
    "end": "1735799"
  },
  {
    "text": "blocks command conflicting with alter table detached partition pretty much everything",
    "start": "1735799",
    "end": "1741100"
  },
  {
    "text": "select selects for update inserts you cannot do anything when you do a detached partition but if you do it",
    "start": "1741100",
    "end": "1748159"
  },
  {
    "text": "concurrently you can uh the only you are allowed to do a select",
    "start": "1748159",
    "end": "1755480"
  },
  {
    "text": "you're allowed to do an answer you're allow to other update delete but you can't do like normal vacuums are blocked",
    "start": "1755480",
    "end": "1761779"
  },
  {
    "text": "right re-index is blocked when you do that so so it's likely as softer kind of",
    "start": "1761779",
    "end": "1768620"
  },
  {
    "text": "lock with concanity but he can't do that anyway because he's on posca 13 and postgres 14 added that concurrently",
    "start": "1768620",
    "end": "1775220"
  },
  {
    "text": "feature and again I didn't see that option in the feature Matrix for some",
    "start": "1775220",
    "end": "1780260"
  },
  {
    "text": "reason but I noticed it in the dock so I was like okay concurrently is available here but it's not available in 13. so",
    "start": "1780260",
    "end": "1787279"
  },
  {
    "text": "that's uh pretty neat he included like he's like okay I had to kill some processes to move forward and now now",
    "start": "1787279",
    "end": "1795559"
  },
  {
    "text": "that he moved to weekly he knows he's gonna hit it again in four to six months as the partition more partitions uh as",
    "start": "1795559",
    "end": "1802880"
  },
  {
    "text": "more partitions start to to accumulate one options upgrading to PG-14 where",
    "start": "1802880",
    "end": "1808880"
  },
  {
    "text": "apparent apparently is misspelled apparently if I have a predicate filter limiting to query to one partition then",
    "start": "1808880",
    "end": "1815179"
  },
  {
    "text": "it will only take locks out of that partition uh it will only lock that",
    "start": "1815179",
    "end": "1821299"
  },
  {
    "text": "table when I say lock a table will not like prevent editing or anything it's just because it's that soft weak locks",
    "start": "1821299",
    "end": "1826580"
  },
  {
    "text": "as we talked about it right only on that table like right that's what you what",
    "start": "1826580",
    "end": "1832279"
  },
  {
    "text": "that's what I thought too when I query that partition I only you should only lock only that partition but no voskus",
    "start": "1832279",
    "end": "1839840"
  },
  {
    "text": "13. and bill before it locks all the partition and that creates more and more",
    "start": "1839840",
    "end": "1846500"
  },
  {
    "text": "locks so there's more management for locking so locking is nasty when it",
    "start": "1846500",
    "end": "1851899"
  },
  {
    "text": "comes to this stuff one thing I think I mentioned him on Twitter uh for this concurrently thing it's not in the blog",
    "start": "1851899",
    "end": "1858380"
  },
  {
    "text": "but essentially you you could have also detached partition concurrently in postgres 14 as well and and that also",
    "start": "1858380",
    "end": "1866480"
  },
  {
    "text": "will allow you to kind of well not kind of stop everything right it will just uh",
    "start": "1866480",
    "end": "1873640"
  },
  {
    "text": "it will allow you to continue editing at least and querying right you won't be",
    "start": "1873640",
    "end": "1878779"
  },
  {
    "text": "dead on the wall so yeah I absolutely loved this a Blog I'm going",
    "start": "1878779",
    "end": "1885200"
  },
  {
    "text": "to share it below for you guys but yeah I learned a lot about this to be honest",
    "start": "1885200",
    "end": "1890539"
  },
  {
    "start": "1890000",
    "end": "1912000"
  },
  {
    "text": "right postgres partitioning just watch out for it if you're on positive 14 or",
    "start": "1890539",
    "end": "1895760"
  },
  {
    "text": "later you should be fine right it's not as problematic as possible 13 but man",
    "start": "1895760",
    "end": "1901880"
  },
  {
    "text": "this is really interesting and I don't know what other problems might be there but yeah just uh I thought I'll I'll",
    "start": "1901880",
    "end": "1909380"
  },
  {
    "text": "talk about that a little bit see you",
    "start": "1909380",
    "end": "1913120"
  }
]