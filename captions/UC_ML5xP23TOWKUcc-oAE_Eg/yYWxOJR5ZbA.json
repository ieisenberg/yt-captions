[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "if you're using amazon aura you might",
    "start": "0",
    "end": "1680"
  },
  {
    "text": "actually like this news",
    "start": "1680",
    "end": "3280"
  },
  {
    "text": "amazon aura just started supporting",
    "start": "3280",
    "end": "5279"
  },
  {
    "text": "postgres version 14 and",
    "start": "5279",
    "end": "9040"
  },
  {
    "text": "as we talked about this in previous",
    "start": "9040",
    "end": "11679"
  },
  {
    "text": "videos in this channel postgres14 comes",
    "start": "11679",
    "end": "13679"
  },
  {
    "text": "with a lot of features related to",
    "start": "13679",
    "end": "15839"
  },
  {
    "text": "performance and also other features",
    "start": "15839",
    "end": "18560"
  },
  {
    "text": "related to",
    "start": "18560",
    "end": "19760"
  },
  {
    "text": "you know the indexes and the way you",
    "start": "19760",
    "end": "22640"
  },
  {
    "text": "send multiple queries in the same",
    "start": "22640",
    "end": "24160"
  },
  {
    "text": "connection",
    "start": "24160",
    "end": "25439"
  },
  {
    "text": "json b features and stuff like that",
    "start": "25439",
    "end": "28400"
  },
  {
    "text": "which",
    "start": "28400",
    "end": "29199"
  },
  {
    "text": "will be really good in the cloud so",
    "start": "29199",
    "end": "31920"
  },
  {
    "text": "let's discuss this so this comes from",
    "start": "31920",
    "end": "34000"
  },
  {
    "text": "amazon themselves this is their website",
    "start": "34000",
    "end": "36000"
  },
  {
    "text": "and they posted this news around a few",
    "start": "36000",
    "end": "37760"
  },
  {
    "text": "weeks back june 22nd 2022 and if you",
    "start": "37760",
    "end": "41360"
  },
  {
    "text": "don't know guys amazon error is the",
    "start": "41360",
    "end": "43040"
  },
  {
    "text": "cloud offering from amazon to support",
    "start": "43040",
    "end": "46160"
  },
  {
    "text": "postgres on the cloud",
    "start": "46160",
    "end": "48640"
  },
  {
    "text": "if you want to put your database on the",
    "start": "48640",
    "end": "50719"
  },
  {
    "text": "cloud you have i guess three options now",
    "start": "50719",
    "end": "53120"
  },
  {
    "text": "these days",
    "start": "53120",
    "end": "54559"
  },
  {
    "text": "you can spin up a vm and install the",
    "start": "54559",
    "end": "56960"
  },
  {
    "text": "database manually and completely manage",
    "start": "56960",
    "end": "58960"
  },
  {
    "text": "it yourself that's one way to do it so",
    "start": "58960",
    "end": "61600"
  },
  {
    "start": "60000",
    "end": "225000"
  },
  {
    "text": "that's very close to how you do it in",
    "start": "61600",
    "end": "63680"
  },
  {
    "text": "the on-premises right",
    "start": "63680",
    "end": "66080"
  },
  {
    "text": "and that means you have to",
    "start": "66080",
    "end": "67920"
  },
  {
    "text": "set up replication yourself spin up",
    "start": "67920",
    "end": "69760"
  },
  {
    "text": "multiple you know vms for replicas blah",
    "start": "69760",
    "end": "72640"
  },
  {
    "text": "blah blah you know there's a lot of work",
    "start": "72640",
    "end": "74479"
  },
  {
    "text": "you have to do the next level is what",
    "start": "74479",
    "end": "76799"
  },
  {
    "text": "amazon aurora offers and",
    "start": "76799",
    "end": "79520"
  },
  {
    "text": "other databases like google new alloy db",
    "start": "79520",
    "end": "82640"
  },
  {
    "text": "also offers where",
    "start": "82640",
    "end": "84720"
  },
  {
    "text": "they gonna spin up this",
    "start": "84720",
    "end": "86400"
  },
  {
    "text": "cluster for you they're gonna have one",
    "start": "86400",
    "end": "89119"
  },
  {
    "text": "writer one primary database where you do",
    "start": "89119",
    "end": "92320"
  },
  {
    "text": "all the right and they're gonna take",
    "start": "92320",
    "end": "94240"
  },
  {
    "text": "care also for their application so",
    "start": "94240",
    "end": "96479"
  },
  {
    "text": "they're gonna spin up multiple instances",
    "start": "96479",
    "end": "99040"
  },
  {
    "text": "as you desire",
    "start": "99040",
    "end": "100479"
  },
  {
    "text": "and they're gonna put these into",
    "start": "100479",
    "end": "101840"
  },
  {
    "text": "multiple regions because they're in the",
    "start": "101840",
    "end": "103520"
  },
  {
    "text": "cloud and because of that",
    "start": "103520",
    "end": "106079"
  },
  {
    "text": "all the rights goes to this primary",
    "start": "106079",
    "end": "108159"
  },
  {
    "text": "database and as you go to this private",
    "start": "108159",
    "end": "110720"
  },
  {
    "text": "database they're gonna",
    "start": "110720",
    "end": "112479"
  },
  {
    "text": "replicate it across all the replicas",
    "start": "112479",
    "end": "115040"
  },
  {
    "text": "that you basically",
    "start": "115040",
    "end": "116960"
  },
  {
    "text": "want i think they support up to 15.",
    "start": "116960",
    "end": "119520"
  },
  {
    "text": "so in this case",
    "start": "119520",
    "end": "120960"
  },
  {
    "text": "you can scale globally very easily so",
    "start": "120960",
    "end": "123520"
  },
  {
    "text": "it's very attractive the only",
    "start": "123520",
    "end": "126079"
  },
  {
    "text": "limitation if you will is it's a single",
    "start": "126079",
    "end": "128560"
  },
  {
    "text": "writer which is also very simple to",
    "start": "128560",
    "end": "131840"
  },
  {
    "text": "build out because you don't the moment",
    "start": "131840",
    "end": "134560"
  },
  {
    "text": "you introduce multiple writers then you",
    "start": "134560",
    "end": "136879"
  },
  {
    "text": "have to deal with conflict then you have",
    "start": "136879",
    "end": "138720"
  },
  {
    "text": "to deal with distributed transactions",
    "start": "138720",
    "end": "140640"
  },
  {
    "text": "and can get nasty so that's where amazon",
    "start": "140640",
    "end": "143760"
  },
  {
    "text": "arrows stops the offering and google",
    "start": "143760",
    "end": "145920"
  },
  {
    "text": "alloy tv i believe and this is obviously",
    "start": "145920",
    "end": "148480"
  },
  {
    "text": "confirmed from",
    "start": "148480",
    "end": "149760"
  },
  {
    "text": "uh some of you guys who are in this",
    "start": "149760",
    "end": "152080"
  },
  {
    "text": "space in the database as a service space",
    "start": "152080",
    "end": "153840"
  },
  {
    "text": "which i am i'm not um i'm an enterprise",
    "start": "153840",
    "end": "156400"
  },
  {
    "text": "guy",
    "start": "156400",
    "end": "157200"
  },
  {
    "text": "i always work on sequels over oracle",
    "start": "157200",
    "end": "159280"
  },
  {
    "text": "postgres but only on-prem with large",
    "start": "159280",
    "end": "161360"
  },
  {
    "text": "organizations",
    "start": "161360",
    "end": "162800"
  },
  {
    "text": "uh in my career at least so the third is",
    "start": "162800",
    "end": "167040"
  },
  {
    "text": "what yoga byte does and where spanner",
    "start": "167040",
    "end": "170480"
  },
  {
    "text": "does and i believe you can go to",
    "start": "170480",
    "end": "172080"
  },
  {
    "text": "dynamodb although dynamodb is its own",
    "start": "172080",
    "end": "175360"
  },
  {
    "text": "platform you know",
    "start": "175360",
    "end": "177200"
  },
  {
    "text": "but what google spanner does is a",
    "start": "177200",
    "end": "179599"
  },
  {
    "text": "support postgres interface and also yoga",
    "start": "179599",
    "end": "182720"
  },
  {
    "text": "by support posca's interface but they",
    "start": "182720",
    "end": "184720"
  },
  {
    "text": "are distributed databases that means",
    "start": "184720",
    "end": "187599"
  },
  {
    "text": "even the rights are distributed you can",
    "start": "187599",
    "end": "189680"
  },
  {
    "text": "write from different regions and they're",
    "start": "189680",
    "end": "192080"
  },
  {
    "text": "gonna reconcile the changes and they're",
    "start": "192080",
    "end": "194720"
  },
  {
    "text": "gonna",
    "start": "194720",
    "end": "195840"
  },
  {
    "text": "whether",
    "start": "195840",
    "end": "196720"
  },
  {
    "text": "regardless of the implementation details",
    "start": "196720",
    "end": "199440"
  },
  {
    "text": "here right so",
    "start": "199440",
    "end": "201200"
  },
  {
    "text": "and then obviously they take care of",
    "start": "201200",
    "end": "203599"
  },
  {
    "text": "distributed transactions and it gets",
    "start": "203599",
    "end": "205440"
  },
  {
    "text": "really complex so getting that part",
    "start": "205440",
    "end": "207920"
  },
  {
    "text": "right",
    "start": "207920",
    "end": "208959"
  },
  {
    "text": "is",
    "start": "208959",
    "end": "209760"
  },
  {
    "text": "i would only move to those kind of data",
    "start": "209760",
    "end": "211760"
  },
  {
    "text": "if you absolutely need it if that single",
    "start": "211760",
    "end": "214640"
  },
  {
    "text": "primary database as beefy as it gets",
    "start": "214640",
    "end": "217599"
  },
  {
    "text": "cannot hold you right anymore then you",
    "start": "217599",
    "end": "219519"
  },
  {
    "text": "might want to do that but otherwise",
    "start": "219519",
    "end": "222560"
  },
  {
    "text": "stick to simplicity that's that's my two",
    "start": "222560",
    "end": "224879"
  },
  {
    "text": "cents with that said now let's go to",
    "start": "224879",
    "end": "227519"
  },
  {
    "start": "225000",
    "end": "360000"
  },
  {
    "text": "what amazon aurora supports now it's",
    "start": "227519",
    "end": "229599"
  },
  {
    "text": "about postcards 14. let's read through",
    "start": "229599",
    "end": "231280"
  },
  {
    "text": "this and discuss a little bit amazon",
    "start": "231280",
    "end": "232640"
  },
  {
    "text": "aurora posca's compatible edition now",
    "start": "232640",
    "end": "234480"
  },
  {
    "text": "supports postgres",
    "start": "234480",
    "end": "236080"
  },
  {
    "text": "14",
    "start": "236080",
    "end": "237439"
  },
  {
    "text": "includes performance proven for parallel",
    "start": "237439",
    "end": "239760"
  },
  {
    "text": "queries heavily",
    "start": "239760",
    "end": "241360"
  },
  {
    "text": "concurrent workloads partition table",
    "start": "241360",
    "end": "243280"
  },
  {
    "text": "logical replication and vacuuming now",
    "start": "243280",
    "end": "245200"
  },
  {
    "text": "we're going to talk about a little bit",
    "start": "245200",
    "end": "247120"
  },
  {
    "text": "i'm going to show the postgres matrix in",
    "start": "247120",
    "end": "249120"
  },
  {
    "text": "a minute here and talk through that",
    "start": "249120",
    "end": "251120"
  },
  {
    "text": "postcards 14 also improves functionality",
    "start": "251120",
    "end": "252879"
  },
  {
    "text": "for the new capability for for example",
    "start": "252879",
    "end": "254560"
  },
  {
    "text": "you can cancel log running queries if",
    "start": "254560",
    "end": "256799"
  },
  {
    "text": "the uh client disconnects because you",
    "start": "256799",
    "end": "259440"
  },
  {
    "text": "might say i'm saying just if a client",
    "start": "259440",
    "end": "261120"
  },
  {
    "text": "disconnects of course the transaction",
    "start": "261120",
    "end": "263440"
  },
  {
    "text": "should be cancelled well code has to be",
    "start": "263440",
    "end": "266000"
  },
  {
    "text": "written to do that guys the connection",
    "start": "266000",
    "end": "268960"
  },
  {
    "text": "the tcb connection to the database is",
    "start": "268960",
    "end": "271440"
  },
  {
    "text": "completely different than the process",
    "start": "271440",
    "end": "273600"
  },
  {
    "text": "that execute the actual",
    "start": "273600",
    "end": "276880"
  },
  {
    "text": "transaction",
    "start": "276880",
    "end": "278240"
  },
  {
    "text": "and it's up up to you to",
    "start": "278240",
    "end": "280560"
  },
  {
    "text": "to have this feature or not if you close",
    "start": "280560",
    "end": "283280"
  },
  {
    "text": "the tcp connection you have to",
    "start": "283280",
    "end": "285919"
  },
  {
    "text": "write code to let the process know that",
    "start": "285919",
    "end": "288720"
  },
  {
    "text": "this has been disconnected and we can",
    "start": "288720",
    "end": "291440"
  },
  {
    "text": "freely cancel the queries",
    "start": "291440",
    "end": "293600"
  },
  {
    "text": "canceling is one of the really hard",
    "start": "293600",
    "end": "297120"
  },
  {
    "text": "things to do",
    "start": "297120",
    "end": "298560"
  },
  {
    "text": "you know despite it being",
    "start": "298560",
    "end": "302160"
  },
  {
    "text": "feels easy but it's not you know and",
    "start": "302160",
    "end": "304560"
  },
  {
    "text": "some of you might relate to that",
    "start": "304560",
    "end": "306479"
  },
  {
    "text": "so yeah there's a lot of features here",
    "start": "306479",
    "end": "308400"
  },
  {
    "text": "and",
    "start": "308400",
    "end": "309600"
  },
  {
    "text": "they support upgrading your apostles 13",
    "start": "309600",
    "end": "312400"
  },
  {
    "text": "to",
    "start": "312400",
    "end": "313199"
  },
  {
    "text": "pose 14 so",
    "start": "313199",
    "end": "314800"
  },
  {
    "text": "let us know guys if you're if anyone is",
    "start": "314800",
    "end": "316960"
  },
  {
    "text": "excited for this uh let us know in the",
    "start": "316960",
    "end": "318720"
  },
  {
    "text": "comment section below",
    "start": "318720",
    "end": "320240"
  },
  {
    "text": "i'm sorry aurora is designed for",
    "start": "320240",
    "end": "321759"
  },
  {
    "text": "unparalleled",
    "start": "321759",
    "end": "323280"
  },
  {
    "text": "high performance and availability at the",
    "start": "323280",
    "end": "325199"
  },
  {
    "text": "global scale full mysql and postgres",
    "start": "325199",
    "end": "327600"
  },
  {
    "text": "interesting i don't know they support",
    "start": "327600",
    "end": "328960"
  },
  {
    "text": "actually my sequel compatibility so if",
    "start": "328960",
    "end": "331360"
  },
  {
    "text": "you have a plastic or backup you can",
    "start": "331360",
    "end": "333039"
  },
  {
    "text": "just ship it up",
    "start": "333039",
    "end": "334639"
  },
  {
    "text": "in the aurora and have",
    "start": "334639",
    "end": "336800"
  },
  {
    "text": "all these features continuous backup",
    "start": "336800",
    "end": "338720"
  },
  {
    "text": "security serverless compute",
    "start": "338720",
    "end": "341840"
  },
  {
    "text": "you know",
    "start": "341840",
    "end": "342960"
  },
  {
    "text": "up to 15 read replicas automated",
    "start": "342960",
    "end": "345120"
  },
  {
    "text": "multi-region replication",
    "start": "345120",
    "end": "346960"
  },
  {
    "text": "and that that's that's that kind of game",
    "start": "346960",
    "end": "349120"
  },
  {
    "text": "changer right",
    "start": "349120",
    "end": "351120"
  },
  {
    "text": "having my databases as close as possible",
    "start": "351120",
    "end": "354240"
  },
  {
    "text": "to every region when i can spend my back",
    "start": "354240",
    "end": "356560"
  },
  {
    "text": "ends",
    "start": "356560",
    "end": "357440"
  },
  {
    "text": "closest to read replicas in this case",
    "start": "357440",
    "end": "360479"
  },
  {
    "start": "360000",
    "end": "688000"
  },
  {
    "text": "i don't have the latency you want to",
    "start": "360479",
    "end": "362240"
  },
  {
    "text": "clip the database as close as possible",
    "start": "362240",
    "end": "364479"
  },
  {
    "text": "to the backend well that's it let's go",
    "start": "364479",
    "end": "366400"
  },
  {
    "text": "to how how good is postgres14",
    "start": "366400",
    "end": "369280"
  },
  {
    "text": "so here i did like a little bit of",
    "start": "369280",
    "end": "370880"
  },
  {
    "text": "filtering between postgres30 and pos14",
    "start": "370880",
    "end": "373840"
  },
  {
    "text": "pretty cool stuff if you think about it",
    "start": "373840",
    "end": "377120"
  },
  {
    "text": "there's vacuum emergency mode if you",
    "start": "377120",
    "end": "379280"
  },
  {
    "text": "don't know if you're so busy doing stuff",
    "start": "379280",
    "end": "382560"
  },
  {
    "text": "if you're",
    "start": "382560",
    "end": "383600"
  },
  {
    "text": "writing a lot",
    "start": "383600",
    "end": "385680"
  },
  {
    "text": "in fact writing a lot that you might run",
    "start": "385680",
    "end": "388400"
  },
  {
    "text": "out of transactions because there is a",
    "start": "388400",
    "end": "390880"
  },
  {
    "text": "limit to postgres there is 4 billion",
    "start": "390880",
    "end": "393280"
  },
  {
    "text": "transactions that can be active at a",
    "start": "393280",
    "end": "395199"
  },
  {
    "text": "time and the reason is because it's a",
    "start": "395199",
    "end": "397199"
  },
  {
    "text": "32-bit integer this transaction id the",
    "start": "397199",
    "end": "399360"
  },
  {
    "text": "x-id",
    "start": "399360",
    "end": "400880"
  },
  {
    "text": "and we need to clean it we need to",
    "start": "400880",
    "end": "403199"
  },
  {
    "text": "freeze these transactions so we don't",
    "start": "403199",
    "end": "404880"
  },
  {
    "text": "get into this problem for wrap around",
    "start": "404880",
    "end": "407520"
  },
  {
    "text": "error right where you almost reach the",
    "start": "407520",
    "end": "410319"
  },
  {
    "text": "four billion and then you restart and go",
    "start": "410319",
    "end": "412720"
  },
  {
    "text": "and you're gonna get the transaction",
    "start": "412720",
    "end": "414000"
  },
  {
    "text": "number one",
    "start": "414000",
    "end": "415199"
  },
  {
    "text": "where it's also in use or",
    "start": "415199",
    "end": "417599"
  },
  {
    "text": "there are residue of an older",
    "start": "417599",
    "end": "419919"
  },
  {
    "text": "transaction that did not was not cleaned",
    "start": "419919",
    "end": "422160"
  },
  {
    "text": "up",
    "start": "422160",
    "end": "423039"
  },
  {
    "text": "so vacuum emergency mode detects that if",
    "start": "423039",
    "end": "426560"
  },
  {
    "text": "you're about to reach that",
    "start": "426560",
    "end": "428560"
  },
  {
    "text": "and obviously you and i might not",
    "start": "428560",
    "end": "431599"
  },
  {
    "text": "hit that ever but for those who have",
    "start": "431599",
    "end": "434240"
  },
  {
    "text": "huge",
    "start": "434240",
    "end": "435440"
  },
  {
    "text": "right load the right a lot you know you",
    "start": "435440",
    "end": "438720"
  },
  {
    "text": "might actually easily read four billion",
    "start": "438720",
    "end": "441039"
  },
  {
    "text": "transaction",
    "start": "441039",
    "end": "442720"
  },
  {
    "text": "data types they support new json b",
    "start": "442720",
    "end": "445120"
  },
  {
    "text": "subscripting you know multi ranges b3",
    "start": "445120",
    "end": "448160"
  },
  {
    "text": "bottom up index deletion they have",
    "start": "448160",
    "end": "450800"
  },
  {
    "text": "incremental sort",
    "start": "450800",
    "end": "452800"
  },
  {
    "text": "for window functions",
    "start": "452800",
    "end": "454479"
  },
  {
    "text": "uh lz compression for toast table so uh",
    "start": "454479",
    "end": "458880"
  },
  {
    "text": "toast tables is when you for example",
    "start": "458880",
    "end": "460800"
  },
  {
    "text": "have a text field or a blob field",
    "start": "460800",
    "end": "463199"
  },
  {
    "text": "the actual text is not stored in line",
    "start": "463199",
    "end": "466080"
  },
  {
    "text": "with the row it is stored somewhere else",
    "start": "466080",
    "end": "468000"
  },
  {
    "text": "in a table that is called taste toast",
    "start": "468000",
    "end": "469919"
  },
  {
    "text": "table and a pointer only is stored in",
    "start": "469919",
    "end": "472319"
  },
  {
    "text": "the inline so if you read something in",
    "start": "472319",
    "end": "474879"
  },
  {
    "text": "the row and you ask for that text the",
    "start": "474879",
    "end": "477599"
  },
  {
    "text": "database has to go read that table do a",
    "start": "477599",
    "end": "480319"
  },
  {
    "text": "join",
    "start": "480319",
    "end": "481280"
  },
  {
    "text": "and decompress those entries and then",
    "start": "481280",
    "end": "484319"
  },
  {
    "text": "present them to the user",
    "start": "484319",
    "end": "485919"
  },
  {
    "text": "that's why if you don't need to do a",
    "start": "485919",
    "end": "487599"
  },
  {
    "text": "select store never do a select star",
    "start": "487599",
    "end": "489520"
  },
  {
    "text": "especially if you have a lot of text",
    "start": "489520",
    "end": "490879"
  },
  {
    "text": "field that you're not requiring because",
    "start": "490879",
    "end": "492879"
  },
  {
    "text": "the database has to do extra work to",
    "start": "492879",
    "end": "495520"
  },
  {
    "text": "fetch those large blobs",
    "start": "495520",
    "end": "498160"
  },
  {
    "text": "of text and blob you know binary large",
    "start": "498160",
    "end": "500560"
  },
  {
    "text": "files now they support lz4 compression",
    "start": "500560",
    "end": "504240"
  },
  {
    "text": "query pipelining",
    "start": "504240",
    "end": "506080"
  },
  {
    "text": "was not supported in 13 but now support",
    "start": "506080",
    "end": "508000"
  },
  {
    "text": "and 14. and we talked about it in http",
    "start": "508000",
    "end": "510319"
  },
  {
    "text": "the idea of pipelining where you have",
    "start": "510319",
    "end": "513120"
  },
  {
    "text": "before pipelining if you have a tcp",
    "start": "513120",
    "end": "515360"
  },
  {
    "text": "connection you send a query",
    "start": "515360",
    "end": "517440"
  },
  {
    "text": "you have to wait for the response in",
    "start": "517440",
    "end": "519680"
  },
  {
    "text": "order to send another query",
    "start": "519680",
    "end": "521760"
  },
  {
    "text": "that's how it was designed it's a simple",
    "start": "521760",
    "end": "524080"
  },
  {
    "text": "thing to do regardless of the reasons",
    "start": "524080",
    "end": "525680"
  },
  {
    "text": "why we did it this way",
    "start": "525680",
    "end": "527600"
  },
  {
    "text": "query pipelining changes that such that",
    "start": "527600",
    "end": "529680"
  },
  {
    "text": "you can send multiple",
    "start": "529680",
    "end": "531600"
  },
  {
    "text": "queries",
    "start": "531600",
    "end": "533200"
  },
  {
    "text": "on the same connection in parallel",
    "start": "533200",
    "end": "535839"
  },
  {
    "text": "pipeline them in a sense",
    "start": "535839",
    "end": "538000"
  },
  {
    "text": "and then let them execute in parallel",
    "start": "538000",
    "end": "540560"
  },
  {
    "text": "so that's obviously faster",
    "start": "540560",
    "end": "543360"
  },
  {
    "text": "but",
    "start": "543360",
    "end": "545680"
  },
  {
    "text": "how do you know that query number four",
    "start": "545760",
    "end": "548959"
  },
  {
    "text": "won't finish before query number one you",
    "start": "548959",
    "end": "551600"
  },
  {
    "text": "have no idea because with those four",
    "start": "551600",
    "end": "553279"
  },
  {
    "text": "queries they won't finish an order how",
    "start": "553279",
    "end": "555279"
  },
  {
    "text": "do you know so you have to do extra",
    "start": "555279",
    "end": "557839"
  },
  {
    "text": "logic at the client side",
    "start": "557839",
    "end": "559680"
  },
  {
    "text": "to guarantee that oh well this is",
    "start": "559680",
    "end": "561920"
  },
  {
    "text": "response number four so you have to",
    "start": "561920",
    "end": "563920"
  },
  {
    "text": "manage all this queries for",
    "start": "563920",
    "end": "565760"
  },
  {
    "text": "query one this responses for query two",
    "start": "565760",
    "end": "568640"
  },
  {
    "text": "so that is extra logic you have to do",
    "start": "568640",
    "end": "570320"
  },
  {
    "text": "but some people want to do that anyway",
    "start": "570320",
    "end": "572320"
  },
  {
    "text": "uh logical replication stream in",
    "start": "572320",
    "end": "574080"
  },
  {
    "text": "progress transaction so this is pretty",
    "start": "574080",
    "end": "576080"
  },
  {
    "text": "cool uh",
    "start": "576080",
    "end": "577519"
  },
  {
    "text": "as you replicate data how does a",
    "start": "577519",
    "end": "579600"
  },
  {
    "text": "replication work i talked about it in",
    "start": "579600",
    "end": "581040"
  },
  {
    "text": "the course right",
    "start": "581040",
    "end": "583360"
  },
  {
    "text": "as i insert data into my primary in node",
    "start": "583360",
    "end": "588240"
  },
  {
    "text": "i create entries in what we call the",
    "start": "588240",
    "end": "590560"
  },
  {
    "text": "wall the writer headlock",
    "start": "590560",
    "end": "592720"
  },
  {
    "text": "and i'm writing writing writing i'm",
    "start": "592720",
    "end": "595120"
  },
  {
    "text": "writing to the wall in my primary",
    "start": "595120",
    "end": "597279"
  },
  {
    "text": "database",
    "start": "597279",
    "end": "598399"
  },
  {
    "text": "and then i i'm writing a huge lot of",
    "start": "598399",
    "end": "600560"
  },
  {
    "text": "stuff if it's a long transaction then",
    "start": "600560",
    "end": "602720"
  },
  {
    "text": "once i say commit we ship this wall",
    "start": "602720",
    "end": "605920"
  },
  {
    "text": "all the way to the replicas all the read",
    "start": "605920",
    "end": "608079"
  },
  {
    "text": "replicas that we talked about well if",
    "start": "608079",
    "end": "610160"
  },
  {
    "text": "it's large",
    "start": "610160",
    "end": "611519"
  },
  {
    "text": "even with wall compression then still it",
    "start": "611519",
    "end": "613440"
  },
  {
    "text": "was going to take time to ship them",
    "start": "613440",
    "end": "615360"
  },
  {
    "text": "through the network",
    "start": "615360",
    "end": "616959"
  },
  {
    "text": "what",
    "start": "616959",
    "end": "617760"
  },
  {
    "text": "this feature does is as you",
    "start": "617760",
    "end": "621040"
  },
  {
    "text": "write to the wall they're going to",
    "start": "621040",
    "end": "622720"
  },
  {
    "text": "stream in",
    "start": "622720",
    "end": "624000"
  },
  {
    "text": "these changes to the read replicas",
    "start": "624000",
    "end": "626880"
  },
  {
    "text": "this way when you the moment you commit",
    "start": "626880",
    "end": "630880"
  },
  {
    "text": "even in the in the primary and you",
    "start": "630880",
    "end": "632720"
  },
  {
    "text": "commit in the replicas",
    "start": "632720",
    "end": "634640"
  },
  {
    "text": "they have pretty much everything because",
    "start": "634640",
    "end": "636959"
  },
  {
    "text": "we have as we progress the transaction",
    "start": "636959",
    "end": "640000"
  },
  {
    "text": "we have already uh",
    "start": "640000",
    "end": "642720"
  },
  {
    "text": "streamed everything so the commits are",
    "start": "642720",
    "end": "644959"
  },
  {
    "text": "much much faster",
    "start": "644959",
    "end": "646399"
  },
  {
    "text": "obviously the disadvantage here in case",
    "start": "646399",
    "end": "648160"
  },
  {
    "text": "of a rollback",
    "start": "648160",
    "end": "649519"
  },
  {
    "text": "imagine doing all the work only to roll",
    "start": "649519",
    "end": "652079"
  },
  {
    "text": "back so you have to roll back this stuff",
    "start": "652079",
    "end": "654880"
  },
  {
    "text": "you wasted a lot of network resources",
    "start": "654880",
    "end": "657040"
  },
  {
    "text": "that shouldn't have been sent but it's a",
    "start": "657040",
    "end": "660320"
  },
  {
    "text": "double-edged sword it's up to you if you",
    "start": "660320",
    "end": "662320"
  },
  {
    "text": "know that you don't roll back as fast as",
    "start": "662320",
    "end": "664320"
  },
  {
    "text": "often this is a good feature i think",
    "start": "664320",
    "end": "667040"
  },
  {
    "text": "and there's a lot of data wrapper at the",
    "start": "667040",
    "end": "669040"
  },
  {
    "text": "query parallelism here for remote",
    "start": "669040",
    "end": "671360"
  },
  {
    "text": "databases a lot of cool stuff in",
    "start": "671360",
    "end": "674000"
  },
  {
    "text": "postgres 14 so yeah guys let us know let",
    "start": "674000",
    "end": "677279"
  },
  {
    "text": "me know if you're using amazon aurora",
    "start": "677279",
    "end": "679279"
  },
  {
    "text": "and if you're gonna ever take advantage",
    "start": "679279",
    "end": "681040"
  },
  {
    "text": "of postgres14 amazon aurora i'm gonna",
    "start": "681040",
    "end": "682959"
  },
  {
    "text": "see you in the next one you guys stay",
    "start": "682959",
    "end": "684160"
  },
  {
    "text": "awesome bye",
    "start": "684160",
    "end": "687720"
  }
]