[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "what's going on guys my name is jose and",
    "start": "160",
    "end": "2480"
  },
  {
    "text": "i wanted to do a quick video",
    "start": "2480",
    "end": "4160"
  },
  {
    "text": "uh to discuss this topic which is very",
    "start": "4160",
    "end": "6960"
  },
  {
    "text": "interesting to me",
    "start": "6960",
    "end": "8160"
  },
  {
    "text": "and i think um anyone who works with",
    "start": "8160",
    "end": "10960"
  },
  {
    "text": "databases should really understand",
    "start": "10960",
    "end": "13200"
  },
  {
    "text": "the underlining uh data structure of",
    "start": "13200",
    "end": "16560"
  },
  {
    "text": "how databases store stuff because",
    "start": "16560",
    "end": "19680"
  },
  {
    "text": "it will really become really handy when",
    "start": "19680",
    "end": "21920"
  },
  {
    "text": "you scale",
    "start": "21920",
    "end": "23199"
  },
  {
    "text": "it will really become handy when you",
    "start": "23199",
    "end": "25199"
  },
  {
    "text": "design your backend application",
    "start": "25199",
    "end": "28000"
  },
  {
    "text": "how your queries uh actually access the",
    "start": "28000",
    "end": "31760"
  },
  {
    "text": "path",
    "start": "31760",
    "end": "32398"
  },
  {
    "text": "of uh your your",
    "start": "32399",
    "end": "35680"
  },
  {
    "text": "path and then you're pulling the data",
    "start": "35680",
    "end": "37840"
  },
  {
    "text": "how how the planner actually makes",
    "start": "37840",
    "end": "39920"
  },
  {
    "text": "decision",
    "start": "39920",
    "end": "40640"
  },
  {
    "text": "and all of this really comes down to",
    "start": "40640",
    "end": "42960"
  },
  {
    "text": "indexes",
    "start": "42960",
    "end": "44559"
  },
  {
    "text": "and in this video i want to discuss how",
    "start": "44559",
    "end": "47280"
  },
  {
    "text": "specifically just postgres",
    "start": "47280",
    "end": "49520"
  },
  {
    "text": "and how mysql specifically",
    "start": "49520",
    "end": "53760"
  },
  {
    "text": "anodb as a database engine in mysql",
    "start": "53760",
    "end": "57600"
  },
  {
    "text": "stores their indexes",
    "start": "57600",
    "end": "60640"
  },
  {
    "start": "60000",
    "end": "120000"
  },
  {
    "text": "before we jump into that we need to",
    "start": "60640",
    "end": "62480"
  },
  {
    "text": "understand",
    "start": "62480",
    "end": "63680"
  },
  {
    "text": "the basic architecture of tables",
    "start": "63680",
    "end": "66720"
  },
  {
    "text": "so if i create a beautiful table on my",
    "start": "66720",
    "end": "69920"
  },
  {
    "text": "database",
    "start": "69920",
    "end": "70799"
  },
  {
    "text": "what does that mean right a table has",
    "start": "70799",
    "end": "73680"
  },
  {
    "text": "well",
    "start": "73680",
    "end": "74240"
  },
  {
    "text": "it has columns and then and each column",
    "start": "74240",
    "end": "76880"
  },
  {
    "text": "will have a specific",
    "start": "76880",
    "end": "78560"
  },
  {
    "text": "data type which is integer string and",
    "start": "78560",
    "end": "81680"
  },
  {
    "text": "then",
    "start": "81680",
    "end": "82000"
  },
  {
    "text": "and number dates right",
    "start": "82000",
    "end": "85200"
  },
  {
    "text": "jason i heard the uh is a good data type",
    "start": "85200",
    "end": "88159"
  },
  {
    "text": "these days and you guys convinced me",
    "start": "88159",
    "end": "89520"
  },
  {
    "text": "that's actually a good idea to",
    "start": "89520",
    "end": "90960"
  },
  {
    "text": "to store json as a as a i just did it so",
    "start": "90960",
    "end": "93920"
  },
  {
    "text": "yeah",
    "start": "93920",
    "end": "94479"
  },
  {
    "text": "a table will have multiple columns and",
    "start": "94479",
    "end": "96560"
  },
  {
    "text": "each column will have a specific",
    "start": "96560",
    "end": "98400"
  },
  {
    "text": "size and that decide the row size and",
    "start": "98400",
    "end": "101920"
  },
  {
    "text": "that row size will become either dynamic",
    "start": "101920",
    "end": "104000"
  },
  {
    "text": "or",
    "start": "104000",
    "end": "104399"
  },
  {
    "text": "static based on how you defined it right",
    "start": "104399",
    "end": "107600"
  },
  {
    "text": "var char versus just normal text and so",
    "start": "107600",
    "end": "110240"
  },
  {
    "text": "on",
    "start": "110240",
    "end": "110960"
  },
  {
    "text": "and then and that the table is is huge",
    "start": "110960",
    "end": "113759"
  },
  {
    "text": "that is structure just big and it's",
    "start": "113759",
    "end": "115439"
  },
  {
    "text": "usually stored in disk and",
    "start": "115439",
    "end": "117280"
  },
  {
    "text": "unless you can put it in memory which is",
    "start": "117280",
    "end": "119360"
  },
  {
    "text": "awesome",
    "start": "119360",
    "end": "120320"
  },
  {
    "start": "120000",
    "end": "200000"
  },
  {
    "text": "for fast access queries but usually it's",
    "start": "120320",
    "end": "122719"
  },
  {
    "text": "in this because",
    "start": "122719",
    "end": "123920"
  },
  {
    "text": "it's a blob huge of just plop right",
    "start": "123920",
    "end": "128800"
  },
  {
    "text": "so now it comes to indexes",
    "start": "128800",
    "end": "132000"
  },
  {
    "text": "index and i made a video about index",
    "start": "132000",
    "end": "134239"
  },
  {
    "text": "check out this video right here to learn",
    "start": "134239",
    "end": "135840"
  },
  {
    "text": "more about them but",
    "start": "135840",
    "end": "136879"
  },
  {
    "text": "an index is is basically a date another",
    "start": "136879",
    "end": "140000"
  },
  {
    "text": "data structure different than the table",
    "start": "140000",
    "end": "141920"
  },
  {
    "text": "that tells us",
    "start": "141920",
    "end": "143120"
  },
  {
    "text": "hey where exactly",
    "start": "143120",
    "end": "146319"
  },
  {
    "text": "the rows i'm searching for are right",
    "start": "146319",
    "end": "149920"
  },
  {
    "text": "and then the easiest way i understand",
    "start": "149920",
    "end": "151840"
  },
  {
    "text": "the indexes is like you know these",
    "start": "151840",
    "end": "155200"
  },
  {
    "text": "alphabetical uh dividers binder dividers",
    "start": "155200",
    "end": "159280"
  },
  {
    "text": "which i say a",
    "start": "159280",
    "end": "160239"
  },
  {
    "text": "b c d e e and tell z right and then",
    "start": "160239",
    "end": "163519"
  },
  {
    "text": "you're searching for",
    "start": "163519",
    "end": "165120"
  },
  {
    "text": "a specific like you know company or",
    "start": "165120",
    "end": "167360"
  },
  {
    "text": "phone number right",
    "start": "167360",
    "end": "168720"
  },
  {
    "text": "so if you're searching for a company uh",
    "start": "168720",
    "end": "172239"
  },
  {
    "text": "zebra i don't know those companies so",
    "start": "172239",
    "end": "174720"
  },
  {
    "text": "you will",
    "start": "174720",
    "end": "175440"
  },
  {
    "text": "jump to the z divider and then start",
    "start": "175440",
    "end": "178959"
  },
  {
    "text": "searching for that so you have a smaller",
    "start": "178959",
    "end": "181200"
  },
  {
    "text": "subset so what the index does in this",
    "start": "181200",
    "end": "183519"
  },
  {
    "text": "case is actually stores",
    "start": "183519",
    "end": "185680"
  },
  {
    "text": "a pointer to the first row",
    "start": "185680",
    "end": "189040"
  },
  {
    "text": "in in where the z starts essentially so",
    "start": "189040",
    "end": "192400"
  },
  {
    "text": "that's essentially",
    "start": "192400",
    "end": "193440"
  },
  {
    "text": "how the index is always like a pointer",
    "start": "193440",
    "end": "195440"
  },
  {
    "text": "so the row the table the big",
    "start": "195440",
    "end": "197280"
  },
  {
    "text": "stuff and there's the another data",
    "start": "197280",
    "end": "198959"
  },
  {
    "text": "structure that you can",
    "start": "198959",
    "end": "200319"
  },
  {
    "start": "200000",
    "end": "300000"
  },
  {
    "text": "have a quick and access index and it",
    "start": "200319",
    "end": "203040"
  },
  {
    "text": "points to that",
    "start": "203040",
    "end": "204799"
  },
  {
    "text": "not every database does that though",
    "start": "204799",
    "end": "208239"
  },
  {
    "text": "how about we start with postgres every",
    "start": "208239",
    "end": "211360"
  },
  {
    "text": "index you",
    "start": "211360",
    "end": "212159"
  },
  {
    "text": "create in postgres does exactly that",
    "start": "212159",
    "end": "216480"
  },
  {
    "text": "so if you create an index on column a",
    "start": "216480",
    "end": "220239"
  },
  {
    "text": "it's going to create that data structure",
    "start": "220239",
    "end": "222400"
  },
  {
    "text": "for you it's a beautiful data structure",
    "start": "222400",
    "end": "223920"
  },
  {
    "text": "and",
    "start": "223920",
    "end": "224640"
  },
  {
    "text": "each leaf each uh",
    "start": "224640",
    "end": "227840"
  },
  {
    "text": "entry will be pointing directly to the",
    "start": "227840",
    "end": "231599"
  },
  {
    "text": "table directly to a to a unique",
    "start": "231599",
    "end": "235519"
  },
  {
    "text": "identifier in the in the in the table",
    "start": "235519",
    "end": "238159"
  },
  {
    "text": "that's not the primary key necessarily",
    "start": "238159",
    "end": "240400"
  },
  {
    "text": "that's just a row that is most of the",
    "start": "240400",
    "end": "242239"
  },
  {
    "text": "time it's invisible",
    "start": "242239",
    "end": "243840"
  },
  {
    "text": "and postcards i think it's called the",
    "start": "243840",
    "end": "245280"
  },
  {
    "text": "topple id so that's",
    "start": "245280",
    "end": "247360"
  },
  {
    "text": "that's the data structure so if you",
    "start": "247360",
    "end": "248560"
  },
  {
    "text": "write an index it points to the row",
    "start": "248560",
    "end": "250959"
  },
  {
    "text": "you might say what's the problem with",
    "start": "250959",
    "end": "252319"
  },
  {
    "text": "that no really no no problem but just",
    "start": "252319",
    "end": "254799"
  },
  {
    "text": "pay attention to that",
    "start": "254799",
    "end": "255840"
  },
  {
    "text": "if i create another index postcard what",
    "start": "255840",
    "end": "258239"
  },
  {
    "text": "is going to do",
    "start": "258239",
    "end": "259440"
  },
  {
    "text": "it also still points to the table",
    "start": "259440",
    "end": "263120"
  },
  {
    "text": "directly you see a pattern here right",
    "start": "263120",
    "end": "267680"
  },
  {
    "text": "the more indexes you create all of these",
    "start": "267680",
    "end": "270400"
  },
  {
    "text": "are actually pointing to the table",
    "start": "270400",
    "end": "272080"
  },
  {
    "text": "which is pretty neat so and then that's",
    "start": "272080",
    "end": "274400"
  },
  {
    "text": "what we that makes sense right if i'm",
    "start": "274400",
    "end": "276080"
  },
  {
    "text": "searching something in this index",
    "start": "276080",
    "end": "277600"
  },
  {
    "text": "i find it i jump to the table i pull",
    "start": "277600",
    "end": "281440"
  },
  {
    "text": "if i need to jump to the table that's",
    "start": "281440",
    "end": "283759"
  },
  {
    "text": "what's called index only scan versus an",
    "start": "283759",
    "end": "285759"
  },
  {
    "text": "index scan",
    "start": "285759",
    "end": "286960"
  },
  {
    "text": "right and then if i only need to jump a",
    "start": "286960",
    "end": "289120"
  },
  {
    "text": "table um i know",
    "start": "289120",
    "end": "290400"
  },
  {
    "text": "where to find my data",
    "start": "290400",
    "end": "293520"
  },
  {
    "text": "so indexes and postgres all point to the",
    "start": "293520",
    "end": "295840"
  },
  {
    "text": "table directly",
    "start": "295840",
    "end": "298720"
  },
  {
    "start": "300000",
    "end": "395000"
  },
  {
    "text": "mysql and specifically anodb in mysql",
    "start": "300800",
    "end": "304720"
  },
  {
    "text": "because",
    "start": "304720",
    "end": "305840"
  },
  {
    "text": "mysql has other database engines",
    "start": "305840",
    "end": "309039"
  },
  {
    "text": "that you can swizzle and can change",
    "start": "309039",
    "end": "310720"
  },
  {
    "text": "which is something i love",
    "start": "310720",
    "end": "312560"
  },
  {
    "text": "in my sequel and and mariadb",
    "start": "312560",
    "end": "315600"
  },
  {
    "text": "something you don't see in other",
    "start": "315600",
    "end": "316800"
  },
  {
    "text": "databases we can swizzle the database",
    "start": "316800",
    "end": "318960"
  },
  {
    "text": "engine of a table to be something",
    "start": "318960",
    "end": "320560"
  },
  {
    "text": "completely different",
    "start": "320560",
    "end": "321840"
  },
  {
    "text": "my asm is a different database engine",
    "start": "321840",
    "end": "325280"
  },
  {
    "text": "that it works exactly almost like like",
    "start": "325280",
    "end": "328479"
  },
  {
    "text": "postgres",
    "start": "328479",
    "end": "329120"
  },
  {
    "text": "it points directly to the table each",
    "start": "329120",
    "end": "331360"
  },
  {
    "text": "index you create it pose to the table",
    "start": "331360",
    "end": "333520"
  },
  {
    "text": "anodb which is the default mysql engine",
    "start": "333520",
    "end": "337280"
  },
  {
    "text": "doesn't do that there is always a",
    "start": "337280",
    "end": "340400"
  },
  {
    "text": "primary key",
    "start": "340400",
    "end": "341680"
  },
  {
    "text": "in the table and when you create that",
    "start": "341680",
    "end": "344560"
  },
  {
    "text": "primary key or",
    "start": "344560",
    "end": "345440"
  },
  {
    "text": "if you don't anodb or mysql creates one",
    "start": "345440",
    "end": "348560"
  },
  {
    "text": "for you",
    "start": "348560",
    "end": "349520"
  },
  {
    "text": "and then that primary key index",
    "start": "349520",
    "end": "352960"
  },
  {
    "text": "points to the table right but",
    "start": "352960",
    "end": "356400"
  },
  {
    "text": "any secondary index you create or any",
    "start": "356400",
    "end": "359440"
  },
  {
    "text": "other index you create",
    "start": "359440",
    "end": "361039"
  },
  {
    "text": "does not point to the table directly it",
    "start": "361039",
    "end": "363600"
  },
  {
    "text": "points",
    "start": "363600",
    "end": "364319"
  },
  {
    "text": "to the primary key value which",
    "start": "364319",
    "end": "367199"
  },
  {
    "text": "corresponds",
    "start": "367199",
    "end": "368880"
  },
  {
    "text": "to the table",
    "start": "368880",
    "end": "371520"
  },
  {
    "text": "multiple hops there's",
    "start": "372080",
    "end": "376080"
  },
  {
    "text": "there's a design careful design choice",
    "start": "376080",
    "end": "379039"
  },
  {
    "text": "for both",
    "start": "379039",
    "end": "381039"
  },
  {
    "text": "and let's let's explore both of them so",
    "start": "381039",
    "end": "382479"
  },
  {
    "text": "we know postgres",
    "start": "382479",
    "end": "384720"
  },
  {
    "text": "every index point to the table directly",
    "start": "384720",
    "end": "388160"
  },
  {
    "text": "mysql every index point to the primary",
    "start": "388160",
    "end": "391120"
  },
  {
    "text": "key and the primary key",
    "start": "391120",
    "end": "392319"
  },
  {
    "text": "is the only index that points to the",
    "start": "392319",
    "end": "394319"
  },
  {
    "text": "table so now if i did an update",
    "start": "394319",
    "end": "396880"
  },
  {
    "start": "395000",
    "end": "440000"
  },
  {
    "text": "in both databases and i",
    "start": "396880",
    "end": "400960"
  },
  {
    "text": "updated a row right",
    "start": "400960",
    "end": "404240"
  },
  {
    "text": "or deleted it all",
    "start": "404240",
    "end": "407199"
  },
  {
    "text": "in postgres if i deleted a row right",
    "start": "407759",
    "end": "412240"
  },
  {
    "text": "and and that row doesn't exist anymore i",
    "start": "412240",
    "end": "414639"
  },
  {
    "text": "have to tell",
    "start": "414639",
    "end": "415440"
  },
  {
    "text": "index number one index number two index",
    "start": "415440",
    "end": "417440"
  },
  {
    "text": "number three index number four and",
    "start": "417440",
    "end": "418639"
  },
  {
    "text": "example six",
    "start": "418639",
    "end": "419759"
  },
  {
    "text": "that that row doesn't exist because",
    "start": "419759",
    "end": "421520"
  },
  {
    "text": "guess what all of them actually",
    "start": "421520",
    "end": "423599"
  },
  {
    "text": "are aware i are raw aware are aware of",
    "start": "423599",
    "end": "427039"
  },
  {
    "text": "this table",
    "start": "427039",
    "end": "428080"
  },
  {
    "text": "so there are dependencies so volska's",
    "start": "428080",
    "end": "430960"
  },
  {
    "text": "when you update this it actually goes",
    "start": "430960",
    "end": "432240"
  },
  {
    "text": "and updates",
    "start": "432240",
    "end": "434080"
  },
  {
    "text": "all indexes that doesn't mean it's slow",
    "start": "434080",
    "end": "436880"
  },
  {
    "text": "or bad it's just",
    "start": "436880",
    "end": "438160"
  },
  {
    "text": "that's what it does right",
    "start": "438160",
    "end": "442000"
  },
  {
    "start": "440000",
    "end": "540000"
  },
  {
    "text": "and mysql when you update",
    "start": "442240",
    "end": "446160"
  },
  {
    "text": "a row or delete a row",
    "start": "446160",
    "end": "449199"
  },
  {
    "text": "it just updates the primary key right",
    "start": "449199",
    "end": "452000"
  },
  {
    "text": "because that's that's the only thing we",
    "start": "452000",
    "end": "453440"
  },
  {
    "text": "need to do",
    "start": "453440",
    "end": "454560"
  },
  {
    "text": "because these guys will still point to",
    "start": "454560",
    "end": "457039"
  },
  {
    "text": "the pri of to the to the to the primary",
    "start": "457039",
    "end": "459120"
  },
  {
    "text": "key indus and that's it",
    "start": "459120",
    "end": "460560"
  },
  {
    "text": "they they don't have they are not aware",
    "start": "460560",
    "end": "462560"
  },
  {
    "text": "that our row has been",
    "start": "462560",
    "end": "464560"
  },
  {
    "text": "deleted right so that's as long as",
    "start": "464560",
    "end": "468240"
  },
  {
    "text": "you don't touch a specific value",
    "start": "468240",
    "end": "471440"
  },
  {
    "text": "like for for example if you updated",
    "start": "471440",
    "end": "474879"
  },
  {
    "text": "another column in a row that",
    "start": "474879",
    "end": "479280"
  },
  {
    "text": "the index which oh no on which this is",
    "start": "479280",
    "end": "482479"
  },
  {
    "text": "created need to be aware right and that",
    "start": "482479",
    "end": "485520"
  },
  {
    "text": "is in that case",
    "start": "485520",
    "end": "486960"
  },
  {
    "text": "you will need to update that index",
    "start": "486960",
    "end": "489039"
  },
  {
    "text": "anyway but only",
    "start": "489039",
    "end": "490720"
  },
  {
    "text": "the index that you actually touch for",
    "start": "490720",
    "end": "493360"
  },
  {
    "text": "the columns you touched",
    "start": "493360",
    "end": "494479"
  },
  {
    "text": "right so that's that's how things work",
    "start": "494479",
    "end": "496560"
  },
  {
    "text": "in general so",
    "start": "496560",
    "end": "498479"
  },
  {
    "text": "hey guys hussein from editing and i",
    "start": "498479",
    "end": "501280"
  },
  {
    "text": "forgot to mention one thing",
    "start": "501280",
    "end": "502720"
  },
  {
    "text": "in my sequel remember every index points",
    "start": "502720",
    "end": "505440"
  },
  {
    "text": "to the",
    "start": "505440",
    "end": "506400"
  },
  {
    "text": "primary key and primary key point to the",
    "start": "506400",
    "end": "508639"
  },
  {
    "text": "table so",
    "start": "508639",
    "end": "509840"
  },
  {
    "text": "if you did a lot of updates on the",
    "start": "509840",
    "end": "511919"
  },
  {
    "text": "primary key guess what will happen",
    "start": "511919",
    "end": "514479"
  },
  {
    "text": "every single index will need to be",
    "start": "514479",
    "end": "516800"
  },
  {
    "text": "updated",
    "start": "516800",
    "end": "517680"
  },
  {
    "text": "so really careful while updating",
    "start": "517680",
    "end": "522000"
  },
  {
    "text": "primary keys in my sequel so that's",
    "start": "522000",
    "end": "524480"
  },
  {
    "text": "another kind of",
    "start": "524480",
    "end": "526640"
  },
  {
    "text": "something to be aware of i'm not going",
    "start": "526640",
    "end": "528399"
  },
  {
    "text": "to say limitation",
    "start": "528399",
    "end": "530640"
  },
  {
    "text": "but just something to be getting aware",
    "start": "530640",
    "end": "532080"
  },
  {
    "text": "of back to video",
    "start": "532080",
    "end": "534880"
  },
  {
    "text": "in updates in my sequel versus postgres",
    "start": "534880",
    "end": "538399"
  },
  {
    "text": "you can see that it's a little bit less",
    "start": "538399",
    "end": "541440"
  },
  {
    "start": "540000",
    "end": "580000"
  },
  {
    "text": "scattered",
    "start": "541440",
    "end": "543920"
  },
  {
    "text": "reads however if i read",
    "start": "544240",
    "end": "548160"
  },
  {
    "text": "in in in postgres using an index",
    "start": "548160",
    "end": "553200"
  },
  {
    "text": "i'm going to find the value i want and",
    "start": "553200",
    "end": "555920"
  },
  {
    "text": "if i ask for a row that doesn't exist in",
    "start": "555920",
    "end": "558080"
  },
  {
    "text": "an index",
    "start": "558080",
    "end": "558959"
  },
  {
    "text": "it's not including the index i have to",
    "start": "558959",
    "end": "560640"
  },
  {
    "text": "jump to the table",
    "start": "560640",
    "end": "562320"
  },
  {
    "text": "and i can jump very quickly because i",
    "start": "562320",
    "end": "564240"
  },
  {
    "text": "immediately look at the",
    "start": "564240",
    "end": "566000"
  },
  {
    "text": "at the table i have the row that points",
    "start": "566000",
    "end": "568160"
  },
  {
    "text": "to the table directly and i read it",
    "start": "568160",
    "end": "570000"
  },
  {
    "text": "so reads are in postgres are extremely",
    "start": "570000",
    "end": "572160"
  },
  {
    "text": "fast does not mean that",
    "start": "572160",
    "end": "575760"
  },
  {
    "text": "reads on mysql or slows just just",
    "start": "575760",
    "end": "578480"
  },
  {
    "text": "understand how they",
    "start": "578480",
    "end": "579519"
  },
  {
    "text": "how things work right so now if i'm",
    "start": "579519",
    "end": "582160"
  },
  {
    "start": "580000",
    "end": "782000"
  },
  {
    "text": "reading",
    "start": "582160",
    "end": "584399"
  },
  {
    "text": "a particular",
    "start": "584399",
    "end": "587600"
  },
  {
    "text": "table in my sequel and i'm using a",
    "start": "587839",
    "end": "589760"
  },
  {
    "text": "specific index",
    "start": "589760",
    "end": "591839"
  },
  {
    "text": "and i found what i'm looking for i",
    "start": "591839",
    "end": "593839"
  },
  {
    "text": "cannot jump and i need another value to",
    "start": "593839",
    "end": "596480"
  },
  {
    "text": "select from the table",
    "start": "596480",
    "end": "598160"
  },
  {
    "text": "i cannot jump to the table directly",
    "start": "598160",
    "end": "601279"
  },
  {
    "text": "i have to jump to the primary key index",
    "start": "601279",
    "end": "605279"
  },
  {
    "text": "and then from the primary key index",
    "start": "605279",
    "end": "608720"
  },
  {
    "text": "i get the row and then i jump to that",
    "start": "608720",
    "end": "611519"
  },
  {
    "text": "there is",
    "start": "611519",
    "end": "612399"
  },
  {
    "text": "an extra hop so",
    "start": "612399",
    "end": "615760"
  },
  {
    "text": "reads are a little bit",
    "start": "615760",
    "end": "619600"
  },
  {
    "text": "tiny bit slower sometimes it's",
    "start": "619600",
    "end": "622800"
  },
  {
    "text": "unnoticeable but just understand",
    "start": "622800",
    "end": "625360"
  },
  {
    "text": "if you're doing this a lot understand",
    "start": "625360",
    "end": "627920"
  },
  {
    "text": "what's going on",
    "start": "627920",
    "end": "628720"
  },
  {
    "text": "so if you're but but the beauty of this",
    "start": "628720",
    "end": "630800"
  },
  {
    "text": "if you're selecting the primary key a",
    "start": "630800",
    "end": "632640"
  },
  {
    "text": "lot",
    "start": "632640",
    "end": "633279"
  },
  {
    "text": "in my sequel that's really beneficial",
    "start": "633279",
    "end": "635760"
  },
  {
    "text": "because the primary key is",
    "start": "635760",
    "end": "637360"
  },
  {
    "text": "almost always included with every index",
    "start": "637360",
    "end": "640640"
  },
  {
    "text": "so that choice of what becomes the",
    "start": "640640",
    "end": "644079"
  },
  {
    "text": "primary key in anodb becomes really",
    "start": "644079",
    "end": "646000"
  },
  {
    "text": "critical and it can boost your",
    "start": "646000",
    "end": "648240"
  },
  {
    "text": "performance in an",
    "start": "648240",
    "end": "649360"
  },
  {
    "text": "in an amazing manner",
    "start": "649360",
    "end": "653120"
  },
  {
    "text": "while impulse grace reads are fast right",
    "start": "653120",
    "end": "655920"
  },
  {
    "text": "because",
    "start": "655920",
    "end": "656800"
  },
  {
    "text": "and any heap value",
    "start": "656800",
    "end": "660480"
  },
  {
    "text": "pulls like pulling from the heap or",
    "start": "660480",
    "end": "662959"
  },
  {
    "text": "pulling from the table",
    "start": "662959",
    "end": "664480"
  },
  {
    "text": "are also pretty extremely good",
    "start": "664480",
    "end": "667600"
  },
  {
    "text": "because you're pulling to the table",
    "start": "667600",
    "end": "669360"
  },
  {
    "text": "directly right",
    "start": "669360",
    "end": "670640"
  },
  {
    "text": "obviously doing it over over doing it",
    "start": "670640",
    "end": "673279"
  },
  {
    "text": "overdoing",
    "start": "673279",
    "end": "673920"
  },
  {
    "text": "everything is just basically slower but",
    "start": "673920",
    "end": "676160"
  },
  {
    "text": "that's just",
    "start": "676160",
    "end": "677120"
  },
  {
    "text": "very some something that's very",
    "start": "677120",
    "end": "678480"
  },
  {
    "text": "interesting to understand",
    "start": "678480",
    "end": "680320"
  },
  {
    "text": "when you when you deal with these things",
    "start": "680320",
    "end": "682160"
  },
  {
    "text": "right so postgres",
    "start": "682160",
    "end": "684079"
  },
  {
    "text": "updating a lot of froze",
    "start": "684079",
    "end": "687200"
  },
  {
    "text": "or deleting a lot of rows",
    "start": "687200",
    "end": "690240"
  },
  {
    "text": "might trigger a lot of update to a lot",
    "start": "690240",
    "end": "693600"
  },
  {
    "text": "of indexes so just",
    "start": "693600",
    "end": "694880"
  },
  {
    "text": "pay attention to that when you do that",
    "start": "694880",
    "end": "698800"
  },
  {
    "text": "and that's it that's what i wanted to",
    "start": "699839",
    "end": "701360"
  },
  {
    "text": "talk about obviously i want to make this",
    "start": "701360",
    "end": "703760"
  },
  {
    "text": "video short what do you guys think there",
    "start": "703760",
    "end": "706640"
  },
  {
    "text": "is",
    "start": "706640",
    "end": "706959"
  },
  {
    "text": "always a choice between postgres and",
    "start": "706959",
    "end": "708640"
  },
  {
    "text": "mysql on any other database",
    "start": "708640",
    "end": "710639"
  },
  {
    "text": "doesn't mean postgres is bad doesn't",
    "start": "710639",
    "end": "712480"
  },
  {
    "text": "mean see my sequel",
    "start": "712480",
    "end": "714480"
  },
  {
    "text": "is is good doesn't mean anything it",
    "start": "714480",
    "end": "717120"
  },
  {
    "text": "really depends on what you're trying to",
    "start": "717120",
    "end": "718480"
  },
  {
    "text": "do",
    "start": "718480",
    "end": "719600"
  },
  {
    "text": "uber i believe one of their main",
    "start": "719600",
    "end": "722320"
  },
  {
    "text": "concerns of moving from postgres to or",
    "start": "722320",
    "end": "724480"
  },
  {
    "text": "to mysql is exactly that",
    "start": "724480",
    "end": "726480"
  },
  {
    "text": "they had tons of indexes i was surprised",
    "start": "726480",
    "end": "729519"
  },
  {
    "text": "like why do you have",
    "start": "729519",
    "end": "730560"
  },
  {
    "text": "this much indexes like too much indexes",
    "start": "730560",
    "end": "734399"
  },
  {
    "text": "too many indexes and as a result",
    "start": "734399",
    "end": "737120"
  },
  {
    "text": "touching",
    "start": "737120",
    "end": "738079"
  },
  {
    "text": "rows if they had to touch a lot of rows",
    "start": "738079",
    "end": "739839"
  },
  {
    "text": "they've updated a lot of rows",
    "start": "739839",
    "end": "743040"
  },
  {
    "text": "it just just thrashed all the indexes",
    "start": "743040",
    "end": "745600"
  },
  {
    "text": "because it needs to update all the index",
    "start": "745600",
    "end": "747120"
  },
  {
    "text": "you need to let everybody",
    "start": "747120",
    "end": "748959"
  },
  {
    "text": "that points to the table know that",
    "start": "748959",
    "end": "751120"
  },
  {
    "text": "something has changed right",
    "start": "751120",
    "end": "753200"
  },
  {
    "text": "especially if you update if you insert",
    "start": "753200",
    "end": "756320"
  },
  {
    "text": "if you update these",
    "start": "756320",
    "end": "757440"
  },
  {
    "text": "these things are all scatting everywhere",
    "start": "757440",
    "end": "760399"
  },
  {
    "text": "and postgres is like",
    "start": "760399",
    "end": "761760"
  },
  {
    "text": "it's a little bit different when when it",
    "start": "761760",
    "end": "764079"
  },
  {
    "text": "comes to updating versus deleting the",
    "start": "764079",
    "end": "766160"
  },
  {
    "text": "they keep the rows alive for mvcc",
    "start": "766160",
    "end": "768959"
  },
  {
    "text": "reasons",
    "start": "768959",
    "end": "769680"
  },
  {
    "text": "all right guys going to give the video",
    "start": "769680",
    "end": "771519"
  },
  {
    "text": "short i'm gonna see on the next one",
    "start": "771519",
    "end": "773920"
  },
  {
    "text": "what do you think about these two",
    "start": "773920",
    "end": "775120"
  },
  {
    "text": "beautiful databases what do you prefer",
    "start": "775120",
    "end": "777120"
  },
  {
    "text": "let me know in the comment section below",
    "start": "777120",
    "end": "779360"
  },
  {
    "text": "i'm gonna see you in the next one you",
    "start": "779360",
    "end": "780639"
  },
  {
    "text": "guys",
    "start": "780639",
    "end": "780959"
  },
  {
    "text": "awesome goodbye",
    "start": "780959",
    "end": "783680"
  }
]