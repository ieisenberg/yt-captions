[
  {
    "start": "0",
    "end": "255000"
  },
  {
    "text": "certificates are pieces of data that the server Exchange",
    "start": "0",
    "end": "5480"
  },
  {
    "text": "during the TLs handshake when the client tries to connect to that server to",
    "start": "5480",
    "end": "11580"
  },
  {
    "text": "authenticates of to make sure that hey client you're actually talking to the",
    "start": "11580",
    "end": "18960"
  },
  {
    "text": "right guy okay and why are we so paranoid about this why do we need a",
    "start": "18960",
    "end": "24539"
  },
  {
    "text": "certificate and the reason we need a certificate is because ipe packets that we transmit passes by",
    "start": "24539",
    "end": "32520"
  },
  {
    "text": "so many computers and routers and we do not trust these computers or routers and",
    "start": "32520",
    "end": "38340"
  },
  {
    "text": "gateways and proxies right because people can just fiddle and change things",
    "start": "38340",
    "end": "43739"
  },
  {
    "text": "in the public Internet it's sufficient to only trust the server authentication",
    "start": "43739",
    "end": "50340"
  },
  {
    "text": "you know that's enough for us uh but sometimes you want the client to",
    "start": "50340",
    "end": "56940"
  },
  {
    "text": "actually also authenticate itself in a micro services or environment for instance where Services talk into kind",
    "start": "56940",
    "end": "64500"
  },
  {
    "text": "of a cloud native environment where it's not really trusted if you think about it right then",
    "start": "64500",
    "end": "72900"
  },
  {
    "text": "how do I know that the service I talked to or is talking to me is actually the surface that is talking to me you need a",
    "start": "72900",
    "end": "80280"
  },
  {
    "text": "mutual authentication that's where Mutual TLS comes into the picture and that's I talked about that in the whole",
    "start": "80280",
    "end": "86520"
  },
  {
    "text": "picture but regardless whether it's client-side certificate or server-side certificate",
    "start": "86520",
    "end": "92759"
  },
  {
    "text": "the certificate is really large",
    "start": "92759",
    "end": "99119"
  },
  {
    "text": "why is it large if it's just containing the public key of the server and some",
    "start": "99119",
    "end": "104520"
  },
  {
    "text": "sort of a signature and the domain name is some strings right and the subject",
    "start": "104520",
    "end": "111780"
  },
  {
    "text": "email probably or something like that that's because that's not really what we just sent in the TLs handshake we sent",
    "start": "111780",
    "end": "118860"
  },
  {
    "text": "something called a certificate chain it's a whole chain of certificate because if you just create a certificate",
    "start": "118860",
    "end": "126360"
  },
  {
    "text": "yourself and you send it to me that's not enough to trust you because you",
    "start": "126360",
    "end": "131879"
  },
  {
    "text": "signed your own certificate that's called self sign certificate it's not",
    "start": "131879",
    "end": "137160"
  },
  {
    "text": "really trusted so we need someone who is trusted to sign your certificate and",
    "start": "137160",
    "end": "142319"
  },
  {
    "text": "that's called the certificate Authority which is nothing but just a normal certificate but that certificate",
    "start": "142319",
    "end": "148980"
  },
  {
    "text": "Authority is trusted by another party right and that party is also trusted by",
    "start": "148980",
    "end": "155099"
  },
  {
    "text": "another party another certificate Authority up until we reach something called the",
    "start": "155099",
    "end": "161640"
  },
  {
    "text": "root certificate so until we reach this root certificate is a self-signed certificate that",
    "start": "161640",
    "end": "168959"
  },
  {
    "text": "the private key of that certificate is tucked in hidden somewhere",
    "start": "168959",
    "end": "175200"
  },
  {
    "text": "I believe it's with the Aina Authority if I'm not mistaken but",
    "start": "175200",
    "end": "180540"
  },
  {
    "text": "basically that is a trusted certificate and it's literally installed in all of your computers Global sign is a",
    "start": "180540",
    "end": "189239"
  },
  {
    "text": "root certificate for example right that's one example of a root certificate and and that's basically installed on",
    "start": "189239",
    "end": "195659"
  },
  {
    "text": "your machine and if you detect that route then anything that comes from the",
    "start": "195659",
    "end": "201840"
  },
  {
    "text": "root is essentially trusted and that's how you validate that the servers who",
    "start": "201840",
    "end": "207180"
  },
  {
    "text": "they say they are and that chain is very large and by very large it basically",
    "start": "207180",
    "end": "212400"
  },
  {
    "text": "takes the most of the handshake right and as a result of course it takes time",
    "start": "212400",
    "end": "217800"
  },
  {
    "text": "to transmit and I want to talk about that portion in this episode of the back engineering show and also mention the",
    "start": "217800",
    "end": "225720"
  },
  {
    "text": "ongoing RFC there it is RFC 8879 that is titled TLS certificate compression",
    "start": "225720",
    "end": "233220"
  },
  {
    "text": "because guess what today we do not compress the certificate",
    "start": "233220",
    "end": "238440"
  },
  {
    "text": "we encrypt it with the s1.3 at least I'm going to talk about that but we do not",
    "start": "238440",
    "end": "243480"
  },
  {
    "text": "compress it so that it's it's very large and it has a side effect as a result if",
    "start": "243480",
    "end": "249060"
  },
  {
    "text": "it's something is large it takes time to transmit performance suffer how about we jump",
    "start": "249060",
    "end": "255000"
  },
  {
    "start": "255000",
    "end": "360000"
  },
  {
    "text": "into it and discuss welcome to the back engineering show with your host Jose noser and certificates are",
    "start": "255000",
    "end": "262860"
  },
  {
    "text": "thick really large and and the reason is",
    "start": "262860",
    "end": "268400"
  },
  {
    "text": "spins from the idea of you cannot really trust",
    "start": "268400",
    "end": "274979"
  },
  {
    "text": "anything that you get from a remote party right so we need a third party",
    "start": "274979",
    "end": "280979"
  },
  {
    "text": "kind of a situation where we trust in order to trust that certificate and this",
    "start": "280979",
    "end": "287460"
  },
  {
    "text": "certificate itself which contains the domain name which consider the subject which contains the public key of the",
    "start": "287460",
    "end": "294180"
  },
  {
    "text": "server and then itself it's signed by a certificate Authority and it's the certificate Authority let's encrypt",
    "start": "294180",
    "end": "300960"
  },
  {
    "text": "Google services and digicert is also assigned by another certificate",
    "start": "300960",
    "end": "306240"
  },
  {
    "text": "Authority right could be another certificate Authority it could be the root certificate Authority right",
    "start": "306240",
    "end": "313800"
  },
  {
    "text": "it could be just the root itself the root certificate this chain can get really large",
    "start": "313800",
    "end": "320720"
  },
  {
    "text": "and if you look in any handshake that you have today",
    "start": "320720",
    "end": "326220"
  },
  {
    "text": "you will see if you used Wireshark or TCP Dom",
    "start": "326220",
    "end": "331259"
  },
  {
    "text": "you will see that the certificate chain is around six kilobytes",
    "start": "331259",
    "end": "336780"
  },
  {
    "text": "eight kilobytes sometimes ten the largest I saw was I think 10 kilobytes or maybe 11 kilobytes right",
    "start": "336780",
    "end": "343680"
  },
  {
    "text": "of course there could be larger if you have a certificate Authority that is signed by another certificate Authority",
    "start": "343680",
    "end": "349560"
  },
  {
    "text": "that is signed by another certificate Authority right and also kid and kid get larger if you actually include the cert",
    "start": "349560",
    "end": "356400"
  },
  {
    "text": "the root certificate because let's let's think about it the",
    "start": "356400",
    "end": "361560"
  },
  {
    "start": "360000",
    "end": "530000"
  },
  {
    "text": "real quick here yeah if you say that hey the server will",
    "start": "361560",
    "end": "369060"
  },
  {
    "text": "include the full chain that means value dating the full chain",
    "start": "369060",
    "end": "374820"
  },
  {
    "text": "from the client side should uh be sufficient",
    "start": "374820",
    "end": "383039"
  },
  {
    "text": "correct but that's actually not right",
    "start": "383039",
    "end": "389220"
  },
  {
    "text": "you cannot rely on the certificate hold chain",
    "start": "389220",
    "end": "395699"
  },
  {
    "text": "that the server sends back to you to actually authenticate the server why because if I'm a malicious server I can",
    "start": "395699",
    "end": "403919"
  },
  {
    "text": "create my own root certificate self-sign and I can then create my own Shady",
    "start": "403919",
    "end": "410940"
  },
  {
    "text": "certificate Authority that's called Hussein Shady",
    "start": "410940",
    "end": "416580"
  },
  {
    "text": "and then I could and I can sign that rule that certificate Authority with",
    "start": "416580",
    "end": "421979"
  },
  {
    "text": "that root certificate that I just wrote and then I can create a certificate that says google.com claiming to be",
    "start": "421979",
    "end": "429120"
  },
  {
    "text": "google.com right and I include all the Google information and I Claire I wanna claim to go be",
    "start": "429120",
    "end": "436259"
  },
  {
    "text": "google.com if I then intercepted someone going to Google and",
    "start": "436259",
    "end": "442280"
  },
  {
    "text": "immediately responded instead of actually sending the restworks to Google I responded back to that person because",
    "start": "442280",
    "end": "450300"
  },
  {
    "text": "let's say I'm with a Gateway right and I responded claiming to be Google I just forged the IP and I write back say hey",
    "start": "450300",
    "end": "459660"
  },
  {
    "text": "here is the TLs parameters and here's actually Google certificate trust me",
    "start": "459660",
    "end": "465240"
  },
  {
    "text": "please you are actually talking to Google and I include the full beautiful chain that I actually",
    "start": "465240",
    "end": "471419"
  },
  {
    "text": "talked about here right which is google.com signed by Hussein Shady signed by the root certificate that I",
    "start": "471419",
    "end": "476940"
  },
  {
    "text": "just created and if the client relies solely on that chain to authenticate",
    "start": "476940",
    "end": "483000"
  },
  {
    "text": "they will follow that chain and until they will reach the route and they will find that the root is self-signed and",
    "start": "483000",
    "end": "489240"
  },
  {
    "text": "they will not do any additional checks as oh this route is good actually because the route is self-signed and",
    "start": "489240",
    "end": "495599"
  },
  {
    "text": "sounds like it's good right if the if the client just did that that's",
    "start": "495599",
    "end": "501660"
  },
  {
    "text": "absolutely pointless because every single thing will be valid in this case",
    "start": "501660",
    "end": "507180"
  },
  {
    "text": "that's not enough and in this particular phase the clients will trust that it's actually talking to",
    "start": "507180",
    "end": "512700"
  },
  {
    "text": "Google which is not and then I can serve it another page that is looks good like Google but it's actually a fishing page",
    "start": "512700",
    "end": "519120"
  },
  {
    "text": "right and I basically have the client very bad very very bad so what a client as TLS",
    "start": "519120",
    "end": "527040"
  },
  {
    "text": "clients actually never never do this they take your certificate they go to",
    "start": "527040",
    "end": "533100"
  },
  {
    "start": "530000",
    "end": "630000"
  },
  {
    "text": "the certificate Authority they go back up until they reach the root certificate",
    "start": "533100",
    "end": "539959"
  },
  {
    "text": "and then that rule certificate they actually validated against their certificate store that's called the",
    "start": "539959",
    "end": "546420"
  },
  {
    "text": "certificate store as well basically all the certificates are root and trusted",
    "start": "546420",
    "end": "552480"
  },
  {
    "text": "are stored on your machine that's basically what the operating system is",
    "start": "552480",
    "end": "557820"
  },
  {
    "text": "though so whatever is in that certificate store",
    "start": "557820",
    "end": "564779"
  },
  {
    "text": "it's trusted did you add it nope someone else did you just have to trust them you guys",
    "start": "564779",
    "end": "573120"
  },
  {
    "text": "and that's that's why wherever you buy the laptop and whoever installs the operating",
    "start": "573120",
    "end": "579060"
  },
  {
    "text": "system for you really matters right you can't just hey I really trust the government of Kazakhstan to you know",
    "start": "579060",
    "end": "587540"
  },
  {
    "text": "reship my operating system for me I definitely do you know uh because I I",
    "start": "587540",
    "end": "595620"
  },
  {
    "text": "call out because they actually did something like that before",
    "start": "595620",
    "end": "601260"
  },
  {
    "text": "uh they try to install a root certificate on every single machine that entered the",
    "start": "601260",
    "end": "608040"
  },
  {
    "text": "their country effectively something like that but because I checked that",
    "start": "608040",
    "end": "614820"
  },
  {
    "text": "certificate root certificate against that against that store only then if that",
    "start": "614820",
    "end": "622320"
  },
  {
    "text": "public key of this root certificate exists in my route then it's actually",
    "start": "622320",
    "end": "628200"
  },
  {
    "text": "enough right for me to check that",
    "start": "628200",
    "end": "634279"
  },
  {
    "start": "630000",
    "end": "720000"
  },
  {
    "text": "and that's when I actually validate and trusted but here's the thing if you really really really think about",
    "start": "634440",
    "end": "641339"
  },
  {
    "text": "it including this the root certificate is not really required",
    "start": "641339",
    "end": "650459"
  },
  {
    "text": "right just the fact that if you tell me that your certificate Authority the final",
    "start": "650640",
    "end": "656640"
  },
  {
    "text": "leave not leave the final node just if you tell me that who signed you",
    "start": "656640",
    "end": "662880"
  },
  {
    "text": "what public key signed you what fruits are you just the public key just an identifier that's enough because I'll",
    "start": "662880",
    "end": "669420"
  },
  {
    "text": "use that identifier to look up my route and based on that I trust it",
    "start": "669420",
    "end": "677399"
  },
  {
    "text": "okay including the root is optional based on the RFC the TLs RFC but I from",
    "start": "677399",
    "end": "686640"
  },
  {
    "text": "my you know looking up and sniffing TLS handshake I think it's",
    "start": "686640",
    "end": "692399"
  },
  {
    "text": "almost always included like Google always included the roots for some reason at last time I checked right",
    "start": "692399",
    "end": "701600"
  },
  {
    "text": "so that's an additional like 1.2 kilobytes or whatever right that including that the thick wrote",
    "start": "701760",
    "end": "708240"
  },
  {
    "text": "certificate that that the self-signed one I mean",
    "start": "708240",
    "end": "714060"
  },
  {
    "text": "if you can figure your own engine X can you control that I would control",
    "start": "714060",
    "end": "720300"
  },
  {
    "start": "720000",
    "end": "1215000"
  },
  {
    "text": "like definitely if I control my nginx server or my ha proxy or some other I",
    "start": "720300",
    "end": "726420"
  },
  {
    "text": "will not try to not include that root certificate because it's just pointless",
    "start": "726420",
    "end": "731459"
  },
  {
    "text": "right it's just an additional thing too if I want to optimize the performance I will of my handshakes I",
    "start": "731459",
    "end": "738779"
  },
  {
    "text": "will not include it but I don't believe every Observer allow you to actually",
    "start": "738779",
    "end": "744260"
  },
  {
    "text": "have that low level you know tuning",
    "start": "744260",
    "end": "750120"
  },
  {
    "text": "if you are at that level you're you're on your own almost right this is a very low level change to you doing",
    "start": "750120",
    "end": "757920"
  },
  {
    "text": "but regardless include the root or not including the route that's still a large",
    "start": "757920",
    "end": "764839"
  },
  {
    "text": "payload why is it large the reason it is large is because you",
    "start": "764839",
    "end": "771180"
  },
  {
    "text": "see given an MTU of the internet which is",
    "start": "771180",
    "end": "777740"
  },
  {
    "text": "1500 that's the agreed upon 1500 bytes that's the",
    "start": "777740",
    "end": "783600"
  },
  {
    "text": "maximum transmission unit of the medium of the internet like the lowest common denominator is",
    "start": "783600",
    "end": "791940"
  },
  {
    "text": "1500 even if you have a router that's supposed a jumbo frame of six thousand",
    "start": "791940",
    "end": "797579"
  },
  {
    "text": "nine thousand bytes you're still gonna almost always gonna run into a router that supports 1500.",
    "start": "797579",
    "end": "805380"
  },
  {
    "text": "that's the minimum right so we always say 1500 to you what does",
    "start": "805380",
    "end": "811079"
  },
  {
    "text": "that mean it means that the corresponding IP packets has 1500 minus its headers which is around",
    "start": "811079",
    "end": "819660"
  },
  {
    "text": "20 bytes so that's for 1480 bytes and",
    "start": "819660",
    "end": "824760"
  },
  {
    "text": "then take another 20 by 40 CP because that's the common transport protocol 20",
    "start": "824760",
    "end": "830700"
  },
  {
    "text": "bytes for the TCP error that gives you 1460 bytes",
    "start": "830700",
    "end": "837180"
  },
  {
    "text": "maybe 66 because sometimes the IP header doesn't take the full 20 bytes yeah",
    "start": "837180",
    "end": "843300"
  },
  {
    "text": "takes less so that's that's what you're playing with you can only send a segment",
    "start": "843300",
    "end": "850019"
  },
  {
    "text": "a maximum segment size of 1460 byte so if your certificate is is 10 kilobytes",
    "start": "850019",
    "end": "857880"
  },
  {
    "text": "that means you have to send math you have to send exactly seven",
    "start": "857880",
    "end": "864959"
  },
  {
    "text": "segments just the to deliver the certificate from",
    "start": "864959",
    "end": "872700"
  },
  {
    "text": "the server to the client okay of course the congestion control window plays big",
    "start": "872700",
    "end": "880980"
  },
  {
    "text": "part here right we really don't want to send one",
    "start": "880980",
    "end": "887399"
  },
  {
    "text": "segment number one and then wait for an acknowledgment from a client and then this in the second segment and then wait",
    "start": "887399",
    "end": "893880"
  },
  {
    "text": "for our clones to form the client and then send it and seven times that will",
    "start": "893880",
    "end": "899040"
  },
  {
    "text": "basically kill us and that's why the congestion window we",
    "start": "899040",
    "end": "904440"
  },
  {
    "text": "based on whatever the I think you start with the initial window is one maximum",
    "start": "904440",
    "end": "909899"
  },
  {
    "text": "segment size which is like 460. and then it can increase",
    "start": "909899",
    "end": "916100"
  },
  {
    "text": "exponentially with slow start so and every time you send and you receive",
    "start": "916100",
    "end": "921600"
  },
  {
    "text": "an acknowledgment this this increases it but because that the handshake is",
    "start": "921600",
    "end": "927540"
  },
  {
    "text": "technically the start of the algorithm the the TRS handshake is technically the",
    "start": "927540",
    "end": "934800"
  },
  {
    "text": "start of your",
    "start": "934800",
    "end": "939899"
  },
  {
    "text": "connection establishment it's actually the slowest because you",
    "start": "939899",
    "end": "946980"
  },
  {
    "text": "can't you did not give enough time for the",
    "start": "946980",
    "end": "952380"
  },
  {
    "text": "connection to breathe for the congestion window to actually expand right because",
    "start": "952380",
    "end": "958500"
  },
  {
    "text": "you just literally started with the handshake you did the Sens yeah sure we kind of increase that",
    "start": "958500",
    "end": "966120"
  },
  {
    "text": "window a little bit larger but then immediately we got the client hello and Then followed by the server hello",
    "start": "966120",
    "end": "973440"
  },
  {
    "text": "so TLS 1.2 funnily enough",
    "start": "973440",
    "end": "978540"
  },
  {
    "text": "has maybe better chances than TLS 1.3 tier 1.3 cell",
    "start": "978540",
    "end": "986639"
  },
  {
    "text": "phones are badly because of this right why",
    "start": "986639",
    "end": "992279"
  },
  {
    "text": "because TS 1.3 finished in its a one round trip",
    "start": "992279",
    "end": "997560"
  },
  {
    "text": "kind of a handshake where you send something and then you immediately",
    "start": "997560",
    "end": "1002720"
  },
  {
    "text": "respond and then you're done right it's just one round trip in that round trip you really want to deliver as much",
    "start": "1002720",
    "end": "1010540"
  },
  {
    "text": "data fast you don't really want to wait for an acknowledgment",
    "start": "1010540",
    "end": "1017360"
  },
  {
    "text": "right from the client a TCP layer transport acknowledgment that is I'm",
    "start": "1017360",
    "end": "1022759"
  },
  {
    "text": "talking about right TLS 1.3 did not unlock its full potential yet",
    "start": "1022759",
    "end": "1028100"
  },
  {
    "text": "unfortunately in my opinion again I'm just theorizing here just because of",
    "start": "1028100",
    "end": "1033380"
  },
  {
    "text": "that if your certificate is really large guess what the client cannot finish the",
    "start": "1033380",
    "end": "1038900"
  },
  {
    "text": "handshake unless it receives their full full certificate hey guys Hussein from",
    "start": "1038900",
    "end": "1044178"
  },
  {
    "text": "editing as I was editing this portion related to the congestion window initial",
    "start": "1044179",
    "end": "1051200"
  },
  {
    "text": "size and I said that the initial size is one it used to be true",
    "start": "1051200",
    "end": "1057200"
  },
  {
    "text": "that the initial congestion window size was one maximum segment size which is 1400 1500 bytes",
    "start": "1057200",
    "end": "1065740"
  },
  {
    "text": "but then in 2013 April there was a new RFC in",
    "start": "1065740",
    "end": "1071780"
  },
  {
    "text": "guess who made that RFC Google RFC number 6928 increasing the TCP initial window",
    "start": "1071780",
    "end": "1080419"
  },
  {
    "text": "to 10 maximum segment size oh yeah so",
    "start": "1080419",
    "end": "1085940"
  },
  {
    "text": "they thought about this years ago that they're going to run into this problem with TLS right having a large",
    "start": "1085940",
    "end": "1092360"
  },
  {
    "text": "certificate if they did not do that right so this is a server or a backend",
    "start": "1092360",
    "end": "1098360"
  },
  {
    "text": "configuration where you can set what is the initial conjunction window size",
    "start": "1098360",
    "end": "1104960"
  },
  {
    "text": "setting it too high of course you risk that the client might not handle it but",
    "start": "1104960",
    "end": "1110720"
  },
  {
    "text": "they just set it too high okay that's why when I do the TLs",
    "start": "1110720",
    "end": "1116140"
  },
  {
    "text": "1.3 to Google I see all the certificate",
    "start": "1116140",
    "end": "1121400"
  },
  {
    "text": "segments get delivered without waiting for an acknowledgment and that makes sense because they don't show windows so",
    "start": "1121400",
    "end": "1128780"
  },
  {
    "text": "high so that one up might be a problem but it's something to take into account for our backend application",
    "start": "1128780",
    "end": "1136400"
  },
  {
    "text": "because we have no idea who sets this contextual or I don't I never did so",
    "start": "1136400",
    "end": "1141679"
  },
  {
    "text": "probably whatever Library so whatever Library whatever proxy you're using should have the lower level ability to",
    "start": "1141679",
    "end": "1149539"
  },
  {
    "text": "change that conjunction window and I would set it to a higher value one is too low I think especially if you're",
    "start": "1149539",
    "end": "1156559"
  },
  {
    "text": "gonna do a TLS right and then you're delivering this massive certificate you",
    "start": "1156559",
    "end": "1163400"
  },
  {
    "text": "don't want to send a certificate like part of the certificate because your windows too small you have to wait for",
    "start": "1163400",
    "end": "1170059"
  },
  {
    "text": "the acknowledgment just so you can send the other segment right you want the window to be so large so that just like",
    "start": "1170059",
    "end": "1175940"
  },
  {
    "text": "slam all the segments without waiting for an acknowledgment this way at least you can push all this data this is just",
    "start": "1175940",
    "end": "1182419"
  },
  {
    "text": "something I would like to add to to the podcast I think it's very useful because",
    "start": "1182419",
    "end": "1187700"
  },
  {
    "text": "it bugged me while I was like wait a minute when I actually did that I did not see the client actually acknowledging why is the the server",
    "start": "1187700",
    "end": "1195980"
  },
  {
    "text": "never waited for my acknowledgment why then of course a little bit Googling and",
    "start": "1195980",
    "end": "1202400"
  },
  {
    "text": "we found this RFC 2013. we learn new things every day back to the podcast so",
    "start": "1202400",
    "end": "1207799"
  },
  {
    "text": "yeah certificates are really large and this RFC that I'm looking at right",
    "start": "1207799",
    "end": "1214820"
  },
  {
    "text": "now 8879 it's called TLS certificate compression and it is designed to include a new TLS",
    "start": "1214820",
    "end": "1224960"
  },
  {
    "start": "1215000",
    "end": "1380000"
  },
  {
    "text": "extension that the client and the server will agree upon and the client of course",
    "start": "1224960",
    "end": "1230360"
  },
  {
    "text": "proposes first and it will say hey",
    "start": "1230360",
    "end": "1235520"
  },
  {
    "text": "server here is a TLS handshake here is my client's hello",
    "start": "1235520",
    "end": "1240620"
  },
  {
    "text": "and here's my alpn of course the application layer protocol negotiation I",
    "start": "1240620",
    "end": "1245660"
  },
  {
    "text": "support HTTP one and two and I support also",
    "start": "1245660",
    "end": "1251299"
  },
  {
    "text": "um Sni server name indication maybe encrypted client hello",
    "start": "1251299",
    "end": "1258200"
  },
  {
    "text": "stuff like that all this extension and here is a new extension TLS compression right TLS",
    "start": "1258200",
    "end": "1264980"
  },
  {
    "text": "certificate compulsion I want you to compress your certificate don't set me that bloated 10 kilobyte stuff right",
    "start": "1264980",
    "end": "1271280"
  },
  {
    "text": "compress it for me and now",
    "start": "1271280",
    "end": "1276740"
  },
  {
    "text": "if the server agreed on whatever compression algorithm Apex from the list",
    "start": "1276740",
    "end": "1284480"
  },
  {
    "text": "I believe gzep is one of them",
    "start": "1284480",
    "end": "1288820"
  },
  {
    "text": "braille Let's get the list actually so I don't make up Jesus it's called",
    "start": "1289720",
    "end": "1295700"
  },
  {
    "text": "zeelab sorry zeleb broadly and Z is standard Z",
    "start": "1295700",
    "end": "1301400"
  },
  {
    "text": "so these are the three algorithms that are there they support so far to compress the alcohol and when the server",
    "start": "1301400",
    "end": "1308360"
  },
  {
    "text": "picks up algorithm compresses the certificate",
    "start": "1308360",
    "end": "1313880"
  },
  {
    "text": "it must of course include the uh the the",
    "start": "1313880",
    "end": "1320679"
  },
  {
    "text": "length of the uncompressed message length the uncompressed how how long how",
    "start": "1320679",
    "end": "1327500"
  },
  {
    "text": "large it is uh as uh as uncompressed and it also I should include the algorithm that is",
    "start": "1327500",
    "end": "1335780"
  },
  {
    "text": "used to compress and when it does that it then sends that compress so it will",
    "start": "1335780",
    "end": "1343220"
  },
  {
    "text": "compress it from 10 kilobyte probably is going to go down to one so it fits nicely",
    "start": "1343220",
    "end": "1349580"
  },
  {
    "text": "especially it's old text like certificates old text right certificate Souls test so uh text",
    "start": "1349580",
    "end": "1355940"
  },
  {
    "text": "sorry so compression is really the ratio is really high I think",
    "start": "1355940",
    "end": "1361520"
  },
  {
    "text": "and you can transfer that Dan thing into a single segment so it's really powerful",
    "start": "1361520",
    "end": "1367400"
  },
  {
    "text": "if you think about it right if this gets implemented I think it's it's going to be a huge you know performance boost",
    "start": "1367400",
    "end": "1374059"
  },
  {
    "text": "when it's come to establishing TLS uh hand checks now uh let's let's uh",
    "start": "1374059",
    "end": "1380539"
  },
  {
    "start": "1380000",
    "end": "1830000"
  },
  {
    "text": "explore how this will work in both TLS 1.2 and TLS 1.3",
    "start": "1380539",
    "end": "1385940"
  },
  {
    "text": "you see in TLS 1.2 uh",
    "start": "1385940",
    "end": "1391580"
  },
  {
    "text": "it takes two round trap to finish the whole thing and in the first round trip you get the certificate and in the",
    "start": "1391580",
    "end": "1398360"
  },
  {
    "text": "second third round trip you actually finish up the handshake and find out what symmetric key you're gonna be using",
    "start": "1398360",
    "end": "1405080"
  },
  {
    "text": "both the client and the server right so if that's the case",
    "start": "1405080",
    "end": "1410720"
  },
  {
    "text": "then in TLS 1.2 so the client does a clientele says Hey server uh here's a",
    "start": "1410720",
    "end": "1418580"
  },
  {
    "text": "bunch of stuff I support all these ciphers and I support also",
    "start": "1418580",
    "end": "1424240"
  },
  {
    "text": "this uh this set of key exchange algorithms and here's",
    "start": "1424240",
    "end": "1431120"
  },
  {
    "text": "anything anything pick whatever you want right and the clients are also smart if",
    "start": "1431120",
    "end": "1438020"
  },
  {
    "text": "the clients support both DS 1.3 and 1.2 it will actually include the TLs 1.3",
    "start": "1438020",
    "end": "1444080"
  },
  {
    "text": "stuff so it will pick up a c exchange algorithm actually it's called I think a group a",
    "start": "1444080",
    "end": "1453380"
  },
  {
    "text": "security group that's called the like x255 whatever stands for the the",
    "start": "1453380",
    "end": "1459940"
  },
  {
    "text": "standard you know curve because you know when you actually exchange parameters",
    "start": "1459940",
    "end": "1465500"
  },
  {
    "text": "there are so many parameters to pick from so people built up security people built up a group of secure parameters",
    "start": "1465500",
    "end": "1473299"
  },
  {
    "text": "hey this is a group called x25505 like whatever I forgot what it",
    "start": "1473299",
    "end": "1478400"
  },
  {
    "text": "stands for and and this is used the electric curve development with uh",
    "start": "1478400",
    "end": "1483880"
  },
  {
    "text": "256 bits of key key size and it's 128",
    "start": "1483880",
    "end": "1489620"
  },
  {
    "text": "bits of security blah blah blah right so the client's actually smart enough to if it supports both it will include this",
    "start": "1489620",
    "end": "1495860"
  },
  {
    "text": "information just in case the server actually supports 1.3 but let's say the server is",
    "start": "1495860",
    "end": "1501140"
  },
  {
    "text": "only supporting 1.2 it will basically ignore the TLs 1.3 ports",
    "start": "1501140",
    "end": "1506480"
  },
  {
    "text": "and it will just pick up the server pick up the uh pick up one of",
    "start": "1506480",
    "end": "1513679"
  },
  {
    "text": "the trust certificate from the clients list and it will build up the key exchanges the server will start the key",
    "start": "1513679",
    "end": "1520520"
  },
  {
    "text": "exchange technically until it's 1.2 it will build up its own private parameters",
    "start": "1520520",
    "end": "1525799"
  },
  {
    "text": "share the public parameters and share the certificate so technically we do not",
    "start": "1525799",
    "end": "1532220"
  },
  {
    "text": "encrypt yet at that round trip so the first round trip is just sharing hey we picked this",
    "start": "1532220",
    "end": "1539120"
  },
  {
    "text": "let's agree on this so the client now have the public parts of the server and",
    "start": "1539120",
    "end": "1545240"
  },
  {
    "text": "now can technically complete the handshake so now the client will",
    "start": "1545240",
    "end": "1550880"
  },
  {
    "text": "generate based on the select Cipher its own public or and private parameters and",
    "start": "1550880",
    "end": "1557659"
  },
  {
    "text": "it will send back the uh that that portion that missing portion to the",
    "start": "1557659",
    "end": "1563179"
  },
  {
    "text": "server so it can complete the submitter key the reason we had two round trap is",
    "start": "1563179",
    "end": "1568580"
  },
  {
    "text": "because we did not big that we did not let the",
    "start": "1568580",
    "end": "1573860"
  },
  {
    "text": "client pick the cipher that's that's the problem with 1.2 Ram",
    "start": "1573860",
    "end": "1579980"
  },
  {
    "text": "leading to this extra router and because of that the certificate is technically not encrypted is transferred in plain",
    "start": "1579980",
    "end": "1586700"
  },
  {
    "text": "text right and let's finish it finish up the wrong",
    "start": "1586700",
    "end": "1591919"
  },
  {
    "text": "term so anyone sniffs steals from one two you can see the plain text certificate in The Wire",
    "start": "1591919",
    "end": "1599900"
  },
  {
    "text": "but you cannot change it of course because there is an Integrity that protects the whole thing right but",
    "start": "1599900",
    "end": "1606140"
  },
  {
    "text": "that's another Topic in TS 1.3 it's snow the client actually says because the",
    "start": "1606140",
    "end": "1612200"
  },
  {
    "text": "client supports both the support let's say it's curl and Cosa pulls both it will actually say hey hey I here's a",
    "start": "1612200",
    "end": "1619460"
  },
  {
    "text": "list of my software but by the way let's here's here's my public part of the x255",
    "start": "1619460",
    "end": "1626659"
  },
  {
    "text": "let me get the actual name so TLS x25519 that's the group that's the",
    "start": "1626659",
    "end": "1633080"
  },
  {
    "text": "correct that's the correct curve and so this is this is what I thought and these",
    "start": "1633080",
    "end": "1638179"
  },
  {
    "text": "are the values that I picked let's let's communicate and the server if knows TS 1.3 it will just complete",
    "start": "1638179",
    "end": "1646279"
  },
  {
    "text": "the handshake right there and then one round trip half a round trip even right so now the server have the full key it",
    "start": "1646279",
    "end": "1653419"
  },
  {
    "text": "completes it so the symmetric key it has it so what the server does",
    "start": "1653419",
    "end": "1659059"
  },
  {
    "text": "it sends two portion it's since it's public part of that key because the",
    "start": "1659059",
    "end": "1665600"
  },
  {
    "text": "client doesn't have it remember it only has its part and what the and the rest",
    "start": "1665600",
    "end": "1672440"
  },
  {
    "text": "of the stuff it just encrypts the whole extension the certificates are encrypted the the TLs",
    "start": "1672440",
    "end": "1679460"
  },
  {
    "text": "extension if you support any type of extension pretty much the whole round",
    "start": "1679460",
    "end": "1684620"
  },
  {
    "text": "trip the TLs is encrypted fully encrypted the client cannot read it unless",
    "start": "1684620",
    "end": "1691340"
  },
  {
    "text": "actually it finds the key right so the certificate is",
    "start": "1691340",
    "end": "1697039"
  },
  {
    "text": "actually encrypted so if that's why if you sniff the ts1.3 you can't even see the certificate that is being sent back",
    "start": "1697039",
    "end": "1702980"
  },
  {
    "text": "in TS 1.3 you know it's all so encrypted",
    "start": "1702980",
    "end": "1710659"
  },
  {
    "text": "but it's still encrypting a large thing will result in a large thing right it's still large right you can argue maybe",
    "start": "1710659",
    "end": "1716720"
  },
  {
    "text": "it's larger I don't know it might be wrong in there I might be wrong there actually no",
    "start": "1716720",
    "end": "1722539"
  },
  {
    "text": "encrypting something large will it get larger yeah I mean it's a block Cipher",
    "start": "1722539",
    "end": "1729440"
  },
  {
    "text": "I don't think that it will be larger I may be wrong with that I'm not a security expert so the client will get",
    "start": "1729440",
    "end": "1735200"
  },
  {
    "text": "that back the certificate is absolutely useless here to the client it cannot do anything",
    "start": "1735200",
    "end": "1741500"
  },
  {
    "text": "with it see what we added here with ts1.3 we actually added another step we added an",
    "start": "1741500",
    "end": "1746840"
  },
  {
    "text": "extra step where the certificate in this case has to be decrypted so I have to finish",
    "start": "1746840",
    "end": "1754400"
  },
  {
    "text": "the handshake first find out the symmeter key decrypt that certificate and everything else only",
    "start": "1754400",
    "end": "1762320"
  },
  {
    "text": "then I can validate it so we added a step an extra step",
    "start": "1762320",
    "end": "1769658"
  },
  {
    "text": "that didn't exist before and tiers 1.2 the explain text will immediately verify right",
    "start": "1770720",
    "end": "1778640"
  },
  {
    "text": "you can verify technically without completing the handshake right",
    "start": "1778640",
    "end": "1783860"
  },
  {
    "text": "because technically completing the handshake is pointless if you if you fail the verification right",
    "start": "1783860",
    "end": "1789860"
  },
  {
    "text": "so that's the thing so think about the amount of work",
    "start": "1789860",
    "end": "1795399"
  },
  {
    "text": "that you have to do if you have to encrypt in ts1.2 once we implement this",
    "start": "1795399",
    "end": "1803539"
  },
  {
    "text": "right we'll have to encrypt and we'll have to compress",
    "start": "1803539",
    "end": "1810980"
  },
  {
    "text": "well we have to compress first and then we have to encrypt and the client will have to",
    "start": "1810980",
    "end": "1816860"
  },
  {
    "text": "decrypt and then we have to decompress and then it has two",
    "start": "1816860",
    "end": "1823399"
  },
  {
    "text": "validate boy that's a lot of work",
    "start": "1823399",
    "end": "1829240"
  },
  {
    "text": "and does that save us the transfer time I think it does right because remember",
    "start": "1829240",
    "end": "1834740"
  },
  {
    "start": "1830000",
    "end": "1998000"
  },
  {
    "text": "we're adding extra work at the client side here and now I'm worried about other things",
    "start": "1834740",
    "end": "1841700"
  },
  {
    "text": "right a shady attacker that kinda candidos the client or the server",
    "start": "1841700",
    "end": "1848480"
  },
  {
    "text": "because the clients can do the same thing if you if your server supports client authentication then I am a shady",
    "start": "1848480",
    "end": "1854419"
  },
  {
    "text": "client I can send this compression I compress my data",
    "start": "1854419",
    "end": "1860480"
  },
  {
    "text": "then I and then I encrypt it and it's all garbage I I cover it's a movie",
    "start": "1860480",
    "end": "1867279"
  },
  {
    "text": "I send it to you right as as hey this is my certificate right and I also",
    "start": "1867279",
    "end": "1873559"
  },
  {
    "text": "encrypted of course with my uh key I'll but unless you support like a zero r2d",
    "start": "1873559",
    "end": "1879919"
  },
  {
    "text": "in this case right where you actually encrypt it then in this particular case I can actually",
    "start": "1879919",
    "end": "1885799"
  },
  {
    "text": "DDOS the server because the server will spend all of his time encrypting and",
    "start": "1885799",
    "end": "1891860"
  },
  {
    "text": "then decompressing and then only after the Chrome is that three gig movie If I",
    "start": "1891860",
    "end": "1897559"
  },
  {
    "text": "Was wait a minute this is not even a certificate what's going on but I spent all the beautiful CPU time",
    "start": "1897559",
    "end": "1904820"
  },
  {
    "text": "of the server DDOS alert very bad stuff so I think",
    "start": "1904820",
    "end": "1910220"
  },
  {
    "text": "that's why people are aware of these things so smart security people are thinking about all this stuff like what",
    "start": "1910220",
    "end": "1915620"
  },
  {
    "text": "are the ramifications of them implementing something like that that's the problem here I think another thing",
    "start": "1915620",
    "end": "1921440"
  },
  {
    "text": "like um you did we we talked about this uncompressed length right you see an",
    "start": "1921440",
    "end": "1927860"
  },
  {
    "text": "compressed length is a is a space is as an integer or maybe 64-bit integer that",
    "start": "1927860",
    "end": "1934100"
  },
  {
    "text": "says hey this is the the size of the uncompressed certificate so if I fake a",
    "start": "1934100",
    "end": "1939200"
  },
  {
    "text": "number says hey this is the compressed size is actually one kilobyte but the but the actual",
    "start": "1939200",
    "end": "1944419"
  },
  {
    "text": "uncompressed is seven gigabyte it's just a number based on the RFC and",
    "start": "1944419",
    "end": "1950539"
  },
  {
    "text": "I'm going to included here right the client actually the server",
    "start": "1950539",
    "end": "1956260"
  },
  {
    "text": "allocate memory first seven gigab free memory",
    "start": "1956260",
    "end": "1962000"
  },
  {
    "text": "in order to put the uncompressed certificate in so if I lied as an attacker I can also run a buffer",
    "start": "1962000",
    "end": "1968960"
  },
  {
    "text": "overflow attack on the server side and I just make the server run out of memory",
    "start": "1968960",
    "end": "1974899"
  },
  {
    "text": "I don't know so much stuff to think about here I think it's a useful thing but um what do you guys think about this",
    "start": "1974899",
    "end": "1980360"
  },
  {
    "text": "let me know the in the comment section below and if you're listening the podcast thank you so much I appreciate",
    "start": "1980360",
    "end": "1985820"
  },
  {
    "text": "you uh you can tweet at me and uh hnasr or email me",
    "start": "1985820",
    "end": "1991659"
  },
  {
    "text": "hosanna.com for have this discussions I love this stuff absolutely love I'll see you in the next one you guys stay",
    "start": "1991659",
    "end": "1997340"
  },
  {
    "text": "awesome goodbye",
    "start": "1997340",
    "end": "1999760"
  }
]