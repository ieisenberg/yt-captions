[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "hash tables are effective for caching",
    "start": "80",
    "end": "3520"
  },
  {
    "text": "database joins",
    "start": "3520",
    "end": "5680"
  },
  {
    "text": "even partitioning distributed",
    "start": "5680",
    "end": "8960"
  },
  {
    "text": "databases sharding",
    "start": "8960",
    "end": "12080"
  },
  {
    "text": "sets to check if something is there or",
    "start": "12080",
    "end": "14160"
  },
  {
    "text": "not it's very very effective even load",
    "start": "14160",
    "end": "16400"
  },
  {
    "text": "balancing",
    "start": "16400",
    "end": "17920"
  },
  {
    "text": "a lot of programming languages implement",
    "start": "17920",
    "end": "20000"
  },
  {
    "text": "that in-house you know in natively in",
    "start": "20000",
    "end": "22640"
  },
  {
    "text": "the language you can build these hash",
    "start": "22640",
    "end": "24560"
  },
  {
    "text": "tables",
    "start": "24560",
    "end": "25519"
  },
  {
    "text": "however",
    "start": "25519",
    "end": "26640"
  },
  {
    "text": "what i want to discuss in this episode",
    "start": "26640",
    "end": "28000"
  },
  {
    "text": "of the back engineering show is the",
    "start": "28000",
    "end": "30240"
  },
  {
    "text": "limitations and the cost of using hash",
    "start": "30240",
    "end": "34079"
  },
  {
    "text": "tables and",
    "start": "34079",
    "end": "35600"
  },
  {
    "text": "you know things that we really don't",
    "start": "35600",
    "end": "37280"
  },
  {
    "text": "think about it comes back to the uh",
    "start": "37280",
    "end": "39840"
  },
  {
    "text": "leaky abstractions of hey there's a",
    "start": "39840",
    "end": "41760"
  },
  {
    "text": "black box uh it's fast uh let me use it",
    "start": "41760",
    "end": "45360"
  },
  {
    "text": "but we don't understand how it works and",
    "start": "45360",
    "end": "47680"
  },
  {
    "text": "when you don't understand how something",
    "start": "47680",
    "end": "49520"
  },
  {
    "text": "works",
    "start": "49520",
    "end": "50800"
  },
  {
    "text": "you can get away with it but sometimes",
    "start": "50800",
    "end": "52879"
  },
  {
    "text": "when it doesn't work",
    "start": "52879",
    "end": "55120"
  },
  {
    "text": "that's where you really get screwed and",
    "start": "55120",
    "end": "57600"
  },
  {
    "text": "and that's where",
    "start": "57600",
    "end": "59440"
  },
  {
    "text": "really a good engineer is i identify him",
    "start": "59440",
    "end": "63600"
  },
  {
    "text": "or herself from",
    "start": "63600",
    "end": "65280"
  },
  {
    "text": "the other engineers how about we jump",
    "start": "65280",
    "end": "67760"
  },
  {
    "text": "into and discuss this well come to the",
    "start": "67760",
    "end": "69920"
  },
  {
    "text": "back engineering show with your host",
    "start": "69920",
    "end": "71520"
  },
  {
    "text": "hussein nasser and this is our laid back",
    "start": "71520",
    "end": "73840"
  },
  {
    "text": "chill",
    "start": "73840",
    "end": "74880"
  },
  {
    "text": "discussion podcast kind of uh",
    "start": "74880",
    "end": "78320"
  },
  {
    "text": "video",
    "start": "78320",
    "end": "79439"
  },
  {
    "text": "uh audio format if you can listen in the",
    "start": "79439",
    "end": "82080"
  },
  {
    "text": "podcast if you're listening on spotify",
    "start": "82080",
    "end": "84400"
  },
  {
    "text": "and apple podcast and google podcast you",
    "start": "84400",
    "end": "86400"
  },
  {
    "text": "can listen on that and this is just",
    "start": "86400",
    "end": "88720"
  },
  {
    "text": "basically i don't i don't do graphics or",
    "start": "88720",
    "end": "90880"
  },
  {
    "text": "i don't include anything it's just a",
    "start": "90880",
    "end": "92880"
  },
  {
    "text": "long form discussion about",
    "start": "92880",
    "end": "95680"
  },
  {
    "text": "one topic and i try to go as deep as",
    "start": "95680",
    "end": "98840"
  },
  {
    "text": "possible to my extent of knowledge on",
    "start": "98840",
    "end": "101840"
  },
  {
    "text": "this topic to",
    "start": "101840",
    "end": "104240"
  },
  {
    "text": "tease apart this topic and today's topic",
    "start": "104240",
    "end": "107119"
  },
  {
    "text": "is hash",
    "start": "107119",
    "end": "108560"
  },
  {
    "text": "tables",
    "start": "108560",
    "end": "110399"
  },
  {
    "start": "110000",
    "end": "230000"
  },
  {
    "text": "in order to",
    "start": "110399",
    "end": "111680"
  },
  {
    "text": "discuss what hash tables are",
    "start": "111680",
    "end": "115200"
  },
  {
    "text": "we really need to understand what arrays",
    "start": "115200",
    "end": "117280"
  },
  {
    "text": "are you might say hussein i don't care",
    "start": "117280",
    "end": "120000"
  },
  {
    "text": "i understand what arrays are do you",
    "start": "120000",
    "end": "121680"
  },
  {
    "text": "think i'm dumb",
    "start": "121680",
    "end": "122960"
  },
  {
    "text": "i know what are arrays",
    "start": "122960",
    "end": "125520"
  },
  {
    "text": "and i know how they work",
    "start": "125520",
    "end": "128720"
  },
  {
    "text": "you'll be surprised that",
    "start": "128720",
    "end": "131760"
  },
  {
    "text": "you we take a lot of things for granted",
    "start": "131760",
    "end": "134319"
  },
  {
    "text": "are raises one of them",
    "start": "134319",
    "end": "136160"
  },
  {
    "text": "the concept of array is a consecutive",
    "start": "136160",
    "end": "140480"
  },
  {
    "text": "slots of memory and this is the key word",
    "start": "140480",
    "end": "145040"
  },
  {
    "text": "memory you cannot put an array on disk",
    "start": "145040",
    "end": "147599"
  },
  {
    "text": "it doesn't make any sense",
    "start": "147599",
    "end": "149520"
  },
  {
    "text": "right well until ultra ram is a thing",
    "start": "149520",
    "end": "151599"
  },
  {
    "text": "and we can do byte address ability in",
    "start": "151599",
    "end": "153360"
  },
  {
    "text": "the disk",
    "start": "153360",
    "end": "154720"
  },
  {
    "text": "but arrays are a property of the random",
    "start": "154720",
    "end": "157840"
  },
  {
    "text": "axis memory",
    "start": "157840",
    "end": "159519"
  },
  {
    "text": "you know",
    "start": "159519",
    "end": "160800"
  },
  {
    "text": "and the power of this is because it is",
    "start": "160800",
    "end": "163680"
  },
  {
    "text": "consecutive",
    "start": "163680",
    "end": "166560"
  },
  {
    "text": "no matter how large the array is given",
    "start": "167120",
    "end": "170480"
  },
  {
    "text": "the index",
    "start": "170480",
    "end": "172720"
  },
  {
    "text": "i can go to the first",
    "start": "172720",
    "end": "175440"
  },
  {
    "text": "node",
    "start": "175440",
    "end": "177120"
  },
  {
    "text": "to the first element of the array or i",
    "start": "177120",
    "end": "179280"
  },
  {
    "text": "can go to the middle one or i can go to",
    "start": "179280",
    "end": "181840"
  },
  {
    "text": "any to the last one or any element",
    "start": "181840",
    "end": "185920"
  },
  {
    "text": "in",
    "start": "185920",
    "end": "186800"
  },
  {
    "text": "almost constant cost",
    "start": "186800",
    "end": "189680"
  },
  {
    "text": "big o of one as the computer science",
    "start": "189680",
    "end": "192239"
  },
  {
    "text": "guys say",
    "start": "192239",
    "end": "193680"
  },
  {
    "text": "it's it's so fast because of this byte",
    "start": "193680",
    "end": "196400"
  },
  {
    "text": "addressability because every",
    "start": "196400",
    "end": "198640"
  },
  {
    "text": "index is associated with a memory",
    "start": "198640",
    "end": "201519"
  },
  {
    "text": "address and to get the next one is",
    "start": "201519",
    "end": "203440"
  },
  {
    "text": "literally just add one to the memory",
    "start": "203440",
    "end": "205920"
  },
  {
    "text": "address and we can get there and if you",
    "start": "205920",
    "end": "208319"
  },
  {
    "text": "ask the cpu to fetch a value of that",
    "start": "208319",
    "end": "212640"
  },
  {
    "text": "whatever",
    "start": "212640",
    "end": "213840"
  },
  {
    "text": "the the element has whether an integer",
    "start": "213840",
    "end": "216720"
  },
  {
    "text": "or a string or anything",
    "start": "216720",
    "end": "219360"
  },
  {
    "text": "you can immediately go there and fetch",
    "start": "219360",
    "end": "222239"
  },
  {
    "text": "the value and that's the powers of the",
    "start": "222239",
    "end": "224480"
  },
  {
    "text": "array and hash tables are nothing but a",
    "start": "224480",
    "end": "227440"
  },
  {
    "text": "glorified",
    "start": "227440",
    "end": "228959"
  },
  {
    "text": "arrays to be honest so you can ask the",
    "start": "228959",
    "end": "232319"
  },
  {
    "start": "230000",
    "end": "410000"
  },
  {
    "text": "cpu to fetch",
    "start": "232319",
    "end": "234879"
  },
  {
    "text": "a value from an array in memory by",
    "start": "234879",
    "end": "238000"
  },
  {
    "text": "giving it its index from the index we're",
    "start": "238000",
    "end": "240480"
  },
  {
    "text": "going to find the first address i'm",
    "start": "240480",
    "end": "242239"
  },
  {
    "text": "going to add",
    "start": "242239",
    "end": "243599"
  },
  {
    "text": "x amount of value you know to find that",
    "start": "243599",
    "end": "247200"
  },
  {
    "text": "particular index so so the cost is",
    "start": "247200",
    "end": "249680"
  },
  {
    "text": "really is an addition plus the cost to",
    "start": "249680",
    "end": "252480"
  },
  {
    "text": "go to the memory from the cpu right so",
    "start": "252480",
    "end": "256639"
  },
  {
    "text": "the first one is constant addition is",
    "start": "256639",
    "end": "259280"
  },
  {
    "text": "cheap it is done in the cpu itself the",
    "start": "259280",
    "end": "262079"
  },
  {
    "text": "other cost to actually",
    "start": "262079",
    "end": "264080"
  },
  {
    "text": "jump to the memory",
    "start": "264080",
    "end": "265919"
  },
  {
    "text": "is really depending on your architecture",
    "start": "265919",
    "end": "268160"
  },
  {
    "text": "of the cpu and we can really dive deep",
    "start": "268160",
    "end": "270800"
  },
  {
    "text": "into this this is probably another uh",
    "start": "270800",
    "end": "273360"
  },
  {
    "text": "episode itself the cost to fetch",
    "start": "273360",
    "end": "276800"
  },
  {
    "text": "a value from the ram",
    "start": "276800",
    "end": "279600"
  },
  {
    "text": "to the cpu",
    "start": "279600",
    "end": "281440"
  },
  {
    "text": "really depends on the distance from",
    "start": "281440",
    "end": "283440"
  },
  {
    "text": "where the cpu",
    "start": "283440",
    "end": "284960"
  },
  {
    "text": "lives",
    "start": "284960",
    "end": "285840"
  },
  {
    "text": "the memory you know",
    "start": "285840",
    "end": "287919"
  },
  {
    "text": "in in multi-core architecture",
    "start": "287919",
    "end": "292000"
  },
  {
    "text": "you have multiple cpus and you have a",
    "start": "292000",
    "end": "293919"
  },
  {
    "text": "single memory and they compete in the",
    "start": "293919",
    "end": "296000"
  },
  {
    "text": "memory only one cpu can access",
    "start": "296000",
    "end": "299120"
  },
  {
    "text": "the memory at a given",
    "start": "299120",
    "end": "301360"
  },
  {
    "text": "time and so there's there's some sort of",
    "start": "301360",
    "end": "303680"
  },
  {
    "text": "a competing computing going on",
    "start": "303680",
    "end": "305919"
  },
  {
    "text": "so you",
    "start": "305919",
    "end": "306960"
  },
  {
    "text": "uh",
    "start": "306960",
    "end": "308400"
  },
  {
    "text": "what happens is some",
    "start": "308400",
    "end": "310720"
  },
  {
    "text": "in some certain architecture",
    "start": "310720",
    "end": "313120"
  },
  {
    "text": "there will be two memory locations right",
    "start": "313120",
    "end": "316479"
  },
  {
    "text": "and and and each cpu access its local",
    "start": "316479",
    "end": "320320"
  },
  {
    "text": "memory and that obviously becomes faster",
    "start": "320320",
    "end": "323600"
  },
  {
    "text": "right because there is no competing",
    "start": "323600",
    "end": "325680"
  },
  {
    "text": "anymore no cpu is competing on the",
    "start": "325680",
    "end": "327440"
  },
  {
    "text": "memory the problem with this is now",
    "start": "327440",
    "end": "329919"
  },
  {
    "text": "this cpu",
    "start": "329919",
    "end": "331759"
  },
  {
    "text": "sometimes",
    "start": "331759",
    "end": "332800"
  },
  {
    "text": "ca",
    "start": "332800",
    "end": "333600"
  },
  {
    "text": "might need to access a memory all over",
    "start": "333600",
    "end": "335919"
  },
  {
    "text": "there",
    "start": "335919",
    "end": "336720"
  },
  {
    "text": "that is that is available that's closer",
    "start": "336720",
    "end": "338960"
  },
  {
    "text": "to other cpu",
    "start": "338960",
    "end": "340560"
  },
  {
    "text": "and uh",
    "start": "340560",
    "end": "341680"
  },
  {
    "text": "and that's what is called the new",
    "start": "341680",
    "end": "342880"
  },
  {
    "text": "architecture the non-uniform memory",
    "start": "342880",
    "end": "345280"
  },
  {
    "text": "access you know",
    "start": "345280",
    "end": "346639"
  },
  {
    "text": "so this can be slow and this is where uh",
    "start": "346639",
    "end": "350400"
  },
  {
    "text": "peop guys like apple is innovating to",
    "start": "350400",
    "end": "353280"
  },
  {
    "text": "making the cost of accessing the video",
    "start": "353280",
    "end": "356240"
  },
  {
    "text": "as fast as possible by having everything",
    "start": "356240",
    "end": "358800"
  },
  {
    "text": "into a single slc chip which is the m1",
    "start": "358800",
    "end": "361840"
  },
  {
    "text": "pro",
    "start": "361840",
    "end": "362960"
  },
  {
    "text": "and then they just came up with an m1",
    "start": "362960",
    "end": "365039"
  },
  {
    "text": "ultra which fuses two m1",
    "start": "365039",
    "end": "369039"
  },
  {
    "text": "you know soc chips such that the cost to",
    "start": "369039",
    "end": "373039"
  },
  {
    "text": "to jump between different memory is",
    "start": "373039",
    "end": "375759"
  },
  {
    "text": "negligible they just made this great you",
    "start": "375759",
    "end": "379520"
  },
  {
    "text": "know uh",
    "start": "379520",
    "end": "380720"
  },
  {
    "text": "uh design such that you don't as a",
    "start": "380720",
    "end": "382800"
  },
  {
    "text": "programmer you don't really need to oh",
    "start": "382800",
    "end": "385360"
  },
  {
    "text": "if my array is all over there and i",
    "start": "385360",
    "end": "388639"
  },
  {
    "text": "really have to execute my code on this",
    "start": "388639",
    "end": "391120"
  },
  {
    "text": "cpu you know this is the noma aware",
    "start": "391120",
    "end": "393919"
  },
  {
    "text": "programming obviously this is there's a",
    "start": "393919",
    "end": "396000"
  },
  {
    "text": "little bit of discussion we can go into",
    "start": "396000",
    "end": "397759"
  },
  {
    "text": "other a day but",
    "start": "397759",
    "end": "400880"
  },
  {
    "text": "the cost is you can call it constant",
    "start": "400880",
    "end": "403680"
  },
  {
    "text": "there is it's fast it can be faster than",
    "start": "403680",
    "end": "405919"
  },
  {
    "text": "certain architecture so that's the array",
    "start": "405919",
    "end": "409599"
  },
  {
    "text": "the array the problem with the arrays is",
    "start": "409599",
    "end": "411840"
  },
  {
    "start": "410000",
    "end": "600000"
  },
  {
    "text": "it's a it's an integer based",
    "start": "411840",
    "end": "414080"
  },
  {
    "text": "so 0 1 2 3 4 5. so if you're",
    "start": "414080",
    "end": "418160"
  },
  {
    "text": "if you can",
    "start": "418160",
    "end": "420319"
  },
  {
    "text": "have your key",
    "start": "420319",
    "end": "422560"
  },
  {
    "text": "as",
    "start": "422560",
    "end": "423759"
  },
  {
    "text": "that index you won",
    "start": "423759",
    "end": "426240"
  },
  {
    "text": "right the problem is like how many",
    "start": "426240",
    "end": "427919"
  },
  {
    "text": "applications where the key is actually",
    "start": "427919",
    "end": "430560"
  },
  {
    "text": "an integer and it is actually this this",
    "start": "430560",
    "end": "433440"
  },
  {
    "text": "particular index that's almost very",
    "start": "433440",
    "end": "435680"
  },
  {
    "text": "little right",
    "start": "435680",
    "end": "436960"
  },
  {
    "text": "this is where hashing table comes to use",
    "start": "436960",
    "end": "440160"
  },
  {
    "text": "the concept of arrays in a very",
    "start": "440160",
    "end": "442960"
  },
  {
    "text": "intelligent manner what do they do",
    "start": "442960",
    "end": "446319"
  },
  {
    "text": "a second example so i have",
    "start": "446319",
    "end": "450000"
  },
  {
    "text": "i don't know i have",
    "start": "450000",
    "end": "452479"
  },
  {
    "text": "an id",
    "start": "452479",
    "end": "453599"
  },
  {
    "text": "student you know and i want to find",
    "start": "453599",
    "end": "455440"
  },
  {
    "text": "their name let's say this is a key value",
    "start": "455440",
    "end": "458000"
  },
  {
    "text": "store you know",
    "start": "458000",
    "end": "460720"
  },
  {
    "text": "the id is obviously a large number or",
    "start": "461280",
    "end": "463759"
  },
  {
    "text": "has nothing to do with the index so what",
    "start": "463759",
    "end": "465840"
  },
  {
    "text": "you do",
    "start": "465840",
    "end": "467039"
  },
  {
    "text": "is you want giving the id i want",
    "start": "467039",
    "end": "470080"
  },
  {
    "text": "immediately to find the name of the",
    "start": "470080",
    "end": "471680"
  },
  {
    "text": "students so the value is the name the",
    "start": "471680",
    "end": "474560"
  },
  {
    "text": "the the the integer",
    "start": "474560",
    "end": "477919"
  },
  {
    "text": "the the key as the id of the student so",
    "start": "477919",
    "end": "480720"
  },
  {
    "text": "given that id student what you do is you",
    "start": "480720",
    "end": "483919"
  },
  {
    "text": "build a hash table",
    "start": "483919",
    "end": "487440"
  },
  {
    "text": "what do you do you effectively take the",
    "start": "487440",
    "end": "490479"
  },
  {
    "text": "ids",
    "start": "490479",
    "end": "492240"
  },
  {
    "text": "and",
    "start": "492240",
    "end": "493280"
  },
  {
    "text": "you create a hash off of them using a",
    "start": "493280",
    "end": "495360"
  },
  {
    "text": "hash function and that gives you a",
    "start": "495360",
    "end": "497520"
  },
  {
    "text": "garbage",
    "start": "497520",
    "end": "498960"
  },
  {
    "text": "value right",
    "start": "498960",
    "end": "500160"
  },
  {
    "text": "so that if you hash the same value again",
    "start": "500160",
    "end": "502160"
  },
  {
    "text": "you're going to get the same hash",
    "start": "502160",
    "end": "504080"
  },
  {
    "text": "given that hash you then take that value",
    "start": "504080",
    "end": "508560"
  },
  {
    "text": "and then",
    "start": "508560",
    "end": "510400"
  },
  {
    "text": "calculate an index that points to an",
    "start": "510400",
    "end": "513039"
  },
  {
    "text": "array",
    "start": "513039",
    "end": "514959"
  },
  {
    "text": "that's the trick",
    "start": "514959",
    "end": "516159"
  },
  {
    "text": "and",
    "start": "516159",
    "end": "518240"
  },
  {
    "text": "the most easy way is to do a modular",
    "start": "518240",
    "end": "520880"
  },
  {
    "text": "function so let's say your hash table",
    "start": "520880",
    "end": "522560"
  },
  {
    "text": "size your array size is 10 you know",
    "start": "522560",
    "end": "526080"
  },
  {
    "text": "so if you calculate",
    "start": "526080",
    "end": "527760"
  },
  {
    "text": "if you give it this id you do modulo 10",
    "start": "527760",
    "end": "531040"
  },
  {
    "text": "you do a hash and then you do a modular",
    "start": "531040",
    "end": "532640"
  },
  {
    "text": "10 and you get a value between 0 and 9",
    "start": "532640",
    "end": "534560"
  },
  {
    "text": "and that's the power because you",
    "start": "534560",
    "end": "536080"
  },
  {
    "text": "eventually have an index you can",
    "start": "536080",
    "end": "538720"
  },
  {
    "text": "immediately go to that",
    "start": "538720",
    "end": "540800"
  },
  {
    "text": "array value in that index and pitch the",
    "start": "540800",
    "end": "543279"
  },
  {
    "text": "value which is the name of the student",
    "start": "543279",
    "end": "544959"
  },
  {
    "text": "in this particular case and that's the",
    "start": "544959",
    "end": "547120"
  },
  {
    "text": "power of hash hash tables and so now",
    "start": "547120",
    "end": "550320"
  },
  {
    "text": "given an actual key i can find the value",
    "start": "550320",
    "end": "554480"
  },
  {
    "text": "using the power of array",
    "start": "554480",
    "end": "556240"
  },
  {
    "text": "well you might say",
    "start": "556240",
    "end": "557680"
  },
  {
    "text": "there are problems with this obviously",
    "start": "557680",
    "end": "560000"
  },
  {
    "text": "right it's like",
    "start": "560000",
    "end": "561600"
  },
  {
    "text": "how about collision you know",
    "start": "561600",
    "end": "564480"
  },
  {
    "text": "sometimes i might get two student ids",
    "start": "564480",
    "end": "567519"
  },
  {
    "text": "that maps to the same hash which then",
    "start": "567519",
    "end": "570160"
  },
  {
    "text": "maps to the same index",
    "start": "570160",
    "end": "572399"
  },
  {
    "text": "well that's your responsibility to solve",
    "start": "572399",
    "end": "574320"
  },
  {
    "text": "and we're going to talk about this in",
    "start": "574320",
    "end": "576480"
  },
  {
    "text": "the limitations option or",
    "start": "576480",
    "end": "579360"
  },
  {
    "text": "portion of this video",
    "start": "579360",
    "end": "582320"
  },
  {
    "text": "so now we know we know hash tables so",
    "start": "582320",
    "end": "584720"
  },
  {
    "text": "don't know we understand hash tables the",
    "start": "584720",
    "end": "586240"
  },
  {
    "text": "idea of hashing something to get",
    "start": "586240",
    "end": "589120"
  },
  {
    "text": "eventually get an index which we're",
    "start": "589120",
    "end": "590800"
  },
  {
    "text": "going to use to point to an array which",
    "start": "590800",
    "end": "593760"
  },
  {
    "text": "has our values",
    "start": "593760",
    "end": "596320"
  },
  {
    "text": "so one popular",
    "start": "596320",
    "end": "598880"
  },
  {
    "text": "use cases",
    "start": "598880",
    "end": "600320"
  },
  {
    "start": "600000",
    "end": "960000"
  },
  {
    "text": "database joining so if you have two",
    "start": "600320",
    "end": "602839"
  },
  {
    "text": "relations and you want to join these",
    "start": "602839",
    "end": "605279"
  },
  {
    "text": "relations based on a foreign key you",
    "start": "605279",
    "end": "607519"
  },
  {
    "text": "know",
    "start": "607519",
    "end": "608320"
  },
  {
    "text": "you're going to use the idea of",
    "start": "608320",
    "end": "612320"
  },
  {
    "text": "hashing hash tables let's say you want",
    "start": "612320",
    "end": "614640"
  },
  {
    "text": "to join the company table to the",
    "start": "614640",
    "end": "617200"
  },
  {
    "text": "employee table where do you have a",
    "start": "617200",
    "end": "619040"
  },
  {
    "text": "company id field so this employee",
    "start": "619040",
    "end": "621600"
  },
  {
    "text": "belongs to this company right",
    "start": "621600",
    "end": "623680"
  },
  {
    "text": "so in order to join these two tables",
    "start": "623680",
    "end": "626240"
  },
  {
    "text": "you're gonna pick one of the relations",
    "start": "626240",
    "end": "628880"
  },
  {
    "text": "and you're gonna create a hash table and",
    "start": "628880",
    "end": "632480"
  },
  {
    "text": "focus on this word",
    "start": "632480",
    "end": "634079"
  },
  {
    "text": "create a hash table the hash table",
    "start": "634079",
    "end": "636800"
  },
  {
    "text": "doesn't exist",
    "start": "636800",
    "end": "638079"
  },
  {
    "text": "you create it and there is a cost",
    "start": "638079",
    "end": "641040"
  },
  {
    "text": "to creating a hash table",
    "start": "641040",
    "end": "644079"
  },
  {
    "text": "so",
    "start": "644079",
    "end": "645360"
  },
  {
    "text": "usually in a joint you pick this smaller",
    "start": "645360",
    "end": "647440"
  },
  {
    "text": "relation",
    "start": "647440",
    "end": "648720"
  },
  {
    "text": "because",
    "start": "648720",
    "end": "649680"
  },
  {
    "text": "creating hash table is expensive because",
    "start": "649680",
    "end": "651839"
  },
  {
    "text": "you can loop through every single one",
    "start": "651839",
    "end": "655279"
  },
  {
    "text": "and",
    "start": "655279",
    "end": "656399"
  },
  {
    "text": "take the value",
    "start": "656399",
    "end": "658000"
  },
  {
    "text": "hash it",
    "start": "658000",
    "end": "659120"
  },
  {
    "text": "and give the index and then go to that",
    "start": "659120",
    "end": "662800"
  },
  {
    "text": "array that you",
    "start": "662800",
    "end": "665680"
  },
  {
    "text": "hopefully you have already pre-allocated",
    "start": "665680",
    "end": "668240"
  },
  {
    "text": "and then",
    "start": "668240",
    "end": "669440"
  },
  {
    "text": "store the value for that index in that",
    "start": "669440",
    "end": "672640"
  },
  {
    "text": "particular array and you're gonna do the",
    "start": "672640",
    "end": "675200"
  },
  {
    "text": "everything for every single value so",
    "start": "675200",
    "end": "677279"
  },
  {
    "text": "that's",
    "start": "677279",
    "end": "678240"
  },
  {
    "text": "that means the hash table really has to",
    "start": "678240",
    "end": "681120"
  },
  {
    "text": "have a fixed value",
    "start": "681120",
    "end": "683200"
  },
  {
    "text": "to start with you start with i don't",
    "start": "683200",
    "end": "685200"
  },
  {
    "text": "know i'm gonna create i think this",
    "start": "685200",
    "end": "687680"
  },
  {
    "text": "relation is around thousand right it's",
    "start": "687680",
    "end": "690240"
  },
  {
    "text": "going to increase a thousand if you know",
    "start": "690240",
    "end": "692079"
  },
  {
    "text": "the size that's even better and you say",
    "start": "692079",
    "end": "694480"
  },
  {
    "text": "okay i want a thousand a thousand array",
    "start": "694480",
    "end": "697279"
  },
  {
    "text": "element and you so you ask the ram",
    "start": "697279",
    "end": "700399"
  },
  {
    "text": "hey",
    "start": "700399",
    "end": "701120"
  },
  {
    "text": "give me a thousand integer consecutive",
    "start": "701120",
    "end": "704160"
  },
  {
    "text": "array values and then you start building",
    "start": "704160",
    "end": "705920"
  },
  {
    "text": "the hash tables and you fill all this",
    "start": "705920",
    "end": "707600"
  },
  {
    "text": "thousand so the first value might go to",
    "start": "707600",
    "end": "709920"
  },
  {
    "text": "index 999 the second value might go to",
    "start": "709920",
    "end": "712560"
  },
  {
    "text": "the index 78 the third value might go to",
    "start": "712560",
    "end": "715760"
  },
  {
    "text": "index zero and you start filling",
    "start": "715760",
    "end": "718480"
  },
  {
    "text": "you start filling this hash table so now",
    "start": "718480",
    "end": "720720"
  },
  {
    "text": "once you've built that hash table you",
    "start": "720720",
    "end": "722639"
  },
  {
    "text": "have a beautiful array in memory with",
    "start": "722639",
    "end": "726240"
  },
  {
    "text": "with indexes right but your hash values",
    "start": "726240",
    "end": "730399"
  },
  {
    "text": "mean something there's a mapping between",
    "start": "730399",
    "end": "732720"
  },
  {
    "text": "the hash between the key and to the hash",
    "start": "732720",
    "end": "735920"
  },
  {
    "text": "obviously and then between the hash to",
    "start": "735920",
    "end": "737680"
  },
  {
    "text": "the index and that mapping is what's",
    "start": "737680",
    "end": "739760"
  },
  {
    "text": "critical now okay we have this hash",
    "start": "739760",
    "end": "741839"
  },
  {
    "text": "table what do i do with it",
    "start": "741839",
    "end": "743680"
  },
  {
    "text": "now you go to the other relation",
    "start": "743680",
    "end": "747680"
  },
  {
    "text": "whatever it is it is the company either",
    "start": "747680",
    "end": "749839"
  },
  {
    "text": "or the employee or whatever is larger in",
    "start": "749839",
    "end": "752000"
  },
  {
    "text": "this case",
    "start": "752000",
    "end": "753200"
  },
  {
    "text": "and you loop through it",
    "start": "753200",
    "end": "755440"
  },
  {
    "text": "you pick the first one",
    "start": "755440",
    "end": "757680"
  },
  {
    "text": "first entry of the company id so at this",
    "start": "757680",
    "end": "760480"
  },
  {
    "text": "point you you you don't really know the",
    "start": "760480",
    "end": "762240"
  },
  {
    "text": "value you're just picking one value but",
    "start": "762240",
    "end": "763680"
  },
  {
    "text": "at a time oh this is company number 705.",
    "start": "763680",
    "end": "768079"
  },
  {
    "text": "let's hash it and let's get the index by",
    "start": "768079",
    "end": "770639"
  },
  {
    "text": "using a modulo right and then oh it's",
    "start": "770639",
    "end": "774000"
  },
  {
    "text": "index number 773",
    "start": "774000",
    "end": "777959"
  },
  {
    "text": "oh let's go to the memory",
    "start": "778240",
    "end": "780079"
  },
  {
    "text": "right let's go to the array so ask the",
    "start": "780079",
    "end": "782000"
  },
  {
    "text": "cpu to fix that value and then when you",
    "start": "782000",
    "end": "784399"
  },
  {
    "text": "feature the value you get that company",
    "start": "784399",
    "end": "787279"
  },
  {
    "text": "complete row which is the name of the",
    "start": "787279",
    "end": "789120"
  },
  {
    "text": "company the whatever how many employees",
    "start": "789120",
    "end": "791600"
  },
  {
    "text": "whatever if you put the entire row that",
    "start": "791600",
    "end": "794320"
  },
  {
    "text": "you need obviously you don't put the",
    "start": "794320",
    "end": "795760"
  },
  {
    "text": "entire raw you put exactly based on the",
    "start": "795760",
    "end": "798160"
  },
  {
    "text": "select query that joined you know so",
    "start": "798160",
    "end": "800800"
  },
  {
    "text": "that look there's like a",
    "start": "800800",
    "end": "802639"
  },
  {
    "text": "blob field you don't just put it if the",
    "start": "802639",
    "end": "804639"
  },
  {
    "text": "user didn't ask for it right so that's",
    "start": "804639",
    "end": "807120"
  },
  {
    "text": "why select star",
    "start": "807120",
    "end": "808800"
  },
  {
    "text": "sometimes kills the performance because",
    "start": "808800",
    "end": "811200"
  },
  {
    "text": "look at all this stuff that it needs to",
    "start": "811200",
    "end": "812880"
  },
  {
    "text": "do right have to put in the hash table",
    "start": "812880",
    "end": "815440"
  },
  {
    "text": "has to fetch it from the database from",
    "start": "815440",
    "end": "817920"
  },
  {
    "text": "disk so select store is really harmful",
    "start": "817920",
    "end": "821040"
  },
  {
    "text": "it's not enough to do it if you don't",
    "start": "821040",
    "end": "822320"
  },
  {
    "text": "need to",
    "start": "822320",
    "end": "823680"
  },
  {
    "text": "and uh",
    "start": "823680",
    "end": "825120"
  },
  {
    "text": "yeah and you start",
    "start": "825120",
    "end": "826839"
  },
  {
    "text": "just probing that's this is the second",
    "start": "826839",
    "end": "829600"
  },
  {
    "text": "this is the second so it's called",
    "start": "829600",
    "end": "830560"
  },
  {
    "text": "probing your probe",
    "start": "830560",
    "end": "833360"
  },
  {
    "text": "and this probe is caused because one big",
    "start": "833360",
    "end": "835279"
  },
  {
    "text": "old form because it's very fast because",
    "start": "835279",
    "end": "837279"
  },
  {
    "text": "the hash has the cost it's constant and",
    "start": "837279",
    "end": "839519"
  },
  {
    "text": "the",
    "start": "839519",
    "end": "840639"
  },
  {
    "text": "go and give me that",
    "start": "840639",
    "end": "842720"
  },
  {
    "text": "index also has a fixed calls again",
    "start": "842720",
    "end": "845440"
  },
  {
    "text": "depends on whether you're numa versus",
    "start": "845440",
    "end": "847600"
  },
  {
    "text": "not numa architecture and your cpu and",
    "start": "847600",
    "end": "850480"
  },
  {
    "text": "how far your cpu is from the ma ram all",
    "start": "850480",
    "end": "853199"
  },
  {
    "text": "that jazz but it's almost let's say it's",
    "start": "853199",
    "end": "855680"
  },
  {
    "text": "constant right",
    "start": "855680",
    "end": "857360"
  },
  {
    "text": "if you're at that stage that's where you",
    "start": "857360",
    "end": "859440"
  },
  {
    "text": "basically optimize your",
    "start": "859440",
    "end": "861360"
  },
  {
    "text": "that's a different level altogether",
    "start": "861360",
    "end": "864399"
  },
  {
    "text": "and",
    "start": "864399",
    "end": "865120"
  },
  {
    "text": "frankly above my head you know it's just",
    "start": "865120",
    "end": "867360"
  },
  {
    "text": "so so much details but yeah this you go",
    "start": "867360",
    "end": "871279"
  },
  {
    "text": "there and you fetch the value so now",
    "start": "871279",
    "end": "873839"
  },
  {
    "text": "if you found the value that means",
    "start": "873839",
    "end": "875440"
  },
  {
    "text": "there's a match if you didn't that means",
    "start": "875440",
    "end": "877360"
  },
  {
    "text": "hey this value doesn't exist so i don't",
    "start": "877360",
    "end": "879360"
  },
  {
    "text": "join it and you create an output",
    "start": "879360",
    "end": "881120"
  },
  {
    "text": "relation as a result that's how you join",
    "start": "881120",
    "end": "884320"
  },
  {
    "text": "that's a hash join",
    "start": "884320",
    "end": "886079"
  },
  {
    "text": "obviously there's optimization in",
    "start": "886079",
    "end": "888000"
  },
  {
    "text": "different hash joins and i think i'm",
    "start": "888000",
    "end": "889519"
  },
  {
    "text": "gonna make another uh episode talking",
    "start": "889519",
    "end": "891519"
  },
  {
    "text": "about hash joins because they're like",
    "start": "891519",
    "end": "893279"
  },
  {
    "text": "man methods what i just explained is the",
    "start": "893279",
    "end": "895040"
  },
  {
    "text": "classical hash join you know",
    "start": "895040",
    "end": "898000"
  },
  {
    "text": "it becomes a problem",
    "start": "898000",
    "end": "899920"
  },
  {
    "text": "because",
    "start": "899920",
    "end": "901680"
  },
  {
    "text": "what happened if the if the i cannot fit",
    "start": "901680",
    "end": "904320"
  },
  {
    "text": "this stuff in memory",
    "start": "904320",
    "end": "905920"
  },
  {
    "text": "you know",
    "start": "905920",
    "end": "906800"
  },
  {
    "text": "that's one part of the limitation",
    "start": "906800",
    "end": "909519"
  },
  {
    "text": "hash tables are useless if you can't fit",
    "start": "909519",
    "end": "911279"
  },
  {
    "text": "them in memory",
    "start": "911279",
    "end": "912399"
  },
  {
    "text": "right because the whole point is because",
    "start": "912399",
    "end": "915120"
  },
  {
    "text": "the whole thing is an array",
    "start": "915120",
    "end": "916880"
  },
  {
    "text": "you have to fit the array into memory so",
    "start": "916880",
    "end": "918560"
  },
  {
    "text": "you can use the byte addressability of",
    "start": "918560",
    "end": "920800"
  },
  {
    "text": "the ram again unless someone invents a",
    "start": "920800",
    "end": "924240"
  },
  {
    "text": "byte addressable disc",
    "start": "924240",
    "end": "926639"
  },
  {
    "text": "all of these problems will go away",
    "start": "926639",
    "end": "928720"
  },
  {
    "text": "hopefully",
    "start": "928720",
    "end": "931199"
  },
  {
    "text": "i think there are a lot of attempts uh",
    "start": "931199",
    "end": "933360"
  },
  {
    "text": "ultra ram was the latest that i'm aware",
    "start": "933360",
    "end": "936240"
  },
  {
    "text": "of",
    "start": "936240",
    "end": "937120"
  },
  {
    "text": "uh you know which is basically a",
    "start": "937120",
    "end": "939279"
  },
  {
    "text": "persistent disk",
    "start": "939279",
    "end": "941279"
  },
  {
    "text": "a value that is just as fast as the ram",
    "start": "941279",
    "end": "943600"
  },
  {
    "text": "but it's also persistent you know i'm",
    "start": "943600",
    "end": "945600"
  },
  {
    "text": "going to reference the video that i talk",
    "start": "945600",
    "end": "946800"
  },
  {
    "text": "about ultraram",
    "start": "946800",
    "end": "948720"
  },
  {
    "text": "but yeah",
    "start": "948720",
    "end": "950160"
  },
  {
    "text": "a lot of the storage people you know",
    "start": "950160",
    "end": "953680"
  },
  {
    "text": "they they talk about this they eat this",
    "start": "953680",
    "end": "955839"
  },
  {
    "text": "for dinner effectively",
    "start": "955839",
    "end": "958560"
  },
  {
    "text": "but yeah",
    "start": "958560",
    "end": "959839"
  },
  {
    "text": "this is the idea of hash",
    "start": "959839",
    "end": "962560"
  },
  {
    "start": "960000",
    "end": "1200000"
  },
  {
    "text": "tables hash joins very very popular",
    "start": "962560",
    "end": "965519"
  },
  {
    "text": "concept now i want to talk about the",
    "start": "965519",
    "end": "967519"
  },
  {
    "text": "limitations",
    "start": "967519",
    "end": "969600"
  },
  {
    "text": "of hash tables and this is where you",
    "start": "969600",
    "end": "972720"
  },
  {
    "text": "really kind of link to the previous",
    "start": "972720",
    "end": "974959"
  },
  {
    "text": "topic with hash joins",
    "start": "974959",
    "end": "978079"
  },
  {
    "text": "basically watch out",
    "start": "978480",
    "end": "980639"
  },
  {
    "text": "again hash tables have to fit their",
    "start": "980639",
    "end": "982240"
  },
  {
    "text": "memory",
    "start": "982240",
    "end": "984639"
  },
  {
    "text": "to be utilized",
    "start": "984639",
    "end": "987360"
  },
  {
    "text": "and that's the biggest biggest",
    "start": "987360",
    "end": "989440"
  },
  {
    "text": "problem i guess you know it's like what",
    "start": "989440",
    "end": "991920"
  },
  {
    "text": "happened if you",
    "start": "991920",
    "end": "994639"
  },
  {
    "text": "because that's the first thing people",
    "start": "994639",
    "end": "995920"
  },
  {
    "text": "will say is hey",
    "start": "995920",
    "end": "997440"
  },
  {
    "text": "i'm going to bend my entire key value",
    "start": "997440",
    "end": "999440"
  },
  {
    "text": "store as a hash table",
    "start": "999440",
    "end": "1001360"
  },
  {
    "text": "here let's put the entire customer",
    "start": "1001360",
    "end": "1002720"
  },
  {
    "text": "database a hash table",
    "start": "1002720",
    "end": "1004320"
  },
  {
    "text": "you can't",
    "start": "1004320",
    "end": "1006000"
  },
  {
    "text": "how",
    "start": "1006000",
    "end": "1007040"
  },
  {
    "text": "what kind of how",
    "start": "1007040",
    "end": "1008399"
  },
  {
    "text": "how much memory do you need to put the",
    "start": "1008399",
    "end": "1010240"
  },
  {
    "text": "entire",
    "start": "1010240",
    "end": "1012000"
  },
  {
    "text": "thing in memory because that's what you",
    "start": "1012000",
    "end": "1014639"
  },
  {
    "text": "need to do right",
    "start": "1014639",
    "end": "1016240"
  },
  {
    "text": "let alone just building that god damn",
    "start": "1016240",
    "end": "1018480"
  },
  {
    "text": "thing you know you need to build it",
    "start": "1018480",
    "end": "1019920"
  },
  {
    "text": "first",
    "start": "1019920",
    "end": "1021120"
  },
  {
    "text": "and to build it is costly because to",
    "start": "1021120",
    "end": "1023199"
  },
  {
    "text": "build it you have to scan the entire",
    "start": "1023199",
    "end": "1025199"
  },
  {
    "text": "thing that's a big of n",
    "start": "1025199",
    "end": "1027360"
  },
  {
    "text": "you can scan the entire thing",
    "start": "1027360",
    "end": "1030079"
  },
  {
    "text": "pull it in memory to build it and that's",
    "start": "1030079",
    "end": "1032640"
  },
  {
    "text": "a cost maybe you can consider this a",
    "start": "1032640",
    "end": "1035120"
  },
  {
    "text": "fixed cost right and then once you build",
    "start": "1035120",
    "end": "1037438"
  },
  {
    "text": "that then you have to",
    "start": "1037439",
    "end": "1038880"
  },
  {
    "text": "uh",
    "start": "1038880",
    "end": "1040000"
  },
  {
    "text": "all of that get it in memory otherwise",
    "start": "1040000",
    "end": "1042319"
  },
  {
    "text": "if it's not in memory you have no idea",
    "start": "1042319",
    "end": "1044798"
  },
  {
    "text": "which parts will be fetched next",
    "start": "1044799",
    "end": "1047678"
  },
  {
    "text": "i think you can play games here where",
    "start": "1047679",
    "end": "1050799"
  },
  {
    "text": "you can play the idea of having i don't",
    "start": "1050799",
    "end": "1054240"
  },
  {
    "text": "know if you have low level access to the",
    "start": "1054240",
    "end": "1056400"
  },
  {
    "text": "ram where you say hey if",
    "start": "1056400",
    "end": "1058640"
  },
  {
    "text": "if someone asks access this location and",
    "start": "1058640",
    "end": "1061039"
  },
  {
    "text": "it's not in ram go fetch it from disk",
    "start": "1061039",
    "end": "1063600"
  },
  {
    "text": "you can build",
    "start": "1063600",
    "end": "1066320"
  },
  {
    "text": "data structures like that i believe",
    "start": "1066320",
    "end": "1069360"
  },
  {
    "text": "but i don't believe it's gonna be easy",
    "start": "1069360",
    "end": "1071600"
  },
  {
    "text": "right to do that um maybe they're they",
    "start": "1071600",
    "end": "1073919"
  },
  {
    "text": "do exist and i'm not aware of them",
    "start": "1073919",
    "end": "1075919"
  },
  {
    "text": "please let me know if they if you have",
    "start": "1075919",
    "end": "1077679"
  },
  {
    "text": "worked with such like",
    "start": "1077679",
    "end": "1079679"
  },
  {
    "text": "like disc",
    "start": "1079679",
    "end": "1080960"
  },
  {
    "text": "hybrid model",
    "start": "1080960",
    "end": "1082640"
  },
  {
    "text": "but that's the idea that the limitation",
    "start": "1082640",
    "end": "1084080"
  },
  {
    "text": "is the memory cost",
    "start": "1084080",
    "end": "1085600"
  },
  {
    "text": "you know you can't",
    "start": "1085600",
    "end": "1087280"
  },
  {
    "text": "just",
    "start": "1087280",
    "end": "1088400"
  },
  {
    "text": "have that billion",
    "start": "1088400",
    "end": "1091760"
  },
  {
    "text": "size hash table you know plus the the",
    "start": "1092080",
    "end": "1095280"
  },
  {
    "text": "that's one thing the key size",
    "start": "1095280",
    "end": "1098000"
  },
  {
    "text": "and the other thing is the actual values",
    "start": "1098000",
    "end": "1100559"
  },
  {
    "text": "which is uh",
    "start": "1100559",
    "end": "1102160"
  },
  {
    "text": "not really",
    "start": "1102160",
    "end": "1103280"
  },
  {
    "text": "might not be as problematic because they",
    "start": "1103280",
    "end": "1105760"
  },
  {
    "text": "can live somewhere else the actual",
    "start": "1105760",
    "end": "1107760"
  },
  {
    "text": "pointers",
    "start": "1107760",
    "end": "1108880"
  },
  {
    "text": "you know it's just the indices this is",
    "start": "1108880",
    "end": "1110880"
  },
  {
    "text": "what what is critical and then the",
    "start": "1110880",
    "end": "1112720"
  },
  {
    "text": "pointers",
    "start": "1112720",
    "end": "1113919"
  },
  {
    "text": "uh can can live somewhere else can in",
    "start": "1113919",
    "end": "1116400"
  },
  {
    "text": "the heap of the memory they don't have",
    "start": "1116400",
    "end": "1118000"
  },
  {
    "text": "to be consequentive like a string is not",
    "start": "1118000",
    "end": "1121200"
  },
  {
    "text": "really literally a string that lives in",
    "start": "1121200",
    "end": "1123919"
  },
  {
    "text": "the element itself of the array it's a",
    "start": "1123919",
    "end": "1127039"
  },
  {
    "text": "pointer to some other location that we",
    "start": "1127039",
    "end": "1129120"
  },
  {
    "text": "don't care about as long as we have that",
    "start": "1129120",
    "end": "1130960"
  },
  {
    "text": "pointer where we can jump to that memory",
    "start": "1130960",
    "end": "1133520"
  },
  {
    "text": "indication then it's fine yeah it's an",
    "start": "1133520",
    "end": "1135280"
  },
  {
    "text": "extra cost of the cpu but",
    "start": "1135280",
    "end": "1137919"
  },
  {
    "text": "uh intel and amd and all those people",
    "start": "1137919",
    "end": "1140480"
  },
  {
    "text": "are taking care of",
    "start": "1140480",
    "end": "1142000"
  },
  {
    "text": "these optimizations",
    "start": "1142000",
    "end": "1143840"
  },
  {
    "text": "but yeah this is on two limitations the",
    "start": "1143840",
    "end": "1145919"
  },
  {
    "text": "cost of building the hash table is a",
    "start": "1145919",
    "end": "1148160"
  },
  {
    "text": "cost",
    "start": "1148160",
    "end": "1149520"
  },
  {
    "text": "right that's why you always pick the",
    "start": "1149520",
    "end": "1150799"
  },
  {
    "text": "smallest in case of a join right",
    "start": "1150799",
    "end": "1153440"
  },
  {
    "text": "the other one is uh",
    "start": "1153440",
    "end": "1156080"
  },
  {
    "text": "is the memory like you have to",
    "start": "1156080",
    "end": "1158480"
  },
  {
    "text": "you have to make sure it fits in the",
    "start": "1158480",
    "end": "1159600"
  },
  {
    "text": "memory and there are workarounds for",
    "start": "1159600",
    "end": "1161360"
  },
  {
    "text": "this i believe one one alternative",
    "start": "1161360",
    "end": "1164640"
  },
  {
    "text": "uh to",
    "start": "1164640",
    "end": "1166080"
  },
  {
    "text": "to hash joins is to avoid probing all",
    "start": "1166080",
    "end": "1169120"
  },
  {
    "text": "over again because you have to scan this",
    "start": "1169120",
    "end": "1171360"
  },
  {
    "text": "other relation to always just go back",
    "start": "1171360",
    "end": "1173840"
  },
  {
    "text": "and jump right and that can be costly if",
    "start": "1173840",
    "end": "1176000"
  },
  {
    "text": "you do it over and over and over again",
    "start": "1176000",
    "end": "1177919"
  },
  {
    "text": "so you can effectively partition stuff",
    "start": "1177919",
    "end": "1180400"
  },
  {
    "text": "it says okay uh let me",
    "start": "1180400",
    "end": "1182799"
  },
  {
    "text": "just",
    "start": "1182799",
    "end": "1184480"
  },
  {
    "text": "work with a smaller subset instead of",
    "start": "1184480",
    "end": "1186480"
  },
  {
    "text": "the entire table let me just",
    "start": "1186480",
    "end": "1189679"
  },
  {
    "text": "create partitions let's any value that",
    "start": "1189679",
    "end": "1192000"
  },
  {
    "text": "i'm scanning i'm going to create a",
    "start": "1192000",
    "end": "1193679"
  },
  {
    "text": "partition that is closer to each other",
    "start": "1193679",
    "end": "1195840"
  },
  {
    "text": "and then i'm going to store it to disk",
    "start": "1195840",
    "end": "1197440"
  },
  {
    "text": "and then read the partition from disk",
    "start": "1197440",
    "end": "1199280"
  },
  {
    "text": "and then hash table that this way you",
    "start": "1199280",
    "end": "1201840"
  },
  {
    "start": "1200000",
    "end": "1350000"
  },
  {
    "text": "don't have to scan the entire build the",
    "start": "1201840",
    "end": "1204000"
  },
  {
    "text": "entire hash table of the entire relation",
    "start": "1204000",
    "end": "1206799"
  },
  {
    "text": "you just partition it and",
    "start": "1206799",
    "end": "1208960"
  },
  {
    "text": "chunk it you know work with it smaller",
    "start": "1208960",
    "end": "1211039"
  },
  {
    "text": "smaller size so that's that's another",
    "start": "1211039",
    "end": "1212480"
  },
  {
    "text": "limitation there are workarounds",
    "start": "1212480",
    "end": "1214080"
  },
  {
    "text": "obviously the final thing is really the",
    "start": "1214080",
    "end": "1216559"
  },
  {
    "text": "biggest problem with hash tables is what",
    "start": "1216559",
    "end": "1220000"
  },
  {
    "text": "happens if",
    "start": "1220000",
    "end": "1221440"
  },
  {
    "text": "i want to keep adding new keys",
    "start": "1221440",
    "end": "1224720"
  },
  {
    "text": "i want to delete the key",
    "start": "1224720",
    "end": "1227760"
  },
  {
    "text": "i want to add a new one and delete one",
    "start": "1228559",
    "end": "1231440"
  },
  {
    "text": "deleting and",
    "start": "1231440",
    "end": "1232840"
  },
  {
    "text": "adding",
    "start": "1232840",
    "end": "1234640"
  },
  {
    "text": "to a hash table",
    "start": "1234640",
    "end": "1236960"
  },
  {
    "text": "really screws up everything",
    "start": "1236960",
    "end": "1239200"
  },
  {
    "text": "why because remember we're we're doing a",
    "start": "1239200",
    "end": "1242400"
  },
  {
    "text": "hash and then we're doing a modular on",
    "start": "1242400",
    "end": "1244080"
  },
  {
    "text": "the size of the hash table",
    "start": "1244080",
    "end": "1245840"
  },
  {
    "text": "so now if you have a value and you hash",
    "start": "1245840",
    "end": "1249200"
  },
  {
    "text": "it",
    "start": "1249200",
    "end": "1249919"
  },
  {
    "text": "and a value of like from zero to ten",
    "start": "1249919",
    "end": "1251840"
  },
  {
    "text": "like the value you hash it you you might",
    "start": "1251840",
    "end": "1253840"
  },
  {
    "text": "do your module on ten then you get a",
    "start": "1253840",
    "end": "1255840"
  },
  {
    "text": "value from zero and nine right so let's",
    "start": "1255840",
    "end": "1258159"
  },
  {
    "text": "say you get eight but what happened if",
    "start": "1258159",
    "end": "1260000"
  },
  {
    "text": "you add another element",
    "start": "1260000",
    "end": "1262159"
  },
  {
    "text": "right now your hash table is 11.",
    "start": "1262159",
    "end": "1265280"
  },
  {
    "text": "now",
    "start": "1265280",
    "end": "1266320"
  },
  {
    "text": "the module operation if you do it",
    "start": "1266320",
    "end": "1269200"
  },
  {
    "text": "modular 11",
    "start": "1269200",
    "end": "1271200"
  },
  {
    "text": "you're going to get a different value",
    "start": "1271200",
    "end": "1273440"
  },
  {
    "text": "and now you're not pointing to the same",
    "start": "1273440",
    "end": "1275039"
  },
  {
    "text": "index anymore",
    "start": "1275039",
    "end": "1276559"
  },
  {
    "text": "so you have to do a remapping",
    "start": "1276559",
    "end": "1280159"
  },
  {
    "text": "after you add or delete",
    "start": "1280159",
    "end": "1283440"
  },
  {
    "text": "and that is costly",
    "start": "1283440",
    "end": "1285600"
  },
  {
    "text": "right",
    "start": "1285600",
    "end": "1286480"
  },
  {
    "text": "so you have to scan the entire thing and",
    "start": "1286480",
    "end": "1288080"
  },
  {
    "text": "then just reshift things it might not be",
    "start": "1288080",
    "end": "1290480"
  },
  {
    "text": "as expensive sometimes it's easy",
    "start": "1290480",
    "end": "1292080"
  },
  {
    "text": "sometimes it's slow",
    "start": "1292080",
    "end": "1294000"
  },
  {
    "text": "you know",
    "start": "1294000",
    "end": "1294960"
  },
  {
    "text": "but but that cost of remapping you have",
    "start": "1294960",
    "end": "1296960"
  },
  {
    "text": "to keep it in mind sometimes that's why",
    "start": "1296960",
    "end": "1298480"
  },
  {
    "text": "people just say okay i'm gonna work with",
    "start": "1298480",
    "end": "1300720"
  },
  {
    "text": "i i don't i'm not gonna resize my hash",
    "start": "1300720",
    "end": "1303280"
  },
  {
    "text": "table it's always going to be i don't",
    "start": "1303280",
    "end": "1304480"
  },
  {
    "text": "know it's always going to be 10. you",
    "start": "1304480",
    "end": "1306480"
  },
  {
    "text": "know",
    "start": "1306480",
    "end": "1307760"
  },
  {
    "text": "and as a result",
    "start": "1307760",
    "end": "1309280"
  },
  {
    "text": "you",
    "start": "1309280",
    "end": "1310240"
  },
  {
    "text": "uh",
    "start": "1310240",
    "end": "1311679"
  },
  {
    "text": "you don't you don't you don't",
    "start": "1311679",
    "end": "1314240"
  },
  {
    "text": "anticipate that it's going to be",
    "start": "1314240",
    "end": "1315600"
  },
  {
    "text": "increasing",
    "start": "1315600",
    "end": "1316840"
  },
  {
    "text": "right uh",
    "start": "1316840",
    "end": "1320080"
  },
  {
    "text": "but again if you fix it too large then",
    "start": "1320640",
    "end": "1323200"
  },
  {
    "text": "you're consuming a lot of memory and you",
    "start": "1323200",
    "end": "1324880"
  },
  {
    "text": "have you might have gaps if it's too",
    "start": "1324880",
    "end": "1327200"
  },
  {
    "text": "small then you might add values to the",
    "start": "1327200",
    "end": "1329840"
  },
  {
    "text": "hash table and that will cause any",
    "start": "1329840",
    "end": "1331600"
  },
  {
    "text": "mapping and that's a problem with",
    "start": "1331600",
    "end": "1333919"
  },
  {
    "text": "cassandra and char any sharding database",
    "start": "1333919",
    "end": "1336960"
  },
  {
    "text": "distributed database right",
    "start": "1336960",
    "end": "1339360"
  },
  {
    "text": "the problem is",
    "start": "1339360",
    "end": "1340880"
  },
  {
    "text": "to do sharding",
    "start": "1340880",
    "end": "1343520"
  },
  {
    "text": "you kind of use a hash table",
    "start": "1343520",
    "end": "1345520"
  },
  {
    "text": "right because i'm if i'm doing a query",
    "start": "1345520",
    "end": "1348960"
  },
  {
    "text": "and",
    "start": "1348960",
    "end": "1349919"
  },
  {
    "text": "this is my node",
    "start": "1349919",
    "end": "1352080"
  },
  {
    "start": "1350000",
    "end": "1526000"
  },
  {
    "text": "right uh you don't really specify a node",
    "start": "1352080",
    "end": "1354720"
  },
  {
    "text": "per se but you're",
    "start": "1354720",
    "end": "1356320"
  },
  {
    "text": "based on the key so like if i'm",
    "start": "1356320",
    "end": "1358080"
  },
  {
    "text": "inserting value uh",
    "start": "1358080",
    "end": "1360720"
  },
  {
    "text": "eight",
    "start": "1360720",
    "end": "1361679"
  },
  {
    "text": "you hash that and then the value",
    "start": "1361679",
    "end": "1365280"
  },
  {
    "text": "will map to a node",
    "start": "1365280",
    "end": "1367679"
  },
  {
    "text": "or a shard",
    "start": "1367679",
    "end": "1369360"
  },
  {
    "text": "or a partition even partitioning you can",
    "start": "1369360",
    "end": "1371440"
  },
  {
    "text": "do hash partitioning right i'm talking",
    "start": "1371440",
    "end": "1373440"
  },
  {
    "text": "about how hash partitioning here not",
    "start": "1373440",
    "end": "1375440"
  },
  {
    "text": "range partition range is easy like from",
    "start": "1375440",
    "end": "1378000"
  },
  {
    "text": "0 to 10 000 go to this server from 10 01",
    "start": "1378000",
    "end": "1382720"
  },
  {
    "text": "to 20 000 go to this server from 20 000",
    "start": "1382720",
    "end": "1386080"
  },
  {
    "text": "you know you get this idea",
    "start": "1386080",
    "end": "1388480"
  },
  {
    "text": "but if you are using hash based sharding",
    "start": "1388480",
    "end": "1392480"
  },
  {
    "text": "then every value is hashed and then you",
    "start": "1392480",
    "end": "1394960"
  },
  {
    "text": "calculate an index and that index point",
    "start": "1394960",
    "end": "1397520"
  },
  {
    "text": "to our array and the value of that",
    "start": "1397520",
    "end": "1400159"
  },
  {
    "text": "value of that index in the array gives",
    "start": "1400159",
    "end": "1402799"
  },
  {
    "text": "you the server name",
    "start": "1402799",
    "end": "1404320"
  },
  {
    "text": "then you hit that server but what",
    "start": "1404320",
    "end": "1406159"
  },
  {
    "text": "happened if you add a new server then",
    "start": "1406159",
    "end": "1408080"
  },
  {
    "text": "the whole thing changes",
    "start": "1408080",
    "end": "1410559"
  },
  {
    "text": "right",
    "start": "1410559",
    "end": "1411520"
  },
  {
    "text": "then what do you do if the changes then",
    "start": "1411520",
    "end": "1413600"
  },
  {
    "text": "all of a sudden if you try to read a key",
    "start": "1413600",
    "end": "1415919"
  },
  {
    "text": "instead of going to that particular",
    "start": "1415919",
    "end": "1417840"
  },
  {
    "text": "server",
    "start": "1417840",
    "end": "1419520"
  },
  {
    "text": "the the remapping has changed now you're",
    "start": "1419520",
    "end": "1422480"
  },
  {
    "text": "going to another server and you're not",
    "start": "1422480",
    "end": "1423679"
  },
  {
    "text": "going to find the key",
    "start": "1423679",
    "end": "1425279"
  },
  {
    "text": "that's why cassandra",
    "start": "1425279",
    "end": "1427440"
  },
  {
    "text": "sometimes",
    "start": "1427440",
    "end": "1429840"
  },
  {
    "text": "with this if you when you do a remapping",
    "start": "1429840",
    "end": "1432159"
  },
  {
    "text": "it's really hard",
    "start": "1432159",
    "end": "1433679"
  },
  {
    "text": "you know",
    "start": "1433679",
    "end": "1434559"
  },
  {
    "text": "they solved all these problems but i'm",
    "start": "1434559",
    "end": "1436320"
  },
  {
    "text": "just discussing the the the original",
    "start": "1436320",
    "end": "1438799"
  },
  {
    "text": "problem here right i say struggle i i",
    "start": "1438799",
    "end": "1441279"
  },
  {
    "text": "say initially right",
    "start": "1441279",
    "end": "1443120"
  },
  {
    "text": "so like if you add something i know to",
    "start": "1443120",
    "end": "1445360"
  },
  {
    "text": "the ring then the neighboring rings",
    "start": "1445360",
    "end": "1448240"
  },
  {
    "text": "has to share values because now you're",
    "start": "1448240",
    "end": "1449919"
  },
  {
    "text": "remapping keys so the oh if i'm if i'm",
    "start": "1449919",
    "end": "1452799"
  },
  {
    "text": "adding the value to a node i need to",
    "start": "1452799",
    "end": "1455279"
  },
  {
    "text": "join this value to this rank this this",
    "start": "1455279",
    "end": "1458559"
  },
  {
    "text": "cluster and now i have to borrow values",
    "start": "1458559",
    "end": "1460640"
  },
  {
    "text": "from the my neighbors based on this",
    "start": "1460640",
    "end": "1462799"
  },
  {
    "text": "remapping you know because now oh i no",
    "start": "1462799",
    "end": "1465360"
  },
  {
    "text": "longer hold this key after this",
    "start": "1465360",
    "end": "1466960"
  },
  {
    "text": "remapping oh this this guy helds this",
    "start": "1466960",
    "end": "1468960"
  },
  {
    "text": "key so we have to resharp and this is",
    "start": "1468960",
    "end": "1470960"
  },
  {
    "text": "where another concept was invented in",
    "start": "1470960",
    "end": "1473120"
  },
  {
    "text": "1997 i believe",
    "start": "1473120",
    "end": "1475120"
  },
  {
    "text": "called consistent hashing where they",
    "start": "1475120",
    "end": "1478240"
  },
  {
    "text": "try to",
    "start": "1478240",
    "end": "1479440"
  },
  {
    "text": "minimize the effect",
    "start": "1479440",
    "end": "1481440"
  },
  {
    "text": "of this remapping because the mapping is",
    "start": "1481440",
    "end": "1484159"
  },
  {
    "text": "expensive",
    "start": "1484159",
    "end": "1485200"
  },
  {
    "text": "right",
    "start": "1485200",
    "end": "1486400"
  },
  {
    "text": "so consistent hashing maybe another",
    "start": "1486400",
    "end": "1488320"
  },
  {
    "text": "topic solves this to minimize",
    "start": "1488320",
    "end": "1491440"
  },
  {
    "text": "that the effect after adding or deleting",
    "start": "1491440",
    "end": "1494720"
  },
  {
    "text": "a node because remember in distributed",
    "start": "1494720",
    "end": "1496880"
  },
  {
    "text": "architecture you're going to add and",
    "start": "1496880",
    "end": "1498559"
  },
  {
    "text": "remove nodes all the time so consistent",
    "start": "1498559",
    "end": "1500720"
  },
  {
    "text": "hashing",
    "start": "1500720",
    "end": "1501840"
  },
  {
    "text": "the idea of having to consistently",
    "start": "1501840",
    "end": "1504000"
  },
  {
    "text": "always hash the same server no matter",
    "start": "1504000",
    "end": "1506080"
  },
  {
    "text": "what",
    "start": "1506080",
    "end": "1507440"
  },
  {
    "text": "is very very critical",
    "start": "1507440",
    "end": "1509279"
  },
  {
    "text": "and uh maybe that's another topic for",
    "start": "1509279",
    "end": "1512159"
  },
  {
    "text": "another day i hope you enjoyed this",
    "start": "1512159",
    "end": "1513840"
  },
  {
    "text": "episode what do you think about hashtag",
    "start": "1513840",
    "end": "1515520"
  },
  {
    "text": "builds how are you using it",
    "start": "1515520",
    "end": "1517440"
  },
  {
    "text": "did you run into any problems that",
    "start": "1517440",
    "end": "1519760"
  },
  {
    "text": "we you can share let me know in the",
    "start": "1519760",
    "end": "1521440"
  },
  {
    "text": "comment section below i'm gonna see you",
    "start": "1521440",
    "end": "1523039"
  },
  {
    "text": "in the next one you guys awesome goodbye",
    "start": "1523039",
    "end": "1527278"
  }
]