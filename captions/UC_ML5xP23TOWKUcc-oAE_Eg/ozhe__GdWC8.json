[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "모두 안녕하세요, 저는 Hussein Nasser 이며\n예시로 배우는 소프트웨어 엔지니어링을 진행하고 있습니다",
    "start": "0",
    "end": "7998"
  },
  {
    "text": "오늘은 프록시와 리버스 프록시의 차이점에 대해 알아볼텐데요",
    "start": "8000",
    "end": "13998"
  },
  {
    "text": "그 둘의 개념과 장점에 대한 내용을 다뤄보겠습니다",
    "start": "14000",
    "end": "22998"
  },
  {
    "start": "20000",
    "end": "145000"
  },
  {
    "text": "그럼 프록시를 먼저 알아봅시다",
    "start": "23000",
    "end": "25998"
  },
  {
    "text": "가장 간단한 정의로 설명하자면,\n프록시는 클라이언트의 신원을 감추는 서버입니다",
    "start": "26000",
    "end": "36998"
  },
  {
    "text": "클라이언트는 프록시를 통해 서버에 연결하게 되는데",
    "start": "37000",
    "end": "42998"
  },
  {
    "text": "예를 들어 google.com 에 접속하고 싶은데 \n구글이 나에 대한 정보에 접근할 수 없도록 하고 싶다면",
    "start": "43000",
    "end": "49998"
  },
  {
    "text": "프록시를 통해 서버에 연결합니다\n이게 보편적인 ISP 서버죠",
    "start": "50000",
    "end": "54998"
  },
  {
    "text": "앞단에 있는 프록시에 연결을 먼저 하고,\n프록시가 최종 목적지인 서버까지 안내를 하게 됩니다",
    "start": "55000",
    "end": "62998"
  },
  {
    "text": "예시를 한 번 봅시다",
    "start": "63000",
    "end": "64998"
  },
  {
    "text": "클라이언트 1, 2, 3이 있고, 모바일 기기와 노트북이 있죠",
    "start": "65000",
    "end": "71998"
  },
  {
    "text": "그리고 모든 기기는 중앙 프록시에 연결하게 됩니다",
    "start": "72000",
    "end": "75998"
  },
  {
    "text": "보내는 모든 요청의 헤더에 그 정보가 담겨 있죠",
    "start": "76000",
    "end": "80998"
  },
  {
    "text": "google 이나 다른 특정 웹사이트에 접속하고 싶다면 \n제 트래픽은 이 프록시로 먼저 라우팅이 될 것이고",
    "start": "81000",
    "end": "91998"
  },
  {
    "text": "그 다음에 프록시가 나를 대신해 요청을 보낼 겁니다\n예를 들면 구글의 80번 포트에 http 요청을 보낸다면,",
    "start": "92000",
    "end": "100998"
  },
  {
    "text": "실제로는 프록시가 그 요청을 서버에 보내서 \n누가 클라이언트인지 모르도록 할 겁니다",
    "start": "101000",
    "end": "109998"
  },
  {
    "text": "이게 제가 내리는 프록시의 정의입니다",
    "start": "110000",
    "end": "116998"
  },
  {
    "text": "서버가 클라이언트가 누구인지 모르도록 한다, \n가 가장 간단한 정의가 되죠",
    "start": "117000",
    "end": "121998"
  },
  {
    "text": "요청은 클라이언트가 보내지만 서버는 누가 보냈는지 모르는거죠",
    "start": "122000",
    "end": "127998"
  },
  {
    "text": "그래서 서버가 응답을 보내더라도, 프록시에게 보내게 됩니다",
    "start": "128000",
    "end": "132998"
  },
  {
    "text": "서버는 궁극적으로는 프록시에 대한 정보만 알게 됩니다",
    "start": "133000",
    "end": "137998"
  },
  {
    "text": "프록시는 클라이언트가 누구인지 알기 때문에 -\n클라이언트에 대한 정보를 테이블 형태로 가지고 있죠 -",
    "start": "138000",
    "end": "143998"
  },
  {
    "text": "그래서 서버의 응답 트래픽을 다시 요청을 보냈던 클라이언트에게 보냅니다",
    "start": "144000",
    "end": "147998"
  },
  {
    "start": "145000",
    "end": "294000"
  },
  {
    "text": "이것의 장점은 무엇일까요?",
    "start": "148000",
    "end": "150998"
  },
  {
    "text": "당연하지만, 익명성이 있습니다\n내가 누구인지 서버가 모른다는 점이죠",
    "start": "151000",
    "end": "156998"
  },
  {
    "text": "캐싱은 꽤나 멋진 기능인데요, 제 블로그 husseinnasser.com 과 같이\n정적인 사이트에 요청을 보낸다면",
    "start": "157000",
    "end": "167998"
  },
  {
    "text": "프록시는 서버에서 자바스크립트나 html 파일 같은, 잘 변하지 않는 \n정적인 파일들을 서버에서 가져오게 됩니다",
    "start": "168000",
    "end": "180998"
  },
  {
    "text": "이렇게 프록시에서 서버로 왔다갔다 하는 과정은 비용이 듭니다",
    "start": "181000",
    "end": "187998"
  },
  {
    "text": "프록시는 주로 클라이언트에 더 가깝게 배치되어 있기 때문이죠",
    "start": "188000",
    "end": "191998"
  },
  {
    "text": "그래서 요청을 보내고, 다시 응답을 받을 때, \n설정을 통해 로컬 캐시를 보관하도록 할 수 있습니다",
    "start": "192000",
    "end": "200998"
  },
  {
    "text": "그러면 프록시는 이걸 보관하다가, 다음 번에 다른 클라이언트가 \n똑같은 곳으로 요청을 보내도",
    "start": "201000",
    "end": "205998"
  },
  {
    "text": "모든 요청을 받을 때마다 \n서버에서 똑같은 파일을 받아올 필요가 없습니다",
    "start": "206000",
    "end": "213998"
  },
  {
    "text": "자주 바뀌는 파일만 가져오면 되죠 \n그래서 캐싱도 프록시의 기능 중 하나이구요",
    "start": "214000",
    "end": "217998"
  },
  {
    "text": "특정 사이트의 접속을 막을 수 있다는 점, 많이 쓰는 기능이죠",
    "start": "218000",
    "end": "222998"
  },
  {
    "text": "특정 국가들은 유해 사이트나 정치적인 사이트를 막고 싶어하죠",
    "start": "223000",
    "end": "228998"
  },
  {
    "text": "그런 차단 규칙들을 여기에 정의하면, 나중에 요청이 들어와도 \n프록시가 \"미안, 이 사이트에는 접속 못해\" 하고 막는 겁니다",
    "start": "229000",
    "end": "238998"
  },
  {
    "text": "그리고 404와 같이 접근 불가하다는 정보를 반환하겠죠",
    "start": "239000",
    "end": "244998"
  },
  {
    "text": "그런데 프록시를 속이는 방법을 찾는다면,\n예를 들어 다른 vpn 서버로 요청을 보내고 싶다고 한다면,",
    "start": "245000",
    "end": "251998"
  },
  {
    "text": "프록시는 요청을 통과시켜주고 서버에서 데이터를 얻어 오겠지만",
    "start": "252000",
    "end": "259997"
  },
  {
    "text": "일종의 속임수를 사용하는 방법이죠",
    "start": "260000",
    "end": "263998"
  },
  {
    "text": "특정 사이트의 접속을 막을 수 있다는 점, \n클라이언트를 위한 장점인지는 모르겠는데",
    "start": "264000",
    "end": "267998"
  },
  {
    "text": "ISP 나 정부를 위한 장점이기는 합니다",
    "start": "268000",
    "end": "271998"
  },
  {
    "text": "Geofencing 은 특정 클라이언트가 \n특정 서버에만 접속할 수 있도록 하는 것입니다",
    "start": "272000",
    "end": "277998"
  },
  {
    "text": "클라이언트에 울타리 (fence) 를 치는거죠",
    "start": "278000",
    "end": "280998"
  },
  {
    "text": "어떤 나라의 어떤 지역에서 온 클라이언트는\n특정 컨텐츠를 보지 못하도록 차단하는 겁니다",
    "start": "281000",
    "end": "288998"
  },
  {
    "text": "민주주의를 죽이는 거죠",
    "start": "289000",
    "end": "293998"
  },
  {
    "start": "294000",
    "end": "409000"
  },
  {
    "text": "좋습니다 여기까진 프록시였고 이제 리버스 프록시로 넘어갑시다",
    "start": "294000",
    "end": "298998"
  },
  {
    "text": "리버스 프록시는 말 그대로 리버스 프록시인데요 \n저는 항상 그 둘이 헷갈리더라고요",
    "start": "299000",
    "end": "306998"
  },
  {
    "text": "그런데 그게 가장 좋은 정의 같아요\n프록시는 서버가 클라이언트에 대한 정보를 모르는 것이라고 했었죠",
    "start": "307000",
    "end": "315998"
  },
  {
    "text": "리버스 프록시는 클라이언트 자신이 어떤 서버에 연결하는지 모르는 것입니다 \n제가 이해하는 리버스 프록시이죠",
    "start": "316000",
    "end": "325998"
  },
  {
    "text": "프록시는, 서버가 본인에게 연결하는 클라이언트가 누구인지 모르게 합니다",
    "start": "326000",
    "end": "333998"
  },
  {
    "text": "그런데 리버스 프록시는, 반대이죠 \n클라이언트가 자신이 어떤 서버에 연결하는지 모르게 합니다",
    "start": "334000",
    "end": "340998"
  },
  {
    "text": "클라이언트가 리버스 프록시를 통해 80번 포트에 연결하면",
    "start": "341000",
    "end": "346998"
  },
  {
    "text": "리버스 프록시는 마법을 부려서 이렇게 하죠\n\"너 이 서버 (혹은 앱을 띄웠다면, 앱) 에 연결하고 싶어?",
    "start": "347000",
    "end": "356998"
  },
  {
    "text": "아예 이걸 구글의 리버스 프록시라고 합시다\n그럼 google.com 에 접속할 때 이 리버스 프록시에 연결하게 되죠",
    "start": "357000",
    "end": "365998"
  },
  {
    "text": "그 다음에 리버스 프록시의 ip 주소를 가진 google.com 에서 이렇게 합니다",
    "start": "366000",
    "end": "369998"
  },
  {
    "text": "이 서버는 널널하고 이 서버는 아니네, 너를 이 서버로 전환해 줄게",
    "start": "370000",
    "end": "376998"
  },
  {
    "text": "그리고 이건 완전히 내부적인 절차입니다 \n클라이언트는 이 과정에 대해 전혀 모르겠죠",
    "start": "377000",
    "end": "383998"
  },
  {
    "text": "클라이언트는 리버스 프록시에 연결하고,",
    "start": "384000",
    "end": "386998"
  },
  {
    "text": "리버스 프록시는 다른 서버 - 심지어는 다른 포트로 연결합니다",
    "start": "387000",
    "end": "390998"
  },
  {
    "text": "그리고 이건 내부 트래픽이기 때문에 사용자에게는 상관 없는 일입니다 \n이 포트의 보안이 좋든 좋지 않든",
    "start": "391000",
    "end": "398998"
  },
  {
    "text": "이 서버에 프록시를 통해 요청을 보내고, \n서버에서는 리버스 프록시로 응답을 보내고",
    "start": "399000",
    "end": "405998"
  },
  {
    "text": "마지막으로 클라이언트에게 도달합니다",
    "start": "406000",
    "end": "408998"
  },
  {
    "start": "409000",
    "end": "666000"
  },
  {
    "text": "자 이 과정의 장점은 바로 보이죠",
    "start": "409000",
    "end": "414998"
  },
  {
    "text": "이제 구글 말고 여러분이 만드는 앱에 대해 말해봅시다",
    "start": "415000",
    "end": "418998"
  },
  {
    "text": "이건 굉장히 흔한 패턴인데요, \n앱을 만들어서 내부 네트워크 80번 포트에 배포를 한 뒤",
    "start": "419000",
    "end": "428998"
  },
  {
    "text": "배포된 앱을 복사해서 다른 ip 주소를 가진 머신에 붙여넣기를 하면",
    "start": "429000",
    "end": "435998"
  },
  {
    "text": "이제 내 앱에 연결하려는 모든 클라이언트는 \n리버스 프록시에 먼저 연결합니다",
    "start": "436000",
    "end": "439998"
  },
  {
    "text": "그리고 이 서버의 리버스 프록시는 \n부하 분산기 (로드밸랜서) 의 역할을 합니다",
    "start": "440000",
    "end": "444998"
  },
  {
    "text": "먼저, 서버들을 순차적으로 순회하는 \nRound-robin 방법으로 순회할 수 있죠",
    "start": "445000",
    "end": "450998"
  },
  {
    "text": "리버스 프록시에 연결하는 클라이언트는 \n이 뒤에 있는 실제 서버에 대해서는 전혀 모릅니다",
    "start": "451000",
    "end": "461998"
  },
  {
    "text": "부하 분산 (로드밸런싱) 이 첫 번째 기능이었고요",
    "start": "462000",
    "end": "464998"
  },
  {
    "text": "캐싱은 여기서도 멋진 기능이죠 \n변화 빈도가 낮은 정보를 캐싱할 수 있습니다",
    "start": "465000",
    "end": "471998"
  },
  {
    "text": "만약 똑같은 요청을 또 보낸다면, 멱등성을 가진다는 전제 하에,\n캐싱을 할 수 있습니다",
    "start": "472000",
    "end": "482998"
  },
  {
    "text": "물론 위험할 수도 있고 캐싱이 만료될 수도 있기 때문에,\n캐싱은 영리하게 적용해야 합니다",
    "start": "483000",
    "end": "491998"
  },
  {
    "text": "그러나저러나 캐싱이죠",
    "start": "492000",
    "end": "493998"
  },
  {
    "text": "최고의 기능 중 하나인 \"내부 트래픽 고립화\" 입니다",
    "start": "494000",
    "end": "496998"
  },
  {
    "text": "원한다면 모든 것을 완벽한 내부 비무장지대 (DMZ 지대) 에서 \n운영할 수도 있는데요",
    "start": "497000",
    "end": "506998"
  },
  {
    "text": "컨테이너에서 실행되든, 가상 머신이나 실물 머신에서 실행되든 \n아무도 이것에 대해 모르게 할 수 있습니다",
    "start": "507000",
    "end": "515998"
  },
  {
    "text": "모두 내부적인 일이기 때문이죠\n포트도 여러 개로 설정할 수 있는데",
    "start": "516000",
    "end": "519998"
  },
  {
    "text": "이 포트 정보도 세상으로부터 완전히 차단되어 있고",
    "start": "520000",
    "end": "524998"
  },
  {
    "text": "이 정보를 알고 있는 리버스 포트만이 유일하게 접속할 수 있는 것이죠",
    "start": "525000",
    "end": "530998"
  },
  {
    "text": "이 쪽은 클라이언트가 접속하는 방향이지만, \n반대편은 완벽히 차단됩니다",
    "start": "531000",
    "end": "537998"
  },
  {
    "text": "이 쪽은 보안이 제대로 안 되어 있을 수 있는데,\n이 쪽은 https 설정이 잘 되어야 합니다",
    "start": "538000",
    "end": "545998"
  },
  {
    "text": "http 는 또 하나의 다른 설정으로 두고\nhttps 설정을 추가해줍니다",
    "start": "546000",
    "end": "548998"
  },
  {
    "text": "그래서 외부만 보안 설정을 하고 내부는 하지 않아도 됩니다",
    "start": "549000",
    "end": "553998"
  },
  {
    "text": "할 수 있다면야 해도 됩니다만",
    "start": "554000",
    "end": "556998"
  },
  {
    "text": "로깅, 어떤 서버가 죽었는지 혹은 배포되었는지 \n이런 정보를 여기 로깅할 수 있습니다",
    "start": "557000",
    "end": "566998"
  },
  {
    "text": "그래서 리버스 프록시에 가서 이런 정보를 질의하면 됩니다",
    "start": "567000",
    "end": "569998"
  },
  {
    "text": "그리고 마지막으로, 카나리 배포 역시 매우 멋진 기능인데요",
    "start": "570000",
    "end": "576998"
  },
  {
    "text": "최근에, 아시는지 모르겠는데, \n유튜브는 시청자의 3% 를 대상으로 실험을 했었습니다",
    "start": "577000",
    "end": "583998"
  },
  {
    "text": "그들은 자동 생성된 썸네일을 쓸 수 있었는데요",
    "start": "584000",
    "end": "588998"
  },
  {
    "text": "이걸 어떻게 했을까요? 이렇게 한 겁니다",
    "start": "589000",
    "end": "591998"
  },
  {
    "text": "모든 요청에 대해, 다른 서버 버전이 적용되어 있습니다",
    "start": "592000",
    "end": "599998"
  },
  {
    "text": "이 서버는 다른 서버들과 같은 포트에서 실행되지만, \n버전이 달라서 내용이 조금씩 다릅니다",
    "start": "600000",
    "end": "606998"
  },
  {
    "text": "API 요청도 동일하고 응답도 동일하지만\n컨텐츠만 바뀌는 겁니다",
    "start": "607000",
    "end": "613998"
  },
  {
    "text": "만약 여러분이 그 3% 에 속했다면\n이 특별한 서버로 라우팅이 되어서",
    "start": "614000",
    "end": "623998"
  },
  {
    "text": "이 특별한 서버로 라우팅이 되어서\n남들과 다른 응답을 받았을 것입니다",
    "start": "624000",
    "end": "629998"
  },
  {
    "text": "인스타그램도 신규 기능을 테스트하고 싶을 때마다\n이 방법을 사용하는데요",
    "start": "630000",
    "end": "633998"
  },
  {
    "text": "모든 사용자들을 대상으로 실험을 하고 싶지는 않으니",
    "start": "634000",
    "end": "639998"
  },
  {
    "text": "이 특정 서버에 접속하는 사람들한테만 실험을 하고\n문제는 없는지 확인합니다",
    "start": "640000",
    "end": "646998"
  },
  {
    "text": "아무튼 좋습니다 영상이 너무 길지는 않았는지 모르겠네요",
    "start": "647000",
    "end": "651998"
  },
  {
    "text": "유익한 영상이었길 바라고, 새로 오신 분들이라면",
    "start": "652000",
    "end": "655998"
  },
  {
    "text": "소프트웨어 엔지니어링 관련 영상이 많으니\n구독해주시면 감사하겠습니다",
    "start": "656000",
    "end": "660998"
  },
  {
    "text": "다음 영상에서 뵙죠 좋은 하루 보내세요",
    "start": "661000",
    "end": "665998"
  }
]