[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "what's going on guys my name is hussain and let's just jump into the software news we have some",
    "start": "240",
    "end": "7440"
  },
  {
    "text": "spicy a little bit old news uh some of you actually sent me this",
    "start": "7440",
    "end": "13040"
  },
  {
    "text": "article and i gotta credit you let me i got your name kashif minhaj thank you so much for",
    "start": "13040",
    "end": "20000"
  },
  {
    "text": "sending me this hour to go so guys microservices we talked about them in this channel they are beautiful architecture uh",
    "start": "20000",
    "end": "28240"
  },
  {
    "text": "we talked about their pros we also talked about their counts the bad thing about them and how",
    "start": "28240",
    "end": "34160"
  },
  {
    "text": "people are just jumping into this train like there is no tomorrow and and",
    "start": "34160",
    "end": "39200"
  },
  {
    "text": "how bad this is we need to stop it we need to stop the microservices wreckage",
    "start": "39200",
    "end": "46559"
  },
  {
    "text": "train and then kellish nod hopefully you pronounce your name",
    "start": "46559",
    "end": "51840"
  },
  {
    "text": "right nailed this article",
    "start": "51840",
    "end": "57280"
  },
  {
    "text": "let me repeat this he nailed this article it's a beautiful",
    "start": "57280",
    "end": "62559"
  },
  {
    "text": "well-written and i agree with almost all the points here and i discussed almost all these points",
    "start": "62559",
    "end": "67920"
  },
  {
    "text": "in my channel i talked about them different videos i said guys hold on hold your horses as the american",
    "start": "67920",
    "end": "75680"
  },
  {
    "text": "says all your horses scaling with common sense",
    "start": "75680",
    "end": "80799"
  },
  {
    "text": "so so i'll leave the article below for you guys to read the the the jest and the summary of this",
    "start": "80799",
    "end": "88560"
  },
  {
    "text": "articles is guys the old ways of scaling",
    "start": "88560",
    "end": "94400"
  },
  {
    "text": "are not dead yet microservices horizontal scaling",
    "start": "94400",
    "end": "100479"
  },
  {
    "text": "is good but before you jump into that",
    "start": "100479",
    "end": "106000"
  },
  {
    "text": "realize the cost realize the the expense of maintaining",
    "start": "106000",
    "end": "113200"
  },
  {
    "text": "that thing don't jump into this because it's fancy because it's sexy",
    "start": "113200",
    "end": "119280"
  },
  {
    "text": "because it's just uh what everybody's doing that doesn't mean that you're using this technology that",
    "start": "119280",
    "end": "126240"
  },
  {
    "text": "means you're modern right that's that's what people like to say oh this is the modern way of doing things no",
    "start": "126240",
    "end": "132560"
  },
  {
    "text": "if it scales who cares i like that that rhymed all right guys let's let's just jump",
    "start": "132560",
    "end": "138080"
  },
  {
    "text": "into all the points there are around uh what 14 15 16 16",
    "start": "138080",
    "end": "144319"
  },
  {
    "text": "points will they go through one by one and you can use the youtube chapters to jump into the one you're interested in",
    "start": "144319",
    "end": "150800"
  },
  {
    "text": "because they're they're i'll just divide them into chapters you can jump into this so the first",
    "start": "150800",
    "end": "155840"
  },
  {
    "text": "thing we're going to jump into that point is and i'm going to just read the the first title and then comment on that feel free",
    "start": "155840",
    "end": "163680"
  },
  {
    "text": "to actually read the interesting uh topic in details if you want to but i'm",
    "start": "163680",
    "end": "170319"
  },
  {
    "text": "going to uh obviously comment and and critique the article on my way and how i",
    "start": "170319",
    "end": "175840"
  },
  {
    "text": "understood it so the first thing it says comparisons are almost always meaningless",
    "start": "175840",
    "end": "182319"
  },
  {
    "start": "180000",
    "end": "330000"
  },
  {
    "text": "i could not agree with that so it says oh thousand requests per seconds on static",
    "start": "182319",
    "end": "188239"
  },
  {
    "text": "data is not the same as thousand requests per second",
    "start": "188239",
    "end": "193519"
  },
  {
    "text": "on an api that does a query on the database or a thousand request that is a websocket connection or a",
    "start": "193519",
    "end": "200000"
  },
  {
    "text": "thousand requests that does a grpc or a thousand request that does volcan rest api uh graphql those are totally so",
    "start": "200000",
    "end": "207840"
  },
  {
    "text": "then the metric using request is incomplete it does not mean",
    "start": "207840",
    "end": "214560"
  },
  {
    "text": "if your api serves 1 000 requests per second and my api is every one thousand requested a second",
    "start": "214560",
    "end": "219760"
  },
  {
    "text": "that is not an equivalent thing so i cannot compare if you you can serve",
    "start": "219760",
    "end": "225280"
  },
  {
    "text": "a million requests per second serving an html file and i can serve",
    "start": "225280",
    "end": "230400"
  },
  {
    "text": "thousand requests serving as sophisticated query that is synchronous that takes a long time not",
    "start": "230400",
    "end": "236080"
  },
  {
    "text": "only just a query a transaction that start and then queries multiple tables and does some",
    "start": "236080",
    "end": "241519"
  },
  {
    "text": "more processing it's a long running transaction and what does that mean if i use a message queue and i i do",
    "start": "241519",
    "end": "247439"
  },
  {
    "text": "this asynchronously i can do millions of those requests but and and they will i will get observed",
    "start": "247439",
    "end": "254239"
  },
  {
    "text": "immediately on those requests because they are just getting queued right but are they actually",
    "start": "254239",
    "end": "260160"
  },
  {
    "text": "no they are not so comparison are really really meaningless so that's the first thing so this the topic of this",
    "start": "260160",
    "end": "267120"
  },
  {
    "text": "channel is just like okay should should we should we use microservices or not but this is not",
    "start": "267120",
    "end": "272560"
  },
  {
    "text": "only he's talking about in general right",
    "start": "272560",
    "end": "277680"
  },
  {
    "text": "think before moving to a new technology right so that's the first thing he is",
    "start": "277680",
    "end": "282720"
  },
  {
    "text": "discussing and this is a very interesting point well that reason tutorial is an article that demonstrates great scale",
    "start": "282720",
    "end": "287919"
  },
  {
    "text": "under narrow constraint how we open 10 million concurrent web sockets with a potato battery all right this is",
    "start": "287919",
    "end": "295840"
  },
  {
    "text": "going a little bit over the board there but but yeah while transmitting zero data",
    "start": "295840",
    "end": "300880"
  },
  {
    "text": "while our good while are good to satisfy academic curiosity should not be treated as general purpose",
    "start": "300880",
    "end": "308160"
  },
  {
    "text": "user manual i could not agree more theory versus practical is is completely",
    "start": "308160",
    "end": "313759"
  },
  {
    "text": "different right that's uh that's that's that's the problem that's where we try to bridge right that the people who study",
    "start": "313759",
    "end": "321919"
  },
  {
    "text": "obviously they give us a great uh input to to for innovation but it doesn't",
    "start": "321919",
    "end": "329360"
  },
  {
    "text": "always scale in practical when you try to implement it point number two scaling starts with",
    "start": "329360",
    "end": "337440"
  },
  {
    "start": "330000",
    "end": "530000"
  },
  {
    "text": "well-built software so it's talking about a polar written python web service may be able",
    "start": "337440",
    "end": "344160"
  },
  {
    "text": "to handle a thousand requests per second using a hundred dollar worth of resources compute power commodity",
    "start": "344160",
    "end": "349680"
  },
  {
    "text": "software right while a well-written one might be able to handle the same rate",
    "start": "349680",
    "end": "356080"
  },
  {
    "text": "with a 25 worth of resources",
    "start": "356080",
    "end": "361280"
  },
  {
    "text": "scaling starts bottom up with a good code and good software one moves on to scaling resources",
    "start": "361919",
    "end": "368639"
  },
  {
    "text": "horizontally or vertically i'm going to talk about that we talked about that actually in this channel after exhausting all easy optimization",
    "start": "368639",
    "end": "375120"
  },
  {
    "text": "application code boy i agree with this so",
    "start": "375120",
    "end": "381120"
  },
  {
    "text": "here's the thing guys you see that oh that's the problem we're making all the time i see that my reques",
    "start": "381120",
    "end": "389680"
  },
  {
    "text": "i my application my api my back end only serves thousand requests per second right",
    "start": "389680",
    "end": "397120"
  },
  {
    "text": "that means like one request is like what uh almost a millisecond right in this case if i do the method on my right so can i",
    "start": "397120",
    "end": "404479"
  },
  {
    "text": "actually squeeze more requests per seconds uh on my application without doing any",
    "start": "404479",
    "end": "411680"
  },
  {
    "text": "scaling people will try to optimize or scale prematurely by says oh this application",
    "start": "411680",
    "end": "419840"
  },
  {
    "text": "just only does three requests per second which is very very obviously slow right that means oh let's",
    "start": "419840",
    "end": "427360"
  },
  {
    "text": "just add more servers let's just add more applications scale horizontally",
    "start": "427360",
    "end": "432560"
  },
  {
    "text": "so your application will now okay let's spend three instances three requests so that's nine requests per second because",
    "start": "432560",
    "end": "438639"
  },
  {
    "text": "you serve them in parallel but you did not do the first thing you should do",
    "start": "438639",
    "end": "443680"
  },
  {
    "text": "why your application is serving only three requests per second why is it taking so much time so that's",
    "start": "443680",
    "end": "450000"
  },
  {
    "text": "like what 300 milliseconds per request yikesy can you speed that up can you",
    "start": "450000",
    "end": "457919"
  },
  {
    "text": "squeeze as much performance as possible from the software that's what he's talking about build",
    "start": "457919",
    "end": "463840"
  },
  {
    "text": "well-written software sometimes you can't sometimes the nature of the request is long running that's why the request",
    "start": "463840",
    "end": "471680"
  },
  {
    "text": "will take much time and now you can think okay should i make this request asynchronous that's another thing",
    "start": "471680",
    "end": "477280"
  },
  {
    "text": "he didn't mention that but just i'm adding value to this article right should i make to should i move to an",
    "start": "477280",
    "end": "483280"
  },
  {
    "text": "asynchronous uh system where i let's just submit jobs and then worry about the response at",
    "start": "483280",
    "end": "489360"
  },
  {
    "text": "other time yeah you're offloading the request execution to the back end",
    "start": "489360",
    "end": "494639"
  },
  {
    "text": "and you better have a good backing with message queues whether kafka or the rabbit mq or the zero mq whether",
    "start": "494639",
    "end": "500240"
  },
  {
    "text": "any message queue that that kind of pick and execute this thing uber recently moved to this arc",
    "start": "500240",
    "end": "505919"
  },
  {
    "text": "architecture completely asynchronous which is beautiful in their ordering payment system i'm",
    "start": "505919",
    "end": "511280"
  },
  {
    "text": "going to talk about that in another video but this is this is very important guys",
    "start": "511280",
    "end": "518320"
  },
  {
    "text": "optimize your application as a singleton before",
    "start": "518320",
    "end": "523360"
  },
  {
    "text": "moving to scaling just because your application is slow you you might don't you don't even have an",
    "start": "523360",
    "end": "528640"
  },
  {
    "text": "index and your query is slow because of that we talked about indexing check out the video here eat healthy and",
    "start": "528640",
    "end": "535440"
  },
  {
    "start": "530000",
    "end": "615000"
  },
  {
    "text": "exercise daily i don't understand that one so uh is the is the nun tech equivalent",
    "start": "535440",
    "end": "540880"
  },
  {
    "text": "of premature optimization is bad okay that's exactly what i said",
    "start": "540880",
    "end": "547680"
  },
  {
    "text": "premature optimization is bad everyone has heard it appreciate it but find",
    "start": "547680",
    "end": "553040"
  },
  {
    "text": "finds it difficult to practice in the beginning focus on writing good enough software",
    "start": "553040",
    "end": "558959"
  },
  {
    "text": "the refactor and improve as time progresses trying to build for web",
    "start": "558959",
    "end": "564399"
  },
  {
    "text": "scale on day one can turn out to be painful as the careful premature",
    "start": "564399",
    "end": "570240"
  },
  {
    "text": "optimization gets thrown out of the window as the business and the user column shared",
    "start": "570240",
    "end": "576000"
  },
  {
    "text": "unpredictably because yeah you want to ship you want to ship so you don't really care about optimization on that scale right",
    "start": "576000",
    "end": "581440"
  },
  {
    "text": "also not every piece of all software has to be low latency and high throughput to begin with",
    "start": "581440",
    "end": "587200"
  },
  {
    "text": "on on the other end of the spectrum is being lazy ignore common sense principle leaving the",
    "start": "587200",
    "end": "592560"
  },
  {
    "text": "middle i didn't really understand what he's trying to say here but essentially just premature",
    "start": "592560",
    "end": "598880"
  },
  {
    "text": "optimization is is bad and what what are we talking about is i'm gonna",
    "start": "598880",
    "end": "604240"
  },
  {
    "text": "flip this a little bit to premature scaling right because you can still do optimization at the application level as",
    "start": "604240",
    "end": "610160"
  },
  {
    "text": "he explained on point two point four kiss don't be afraid",
    "start": "610160",
    "end": "616720"
  },
  {
    "start": "615000",
    "end": "720000"
  },
  {
    "text": "and boring is greater than cool that's that's that's very very nice right that's a very nice point",
    "start": "616720",
    "end": "622640"
  },
  {
    "text": "because keep things simple if you can work with vms",
    "start": "622640",
    "end": "628240"
  },
  {
    "text": "definitely work with vms if you can work with with physical machine work with physical machine and if you",
    "start": "628240",
    "end": "634240"
  },
  {
    "text": "back to point two where it's like if your software is good it's gonna use the entire resources in",
    "start": "634240",
    "end": "639680"
  },
  {
    "text": "an efficient manner okay so it is absolutely fine to write a",
    "start": "639680",
    "end": "646160"
  },
  {
    "text": "couple of bash script to rsync files to our remote servers to get something up and running",
    "start": "646160",
    "end": "652480"
  },
  {
    "text": "it does not have to be containerized and deployed on kubernetes cluster on day one oh my god i can't",
    "start": "652480",
    "end": "659120"
  },
  {
    "text": "agree with this more that's the problem everybody want to automate everything everybody want to automate everything",
    "start": "659120",
    "end": "665360"
  },
  {
    "text": "and they don't have like to touch anything i don't we might get there after 20",
    "start": "665360",
    "end": "670800"
  },
  {
    "text": "years guys but i don't think we're there yet sometimes if you're building a small app",
    "start": "670800",
    "end": "676959"
  },
  {
    "text": "right and a small architecture a couple of bash scripts just run a",
    "start": "676959",
    "end": "683200"
  },
  {
    "text": "cover of bash script that does the job and you schedule them with one windows task or",
    "start": "683200",
    "end": "689120"
  },
  {
    "text": "linux task cron jobs that's the job keep it simple don't jump to kubernetes",
    "start": "689120",
    "end": "696959"
  },
  {
    "text": "and microservices just to do this one thing from day one a lot of people pushes microservers in day",
    "start": "696959",
    "end": "703760"
  },
  {
    "text": "one i am totally against that totally against that unless you absolutely know that your application is",
    "start": "703760",
    "end": "711200"
  },
  {
    "text": "gonna scale to the millions to the billions of billions of services like google then",
    "start": "711200",
    "end": "717360"
  },
  {
    "text": "do it from day one but it's overkill to me it's just overkill keep it simple keep it simple",
    "start": "717360",
    "end": "724880"
  },
  {
    "start": "720000",
    "end": "820000"
  },
  {
    "text": "the bottleneck is almost always the database wow this is so underrated this is so",
    "start": "724880",
    "end": "732399"
  },
  {
    "text": "underrated man this statement is so underrated the bottom line is almost always database so true because",
    "start": "732399",
    "end": "739680"
  },
  {
    "text": "your request is gonna fetch from disk at the end of the day unless you're serving static files but",
    "start": "739680",
    "end": "745600"
  },
  {
    "text": "queries databases is gonna your request eventually is gonna hit the database and",
    "start": "745600",
    "end": "751040"
  },
  {
    "text": "if your query is slow then your entire",
    "start": "751040",
    "end": "756560"
  },
  {
    "text": "pyramid will collapse basically because everything depends on that single query right so caching",
    "start": "757120",
    "end": "765120"
  },
  {
    "text": "proper indexing proper partitioning if you want to sharding i wouldn't go there unless you",
    "start": "765120",
    "end": "771760"
  },
  {
    "text": "absolutely need that but yeah basic basic basic database i'm gonna take this down to",
    "start": "771760",
    "end": "777920"
  },
  {
    "text": "plug my course introduction to database engineer where i teach you these things the fundamentals the first principles of",
    "start": "777920",
    "end": "783839"
  },
  {
    "text": "the database talk about this stuff thing what asset talk about talk about uh",
    "start": "783839",
    "end": "790560"
  },
  {
    "text": "indexing partitioning sharding what when do you we use when i talk about protocols in",
    "start": "790959",
    "end": "797120"
  },
  {
    "text": "the database quick and whether whether databases uses tcp today but whether should we ever go there with",
    "start": "797120",
    "end": "804240"
  },
  {
    "text": "pooling and and quick and multiplex connections using using",
    "start": "804240",
    "end": "809920"
  },
  {
    "text": "http 2 or versus quick in the future right i talk about all that stuff in my my course check it out",
    "start": "809920",
    "end": "817040"
  },
  {
    "text": "go to husseinus.com courses yeah our dbms work almost always yeah",
    "start": "817040",
    "end": "823839"
  },
  {
    "start": "820000",
    "end": "900000"
  },
  {
    "text": "he's he's an he's an older it's an old four correct me",
    "start": "823839",
    "end": "828959"
  },
  {
    "text": "i like i like our dms a lot of people moves to the nosql",
    "start": "828959",
    "end": "834160"
  },
  {
    "text": "yeah nothing wrong with them but believe me all the events work relational databases still work i agree",
    "start": "834160",
    "end": "841360"
  },
  {
    "text": "it's everything can be reduced to crud 97 and he's a",
    "start": "841360",
    "end": "847920"
  },
  {
    "text": "uh he's coding that is not obviously correct but yeah represented as relational data that",
    "start": "847920",
    "end": "854079"
  },
  {
    "text": "need asset guarantees you're always going to need almost going to need acid",
    "start": "854079",
    "end": "859519"
  },
  {
    "text": "guarantees almost very few problems need mapreduce or schema-less storage",
    "start": "859519",
    "end": "865120"
  },
  {
    "text": "right i don't know about this statement i mean to me all the problems i faced",
    "start": "865120",
    "end": "872079"
  },
  {
    "text": "is filled into the 97 percent i don't know if they're small what does a small mean",
    "start": "872079",
    "end": "877680"
  },
  {
    "text": "very few problems what does that mean i i kind of have to disagree with that we need someone who actually worked with",
    "start": "877680",
    "end": "884320"
  },
  {
    "text": "problems that are absolutely cannot be solved with our demands and you need schema less",
    "start": "884320",
    "end": "890160"
  },
  {
    "text": "storage and you need no sequel for that so he goes through this and there",
    "start": "890160",
    "end": "896000"
  },
  {
    "text": "everyone forgets to index well i would i don't kind of agree with that",
    "start": "896000",
    "end": "901040"
  },
  {
    "start": "900000",
    "end": "1050000"
  },
  {
    "text": "i think people are smart they know about this how do they know about indexes i mean the first thing you you spin up a",
    "start": "901040",
    "end": "906079"
  },
  {
    "text": "database you know when to index and what to index i'll i would qualify that statement",
    "start": "906079",
    "end": "912800"
  },
  {
    "text": "with everyone actually over index maybe some people actually like uber i believe",
    "start": "912800",
    "end": "917920"
  },
  {
    "text": "uh i keep forgetting i think uber moved from postgres to my sequel and that i don't know why they didn't",
    "start": "917920",
    "end": "925839"
  },
  {
    "text": "specify exactly why their their their blog was very weird for that uh",
    "start": "925839",
    "end": "930959"
  },
  {
    "text": "but they moved from postgres to my sequel again i don't remember whether my equal",
    "start": "930959",
    "end": "937920"
  },
  {
    "text": "to possible possible i believe it's possible to my sequel because they faced they over indexed",
    "start": "937920",
    "end": "944880"
  },
  {
    "text": "they just indexed every column that they are actually querying that was bad because guys indexing is not cheap",
    "start": "944880",
    "end": "951839"
  },
  {
    "text": "yeah it's great my dab is slow but if you if you use explain and we did we",
    "start": "951839",
    "end": "957120"
  },
  {
    "text": "talked about the lesson in my course and many videos in my channel you can explain and see where is",
    "start": "957120",
    "end": "962560"
  },
  {
    "text": "the path of the query takes you is it doing a full table scan and you can add an index",
    "start": "962560",
    "end": "967600"
  },
  {
    "text": "but adding too much indexes can actually slow down your rights because those indexes are cheap ain't",
    "start": "967600",
    "end": "974079"
  },
  {
    "text": "cheap you're gonna maintain them gonna add them it's not cheap",
    "start": "974079",
    "end": "980240"
  },
  {
    "text": "so yeah everyone forget to index i i would uh i wouldn't agree with that i think people are smart i think people are",
    "start": "980480",
    "end": "986800"
  },
  {
    "text": "indexed i think they i think i think that i think people over index if you ask me",
    "start": "986800",
    "end": "992000"
  },
  {
    "text": "and that's the problem or they don't know what to index which could result in on problems right",
    "start": "992000",
    "end": "998800"
  },
  {
    "text": "uh because the database guys let's go back i need to talk more about this the database not not always use the",
    "start": "998800",
    "end": "1005120"
  },
  {
    "text": "index right the database are smart it's written in a specific",
    "start": "1005120",
    "end": "1010399"
  },
  {
    "text": "and some people are now introducing a i into the database planner to to decide when to use the index",
    "start": "1010399",
    "end": "1017519"
  },
  {
    "text": "versus when to do a sequential scan sometimes a sequential scan if you're pulling a lot of rows",
    "start": "1017519",
    "end": "1022720"
  },
  {
    "text": "is way more effective than using an index because of the scattering you've got to go into index and go back",
    "start": "1022720",
    "end": "1028720"
  },
  {
    "text": "to the disk and then go back into the index and go back to to the pages and you start and yeah",
    "start": "1028720",
    "end": "1034640"
  },
  {
    "text": "this is going to be a disaster in this case the index sometimes the database pick sequential scan over indexing yeah",
    "start": "1034640",
    "end": "1041678"
  },
  {
    "text": "definitely but yeah look at this stuff guys so much stuff you can optimize without",
    "start": "1041679",
    "end": "1048079"
  },
  {
    "text": "micro services without horizontal scalability don't use an rdms what okay",
    "start": "1048079",
    "end": "1055679"
  },
  {
    "start": "1050000",
    "end": "1180000"
  },
  {
    "text": "this guy loves rtbs too much all right so he says like rdms are great",
    "start": "1055679",
    "end": "1062480"
  },
  {
    "text": "bearing the dramatic effect of the title as said earlier there are almost always",
    "start": "1062480",
    "end": "1068160"
  },
  {
    "text": "the cause of the bottom bottlenecks in a typical database back in application",
    "start": "1068160",
    "end": "1073280"
  },
  {
    "text": "than the application code itself isn't that the same point he discussed",
    "start": "1073280",
    "end": "1078320"
  },
  {
    "text": "i feel like he is repeating a little bit so all right every individual query is a network round trip to the database that",
    "start": "1078320",
    "end": "1085039"
  },
  {
    "text": "involves sending the query to the database the database planning and execution the query and sending the data back over the",
    "start": "1085039",
    "end": "1090640"
  },
  {
    "text": "network if it's possible to combine multiple query in the single okay so it's talking about yeah you can still",
    "start": "1090640",
    "end": "1097600"
  },
  {
    "text": "optimize the database itself if you're sending multiple queries on the same because it's a ccp",
    "start": "1097600",
    "end": "1103039"
  },
  {
    "text": "connection between the client which is in this case the back-end application and the database you establish a tcp",
    "start": "1103039",
    "end": "1108640"
  },
  {
    "text": "connection right and then you start sending the queries if you're if you",
    "start": "1108640",
    "end": "1113840"
  },
  {
    "text": "if you can minimize the chattiness between the back end and the database as",
    "start": "1113840",
    "end": "1121280"
  },
  {
    "text": "much as possible by sending list queries so he's giving example where you can use a cte comment",
    "start": "1121280",
    "end": "1126400"
  },
  {
    "text": "um table expressions and joins and nesting so throw this on the database and let it do",
    "start": "1126400",
    "end": "1132559"
  },
  {
    "text": "the work and give you the result one instead of doing a query and then getting back the result and then doing a query with that",
    "start": "1132559",
    "end": "1138960"
  },
  {
    "text": "result from the first query and then joining it you can do with clients i sometimes it's more effective doing it",
    "start": "1138960",
    "end": "1144240"
  },
  {
    "text": "this way but sometimes it's effective doing join i am afraid of using joins because",
    "start": "1144240",
    "end": "1149520"
  },
  {
    "text": "john is a very slippery slope if you if you don't know what the database is",
    "start": "1149520",
    "end": "1155919"
  },
  {
    "text": "going to do at the back end right is it going to scan is it going to use the indexes",
    "start": "1155919",
    "end": "1162000"
  },
  {
    "text": "sometimes it gets really nasty really quick it gets uh so we try to avoid joining us but one",
    "start": "1162000",
    "end": "1167120"
  },
  {
    "text": "small sometimes it's not possible but yeah that i agree with this",
    "start": "1167120",
    "end": "1172559"
  },
  {
    "text": "if you can minimize the number of queries do if not",
    "start": "1172559",
    "end": "1178480"
  },
  {
    "text": "then um you have to do it this way nine networking i o is really hard",
    "start": "1178480",
    "end": "1183520"
  },
  {
    "start": "1180000",
    "end": "1280000"
  },
  {
    "text": "network is little as possible yeah this is exactly the same point he's repeating himself a little bit but",
    "start": "1183520",
    "end": "1190400"
  },
  {
    "text": "i like i like that i like that so chattiness guys so we have a database",
    "start": "1190400",
    "end": "1197200"
  },
  {
    "text": "and we have the client which is the backend application and if you if a tcp guys is very expensive",
    "start": "1197200",
    "end": "1203679"
  },
  {
    "text": "we talked about that right check out the three-way handshake establish the tcp connection three-way",
    "start": "1203679",
    "end": "1208720"
  },
  {
    "text": "handshake and then every query you send comes back with an acknowledgement and then you have to",
    "start": "1208720",
    "end": "1214320"
  },
  {
    "text": "make sure that you actually respond and there is so much going on there so if you can send one request",
    "start": "1214320",
    "end": "1223280"
  },
  {
    "text": "and and and try to shove everything you want in that request that",
    "start": "1223280",
    "end": "1229760"
  },
  {
    "text": "will be amazing but sometimes it's not possible that's why i i keep talking about this",
    "start": "1229760",
    "end": "1235679"
  },
  {
    "text": "concept uh check out this video where i i coined this i believe i nobody",
    "start": "1235679",
    "end": "1241840"
  },
  {
    "text": "actually did this for keep your servers closed",
    "start": "1241840",
    "end": "1247120"
  },
  {
    "text": "and your database closer i made up this and i talked about it many many times my channel check out the",
    "start": "1247120",
    "end": "1253280"
  },
  {
    "text": "video here so you have to keep your servers close to your application client",
    "start": "1253280",
    "end": "1258480"
  },
  {
    "text": "and keep your database even closer you have to keep the database very close to the backing application as",
    "start": "1258480",
    "end": "1264640"
  },
  {
    "text": "much as possible so that you minimize this latency this acknowledgement these three-way handshakes",
    "start": "1264640",
    "end": "1270000"
  },
  {
    "text": "you can you have you have to if you can pre-heat this tcp connection preheat",
    "start": "1270000",
    "end": "1275440"
  },
  {
    "text": "them use pooling as much as possible i talked about pooling guys check out the video here so this is so funny",
    "start": "1275440",
    "end": "1283200"
  },
  {
    "start": "1280000",
    "end": "1500000"
  },
  {
    "text": "i talk about something and he just mentions it in the next point so 9.1 connect little pool much so he's",
    "start": "1283200",
    "end": "1290559"
  },
  {
    "text": "doing the pooling which i just literally discussed in this case right pooling guys if you don't know just",
    "start": "1290559",
    "end": "1296799"
  },
  {
    "text": "start the applications open 7 10 100 tcp connection pre-heat",
    "start": "1296799",
    "end": "1302159"
  },
  {
    "text": "them and then when request comes you can use any tcp connection to execute the request right and then it doesn't matter because",
    "start": "1302159",
    "end": "1310159"
  },
  {
    "text": "they all going to connect to the same database right so that has been solved with http 2",
    "start": "1310159",
    "end": "1318240"
  },
  {
    "text": "right and i'm pushing i'm pushing someone to use multiplexing with databases",
    "start": "1318240",
    "end": "1324320"
  },
  {
    "text": "right i don't i don't i didn't see any project that does this today but the problem with pooling is is",
    "start": "1324320",
    "end": "1332000"
  },
  {
    "text": "is very resource intensive yeah it's very great as all i don't have to use the same connection",
    "start": "1332000",
    "end": "1338080"
  },
  {
    "text": "to to send the same query over and over and multiple questions on the same tcp connection because it's a big deal we talked about it right",
    "start": "1338080",
    "end": "1345120"
  },
  {
    "text": "that's a big big problem don't use one tcp connection and send multiple queries on the same",
    "start": "1345120",
    "end": "1350640"
  },
  {
    "text": "tcp connection the database have no idea which query belongs to which uh to which response belong to which query",
    "start": "1350640",
    "end": "1357360"
  },
  {
    "text": "so you might get very bad results that's why you use pooling and now the best thing is we have the",
    "start": "1357360",
    "end": "1363760"
  },
  {
    "text": "same problem with the browsers the browsers have the same problem they send multiple requests",
    "start": "1363760",
    "end": "1369679"
  },
  {
    "text": "on this to the same host http you're pulling this page and there's like 1000",
    "start": "1369679",
    "end": "1376320"
  },
  {
    "text": "css files a little bit exaggerating and 3.js javascript file and 700 images",
    "start": "1376320",
    "end": "1382080"
  },
  {
    "text": "how do you request all of them you have to open multiple tcp connections hdb11 and then start sending as much in",
    "start": "1382080",
    "end": "1389039"
  },
  {
    "text": "parallel as possible and the goal is you can only send one request uh per tcp connection",
    "start": "1389039",
    "end": "1397440"
  },
  {
    "text": "a minus pipelining i don't want to talk about that because that's a bad idea but",
    "start": "1397600",
    "end": "1404880"
  },
  {
    "text": "yeah that's the idea so you can you can sit as money as possible but you're still blocked right with this number of",
    "start": "1404880",
    "end": "1411120"
  },
  {
    "text": "tcp connection in the browser so the browser did is that they invented hdb2 which is allow you to use one tcp",
    "start": "1411120",
    "end": "1417360"
  },
  {
    "text": "caption and kind of coat your request with headers that lets you know oh this is this",
    "start": "1417360",
    "end": "1422720"
  },
  {
    "text": "request belongs to this request there's a stream id with every request it goes so you know right so you can",
    "start": "1422720",
    "end": "1429679"
  },
  {
    "text": "multiplex multiple requests in that same tcp connection beautiful design we need to bring this",
    "start": "1429679",
    "end": "1435279"
  },
  {
    "text": "to the databases i don't know why nobody's talking about this we",
    "start": "1435279",
    "end": "1440480"
  },
  {
    "text": "need some database to support i'm not going to say hdb2 because it has its own",
    "start": "1440480",
    "end": "1446000"
  },
  {
    "text": "problem and database people don't like http because it's it's a what is what's the word they use",
    "start": "1446000",
    "end": "1452400"
  },
  {
    "text": "it's it's bloated with headers and stuff fine use quick now",
    "start": "1452400",
    "end": "1460240"
  },
  {
    "text": "the problem with udp and blocking i don't think it's a problem to be honest because databases are usually in an internal",
    "start": "1460240",
    "end": "1466720"
  },
  {
    "text": "network and udb will be allowed so you're fine someone we need",
    "start": "1466720",
    "end": "1472080"
  },
  {
    "text": "a database that support quick please someone build that database",
    "start": "1472080",
    "end": "1478640"
  },
  {
    "text": "that supports quick so that our backend application can create a beautiful single connection",
    "start": "1478640",
    "end": "1484480"
  },
  {
    "text": "and then multiplex there she i",
    "start": "1484480",
    "end": "1490320"
  },
  {
    "text": "on this single tcp connection the single connection pooling latency is the metric",
    "start": "1490799",
    "end": "1497279"
  },
  {
    "text": "i agree if i can send a request and i get the",
    "start": "1497279",
    "end": "1502400"
  },
  {
    "start": "1500000",
    "end": "1570000"
  },
  {
    "text": "the the lowest latency that possible that's the best thing and latency translates to many things right",
    "start": "1502400",
    "end": "1508159"
  },
  {
    "text": "and and and doesn't mean like how how long should it should it take to actually open the connection",
    "start": "1508159",
    "end": "1515360"
  },
  {
    "text": "and and establish the request pack the request into this connection",
    "start": "1515360",
    "end": "1520480"
  },
  {
    "text": "and send it and then execute that request on the back end that gives me the question what is really a request",
    "start": "1520480",
    "end": "1527200"
  },
  {
    "text": "very very philosophical question i talked about it right here what is a request what's a request",
    "start": "1527200",
    "end": "1532400"
  },
  {
    "text": "exactly guys what is a request because if you think about it it could be which layer are you",
    "start": "1532400",
    "end": "1538720"
  },
  {
    "text": "are you on layer seven talking about request are you on layer two talking about request that's a frame",
    "start": "1538720",
    "end": "1544159"
  },
  {
    "text": "on layer three that's just an ip packet on layer four that's a tcp packet on layer seven",
    "start": "1544159",
    "end": "1550480"
  },
  {
    "text": "that's an http packet for example request if you use using http right or using the protocol that is",
    "start": "1550480",
    "end": "1557520"
  },
  {
    "text": "built on top whatever uh whatever protocol you use right database postgres uses their own",
    "start": "1557520",
    "end": "1563360"
  },
  {
    "text": "protocol redis uses their own rsp resp protocol whatever",
    "start": "1563360",
    "end": "1569600"
  },
  {
    "text": "the internet is a wild wild west imagine a well-built highly optimized",
    "start": "1569600",
    "end": "1575679"
  },
  {
    "start": "1570000",
    "end": "1720000"
  },
  {
    "text": "low latency service with high throughput that handles 100 000 requests a second one million",
    "start": "1575679",
    "end": "1584400"
  },
  {
    "text": "concurrent users start sending requests to to it widely varying right from wiring",
    "start": "1584400",
    "end": "1590240"
  },
  {
    "text": "3g 4g and broadband network over http connection the service will instantly respond to an",
    "start": "1590240",
    "end": "1596400"
  },
  {
    "text": "incoming request on a connection but the connection to the user over the internet",
    "start": "1596400",
    "end": "1602000"
  },
  {
    "text": "is unpredictable it may take 50 millisecond or several seconds to write a response that's the",
    "start": "1602000",
    "end": "1609120"
  },
  {
    "text": "server writing the response right for this period that and when you see",
    "start": "1609120",
    "end": "1614480"
  },
  {
    "text": "right the writing the response that's just a man i can talk about this for 30 minutes",
    "start": "1614480",
    "end": "1619520"
  },
  {
    "text": "writing the response is just writing the packets in tcp and getting acknowledgement for each packet",
    "start": "1619520",
    "end": "1624720"
  },
  {
    "text": "right so that's what he means by writing a response the full response is going to be a layer 7 response but at",
    "start": "1624720",
    "end": "1631200"
  },
  {
    "text": "the packet level it's going to break down into multiple packets and each packet need to be",
    "start": "1631200",
    "end": "1636240"
  },
  {
    "text": "acknowledged and ordered and garbage so much stuff for this period",
    "start": "1636240",
    "end": "1641279"
  },
  {
    "text": "the connection is held hostage by the user's poor network and it's happening that's true",
    "start": "1641279",
    "end": "1648159"
  },
  {
    "text": "because if i can get acknowledgement on my beautiful small packets i cannot send the response and i'm",
    "start": "1648159",
    "end": "1655760"
  },
  {
    "text": "holding the connection hostage and resources precious server resources hostage that's uh",
    "start": "1655760",
    "end": "1662399"
  },
  {
    "text": "how slow raw lotus attack works if you have ever never heard about it",
    "start": "1662399",
    "end": "1668000"
  },
  {
    "text": "slow loris is a as an attack that uses a slow network to to to simulate a slow network on a",
    "start": "1668000",
    "end": "1674640"
  },
  {
    "text": "server on on a client so the server can actually spins up a lot of resources on this",
    "start": "1674640",
    "end": "1682880"
  },
  {
    "text": "so yeah it says uh typically just deploy uh asia proxy nginx we talked about all these in my channel deploy load balancer detect",
    "start": "1682880",
    "end": "1691039"
  },
  {
    "text": "all this stuff most of the stuff cloudflare have services to detect this layer 7",
    "start": "1691039",
    "end": "1697840"
  },
  {
    "text": "proxying layer 7 reverse proxy can actually detect this thing and and kind of",
    "start": "1697840",
    "end": "1703600"
  },
  {
    "text": "uh over uh kind of what's the word",
    "start": "1703600",
    "end": "1710240"
  },
  {
    "text": "shift the load on to something else instead of your back in servers shift the load to the load balancer and then nginx energy proxy ar or delt are built",
    "start": "1710240",
    "end": "1717600"
  },
  {
    "text": "to deal with this thing caching is silver bullet oh caching is great since rd beam squares",
    "start": "1717600",
    "end": "1725919"
  },
  {
    "start": "1720000",
    "end": "1740000"
  },
  {
    "text": "are expensive add layers of caching again i don't know what he says exactly here but",
    "start": "1725919",
    "end": "1733279"
  },
  {
    "text": "i would only add a cache if you absolutely need it because cash maintenance is hard man it's very",
    "start": "1733279",
    "end": "1739120"
  },
  {
    "text": "hard and he talked about that dumb caching is the best caching when a request looks up data in the cache and dumps it directly",
    "start": "1739120",
    "end": "1745840"
  },
  {
    "start": "1740000",
    "end": "1780000"
  },
  {
    "text": "in the response that's a dumb cache the cache logic has no understanding of the semantic structure of the data",
    "start": "1745840",
    "end": "1751440"
  },
  {
    "text": "stored and just does buy it out dump caches are nice and the application",
    "start": "1751440",
    "end": "1757039"
  },
  {
    "text": "needs concern about parsing the data but again you only need to how do you trust the cash that's the",
    "start": "1757039",
    "end": "1764000"
  },
  {
    "text": "bigger problem that's why we have right back cash and then right through cash and then how do you invalidate the cash",
    "start": "1764000",
    "end": "1771360"
  },
  {
    "text": "one computer science professor i forgot his name he says the hardest problem in computer science",
    "start": "1771360",
    "end": "1777600"
  },
  {
    "text": "is cash invalidation and i can't agree with that more some application state might not bad so",
    "start": "1777600",
    "end": "1785200"
  },
  {
    "start": "1780000",
    "end": "1880000"
  },
  {
    "text": "yeah uh i used to be i used to be against this i used to be the kind of guy where oh",
    "start": "1785200",
    "end": "1792559"
  },
  {
    "text": "stateless is the way always be stateless but i changed with the years as i grow",
    "start": "1792559",
    "end": "1800720"
  },
  {
    "text": "i think stateful application are needed sometimes you need your application to",
    "start": "1800720",
    "end": "1805760"
  },
  {
    "text": "be stateful i actually ran into it when i built a game uh with whip sockets what i needed my",
    "start": "1805760",
    "end": "1814000"
  },
  {
    "text": "players of that particular game to be in the same server and that's stateful right",
    "start": "1814000",
    "end": "1820720"
  },
  {
    "text": "instead of having a third layer that maintains a cache and have my application statelessly",
    "start": "1820720",
    "end": "1827120"
  },
  {
    "text": "query for the game state uh i put all of them in one server",
    "start": "1827120",
    "end": "1833600"
  },
  {
    "text": "and that's challenging to build with websockets i actually i actually couldn't build that i had to",
    "start": "1833600",
    "end": "1839360"
  },
  {
    "text": "write i didn't do it yet but i haven't something in mind to to to have the layer 7 proxy actually",
    "start": "1839360",
    "end": "1848159"
  },
  {
    "text": "terminate the connection and then have a knowledge of the content in order to do this",
    "start": "1848159",
    "end": "1853679"
  },
  {
    "text": "i don't think you can do it with whoops socket i might be able to do it with the with long",
    "start": "1853679",
    "end": "1860240"
  },
  {
    "text": "polling for example so i'm still thinking about that so might actually change my design to a",
    "start": "1860240",
    "end": "1866000"
  },
  {
    "text": "stateful design because yeah stateful is it's great because if i have my memory",
    "start": "1866000",
    "end": "1871600"
  },
  {
    "text": "data locality my cache is in beautiful same place that's the best",
    "start": "1871600",
    "end": "1876880"
  },
  {
    "text": "thing a back engine can ask for https can be e-tagged",
    "start": "1876880",
    "end": "1882880"
  },
  {
    "start": "1880000",
    "end": "2052000"
  },
  {
    "text": "304 too oh yeah this is underrated man",
    "start": "1882880",
    "end": "1888000"
  },
  {
    "text": "uh e-tags are so underrated to be honest i don't know if he agrees or disagrees",
    "start": "1888000",
    "end": "1893840"
  },
  {
    "text": "with this right i i like atex if you know what you're doing if you built",
    "start": "1893840",
    "end": "1899360"
  },
  {
    "text": "a tags yourself if you actually generated the etag the browsers can help you so much but",
    "start": "1899360",
    "end": "1905600"
  },
  {
    "text": "it's a double-edged sword if you don't do it right you can serve your users with bad old",
    "start": "1905600",
    "end": "1911039"
  },
  {
    "text": "stale cache data i talk about e-tec guys check out the video here this is not widely",
    "start": "1911039",
    "end": "1917440"
  },
  {
    "text": "as is surprising to me client-side http caching is what underpin the large scanning content delivery yeah it's just",
    "start": "1917440",
    "end": "1923600"
  },
  {
    "text": "with static data you're good with e-tags it just takes care of things the browser caches store the hash an",
    "start": "1923600",
    "end": "1929679"
  },
  {
    "text": "e-tag check the server if the file has changed by sending the a tag if it hasn't the server's response with three",
    "start": "1929679",
    "end": "1935919"
  },
  {
    "text": "or four okay we do we know how to e-tax work the work beautiful http api is doing and we know that 97.42",
    "start": "1935919",
    "end": "1942880"
  },
  {
    "text": "all api in the world are http json or attend the json report uses the reference and if their response hasn't changed why",
    "start": "1942880",
    "end": "1949919"
  },
  {
    "text": "send the response all over again nice we send an e-tag with all http",
    "start": "1949919",
    "end": "1955519"
  },
  {
    "text": "requests kite i don't know kite is the software that uses this little bit uh i don't know what",
    "start": "1955519",
    "end": "1962399"
  },
  {
    "text": "he's trying to say with this but etags are great guys but i have no idea how we're going to",
    "start": "1962399",
    "end": "1968960"
  },
  {
    "text": "effectively build your etag in a database query because the act of",
    "start": "1968960",
    "end": "1976960"
  },
  {
    "text": "checking for an e-tag require a query to the database and you need to",
    "start": "1976960",
    "end": "1982799"
  },
  {
    "text": "maintain the state so you might need to maybe i i i do a",
    "start": "1982799",
    "end": "1988880"
  },
  {
    "text": "get right and i receive an order and i then query the database for the orders and",
    "start": "1988880",
    "end": "1995279"
  },
  {
    "text": "then i respond and here's i generate a unique hash for the orders",
    "start": "1995279",
    "end": "2000320"
  },
  {
    "text": "and i respond back so now if the user sends me the same etag how do i know to to actually respond",
    "start": "2000320",
    "end": "2007360"
  },
  {
    "text": "back with that same so hey this didn't change how do i know that e-text is already generated i have to query the",
    "start": "2007360",
    "end": "2014720"
  },
  {
    "text": "database right to check if it exists or not you can avoid that by by generating your own table",
    "start": "2014720",
    "end": "2023279"
  },
  {
    "text": "with a with with an e tag and and like some sort of a flag that tells you",
    "start": "2023279",
    "end": "2028880"
  },
  {
    "text": "if the order has changed or not and accordingly respond right but that kind of",
    "start": "2028880",
    "end": "2034240"
  },
  {
    "text": "just destroys the concept of http semantics with get because in this",
    "start": "2034240",
    "end": "2041039"
  },
  {
    "text": "case when you do a git you can actually write where git is actually a safe method",
    "start": "2041039",
    "end": "2046720"
  },
  {
    "text": "it might you might get away with it but it's not easy to implement in my opinion a",
    "start": "2046720",
    "end": "2052720"
  },
  {
    "start": "2052000",
    "end": "2260000"
  },
  {
    "text": "location is expensive memory allocation so he's talking here about garbage collection data i agree with that it really depends",
    "start": "2052720",
    "end": "2059760"
  },
  {
    "text": "to be honest uh i think it's over exaggerating this honor yeah i agree with some of his points i don't",
    "start": "2059760",
    "end": "2066638"
  },
  {
    "text": "agree with everything so this is a little bit exaggerating to me if you're writing if your service is is",
    "start": "2066639",
    "end": "2074320"
  },
  {
    "text": "the bottleneck and it is receiving thousands and thousands of thousands of requests per",
    "start": "2074320",
    "end": "2079599"
  },
  {
    "text": "second then i agree the gc languages garbage collected languages can",
    "start": "2079599",
    "end": "2085040"
  },
  {
    "text": "pose your application can pause your request and slow down your queries as a result",
    "start": "2085040",
    "end": "2090878"
  },
  {
    "text": "meet linker d link is a a cycle proxy they built their sidecar proxy using",
    "start": "2090879",
    "end": "2097839"
  },
  {
    "text": "java and java you know java guys it has it's a garbage collected language",
    "start": "2097839",
    "end": "2104480"
  },
  {
    "text": "and and the jvm machine has like a hundred migs or something like that it's very big",
    "start": "2104480",
    "end": "2109520"
  },
  {
    "text": "so after they scaled they noticed that there are these poses that just freezes the application",
    "start": "2109520",
    "end": "2116560"
  },
  {
    "text": "and and requests cannot be met so they their tail latencies are",
    "start": "2116560",
    "end": "2121599"
  },
  {
    "text": "are just shot and it's very slow so they moved their their their proxy from",
    "start": "2121599",
    "end": "2129520"
  },
  {
    "text": "java to rust rust rust is not a garbage collector languages right so",
    "start": "2129520",
    "end": "2135119"
  },
  {
    "text": "they they brought i think their their runtime size to one megabyte i believe it's nuts man",
    "start": "2135119",
    "end": "2143200"
  },
  {
    "text": "but that's only for them so what's your name i forgot your name so",
    "start": "2143200",
    "end": "2149200"
  },
  {
    "text": "kellis here is contradicting himself to be honest because he's saying oh don't use garbage",
    "start": "2149200",
    "end": "2154800"
  },
  {
    "text": "collected languages right because they are expensive at least that's what i i thought he said",
    "start": "2154800",
    "end": "2160720"
  },
  {
    "text": "right but he's in the same times like yeah use other language but this is to",
    "start": "2160720",
    "end": "2166960"
  },
  {
    "text": "me this is premature optimization unless this is what he says right i don't know memorial location is",
    "start": "2166960",
    "end": "2172640"
  },
  {
    "text": "expensive especially in gc we write our high throughput services in go",
    "start": "2172640",
    "end": "2178079"
  },
  {
    "text": "simple simple to learn highly productive which is in gc line thanks to our services mostly being i o and not",
    "start": "2178079",
    "end": "2184800"
  },
  {
    "text": "heavy in memory that's true because if it's in memory then you're going to start is you you're",
    "start": "2184800",
    "end": "2190720"
  },
  {
    "text": "going to start feeling the garbage collector he's right we are unlikely to run into any jar rigger but there are common",
    "start": "2190720",
    "end": "2197200"
  },
  {
    "text": "sense principle that we use then right when writing go there are applicable",
    "start": "2197200",
    "end": "2203599"
  },
  {
    "text": "there there are applicable to other languages as well on hot path allocate as little as",
    "start": "2203599",
    "end": "2209599"
  },
  {
    "text": "possible reuse buffers try to avoid okay i'm sorry so he's he's not um",
    "start": "2209599",
    "end": "2217599"
  },
  {
    "text": "he's not he's not telling you to not use garbage collection language he's telling you to her",
    "start": "2217599",
    "end": "2222720"
  },
  {
    "text": "of all uh try be aware of this because allocation is expensive so try to not",
    "start": "2222720",
    "end": "2228160"
  },
  {
    "text": "allocate memory unless you absolutely need it i apologize okay make search but but",
    "start": "2228160",
    "end": "2233680"
  },
  {
    "text": "think about that sometimes you need to switch your programming languages to because you need to write a lot to",
    "start": "2233680",
    "end": "2240560"
  },
  {
    "text": "memory so garbage collection could be a problem it could the gc poses can be harmful so",
    "start": "2240560",
    "end": "2248160"
  },
  {
    "text": "you might want to switch language in that case but most of the time if he's if you're doing what he's doing what he's asking",
    "start": "2248160",
    "end": "2254560"
  },
  {
    "text": "for which is a beautiful beautiful point thank you so much this is good this is good",
    "start": "2254560",
    "end": "2259920"
  },
  {
    "text": "i like it multi-threading and concurrency are necessary but hard oh my god he's reading my mind i",
    "start": "2259920",
    "end": "2267119"
  },
  {
    "start": "2260000",
    "end": "2310000"
  },
  {
    "text": "talked about this right here check out the multithreading i when i when when it's",
    "start": "2267119",
    "end": "2272400"
  },
  {
    "text": "when it's my it's come to me i try to use a single threaded application as much as possible and try if",
    "start": "2272400",
    "end": "2279440"
  },
  {
    "text": "possible squeeze everything out of it because it's way easier concurrency are",
    "start": "2279440",
    "end": "2284880"
  },
  {
    "text": "great multi threading is great i mean most proxies are multi-threaded",
    "start": "2284880",
    "end": "2290079"
  },
  {
    "text": "but so goddamn difficult to build right go i know go has their own now",
    "start": "2290079",
    "end": "2296560"
  },
  {
    "text": "multi-threading system that makes it easier but what if you want to access the same resource it's it's complex so i",
    "start": "2296560",
    "end": "2302320"
  },
  {
    "text": "talked about that so i'm not going to spend more time taking about this",
    "start": "2302320",
    "end": "2307280"
  },
  {
    "text": "some technologies are generally slow use fat technologies python is slow ruby is slow frameworks",
    "start": "2308400",
    "end": "2313760"
  },
  {
    "start": "2310000",
    "end": "2370000"
  },
  {
    "text": "like rora's law yeah maybe some some here's my point",
    "start": "2313760",
    "end": "2319280"
  },
  {
    "text": "comment on this you can use technology as long as you know how they work",
    "start": "2319280",
    "end": "2325520"
  },
  {
    "text": "do not use stuff that you as as a black box i am completely against this if you",
    "start": "2325520",
    "end": "2333359"
  },
  {
    "text": "use ruby and you know it's slow and you know how to work against it by all means",
    "start": "2333359",
    "end": "2340240"
  },
  {
    "text": "however if you use a technology a lot of people like use react blindly they don't know how",
    "start": "2340240",
    "end": "2345680"
  },
  {
    "text": "react works and they complain about the performance later because you don't know how it worked so you're using it for a different task",
    "start": "2345680",
    "end": "2353200"
  },
  {
    "text": "than it was intended to be right so these are very very critical points to understand",
    "start": "2353200",
    "end": "2358960"
  },
  {
    "text": "web sockets a lot of people use socket io instead of sock woop sockets and they complain about some some bloat",
    "start": "2358960",
    "end": "2365040"
  },
  {
    "text": "that socket i o have same thing technology some technologies are slow so i have to agree with this",
    "start": "2365040",
    "end": "2370800"
  },
  {
    "start": "2370000",
    "end": "2430000"
  },
  {
    "text": "you have to use you know you have to know what to use and what not to use scale horizontally vertically and",
    "start": "2370800",
    "end": "2377680"
  },
  {
    "text": "enterprisingly i like this point a lot scaling vertically is so underrated a",
    "start": "2377680",
    "end": "2384960"
  },
  {
    "text": "lot of people just say oh just let's just scale horizontally",
    "start": "2384960",
    "end": "2390320"
  },
  {
    "text": "try sometimes scaling vertically because it's way cheaper sometimes to scale",
    "start": "2390320",
    "end": "2395359"
  },
  {
    "text": "vertically cheaper in terms of yeah you're going to pay more money but",
    "start": "2395359",
    "end": "2400960"
  },
  {
    "text": "it's going to take less maintenance in the in the future because and he said it very nicely scaling",
    "start": "2400960",
    "end": "2409520"
  },
  {
    "text": "horizontally is complex because the more do you scale horizontally you need a load balancer you need a",
    "start": "2409520",
    "end": "2415040"
  },
  {
    "text": "reverse proxy you need to maintain a reverse proxy you need to teach the reverse proxy the reverse proxy becomes them",
    "start": "2415040",
    "end": "2420240"
  },
  {
    "text": "bottleneck in this case because it's routing request and now you have to scale the reverse",
    "start": "2420240",
    "end": "2426240"
  },
  {
    "text": "proxy by adding a dns router on top of that so you you can get very",
    "start": "2426240",
    "end": "2432720"
  },
  {
    "start": "2430000",
    "end": "2540000"
  },
  {
    "text": "sk scaling uh premature scaling very very quickly especially with a container they're so",
    "start": "2432720",
    "end": "2439359"
  },
  {
    "text": "so easy to scale that so that kubernetes get added on top",
    "start": "2439359",
    "end": "2444560"
  },
  {
    "text": "i'm gonna add my my my two cents of commodities at the end human impedement yeah",
    "start": "2444560",
    "end": "2450400"
  },
  {
    "text": "sometimes often a managerial bottleneck is a bigger impediment to common sense scaling than a network io",
    "start": "2450400",
    "end": "2457119"
  },
  {
    "text": "so essentially he's talking about a lead who pushes a distributed nosql",
    "start": "2457119",
    "end": "2462960"
  },
  {
    "text": "database where an sql lite file is sufficient or a service mesh micro services and",
    "start": "2462960",
    "end": "2469440"
  },
  {
    "text": "instead of couple processes behind oh my god i can't agree with you more my friend",
    "start": "2469440",
    "end": "2475920"
  },
  {
    "text": "that's the problem if if you you get some some some ctos right or just or or just some",
    "start": "2475920",
    "end": "2482960"
  },
  {
    "text": "leads that says hey there's this shiny beautiful thing that's called no sequel let's and as scales",
    "start": "2482960",
    "end": "2488640"
  },
  {
    "text": "it's built for scale let's just scale scale scale distribute it and all that stuff where",
    "start": "2488640",
    "end": "2494000"
  },
  {
    "text": "your problem can be solved with a sql life file your problem can be solved with a simple nginx",
    "start": "2494000",
    "end": "2500240"
  },
  {
    "text": "your problem can be solved with ninja in uh with h.a proxy with envoy and you're just adding this garbage you",
    "start": "2500240",
    "end": "2507280"
  },
  {
    "text": "add services and make microservices and or or a computer or you can just spin up an",
    "start": "2507280",
    "end": "2515440"
  },
  {
    "text": "ec2 instance and solve it my my thoughts guys my final closing",
    "start": "2515440",
    "end": "2521280"
  },
  {
    "text": "thoughts about this and this is going to get a little bit of contra",
    "start": "2521280",
    "end": "2526880"
  },
  {
    "text": "uh conspiracy theory that's just my conspiracy theory uh voodoo hat i think and the whole",
    "start": "2526880",
    "end": "2534480"
  },
  {
    "text": "thing is just my opinion and it's all allegedly all right it's just all me",
    "start": "2534480",
    "end": "2539599"
  },
  {
    "text": "think about this here's what i think people moving to kubernetes and",
    "start": "2539599",
    "end": "2545040"
  },
  {
    "start": "2540000",
    "end": "2795000"
  },
  {
    "text": "microservices here's i think why",
    "start": "2545040",
    "end": "2550480"
  },
  {
    "text": "started the cloud era amazon they talk most of the customers",
    "start": "2550480",
    "end": "2556800"
  },
  {
    "text": "everybody is in aws everybody's in the cloud it was a smart move from amazon so",
    "start": "2556800",
    "end": "2563119"
  },
  {
    "text": "everybody's in the aws services all their money most of their money is coming from that there's so much tons of",
    "start": "2563119",
    "end": "2569200"
  },
  {
    "text": "money so now google comes in and",
    "start": "2569200",
    "end": "2575359"
  },
  {
    "text": "wants to to dominate the market and microsoft comes in to dominate the market it can't",
    "start": "2575359",
    "end": "2582160"
  },
  {
    "text": "it's just markets just saturated by the aws so what's what what should it do let's",
    "start": "2582160",
    "end": "2588560"
  },
  {
    "text": "invent this idea of cloud lifting and and locking which are not essentially",
    "start": "2588560",
    "end": "2596880"
  },
  {
    "text": "incorrect problems they are real problems where where where you're locked into aws are",
    "start": "2596880",
    "end": "2603760"
  },
  {
    "text": "there is that is that a serious problem i don't know it depends on you i'm not on the cloud",
    "start": "2603760",
    "end": "2609280"
  },
  {
    "text": "but but if you built an application and you spin as a",
    "start": "2609280",
    "end": "2614319"
  },
  {
    "text": "citizen it spins it up on double aws you're using a aws lambda you're using this technology",
    "start": "2614319",
    "end": "2620480"
  },
  {
    "text": "you're using ec2 you're stuck to these technologies that might be a",
    "start": "2620480",
    "end": "2625520"
  },
  {
    "text": "bad thing or a good thing but i think google just blown it over the top and says",
    "start": "2625520",
    "end": "2630800"
  },
  {
    "text": "you're stuck to this let's move to this idea of kubernetes",
    "start": "2630800",
    "end": "2638079"
  },
  {
    "text": "what is this oh it's just like the operating system of the cloud you install kubernetes and then you spin",
    "start": "2638079",
    "end": "2644640"
  },
  {
    "text": "up your containers and then that's it it's just a pass it's a platform it's like a it's a",
    "start": "2644640",
    "end": "2651599"
  },
  {
    "text": "platform as a service so you take that soft kubernetes if your application is on top of kubernetes and",
    "start": "2651599",
    "end": "2657680"
  },
  {
    "text": "these containers are talking to each other you just lift and shift to another cloud provider so",
    "start": "2657680",
    "end": "2666720"
  },
  {
    "text": "the container orchestration wars started in 2016 i believe 2015",
    "start": "2666880",
    "end": "2673520"
  },
  {
    "text": "and google clearly went won this war with kubernetes",
    "start": "2673520",
    "end": "2678560"
  },
  {
    "text": "why because containers were born application diploma became so easy that",
    "start": "2678560",
    "end": "2685599"
  },
  {
    "text": "people got so greedy spending multiple of them managing container became so hard you",
    "start": "2685599",
    "end": "2692400"
  },
  {
    "text": "need something to orchestrate the container so he built kubernetes and now google advertises",
    "start": "2692400",
    "end": "2700160"
  },
  {
    "text": "kubernetes like there is no tomorrow just so that everybody moves from aws",
    "start": "2700160",
    "end": "2707599"
  },
  {
    "text": "to kubernetes so that kubernetes is actually literally a ship",
    "start": "2707599",
    "end": "2713200"
  },
  {
    "text": "that is designed to take the money from aws and just ships away google doesn't want to take that money",
    "start": "2713200",
    "end": "2720000"
  },
  {
    "text": "it doesn't have to be it's just the idea it's like how do i move people from enable yes kubernetes is the",
    "start": "2720000",
    "end": "2727280"
  },
  {
    "text": "solution again that's just my conspiracy theory hat i'm wearing it but i think that's what's",
    "start": "2727280",
    "end": "2733520"
  },
  {
    "text": "going on because it's crazy what we're doing guys it's crazy why are we everybody's why is",
    "start": "2733520",
    "end": "2741839"
  },
  {
    "text": "mike's uh donuts shop moving to kubernetes that's just nuts",
    "start": "2741839",
    "end": "2747599"
  },
  {
    "text": "it's a doughnut shop it's a garage why do you need copper why do you need containers for god's sake",
    "start": "2747599",
    "end": "2753440"
  },
  {
    "text": "you don't need any of that stuff spin up a vm and that's it you don't even need to",
    "start": "2753440",
    "end": "2759760"
  },
  {
    "text": "horizontally scale why we're over engineering guys",
    "start": "2759760",
    "end": "2766400"
  },
  {
    "text": "we're all over engineering we're overkilling ourselves with this stuff",
    "start": "2766400",
    "end": "2772319"
  },
  {
    "text": "but that's my thoughts guys what do you guys think let me know in the comment section below i'm gonna see you on the",
    "start": "2772319",
    "end": "2777839"
  },
  {
    "text": "next one sorry for the long video but i had so much to talk about this agree whether you agree or disagree like this",
    "start": "2777839",
    "end": "2785200"
  },
  {
    "text": "video or dislike it right and let me know your comment section uh your opinion in the comment",
    "start": "2785200",
    "end": "2790319"
  },
  {
    "text": "section below i'm gonna see you in the next one you guys stay awesome goodbye",
    "start": "2790319",
    "end": "2796560"
  }
]