[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hey guys this is a repost of my original redis in memory database crash course uh",
    "start": "719",
    "end": "7440"
  },
  {
    "text": "the original video was the audio quality was terrible so i spent some time to fix it",
    "start": "7440",
    "end": "13120"
  },
  {
    "text": "and i added a little bit of an extra content for you guys enjoy",
    "start": "13120",
    "end": "19039"
  },
  {
    "text": "so guys most of you are familiar with reddit so this is a very popular nosql key value store in memory cache",
    "start": "22320",
    "end": "29359"
  },
  {
    "text": "database and a message broker at the same time and it is now redis as of 2020",
    "start": "29359",
    "end": "38320"
  },
  {
    "start": "30000",
    "end": "740000"
  },
  {
    "text": "the most popular database on cloud deployment it is technically",
    "start": "38320",
    "end": "44879"
  },
  {
    "text": "only on aws this numbers that have they been collected but",
    "start": "44879",
    "end": "50559"
  },
  {
    "text": "when we say aws yes that's basically the entire cloud right because the rest of the cloud",
    "start": "50559",
    "end": "56559"
  },
  {
    "text": "uh like google cloud and azure is not they didn't take that lion share as aws did so",
    "start": "56559",
    "end": "62719"
  },
  {
    "text": "redis became fabulous in this video i wanna kind of discuss why redis became so",
    "start": "62719",
    "end": "69280"
  },
  {
    "text": "popular as a cache and the uh the creator the ceo of",
    "start": "69280",
    "end": "76880"
  },
  {
    "text": "of redis mentioned something very interesting here if touchschulmann they",
    "start": "76880",
    "end": "84479"
  },
  {
    "text": "they they kind of line up their vision for this database so in this video i want to discuss",
    "start": "84479",
    "end": "90159"
  },
  {
    "text": "why it became so popular and how did it took a lot of other databases by surprise how",
    "start": "90159",
    "end": "96240"
  },
  {
    "text": "about we jump into it so this article from the register i'm gonna reference it below guys but",
    "start": "96240",
    "end": "101680"
  },
  {
    "text": "you describe what radius is which we know why because we made a video about it check it out here right here if",
    "start": "101680",
    "end": "107360"
  },
  {
    "text": "you're interested to know more about redis it's a whole course discuss the details",
    "start": "107360",
    "end": "113200"
  },
  {
    "text": "of redis i also used redis in many of my other videos to build",
    "start": "113200",
    "end": "118479"
  },
  {
    "text": "a a highly distributed uh chatting app was it a chatting up no",
    "start": "118479",
    "end": "124000"
  },
  {
    "text": "it was a game actually with whoop sockets and riders right this is being used in twitter",
    "start": "124000",
    "end": "129280"
  },
  {
    "text": "red is being used in box and i've watched several videos about where redis is used",
    "start": "129280",
    "end": "134800"
  },
  {
    "text": "as you can use in a lot of big companies and the the barrier to entry whether this is",
    "start": "134800",
    "end": "143200"
  },
  {
    "text": "so low you can get started very quick the api is so simple and and there are many many",
    "start": "143200",
    "end": "150640"
  },
  {
    "text": "sdks on top of that so let's read this article says according to somos logic research of",
    "start": "150640",
    "end": "158680"
  },
  {
    "text": "2100 companies that it monitors redis is the number one",
    "start": "158680",
    "end": "163920"
  },
  {
    "text": "database in aws with 28 market share wow that's a lot right",
    "start": "163920",
    "end": "171599"
  },
  {
    "text": "and notice that they are referring to redis now as a database if you say alright this is a database",
    "start": "171599",
    "end": "178319"
  },
  {
    "text": "eight years ago some people will laugh at you right because because it did not have",
    "start": "178319",
    "end": "184480"
  },
  {
    "text": "the the the concept of a database but they built it along the way which which is something we see it",
    "start": "184480",
    "end": "190800"
  },
  {
    "text": "growing and that's the most powerful thing you see a product grow and and if you have a community behind",
    "start": "190800",
    "end": "196640"
  },
  {
    "text": "it boy that just unstoppable train so my sequel came in second",
    "start": "196640",
    "end": "202720"
  },
  {
    "text": "right and with 23 percent",
    "start": "202720",
    "end": "207840"
  },
  {
    "text": "market share postgres uh sql sql came in 20 why are they",
    "start": "207840",
    "end": "213680"
  },
  {
    "text": "rising per cent this way that's just weird is it percent one word",
    "start": "213680",
    "end": "219519"
  },
  {
    "text": "i don't know i don't understand english oracle and microsoft sequel were left as",
    "start": "219519",
    "end": "226760"
  },
  {
    "text": "languishingly at join sixth place with ten percent each",
    "start": "226760",
    "end": "232480"
  },
  {
    "text": "obviously again we're talking about cloud this does not mean sql my sql server is",
    "start": "232480",
    "end": "239280"
  },
  {
    "text": "bad or oracle's bad or postgres is bad now we're going to come to that because sql server oracle",
    "start": "239280",
    "end": "245599"
  },
  {
    "text": "and hana and ibm these databases postgres they are the most popular databases when",
    "start": "245599",
    "end": "252159"
  },
  {
    "text": "it comes to enterprise which which where i live basically i live i deal with enterprises uh for 16 years",
    "start": "252159",
    "end": "260000"
  },
  {
    "text": "now i just deploy enterprise and when it comes to enterprise they pick those big triple a",
    "start": "260000",
    "end": "267759"
  },
  {
    "text": "databases compare these findings to a big bold word outside aws",
    "start": "267759",
    "end": "274000"
  },
  {
    "text": "okay constructed according to db engines oracle mysql and microsoft sql",
    "start": "274000",
    "end": "279360"
  },
  {
    "text": "hug on the top three spots that makes perfect sense because in the enterprise world that's the most",
    "start": "279360",
    "end": "285520"
  },
  {
    "text": "popular databases right because you know how to deal with they solve",
    "start": "285520",
    "end": "290560"
  },
  {
    "text": "a diverse set of problems for you so why why why where this became so",
    "start": "290560",
    "end": "296880"
  },
  {
    "text": "popular guys so let's let's take the the the advantages of redis",
    "start": "296880",
    "end": "302639"
  },
  {
    "text": "redis is an in-memory database that's when they first came up with it it became an in-memory data that means",
    "start": "302639",
    "end": "309280"
  },
  {
    "text": "it's a cache right and most videos on youtube you see",
    "start": "309280",
    "end": "314800"
  },
  {
    "text": "redis used as a cache where where it is it is because the queries on",
    "start": "314800",
    "end": "322000"
  },
  {
    "text": "on the database became expensive you want to avoid coining the database",
    "start": "322000",
    "end": "327680"
  },
  {
    "text": "so you put it on a cache okay and unfortunately what i the",
    "start": "327680",
    "end": "333120"
  },
  {
    "text": "pattern that i'm seeing is people who do not know how to deploy",
    "start": "333120",
    "end": "338560"
  },
  {
    "text": "proper database infrastructure of the back end they deploy radius thinking that is going to make things",
    "start": "338560",
    "end": "345680"
  },
  {
    "text": "faster yeah it does but they could have gone without redis if they optimize their query with proper",
    "start": "345680",
    "end": "353600"
  },
  {
    "text": "indexing or not too much indexing or partitioning or these tricks that the",
    "start": "353600",
    "end": "359919"
  },
  {
    "text": "database does right but unfortunately we're shifting to uh",
    "start": "359919",
    "end": "365840"
  },
  {
    "text": "and i don't blame anyone i blame the media to be honest where we're shifting to hype it's like oh",
    "start": "365840",
    "end": "373280"
  },
  {
    "text": "let's let's deploy writer's cache oh my my my query is taking three seconds to execute",
    "start": "373280",
    "end": "379039"
  },
  {
    "text": "why the heck is your query taking 30 seconds to execute fix it don't put a cache on top of it just that",
    "start": "379039",
    "end": "384720"
  },
  {
    "text": "just putting a band-aid yeah that that's like uh that's like",
    "start": "384720",
    "end": "389919"
  },
  {
    "text": "cleaning the water the spilled water instead of fixing the leak that's exactly what it looked like right",
    "start": "389919",
    "end": "396639"
  },
  {
    "text": "so yeah i'm gonna clean clean clean clean the water hey there's a leak fix the leak that's",
    "start": "396639",
    "end": "402000"
  },
  {
    "text": "the problem right so anyway this is another topic for another day but i want you guys to pay attention to this",
    "start": "402000",
    "end": "407919"
  },
  {
    "text": "so that's the first thing in memory divers which is which is a very powerful thing if you again if you optimize the whole",
    "start": "407919",
    "end": "413280"
  },
  {
    "text": "stack not just yeah my queries are slow i'm gonna put a cache and make everything fast",
    "start": "413280",
    "end": "420319"
  },
  {
    "text": "cache is not simple and i'm going to talk about that invalidation of cash is just so hard so",
    "start": "420319",
    "end": "425840"
  },
  {
    "text": "that's that's one feature of redis the next feature that they immediately implemented or maybe",
    "start": "425840",
    "end": "432080"
  },
  {
    "text": "implemented from day one is actually persistent right because",
    "start": "432080",
    "end": "437360"
  },
  {
    "text": "if it's in memory that mean if i store something in this database",
    "start": "437360",
    "end": "442800"
  },
  {
    "text": "then i restart the database my data is gone right because it's it's it's in memory",
    "start": "442800",
    "end": "448160"
  },
  {
    "text": "right it's it's it's volatile so they came up with a persistent model where",
    "start": "448160",
    "end": "453840"
  },
  {
    "text": "you can take snapshots asynchronously i believe take snapshots of the cache and persist",
    "start": "453840",
    "end": "458880"
  },
  {
    "text": "it to disk and then now i don't know where they stand when it comes to acid semantics but",
    "start": "458880",
    "end": "465440"
  },
  {
    "text": "i'll take a look at that but it's a key value store now has persisted and here's the final",
    "start": "465440",
    "end": "473039"
  },
  {
    "text": "nail on the coffin in my opinion message broker dude this database",
    "start": "473039",
    "end": "480400"
  },
  {
    "text": "just ate from the message broking uh the message queuing and the message",
    "start": "480400",
    "end": "486080"
  },
  {
    "text": "and the pop star system and the message broker uh market share without even anyone",
    "start": "486080",
    "end": "492000"
  },
  {
    "text": "paying attention it's like we were we were worrying about zeromq we're worrying about rap",
    "start": "492000",
    "end": "497599"
  },
  {
    "text": "rabbit mq or rapka that was a good software like combined",
    "start": "497599",
    "end": "503039"
  },
  {
    "text": "rabbit mq and kafka rapca i love it trademark all right so rabbitmq",
    "start": "503039",
    "end": "508560"
  },
  {
    "text": "we're paying attention to to kafka and we completely forgot about this innocent database that somehow just",
    "start": "508560",
    "end": "516080"
  },
  {
    "text": "implemented pop subsystem i was like what and guess what because",
    "start": "516080",
    "end": "522959"
  },
  {
    "text": "it's so simple to use even i couldn't resist using it in my",
    "start": "522959",
    "end": "529200"
  },
  {
    "text": "application because like what the heck i can just literally just publish and it became a channel and it becomes a",
    "start": "529200",
    "end": "536880"
  },
  {
    "text": "two way of communication you can publish something yeah it's a posh model so it's not it's it will not work for",
    "start": "536880",
    "end": "543120"
  },
  {
    "text": "all cases if your client cannot handle the the load being pushed to it then you",
    "start": "543120",
    "end": "548720"
  },
  {
    "text": "have to worry about it but who cares it works for most people and that's where they i",
    "start": "548720",
    "end": "556160"
  },
  {
    "text": "think that's where they become more popular being a message broker a cache and a database",
    "start": "556160",
    "end": "562240"
  },
  {
    "text": "dude dude android you get a both pay attention to this",
    "start": "562240",
    "end": "568080"
  },
  {
    "text": "database this is scary this is like a yeah we know it's popular",
    "start": "568080",
    "end": "574000"
  },
  {
    "text": "we know right this is popular but boy yeah i know i i talk a lot about like",
    "start": "574000",
    "end": "581040"
  },
  {
    "text": "hey if your database just state being a database but this one is different man this one is",
    "start": "581040",
    "end": "586640"
  },
  {
    "text": "different it's just yeah they're doing two things but they kind of homogenize it",
    "start": "586640",
    "end": "592640"
  },
  {
    "text": "together it's like being a pub sub and regis because and a cache and a database it just fits",
    "start": "592640",
    "end": "598560"
  },
  {
    "text": "nice together because most workflows require these three things",
    "start": "598560",
    "end": "604240"
  },
  {
    "text": "it was like now it ups to you up to you whether you trust regis as a database i know dbas",
    "start": "604240",
    "end": "612160"
  },
  {
    "text": "watching this video going to yell at me it's like don't say that this is a database the the the creator is gonna argue with",
    "start": "612160",
    "end": "620320"
  },
  {
    "text": "you but maybe they're gonna change it maybe it's gonna became a real full-fledged database who knows but guys",
    "start": "620320",
    "end": "628079"
  },
  {
    "text": "what do you think about this what do you think about this this is now the cloud is being",
    "start": "628079",
    "end": "634800"
  },
  {
    "text": "run mostly about with the writers and i'm i'm really excited about this competition to be honest",
    "start": "634800",
    "end": "640880"
  },
  {
    "text": "right so now we don't have numbers when it comes to google platform and azure but i believe the numbers are are over",
    "start": "640880",
    "end": "647760"
  },
  {
    "text": "there same thing because it's open source we forgot something else because it's open source that means it's portable",
    "start": "647760",
    "end": "654000"
  },
  {
    "text": "i'm not locked in to one of those cloud providers right i can just deploy my redis in any cluster i want",
    "start": "654000",
    "end": "661839"
  },
  {
    "text": "and it's also distributed right so you push it some on on one instance and it distributed",
    "start": "661839",
    "end": "668560"
  },
  {
    "text": "other instances as well right so your changes are are seen obviously they are eventually",
    "start": "668560",
    "end": "675120"
  },
  {
    "text": "consistent but it's not a problem again for most what use cases",
    "start": "675120",
    "end": "680800"
  },
  {
    "text": "does this solve this does this solve 100 of the use cases absolutely not but i think those guys the the guys who",
    "start": "680800",
    "end": "688640"
  },
  {
    "text": "created radius they are not shooting 400 they're shooting for for a segment of a market and",
    "start": "688640",
    "end": "694240"
  },
  {
    "text": "boy they're doing a job another uh uh option if you don't like credits there",
    "start": "694240",
    "end": "700079"
  },
  {
    "text": "is memcached and i need to facebook using memcached and i believe if i'm not mistaken they",
    "start": "700079",
    "end": "705839"
  },
  {
    "text": "actually created it so memcached is it's also a good",
    "start": "705839",
    "end": "711839"
  },
  {
    "text": "memory and sticking to be adjusted in memory cache all right guys what do you think about this news do you think redis will",
    "start": "711839",
    "end": "718560"
  },
  {
    "text": "actually be a legitimate false full-fledged database that replaces postgres",
    "start": "718560",
    "end": "724959"
  },
  {
    "text": "i personally don't but what do you think let me know in the comment section below",
    "start": "724959",
    "end": "730079"
  },
  {
    "text": "i'm gonna see you on the next one you guys stay awesome goodbye",
    "start": "730079",
    "end": "735040"
  },
  {
    "text": "redis is a nosql key value store in memory database first that is exploding",
    "start": "737760",
    "end": "744800"
  },
  {
    "start": "740000",
    "end": "3001000"
  },
  {
    "text": "in popularity in the past few years in this video slash course we will explain what redis",
    "start": "744800",
    "end": "751200"
  },
  {
    "text": "is talk about the in memory model we're going to talk about optional durability",
    "start": "751200",
    "end": "756320"
  },
  {
    "text": "replication clustering the publish subscribe model that this in-memory database has we're going",
    "start": "756320",
    "end": "764320"
  },
  {
    "text": "to talk about the transmission protocol what kind of protocol redis uses for",
    "start": "764320",
    "end": "769760"
  },
  {
    "text": "transmission and as always we're gonna finally talk about some",
    "start": "769760",
    "end": "774880"
  },
  {
    "text": "examples we're gonna spin up our own redis docker container i'm gonna write a key",
    "start": "774880",
    "end": "781040"
  },
  {
    "text": "and we'll get the v key and then learn about the command uh line interface that redis has",
    "start": "781040",
    "end": "788480"
  },
  {
    "text": "during this video i will add time codes to each topic so you guys can jump to that topic that actually",
    "start": "788480",
    "end": "795519"
  },
  {
    "text": "interests you the most so i don't waste your time with my babbling",
    "start": "795519",
    "end": "800720"
  },
  {
    "text": "if you're new here welcome my name is hussain and in this channel we discuss all sorts of software engineering by",
    "start": "800720",
    "end": "806399"
  },
  {
    "text": "example so if you want to become a better software engineer consider subscribing and hit that bell icon so you get notified every time i",
    "start": "806399",
    "end": "813040"
  },
  {
    "text": "upload a new software engineering video with that said let's just jump into reddish",
    "start": "813040",
    "end": "819279"
  },
  {
    "text": "the in-memory key value store no sequel that was you guys requested this a lot right",
    "start": "819279",
    "end": "826800"
  },
  {
    "text": "and uh it is we made it all right so i was between radius and",
    "start": "826800",
    "end": "832959"
  },
  {
    "text": "memcache d obviously radius is more popular but i don't know if it's as good as memcache d",
    "start": "832959",
    "end": "839040"
  },
  {
    "text": "and which is better so take that with a grain of salt but let's discuss table of content",
    "start": "839040",
    "end": "845680"
  },
  {
    "text": "what are we going to talk about in this video guys we're going to talk about and you're",
    "start": "845680",
    "end": "851839"
  },
  {
    "text": "going to start seeing time codes guys so you can jump to the interesting topic that you can so you",
    "start": "851839",
    "end": "857440"
  },
  {
    "text": "don't have to watch everything obviously right okay i really value your time i don't want to waste your time so you can",
    "start": "857440",
    "end": "863519"
  },
  {
    "text": "just watch whatever you're interested in talk about what what is an in memory database what is a key value store what",
    "start": "863519",
    "end": "869519"
  },
  {
    "text": "is nosql very briefly i'm going to talk about how redis is an in-memory database first but",
    "start": "869519",
    "end": "877839"
  },
  {
    "text": "then came in optional durability they added optional durability if you want to and durability we mean persistent to desk",
    "start": "877839",
    "end": "884959"
  },
  {
    "text": "right we're going to talk about that a little bit and we're going to talk about the transmission transmission protocol the transport",
    "start": "884959",
    "end": "890800"
  },
  {
    "text": "protocol what is this running on obviously it's a server right this is a server and",
    "start": "890800",
    "end": "896000"
  },
  {
    "text": "how's the client communicating with it the transmission is one of the most thing that really",
    "start": "896000",
    "end": "902240"
  },
  {
    "text": "interests me whether http tcp whatever right i love this kind of transmission because",
    "start": "902240",
    "end": "908160"
  },
  {
    "text": "the networking aspects of it is very interesting to me so we're going to talk about what transfer protocol what message",
    "start": "908160",
    "end": "914079"
  },
  {
    "text": "formatting radius uses okay we're going to also talk about pub sub right because they",
    "start": "914079",
    "end": "919360"
  },
  {
    "text": "do support that which is amazing right publish subscribe model okay they have",
    "start": "919360",
    "end": "925360"
  },
  {
    "text": "this two-way communication kind of thing push model i'm gonna talk about briefly about",
    "start": "925360",
    "end": "930800"
  },
  {
    "text": "replication and clustering because that is also supported in redis and um",
    "start": "930800",
    "end": "936399"
  },
  {
    "text": "finally we're gonna do an example right i'm gonna you're gonna see guys uh jump codes obviously as i said",
    "start": "936399",
    "end": "941680"
  },
  {
    "text": "an example we're gonna spin up a container redis and we start playing with that",
    "start": "941680",
    "end": "946800"
  },
  {
    "text": "light right so you're gonna have to have at least docker install i just don't want to pull out your database with actual",
    "start": "946800",
    "end": "953519"
  },
  {
    "text": "software installed in your mac or windows right just with docker you can follow this tutorial with any",
    "start": "953519",
    "end": "960000"
  },
  {
    "text": "operating system that's the beauty of this it's just agnostic all right let's just jump into the content guys so it is an",
    "start": "960000",
    "end": "966639"
  },
  {
    "text": "in-memory key value store redis is an in-memory key value store database so what is a",
    "start": "966639",
    "end": "972720"
  },
  {
    "text": "key value store so let's talk about that right so i started working with databases that",
    "start": "972720",
    "end": "978240"
  },
  {
    "text": "are relational that means you have to go define a schema create a table",
    "start": "978240",
    "end": "984079"
  },
  {
    "text": "specify a primary key specify which fields specify the type of the field",
    "start": "984079",
    "end": "990079"
  },
  {
    "text": "specify whether it's null or not specify with the default values it",
    "start": "990079",
    "end": "995440"
  },
  {
    "text": "is a very schema system we were used to that right it's an acid compliant we",
    "start": "995440",
    "end": "1001120"
  },
  {
    "text": "talked about acid i'm going to refresh it here what acid means atomicity consistency isolation durability",
    "start": "1001120",
    "end": "1006160"
  },
  {
    "text": "all these properties so those guys no sql guys you know you know what we don't really need a schema who needs",
    "start": "1006160",
    "end": "1012639"
  },
  {
    "text": "a schema anyway we live in a schema-less system right we with the popularity of the web we",
    "start": "1012639",
    "end": "1020079"
  },
  {
    "text": "need something flexible i don't want to add a field every time i come up with a requirement and stop my",
    "start": "1020079",
    "end": "1027199"
  },
  {
    "text": "databases and take an outage just to add a field",
    "start": "1027199",
    "end": "1032558"
  },
  {
    "text": "on my database right so i'm going to come up with a nosql we're gonna call it nosql",
    "start": "1032559",
    "end": "1038000"
  },
  {
    "text": "databases because we're against equal right and uh we said online is just key value",
    "start": "1038000",
    "end": "1044959"
  },
  {
    "text": "store the key is a string the value could be anything it could be a string could be a number it could be a",
    "start": "1044959",
    "end": "1051520"
  },
  {
    "text": "json it could be a blob a media video i want to put anything i want right it",
    "start": "1051520",
    "end": "1058240"
  },
  {
    "text": "could be a table inside that right i i just want to be flexible so they they",
    "start": "1058240",
    "end": "1063440"
  },
  {
    "text": "did this era of key value store become really popular because of adaptability very easy to adopt i don't",
    "start": "1063440",
    "end": "1071280"
  },
  {
    "text": "need schema let me jump in right talking about mongodb cassandra",
    "start": "1071280",
    "end": "1076320"
  },
  {
    "text": "redis is one of them that is kind of pushed the boundary and he said you know what",
    "start": "1076320",
    "end": "1081520"
  },
  {
    "text": "i don't even need disk right i want in memory i just met i'm gonna make this in memory and people",
    "start": "1081520",
    "end": "1087520"
  },
  {
    "text": "laughed at first it's like what the heck a database that is in memory what the heck does that mean",
    "start": "1087520",
    "end": "1093520"
  },
  {
    "text": "right but we're going to talk about that so yeah as i've said key is a strength value is pretty much anything right and",
    "start": "1093520",
    "end": "1100000"
  },
  {
    "text": "the redis is in memory phase and people just kind of a lot of people were very uh what's the",
    "start": "1100000",
    "end": "1105760"
  },
  {
    "text": "word i'm blanking all right so a lot of people were suspicious about this and said you know",
    "start": "1105760",
    "end": "1111440"
  },
  {
    "text": "what in memory that database we're used to databases",
    "start": "1111440",
    "end": "1116880"
  },
  {
    "text": "being uh storing to disk databases has to store to desk",
    "start": "1116880",
    "end": "1123120"
  },
  {
    "text": "right and you're coming now and just you're doing a memory database what is this might as well just use your own process",
    "start": "1123120",
    "end": "1129120"
  },
  {
    "text": "and store variables on your memory why do you need this and boy everybody was wrong",
    "start": "1129120",
    "end": "1135600"
  },
  {
    "text": "because this thing i'm not i don't know what if which came first redis or memcached or",
    "start": "1135600",
    "end": "1140880"
  },
  {
    "text": "maybe another memory in memory database but i i know that in memory databases are",
    "start": "1140880",
    "end": "1146880"
  },
  {
    "text": "very popular because they're fast latency's almost sub millisecond which is amazing",
    "start": "1146880",
    "end": "1152799"
  },
  {
    "text": "and they fit the perfect cases which is what guys caching you can cache stuff",
    "start": "1152799",
    "end": "1159039"
  },
  {
    "text": "you can still use you can still use your databases but they are slow they're they're going to the desk and",
    "start": "1159039",
    "end": "1165440"
  },
  {
    "text": "pulling io and then yeah so",
    "start": "1165440",
    "end": "1170880"
  },
  {
    "text": "so that's uh that's where it is right this is in memory first okay it's also single threaded okay",
    "start": "1170880",
    "end": "1177440"
  },
  {
    "text": "and um and i like i like i like how bold people",
    "start": "1177440",
    "end": "1184640"
  },
  {
    "text": "go and so say that they are a single thread system you cannot say this bravely because",
    "start": "1184640",
    "end": "1191360"
  },
  {
    "text": "people will eat you alive because oh you know the multi-threaded system 64-bit",
    "start": "1191360",
    "end": "1197840"
  },
  {
    "text": "oh son yeah those days are gone man in my opinion multi-threaded system is",
    "start": "1197840",
    "end": "1204240"
  },
  {
    "text": "just very complex right and uh it take it takes it takes carriage to",
    "start": "1204240",
    "end": "1211600"
  },
  {
    "text": "make your system single threaded and if it's single threaded it's okay because",
    "start": "1211600",
    "end": "1218960"
  },
  {
    "text": "a single threaded system can still scale because you can spin up as much",
    "start": "1219039",
    "end": "1224720"
  },
  {
    "text": "instances as you want with clustering and replication right it doesn't matter if it's a single thread",
    "start": "1224720",
    "end": "1231120"
  },
  {
    "text": "right with containers you can spin out as much processes as you want its own container",
    "start": "1231120",
    "end": "1237200"
  },
  {
    "text": "that is a single thread versus one instance that have multiple threaded so",
    "start": "1237200",
    "end": "1242880"
  },
  {
    "text": "we fought this war 20 years ago 20 15 years ago yeah we fought all this multi-threaded versus",
    "start": "1242880",
    "end": "1249120"
  },
  {
    "text": "single threaded and i to me i am leaning toward a single",
    "start": "1249120",
    "end": "1254400"
  },
  {
    "text": "thread it's simple system versus building a complex multi-threaded system all right we're",
    "start": "1254400",
    "end": "1260000"
  },
  {
    "text": "we're going away from the topic but it's kind of in the topic right single-footed it is a single-threaded software",
    "start": "1260000",
    "end": "1268080"
  },
  {
    "text": "but we're still using multi-threading but we don't give the users that ability right this the the the multi-threading",
    "start": "1268080",
    "end": "1275600"
  },
  {
    "text": "old i think it's that two-threaded system they called it when i read when i did my research so",
    "start": "1275600",
    "end": "1281760"
  },
  {
    "text": "too threading you get another thread but you don't get to do anything with it it's used for durability right",
    "start": "1281760",
    "end": "1288559"
  },
  {
    "text": "so that's uh in the background it can spin up we're going to talk about this one when we talk about durability",
    "start": "1288559",
    "end": "1294720"
  },
  {
    "text": "in order since it's min memory there is another thread that spins off and writes to desk whether this is an",
    "start": "1294720",
    "end": "1301200"
  },
  {
    "text": "append only journal or snapshotting the whole database right so it does there's another thread but",
    "start": "1301200",
    "end": "1307840"
  },
  {
    "text": "it's a single thread nevertheless right your mic does you guys might disagree with me that hey single threaded could be slow",
    "start": "1307840",
    "end": "1318159"
  },
  {
    "text": "we we can argue with that but essentially multithread is good it gives you the ability but it complicates your",
    "start": "1318159",
    "end": "1323679"
  },
  {
    "text": "application and there is this is a very very critical trade-off that you make in",
    "start": "1323679",
    "end": "1331280"
  },
  {
    "text": "your in your design single versus multi-threaded so let's have a discussion in the in the comment section",
    "start": "1331280",
    "end": "1336559"
  },
  {
    "text": "what do you guys think right so out of the top optional durability they built it in memory first and they",
    "start": "1336559",
    "end": "1342640"
  },
  {
    "text": "say you know what we're sick of people making fun of us as an inventory database we're going to",
    "start": "1342640",
    "end": "1348320"
  },
  {
    "text": "make durability we will persist to this because a lot of the asset guys the asset guys",
    "start": "1348320",
    "end": "1355520"
  },
  {
    "text": "that's funny the asset guys came in and says what kind of database you are you're even",
    "start": "1355520",
    "end": "1361440"
  },
  {
    "text": "you don't even persist to disk if i restart your machine all of your precious volatile memory",
    "start": "1361440",
    "end": "1369120"
  },
  {
    "text": "goes away where is my data right so they added this optional data",
    "start": "1369120",
    "end": "1374799"
  },
  {
    "text": "ability aspects and we're going to talk about two two two things they the you get you get options two options with the rarest the",
    "start": "1374799",
    "end": "1381200"
  },
  {
    "text": "first one is journaling journaling is the ability and pretty",
    "start": "1381200",
    "end": "1386240"
  },
  {
    "text": "pretty much all databases have this right where every time i write a key says",
    "start": "1386240",
    "end": "1391840"
  },
  {
    "text": "hey this is my employee id the id is equal i don't know 777 go ahead and",
    "start": "1391840",
    "end": "1399120"
  },
  {
    "text": "obviously write in a memory blazing fast but also write it to",
    "start": "1399120",
    "end": "1405840"
  },
  {
    "text": "disk but it's just like essentially it's called uh it's unlocked commit log essentially",
    "start": "1405840",
    "end": "1411200"
  },
  {
    "text": "right it's called append only log sometimes called commit log and it's a log that goes just grows",
    "start": "1411200",
    "end": "1417120"
  },
  {
    "text": "grows we're just with just transactions what happens right so it's kind it's kind of tells you the events of",
    "start": "1417120",
    "end": "1423039"
  },
  {
    "text": "what happened to the system hey uh someone inserted a row someone",
    "start": "1423039",
    "end": "1429279"
  },
  {
    "text": "uh deleted a key someone i should stop saying raw here still again used to acid all right",
    "start": "1429279",
    "end": "1436320"
  },
  {
    "text": "i'm gonna i'm gonna need to take a knock nexium here all right so uh yeah you gotta delete",
    "start": "1436320",
    "end": "1441600"
  },
  {
    "text": "the key someone deleted the key someone inserted the key someone appended to the key all that stuff is is an app and only",
    "start": "1441600",
    "end": "1449120"
  },
  {
    "text": "log why is it called aop aol all right that's a that's a typo all",
    "start": "1449120",
    "end": "1454799"
  },
  {
    "text": "right so journaling is one action of durability some idea of a durability",
    "start": "1454799",
    "end": "1460480"
  },
  {
    "text": "all right and uh we talked about that so how is this happening obviously that single thread is not going and",
    "start": "1460480",
    "end": "1466720"
  },
  {
    "text": "turning around in the same time and appending to the desk no there is another thread that does",
    "start": "1466720",
    "end": "1472799"
  },
  {
    "text": "that the moment and here's what i don't know and you guys can you guys read as experts correct me if",
    "start": "1472799",
    "end": "1479440"
  },
  {
    "text": "i'm wrong but when does the user get the client get back",
    "start": "1479440",
    "end": "1484960"
  },
  {
    "text": "the the acknowledgement that the my key has been updated is it when",
    "start": "1484960",
    "end": "1491600"
  },
  {
    "text": "when optional with durability is enabled is it when it is written to memory or",
    "start": "1491600",
    "end": "1498240"
  },
  {
    "text": "when it is written to the append log i do not have an answer to that i",
    "start": "1498240",
    "end": "1503600"
  },
  {
    "text": "believe personally for sake of latency i believe you",
    "start": "1503600",
    "end": "1509039"
  },
  {
    "text": "redis might give you that option whether you want to wait for that a background for it to",
    "start": "1509039",
    "end": "1516400"
  },
  {
    "text": "write it to the app and only log before i that's sync",
    "start": "1516400",
    "end": "1521520"
  },
  {
    "text": "call get essentially get received or you can immediately get the result",
    "start": "1521520",
    "end": "1527520"
  },
  {
    "text": "after it's written to memory right kind of dangerous so i think it's gonna they",
    "start": "1527520",
    "end": "1532640"
  },
  {
    "text": "if it was me i will leave it to the user to decide right the other option is snap shotting and",
    "start": "1532640",
    "end": "1539760"
  },
  {
    "text": "snob shorting is if i spilled it right it doesn't sound right right it doesn't sound right i don't",
    "start": "1539760",
    "end": "1545679"
  },
  {
    "text": "know it doesn't look right snapshotting and the idea is instead of for each transaction we",
    "start": "1545679",
    "end": "1553120"
  },
  {
    "text": "log it to disk right which can cause delay depends on which kind of um operations",
    "start": "1553120",
    "end": "1561200"
  },
  {
    "text": "right you have right what option do you have do you want to wait for the pin lock to commit before acknowledging",
    "start": "1561200",
    "end": "1568640"
  },
  {
    "text": "to the client that hey your your eddie your update has been has done your update your key has been updated",
    "start": "1568640",
    "end": "1576400"
  },
  {
    "text": "or the other approach is just snapshot the whole thing so what happens is i think that when i",
    "start": "1576400",
    "end": "1582240"
  },
  {
    "text": "read that it was like every two seconds or whatever so every two seconds it will literally take a snapshot of what is in",
    "start": "1582240",
    "end": "1588080"
  },
  {
    "text": "memory convert it to some binary format and flush it to desk",
    "start": "1588080",
    "end": "1593120"
  },
  {
    "text": "right and then and that the beauty of this is that the user has doesn't have to know any of that right",
    "start": "1593120",
    "end": "1598799"
  },
  {
    "text": "and the idea is you go and write to the memory and then you get always get you always write to memory in",
    "start": "1598799",
    "end": "1605360"
  },
  {
    "text": "this case right but and then the database will the database will flush",
    "start": "1605360",
    "end": "1610640"
  },
  {
    "text": "your changes to disk after you two seconds here's what",
    "start": "1610640",
    "end": "1615919"
  },
  {
    "text": "might go wrong here if you wrote something in memory and then right",
    "start": "1615919",
    "end": "1622480"
  },
  {
    "text": "after one second you lost power then you lost that edit",
    "start": "1622480",
    "end": "1628080"
  },
  {
    "text": "because the snapshot did not took place right yet right so you might",
    "start": "1628080",
    "end": "1634000"
  },
  {
    "text": "lose some data with this versus the journal and i think the default is journaling all right optional",
    "start": "1634000",
    "end": "1639200"
  },
  {
    "text": "better so both of them as we talked about both of them happen asynchronously in the background right",
    "start": "1639200",
    "end": "1645200"
  },
  {
    "text": "so there's another thread that does this thing asynchronously and uh transfer protocol so what does",
    "start": "1645200",
    "end": "1650960"
  },
  {
    "text": "redis use is as its transport protocol and it uses beautiful tcp it's a very",
    "start": "1650960",
    "end": "1659760"
  },
  {
    "text": "low level raw tcp all right and that's a choice as a bold choice i kind of have my",
    "start": "1659760",
    "end": "1667520"
  },
  {
    "text": "uh opinions about that but we'll talk about that so it uses it uses",
    "start": "1667520",
    "end": "1673760"
  },
  {
    "text": "tcp which is the transport control protocol it's very low level pretty much all databases uses tcp",
    "start": "1673760",
    "end": "1679520"
  },
  {
    "text": "i don't know what database vendors have against http right",
    "start": "1679520",
    "end": "1687600"
  },
  {
    "text": "i don't know i want to see a database that works purely on http a request",
    "start": "1687600",
    "end": "1693440"
  },
  {
    "text": "response database web database that works on http",
    "start": "1693440",
    "end": "1698480"
  },
  {
    "text": "what's wrong with that i don't know make you get security for free you get",
    "start": "1698480",
    "end": "1704240"
  },
  {
    "text": "tls for free you get http two don't you don't have to support one 1-0",
    "start": "1704240",
    "end": "1709840"
  },
  {
    "text": "or 1-1 support on 2-0 or three right or quick for god's sake i don't know man",
    "start": "1709840",
    "end": "1716080"
  },
  {
    "text": "i don't know yeah i don't know maybe i'm missing something right i don't know i'm",
    "start": "1716080",
    "end": "1722480"
  },
  {
    "text": "i'm no expert but that's what to me it's we're in desperate need of a database",
    "start": "1722480",
    "end": "1728240"
  },
  {
    "text": "that runs on a web server the database is the observer please someone design this for us",
    "start": "1728240",
    "end": "1735120"
  },
  {
    "text": "all right so it uses dcp okay out of the question again sorry it's a request response model",
    "start": "1735120",
    "end": "1742000"
  },
  {
    "text": "just like http which is kind of good right but here's the thing right so it's a request it's possible so you make a",
    "start": "1742000",
    "end": "1748480"
  },
  {
    "text": "request it's a synchronous kind of a request and you wait for a result and you say hey give me that key delete",
    "start": "1748480",
    "end": "1755600"
  },
  {
    "text": "that key update that key and you get the result back so always the client initiate the request there is",
    "start": "1755600",
    "end": "1762080"
  },
  {
    "text": "one case where this becomes a posh model and we're gonna talk about that okay",
    "start": "1762080",
    "end": "1768640"
  },
  {
    "text": "message format they have their own fancy message format which is that's the first time i heard about this",
    "start": "1768640",
    "end": "1774480"
  },
  {
    "text": "it's called resp which is reddest serialization protocol right i",
    "start": "1774480",
    "end": "1779679"
  },
  {
    "text": "don't know why it's called protocol right it's a message format okay to me it's just the message format but",
    "start": "1779679",
    "end": "1786399"
  },
  {
    "text": "yeah the message formats that some binary stuff right so i don't i don't like that",
    "start": "1786399",
    "end": "1792399"
  },
  {
    "text": "one bit right it's just like in my opinion we should have gone standard right",
    "start": "1792399",
    "end": "1797919"
  },
  {
    "text": "we should have used some standard at least they used some sata and documented that which is good unlike other databases which they don't",
    "start": "1797919",
    "end": "1804799"
  },
  {
    "text": "even tell you what's the protocol they're using they're just they're all custom and they're all",
    "start": "1804799",
    "end": "1810320"
  },
  {
    "text": "hidden yeah i don't believe mongodb advertises their underlying protocol so",
    "start": "1810320",
    "end": "1815360"
  },
  {
    "text": "they did kind of something good right they did i wish they used like protocol buffers i",
    "start": "1815360",
    "end": "1820480"
  },
  {
    "text": "don't know if they can though it's just schema based yeah i'm not sure it's not",
    "start": "1820480",
    "end": "1826000"
  },
  {
    "text": "it's not possible but yeah it's just yeah so it's their own protocol fancy serialization protocol",
    "start": "1826000",
    "end": "1833200"
  },
  {
    "text": "yeah yeah there might be a limitation that am i aware of again guys yell at me in the comment section if",
    "start": "1833200",
    "end": "1839039"
  },
  {
    "text": "i am if i'm babbling right uh pops up they also support a public",
    "start": "1839039",
    "end": "1846080"
  },
  {
    "text": "publish subscribe model where you can essentially just like kafka",
    "start": "1846080",
    "end": "1851360"
  },
  {
    "text": "you can subscribe to a topic i think it's called channel and redis even the channel",
    "start": "1851360",
    "end": "1858399"
  },
  {
    "text": "doesn't exist it's okay once you publish subscribe to this channel you can publish something to that",
    "start": "1858399",
    "end": "1865679"
  },
  {
    "text": "channel and that client who subscribed will get that message because what you",
    "start": "1865679",
    "end": "1873120"
  },
  {
    "text": "know what's happening when it first connected the redis instance you establish a tcp connection which is by default it is a two-way",
    "start": "1873120",
    "end": "1881679"
  },
  {
    "text": "tcp connection it's always bi-directional right which is powerful because now that's",
    "start": "1881679",
    "end": "1887519"
  },
  {
    "text": "that's kind of a good way they yeah they use tcp because of that and then if you have that",
    "start": "1887519",
    "end": "1893279"
  },
  {
    "text": "they can switch when you subscribe to a topic they switch your connections they kind",
    "start": "1893279",
    "end": "1898799"
  },
  {
    "text": "of block you from making requests and they switch to a push model where you say you",
    "start": "1898799",
    "end": "1905360"
  },
  {
    "text": "know what you're a client you're not just waiting okay and for when i when i first read about publish",
    "start": "1905360",
    "end": "1911760"
  },
  {
    "text": "subscribe i thought that they were gonna use a long",
    "start": "1911760",
    "end": "1916799"
  },
  {
    "text": "polling method right unless i read i think and i used it then i noticed that they",
    "start": "1916799",
    "end": "1922240"
  },
  {
    "text": "are actually using a push model not a long calling model which is",
    "start": "1922240",
    "end": "1927440"
  },
  {
    "text": "interesting okay right and uh that's okay because the number of clients that a redis database will have",
    "start": "1927440",
    "end": "1934559"
  },
  {
    "text": "is is known it's unlike kafka which is kind of a lot of clients that's why kafka uses long",
    "start": "1934559",
    "end": "1940720"
  },
  {
    "text": "polling versus the abandoned posh model because of a reason right because you cannot the client cannot take",
    "start": "1940720",
    "end": "1949200"
  },
  {
    "text": "you cannot guarantee that the client will receive a topic right but now with radius we kind of know",
    "start": "1949200",
    "end": "1956799"
  },
  {
    "text": "because limit redis has very limited clients right you kind of hide everything behind a web",
    "start": "1956799",
    "end": "1963440"
  },
  {
    "text": "server or anything and but the actual client of redis will be very internal to the application which",
    "start": "1963440",
    "end": "1969760"
  },
  {
    "text": "is hidden from the end user all right so switches to push model and we can talk",
    "start": "1969760",
    "end": "1976000"
  },
  {
    "text": "about that okay replication and clustering let's talk about quickly about these two things right so replication guys",
    "start": "1976000",
    "end": "1983200"
  },
  {
    "text": "you know it's it's available everywhere even in relational databases right guys",
    "start": "1983200",
    "end": "1988559"
  },
  {
    "text": "guys i'm not dissing anything right guys so i'm not dissing relational databases i use region databases i have a lot of",
    "start": "1988559",
    "end": "1995440"
  },
  {
    "text": "videos on postgres uh and then yeah so i don't have strong opinions about which is best",
    "start": "1995440",
    "end": "2002080"
  },
  {
    "text": "there is always pros and cons for every single single thing but that's just my opinion right but yeah",
    "start": "2002080",
    "end": "2008240"
  },
  {
    "text": "replication there is false quest support replication oracle support replication sql server support replication",
    "start": "2008240",
    "end": "2014559"
  },
  {
    "text": "mongodb have replication and essentially there's a one leader on many followers",
    "start": "2014559",
    "end": "2019760"
  },
  {
    "text": "model right so that's the idea so you have one leader node and then you have many followers",
    "start": "2019760",
    "end": "2027200"
  },
  {
    "text": "node right that that kind of replicate the data so one",
    "start": "2027200",
    "end": "2032320"
  },
  {
    "text": "leader or master node that you write everything to it and then all the followers will pull",
    "start": "2032320",
    "end": "2038720"
  },
  {
    "text": "data right usually asynchronously as well right until just read and then you can",
    "start": "2038720",
    "end": "2045600"
  },
  {
    "text": "point your clients to the replicas or the followers to read so you can kind of scale right",
    "start": "2045600",
    "end": "2053200"
  },
  {
    "text": "scale your readers but writing i think always goes to the master you",
    "start": "2053200",
    "end": "2058240"
  },
  {
    "text": "can write to the replica it gets a little bit complicated out of this scope of this video and",
    "start": "2058240",
    "end": "2064960"
  },
  {
    "text": "there's the other thing which is clustering again clustering can happen with replication",
    "start": "2064960",
    "end": "2071440"
  },
  {
    "text": "but clustering is its own concept where you shard your data you kind of actually",
    "start": "2071440",
    "end": "2076638"
  },
  {
    "text": "have certain data but you split it right you split your data into multiple nodes",
    "start": "2076639",
    "end": "2083440"
  },
  {
    "text": "right you so you say for example you have a table or a collection with the mail one",
    "start": "2083440",
    "end": "2088560"
  },
  {
    "text": "million rows one million keys you say okay the first five thousand keys goes to this chart the",
    "start": "2088560",
    "end": "2095118"
  },
  {
    "text": "second five thousand keys goes to this chart and the third goes to this chart so usually using uses consistent hashing to",
    "start": "2095119",
    "end": "2101359"
  },
  {
    "text": "distribute all these mumbo jumbo right across all these shorts right",
    "start": "2101359",
    "end": "2106480"
  },
  {
    "text": "so and then you can combine clustering with replication",
    "start": "2106480",
    "end": "2111599"
  },
  {
    "text": "in a hybrid format where where your shards your nodes become",
    "start": "2111599",
    "end": "2118480"
  },
  {
    "text": "the masters or the leaders and there so so each leader will have",
    "start": "2118480",
    "end": "2124640"
  },
  {
    "text": "part of the data and that each leader will replicate that part of the data to",
    "start": "2124640",
    "end": "2131119"
  },
  {
    "text": "its followers is that right you can say it's followers yes yeah it's followers right so again it's just",
    "start": "2131119",
    "end": "2138240"
  },
  {
    "text": "part of the data but it's also replicated right does that make sense so replication clustering right replication",
    "start": "2138240",
    "end": "2144320"
  },
  {
    "text": "is the whole thing it's the whole data replicated clustering is you segment you",
    "start": "2144320",
    "end": "2149520"
  },
  {
    "text": "shard your data into multiple node and that node now have it treats this is",
    "start": "2149520",
    "end": "2154800"
  },
  {
    "text": "the whole data obviously it's whole data but then it just replicates it example",
    "start": "2154800",
    "end": "2161680"
  },
  {
    "text": "all right we're gonna we're gonna get to the example guys we're gonna get the example all right let's do this let's do this here's what we're gonna do right again",
    "start": "2161680",
    "end": "2168160"
  },
  {
    "text": "you're gonna see time cards again for the example because i am that generous how about that um i i",
    "start": "2168160",
    "end": "2173359"
  },
  {
    "text": "value your time so if i only stop speaking i can get to the example all right spin",
    "start": "2173359",
    "end": "2181200"
  },
  {
    "text": "redis dokar in stains so what you do essentially is what we want to do is we're going to use",
    "start": "2181200",
    "end": "2186800"
  },
  {
    "text": "docker because it's the best way to test any technology out there you don't have to install mongodb on",
    "start": "2186800",
    "end": "2192960"
  },
  {
    "text": "your database and pollute your database with that stuff or put your machine with that stuff right or postgres",
    "start": "2192960",
    "end": "2199200"
  },
  {
    "text": "just do docker start pg if you named your day your container pg starts if you",
    "start": "2199200",
    "end": "2204720"
  },
  {
    "text": "don't need it anymore docker stop pg docker start redis docker start mongodb",
    "start": "2204720",
    "end": "2210320"
  },
  {
    "text": "and if you don't need it docker stop mongodb and then you can continue working normally right if you don't need",
    "start": "2210320",
    "end": "2216000"
  },
  {
    "text": "it at all docker rm-rf delete the container otherwise you're",
    "start": "2216000",
    "end": "2221119"
  },
  {
    "text": "going to deal with an installation rich key which keys in windows yeah but you're going to deal with files and garbage",
    "start": "2221119",
    "end": "2226880"
  },
  {
    "text": "right docker is like the best way to test anything right so we're gonna do that then we're gonna learn how to set the key because we're",
    "start": "2226880",
    "end": "2233520"
  },
  {
    "text": "gonna show you how to do that we're gonna do the cli command cli that's called redis cli",
    "start": "2233520",
    "end": "2238800"
  },
  {
    "text": "we're gonna also do a set key with expiry so you can set a key that's pretty powerful um",
    "start": "2238800",
    "end": "2245680"
  },
  {
    "text": "powerful feature in redis where you can set a key with a value and let it expire say hey expire this",
    "start": "2245680",
    "end": "2252560"
  },
  {
    "text": "after 10 seconds i don't know why we're gonna do that but let's say hey this value is only available for seven seconds right",
    "start": "2252560",
    "end": "2259119"
  },
  {
    "text": "and i think this this is comes back that how how do they expire keys is also another thread",
    "start": "2259119",
    "end": "2264880"
  },
  {
    "text": "right i didn't read anything that talk about expiry and how they handle expire but i believe",
    "start": "2264880",
    "end": "2270560"
  },
  {
    "text": "there has to be a background thread so that that's another way they have an another threat so it's not always single",
    "start": "2270560",
    "end": "2277440"
  },
  {
    "text": "threaded right it has to have another thread as well that to ch check for expired keys",
    "start": "2277440",
    "end": "2282800"
  },
  {
    "text": "git key right i might be wrong again guys uh uh correct me if i am wrong about",
    "start": "2282800",
    "end": "2289599"
  },
  {
    "text": "anything git key gonna talk about exist key i'm gonna call it about delete key we're gonna talk about how you delete",
    "start": "2289599",
    "end": "2295520"
  },
  {
    "text": "the key how you append the key and we can also do a publish subscribe model let's just jump into the example guys",
    "start": "2295520",
    "end": "2303119"
  },
  {
    "text": "let's do this let's spin up a docker container whether it is all right guys so i am in",
    "start": "2303119",
    "end": "2308320"
  },
  {
    "text": "my command prompt right whether whether you have windows mac linux or any other operating",
    "start": "2308320",
    "end": "2316000"
  },
  {
    "text": "system that supports docker you're good if you can do docker and you can see some text here or you can do docker run",
    "start": "2316000",
    "end": "2324400"
  },
  {
    "text": "hello dash ward and you can see hello world you can just see no errors",
    "start": "2324400",
    "end": "2330400"
  },
  {
    "text": "or nothing you're good to go right if you see i think hello hello from docker if you see this",
    "start": "2330400",
    "end": "2336079"
  },
  {
    "text": "you're good you can start this tutorial right now right once install docker make sure it works",
    "start": "2336079",
    "end": "2342079"
  },
  {
    "text": "once you do these two commands you're good to start let's do this okay what do we want to do we want to start",
    "start": "2342079",
    "end": "2348079"
  },
  {
    "text": "a redis instance and redis instance since it's a server obviously it's listening to a port",
    "start": "2348079",
    "end": "2354079"
  },
  {
    "text": "obviously right since it's a tcp right has to listen to a layer 4 port on",
    "start": "2354079",
    "end": "2359839"
  },
  {
    "text": "on an ip so you have to obviously start it with a port and we need to know that port name and",
    "start": "2359839",
    "end": "2367520"
  },
  {
    "text": "i i know that port number okay we're going to show you right now so here's what you do you do docker run",
    "start": "2367520",
    "end": "2373680"
  },
  {
    "text": "right and always make it a habit to name your container and i'm going to name it rdb redis i don't know i just",
    "start": "2373680",
    "end": "2381760"
  },
  {
    "text": "name it rdb okay and then after that you give it a name you say okay where how do you gonna",
    "start": "2381760",
    "end": "2390079"
  },
  {
    "text": "expose the ports because the port is running on i think it's six",
    "start": "2390079",
    "end": "2395520"
  },
  {
    "text": "three seven nine took me a while to know what that part six three seven nine",
    "start": "2395520",
    "end": "2401839"
  },
  {
    "text": "so as usual this the highlighted part",
    "start": "2401839",
    "end": "2407680"
  },
  {
    "text": "right is what is running on the container okay that port that was running in the",
    "start": "2407680",
    "end": "2412880"
  },
  {
    "text": "container this part can be anything you want it could be seven seven seven seven it could be ten thousand right and that is will",
    "start": "2412880",
    "end": "2421440"
  },
  {
    "text": "what would be mapped right on your host machine which is called hussein mac in this case",
    "start": "2421440",
    "end": "2427359"
  },
  {
    "text": "to your to your container right so in this case if you mapped it the same",
    "start": "2427359",
    "end": "2432400"
  },
  {
    "text": "you can have the same unless if you already have a port that is running on six three seven now you might",
    "start": "2432400",
    "end": "2438400"
  },
  {
    "text": "get an error right but again this could be anything this has to be c six three seven nine right and then",
    "start": "2438400",
    "end": "2445440"
  },
  {
    "text": "finally you do redis and uh is it back can i do this okay regis is",
    "start": "2445440",
    "end": "2452319"
  },
  {
    "text": "essentially the image on the docker hub right has to be called radash and then you run and then",
    "start": "2452319",
    "end": "2459599"
  },
  {
    "text": "kind of ready to accept that's kind of fast right and plus i run it before that's why it just",
    "start": "2459599",
    "end": "2465359"
  },
  {
    "text": "it just immediately starts so in your case my download the image and do all that mambo jumbo and start the connection so",
    "start": "2465359",
    "end": "2472319"
  },
  {
    "text": "i can now start doing stuff all right where's that command cli that we're",
    "start": "2472319",
    "end": "2479040"
  },
  {
    "text": "talking about where is that redis command line interface right so we're going to leave this",
    "start": "2479040",
    "end": "2485920"
  },
  {
    "text": "command terminal up here you can do dash d if you want and make it detach but i like to keep",
    "start": "2485920",
    "end": "2492079"
  },
  {
    "text": "my container so i can see what's going on and what when what requesters coming right so",
    "start": "2492079",
    "end": "2498480"
  },
  {
    "text": "it's good it's good to just kind of tail it so we're going to go ahead and do shell new window",
    "start": "2498480",
    "end": "2505520"
  },
  {
    "text": "and look at that right so we have a side-by-side terminal and here's what are you trying to do",
    "start": "2505520",
    "end": "2510720"
  },
  {
    "text": "we will jump into container we're going to bash into the container not bash we're",
    "start": "2510720",
    "end": "2516160"
  },
  {
    "text": "going to yes we're going to execute the redis dash cli command inside the",
    "start": "2516160",
    "end": "2522000"
  },
  {
    "text": "campaign i'm going to go inside the container and then run the command line interface inside the container so how do we do that",
    "start": "2522000",
    "end": "2527920"
  },
  {
    "text": "we do docker execute dash interactive terminal ite",
    "start": "2527920",
    "end": "2534640"
  },
  {
    "text": "and then you specify the name of the rediscontainer which we called what rdb right and then the final thing is",
    "start": "2534640",
    "end": "2542800"
  },
  {
    "text": "the command and the command to run you can do bash and then run it but you can also run the command that is",
    "start": "2542800",
    "end": "2549119"
  },
  {
    "text": "called redis dash cli hopefully i got it right so it's called redis dash cli",
    "start": "2549119",
    "end": "2554880"
  },
  {
    "text": "i don't know why it's not just called redis all right and you're in now you are on the redis cli",
    "start": "2554880",
    "end": "2562560"
  },
  {
    "text": "right you're there all right what can we do guys we span up a docker container how about",
    "start": "2562560",
    "end": "2569119"
  },
  {
    "text": "we set a key because that's what it's a key value store right so i'm going and look how",
    "start": "2569119",
    "end": "2576400"
  },
  {
    "text": "beautiful this autocomplete is you can see the autocomplete immediately",
    "start": "2576400",
    "end": "2582000"
  },
  {
    "text": "happening right so i'm going to set a key that is called i don't really thought about that huh",
    "start": "2582000",
    "end": "2587839"
  },
  {
    "text": "i'm going to say the key that called name right and then call it hussein right",
    "start": "2587839",
    "end": "2593440"
  },
  {
    "text": "so now it says okay",
    "start": "2593440",
    "end": "2599040"
  },
  {
    "text": "which means the name has been set how do you get it very hard get",
    "start": "2599280",
    "end": "2605359"
  },
  {
    "text": "and then key all right that's pretty cool right you say the",
    "start": "2605359",
    "end": "2610560"
  },
  {
    "text": "name and then you get it back right how about i'm gonna set a value name",
    "start": "2610560",
    "end": "2616160"
  },
  {
    "text": "temp right this is another key and let's call it admond",
    "start": "2616160",
    "end": "2621599"
  },
  {
    "text": "and then we're going to set an expiry for that thing right and i think the syntax is ex and then",
    "start": "2621599",
    "end": "2627839"
  },
  {
    "text": "you specify how many seconds so let's specify 10 seconds okay so i set a",
    "start": "2627839",
    "end": "2633040"
  },
  {
    "text": "new key called edma named him so let's get it tim named him and it's called edmund so",
    "start": "2633040",
    "end": "2639359"
  },
  {
    "text": "let's wait for 10 second and then pull it again and that should go away let's try it",
    "start": "2639359",
    "end": "2646400"
  },
  {
    "text": "has it been 10 second already yes so it had been 10 seconds and now we're getting nil that mean it",
    "start": "2646400",
    "end": "2651839"
  },
  {
    "text": "doesn't exist neil mean anything that doesn't exist example of something that doesn't exist",
    "start": "2651839",
    "end": "2656960"
  },
  {
    "text": "balloony bologna doesn't exist so it says no all right so we learned set we didn't",
    "start": "2656960",
    "end": "2663280"
  },
  {
    "text": "set with expiration we didn't get how about exist does exist is pretty cool",
    "start": "2663280",
    "end": "2668640"
  },
  {
    "text": "exists this just returns a true false or just a number i think name temp name them doesn't exist how",
    "start": "2668640",
    "end": "2676000"
  },
  {
    "text": "about name name does exist right in zero and one right and we're going to make a video",
    "start": "2676000",
    "end": "2681040"
  },
  {
    "text": "guys uh about like node.js or javascript against the redis database so",
    "start": "2681040",
    "end": "2686960"
  },
  {
    "text": "stay tuned for that video subscribe if you would like to right let's go ahead and delete dell",
    "start": "2686960",
    "end": "2693839"
  },
  {
    "text": "that's not hard it's exactly like the command line interface in windows at least right dell name",
    "start": "2693839",
    "end": "2700640"
  },
  {
    "text": "and now it's deleted it says true right now if i say exist name it doesn't exist anymore",
    "start": "2700640",
    "end": "2707599"
  },
  {
    "text": "let's clear all right so let's append if i can i append to something that doesn't exist",
    "start": "2707599",
    "end": "2713760"
  },
  {
    "text": "right let's do right hussein got seven i have no idea",
    "start": "2713760",
    "end": "2719119"
  },
  {
    "text": "what that what that mean we got it back so let's add ben to name",
    "start": "2719119",
    "end": "2724960"
  },
  {
    "text": "uh john we got 11. i don't know what that what",
    "start": "2724960",
    "end": "2731040"
  },
  {
    "text": "that what that means seriously i don't know is this one two three four five six oh",
    "start": "2731040",
    "end": "2736480"
  },
  {
    "text": "man we get back the length of the string that is amazing and now if i do a good",
    "start": "2736480",
    "end": "2742079"
  },
  {
    "text": "name that's pretty cool all right that's cool",
    "start": "2742079",
    "end": "2747200"
  },
  {
    "text": "right and then uh we did append how about we do a publish subscribe model so here's",
    "start": "2747200",
    "end": "2754319"
  },
  {
    "text": "what you do guys so let's assume i have my youtube channel and i'm gonna create a channel",
    "start": "2754319",
    "end": "2759440"
  },
  {
    "text": "called new videos right i'm gonna subscribe to a channel called new videos right",
    "start": "2759440",
    "end": "2766960"
  },
  {
    "text": "and just like that i cannot do much here that's it",
    "start": "2766960",
    "end": "2772400"
  },
  {
    "text": "see i i cannot type anything here i'm kind of waiting for results because we we told",
    "start": "2772400",
    "end": "2779119"
  },
  {
    "text": "you right we talked about this we shift to a posh model when we subscribe and then how do i publish a video so",
    "start": "2779119",
    "end": "2786720"
  },
  {
    "text": "very simple let's go ahead and create another shell hopefully yes it works and then",
    "start": "2786720",
    "end": "2792720"
  },
  {
    "text": "we're going to do docker exec dash i t rdv uh what it was called that",
    "start": "2792720",
    "end": "2799200"
  },
  {
    "text": "redis uh cli all right keep forgetting okay good we're in now i'm gonna",
    "start": "2799200",
    "end": "2805599"
  },
  {
    "text": "publish to the channel that's called new videos a message then says uh",
    "start": "2805599",
    "end": "2813440"
  },
  {
    "text": "redis crash course is up babes",
    "start": "2813440",
    "end": "2820000"
  },
  {
    "text": "and then we publish this successfully let's go back to the other terminal oh nice we get a message",
    "start": "2820560",
    "end": "2828640"
  },
  {
    "text": "now i didn't work with the javascript yet but i'm believing we're going to get back a nice json formatted",
    "start": "2828640",
    "end": "2834560"
  },
  {
    "text": "string right that we can work with so we did that we get that let's let's pop let's publish another thing",
    "start": "2834560",
    "end": "2840240"
  },
  {
    "text": "publish new videos",
    "start": "2840240",
    "end": "2845520"
  },
  {
    "text": "uh i don't know c sharp crash course published a new video like and we get it",
    "start": "2845520",
    "end": "2852800"
  },
  {
    "text": "back isn't that amazing guys right let's what happened if i published a",
    "start": "2852800",
    "end": "2858720"
  },
  {
    "text": "channel that doesn't exist sup huh it fails",
    "start": "2858720",
    "end": "2864480"
  },
  {
    "text": "it gives you zero that means i couldn't find that channel because either that nobody's i don't know if it",
    "start": "2864480",
    "end": "2870240"
  },
  {
    "text": "creates a physical channel or not but what happens here is everything is here is by the way it's done in the memory right guys",
    "start": "2870240",
    "end": "2878000"
  },
  {
    "text": "but what's happening here is if no subscribers exist for that channel",
    "start": "2878000",
    "end": "2885119"
  },
  {
    "text": "then it's going to give you a zero i think right it doesn't really check final thing before we end this video",
    "start": "2885119",
    "end": "2890800"
  },
  {
    "text": "guys what i noticed is and let's go here this is the database and you can see",
    "start": "2890800",
    "end": "2896480"
  },
  {
    "text": "like we can see the the information that we got and then what happens here is the database",
    "start": "2896480",
    "end": "2905200"
  },
  {
    "text": "starts when we do a docker it starts with durability available right i don't know the details",
    "start": "2905200",
    "end": "2911760"
  },
  {
    "text": "about that i think we can change the config but i think it starts with journaling",
    "start": "2911760",
    "end": "2917359"
  },
  {
    "text": "and what we'll do what will that happen is every update goes to the desk so this is",
    "start": "2917359",
    "end": "2923680"
  },
  {
    "text": "a persisted model if i stop by criteria i started again well let's try it i have",
    "start": "2923680",
    "end": "2929599"
  },
  {
    "text": "no idea guys if that will work so let's kill it right see i killed it and said db save",
    "start": "2929599",
    "end": "2936880"
  },
  {
    "text": "to disk interesting bye bye interesting i never",
    "start": "2936880",
    "end": "2942079"
  },
  {
    "text": "tried this by the way so it's clear and they say docker start rdb and then",
    "start": "2942079",
    "end": "2949520"
  },
  {
    "text": "we'll bash it again and then let's get what do we have i don't have we have",
    "start": "2949520",
    "end": "2954839"
  },
  {
    "text": "anything it works good name for st john so it does start with durability that was i",
    "start": "2954839",
    "end": "2961119"
  },
  {
    "text": "didn't test that by the way i just tested like life while i'm making that video how about that guys",
    "start": "2961119",
    "end": "2966240"
  },
  {
    "text": "so it is durable by default when you start from docker you can disable that i do not know how but i'm going to",
    "start": "2966240",
    "end": "2971839"
  },
  {
    "text": "reference the docs here if you're interested into doing that it's possible to disable durability that",
    "start": "2971839",
    "end": "2977760"
  },
  {
    "text": "so that hey i just want in memory always in memory right and then get all that",
    "start": "2977760",
    "end": "2984720"
  },
  {
    "text": "fancy stuff all right guys hope you enjoyed this video uh if you enjoyed it share with your friends and subscribe to the channel to",
    "start": "2984720",
    "end": "2991119"
  },
  {
    "text": "get more coolish software engineering uh videos",
    "start": "2991119",
    "end": "2996319"
  },
  {
    "text": "i'm gonna see you in the next one you guys stay awesome",
    "start": "2996319",
    "end": "3002400"
  }
]