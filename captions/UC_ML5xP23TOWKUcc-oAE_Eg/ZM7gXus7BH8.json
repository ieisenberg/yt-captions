[
  {
    "start": "0",
    "end": "466000"
  },
  {
    "text": "javascript is one of the most popular programming languages out there it started as a scripting language for the",
    "start": "30",
    "end": "6210"
  },
  {
    "text": "web but now you can write and run JavaScript code virtually anywhere you can run JavaScript on your browser on",
    "start": "6210",
    "end": "13650"
  },
  {
    "text": "your back-end server on your desktop and that includes your Macintosh Windows and",
    "start": "13650",
    "end": "22320"
  },
  {
    "text": "Linux examples of some applications that are written in JavaScript or slack skype",
    "start": "22320",
    "end": "28519"
  },
  {
    "text": "Visual Studio code and many many more Netflix and paper also uses JavaScript",
    "start": "28519",
    "end": "34440"
  },
  {
    "text": "for some of their back-end of structure so if those are good reasons for you to learn JavaScript it's pretty much it as",
    "start": "34440",
    "end": "41040"
  },
  {
    "text": "good as any reasons in this video I want to go through what I believe are the",
    "start": "41040",
    "end": "46110"
  },
  {
    "text": "essential tools of JavaScript this video is targeted towards programmers who",
    "start": "46110",
    "end": "52289"
  },
  {
    "text": "never wrote JavaScript before or have basic understanding of the language I",
    "start": "52289",
    "end": "57570"
  },
  {
    "text": "will use the latest and greatest syntax of JavaScript as of 2019 this video is",
    "start": "57570",
    "end": "63660"
  },
  {
    "text": "very practical there is no much history or backstories involved junior here welcome my name is",
    "start": "63660",
    "end": "70860"
  },
  {
    "text": "Hussein in this channel we discuss all sorts of software engineering by example so if you want to become a better",
    "start": "70860",
    "end": "76470"
  },
  {
    "text": "software engineer consider subscribing and hit that Bell icon so you get notified every time I upload a new video",
    "start": "76470",
    "end": "82470"
  },
  {
    "text": "this is not the only type of videos we make who don't I make other kind of videos not only just tutorials",
    "start": "82470",
    "end": "89520"
  },
  {
    "text": "programming make topic discussion topics about very technical aspects of software",
    "start": "89520",
    "end": "96390"
  },
  {
    "text": "engineering like TLS and proxies and load balancing and all that stuff or",
    "start": "96390",
    "end": "101880"
  },
  {
    "text": "that's it let's just jump into this video so if I am a half-decent",
    "start": "101880",
    "end": "107040"
  },
  {
    "text": "editor you should see timestamps for each of those topics and you can seek to",
    "start": "107040",
    "end": "116070"
  },
  {
    "text": "that time minute maybe hour hour minute seconds and go to what exactly you're",
    "start": "116070",
    "end": "123420"
  },
  {
    "text": "interested in the topic that interesting and to learn ok maybe you know all of these you can jump to things that like a",
    "start": "123420",
    "end": "129390"
  },
  {
    "text": "fetch API you can jump directly to that right so you can do that as I think of this as your table of content",
    "start": "129390",
    "end": "135940"
  },
  {
    "text": "you can always seek to this location right I'm gonna add jump code to the",
    "start": "135940",
    "end": "141040"
  },
  {
    "text": "table of content or the outline and from there we you can jump to your favorite",
    "start": "141040",
    "end": "146440"
  },
  {
    "text": "location and just to learn and um I am myself I'm gonna use this video because you know we are a whole human we forget",
    "start": "146440",
    "end": "153370"
  },
  {
    "text": "obviously and that's why it's always good to have a quick refresher on basic concepts right and this is what I",
    "start": "153370",
    "end": "160630"
  },
  {
    "text": "believe are the essential tools from being programming in JavaScript for now",
    "start": "160630",
    "end": "166120"
  },
  {
    "text": "three years I have been coding since 1998 but JavaScript like I would say",
    "start": "166120",
    "end": "173890"
  },
  {
    "text": "professionally for three years now right and I find these are the most things I use there are a lot of things that you",
    "start": "173890",
    "end": "180610"
  },
  {
    "text": "might disagree with and you say hey I use I don't know apply bind all the time this is this is what I believe most",
    "start": "180610",
    "end": "187420"
  },
  {
    "text": "people will use right well that's it let's go go through quickly what are these things right if you're a",
    "start": "187420",
    "end": "194319"
  },
  {
    "text": "programmer or you've never code it before that's okay we're gonna learn about that today and",
    "start": "194319",
    "end": "199720"
  },
  {
    "text": "now we have no let's talk about variables obviously every programming language has those talk about variables",
    "start": "199720",
    "end": "206109"
  },
  {
    "text": "we're gonna talk about this different kind of how you declare variables javascript is not a strongly typed",
    "start": "206109",
    "end": "211510"
  },
  {
    "text": "language that means you don't say hey I want an integer I wanna date I know I",
    "start": "211510",
    "end": "216910"
  },
  {
    "text": "want a string he just they figure it out for you conditions if statement ternary",
    "start": "216910",
    "end": "223660"
  },
  {
    "text": "operators glad I talked about arrays all right very powerful concept I talked",
    "start": "223660",
    "end": "231280"
  },
  {
    "text": "about Jason which is like I would say 80% of the web is being transferred in Jason which is a stands for JavaScript",
    "start": "231280",
    "end": "238090"
  },
  {
    "text": "object notation forget that for a minute now functions very powerful concept and",
    "start": "238090",
    "end": "244540"
  },
  {
    "text": "then the far superior arrow functions yeah far sorry it's just simplified you",
    "start": "244540",
    "end": "251650"
  },
  {
    "text": "know we invented arrow function double I say we JavaScript people beyond jovica",
    "start": "251650",
    "end": "257859"
  },
  {
    "text": "invented arrow functions for people like us who have functions of one line of",
    "start": "257859",
    "end": "263080"
  },
  {
    "text": "coach that how I believe it if you're passing functions around and most of the function has like one line",
    "start": "263080",
    "end": "268680"
  },
  {
    "text": "of code why do I have to add all these ugly curly braces so there might be",
    "start": "268680",
    "end": "274020"
  },
  {
    "text": "other reasons but that's what I think the reason it's very elegant syntactic",
    "start": "274020",
    "end": "280410"
  },
  {
    "text": "should they're as they say loops da right for loops while loops for each and",
    "start": "280410",
    "end": "288810"
  },
  {
    "text": "then obviously guys these all of this stuff we're gonna do a contrived example and I apologize for that I know some",
    "start": "288810",
    "end": "295110"
  },
  {
    "text": "people don't like contrived example like really if age is greater than a tune then yeah you can drink bro yeah so I",
    "start": "295110",
    "end": "303000"
  },
  {
    "text": "don't know I cannot think of it real examples out of context it doesn't make",
    "start": "303000",
    "end": "308610"
  },
  {
    "text": "any sense right so I got a make up contrived example so I apologize for that exercise I'm gonna give you a real",
    "start": "308610",
    "end": "315210"
  },
  {
    "text": "example or that you know we gotta build something all right we're gonna go to",
    "start": "315210",
    "end": "320910"
  },
  {
    "text": "that okay and I think we can say it right we're gonna build essentially a function that kind of exercise all of",
    "start": "320910",
    "end": "329009"
  },
  {
    "text": "that or two functions and I'm gonna pause the video you can do it and then you can obviously see how I did it it's",
    "start": "329009",
    "end": "335280"
  },
  {
    "text": "not perfect it's not gonna be perfect you guys might do a better job than I do right but that's how programmers you can",
    "start": "335280",
    "end": "342000"
  },
  {
    "text": "write it's just general what do you want to do what what is the purpose of what you're building",
    "start": "342000",
    "end": "348199"
  },
  {
    "text": "now we're going to talk about the properties of arrays okay and then array",
    "start": "348199",
    "end": "354419"
  },
  {
    "text": "you can do an array but you can do an array map and I was very confused about what the heck is that but I started",
    "start": "354419",
    "end": "361289"
  },
  {
    "text": "using it and it is powerful concept you know before Maps we were doing all sorts",
    "start": "361289",
    "end": "368370"
  },
  {
    "text": "of loopy stuff map solved a lot of things and you I found myself using map a lot which is surprisingly for",
    "start": "368370",
    "end": "375449"
  },
  {
    "text": "something you didn't know about right it sounds like that you learn you see something new you are kind of reluctant",
    "start": "375449",
    "end": "382830"
  },
  {
    "text": "to learn it right but once you learn is like oh my god whereas did this been all my life you know all right find friend",
    "start": "382830",
    "end": "392220"
  },
  {
    "text": "tada right you can find stuff in an array promy c is a very powerful concept",
    "start": "392220",
    "end": "398940"
  },
  {
    "text": "invented because people don't like to wait right in they don't like blocking the UI so powerful",
    "start": "398940",
    "end": "408210"
  },
  {
    "text": "concept async/await kind of depend on promises kind of little bit more elegant",
    "start": "408210",
    "end": "413610"
  },
  {
    "text": "than promises but depends on promises nevertheless okay talk about a last stop don't worry about it Fitch API how to",
    "start": "413610",
    "end": "419280"
  },
  {
    "text": "pull data from the Internet the real stuff right query the web server pull",
    "start": "419280",
    "end": "425040"
  },
  {
    "text": "information we made a whole video about 50 affair but no harmful right how about we jump into the video",
    "start": "425040",
    "end": "433550"
  },
  {
    "text": "alright guys so before we get started all right I want you to kinda know where",
    "start": "438920",
    "end": "445590"
  },
  {
    "text": "are you gonna execute Java scam and this is the beautiful thing about JavaScript you just want to learn how to write",
    "start": "445590",
    "end": "452520"
  },
  {
    "text": "JavaScript right and you like you don't have you don't have to install these",
    "start": "452520",
    "end": "458790"
  },
  {
    "text": "text editors or compilers or nothing right if you have a browser",
    "start": "458790",
    "end": "464250"
  },
  {
    "text": "I have Chrome or Firefox you can write JavaScript code right now if you like",
    "start": "464250",
    "end": "469440"
  },
  {
    "start": "466000",
    "end": "1537000"
  },
  {
    "text": "you you're visiting someone and you have you have access to their machines you can write JavaScript on their machine ok",
    "start": "469440",
    "end": "476730"
  },
  {
    "text": "so you can always practice JavaScript even if you don't have the tools to to execute JavaScript code because there is",
    "start": "476730",
    "end": "483480"
  },
  {
    "text": "JavaScript interpreter in your browser so let's get to it okay open Chrome and then go to these three dots guys OOP and",
    "start": "483480",
    "end": "491730"
  },
  {
    "text": "then it goes here more tools and then click on developer tools",
    "start": "491730",
    "end": "497160"
  },
  {
    "text": "if you click developer tools you get to choose the console and that console will",
    "start": "497160",
    "end": "504690"
  },
  {
    "text": "allow us to write beautiful beautiful JavaScript code guys it's it's so good",
    "start": "504690",
    "end": "512550"
  },
  {
    "text": "and the first thing we learn about JavaScript is console dot log and what",
    "start": "512550",
    "end": "518490"
  },
  {
    "text": "do we do or they're very programming language hello world I don't know why hello world I think I hope the hello",
    "start": "518490",
    "end": "525180"
  },
  {
    "text": "Ward term was invented because the computer is saying hello it's like coming to life I think that's why that's",
    "start": "525180",
    "end": "534000"
  },
  {
    "text": "what people used like to use this because that's the first time a computer actually became alive right and then",
    "start": "534000",
    "end": "540270"
  },
  {
    "text": "kind of interacted ok this is turning into philosophical debate all right",
    "start": "540270",
    "end": "545840"
  },
  {
    "text": "hello word that's how we print right this is the first line of code in",
    "start": "545840",
    "end": "551880"
  },
  {
    "text": "JavaScript this is a function we call this a function and this is a built-in function to print stuff and you're",
    "start": "551880",
    "end": "557190"
  },
  {
    "text": "getting is this a lot to kind of test your results right and then here's here's the interesting part guys so what",
    "start": "557190",
    "end": "563850"
  },
  {
    "text": "we pass to this function is is what we call a string and a string starts with these double quotes and then when you do",
    "start": "563850",
    "end": "571770"
  },
  {
    "text": "double you can write as many characters as you want inside them and now I will print",
    "start": "571770",
    "end": "577230"
  },
  {
    "text": "them you can obviously if you put up you use the upper arrow you can just repeat",
    "start": "577230",
    "end": "582480"
  },
  {
    "text": "the statement and then we can do like hello ward and then we add a plus that means concatenate this with my name is a",
    "start": "582480",
    "end": "593779"
  },
  {
    "text": "2d to whatever that's the computer came up to laughs right and you can see there",
    "start": "593779",
    "end": "601620"
  },
  {
    "text": "is an annoying there's no space between these two you can just add hey you can just do plus space and you can just do",
    "start": "601620",
    "end": "610800"
  },
  {
    "text": "fancy stuff right that's still a little bit boring right not much fancy stuff",
    "start": "610800",
    "end": "617160"
  },
  {
    "text": "here is just we're working with strings but here's the interesting part that's",
    "start": "617160",
    "end": "622620"
  },
  {
    "text": "not about variables a little bit so if I have you have a bunch of tax data or",
    "start": "622620",
    "end": "631950"
  },
  {
    "text": "numbers right you can you can we can work you can print numbers you can print strings and you can okay with print you",
    "start": "631950",
    "end": "644940"
  },
  {
    "text": "can also print if you want to guys not only strings but numbers right let's say one plus one is equal to plus two and",
    "start": "644940",
    "end": "654360"
  },
  {
    "text": "that means essentially the number two will be added here and here's an interesting part here so if you do one",
    "start": "654360",
    "end": "661110"
  },
  {
    "text": "plus one here what do you guys expect the result will be I would expect that",
    "start": "661110",
    "end": "666750"
  },
  {
    "text": "one will be added to one and then the results will be two right nope computers",
    "start": "666750",
    "end": "674279"
  },
  {
    "text": "are dumb guys right so you have to tell it everything so what to it to the",
    "start": "674279",
    "end": "680010"
  },
  {
    "text": "computer here that the JavaScript compiler or interpreter if you will what",
    "start": "680010",
    "end": "685800"
  },
  {
    "text": "happens here is you pass the string and then you present a number and these are incompatible types and when when the",
    "start": "685800",
    "end": "693750"
  },
  {
    "text": "computer detects an in capital type especially the JavaScript thing c-plus",
    "start": "693750",
    "end": "699120"
  },
  {
    "text": "blah blah will yell at you it says what the heck are you doing you're dumb human",
    "start": "699120",
    "end": "704160"
  },
  {
    "text": "stop doing this javascript will say I know life is hard I know you have",
    "start": "704160",
    "end": "710190"
  },
  {
    "text": "kids and I don't know you're tired and you will have a 95 so I understand so",
    "start": "710190",
    "end": "717120"
  },
  {
    "text": "I'm gonna convert this stuff for you okay don't worry about it so what it will do is it take the string and then",
    "start": "717120",
    "end": "724560"
  },
  {
    "text": "just literally sits a number of string to the computer that riffs got a string",
    "start": "724560",
    "end": "729900"
  },
  {
    "text": "wins and this will be converting to string and guess what after anything after that will be string so this is",
    "start": "729900",
    "end": "735360"
  },
  {
    "text": "equal as if you said this which is literally just a bunch of strings right",
    "start": "735360",
    "end": "741420"
  },
  {
    "text": "it doesn't know that these are numbers right so in order to tell the computer hey dumb computer stop doing that what",
    "start": "741420",
    "end": "748950"
  },
  {
    "text": "do you want to do is add it between parentheses so they can get evaluated",
    "start": "748950",
    "end": "754530"
  },
  {
    "text": "first no math right simple math if you have if you have a function in a math",
    "start": "754530",
    "end": "759630"
  },
  {
    "text": "right and then between parentheses the parentheses take order and they will be",
    "start": "759630",
    "end": "765270"
  },
  {
    "text": "evaluated first and that after that the rest of the expression will be evaluated and that's what happens right you can do",
    "start": "765270",
    "end": "772140"
  },
  {
    "text": "anything here like obviously gonna have that you can get the results I guess",
    "start": "772140",
    "end": "778650"
  },
  {
    "text": "let's jump into variables all right so",
    "start": "778650",
    "end": "785820"
  },
  {
    "text": "if you sue me do double slashes like that this is a slasher backslash this is a slash so if you saw me like doing this",
    "start": "785820",
    "end": "792980"
  },
  {
    "text": "slashes that means these are comments and they won't be executed by the JavaScript engine here's the thing let's",
    "start": "792980",
    "end": "799620"
  },
  {
    "text": "talk about variables variables are pieces and less it's pieces of data that",
    "start": "799620",
    "end": "804990"
  },
  {
    "text": "sits on memory specifically Ram and you can store a tend to them you can stow",
    "start": "804990",
    "end": "811620"
  },
  {
    "text": "strengths you can store a number you can store today to again stir arrays JavaScript objects and and all these",
    "start": "811620",
    "end": "817530"
  },
  {
    "text": "kind of stuff right so what I want to talk about is I wanted to talk about the",
    "start": "817530",
    "end": "822870"
  },
  {
    "text": "difference between Const and let do we have to forget about VAR guys don't",
    "start": "822870",
    "end": "827940"
  },
  {
    "text": "never use VAR I know maybe you're coming from an old JavaScript you read",
    "start": "827940",
    "end": "833730"
  },
  {
    "text": "somewhere to charge these are from the 90s don't use var it's outdated Const and",
    "start": "833730",
    "end": "839640"
  },
  {
    "text": "let we'll give you everything that I've borrowed plus it's you can argue that they are more performant okay okay I",
    "start": "839640",
    "end": "846710"
  },
  {
    "text": "talked about that so always use Const the rule of thumb always you if you need",
    "start": "846710",
    "end": "852860"
  },
  {
    "text": "to clear variables use Const as much as possible there are limitations of course",
    "start": "852860",
    "end": "858230"
  },
  {
    "text": "we're going to talk about so if I can I can declare a variable called age equal 18 right you can do cons to H equal 18",
    "start": "858230",
    "end": "869600"
  },
  {
    "text": "and you can print that my age is then",
    "start": "869600",
    "end": "874970"
  },
  {
    "text": "you can plus h that sounds good why do I need let right it is the the",
    "start": "874970",
    "end": "881420"
  },
  {
    "text": "downside of of Const you cannot assign it anything else Jesus who grew up from",
    "start": "881420",
    "end": "889310"
  },
  {
    "text": "18 to 71 all right okay so this guy became 71 but you cannot says you cannot",
    "start": "889310",
    "end": "895640"
  },
  {
    "text": "do that now you can think of what the heck is there all these programmers doing why are we inventing something",
    "start": "895640",
    "end": "901880"
  },
  {
    "text": "that I can what's the use oh of course I am always gonna reassign my variable",
    "start": "901880",
    "end": "907160"
  },
  {
    "text": "guess what I said the same exact thing three years ago it's like who's gonna use this cause it's stupid",
    "start": "907160",
    "end": "914330"
  },
  {
    "text": "I was gonna use cause nobody's gonna use Const right it's just but believe it are",
    "start": "914330",
    "end": "920990"
  },
  {
    "text": "you from coding every time I use cost 99% of the time I don't react I'm my",
    "start": "920990",
    "end": "927680"
  },
  {
    "text": "variables the only time where I'll use let where you can help ease yes reassign your variable right tricky to",
    "start": "927680",
    "end": "934280"
  },
  {
    "text": "age say Amanda is 19 get in trouble",
    "start": "934280",
    "end": "940940"
  },
  {
    "text": "right so the only time you can use it is",
    "start": "940940",
    "end": "946310"
  },
  {
    "text": "like if you want just do this like call 20 the game's fine right you can do that and the only time you use late is in",
    "start": "946310",
    "end": "953720"
  },
  {
    "text": "loops right because you you said other variable and then you increment it incremented incremented right that's the",
    "start": "953720",
    "end": "958880"
  },
  {
    "text": "only time I use let sometimes I use it for modular global variables right",
    "start": "958880",
    "end": "964270"
  },
  {
    "text": "sometimes but most of my time it's Const believe me guys just use cons but if you",
    "start": "964270",
    "end": "970520"
  },
  {
    "text": "found out that oh I mean I need to reassign this right then use let okay so that's the",
    "start": "970520",
    "end": "976870"
  },
  {
    "text": "rule of thumb yeah so you can do that let's let's talk about this in line",
    "start": "976870",
    "end": "982460"
  },
  {
    "text": "print as well guys why is why we're in variable so we talked about this so we",
    "start": "982460",
    "end": "987920"
  },
  {
    "text": "know that Amanda is what now what is Amanda Amanda Amanda is Tony right so if",
    "start": "987920",
    "end": "994730"
  },
  {
    "text": "you want to print Amanda's age you can do this like Amanda is age years old all right you can do",
    "start": "994730",
    "end": "1009580"
  },
  {
    "text": "that well that's boring guys that's boring that's old stuff we we're all",
    "start": "1009580",
    "end": "1015279"
  },
  {
    "text": "about new and shiny babes let's do that so how do we do that you do counsel",
    "start": "1015279",
    "end": "1021730"
  },
  {
    "text": "don't log and then so instead of using this double coats we want you with a new",
    "start": "1021730",
    "end": "1028390"
  },
  {
    "text": "kind of special quarter and scold the tick mark and you can find it in your",
    "start": "1028390",
    "end": "1034990"
  },
  {
    "text": "Mac I have no idea where it is in Windows but enemy your Mac you can find it under this kay button it's like where",
    "start": "1034990",
    "end": "1042250"
  },
  {
    "text": "where tilde is just just literally just hit it and then you get this tick more",
    "start": "1042250",
    "end": "1047709"
  },
  {
    "text": "and then close it okay and this is a special thing because JavaScript will the new versions of JavaScript will look",
    "start": "1047709",
    "end": "1054429"
  },
  {
    "text": "at this as a oh this is a special string right so I'm just any string this is you're printing something but",
    "start": "1054429",
    "end": "1061380"
  },
  {
    "text": "imagine like printing something that is complicated guys you're gonna get into a",
    "start": "1061380",
    "end": "1067210"
  },
  {
    "text": "lot of you add this adding plus and plus plus plus gets really complete and hard to read so the appointment of this",
    "start": "1067210",
    "end": "1074230"
  },
  {
    "text": "Amanda is now here's what you do you do a dollar sign curly braces and you put",
    "start": "1074230",
    "end": "1079630"
  },
  {
    "text": "your variable name in line in line baby your result isn't that how easier to",
    "start": "1079630",
    "end": "1087250"
  },
  {
    "text": "read you might not do that that's actually harder to read who's saying I'm not gonna use this and that's okay it's",
    "start": "1087250",
    "end": "1092890"
  },
  {
    "text": "up to you guys but I find this way easier okay and then obviously if you or",
    "start": "1092890",
    "end": "1100510"
  },
  {
    "text": "place this was just this computers are dumb so it's generally literally print",
    "start": "1100510",
    "end": "1107230"
  },
  {
    "text": "that for because it's a literal strength right you have to use that coats or ticks I",
    "start": "1107230",
    "end": "1113050"
  },
  {
    "text": "think they call it all right and Adam is",
    "start": "1113050",
    "end": "1118410"
  },
  {
    "text": "age years old just just fancy stuff all",
    "start": "1118410",
    "end": "1128710"
  },
  {
    "text": "right guys so we learned about variables kinda right we known about constant let use always Const always right it's gonna",
    "start": "1128710",
    "end": "1137530"
  },
  {
    "text": "become especially with this ad hoc coding that we're doing cos is gonna be",
    "start": "1137530",
    "end": "1143830"
  },
  {
    "text": "pain which is kinda funny cuz I'm still like you use gauze but none Collins does",
    "start": "1143830",
    "end": "1150070"
  },
  {
    "text": "a pain but when you're actually coding because I didn't actually say why Const is better than lead and the reason is",
    "start": "1150070",
    "end": "1156670"
  },
  {
    "text": "when you set a variable to a value let's say Const is don't name let's go and",
    "start": "1156670",
    "end": "1165190"
  },
  {
    "text": "name last name all right Amanda name has",
    "start": "1165190",
    "end": "1182309"
  },
  {
    "text": "all right influencers time all right so Amanda right console dot",
    "start": "1183660",
    "end": "1189220"
  },
  {
    "text": "log amanda name all right you can do that right and then once you set it to a",
    "start": "1189220",
    "end": "1196060"
  },
  {
    "text": "value right this variable is now guess what stick to",
    "start": "1196060",
    "end": "1206050"
  },
  {
    "text": "that data type now it knows that amanda is a string and Amanda age or a general",
    "start": "1206050",
    "end": "1215080"
  },
  {
    "text": "Doyle to call it age amanda is it number and this is powerful stuff for the",
    "start": "1215080",
    "end": "1221470"
  },
  {
    "text": "compiler or the JavaScript interpreter it does know knowing that fact that it",
    "start": "1221470",
    "end": "1226780"
  },
  {
    "text": "will not change because guess what you cannot reassign it you get one shot right it can optimize the interpreter and can",
    "start": "1226780",
    "end": "1235030"
  },
  {
    "text": "optimize your code because it will know whatever C's age Amanda oh I know it's a number so I know what to do",
    "start": "1235030",
    "end": "1241610"
  },
  {
    "text": "it's not it doesn't need to go and try to evaluate and read the code all over again",
    "start": "1241610",
    "end": "1247010"
  },
  {
    "text": "so it is this little bit way faster than just let and var is the worse I'm not",
    "start": "1247010",
    "end": "1253580"
  },
  {
    "text": "even gonna talk about it VAR when you declare something you said it it is visible across all your functions across",
    "start": "1253580",
    "end": "1260210"
  },
  {
    "text": "all the global internal blocks which is kinda the worst thing you can do it",
    "start": "1260210",
    "end": "1265490"
  },
  {
    "text": "doesn't have scoping which kind of give you incorrect results it can give you confusing results obviously it is let is",
    "start": "1265490",
    "end": "1275300"
  },
  {
    "text": "even better than bar yes you can reassign it wallet but with let right",
    "start": "1275300",
    "end": "1282440"
  },
  {
    "text": "you can you can scope it so and we gonna talk about that data table let's talk about data table what kind of data types",
    "start": "1282440",
    "end": "1288860"
  },
  {
    "text": "we have we have we have a lot of data types right we have numbers like what we",
    "start": "1288860",
    "end": "1294230"
  },
  {
    "text": "do we have 20 37 these are numbers right you can do as use let fear so it's just",
    "start": "1294230",
    "end": "1301490"
  },
  {
    "text": "an equal you can do a number right now M",
    "start": "1301490",
    "end": "1307190"
  },
  {
    "text": "is a number you can set as you can do M equal by though if you do and let M",
    "start": "1307190",
    "end": "1316010"
  },
  {
    "text": "again you can get an error because you cannot define it twice obviously right",
    "start": "1316010",
    "end": "1321290"
  },
  {
    "text": "so M is now what now M is a string you can assign m to a boolean a boolean type",
    "start": "1321290",
    "end": "1326960"
  },
  {
    "text": "is true or false true lowercase very",
    "start": "1326960",
    "end": "1332690"
  },
  {
    "text": "powerful stuff you can use this a lot true or false and sometimes you don't",
    "start": "1332690",
    "end": "1338900"
  },
  {
    "text": "notice it but this is different than a number it's it's actually a double right",
    "start": "1338900",
    "end": "1344960"
  },
  {
    "text": "slightly different so floating number and I want to introduce also the concept",
    "start": "1344960",
    "end": "1350270"
  },
  {
    "text": "of undefined undefined is is is a literal of ul and the keyword in",
    "start": "1350270",
    "end": "1357020"
  },
  {
    "text": "JavaScript that if you don't assign anything like this let K write k will be",
    "start": "1357020",
    "end": "1363410"
  },
  {
    "text": "by default undefined right and that is a legit value you can compare against it",
    "start": "1363410",
    "end": "1368660"
  },
  {
    "text": "you can do stuff against it again and different has a meaning okay you can set",
    "start": "1368660",
    "end": "1373760"
  },
  {
    "text": "a value to now which is a completely different than",
    "start": "1373760",
    "end": "1378820"
  },
  {
    "text": "undefined okay that's it's good to identify those two",
    "start": "1378820",
    "end": "1383990"
  },
  {
    "text": "pieces it's it's different thing and whether it guys Const you cannot just",
    "start": "1383990",
    "end": "1389629"
  },
  {
    "text": "say Const oh and not assign it and that's one of the reasons constants good",
    "start": "1389629",
    "end": "1394940"
  },
  {
    "text": "because what if there's a cause it has to has a value and it has to have essentially a will define datatype right",
    "start": "1394940",
    "end": "1404000"
  },
  {
    "text": "once we know that it's a boolean then we're stuck with it right we cannot assign it anything else right we just",
    "start": "1404000",
    "end": "1412190"
  },
  {
    "text": "give it an error get an error back all right so those are variables we talked about variables and let's talk about how",
    "start": "1412190",
    "end": "1418909"
  },
  {
    "text": "do you ask the user for input from JavaScript phew all right guys obviously you know you gotta write an application",
    "start": "1418909",
    "end": "1424820"
  },
  {
    "text": "here this is using as a your playground to get familiar with JavaScript and once you do we're gonna move to a an actual I",
    "start": "1424820",
    "end": "1432730"
  },
  {
    "text": "would say environment for JavaScript and there are many environments for JavaScript we can we can do a",
    "start": "1432730",
    "end": "1438950"
  },
  {
    "text": "browser-based node J s is another environment but whatever you're gonna",
    "start": "1438950",
    "end": "1444139"
  },
  {
    "text": "learn here you're gonna apply what everywhere you write JavaScript code and that's the powerful stuff okay this is",
    "start": "1444139",
    "end": "1450649"
  },
  {
    "text": "just for you to get wet your feet wait alright so I can ask I can do this name",
    "start": "1450649",
    "end": "1457039"
  },
  {
    "text": "equal as you say my name is equal prompt that's another thing we didn't say inter",
    "start": "1457039",
    "end": "1464629"
  },
  {
    "text": "your name and if you do that prompt is a function and I would say it's not in",
    "start": "1464629",
    "end": "1469990"
  },
  {
    "text": "Chaves good it's a browser-based function if I do that then I'll get",
    "start": "1469990",
    "end": "1476509"
  },
  {
    "text": "prompted it's an embedded page rather sales right this is just the page that",
    "start": "1476509",
    "end": "1482809"
  },
  {
    "text": "name okay I'm gonna name my name was sane and he's worried what happened here that will return Hussein will again send",
    "start": "1482809",
    "end": "1490850"
  },
  {
    "text": "it to my name and a-five print console dot log my name right you can do",
    "start": "1490850",
    "end": "1497210"
  },
  {
    "text": "obviously console in my name as let's use the text",
    "start": "1497210",
    "end": "1503440"
  },
  {
    "text": "[Music] artful stuff guys huh",
    "start": "1504740",
    "end": "1512410"
  },
  {
    "text": "let's talk about conditions guys conditions alright so conditions are again",
    "start": "1517380",
    "end": "1522630"
  },
  {
    "text": "very powerful stuff and they this is essentially the F statement and the",
    "start": "1522630",
    "end": "1529200"
  },
  {
    "text": "ternary operator and what you can do is mister if you have multiple line of code",
    "start": "1529200",
    "end": "1535049"
  },
  {
    "text": "you can execute certain code if a certain condition is true or false",
    "start": "1535049",
    "end": "1541620"
  },
  {
    "start": "1537000",
    "end": "1969000"
  },
  {
    "text": "that's very powerful you can use this all the time including so how do we do",
    "start": "1541620",
    "end": "1547110"
  },
  {
    "text": "this right so do we still have age here yes age is 18 so we can do this if age is",
    "start": "1547110",
    "end": "1555900"
  },
  {
    "text": "greater than 18 right you can say greater than or equal that's how you do",
    "start": "1555900",
    "end": "1562440"
  },
  {
    "text": "greater than or equal in JavaScript then you can do curly braces hit enter enter",
    "start": "1562440",
    "end": "1569070"
  },
  {
    "text": "enter enter close that curly braces inside that will be the code that will get executed if that condition is true",
    "start": "1569070",
    "end": "1578970"
  },
  {
    "text": "and you can ask yourself it is age greater than or equal 18 yeah",
    "start": "1578970",
    "end": "1584010"
  },
  {
    "text": "John so the log part a time I can drink",
    "start": "1584010",
    "end": "1591169"
  },
  {
    "text": "sweet right wait you can't drink and you",
    "start": "1591620",
    "end": "1598380"
  },
  {
    "text": "21 isn't that 21 wait is like it this is not Amsterdam all right okay all the",
    "start": "1598380",
    "end": "1605549"
  },
  {
    "text": "time I can drink you can okay so let's fix this party time but I cannot drank",
    "start": "1605549",
    "end": "1614100"
  },
  {
    "text": "big wait a second wait is it greater than 18 what the heck is wrong with me okay it's it's still seven o'clock in",
    "start": "1614100",
    "end": "1619710"
  },
  {
    "text": "the morning guys give me a break okay I can drink you can drink it's greater than 18 that's okay",
    "start": "1619710",
    "end": "1625620"
  },
  {
    "text": "that's okay alright so if you do this party time I can drink obviously is gonna get executed but",
    "start": "1625620",
    "end": "1632870"
  },
  {
    "text": "let's clear this up and say if age is less than 18 let's say",
    "start": "1632870",
    "end": "1642470"
  },
  {
    "text": "tea time you can't party I guess but no drinks for you sir if I do that it's not",
    "start": "1644040",
    "end": "1652860"
  },
  {
    "text": "gonna get executed we're gonna get end if I'm back because the code never got into this state to execute that line",
    "start": "1652860",
    "end": "1660420"
  },
  {
    "text": "okay how about if can I do both right yeah sure you can do this if age is less",
    "start": "1660420",
    "end": "1667050"
  },
  {
    "text": "than 18 do this else else is just like almost like a very English thing right",
    "start": "1667050",
    "end": "1674250"
  },
  {
    "text": "he can if this then else right in this case this will be excuted else anything",
    "start": "1674250",
    "end": "1680370"
  },
  {
    "text": "else just go ahead and print Yas Queen I",
    "start": "1680370",
    "end": "1685590"
  },
  {
    "text": "can drink all right cynical and by the",
    "start": "1685590",
    "end": "1693420"
  },
  {
    "text": "way are optional JavaScript but I like to put them just for convenience because I'm from kind of C C sharp e experience",
    "start": "1693420",
    "end": "1701730"
  },
  {
    "text": "does that make sense guys very simple stuff let's talk about what kind of operations do you have what kind of",
    "start": "1701730",
    "end": "1707310"
  },
  {
    "text": "condition what I call it comparison operators so you the comparison operator",
    "start": "1707310",
    "end": "1714360"
  },
  {
    "text": "here is essentially you can't most of the time you're gonna use them in in in and F statements rightly say if age is",
    "start": "1714360",
    "end": "1721140"
  },
  {
    "text": "equal equal equal 1e then all right and",
    "start": "1721140",
    "end": "1728610"
  },
  {
    "text": "then you might if you if you have a little bit of JavaScript or C++ we can what the heck is equal equal like we're",
    "start": "1728610",
    "end": "1733890"
  },
  {
    "text": "gonna talk about that guys if you dare gonna talk about the difference now if you do if a GG whoever and then console",
    "start": "1733890",
    "end": "1741000"
  },
  {
    "text": "the log my age is 20 something like that just anything I've friends right",
    "start": "1741000",
    "end": "1746520"
  },
  {
    "text": "obviously is gonna be 4 because what age is 18 okay if I do it's not gonna be",
    "start": "1746520",
    "end": "1752580"
  },
  {
    "text": "executed right but if I change this to 18 I'm gonna get printed right and here's the thing let's compare this how",
    "start": "1752580",
    "end": "1760860"
  },
  {
    "text": "powerful I want you always to use equal equal equal as much as possible and I'm gonna tell you the difference now the",
    "start": "1760860",
    "end": "1768000"
  },
  {
    "text": "difference between equal equality you you can get away with this is this exactly this is exactly true that's okay",
    "start": "1768000",
    "end": "1777870"
  },
  {
    "text": "right but the only difference between equal equal equal and double equal is if",
    "start": "1777870",
    "end": "1784320"
  },
  {
    "text": "you do equal equal 18 as a string remember what is age age is a number",
    "start": "1784320",
    "end": "1791159"
  },
  {
    "text": "what is this this is 18 but it's string",
    "start": "1791159",
    "end": "1796289"
  },
  {
    "text": "again let's come back to the computer empathizing with Rasmus way okay I know you guys have kids and and you're you",
    "start": "1796289",
    "end": "1804690"
  },
  {
    "text": "have a 95 and your ATAR and you have debts and you have credit card there so I understand you made a mistake you I",
    "start": "1804690",
    "end": "1811409"
  },
  {
    "text": "know you kind of know this this is the same so it will actually convert this data type to that age data type so it",
    "start": "1811409",
    "end": "1819630"
  },
  {
    "text": "will essentially just do oh this is 18 18 so let's go ahead and print and we'll say oh this is actually true despite it",
    "start": "1819630",
    "end": "1827309"
  },
  {
    "text": "not being the same data type does that make sense this is age is a number see",
    "start": "1827309",
    "end": "1832470"
  },
  {
    "text": "it's it's kind of thin and blue which is kind of actually notice trying right now it's not double coded 18 is a string so",
    "start": "1832470",
    "end": "1841100"
  },
  {
    "text": "technically they are not the same type and you want to know your cases in this",
    "start": "1841100",
    "end": "1847620"
  },
  {
    "text": "case sometimes if you're lazy says I don't care let the computer do it for me right but if you really want to fail",
    "start": "1847620",
    "end": "1856159"
  },
  {
    "text": "right if you do this then it will fail",
    "start": "1856159",
    "end": "1863010"
  },
  {
    "text": "it will not execute it this is not true see we didn't get anything printed because although the age is 18 but that",
    "start": "1863010",
    "end": "1871289"
  },
  {
    "text": "condition got developed it to false because I'm sorry yes this is a team but",
    "start": "1871289",
    "end": "1876510"
  },
  {
    "text": "I know you were smart right you you're smart person you told me to do triple a",
    "start": "1876510",
    "end": "1881580"
  },
  {
    "text": "call that means I also will check not only the value by the datatype as well this is a string this is a number it's",
    "start": "1881580",
    "end": "1888600"
  },
  {
    "text": "not equal so it's not gonna get executed so always use triple equal because you",
    "start": "1888600",
    "end": "1894870"
  },
  {
    "text": "don't want this like implicit conversion thing it's just a bad thing don't don't",
    "start": "1894870",
    "end": "1901080"
  },
  {
    "text": "do it right again up to you if you can live with that because because that guy can get into a",
    "start": "1901080",
    "end": "1906450"
  },
  {
    "text": "nasty but alright so you have the option",
    "start": "1906450",
    "end": "1911670"
  },
  {
    "text": "this is equal equal equal this is not equal right that means it's just if it's",
    "start": "1911670",
    "end": "1917490"
  },
  {
    "text": "not equal at all right you can do that and then here's the powerful thing you",
    "start": "1917490",
    "end": "1923400"
  },
  {
    "text": "can do it not equal and let's do this",
    "start": "1923400",
    "end": "1928850"
  },
  {
    "text": "right it's not equal that is true these are not equal so we can print it you can",
    "start": "1929000",
    "end": "1936090"
  },
  {
    "text": "do what else we have greater than we'll talk about equal equal equal equal not equal greater than obviously less than",
    "start": "1936090",
    "end": "1943410"
  },
  {
    "text": "all that stuff right guys all right so we talked about all these stuff guys Cola stuff very cool",
    "start": "1943410",
    "end": "1951980"
  },
  {
    "text": "let's talk about our arrays guys Ray's",
    "start": "1957200",
    "end": "1962840"
  },
  {
    "text": "Ray's babes as to erase all right so what is another way an array is a",
    "start": "1962840",
    "end": "1970180"
  },
  {
    "start": "1969000",
    "end": "2356000"
  },
  {
    "text": "consecutive that list of stuff that are",
    "start": "1970180",
    "end": "1975290"
  },
  {
    "text": "grouped into one kinda I don't say object it is an object it's a one object",
    "start": "1975290",
    "end": "1980750"
  },
  {
    "text": "one variable that you can play with and when I say this way it doesn't make any",
    "start": "1980750",
    "end": "1986360"
  },
  {
    "text": "sense and it says like I'm saying why do you group set up together and so and there is a good reason why you want",
    "start": "1986360",
    "end": "1994100"
  },
  {
    "text": "stuff to be grouped into a consecutive thing that has like a start and an end",
    "start": "1994100",
    "end": "1999170"
  },
  {
    "text": "so let's do an array of names all right give me names we're gonna use all kind",
    "start": "1999170",
    "end": "2005380"
  },
  {
    "text": "of names ethnic names white names all kind of names alright so we can do Alan we can do sane right we can do okay give",
    "start": "2005380",
    "end": "2021040"
  },
  {
    "text": "me another name Lele okay this is even worse all right give",
    "start": "2021040",
    "end": "2026560"
  },
  {
    "text": "me another name Kim okay you got to give me a male name all right I'll add in",
    "start": "2026560",
    "end": "2031600"
  },
  {
    "text": "right Aladin dice build it right it Aladdin okay Aladdin is another name other names guys",
    "start": "2031600",
    "end": "2040420"
  },
  {
    "text": "the REC or Paul nice okay we have a kind of culture diverse set of names here",
    "start": "2040420",
    "end": "2048398"
  },
  {
    "text": "right nice okay so if you have different",
    "start": "2048399",
    "end": "2053470"
  },
  {
    "text": "names you have seven names here and this is powerful stuff guys see so we have",
    "start": "2053470",
    "end": "2059919"
  },
  {
    "text": "zero as Alan one is for saying two is Lele three camp for Aladdin or Allah",
    "start": "2059919",
    "end": "2066460"
  },
  {
    "text": "Deen in Arabic that's how we price it correctly five Frick and six is ball",
    "start": "2066460",
    "end": "2073030"
  },
  {
    "text": "babes all right let's do this so we have all these names of this arrays powerful stuff but what's the use",
    "start": "2073030",
    "end": "2079658"
  },
  {
    "text": "of this so I have all of these on one object so we can do this you can get to",
    "start": "2079659",
    "end": "2087520"
  },
  {
    "text": "any name but if you know the index of those and you you might have noticed this index zero",
    "start": "2087520",
    "end": "2092690"
  },
  {
    "text": "three four right and you can get to those while it is OS erase up for it's",
    "start": "2092690",
    "end": "2099499"
  },
  {
    "text": "Aladdin because zero one two three four Aladdin's for okay who is four plus one",
    "start": "2099499",
    "end": "2107660"
  },
  {
    "text": "which is five I just want to be fancy here just showing you different thing you can do with a programming language",
    "start": "2107660",
    "end": "2113539"
  },
  {
    "text": "right what is names of was the last one four five six six is Paul about seven",
    "start": "2113539",
    "end": "2123799"
  },
  {
    "text": "you can undefined you can do it as go to a hundred and you're gonna get undefined you know why because nothing is after",
    "start": "2123799",
    "end": "2131569"
  },
  {
    "text": "that guys right and we know that the default value of uninitialized variables is the DA undefined okay coolest stuff",
    "start": "2131569",
    "end": "2138650"
  },
  {
    "text": "alright so can I add more names to this right this is how you initialize you can initialize an empty array by doing that",
    "start": "2138650",
    "end": "2146380"
  },
  {
    "text": "we could unfortunately we did it as a con so we cannot do this but you can start the narrow it with this right you",
    "start": "2146380",
    "end": "2153410"
  },
  {
    "text": "can add to the other end that's fine right despite it being cons which is kinda you would say if you're coming",
    "start": "2153410",
    "end": "2160700"
  },
  {
    "text": "from a other programmer is just like what the heck did you just do are you adding can you add a stuff to a constant",
    "start": "2160700",
    "end": "2167900"
  },
  {
    "text": "that's what's confusing about constants you can add to it because what constants",
    "start": "2167900",
    "end": "2175249"
  },
  {
    "text": "means actually the data type is constant as long as you're not changing the data type you're coolish right but the moment",
    "start": "2175249",
    "end": "2183559"
  },
  {
    "text": "you start changing it as a Vanagon a the java scala yell at you all right as long as you pushing you push it another name",
    "start": "2183559",
    "end": "2190690"
  },
  {
    "text": "that's all the stuff we can that's good",
    "start": "2190690",
    "end": "2196910"
  },
  {
    "text": "cool stuff all right so that's essentially you can remove pop will",
    "start": "2196910",
    "end": "2201950"
  },
  {
    "text": "remove the last element if you pop it again pop it again papa papa day right",
    "start": "2201950",
    "end": "2207680"
  },
  {
    "text": "we popped all of them now only Kim I'm gonna remove Lily you can do this let's",
    "start": "2207680",
    "end": "2213380"
  },
  {
    "text": "remove Lily alright let's just do this undefined that's how you remove ur right now it's",
    "start": "2213380",
    "end": "2220940"
  },
  {
    "text": "not undefined okay so that's how essentially you stuff okay we're gonna talk about other",
    "start": "2220940",
    "end": "2227269"
  },
  {
    "text": "properties of arrays as well but this is how we do a race and race is known only strengths you can do arrays of numbers",
    "start": "2227269",
    "end": "2236019"
  },
  {
    "text": "you can do a raise of objects and array believe it or not functions you can do",
    "start": "2236019",
    "end": "2241519"
  },
  {
    "text": "array of anything that's powerful concept we're going to talk about examples yes these are example are contrived I understand guys but we have",
    "start": "2241519",
    "end": "2249109"
  },
  {
    "text": "to explain something right I cannot give you a real-life example our context it doesn't make any sense I try to believe",
    "start": "2249109",
    "end": "2255109"
  },
  {
    "text": "me I try and I don't think powerful stuff in there a it's called link a property called link which tell you how",
    "start": "2255109",
    "end": "2260809"
  },
  {
    "text": "many elements are in this array currently right and you can do powerful stuff with it and here's here's the",
    "start": "2260809",
    "end": "2269720"
  },
  {
    "text": "interesting thing about this right if you do const do we still have the name",
    "start": "2269720",
    "end": "2275839"
  },
  {
    "text": "no we don't have that name right so if I do a name equal calls me make well",
    "start": "2275839",
    "end": "2281420"
  },
  {
    "text": "Hossein Nasr my name right name is Hossein Nasr and guess what name is kind",
    "start": "2281420",
    "end": "2288859"
  },
  {
    "text": "of an array so you can actually do this you can actually do this",
    "start": "2288859",
    "end": "2295210"
  },
  {
    "text": "give me the eight it's character this is nothing about alright it's not really an",
    "start": "2295210",
    "end": "2302059"
  },
  {
    "text": "array it's kind of an array so if you wanted to convert it into an array you",
    "start": "2302059",
    "end": "2307249"
  },
  {
    "text": "can do this name array equal all right out from and then you do name this will",
    "start": "2307249",
    "end": "2315019"
  },
  {
    "text": "actually convert it for you into literally an array of characters if you",
    "start": "2315019",
    "end": "2320239"
  },
  {
    "text": "want to some people who might find this useful you can do this you can convert this internal array where you can",
    "start": "2320239",
    "end": "2327259"
  },
  {
    "text": "actually do array dot length not that not to say you cannot do this you can",
    "start": "2327259",
    "end": "2333710"
  },
  {
    "text": "also do this right but there are cases that you cannot do for for example function calls for each on the array on",
    "start": "2333710",
    "end": "2339920"
  },
  {
    "text": "the name but you can do it on an array that make sense guys very quick stuff right",
    "start": "2339920",
    "end": "2346960"
  },
  {
    "text": "right let's jump into objects vapes",
    "start": "2351460",
    "end": "2357520"
  },
  {
    "start": "2356000",
    "end": "2670000"
  },
  {
    "text": "Jason objects so an object is very interesting concept in JavaScript okay",
    "start": "2357520",
    "end": "2363170"
  },
  {
    "text": "and if I do object let's say it's called an object called user right and here's",
    "start": "2363170",
    "end": "2371210"
  },
  {
    "text": "how you declare an object in JavaScript same thing you do equal the constant",
    "start": "2371210",
    "end": "2377870"
  },
  {
    "text": "wouldn't you set it to an object it will become an object and house this is how you do an object curly braces would",
    "start": "2377870",
    "end": "2383540"
  },
  {
    "text": "close the curly braces that's how an object looks like that's adjacent that's a legit jason object which is sign for",
    "start": "2383540",
    "end": "2389060"
  },
  {
    "text": "javascript object notation and if you do this that's an object and here's the thing you can assign properties to that",
    "start": "2389060",
    "end": "2396410"
  },
  {
    "text": "okay you can do name equal the same okay and you can do H equal how old am i okay",
    "start": "2396410",
    "end": "2406940"
  },
  {
    "text": "you can do that and if I print user now that the object is nothing but a",
    "start": "2406940",
    "end": "2414410"
  },
  {
    "text": "collection of key values so for those of you coming from Java or C++ or C sharp",
    "start": "2414410",
    "end": "2421520"
  },
  {
    "text": "this is a dictionary very similar to action where the key is always a string",
    "start": "2421520",
    "end": "2426890"
  },
  {
    "text": "always always a string okay and the value can be anything you want okay in",
    "start": "2426890",
    "end": "2432080"
  },
  {
    "text": "this case this is a string this case is a number could be a date could be a function pretty much anything",
    "start": "2432080",
    "end": "2438650"
  },
  {
    "text": "okay and that's the powerful stuff do you see what I did I just added a value by just assigning stuff to it",
    "start": "2438650",
    "end": "2444890"
  },
  {
    "text": "that's powerful okay do I have to do this can can I set it while I'm initializing sure right that I can do",
    "start": "2444890",
    "end": "2452570"
  },
  {
    "text": "user 1 and I can do similar thing here I",
    "start": "2452570",
    "end": "2458650"
  },
  {
    "text": "can do this name equal Edmund you can do",
    "start": "2458650",
    "end": "2466490"
  },
  {
    "text": "that user 1 now it has this and then you can do Const you can do user 1 dot age",
    "start": "2466490",
    "end": "2474650"
  },
  {
    "text": "equal 80 uncle Edmund is 80 now today",
    "start": "2474650",
    "end": "2480460"
  },
  {
    "text": "user 1 they're coming away okay user 1",
    "start": "2480460",
    "end": "2485710"
  },
  {
    "text": "now we have this right you can you can be fancy you can have a Const user 2",
    "start": "2485710",
    "end": "2491650"
  },
  {
    "text": "equal you can do name equal ha Matt",
    "start": "2491650",
    "end": "2502019"
  },
  {
    "text": "right I'm literally thinking of the people our work words that's where I remember name okay we can do age I don't",
    "start": "2502019",
    "end": "2510400"
  },
  {
    "text": "know how he's gonna get mad I don't think it's gonna watch this",
    "start": "2510400",
    "end": "2516039"
  },
  {
    "text": "video anyway so age is 50 and then what else what else guys here's what I want",
    "start": "2516039",
    "end": "2524589"
  },
  {
    "text": "to do I want it if a fuse or what what else here users have hobbies right",
    "start": "2524589",
    "end": "2529920"
  },
  {
    "text": "hobbies is not a single value it's actually an array which is very interesting we actually talk about that",
    "start": "2529920",
    "end": "2536140"
  },
  {
    "text": "right we have an array and then array could be like hunting on it go just like",
    "start": "2536140",
    "end": "2542170"
  },
  {
    "text": "I don't know dancing on I go like dance and hunt you can play video games all",
    "start": "2542170",
    "end": "2551739"
  },
  {
    "text": "that powerful stuff you can do user to I guess what you can't have a value an",
    "start": "2551739",
    "end": "2559390"
  },
  {
    "text": "array of hobbies which is an array you can have another object if you will",
    "start": "2559390",
    "end": "2564519"
  },
  {
    "text": "right that's totally not normal you can you can think of an object that it can encompass everything an object could be",
    "start": "2564519",
    "end": "2571420"
  },
  {
    "text": "has an arrays nobody has another object an array cannot have an object obviously",
    "start": "2571420",
    "end": "2576519"
  },
  {
    "text": "but you can do an array of objects which is what we're gonna do next right let's do cost users equal in theory and then",
    "start": "2576519",
    "end": "2584259"
  },
  {
    "text": "user users top push we're gonna push one user then users to push user one then",
    "start": "2584259",
    "end": "2592390"
  },
  {
    "text": "users push user too powerful stuff prints users Wow powerful stuff guys",
    "start": "2592390",
    "end": "2603749"
  },
  {
    "text": "powerful stuff alright then I think this is good this is good right",
    "start": "2603749",
    "end": "2609809"
  },
  {
    "text": "so dr. bardey I raise we don't like a lot of objects so we know the basics of",
    "start": "2609809",
    "end": "2614910"
  },
  {
    "text": "the basics of the basic you can print by the way console dot log username as and",
    "start": "2614910",
    "end": "2622349"
  },
  {
    "text": "you can do obviously guys user dot name",
    "start": "2622349",
    "end": "2629299"
  },
  {
    "text": "right you can do this the first user dot",
    "start": "2629299",
    "end": "2634859"
  },
  {
    "text": "name the second user dot name the third years I think this is Matt right yep you",
    "start": "2634859",
    "end": "2642989"
  },
  {
    "text": "can you can do all sorts of things guys so as an exercise I'm gonna I'm not gonna do it but you can do it it try to",
    "start": "2642989",
    "end": "2649079"
  },
  {
    "text": "print like all the properties in one and using this stick for example try to do",
    "start": "2649079",
    "end": "2654660"
  },
  {
    "text": "that and just write your answers on the comment section if you if you don't know we okay Noel's correct and have a",
    "start": "2654660",
    "end": "2662039"
  },
  {
    "text": "discussion on the comments section let's talk about functions very powerful",
    "start": "2662039",
    "end": "2669480"
  },
  {
    "text": "concept",
    "start": "2669480",
    "end": "2671869"
  },
  {
    "start": "2670000",
    "end": "3310000"
  },
  {
    "text": "all right guys let's continue we next up we have functions functions are powerful",
    "start": "2677070",
    "end": "2685370"
  },
  {
    "text": "feature in any programming language you're gonna use this all the time and",
    "start": "2685370",
    "end": "2691880"
  },
  {
    "text": "essentially what function is is a we have written a lot of code but he's kind",
    "start": "2691880",
    "end": "2697020"
  },
  {
    "text": "of was kind of an ad hoc and it was guy floating in the air functions our",
    "start": "2697020",
    "end": "2702480"
  },
  {
    "text": "grouping of a bunch of code into one unit of work right think of a function",
    "start": "2702480",
    "end": "2709620"
  },
  {
    "text": "usually it does one and one one thing only and it does it really well that's",
    "start": "2709620",
    "end": "2714870"
  },
  {
    "text": "the if you will the best practice for a function obviously if you see a function",
    "start": "2714870",
    "end": "2720600"
  },
  {
    "text": "that has like f2000 line of code and probably it's a bad function you don't",
    "start": "2720600",
    "end": "2726090"
  },
  {
    "text": "want to function to have a long a lot of line of codes you wanted to have as minimum as possible and it has one unit",
    "start": "2726090",
    "end": "2732690"
  },
  {
    "text": "of work that being said this is not a",
    "start": "2732690",
    "end": "2737700"
  },
  {
    "text": "strict rule if you do a function that is long try to break it down by essentially",
    "start": "2737700",
    "end": "2743460"
  },
  {
    "text": "that's what it is a function is collection of code and you can just use it to essentially perform some task",
    "start": "2743460",
    "end": "2751110"
  },
  {
    "text": "without repeating the code over a rope okay let's write a function that using",
    "start": "2751110",
    "end": "2758850"
  },
  {
    "text": "the tools that we learned so far I'll start with that okay I want to write a function you know if the number is",
    "start": "2758850",
    "end": "2765090"
  },
  {
    "text": "greater than a hundred or less than 100 kind of dump but let's do it tip sum",
    "start": "2765090",
    "end": "2771240"
  },
  {
    "text": "function you this how we create a function function is greater than 10 I",
    "start": "2771240",
    "end": "2779970"
  },
  {
    "text": "don't know okay and then you give me a number that's the what do you call this",
    "start": "2779970",
    "end": "2785250"
  },
  {
    "text": "the parameter okay right this is the parameter list you can pass parameter",
    "start": "2785250",
    "end": "2791870"
  },
  {
    "text": "parameters to the function the function has a name and it has optionally a",
    "start": "2791870",
    "end": "2797070"
  },
  {
    "text": "return type yeah if I do this I can write code inside this function so it's",
    "start": "2797070",
    "end": "2802290"
  },
  {
    "text": "gonna start writing code okay by the way guys if you want to write multi-line and",
    "start": "2802290",
    "end": "2807930"
  },
  {
    "text": "console just hold shift and that will give you a multi-line okay so",
    "start": "2807930",
    "end": "2813619"
  },
  {
    "text": "it's greater than ten how do we do this very simple if the number is greater than ten then I want this function to",
    "start": "2813619",
    "end": "2822029"
  },
  {
    "text": "return true or false essentially we can do this return true guess what if it's",
    "start": "2822029",
    "end": "2830640"
  },
  {
    "text": "not return false we're gonna write this function in a better way now guys just",
    "start": "2830640",
    "end": "2836609"
  },
  {
    "text": "to show you different ways of writing this function the version 1 of this function is greater than 10 and this is",
    "start": "2836609",
    "end": "2842400"
  },
  {
    "text": "how you call it you pass it a number you get bad is is is 10 greater than 10 no",
    "start": "2842400",
    "end": "2848969"
  },
  {
    "text": "it's not it's 10 is equal to 10 so about 11 you get it about a buged thousand 1",
    "start": "2848969",
    "end": "2856499"
  },
  {
    "text": "you get true that's it 1 get false simple stuff let's rewrite this function",
    "start": "2856499",
    "end": "2863910"
  },
  {
    "text": "in in a way version 2 of this function I",
    "start": "2863910",
    "end": "2874459"
  },
  {
    "text": "want to write this function version 2 of this function but here's what we want to",
    "start": "2874459",
    "end": "2883109"
  },
  {
    "text": "do guys so you can do an ephah statement and that's fine and that's not wrong but",
    "start": "2883109",
    "end": "2888359"
  },
  {
    "text": "if you think about it this is actually this is an expression that actually returns true or false",
    "start": "2888359",
    "end": "2894900"
  },
  {
    "text": "number greater than 0 is actually it's an expression that returns a boolean so",
    "start": "2894900",
    "end": "2901049"
  },
  {
    "text": "let's let's talk about this a little bit so if I do like number let's say let n",
    "start": "2901049",
    "end": "2908549"
  },
  {
    "text": "equal 10 and I do n is greater than 5 see I get back a boolean if I do less",
    "start": "2908549",
    "end": "2917130"
  },
  {
    "text": "than greater than 5 I do that if I do echo echo equal 5 that's too many echoes okay I get I get",
    "start": "2917130",
    "end": "2925289"
  },
  {
    "text": "back a boolean so can I write this function in a way so that can I just do",
    "start": "2925289",
    "end": "2932759"
  },
  {
    "text": "this I can't I should write I should",
    "start": "2932759",
    "end": "2939479"
  },
  {
    "text": "because what will happen here is this will be take the number if the number is greater",
    "start": "2939479",
    "end": "2946119"
  },
  {
    "text": "then that will evaluate to true that will say return true okay how so that's",
    "start": "2946119",
    "end": "2951130"
  },
  {
    "text": "how we do right and then return if that the value is false gonna return false",
    "start": "2951130",
    "end": "2956619"
  },
  {
    "text": "and anything code after return will not be executed guys all right so you have",
    "start": "2956619",
    "end": "2962020"
  },
  {
    "text": "to really understand this concept with functions right once you see a return",
    "start": "2962020",
    "end": "2967869"
  },
  {
    "text": "you cannot write any code after that except if it's sucking in an F statement block all right so now I can use the",
    "start": "2967869",
    "end": "2973990"
  },
  {
    "text": "version two of my function and test it out where work seems to be working",
    "start": "2973990",
    "end": "2982060"
  },
  {
    "text": "that's pretty cool right and let's just do this guy's that's right another",
    "start": "2982060",
    "end": "2988150"
  },
  {
    "text": "function call is even is even and is even will be the exam per and tells you",
    "start": "2988150",
    "end": "2995410"
  },
  {
    "text": "if it's even or not even-steven and you do have to know if it's the number is",
    "start": "2995410",
    "end": "3001200"
  },
  {
    "text": "even is we use a condition that actually didn't I didn't tell you guys but it's called number modulo two right if the",
    "start": "3001200",
    "end": "3010380"
  },
  {
    "text": "number module two is equal equals zero that means there you divide and the",
    "start": "3010380",
    "end": "3015390"
  },
  {
    "text": "remainder is zero go ahead and return what true it's meant it means it's even",
    "start": "3015390",
    "end": "3021390"
  },
  {
    "text": "right else return false you can do it this way I just I just try to give you",
    "start": "3021390",
    "end": "3026930"
  },
  {
    "text": "multiple ways of doing things right so if I do is even to I can write hey hey",
    "start": "3026930",
    "end": "3038450"
  },
  {
    "text": "hey that's pretty cool that's a good if executed all the time that's pretty cool",
    "start": "3038450",
    "end": "3044100"
  },
  {
    "text": "you can use the ternary operator that's right function is even version two let's",
    "start": "3044100",
    "end": "3052350"
  },
  {
    "text": "do the ternary operator how about that we can do that we can do number equal",
    "start": "3052350",
    "end": "3058800"
  },
  {
    "text": "zero which is kind of useless if you think about it guys right we can do this",
    "start": "3058800",
    "end": "3065730"
  },
  {
    "text": "just return the whole thing right and what will happen here is we can't return",
    "start": "3065730",
    "end": "3075540"
  },
  {
    "text": "the whole thing I don't think we need this expression so",
    "start": "3075540",
    "end": "3080760"
  },
  {
    "text": "here's what we do we talked about couldn't ternary operator right so check that value if if that value is true",
    "start": "3080760",
    "end": "3089370"
  },
  {
    "text": "execute the else else execute that right and what will happen is if it's true",
    "start": "3089370",
    "end": "3095010"
  },
  {
    "text": "you're gonna go here and return true the true will be substituted with the whole",
    "start": "3095010",
    "end": "3100650"
  },
  {
    "text": "thing if I do fall then the whole thing will be replaced with false and so on right so let's try this as even version",
    "start": "3100650",
    "end": "3108300"
  },
  {
    "text": "two babes Andre is Andrew David what why is it why do you want me oh I didn't",
    "start": "3108300",
    "end": "3115470"
  },
  {
    "text": "spill even correctly is even Stephen all right my function is solid guys that is solid",
    "start": "3115470",
    "end": "3124260"
  },
  {
    "text": "stuff all right so we talked about some functions can we do this guy's I want to",
    "start": "3124260",
    "end": "3129390"
  },
  {
    "text": "talk about a function that essentially it's very interesting it's called the",
    "start": "3129390",
    "end": "3135150"
  },
  {
    "text": "time out said time out okay and said time wood is a function you can see that type returns a function that essentially",
    "start": "3135150",
    "end": "3144290"
  },
  {
    "text": "executes code when a certain time is elapsed what I want to do here is I want",
    "start": "3144290",
    "end": "3152400"
  },
  {
    "text": "to write a function that runs after five seconds can I do this let's try that so",
    "start": "3152400",
    "end": "3158190"
  },
  {
    "text": "let's try the function that it's called I don't know print function print time",
    "start": "3158190",
    "end": "3165360"
  },
  {
    "text": "and then what it does is literally console dot log prints the current date",
    "start": "3165360",
    "end": "3170580"
  },
  {
    "text": "right Kevin that kind it anyway this is how you print the current data essentially new dates you create a new day and then if I do a print time I get",
    "start": "3170580",
    "end": "3179010"
  },
  {
    "text": "the current time but I want to execute it after I don't know five seconds let's do that so so this is what we do it",
    "start": "3179010",
    "end": "3184530"
  },
  {
    "text": "right you do set time out right you call this function and you tell it what do",
    "start": "3184530",
    "end": "3190410"
  },
  {
    "text": "you want to execute okay and what function you want execute I want to execute print time and you pass it you",
    "start": "3190410",
    "end": "3196950"
  },
  {
    "text": "don't invoke it you just pass it right as an object okay if you pass this",
    "start": "3196950",
    "end": "3202800"
  },
  {
    "text": "function and then you say hey execute me after five seconds five thousand",
    "start": "3202800",
    "end": "3209460"
  },
  {
    "text": "milliseconds all right right there's and wait 1 2 3 4 5 that code was",
    "start": "3209460",
    "end": "3217619"
  },
  {
    "text": "exceeded after fire pretty cool ash stuff right how about if I want to print",
    "start": "3217619",
    "end": "3223289"
  },
  {
    "text": "the time after let's say after three seconds each two seconds I want to print",
    "start": "3223289",
    "end": "3228630"
  },
  {
    "text": "the time right we can augment the print time method right to print the time but",
    "start": "3228630",
    "end": "3240329"
  },
  {
    "text": "after it brings the time it calls it timeout right and then calls itself back",
    "start": "3240329",
    "end": "3247680"
  },
  {
    "text": "which is kind of records if you think about it and after three seconds all right powerful stuff so what will",
    "start": "3247680",
    "end": "3253890"
  },
  {
    "text": "happen here is it I just declare the function and they're called but call it once execute it and what will happen is",
    "start": "3253890",
    "end": "3260849"
  },
  {
    "text": "we'll print the time and it will call this set timeout after three second",
    "start": "3260849",
    "end": "3266609"
  },
  {
    "text": "we'll call it again which will then trigger another timeout which will call it again and so on forever",
    "start": "3266609",
    "end": "3272369"
  },
  {
    "text": "let's do it one two three and one two",
    "start": "3272369",
    "end": "3277769"
  },
  {
    "text": "three and one to clear two three and",
    "start": "3277769",
    "end": "3283799"
  },
  {
    "text": "roof and you get it right you get it guys this is this is how you do is set",
    "start": "3283799",
    "end": "3289079"
  },
  {
    "text": "timeout it's powerful stuff sometimes the timeout you want to acid parameters",
    "start": "3289079",
    "end": "3294299"
  },
  {
    "text": "and this is where closures get into the pictures and we can do powerful stuff",
    "start": "3294299",
    "end": "3299910"
  },
  {
    "text": "with it all right guys let me go first this page because this is gonna get annoying right if you refresh the page then the whole",
    "start": "3299910",
    "end": "3306420"
  },
  {
    "text": "thing will just go away right it will not that function just bad I think yeah so now let's talk about out",
    "start": "3306420",
    "end": "3316008"
  },
  {
    "start": "3310000",
    "end": "3589000"
  },
  {
    "text": "out of all functions our functions are just a fancier syntactical sugar of the",
    "start": "3320529",
    "end": "3328190"
  },
  {
    "text": "current function but they are kind of cooler because they just very compact",
    "start": "3328190",
    "end": "3336289"
  },
  {
    "text": "and and easily readable and in my opinion you don't have to use them this is the new stuff you can pass in",
    "start": "3336289",
    "end": "3344589"
  },
  {
    "text": "interesting things with this becomes really interesting when you is at a",
    "start": "3344589",
    "end": "3349940"
  },
  {
    "text": "function especially when you have a single line of code a function that returns a single line of code",
    "start": "3349940",
    "end": "3356390"
  },
  {
    "text": "the perfect example is to use arrow function for those and we wrote some of them right is even is one of them right",
    "start": "3356390",
    "end": "3362660"
  },
  {
    "text": "so let's rewrite is even as a as you guys remember is even that's how we did",
    "start": "3362660",
    "end": "3369829"
  },
  {
    "text": "it number that's how we do it we can do a return number modulo two equal equal",
    "start": "3369829",
    "end": "3377539"
  },
  {
    "text": "equal zero all right you can even be fancier and just return that if you won't do okay so that it's our function",
    "start": "3377539",
    "end": "3385880"
  },
  {
    "text": "I want to rewrite this but as an auto function to do that this is how you do",
    "start": "3385880",
    "end": "3393140"
  },
  {
    "text": "it okay it doesn't make sense in this console but you can't actually create a",
    "start": "3393140",
    "end": "3398599"
  },
  {
    "text": "function code is even queue version to equal this is the auto function",
    "start": "3398599",
    "end": "3406359"
  },
  {
    "text": "this part is the outer function you the parameter comes first and if the permit",
    "start": "3406359",
    "end": "3412849"
  },
  {
    "text": "if it's a single parameter you don't have to do parentheses this is optional you can do this if you want correct",
    "start": "3412849",
    "end": "3418910"
  },
  {
    "text": "but if it's a single parameter you can do this and then literally you don't say a return because if it's a single",
    "start": "3418910",
    "end": "3425299"
  },
  {
    "text": "parameter then we're gonna assume that you want to return that okay so you do this number modulo two equal equal equal",
    "start": "3425299",
    "end": "3432559"
  },
  {
    "text": "zero okay and just like that this is called an arrow function okay what the confusing",
    "start": "3432559",
    "end": "3440299"
  },
  {
    "text": "might be confusing but if you do this orcs works works okay let's use our own",
    "start": "3440299",
    "end": "3449239"
  },
  {
    "text": "set timeout right and then let's say I want to do an arrow function",
    "start": "3449239",
    "end": "3454310"
  },
  {
    "text": "to call this function after five seconds let's do that okay how do I do that",
    "start": "3454310",
    "end": "3460030"
  },
  {
    "text": "let's print hey why do you do it okay let's do multi line here so you guys can",
    "start": "3460030",
    "end": "3466400"
  },
  {
    "text": "see my function doesn't take anything I want to print the date every 5 seconds",
    "start": "3466400",
    "end": "3472280"
  },
  {
    "text": "right if I do this I don't have anything I'd no parameter so you can you have to",
    "start": "3472280",
    "end": "3477860"
  },
  {
    "text": "fight an empty string and then you can literally just do console.log new date",
    "start": "3477860",
    "end": "3488680"
  },
  {
    "text": "and we wait for 5 seconds fasting is so long but eventually it will execute",
    "start": "3488710",
    "end": "3496430"
  },
  {
    "text": "obviously you can also have arrow functions have multi line so for example",
    "start": "3496430",
    "end": "3502280"
  },
  {
    "text": "it can do sum equal sum to equal let's",
    "start": "3502280",
    "end": "3507710"
  },
  {
    "text": "say a MB and then you can do a plus B right so you can do sum to 1 and 2 and",
    "start": "3507710",
    "end": "3517610"
  },
  {
    "text": "you get 3 6 & 5 and you get a lovin right I know contrived for examples but",
    "start": "3517610",
    "end": "3525800"
  },
  {
    "text": "it gives you the idea we're gonna go into an actual hopefully useful example at the end of the video the exercises",
    "start": "3525800",
    "end": "3533080"
  },
  {
    "text": "all right you can do you can do multi lines if you want to write some 3 ABC right you can",
    "start": "3533080",
    "end": "3545900"
  },
  {
    "text": "do that console the Lord can print them",
    "start": "3545900",
    "end": "3552860"
  },
  {
    "text": "right ah let's do it again shift I have to do",
    "start": "3552860",
    "end": "3557960"
  },
  {
    "text": "Shift + 32 multi-line console.log Bay",
    "start": "3557960",
    "end": "3564339"
  },
  {
    "text": "console.log see and then you have to say return now guys otherwise wall returned",
    "start": "3564640",
    "end": "3573440"
  },
  {
    "text": "the moment you do multi lines you have to specify the return type okay and something is already declared so let's",
    "start": "3573440",
    "end": "3581180"
  },
  {
    "text": "do it again it's do some 30 version - ok so some 3 version - is say 10",
    "start": "3581180",
    "end": "3588290"
  },
  {
    "text": "and right and you can see that it works we printed all the values and then we",
    "start": "3588290",
    "end": "3593900"
  },
  {
    "start": "3589000",
    "end": "4190000"
  },
  {
    "text": "return the value okay all right so we have",
    "start": "3593900",
    "end": "3599020"
  },
  {
    "text": "all right so we have our functions we talked about that stuff let's get into the loops guys loops",
    "start": "3602809",
    "end": "3609759"
  },
  {
    "text": "loops are interesting eyes very very very interesting okay and loops",
    "start": "3609759",
    "end": "3616309"
  },
  {
    "text": "essentially this will be the last part before we jump into the exercise right",
    "start": "3616309",
    "end": "3623150"
  },
  {
    "text": "loops will kind of glue all of this stuff that we learn together and the",
    "start": "3623150",
    "end": "3628789"
  },
  {
    "text": "most interesting part of a loop is for loop and you're gonna use this most of your time except an arrow race you're",
    "start": "3628789",
    "end": "3635599"
  },
  {
    "text": "gonna do for each all the time and we're gonna give you an example now where arrow functions shine right so let's do",
    "start": "3635599",
    "end": "3642169"
  },
  {
    "text": "this for I'm gonna print numbers from 0 to 10 okay to do that now we have to use",
    "start": "3642169",
    "end": "3650989"
  },
  {
    "text": "let guys let R equal 0 start from 0 this for loop has three parts the first thing",
    "start": "3650989",
    "end": "3657079"
  },
  {
    "text": "is the initialization where do you start it will execute once this is the second part is the conditional that will be",
    "start": "3657079",
    "end": "3663499"
  },
  {
    "text": "checked after after each loop and the last one is action essentially the",
    "start": "3663499",
    "end": "3668569"
  },
  {
    "text": "incremental part right so you can do I equal I plus 1 which means add 1 to I",
    "start": "3668569",
    "end": "3675069"
  },
  {
    "text": "this could be also replaced by I plus plus it is exactly equal each other I",
    "start": "3675069",
    "end": "3681979"
  },
  {
    "text": "plus plus that means add 1 to the 2 I and then save it to itself okay and then",
    "start": "3681979",
    "end": "3689869"
  },
  {
    "text": "I can do console dot log I write printed",
    "start": "3689869",
    "end": "3695959"
  },
  {
    "text": "I think printed all numbers sweet if I do for I and then I say for example I",
    "start": "3695959",
    "end": "3702739"
  },
  {
    "text": "can get rid of these curly braces because I have one line of code and that will work as well right if I have",
    "start": "3702739",
    "end": "3708919"
  },
  {
    "text": "multiple line of codes right then I can I can definitely add the curly braces",
    "start": "3708919",
    "end": "3714049"
  },
  {
    "text": "it's up to you guys okay so you can do like console dot log I and then you can",
    "start": "3714049",
    "end": "3720469"
  },
  {
    "text": "do a console log so I plus one okay so",
    "start": "3720469",
    "end": "3726679"
  },
  {
    "text": "kind of prints it twice it's if you will I kind of powerful stuff this is a loop",
    "start": "3726679",
    "end": "3732589"
  },
  {
    "text": "right so what will happen is you start from here right and then checks his eyes zero less than",
    "start": "3732589",
    "end": "3739820"
  },
  {
    "text": "ten yes go ahead do this execute zero right and then go to the next loop and",
    "start": "3739820",
    "end": "3745700"
  },
  {
    "text": "then add one so now why is one and then check and then keep adding and check adding and check and in check so there",
    "start": "3745700",
    "end": "3752690"
  },
  {
    "text": "is useful stuff all right guys so this is how we do a loop right so if you were",
    "start": "3752690",
    "end": "3758510"
  },
  {
    "text": "print certain numbers you can you can you can have a condition that loops through a certain number but here's",
    "start": "3758510",
    "end": "3765410"
  },
  {
    "text": "where you actually use it most of the time so let's go back to our names hey",
    "start": "3765410",
    "end": "3770920"
  },
  {
    "text": "remember that let's use that how are our array remember guys if you what that",
    "start": "3770920",
    "end": "3777530"
  },
  {
    "text": "raised so this is our our array so I want to print all my names here how do I print them okay you can do this for let",
    "start": "3777530",
    "end": "3785540"
  },
  {
    "text": "R equal zero while eyes list their names dot length right because I want to loop through all",
    "start": "3785540",
    "end": "3790970"
  },
  {
    "text": "the indices or indexes and then what I want to do is literally console dot log",
    "start": "3790970",
    "end": "3798490"
  },
  {
    "text": "names sub I right so what I want to first name sub 0 up one two three four",
    "start": "3798490",
    "end": "3807170"
  },
  {
    "text": "five and so on okay we printed all the names kind of boring okay how about we",
    "start": "3807170",
    "end": "3812450"
  },
  {
    "text": "print all the names that are that has a length of more than three letters right",
    "start": "3812450",
    "end": "3820220"
  },
  {
    "text": "so we don't want Kim into the list right so what we do is like F named sub names",
    "start": "3820220",
    "end": "3827000"
  },
  {
    "text": "sub I dot length the length of the name is greater than three then printed",
    "start": "3827000",
    "end": "3834050"
  },
  {
    "text": "otherwise just skip the whole thing all right named sub hi let's do that so I'm",
    "start": "3834050",
    "end": "3842540"
  },
  {
    "text": "gonna print it we're gonna print Alan st. nine lay right because it's greater",
    "start": "3842540",
    "end": "3848030"
  },
  {
    "text": "than 4 but we skipped Kim right Kim was there we skipped it because it's not",
    "start": "3848030",
    "end": "3853930"
  },
  {
    "text": "it's not greater than three make sense guys make sense right so let's say I",
    "start": "3853930",
    "end": "3860480"
  },
  {
    "text": "want a loop and find the name that is",
    "start": "3860480",
    "end": "3866420"
  },
  {
    "text": "for example Hussein right I want to find in the list right how do we do that we",
    "start": "3866420",
    "end": "3872630"
  },
  {
    "text": "can do this F names sub I equal equal equal Hossein then I want to basically",
    "start": "3872630",
    "end": "3881980"
  },
  {
    "text": "print the index of that right we can do",
    "start": "3882700",
    "end": "3888950"
  },
  {
    "text": "found Hussain and index let's use sticks",
    "start": "3888950",
    "end": "3896230"
  },
  {
    "text": "name and index high that's pretty cool okay hey fun who's n index one but it is",
    "start": "3898630",
    "end": "3906590"
  },
  {
    "text": "the thing after you find it we kinda wasted some cycles we found it in the",
    "start": "3906590",
    "end": "3912290"
  },
  {
    "text": "index one but remember guys we found it here but we kept doing looping through",
    "start": "3912290",
    "end": "3917660"
  },
  {
    "text": "all of this which is kind of useless so to do that to break the loop alright how",
    "start": "3917660",
    "end": "3923150"
  },
  {
    "text": "do you break the loop to break the loop is you literally use the word break very",
    "start": "3923150",
    "end": "3933050"
  },
  {
    "text": "hard huh after you find it you don't wanna waste time and go and cycle you",
    "start": "3933050",
    "end": "3940100"
  },
  {
    "text": "can just break the loop it doesn't make it will not make any difference but it will speed up your processing",
    "start": "3940100",
    "end": "3945830"
  },
  {
    "text": "essentially if there's like a million by alright guys I hear these in kind of",
    "start": "3945830",
    "end": "3952400"
  },
  {
    "text": "interviews where people say what if you have a like a million element in your array how do you write your sort",
    "start": "3952400",
    "end": "3957680"
  },
  {
    "text": "function okay these are all contrived examples and and and really weird right",
    "start": "3957680",
    "end": "3963590"
  },
  {
    "text": "you how do you have a million how did you get a million elements in your array",
    "start": "3963590",
    "end": "3970580"
  },
  {
    "text": "in your memory first it doesn't make any sense to me right usually when you work with these",
    "start": "3970580",
    "end": "3976820"
  },
  {
    "text": "kind of things it's in the database it's in this somewhere and you want to search you want to search incrementally right",
    "start": "3976820",
    "end": "3983300"
  },
  {
    "text": "while populating your array into memory you would have done the search that anyway this is not our topic but but",
    "start": "3983300",
    "end": "3989390"
  },
  {
    "text": "yeah if you have a large array you're searching a large array which makes",
    "start": "3989390",
    "end": "3994580"
  },
  {
    "text": "sense obviously I'm not talking about millions but essentially you want to break sometimes you want to break the loop over a turn if you're on a function",
    "start": "3994580",
    "end": "4001360"
  },
  {
    "text": "or a turn will do the same thing will return will break you essentially all right we'll break the whole thing on just terminate the",
    "start": "4001360",
    "end": "4007240"
  },
  {
    "text": "function all together make sense right sweet all right so let's let's say we",
    "start": "4007240",
    "end": "4014500"
  },
  {
    "text": "got to learn a function called find and exa exactly does that for you and you don't have to do I am alright so here is",
    "start": "4014500",
    "end": "4021250"
  },
  {
    "text": "a function in loops kind of related to lows but it's in that Ray so if I do",
    "start": "4021250",
    "end": "4027010"
  },
  {
    "text": "names dot for each it's a function in",
    "start": "4027010",
    "end": "4032980"
  },
  {
    "text": "the array that takes a function which is",
    "start": "4032980",
    "end": "4038260"
  },
  {
    "text": "kind of interesting but that function will be executed for each element so",
    "start": "4038260",
    "end": "4044770"
  },
  {
    "text": "it's up to you what do you wanna do so I want to pass in a function right and it",
    "start": "4044770",
    "end": "4050470"
  },
  {
    "text": "takes one element which is that's the element that's being being processed and here's what I want to do because this is",
    "start": "4050470",
    "end": "4056530"
  },
  {
    "text": "out of this is what our functions are powerful guys I want to do this I just",
    "start": "4056530",
    "end": "4064320"
  },
  {
    "text": "write the loop that printed all the elements just like that guys you can do",
    "start": "4064320",
    "end": "4069700"
  },
  {
    "text": "that so how this works what we'll do if you do for each you pass it a function and JavaScript will do the loop for you",
    "start": "4069700",
    "end": "4077350"
  },
  {
    "text": "and we'll call your function for each element is fine so what it does like it",
    "start": "4077350",
    "end": "4083650"
  },
  {
    "text": "loops through the first element it's called your function it passed Alan and then you said print Alan so it's just",
    "start": "4083650",
    "end": "4089620"
  },
  {
    "text": "literally printed Alan right that's what it did the kind of one you printed third one printed and so on right and you can",
    "start": "4089620",
    "end": "4096040"
  },
  {
    "text": "literally have there for example element let's say let's do this right if e dot",
    "start": "4096040",
    "end": "4105819"
  },
  {
    "text": "length is greater than three then console dot log so what this will do",
    "start": "4105820",
    "end": "4110920"
  },
  {
    "text": "guys it will print only names that are greater than so Kim is now printed in this case right make sense guys so he",
    "start": "4110920",
    "end": "4119859"
  },
  {
    "text": "can do fancy stuff with this right and here is another thing like a kind of",
    "start": "4119859",
    "end": "4125620"
  },
  {
    "text": "brain teaser what does this do guys what do you think this does give you some",
    "start": "4125620",
    "end": "4134080"
  },
  {
    "text": "time you think but here's the thing function that you passed console that",
    "start": "4134080",
    "end": "4140139"
  },
  {
    "text": "log if you think about it it's a function right console dot log is a function that is happened to be built-in",
    "start": "4140139",
    "end": "4145749"
  },
  {
    "text": "and it takes a parameter and it's printed so you can actually achieve the",
    "start": "4145749",
    "end": "4150909"
  },
  {
    "text": "same result with this and it's gonna print the same result but it's gonna be",
    "start": "4150909",
    "end": "4156159"
  },
  {
    "text": "confusing right because when it's printing is it's printing not just the",
    "start": "4156159",
    "end": "4161738"
  },
  {
    "text": "element but it's passing the array as well you're gonna get way more information than this right so what",
    "start": "4161739",
    "end": "4168159"
  },
  {
    "text": "happens here is you get three parameters so what JavaScript does it passes you",
    "start": "4168159",
    "end": "4175449"
  },
  {
    "text": "actually three parameters not just one okay this is the actual element that's",
    "start": "4175449",
    "end": "4181329"
  },
  {
    "text": "as you the index if you want to and it passes you the entire array every time so you can do and in free to a counselor",
    "start": "4181329",
    "end": "4190420"
  },
  {
    "start": "4190000",
    "end": "4420000"
  },
  {
    "text": "or gonna basically print everything for you right so",
    "start": "4190420",
    "end": "4195659"
  },
  {
    "text": "but one last thing I want to discuss is as dates right it wasn't in legend about",
    "start": "4200059",
    "end": "4205760"
  },
  {
    "text": "I wanted to add it dates essentially it's one of these things that I use all the time and the most important thing",
    "start": "4205760",
    "end": "4213530"
  },
  {
    "text": "let's let's declare a date here from date this is what my number one use case",
    "start": "4213530",
    "end": "4218630"
  },
  {
    "text": "here if you wanna take the difference between two dates right and print how",
    "start": "4218630",
    "end": "4225349"
  },
  {
    "text": "long the function took or like how long it is they did a function though right so you can do this equal new date right",
    "start": "4225349",
    "end": "4233719"
  },
  {
    "text": "from date and then you can do to date equal new date let's wait will love it",
    "start": "4233719",
    "end": "4239690"
  },
  {
    "text": "so some seconds passes and then you can do this from date dot get time and this",
    "start": "4239690",
    "end": "4248360"
  },
  {
    "text": "gives you this huge number which is the time since 1970 I think it's called epic",
    "start": "4248360",
    "end": "4254030"
  },
  {
    "text": "alright and then you can do it time and guess what if you do to date don't get",
    "start": "4254030",
    "end": "4262820"
  },
  {
    "text": "time - from date don't get time what do you get guys you get how long it took",
    "start": "4262820",
    "end": "4270230"
  },
  {
    "text": "you between these two times since you stabbed those and if you divide this if",
    "start": "4270230",
    "end": "4276349"
  },
  {
    "text": "you divide this by a thousand that's how we do divide by the other guys",
    "start": "4276349",
    "end": "4282860"
  },
  {
    "text": "then you get this number in seconds so it was ten seconds right so let's do",
    "start": "4282860",
    "end": "4290300"
  },
  {
    "text": "some function here a long function and",
    "start": "4290300",
    "end": "4296630"
  },
  {
    "text": "then it does literally a loop for let I",
    "start": "4296630",
    "end": "4302570"
  },
  {
    "text": "equals zero Isis there and I don't know ten thousand I plus plus and then just I",
    "start": "4302570",
    "end": "4308570"
  },
  {
    "text": "don't know just I - - just slows things down right this this will be this will",
    "start": "4308570",
    "end": "4316610"
  },
  {
    "text": "be an inference function that's wrong let's do let's just do this right I just",
    "start": "4316610",
    "end": "4325849"
  },
  {
    "text": "just pick it up a bigger number okay and there's what I want to do I want to do const from dates equal",
    "start": "4325849",
    "end": "4333619"
  },
  {
    "text": "new date get that time before and then Const to date get the time after and",
    "start": "4333619",
    "end": "4341500"
  },
  {
    "text": "then console dot log function talk then",
    "start": "4341500",
    "end": "4351619"
  },
  {
    "text": "you can do from date to get time - to",
    "start": "4351619",
    "end": "4357290"
  },
  {
    "text": "date a good time then you can do /",
    "start": "4357290",
    "end": "4363199"
  },
  {
    "text": "thousand and then we can close this thing and then few let's try this long",
    "start": "4363199",
    "end": "4372530"
  },
  {
    "text": "function talk - - because that's wrong",
    "start": "4372530",
    "end": "4377929"
  },
  {
    "text": "guys what we did we should do - time before that's wrong we did something",
    "start": "4377929",
    "end": "4383239"
  },
  {
    "text": "wrong guy something bad it's two days - from date right and then you do a long",
    "start": "4383239",
    "end": "4390199"
  },
  {
    "text": "function took three milliseconds is so",
    "start": "4390199",
    "end": "4395929"
  },
  {
    "text": "fast how can we make this function slower I want to make this function in a",
    "start": "4395929",
    "end": "4402080"
  },
  {
    "text": "slow or a long function rule made it slower let's make it even more slower oh",
    "start": "4402080",
    "end": "4409810"
  },
  {
    "text": "that's oh it's gonna be exponentially slow No ooh point five six so fast",
    "start": "4409810",
    "end": "4416330"
  },
  {
    "text": "though looping through these numbers is not as bad because you're not doing any computation even slower Oh actually it's",
    "start": "4416330",
    "end": "4428929"
  },
  {
    "start": "4420000",
    "end": "5400000"
  },
  {
    "text": "time to feel it we filled it half a second yikes",
    "start": "4428929",
    "end": "4435489"
  },
  {
    "text": "yikes all right guys time for an",
    "start": "4439809",
    "end": "4444960"
  },
  {
    "text": "exercise here's what we're gonna do guys we want to build two functions guys we want to",
    "start": "4444960",
    "end": "4451809"
  },
  {
    "text": "build a function called is prime right think about it is guys I wanted to build the function is called is prime and a",
    "start": "4451809",
    "end": "4458020"
  },
  {
    "text": "function called get primes less then right and you pass it a number right so",
    "start": "4458020",
    "end": "4466780"
  },
  {
    "text": "what what these functions do but these two functions do which is prime I set a number right and get primes less",
    "start": "4466780",
    "end": "4476289"
  },
  {
    "text": "then number what these two functions do",
    "start": "4476289",
    "end": "4481570"
  },
  {
    "text": "is the first function you pass the number it is gonna tell you if it's a prime number or not and you guys know",
    "start": "4481570",
    "end": "4487510"
  },
  {
    "text": "what a prime number is a prime number is a number that only is divisible by itself and one it's not cannot be",
    "start": "4487510",
    "end": "4494260"
  },
  {
    "text": "divisible by anything else right so and that's how that's how what a prime",
    "start": "4494260",
    "end": "4499570"
  },
  {
    "text": "number and and it's a very compute heavy operation to find if I don't prime number is is a prime or number is a",
    "start": "4499570",
    "end": "4506590"
  },
  {
    "text": "number is prime or not right and get prompts or less will use technically",
    "start": "4506590",
    "end": "4511960"
  },
  {
    "text": "this function to kind of loop down to all the function to all the numbers and",
    "start": "4511960",
    "end": "4517989"
  },
  {
    "text": "find the numbers that are prime right it's okay write them try to write them",
    "start": "4517989",
    "end": "4524530"
  },
  {
    "text": "I'm gonna write them in the most inefficient way and that's okay we're just practicing and try to make it",
    "start": "4524530",
    "end": "4530440"
  },
  {
    "text": "faster and faster and use these functions the date functions that we learned to to to come to to see the how",
    "start": "4530440",
    "end": "4538090"
  },
  {
    "text": "long our functions take right so you can pause the video here exercise this and",
    "start": "4538090",
    "end": "4543190"
  },
  {
    "text": "then continue and see how the function how I did the functions are in obviously there are many ways you're gonna be",
    "start": "4543190",
    "end": "4549520"
  },
  {
    "text": "you're gonna find many many ways that people way better than me wrote is prime write the prime numbers it's it's a huge",
    "start": "4549520",
    "end": "4556690"
  },
  {
    "text": "part of computer science it's using and it's difficult and TLS prime numbers is",
    "start": "4556690",
    "end": "4562179"
  },
  {
    "text": "used in everyone so changing but it's kind of under the cover so there will be",
    "start": "4562179",
    "end": "4567429"
  },
  {
    "text": "our simple exercise guys again a little bit you don't run into these on a daily",
    "start": "4567429",
    "end": "4572650"
  },
  {
    "text": "basis but again we'll give you the idea of JavaScript here all right guys if you're",
    "start": "4572650",
    "end": "4578230"
  },
  {
    "text": "watching here I'm gonna start writing these function okay guys you can always pause and go back to this and learn okay",
    "start": "4578230",
    "end": "4584440"
  },
  {
    "text": "so function I'm gonna write a function called is prime it's gonna take a number and it's gonna return a boolean right so",
    "start": "4584440",
    "end": "4591280"
  },
  {
    "text": "true or false so here's how I will write this function",
    "start": "4591280",
    "end": "4597310"
  },
  {
    "text": "and you can optimize this as much as you want right but I'm gonna write it in the",
    "start": "4597310",
    "end": "4604210"
  },
  {
    "text": "worst way and the reason is because I want I want to take time because I'm",
    "start": "4604210",
    "end": "4609220"
  },
  {
    "text": "gonna use the same bad function for promises to convert us into a promise",
    "start": "4609220",
    "end": "4615160"
  },
  {
    "text": "and an async away right so don't use this in production right so here's how",
    "start": "4615160",
    "end": "4621400"
  },
  {
    "text": "we're gonna do we're gonna loop let I equal we're not gonna test against",
    "start": "4621400",
    "end": "4628320"
  },
  {
    "text": "essentially we're testing against then we don't need test against two from two",
    "start": "4628320",
    "end": "4633670"
  },
  {
    "text": "while while the I is less than number we",
    "start": "4633670",
    "end": "4639190"
  },
  {
    "text": "don't need to test against the number itself right okay what we were gonna do",
    "start": "4639190",
    "end": "4645190"
  },
  {
    "text": "if the number is divisible by there by any of these numbers then it's not a",
    "start": "4645190",
    "end": "4652960"
  },
  {
    "text": "prime right here's what you do how do",
    "start": "4652960",
    "end": "4658600"
  },
  {
    "text": "you know if it's divisible very simple you do f number modulo I equals zero",
    "start": "4658600",
    "end": "4667090"
  },
  {
    "text": "that means it is not a prime return false immediately okay and you can do",
    "start": "4667090",
    "end": "4675340"
  },
  {
    "text": "here return true if you survived here",
    "start": "4675340",
    "end": "4682270"
  },
  {
    "text": "and you came here are you then you're definitely a prime if you jumped into",
    "start": "4682270",
    "end": "4689770"
  },
  {
    "text": "one of this into this condition and you succeeded in this condition then you're not a prime let's get let's take an",
    "start": "4689770",
    "end": "4696130"
  },
  {
    "text": "example let's take eight right eight start phone - is it divisible by two",
    "start": "4696130",
    "end": "4701740"
  },
  {
    "text": "yes all right so Boop return for that's not a prime that's make sense right so",
    "start": "4701740",
    "end": "4706929"
  },
  {
    "text": "try it that's the setup prime is to a prime yes is 3 R prime yes is 4 prime no",
    "start": "4706929",
    "end": "4715120"
  },
  {
    "text": "is 11 of prime yes is there something else thousand F prime no and and so on",
    "start": "4715120",
    "end": "4721870"
  },
  {
    "text": "guys right so we wrote a function that does a prime sweet let's write the other",
    "start": "4721870",
    "end": "4728530"
  },
  {
    "text": "function which is get primes less than",
    "start": "4728530",
    "end": "4734250"
  },
  {
    "text": "number okay I'm gonna take a number and here's the interesting thing right this",
    "start": "4734250",
    "end": "4741100"
  },
  {
    "text": "will be the slowest function of them all and we intentionally build it slow the",
    "start": "4741100",
    "end": "4746530"
  },
  {
    "text": "reason we're building is slow is because we're gonna use it to to to demonstrate synchronous versus asynchronous later",
    "start": "4746530",
    "end": "4752800"
  },
  {
    "text": "okay so keep this function handy and then obviously we in a loop right so for",
    "start": "4752800",
    "end": "4758340"
  },
  {
    "text": "let I is equal number from the number as actually we start from the number minus",
    "start": "4758340",
    "end": "4766690"
  },
  {
    "text": "one and while the number is greater than and one I - - so we're kind of flipping",
    "start": "4766690",
    "end": "4777500"
  },
  {
    "text": "it right let me do it again we kind of flipping it mm-hmm and then you do that",
    "start": "4777500",
    "end": "4786580"
  },
  {
    "text": "what I do with you guys so I is equal number M minus one and then we're looping for each of these we're gonna",
    "start": "4786580",
    "end": "4793280"
  },
  {
    "text": "test if is prime I if I is a prime then",
    "start": "4793280",
    "end": "4799580"
  },
  {
    "text": "we need to kind add it to some sort of an array right we need a collection of these Prime's right so let's declare an",
    "start": "4799580",
    "end": "4808250"
  },
  {
    "text": "array called Prime's here and then if the s prime equal equal equal true we",
    "start": "4808250",
    "end": "4816260"
  },
  {
    "text": "can do it this way or you can just remove it altogether because that works - remember guys if that's true if it's a",
    "start": "4816260",
    "end": "4823250"
  },
  {
    "text": "prime then go ahead and push Prime's I",
    "start": "4823250",
    "end": "4828880"
  },
  {
    "text": "suppose I'd write rhymes don't push that didn't work or some reason that's weird",
    "start": "4828880",
    "end": "4835570"
  },
  {
    "text": "Prime's dope all right that's that's probably all right so if that's true",
    "start": "4835570",
    "end": "4841580"
  },
  {
    "text": "then Prime's do push I'm gonna push I okay so that's what I'm gonna do how is",
    "start": "4841580",
    "end": "4848570"
  },
  {
    "text": "it going number minus 1 is greater than one decrement I okay start from the number and go go down right so because",
    "start": "4848570",
    "end": "4855140"
  },
  {
    "text": "the number is well we're going we're going through all numbers below that",
    "start": "4855140",
    "end": "4861140"
  },
  {
    "text": "below that right so we're starting from there and then you going down and while I is greater than one continue continue",
    "start": "4861140",
    "end": "4867590"
  },
  {
    "text": "continue continue until we find all the prime so essentially okay there are less than and two is always gonna be there",
    "start": "4867590",
    "end": "4873860"
  },
  {
    "text": "five skills gonna be there because if you pick at a large number once you have all the primes you just literally return",
    "start": "4873860",
    "end": "4881770"
  },
  {
    "text": "Prime's right let's see if this function works guys get primes less than 100 whoa",
    "start": "4881770",
    "end": "4890810"
  },
  {
    "text": "as actually powerful stuff all of these",
    "start": "4890810",
    "end": "4897590"
  },
  {
    "text": "are primes guys if our function is correct I think that all of these are",
    "start": "4897590",
    "end": "4902960"
  },
  {
    "text": "our 61 is a prime 59 prime right hundred is",
    "start": "4902960",
    "end": "4908330"
  },
  {
    "text": "not bad but I'd have a thousand Wow my function is fast guys and we're gonna",
    "start": "4908330",
    "end": "4913550"
  },
  {
    "text": "return an array this is how just they breaking their rain chrome right that's",
    "start": "4913550",
    "end": "4918620"
  },
  {
    "text": "powerful stuff look at that guy's right 10,000 oh oh it's thinking oh look at",
    "start": "4918620",
    "end": "4930230"
  },
  {
    "text": "that sounds slow I want to print the time guys let's rewrite this function so",
    "start": "4930230",
    "end": "4936130"
  },
  {
    "text": "actually allow us to write the time Const from date call new date then right",
    "start": "4936130",
    "end": "4948410"
  },
  {
    "text": "after I buy return this all of this counts to date equal new date and then",
    "start": "4948410",
    "end": "4955850"
  },
  {
    "text": "I'm gonna return I got a printed console that log talk you I'm gonna be fancy a",
    "start": "4955850",
    "end": "4969770"
  },
  {
    "text": "little bit here guys and do some certain things and and don't don't feel bad that if you don't have exactly like my",
    "start": "4969770",
    "end": "4976190"
  },
  {
    "text": "function your function might be even better than mine all right as long as it gives the correctly so that's what it",
    "start": "4976190",
    "end": "4981560"
  },
  {
    "text": "matters all right that's what it matters guys you know if you find anything wrong let",
    "start": "4981560",
    "end": "4987380"
  },
  {
    "text": "me know in the comment sections that we can correct it right but I think it's everything is cool if there but it took",
    "start": "4987380",
    "end": "4996010"
  },
  {
    "text": "so we do two dates right note from good",
    "start": "4996010",
    "end": "5003760"
  },
  {
    "text": "time - from date do a good time give me",
    "start": "5003760",
    "end": "5010240"
  },
  {
    "text": "the time and then let's do let's do it in milliseconds why not because milliseconds is actually good right and",
    "start": "5010240",
    "end": "5016660"
  },
  {
    "text": "then as you'll get primes less than hundred thousand took two seconds to",
    "start": "5016660",
    "end": "5025630"
  },
  {
    "text": "give me that result right usually guys",
    "start": "5025630",
    "end": "5031110"
  },
  {
    "text": "printing things is not as useful printing is just for logging right but",
    "start": "5031110",
    "end": "5036550"
  },
  {
    "text": "if I go back the results if you give me primes please tell me more information I want",
    "start": "5036550",
    "end": "5044059"
  },
  {
    "text": "more information I want for example we're gonna mint this to make it like a",
    "start": "5044059",
    "end": "5050719"
  },
  {
    "text": "beefy function man what I want is I want you to tell me how long it took is in",
    "start": "5050719",
    "end": "5056899"
  },
  {
    "text": "the result I don't want to string parsley or your print statement right",
    "start": "5056899",
    "end": "5063169"
  },
  {
    "text": "what I want to do is actually give the result back as part of the result and find the time so what do you what you",
    "start": "5063169",
    "end": "5069079"
  },
  {
    "text": "can do is let's rewrite the function here and instead of printing that's what",
    "start": "5069079",
    "end": "5074749"
  },
  {
    "text": "guys I want to make this here's what I want to do I want to return I want to",
    "start": "5074749",
    "end": "5084589"
  },
  {
    "text": "return an array I'm going to return an object and you can do that because it's",
    "start": "5084589",
    "end": "5089659"
  },
  {
    "text": "such an object suggest an object and you can say total we can still give you the",
    "start": "5089659",
    "end": "5095479"
  },
  {
    "text": "primes as an array which is primes but I'm gonna give you another property which is useful for you total time which",
    "start": "5095479",
    "end": "5106879"
  },
  {
    "text": "is what it's exactly this right what other thing can you be useful I can",
    "start": "5106879",
    "end": "5112189"
  },
  {
    "text": "think of something we can see it's like we can say what's how many iterations we",
    "start": "5112189",
    "end": "5121309"
  },
  {
    "text": "did right that's kind of cool as well how many how many Prime's did we find again you can argue that Prime's dot",
    "start": "5121309",
    "end": "5128599"
  },
  {
    "text": "length will give you that but you can add more and more properties here so let's stick with these two these two",
    "start": "5128599",
    "end": "5134239"
  },
  {
    "text": "seems to be okay now if I get good primes less than thousand look at that I",
    "start": "5134239",
    "end": "5140149"
  },
  {
    "text": "get back an object and I get back the time and I get back the prime so some",
    "start": "5140149",
    "end": "5146689"
  },
  {
    "text": "MIT more metadata and that's where Papa's could become really powerful because you cannot just return and this",
    "start": "5146689",
    "end": "5153469"
  },
  {
    "text": "is I find a problematic with program all programming languages where you have to return types are very strict you says",
    "start": "5153469",
    "end": "5161030"
  },
  {
    "text": "hey you can only return you have to specify return true or false or or array even our race is very",
    "start": "5161030",
    "end": "5166939"
  },
  {
    "text": "complicated to return but now to return an object and you can change very flexibly you can do that okay and I",
    "start": "5166939",
    "end": "5175389"
  },
  {
    "text": "want to modify that as prime function my is prime function guys right - to not",
    "start": "5175389",
    "end": "5183290"
  },
  {
    "text": "return just true or false but to actually return an object if it's",
    "start": "5183290",
    "end": "5188420"
  },
  {
    "text": "returned true right I'm gonna return this I'm gonna return an object but and",
    "start": "5188420",
    "end": "5195099"
  },
  {
    "text": "this object code is prime and this is gonna be true in this case but here I",
    "start": "5195099",
    "end": "5201679"
  },
  {
    "text": "want to return how many times did we",
    "start": "5201679",
    "end": "5207010"
  },
  {
    "text": "what what element broke you if if it's a",
    "start": "5207010",
    "end": "5213020"
  },
  {
    "text": "prime if it's not a prime what element actually broke you okay so in this case",
    "start": "5213020",
    "end": "5219340"
  },
  {
    "text": "I'm gonna explain that now it gets in this second right so and this case",
    "start": "5219340",
    "end": "5224570"
  },
  {
    "text": "return is true as bub as an object kind of useless here but here as it was useful right I'm gonna return if if it's",
    "start": "5224570",
    "end": "5232699"
  },
  {
    "text": "false tell me what actually it was divisible right because I find myself",
    "start": "5232699",
    "end": "5238429"
  },
  {
    "text": "when working with prime numbers and what X CD is I so okay it's false but what",
    "start": "5238429",
    "end": "5244579"
  },
  {
    "text": "was the problem what element that divisible the visible name is spelled it",
    "start": "5244579",
    "end": "5253610"
  },
  {
    "text": "but I what is what broke here or in this",
    "start": "5253610",
    "end": "5259309"
  },
  {
    "text": "case because that I is what broke you in this case you return that and then you",
    "start": "5259309",
    "end": "5264860"
  },
  {
    "text": "immediately that's what LM is divisible right so you give this element so you",
    "start": "5264860",
    "end": "5270469"
  },
  {
    "text": "can't actually get the objects of different schema right and that's what a",
    "start": "5270469",
    "end": "5276469"
  },
  {
    "text": "lot of people complain about javascript is you don't have a constructs schema that's why we're or especially when you",
    "start": "5276469",
    "end": "5282829"
  },
  {
    "text": "return jason there is no defined schema that's why people invent a facebook invent and graph QL do you have a well",
    "start": "5282829",
    "end": "5289489"
  },
  {
    "text": "defined schema because sometimes it's powerful to have flexibility but sometimes you really need to know schema",
    "start": "5289489",
    "end": "5296619"
  },
  {
    "text": "protocol buffer solve this problem graph QL kind of solve this problem as well at",
    "start": "5296619",
    "end": "5303050"
  },
  {
    "text": "least while Cindy formation so as Prime we did it can we get works it's divisible by two",
    "start": "5303050",
    "end": "5313330"
  },
  {
    "text": "there's the by two these are by 17 that's actually pretty fun nice",
    "start": "5313330",
    "end": "5319640"
  },
  {
    "text": "is it by three oh is it by 17 18 to 17",
    "start": "5319640",
    "end": "5328840"
  },
  {
    "text": "do you think about these numbers are divisible what what oh look at that 53",
    "start": "5328840",
    "end": "5339650"
  },
  {
    "text": "it's actually execute I hope you see this grayed out guys I'm gonna record this in 4k so you should see or thinking",
    "start": "5339650",
    "end": "5353900"
  },
  {
    "text": "it's thinking how is this divisible by 2 that's impossible that's just wrong guys",
    "start": "5353900",
    "end": "5361150"
  },
  {
    "text": "and doesn't make any sense that's not divisible by 2 that's definitely divisible by 2",
    "start": "5361150",
    "end": "5367630"
  },
  {
    "text": "what's going on here did I break it a",
    "start": "5367630",
    "end": "5373550"
  },
  {
    "text": "function what happened we're getting a",
    "start": "5373550",
    "end": "5382310"
  },
  {
    "text": "divisible by 2 how's this - that's impossible I think it's getting",
    "start": "5382310",
    "end": "5393370"
  },
  {
    "text": "approximated and because it's getting approximated it's it's giving you",
    "start": "5393370",
    "end": "5398810"
  },
  {
    "text": "incorrect results like an e it's like it's like flooring it that's what's happening if you could put in large",
    "start": "5398810",
    "end": "5405560"
  },
  {
    "start": "5400000",
    "end": "5710000"
  },
  {
    "text": "number this is a you remember you should probably not do that right okay so get",
    "start": "5405560",
    "end": "5412010"
  },
  {
    "text": "promised let's do a redo our get Prime's listening where is it all right guy so we change back we need",
    "start": "5412010",
    "end": "5418250"
  },
  {
    "text": "to change our get primes less than function 2 is prime and if I do this I",
    "start": "5418250",
    "end": "5423530"
  },
  {
    "text": "go get primes less than thousand and I can see that there there is all these",
    "start": "5423530",
    "end": "5431480"
  },
  {
    "text": "beautiful arrays all these elements are prime",
    "start": "5431480",
    "end": "5437989"
  },
  {
    "text": "looks like it right looks like the our prime right well let's check let's pick",
    "start": "5437989",
    "end": "5446840"
  },
  {
    "text": "one of them is a proven prime all right",
    "start": "5446840",
    "end": "5455239"
  },
  {
    "text": "so it is it is a prime okay so where didn't do anything wrong hopefully all",
    "start": "5455239",
    "end": "5460610"
  },
  {
    "text": "right guys that's the exercise we learned about",
    "start": "5460610",
    "end": "5465550"
  },
  {
    "text": "we learned about objects we learned about functions where on what are all functions we learn about all that fancy",
    "start": "5469619",
    "end": "5476310"
  },
  {
    "text": "stuff dates right we did an exercise right and I am I think we are ready to",
    "start": "5476310",
    "end": "5483510"
  },
  {
    "text": "pass in and do array maps so why would",
    "start": "5483510",
    "end": "5492540"
  },
  {
    "text": "you need an array of maps okay and another health max how why would you",
    "start": "5492540",
    "end": "5500250"
  },
  {
    "text": "need to use a map right what's a map first mapping is essentially is is to",
    "start": "5500250",
    "end": "5509130"
  },
  {
    "text": "change the state of something to something else you map it right you map",
    "start": "5509130",
    "end": "5515639"
  },
  {
    "text": "this to this like it's almost like a dictionary right and you I find myself",
    "start": "5515639",
    "end": "5521219"
  },
  {
    "text": "actually personally using this map function a lot right and here's here's a example okay let's build an array of",
    "start": "5521219",
    "end": "5531210"
  },
  {
    "text": "users all right I'm gonna build in an array of users and these users are actually a bunch of objects so you can",
    "start": "5531210",
    "end": "5539159"
  },
  {
    "text": "do this right let's say I have a name",
    "start": "5539159",
    "end": "5544730"
  },
  {
    "text": "right I'm gonna build it right now maybe I've got the video so sane is a user",
    "start": "5544730",
    "end": "5551840"
  },
  {
    "text": "right and another name right when two users I should call it users sure do",
    "start": "5551840",
    "end": "5560159"
  },
  {
    "text": "this I guess right we'll have users we have users guys what if I told you to",
    "start": "5560159",
    "end": "5566360"
  },
  {
    "text": "like give me the print me print me those",
    "start": "5566360",
    "end": "5571889"
  },
  {
    "text": "users write user names only we learned like right so for each you and then literally do",
    "start": "5571889",
    "end": "5579210"
  },
  {
    "text": "console that log you don't name I mean only interested in their names right and you can do that and you can what if I",
    "start": "5579210",
    "end": "5585840"
  },
  {
    "text": "told you that I want to work with an array of only names and you will so you",
    "start": "5585840",
    "end": "5591599"
  },
  {
    "text": "don't want that array of objects but you wanted a array of only the names and guess what you will need that sometimes",
    "start": "5591599",
    "end": "5599239"
  },
  {
    "text": "you get back from the rest endpoint you get a query standpoint you get get it back back a bunch of objects but",
    "start": "5599239",
    "end": "5606270"
  },
  {
    "text": "you're interested in into the array of just certain pieces of information and",
    "start": "5606270",
    "end": "5612960"
  },
  {
    "text": "here's where this becomes powerful so if you want just the array of names",
    "start": "5612960",
    "end": "5618360"
  },
  {
    "text": "maybe you wanna you want to filter them you want to print them or you want this just the array of Ages and you can do it",
    "start": "5618360",
    "end": "5624960"
  },
  {
    "text": "like a normal distribution kind of a thing right you can you map becomes",
    "start": "5624960",
    "end": "5630390"
  },
  {
    "text": "really powerful okay and now what map will do is will essentially convert your",
    "start": "5630390",
    "end": "5637560"
  },
  {
    "text": "array into a brand new array but exactly the same number of elements but the content is different for each element",
    "start": "5637560",
    "end": "5644970"
  },
  {
    "text": "based on a mapping function that you pass all right so let's let's let's try this right I want to create user names",
    "start": "5644970",
    "end": "5653580"
  },
  {
    "text": "right off this right so user names only",
    "start": "5653580",
    "end": "5658670"
  },
  {
    "text": "to do that you do users dope map and you pass in the function that actually what",
    "start": "5658670",
    "end": "5665430"
  },
  {
    "text": "do you want to do for each element right for each element I want the name that's",
    "start": "5665430",
    "end": "5672000"
  },
  {
    "text": "set what this will do is it will stop building for each element the first",
    "start": "5672000",
    "end": "5677340"
  },
  {
    "text": "element to remember guys it's the object it takes the object you pass in the",
    "start": "5677340",
    "end": "5682350"
  },
  {
    "text": "object is an object now give me the name and then create a new element array and",
    "start": "5682350",
    "end": "5689060"
  },
  {
    "text": "insert that value there and then move to the next one and do the same thing and",
    "start": "5689060",
    "end": "5695490"
  },
  {
    "text": "guess what now we have an array of strings right it might not be useful",
    "start": "5695490",
    "end": "5702780"
  },
  {
    "text": "right now but believe me you will have certain cases where you want just the",
    "start": "5702780",
    "end": "5709200"
  },
  {
    "text": "pure certain parameter that is there is a lot in that object but I want only",
    "start": "5709200",
    "end": "5714390"
  },
  {
    "start": "5710000",
    "end": "5772000"
  },
  {
    "text": "that list right of names or maybe just the ages Const user ages let's say you",
    "start": "5714390",
    "end": "5720870"
  },
  {
    "text": "want to do a normal distribution or something you can do this e e dot age",
    "start": "5720870",
    "end": "5727140"
  },
  {
    "text": "and that's where our functions become powerful guys right and then user ages",
    "start": "5727140",
    "end": "5733350"
  },
  {
    "text": "then you get the ages and you can do certain cool stuff with this right so that's essentially the map",
    "start": "5733350",
    "end": "5740010"
  },
  {
    "text": "function guys very powerful stuff right let's do the find remember guys let's do",
    "start": "5740010",
    "end": "5747180"
  },
  {
    "text": "a",
    "start": "5747180",
    "end": "5749210"
  },
  {
    "text": "nice array yeah so we can do users dot",
    "start": "5753599",
    "end": "5760199"
  },
  {
    "text": "find and then what this will do is like okay find me the element a user that has",
    "start": "5760199",
    "end": "5767070"
  },
  {
    "text": "the name Hussein right that's what it does and will return you the object",
    "start": "5767070",
    "end": "5774770"
  },
  {
    "start": "5772000",
    "end": "6120000"
  },
  {
    "text": "that's powerful stuff you get a return you the element that satisfies this",
    "start": "5774770",
    "end": "5780840"
  },
  {
    "text": "condition element or element essentially one element so if I say for example give",
    "start": "5780840",
    "end": "5788730"
  },
  {
    "text": "me all elements that are for example the name greater than three you still get",
    "start": "5788730",
    "end": "5794280"
  },
  {
    "text": "the first one only right in order to get all of the new use filter okay and that",
    "start": "5794280",
    "end": "5800429"
  },
  {
    "text": "will give you more than one element if you're interested on the first one you do find right if you understand all of",
    "start": "5800429",
    "end": "5807239"
  },
  {
    "text": "them then you do filter essentially so fine it's kind of faster than filter",
    "start": "5807239",
    "end": "5814578"
  },
  {
    "text": "and let's talk about now synchronous versus asynchronous right guys so I have",
    "start": "5819190",
    "end": "5824650"
  },
  {
    "text": "a function here that's called is Prime and you're gonna give it a prime number and is gonna tell you if it's a prime or",
    "start": "5824650",
    "end": "5830950"
  },
  {
    "text": "not and I looked up a number Prime the bad enough large day a big number and",
    "start": "5830950",
    "end": "5837760"
  },
  {
    "text": "then I literally use that and it's gonna tell you how long so if you notice that",
    "start": "5837760",
    "end": "5842910"
  },
  {
    "text": "after I call this function I kind of block they'll have to wait until I get a results back right so I cannot write",
    "start": "5842910",
    "end": "5849700"
  },
  {
    "text": "anything my function is kind of blocked until I get a result and that kind of execution is called synchronous you call the",
    "start": "5849700",
    "end": "5856180"
  },
  {
    "text": "function and you wait you cannot execute anything else so let's let's write the function as an example test right and",
    "start": "5856180",
    "end": "5864430"
  },
  {
    "text": "there is is what we're gonna do console dot log first test right and",
    "start": "5864430",
    "end": "5872500"
  },
  {
    "text": "then I'm gonna do this then I'm gonna do",
    "start": "5872500",
    "end": "5877510"
  },
  {
    "text": "literally copy and paste and paste right second test third test and then fourth",
    "start": "5877510",
    "end": "5884530"
  },
  {
    "text": "test final all right so here is how",
    "start": "5884530",
    "end": "5889540"
  },
  {
    "text": "synchronous code works guys okay if I do this function I call it look at that we",
    "start": "5889540",
    "end": "5896440"
  },
  {
    "text": "got the first come first in but we have waited the second test then third test",
    "start": "5896440",
    "end": "5901570"
  },
  {
    "text": "and then final test right it was synchronous you know because what",
    "start": "5901570",
    "end": "5907780"
  },
  {
    "text": "what happened here is we told the function to we execute this function and",
    "start": "5907780",
    "end": "5914500"
  },
  {
    "text": "then we exceeded the first print and then we call this and we have waited we",
    "start": "5914500",
    "end": "5919720"
  },
  {
    "text": "kind of stuck here then after that finish we go we moved here and then we",
    "start": "5919720",
    "end": "5925330"
  },
  {
    "text": "print it and then we moved and then we kind of move into a sequence kind of a thing right it's just so it's a very",
    "start": "5925330",
    "end": "5931390"
  },
  {
    "text": "synchronous that's the synchronous whirl all right so we can write the same function but in an asynchronous manner",
    "start": "5931390",
    "end": "5938290"
  },
  {
    "text": "can it trick the system to do that and we the way we do it is like we do this prime async and then we pass in the",
    "start": "5938290",
    "end": "5944290"
  },
  {
    "text": "number and then we pass in what we call a callback number this is the Federation way of doing things right we still we",
    "start": "5944290",
    "end": "5951310"
  },
  {
    "text": "still some function still do this essentially you pass in what do you want and then you tell the function hey do",
    "start": "5951310",
    "end": "5959080"
  },
  {
    "text": "your thing please do you think an event loop once you're done please call this function and give me the results I want to go",
    "start": "5959080",
    "end": "5966580"
  },
  {
    "text": "ahead and do my other stuff I'm busy right so don't bother me and do your",
    "start": "5966580",
    "end": "5972550"
  },
  {
    "text": "thing okay so here's what we do to do it's like one of the way that I found hacky way of doing it is do the set time",
    "start": "5972550",
    "end": "5979300"
  },
  {
    "text": "out right and then what do you do is initially you call you give it a function and that function will",
    "start": "5979300",
    "end": "5984910"
  },
  {
    "text": "basically call back the result because callback is a function and then you pass",
    "start": "5984910",
    "end": "5991390"
  },
  {
    "text": "it the normal is prime which is happen to be synchronous right and then you pass it a number and here's the thing",
    "start": "5991390",
    "end": "5998530"
  },
  {
    "text": "guys you can execute this immediately don't wait anyway take zero millisecond",
    "start": "5998530",
    "end": "6005160"
  },
  {
    "text": "it go ahead and execute that and then I'm gonna print console dot log hey executed function I'll let you I'll let",
    "start": "6005160",
    "end": "6014280"
  },
  {
    "text": "you know when I'm done right and there is the powerful stuff now if I do is",
    "start": "6014280",
    "end": "6019740"
  },
  {
    "text": "prime async and I pass in the prime number I didn't have to pass a function",
    "start": "6019740",
    "end": "6025440"
  },
  {
    "text": "that calls it back console does look as a perfect function because it's a it's a function that prints stuff right I can",
    "start": "6025440",
    "end": "6032010"
  },
  {
    "text": "do that and then immediately I get a result they executed function all that you know and after a few seconds after",
    "start": "6032010",
    "end": "6038310"
  },
  {
    "text": "it's done it gets you actually executed my function and I got the results back so",
    "start": "6038310",
    "end": "6043530"
  },
  {
    "text": "let's go ahead and modify my original test function remember this guy's and",
    "start": "6043530",
    "end": "6049310"
  },
  {
    "text": "move it to a sink right and see what kind of result do we get back console",
    "start": "6049310",
    "end": "6054840"
  },
  {
    "text": "dot log right change this to a sink",
    "start": "6054840",
    "end": "6060260"
  },
  {
    "text": "maybe I should keep this right and then call this function just async how about",
    "start": "6060260",
    "end": "6067410"
  },
  {
    "text": "that that's even better right that's why we keep both of them all right and this",
    "start": "6067410",
    "end": "6072480"
  },
  {
    "text": "is essentially this is the async version of the function I know guys right",
    "start": "6072480",
    "end": "6077850"
  },
  {
    "text": "there's a lot to do here I know this could be overwhelming but it is useful stuff right so we're gonna do here is",
    "start": "6077850",
    "end": "6084480"
  },
  {
    "text": "call console dot log again always let me know in the comment section if you want to learn more if you",
    "start": "6084480",
    "end": "6090689"
  },
  {
    "text": "confused about any point I'll happy to help all right so this day saying let's test again one more that is",
    "start": "6090689",
    "end": "6097829"
  },
  {
    "text": "synchronous first test second test third test let's do it again",
    "start": "6097829",
    "end": "6104879"
  },
  {
    "text": "let's do a test clear clear okay first test second test right it's a synchronous way right function",
    "start": "6104879",
    "end": "6112499"
  },
  {
    "text": "writes this right remember how this looks like it's just literally",
    "start": "6112499",
    "end": "6117659"
  },
  {
    "text": "synchronous but let's try the async version of this it's an immediate",
    "start": "6117659",
    "end": "6123869"
  },
  {
    "start": "6120000",
    "end": "6660000"
  },
  {
    "text": "execution of everything okay sweat now we're getting back the results we get",
    "start": "6123869",
    "end": "6129209"
  },
  {
    "text": "first hey execute a second third final and immediately after that we'll finish",
    "start": "6129209",
    "end": "6134849"
  },
  {
    "text": "the function but we're still getting results back of the actual function let's do it again right this day think",
    "start": "6134849",
    "end": "6142550"
  },
  {
    "text": "look at that we got all the print statements immediately so we could",
    "start": "6142550",
    "end": "6147659"
  },
  {
    "text": "actually do work while this is actually working for us on the background let's",
    "start": "6147659",
    "end": "6152699"
  },
  {
    "text": "remember guys javascript is a single threaded application it's a one thread but there's this powerful concept called",
    "start": "6152699",
    "end": "6159479"
  },
  {
    "text": "the event loop which just kind of loops and checks for callbacks and all these results so that's the strings really",
    "start": "6159479",
    "end": "6165389"
  },
  {
    "text": "what synchronous versus asynchronous and then it's powerful concept however this",
    "start": "6165389",
    "end": "6171239"
  },
  {
    "text": "model is ugly having to pass a callback function for it to come back so that's",
    "start": "6171239",
    "end": "6176340"
  },
  {
    "text": "why we invented promises you sent",
    "start": "6176340",
    "end": "6182280"
  },
  {
    "text": "something",
    "start": "6182280",
    "end": "6184518"
  },
  {
    "text": "you sent something when you tell me hey tell me if you are finished right and",
    "start": "6188450",
    "end": "6197220"
  },
  {
    "text": "promise me that we gonna give me a results back right if not then if you",
    "start": "6197220",
    "end": "6204030"
  },
  {
    "text": "succeeded call this function if you failed call this function it's kind of like a call back much way better how",
    "start": "6204030",
    "end": "6209550"
  },
  {
    "text": "about we do some promise CEA's guys promises stuff okay so I'm gonna rewrite",
    "start": "6209550",
    "end": "6216300"
  },
  {
    "text": "my is prime function but this time well I can reuse the function is prime the",
    "start": "6216300",
    "end": "6223140"
  },
  {
    "text": "powerful stuff but I am going to write it in an and that in a way that returns",
    "start": "6223140",
    "end": "6229110"
  },
  {
    "text": "a promise so I'm gonna write a function called is prime promise we can call it a",
    "start": "6229110",
    "end": "6237000"
  },
  {
    "text": "sink too as well right and it is the same thing it still takes a number but it doesn't return the result it actually",
    "start": "6237000",
    "end": "6243300"
  },
  {
    "text": "returns a promise of a result some people some program is called the future okay is prime promised right promised",
    "start": "6243300",
    "end": "6253100"
  },
  {
    "text": "it's like like that it's prime promise promise Bay okay there is what it does",
    "start": "6253100",
    "end": "6259310"
  },
  {
    "text": "the function immediately return or result immediately always like that okay",
    "start": "6259310",
    "end": "6266310"
  },
  {
    "text": "I find myself guys with promises consuming promises more than actually in",
    "start": "6266310",
    "end": "6275130"
  },
  {
    "text": "writing promises that's my experience so whatever we're about to do right now I",
    "start": "6275130",
    "end": "6280940"
  },
  {
    "text": "rarely do and I think you're gonna rarely do right but consuming you're gonna consume a lot more promises",
    "start": "6280940",
    "end": "6288240"
  },
  {
    "text": "functions that already built in like fish API is a promise based okay and",
    "start": "6288240",
    "end": "6293750"
  },
  {
    "text": "here's what we do we're gonna return a new promise and then this guy actually",
    "start": "6293750",
    "end": "6300690"
  },
  {
    "text": "takes a function the promise takes a",
    "start": "6300690",
    "end": "6306120"
  },
  {
    "text": "function called resolve and reject okay let's close this correctly pays way to",
    "start": "6306120",
    "end": "6316320"
  },
  {
    "text": "do it takes a function it returns a new promise right a brand new object of a promise type",
    "start": "6316320",
    "end": "6321930"
  },
  {
    "text": "and then closed it this is the end of the statement that's one line of code and that guy is the function and your",
    "start": "6321930",
    "end": "6329100"
  },
  {
    "text": "function will immediately get executed and here's what you want to do okay you want to succeed all right if you if you",
    "start": "6329100",
    "end": "6340410"
  },
  {
    "text": "want if you if your code succeeds you want to call resolve and pass in the results if your code has failed for any",
    "start": "6340410",
    "end": "6349020"
  },
  {
    "text": "reason you can call reject right in the case of the promise is kind of always",
    "start": "6349020",
    "end": "6354540"
  },
  {
    "text": "succeeding except there's some cases where you want to reject that case like I don't know certain certain things like",
    "start": "6354540",
    "end": "6360420"
  },
  {
    "text": "if a number is too big you want you don't want to bother actually checking for Prime's we can do that but let's",
    "start": "6360420",
    "end": "6366270"
  },
  {
    "text": "let's just do the resolve case now and we can do it very easily you did to",
    "start": "6366270",
    "end": "6371520"
  },
  {
    "text": "resolve and fasten the function immediately and pass in his prime and then pass in the number right and that",
    "start": "6371520",
    "end": "6378240"
  },
  {
    "text": "will basically return the object and pass it the result and that will give us the results but here's the thing if the",
    "start": "6378240",
    "end": "6386850"
  },
  {
    "text": "number is greater than I don't know very huge number something like that then I'm",
    "start": "6386850",
    "end": "6393810"
  },
  {
    "text": "gonna say sorry I'm gonna reject you saying that like you can literally say",
    "start": "6393810",
    "end": "6402480"
  },
  {
    "text": "anything you want here and they say error or message you can specify an",
    "start": "6402480",
    "end": "6408480"
  },
  {
    "text": "error message saying number too large for my machine to crunch right you can",
    "start": "6408480",
    "end": "6417660"
  },
  {
    "text": "do anything you want and you can do else if it's less than yeah I can deal with",
    "start": "6417660",
    "end": "6423120"
  },
  {
    "text": "that I'm gonna go ahead and execute that and that's it that's how we do promises and then let's do let's try this is",
    "start": "6423120",
    "end": "6430650"
  },
  {
    "text": "promise ifs prime promise let's try this how do you consume a promise guys' is actually interesting if you do is prime",
    "start": "6430650",
    "end": "6437790"
  },
  {
    "text": "promise if you pass in the number where is our fancy number what is our fancy number this is our",
    "start": "6437790",
    "end": "6445140"
  },
  {
    "text": "fancy number that's our fancy number let's do it that is prime promise if I do that I'm passing this number what are",
    "start": "6445140",
    "end": "6452370"
  },
  {
    "text": "you gonna get back is actually a promise that is resolved right but it's kinda useless guys",
    "start": "6452370",
    "end": "6459060"
  },
  {
    "text": "because what happened here is you didn't actually do that anything for it you",
    "start": "6459060",
    "end": "6464340"
  },
  {
    "text": "gives you the result and give you that is resolved and that's the value right but how do you play with it to play with",
    "start": "6464340",
    "end": "6471719"
  },
  {
    "text": "it you have to do it this way right you do console is prime promise and there is",
    "start": "6471719",
    "end": "6479429"
  },
  {
    "text": "a property called then on the object and you can immediately come consume it and that takes a function and most of the",
    "start": "6479429",
    "end": "6486690"
  },
  {
    "text": "time you're gonna use an arrow function let's say takes the value a result are then let's just get succeed it right so",
    "start": "6486690",
    "end": "6496280"
  },
  {
    "text": "print the are immediately just print right and if it fails you want to go",
    "start": "6496280",
    "end": "6501449"
  },
  {
    "text": "call the catch which is the reject cases right and then you can still do like",
    "start": "6501449",
    "end": "6507420"
  },
  {
    "text": "things like console.log or error says something wrong happened and you can",
    "start": "6507420",
    "end": "6515190"
  },
  {
    "text": "just do like no e dot jason does string if I II right you can just print that",
    "start": "6515190",
    "end": "6522389"
  },
  {
    "text": "thing hmm let's try that what do we get back we get back and resolve drop",
    "start": "6522389",
    "end": "6529889"
  },
  {
    "text": "promise because what happened here is we exceed we run this and then immediately we got this execute it okay let's give",
    "start": "6529889",
    "end": "6537179"
  },
  {
    "text": "it a number that is row so bad that is just gonna yell at us immediately something wrong happened at or number",
    "start": "6537179",
    "end": "6543179"
  },
  {
    "text": "too large for my machine to crunch all right so you can you can see that this",
    "start": "6543179",
    "end": "6548820"
  },
  {
    "text": "is how we can do deal with promises so let's do our function test again this",
    "start": "6548820",
    "end": "6556079"
  },
  {
    "text": "function let's do a promise test but instead of calling is prime we're gonna call it as prime promise and then I am",
    "start": "6556079",
    "end": "6564540"
  },
  {
    "text": "going to literally pass it this and then do then you can do it this way or you",
    "start": "6564540",
    "end": "6571139"
  },
  {
    "text": "can do it this way as well does then console dot log that's another way you don't have to pass it an actual arrow",
    "start": "6571139",
    "end": "6577679"
  },
  {
    "text": "function you can just pass a console log which actually prints it and then if you're if you're not satisfied you can",
    "start": "6577679",
    "end": "6584969"
  },
  {
    "text": "pass it console dot error that's another function at X prints and nice error right and let's try this guys",
    "start": "6584969",
    "end": "6591960"
  },
  {
    "text": "let's try this so if I'm gonna sit here and then do it again here and then do it again here what do we get",
    "start": "6591960",
    "end": "6598140"
  },
  {
    "text": "alright guys so we have the function which just our promise nice function right but you can see that's a little",
    "start": "6598140",
    "end": "6605370"
  },
  {
    "text": "bit ugly right are we gonna fix this with async await but that's just that",
    "start": "6605370",
    "end": "6611880"
  },
  {
    "text": "out so I do just promise now what happens okay it is still kind of",
    "start": "6611880",
    "end": "6619800"
  },
  {
    "text": "synchronous in a way right because the way we executed our function that is",
    "start": "6619800",
    "end": "6626670"
  },
  {
    "text": "called test as promised what we did is immediately its prime promised we will",
    "start": "6626670",
    "end": "6634020"
  },
  {
    "text": "call that and technically we will immediately call this so if you want a true asynchronous way so we can all call",
    "start": "6634020",
    "end": "6640800"
  },
  {
    "text": "in the same time you can do that and you can kind of trick the system by having it instead of resolving immediately and",
    "start": "6640800",
    "end": "6648660"
  },
  {
    "text": "call the function which kind of will mini block you what you can do instead is do a set timeout like we did later",
    "start": "6648660",
    "end": "6656220"
  },
  {
    "text": "right and then instead whatever you are ready immediately call that and then so",
    "start": "6656220",
    "end": "6663000"
  },
  {
    "start": "6660000",
    "end": "6840000"
  },
  {
    "text": "if you want to do that if you don't want to execute that you call a function and that function will call essentially a",
    "start": "6663000",
    "end": "6670500"
  },
  {
    "text": "resolved for you and that resolve is calling the number is prime we forgot to",
    "start": "6670500",
    "end": "6678360"
  },
  {
    "text": "call this function right so now if I do test promise again look at that dude",
    "start": "6678360",
    "end": "6687240"
  },
  {
    "text": "everything got executed and now I'm getting back the results right so my code is unblocked right and then it's",
    "start": "6687240",
    "end": "6695220"
  },
  {
    "text": "going on and continuing sometimes though this is undesired right so you you might",
    "start": "6695220",
    "end": "6702420"
  },
  {
    "text": "want to really not block the code but I want to give the impression that my code",
    "start": "6702420",
    "end": "6708600"
  },
  {
    "text": "is synchronous but in the back end it's actually a cigarette how do you do that answer is very simple",
    "start": "6708600",
    "end": "6714150"
  },
  {
    "text": "a sync a word async/await",
    "start": "6714150",
    "end": "6720800"
  },
  {
    "text": "isn't going so test promise let's look at our our artists promise function",
    "start": "6725290",
    "end": "6731000"
  },
  {
    "text": "where is it this promise this is our test promise right function I'm gonna write a new function that kind of",
    "start": "6731000",
    "end": "6738980"
  },
  {
    "text": "resembles this function but I'm gonna write it calling the promised function",
    "start": "6738980",
    "end": "6744890"
  },
  {
    "text": "but in an async await a manner and that will give us the ability to first of all",
    "start": "6744890",
    "end": "6751460"
  },
  {
    "text": "have a better reading for this code because it's currently it's not readable at all all right so a second of all it's",
    "start": "6751460",
    "end": "6759230"
  },
  {
    "text": "gonna give you the feeling of async synchronous see right but in the back end is very performant right so that's",
    "start": "6759230",
    "end": "6766070"
  },
  {
    "text": "good let's get to that I am going to call this function test async and to do that",
    "start": "6766070",
    "end": "6773870"
  },
  {
    "text": "you have to label your function as a sink right and the moment you do that you can do this right and instead of",
    "start": "6773870",
    "end": "6782320"
  },
  {
    "text": "doing that you can get the results back on result 1 or 1 and then you can just",
    "start": "6782320",
    "end": "6788690"
  },
  {
    "text": "literally just do console dot log or 1 and then do the same thing here and same",
    "start": "6788690",
    "end": "6798590"
  },
  {
    "text": "thing here so this is R 2 R & R 2 R 3 R",
    "start": "6798590",
    "end": "6804650"
  },
  {
    "text": "into R 3 and here's the thing for each one of these function if you want to",
    "start": "6804650",
    "end": "6809720"
  },
  {
    "text": "call it you have to call it with a weight and the reason you're doing that",
    "start": "6809720",
    "end": "6815120"
  },
  {
    "text": "is this will be equivalent to as if you called the function then and passed it a",
    "start": "6815120",
    "end": "6821540"
  },
  {
    "text": "function and you this is will be the result of the resolve function right so",
    "start": "6821540",
    "end": "6826760"
  },
  {
    "text": "you're gonna get back the result and then it's immediately printed so it is way more readable than the then and",
    "start": "6826760",
    "end": "6833990"
  },
  {
    "text": "catch and all that stuff that we had guys right way readable so I kind of prefer this better than that sometimes I",
    "start": "6833990",
    "end": "6841850"
  },
  {
    "start": "6840000",
    "end": "7289000"
  },
  {
    "text": "use then and and catch if it's like a one-liner kind of a thing but the",
    "start": "6841850",
    "end": "6848480"
  },
  {
    "text": "problem with async await is yeah you have to make sure your function is",
    "start": "6848480",
    "end": "6855110"
  },
  {
    "text": "asynchronous right which is not a big deal sometimes and sometimes you might ask",
    "start": "6855110",
    "end": "6861440"
  },
  {
    "text": "hey I'm saying what about the catch what if I got an error that's another kind of disadvantage of async you have to add a",
    "start": "6861440",
    "end": "6867920"
  },
  {
    "text": "try catch and let's not add a sonication let's see if this works first if I do this and I called a test async you can",
    "start": "6867920",
    "end": "6875840"
  },
  {
    "text": "see that it's exactly we're getting the result immediately look at that that's powerful stuff guys look at that so we",
    "start": "6875840",
    "end": "6883640"
  },
  {
    "text": "got it in a in an almost synchronous way but it is in the back end it's a",
    "start": "6883640",
    "end": "6888980"
  },
  {
    "text": "cigarette so we have async await our promises we have callback you pick you pick and choose what you want I'm gonna",
    "start": "6888980",
    "end": "6895489"
  },
  {
    "text": "refer the video that we did detail the promises versus async await if you want to learn more detail I know why it kind",
    "start": "6895489",
    "end": "6901489"
  },
  {
    "text": "of quickly went through that stuff very quickly and here is the cool part guys",
    "start": "6901489",
    "end": "6908060"
  },
  {
    "text": "now we get to do stuff that are actually exciting fetch API we made a video about",
    "start": "6908060",
    "end": "6914090"
  },
  {
    "text": "this yeah",
    "start": "6914090",
    "end": "6916510"
  },
  {
    "text": "I made a video about this UAV I'm gonna reference it here but the fetch API is actually a promised base API that allows",
    "start": "6920640",
    "end": "6927600"
  },
  {
    "text": "you to make a request to a function to a web browser web surface and gives back",
    "start": "6927600",
    "end": "6933900"
  },
  {
    "text": "results and as back of that result you can do interesting stuff with that",
    "start": "6933900",
    "end": "6939600"
  },
  {
    "text": "result so let's take a look and pull use",
    "start": "6939600",
    "end": "6944670"
  },
  {
    "text": "the function fetch it's available in every browser available with no GS and and also JavaScript you can use it right",
    "start": "6944670",
    "end": "6950520"
  },
  {
    "text": "now and my test is always against the github API so it's called them API",
    "start": "6950520",
    "end": "6957690"
  },
  {
    "text": "I think of github calm right and if you do that the surest API if I do that you",
    "start": "6957690",
    "end": "6963300"
  },
  {
    "text": "get back a promise obviously you didn't tell it any you didn't say any then or catch or anything so you have to specify",
    "start": "6963300",
    "end": "6970740"
  },
  {
    "text": "it then the first then that you get back is actually just part of the headers and",
    "start": "6970740",
    "end": "6978420"
  },
  {
    "text": "the headers will be parsed and you can know what's the type of those headers",
    "start": "6978420",
    "end": "6984870"
  },
  {
    "text": "and you can get information about that and you can pass a function to do that I know from experience passing calling",
    "start": "6984870",
    "end": "6993510"
  },
  {
    "text": "this API together come will give me back a JSON object so if I do a Dodge Jason",
    "start": "6993510",
    "end": "7002420"
  },
  {
    "text": "calling back the function Jason then will start parsing the results into",
    "start": "7002420",
    "end": "7008650"
  },
  {
    "text": "jason and then after we do that we call back again another venom we talked about",
    "start": "7008650",
    "end": "7015260"
  },
  {
    "text": "promises are the air acts actually they are chainable so you can do that many times and here is where you get a JSON",
    "start": "7015260",
    "end": "7020870"
  },
  {
    "text": "object and what we're gonna do is just print that object let's just print a J and here's what you get back guys look",
    "start": "7020870",
    "end": "7027110"
  },
  {
    "text": "at that so what we did is we got that go back results and then we parse that as I",
    "start": "7027110",
    "end": "7033770"
  },
  {
    "text": "made it into JSON then we called another check that were returned another promise that we'll get chained and then call",
    "start": "7033770",
    "end": "7040670"
  },
  {
    "text": "that and then we got back a result look at that this is you can do this right now in your browser and get back these",
    "start": "7040670",
    "end": "7046610"
  },
  {
    "text": "results look at that it's a huge object with a lot of stuff and we're talking",
    "start": "7046610",
    "end": "7052370"
  },
  {
    "text": "about REST API I'm gonna reference the video there if you're interested but look at that guys you can",
    "start": "7052370",
    "end": "7058279"
  },
  {
    "text": "do you can get old list of emojis if you want you can make a list of to their emojis right let's do that let's make a",
    "start": "7058279",
    "end": "7065599"
  },
  {
    "text": "Fitch API or call to the emojis alright this is the emoji URL if you do that you",
    "start": "7065599",
    "end": "7074029"
  },
  {
    "text": "get an an object of all the different emojis that github has and you can't",
    "start": "7074029",
    "end": "7082969"
  },
  {
    "text": "play with them it's just powerful stuff so you can you can do things like let's",
    "start": "7082969",
    "end": "7089659"
  },
  {
    "text": "say to go back to the original one request and then instead print that you",
    "start": "7089659",
    "end": "7096369"
  },
  {
    "text": "can see that I get back the results and let's say I want to print what is the",
    "start": "7096369",
    "end": "7102799"
  },
  {
    "text": "code search URL I want to print that yeah I'll reuse it maybe to make another request and you can do that very easily",
    "start": "7102799",
    "end": "7109969"
  },
  {
    "text": "right you can do the jason and then you get back at Jason Roseville and then you can do this that will give you the",
    "start": "7109969",
    "end": "7117649"
  },
  {
    "text": "actual URL and you can use that to make another fetch request so let's play with",
    "start": "7117649",
    "end": "7123589"
  },
  {
    "text": "that so what is the what is that emoji",
    "start": "7123589",
    "end": "7129529"
  },
  {
    "text": "list like let's do something issues right let's make a list of all issues",
    "start": "7129529",
    "end": "7136059"
  },
  {
    "text": "let's do something that actually we know like emojis all right emojis URL right so if I do emojis URL I can do that",
    "start": "7136089",
    "end": "7143779"
  },
  {
    "text": "right emojis URL print that URL and we have it how about that instead of making",
    "start": "7143779",
    "end": "7150409"
  },
  {
    "text": "a printing that I want to make another fetch to that thing here's what it gets",
    "start": "7150409",
    "end": "7156799"
  },
  {
    "text": "really interesting guys and that will return a promise right which I can then",
    "start": "7156799",
    "end": "7163069"
  },
  {
    "text": "use normally as if we did that right we",
    "start": "7163069",
    "end": "7168409"
  },
  {
    "text": "can do that Jason and then we can print the list of emojis so these are what you",
    "start": "7168409",
    "end": "7177559"
  },
  {
    "text": "see here is actually emojis with one line of code that is powerful stuff guys",
    "start": "7177559",
    "end": "7184209"
  },
  {
    "text": "alright and you can obviously if you want to you can print that right if I if",
    "start": "7184209",
    "end": "7190070"
  },
  {
    "text": "I if you just visit that page what happened if I try to render that let's",
    "start": "7190070",
    "end": "7196310"
  },
  {
    "text": "try what happened if I try to render this thing I don't even know it's not",
    "start": "7196310",
    "end": "7201830"
  },
  {
    "text": "adjacent I think it's a blob so what will happen if I print it I'm gonna print an image right sick it's actually",
    "start": "7201830",
    "end": "7208520"
  },
  {
    "text": "a blob right and if printing a blob is it's just stills gonna tell you hey by",
    "start": "7208520",
    "end": "7214100"
  },
  {
    "text": "the way this is an image right it's you cannot view the image I think if I if I interact with a browser I probably can I",
    "start": "7214100",
    "end": "7220730"
  },
  {
    "text": "can do interesting stuff with this it's it's very interesting stuff again guys",
    "start": "7220730",
    "end": "7227480"
  },
  {
    "text": "I'm gonna real friends a video like that it's it's actually a hundred percent hey",
    "start": "7227480",
    "end": "7232880"
  },
  {
    "text": "guys so I'm gonna raise a video for fetch API we we dive deep into that I'm",
    "start": "7232880",
    "end": "7238040"
  },
  {
    "text": "girlfriends to get help API that I did check out the other countries in this channel guides so this was a very brief",
    "start": "7238040",
    "end": "7246850"
  },
  {
    "text": "maybe I will always say over two hours worth of recording just recording the",
    "start": "7246850",
    "end": "7253340"
  },
  {
    "text": "JavaScript essentials right and that powerful thing about this thing guys is",
    "start": "7253340",
    "end": "7259790"
  },
  {
    "text": "is that you can use these tools now to build application and check out the mic",
    "start": "7259790",
    "end": "7265700"
  },
  {
    "text": "other content to learn about building application with JavaScript right this this video is just purely to kind of",
    "start": "7265700",
    "end": "7273620"
  },
  {
    "text": "give you the tools of JavaScript hope you enjoy this video guys I know it was very long right I'm gonna see you in the",
    "start": "7273620",
    "end": "7279620"
  },
  {
    "text": "next one I'm gonna end it right here guys give this video a like share with your friends if you do like it and I'm",
    "start": "7279620",
    "end": "7285290"
  },
  {
    "text": "gonna see you in the next one you guys stay awesome",
    "start": "7285290",
    "end": "7289900"
  }
]