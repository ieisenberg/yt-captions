[
  {
    "start": "0",
    "end": "150000"
  },
  {
    "text": "in this video i'll explain why you",
    "start": "160",
    "end": "1839"
  },
  {
    "text": "should avoid using sql",
    "start": "1839",
    "end": "3439"
  },
  {
    "text": "offset when implementing any kind of",
    "start": "3439",
    "end": "6480"
  },
  {
    "text": "paging i'll explain what offset does why",
    "start": "6480",
    "end": "9519"
  },
  {
    "text": "is it slow",
    "start": "9519",
    "end": "10639"
  },
  {
    "text": "and what is the alternative for better",
    "start": "10639",
    "end": "13440"
  },
  {
    "text": "performance",
    "start": "13440",
    "end": "14559"
  },
  {
    "text": "this video is inspired by use the index",
    "start": "14559",
    "end": "17600"
  },
  {
    "text": "luke",
    "start": "17600",
    "end": "18000"
  },
  {
    "text": "and i'll have a link to his blog and",
    "start": "18000",
    "end": "20480"
  },
  {
    "text": "slides",
    "start": "20480",
    "end": "21279"
  },
  {
    "text": "to learn more and if you're not",
    "start": "21279",
    "end": "23039"
  },
  {
    "text": "subscribed to",
    "start": "23039",
    "end": "24640"
  },
  {
    "text": "lu uh use the index luke blog what",
    "start": "24640",
    "end": "27840"
  },
  {
    "text": "you're doing",
    "start": "27840",
    "end": "28560"
  },
  {
    "text": "this is an extremely mandatory",
    "start": "28560",
    "end": "31840"
  },
  {
    "text": "block to read for all database engineers",
    "start": "31840",
    "end": "34320"
  },
  {
    "text": "so check it out",
    "start": "34320",
    "end": "35680"
  },
  {
    "text": "so let's say you have a web application",
    "start": "35680",
    "end": "37440"
  },
  {
    "text": "with an api that supports paging",
    "start": "37440",
    "end": "39600"
  },
  {
    "text": "your user want to request 10",
    "start": "39600",
    "end": "42719"
  },
  {
    "text": "news article in page 10 this is",
    "start": "42719",
    "end": "45920"
  },
  {
    "text": "performed via a simple",
    "start": "45920",
    "end": "47520"
  },
  {
    "text": "get request as shown here",
    "start": "47520",
    "end": "50879"
  },
  {
    "text": "the api server receives the get request",
    "start": "50879",
    "end": "53360"
  },
  {
    "text": "and builds a sql in order to send it",
    "start": "53360",
    "end": "55760"
  },
  {
    "text": "to the database hopefully there should",
    "start": "55760",
    "end": "57520"
  },
  {
    "text": "be a pool of is already established tcp",
    "start": "57520",
    "end": "60000"
  },
  {
    "text": "connection",
    "start": "60000",
    "end": "60640"
  },
  {
    "text": "to your databases so you don't have to",
    "start": "60640",
    "end": "62399"
  },
  {
    "text": "hit that cold start problem here",
    "start": "62399",
    "end": "65840"
  },
  {
    "text": "page 10 translates to offset 100",
    "start": "65840",
    "end": "69119"
  },
  {
    "text": "assuming each page has 10 records and",
    "start": "69119",
    "end": "72159"
  },
  {
    "text": "now the database is ready to excuse the",
    "start": "72159",
    "end": "74240"
  },
  {
    "text": "query against this beautiful table",
    "start": "74240",
    "end": "78720"
  },
  {
    "text": "offset by design means fetch and drop",
    "start": "78720",
    "end": "81520"
  },
  {
    "text": "the first",
    "start": "81520",
    "end": "82720"
  },
  {
    "text": "x number of rows so in this case the",
    "start": "82720",
    "end": "85360"
  },
  {
    "text": "database will fetch",
    "start": "85360",
    "end": "87040"
  },
  {
    "text": "the first hundred and ten rows and",
    "start": "87040",
    "end": "90320"
  },
  {
    "text": "physically drop the first hundred",
    "start": "90320",
    "end": "92000"
  },
  {
    "text": "because guess what you said it's",
    "start": "92000",
    "end": "93520"
  },
  {
    "text": "offset right and then leaving the limit",
    "start": "93520",
    "end": "96720"
  },
  {
    "text": "of",
    "start": "96720",
    "end": "97280"
  },
  {
    "text": "ten rows which the user will be actually",
    "start": "97280",
    "end": "100240"
  },
  {
    "text": "seeing",
    "start": "100240",
    "end": "100720"
  },
  {
    "text": "right as the offset increase the",
    "start": "100720",
    "end": "102640"
  },
  {
    "text": "database is doing more work",
    "start": "102640",
    "end": "104479"
  },
  {
    "text": "which makes the operation extremely",
    "start": "104479",
    "end": "106479"
  },
  {
    "text": "extremely",
    "start": "106479",
    "end": "107600"
  },
  {
    "text": "expensive another problem with the",
    "start": "107600",
    "end": "110560"
  },
  {
    "text": "offset is you might accidentally read",
    "start": "110560",
    "end": "113040"
  },
  {
    "text": "duplicate records consider this the user",
    "start": "113040",
    "end": "115840"
  },
  {
    "text": "has",
    "start": "115840",
    "end": "116399"
  },
  {
    "text": "now requested page 11 which is now",
    "start": "116399",
    "end": "118960"
  },
  {
    "text": "offset 110",
    "start": "118960",
    "end": "120560"
  },
  {
    "text": "and meanwhile someone inserted a new",
    "start": "120560",
    "end": "123520"
  },
  {
    "text": "record",
    "start": "123520",
    "end": "124320"
  },
  {
    "text": "in your table so now offsetting 110",
    "start": "124320",
    "end": "128640"
  },
  {
    "text": "rows will accidentally push",
    "start": "128640",
    "end": "131680"
  },
  {
    "text": "your existing row that you have read",
    "start": "131680",
    "end": "134080"
  },
  {
    "text": "before",
    "start": "134080",
    "end": "135120"
  },
  {
    "text": "to your result set accidentally now all",
    "start": "135120",
    "end": "138239"
  },
  {
    "text": "of a sudden",
    "start": "138239",
    "end": "138959"
  },
  {
    "text": "you just read a row that you have read",
    "start": "138959",
    "end": "142080"
  },
  {
    "text": "before which is row 11 in this case",
    "start": "142080",
    "end": "144000"
  },
  {
    "text": "let's jump to the practical side",
    "start": "144000",
    "end": "145840"
  },
  {
    "text": "and test this thing on postgres guys",
    "start": "145840",
    "end": "149120"
  },
  {
    "text": "all right guys i have a postgres",
    "start": "149120",
    "end": "151599"
  },
  {
    "start": "150000",
    "end": "345000"
  },
  {
    "text": "database and i have a table called",
    "start": "151599",
    "end": "153840"
  },
  {
    "text": "news not test and there is",
    "start": "153840",
    "end": "157280"
  },
  {
    "text": "an index on the id and i'm going to use",
    "start": "157280",
    "end": "160640"
  },
  {
    "text": "the id here as",
    "start": "160640",
    "end": "162480"
  },
  {
    "text": "since if it has like a auto incrementing",
    "start": "162480",
    "end": "165280"
  },
  {
    "text": "id",
    "start": "165280",
    "end": "166000"
  },
  {
    "text": "for my news articles here and",
    "start": "166000",
    "end": "169120"
  },
  {
    "text": "don't pay attention to these three",
    "start": "169120",
    "end": "170640"
  },
  {
    "text": "fields this is the title of the",
    "start": "170640",
    "end": "172720"
  },
  {
    "text": "article essentially what i want to do",
    "start": "172720",
    "end": "174800"
  },
  {
    "text": "here is i'm going to use",
    "start": "174800",
    "end": "176239"
  },
  {
    "text": "offset to start paging this and i'm",
    "start": "176239",
    "end": "178319"
  },
  {
    "text": "going i want to see how",
    "start": "178319",
    "end": "179599"
  },
  {
    "text": "how the database perform as a result all",
    "start": "179599",
    "end": "181760"
  },
  {
    "text": "right so let's start with explain",
    "start": "181760",
    "end": "183840"
  },
  {
    "text": "analyze select title",
    "start": "183840",
    "end": "186959"
  },
  {
    "text": "from news order by",
    "start": "186959",
    "end": "190239"
  },
  {
    "text": "id descending because i want the fresh",
    "start": "190239",
    "end": "193280"
  },
  {
    "text": "news first",
    "start": "193280",
    "end": "194319"
  },
  {
    "text": "and then i'm going to start with offset",
    "start": "194319",
    "end": "196560"
  },
  {
    "text": "0 and then i'm going to",
    "start": "196560",
    "end": "198080"
  },
  {
    "text": "limit the result with 10. and the moment",
    "start": "198080",
    "end": "200080"
  },
  {
    "text": "i do that instantly i get the results",
    "start": "200080",
    "end": "202560"
  },
  {
    "text": "obviously we have two results let's",
    "start": "202560",
    "end": "204159"
  },
  {
    "text": "explain what happens here we're using",
    "start": "204159",
    "end": "206560"
  },
  {
    "text": "index scan backwards right because i did",
    "start": "206560",
    "end": "209599"
  },
  {
    "text": "the order by",
    "start": "209599",
    "end": "210560"
  },
  {
    "text": "id descending and indexes are already",
    "start": "210560",
    "end": "213599"
  },
  {
    "text": "ordered by default so the index was",
    "start": "213599",
    "end": "216159"
  },
  {
    "text": "scanned backward from bottom",
    "start": "216159",
    "end": "218159"
  },
  {
    "text": "up i guess and then there is this much",
    "start": "218159",
    "end": "221519"
  },
  {
    "text": "rows in the index but this is not really",
    "start": "221519",
    "end": "223120"
  },
  {
    "text": "what we",
    "start": "223120",
    "end": "223760"
  },
  {
    "text": "what we actually pulled is 10 rows why",
    "start": "223760",
    "end": "226640"
  },
  {
    "text": "because",
    "start": "226640",
    "end": "227440"
  },
  {
    "text": "offset 0 plus 10 rows that is exactly",
    "start": "227440",
    "end": "231120"
  },
  {
    "text": "10. and applying a limit on top of that",
    "start": "231120",
    "end": "234239"
  },
  {
    "text": "giving you 10. so that's not so bad it",
    "start": "234239",
    "end": "236080"
  },
  {
    "text": "took 0.2 milliseconds",
    "start": "236080",
    "end": "237599"
  },
  {
    "text": "but let's let's spy things a little bit",
    "start": "237599",
    "end": "239599"
  },
  {
    "text": "let's start with offset",
    "start": "239599",
    "end": "241599"
  },
  {
    "text": "a thousand and all of a sudden now look",
    "start": "241599",
    "end": "244640"
  },
  {
    "text": "at the rows here guys",
    "start": "244640",
    "end": "246239"
  },
  {
    "text": "we have pulled from the index",
    "start": "246239",
    "end": "249920"
  },
  {
    "text": "thousand and ten rows a thousand plus",
    "start": "249920",
    "end": "252400"
  },
  {
    "text": "ten",
    "start": "252400",
    "end": "253040"
  },
  {
    "text": "and that on top of that we apply the",
    "start": "253040",
    "end": "256239"
  },
  {
    "text": "limit and then we only pull 10.",
    "start": "256239",
    "end": "258959"
  },
  {
    "text": "you're seeing the pattern took one",
    "start": "258959",
    "end": "260479"
  },
  {
    "text": "millisecond right that's not so bad",
    "start": "260479",
    "end": "263360"
  },
  {
    "text": "let's make it a hundred thousand oh you",
    "start": "263360",
    "end": "268240"
  },
  {
    "text": "started the felix 79",
    "start": "268240",
    "end": "270080"
  },
  {
    "text": "millisecond and guys i run this query so",
    "start": "270080",
    "end": "272479"
  },
  {
    "text": "many times so",
    "start": "272479",
    "end": "273280"
  },
  {
    "text": "there is a lot of page caches uh so this",
    "start": "273280",
    "end": "276639"
  },
  {
    "text": "might be slower for first round but you",
    "start": "276639",
    "end": "278639"
  },
  {
    "text": "get the idea so what what did it happen",
    "start": "278639",
    "end": "280560"
  },
  {
    "text": "what happened here we put 100 000 and 10",
    "start": "280560",
    "end": "283440"
  },
  {
    "text": "rows",
    "start": "283440",
    "end": "284000"
  },
  {
    "text": "and then only from those stinking",
    "start": "284000",
    "end": "286160"
  },
  {
    "text": "hundred thousand",
    "start": "286160",
    "end": "287199"
  },
  {
    "text": "rows we pulled ten can you",
    "start": "287199",
    "end": "290320"
  },
  {
    "text": "imagine the work that the davis is doing",
    "start": "290320",
    "end": "293199"
  },
  {
    "text": "guys",
    "start": "293199",
    "end": "293600"
  },
  {
    "text": "think about this this much rose if",
    "start": "293600",
    "end": "297199"
  },
  {
    "text": "if this was sql server sql server will",
    "start": "297199",
    "end": "299759"
  },
  {
    "text": "immediately",
    "start": "299759",
    "end": "300960"
  },
  {
    "text": "uh escalate the lock it says we're",
    "start": "300960",
    "end": "303520"
  },
  {
    "text": "touching this much rows",
    "start": "303520",
    "end": "304800"
  },
  {
    "text": "but who's going to die but post guess",
    "start": "304800",
    "end": "306720"
  },
  {
    "text": "thank god it doesn't do",
    "start": "306720",
    "end": "308240"
  },
  {
    "text": "lock escalation right so look what's",
    "start": "308240",
    "end": "310320"
  },
  {
    "text": "going on we're",
    "start": "310320",
    "end": "312000"
  },
  {
    "text": "working with 10 to 100 000 10 rows we",
    "start": "312000",
    "end": "315120"
  },
  {
    "text": "only actually need 10 and the um",
    "start": "315120",
    "end": "318320"
  },
  {
    "text": "the the unfortunate thing the database",
    "start": "318320",
    "end": "320160"
  },
  {
    "text": "doesn't know doesn't know to do this",
    "start": "320160",
    "end": "322160"
  },
  {
    "text": "because it's too late by then all right",
    "start": "322160",
    "end": "326320"
  },
  {
    "text": "so you get the idea do a million",
    "start": "326320",
    "end": "329360"
  },
  {
    "text": "and you can start c feeling it it's",
    "start": "329360",
    "end": "331120"
  },
  {
    "text": "going to be slower and slower right and",
    "start": "331120",
    "end": "332639"
  },
  {
    "text": "if i restart the database this is going",
    "start": "332639",
    "end": "334000"
  },
  {
    "text": "to",
    "start": "334000",
    "end": "334240"
  },
  {
    "text": "go so much slower 620",
    "start": "334240",
    "end": "337600"
  },
  {
    "text": "and the first time i took like six",
    "start": "337600",
    "end": "339360"
  },
  {
    "text": "seconds right but you get the idea right",
    "start": "339360",
    "end": "342400"
  },
  {
    "text": "now what can i do to fix this guys so",
    "start": "342400",
    "end": "345199"
  },
  {
    "start": "345000",
    "end": "550000"
  },
  {
    "text": "what i'm going to do is going to do a",
    "start": "345199",
    "end": "347120"
  },
  {
    "text": "little bit nice trick to actually",
    "start": "347120",
    "end": "350240"
  },
  {
    "text": "accomplish that",
    "start": "350240",
    "end": "351360"
  },
  {
    "text": "i'm going to remove the explain analyze",
    "start": "351360",
    "end": "353840"
  },
  {
    "text": "and i'm going to remove the offset",
    "start": "353840",
    "end": "356560"
  },
  {
    "text": "and i'm going to simulate an offset by",
    "start": "356560",
    "end": "359039"
  },
  {
    "text": "using the id",
    "start": "359039",
    "end": "360000"
  },
  {
    "text": "itself and then since the id field has a",
    "start": "360000",
    "end": "362319"
  },
  {
    "text": "beautiful index",
    "start": "362319",
    "end": "363440"
  },
  {
    "text": "i'm going to use that as a page look at",
    "start": "363440",
    "end": "365840"
  },
  {
    "text": "this",
    "start": "365840",
    "end": "366639"
  },
  {
    "text": "so it's not really rocket science what",
    "start": "366639",
    "end": "369120"
  },
  {
    "text": "i'm doing here i'm going to select the",
    "start": "369120",
    "end": "370560"
  },
  {
    "text": "title and the id",
    "start": "370560",
    "end": "371680"
  },
  {
    "text": "and let's say i'm going to pull the",
    "start": "371680",
    "end": "373120"
  },
  {
    "text": "first enroll and",
    "start": "373120",
    "end": "374960"
  },
  {
    "text": "you return this to the user right and",
    "start": "374960",
    "end": "376960"
  },
  {
    "text": "the user is responsible now",
    "start": "376960",
    "end": "379039"
  },
  {
    "text": "to send you what was the last id it's",
    "start": "379039",
    "end": "382400"
  },
  {
    "text": "so it's so or sees it so it's past tense",
    "start": "382400",
    "end": "385840"
  },
  {
    "text": "yes",
    "start": "385840",
    "end": "386319"
  },
  {
    "text": "so now what you do is basically execute",
    "start": "386319",
    "end": "388639"
  },
  {
    "text": "the same query",
    "start": "388639",
    "end": "389600"
  },
  {
    "text": "but says hey don't bother",
    "start": "389600",
    "end": "393039"
  },
  {
    "text": "returning anything after this id",
    "start": "393039",
    "end": "397360"
  },
  {
    "text": "this is the last idea i saw so i want",
    "start": "397360",
    "end": "400479"
  },
  {
    "text": "older pages because you're going back",
    "start": "400479",
    "end": "402639"
  },
  {
    "text": "right and it depends like how how you go",
    "start": "402639",
    "end": "404720"
  },
  {
    "text": "forward or back right you can play with",
    "start": "404720",
    "end": "406639"
  },
  {
    "text": "this in your algorithm",
    "start": "406639",
    "end": "408319"
  },
  {
    "text": "but if i do this now i got only these",
    "start": "408319",
    "end": "411599"
  },
  {
    "text": "rows",
    "start": "411599",
    "end": "412960"
  },
  {
    "text": "and this is much much faster let's take",
    "start": "412960",
    "end": "414880"
  },
  {
    "text": "a look at the explain analyze what is",
    "start": "414880",
    "end": "417280"
  },
  {
    "text": "what are we doing explain analyze and if",
    "start": "417280",
    "end": "420160"
  },
  {
    "text": "i do that",
    "start": "420160",
    "end": "421280"
  },
  {
    "text": "look at the number of rows that the",
    "start": "421280",
    "end": "422800"
  },
  {
    "text": "actual database works with",
    "start": "422800",
    "end": "424880"
  },
  {
    "text": "only 10 why because if you do",
    "start": "424880",
    "end": "428080"
  },
  {
    "text": "just limit 10 that's the best thing you",
    "start": "428080",
    "end": "431680"
  },
  {
    "text": "can do this is good",
    "start": "431680",
    "end": "433440"
  },
  {
    "text": "you don't you didn't use offset with it",
    "start": "433440",
    "end": "435759"
  },
  {
    "text": "using limit",
    "start": "435759",
    "end": "437520"
  },
  {
    "text": "with two parameters like a tens comma 10",
    "start": "437520",
    "end": "440639"
  },
  {
    "text": "or offset that kills the performance",
    "start": "440639",
    "end": "443360"
  },
  {
    "text": "because",
    "start": "443360",
    "end": "443919"
  },
  {
    "text": "now you have to jump and then read limit",
    "start": "443919",
    "end": "446720"
  },
  {
    "text": "10 tells the database hey",
    "start": "446720",
    "end": "448479"
  },
  {
    "text": "i'm looking only on the first 10 rows",
    "start": "448479",
    "end": "450639"
  },
  {
    "text": "that you can pull there's another",
    "start": "450639",
    "end": "452000"
  },
  {
    "text": "commander called fetch",
    "start": "452000",
    "end": "453919"
  },
  {
    "text": "first rows only whatever the first 10",
    "start": "453919",
    "end": "457120"
  },
  {
    "text": "rows that's another thing you can use it",
    "start": "457120",
    "end": "458720"
  },
  {
    "text": "which is exactly the same as limit",
    "start": "458720",
    "end": "460720"
  },
  {
    "text": "all right so if you do that then you get",
    "start": "460720",
    "end": "463520"
  },
  {
    "text": "back",
    "start": "463520",
    "end": "464080"
  },
  {
    "text": "10 rows the index will be scanned",
    "start": "464080",
    "end": "466400"
  },
  {
    "text": "backward but",
    "start": "466400",
    "end": "467520"
  },
  {
    "text": "wait a second we only need 10 plus",
    "start": "467520",
    "end": "470800"
  },
  {
    "text": "we have used an index to actually filter",
    "start": "470800",
    "end": "474000"
  },
  {
    "text": "that",
    "start": "474000",
    "end": "474560"
  },
  {
    "text": "even down even better right we just",
    "start": "474560",
    "end": "477280"
  },
  {
    "text": "essentially",
    "start": "477280",
    "end": "478160"
  },
  {
    "text": "filtered down the results right we're",
    "start": "478160",
    "end": "480160"
  },
  {
    "text": "working with a little bit of a",
    "start": "480160",
    "end": "482000"
  },
  {
    "text": "more more niche result which is",
    "start": "482000",
    "end": "485280"
  },
  {
    "text": "awesome and now in the limit applied",
    "start": "485280",
    "end": "488400"
  },
  {
    "text": "after the limits will only talk 10.",
    "start": "488400",
    "end": "490240"
  },
  {
    "text": "now if i do this if i if i imagine go",
    "start": "490240",
    "end": "493039"
  },
  {
    "text": "went back",
    "start": "493039",
    "end": "493680"
  },
  {
    "text": "all the way to page i don't know",
    "start": "493680",
    "end": "495919"
  },
  {
    "text": "thousand right",
    "start": "495919",
    "end": "497360"
  },
  {
    "text": "h thousand which is very very old guess",
    "start": "497360",
    "end": "499840"
  },
  {
    "text": "what",
    "start": "499840",
    "end": "500560"
  },
  {
    "text": "an instant right we have worked",
    "start": "500560",
    "end": "503599"
  },
  {
    "text": "now the database worked with 89 rows",
    "start": "503599",
    "end": "506479"
  },
  {
    "text": "instead of whatever right",
    "start": "506479",
    "end": "508000"
  },
  {
    "text": "but still the actual result set from the",
    "start": "508000",
    "end": "510639"
  },
  {
    "text": "end from the index",
    "start": "510639",
    "end": "512000"
  },
  {
    "text": "came out as 10. now we jump back to the",
    "start": "512000",
    "end": "514320"
  },
  {
    "text": "heap we pull the",
    "start": "514320",
    "end": "515919"
  },
  {
    "text": "title field and then we limit and it",
    "start": "515919",
    "end": "518320"
  },
  {
    "text": "becomes 10.",
    "start": "518320",
    "end": "519440"
  },
  {
    "text": "so the the amount of io is much much",
    "start": "519440",
    "end": "523039"
  },
  {
    "text": "less",
    "start": "523039",
    "end": "523680"
  },
  {
    "text": "the amount of work that the databases do",
    "start": "523680",
    "end": "525839"
  },
  {
    "text": "is way less",
    "start": "525839",
    "end": "526959"
  },
  {
    "text": "and you saved a lot of cpu cycle",
    "start": "526959",
    "end": "530399"
  },
  {
    "text": "and the database will thank you hope you",
    "start": "530399",
    "end": "532880"
  },
  {
    "text": "guys enjoy this video guys",
    "start": "532880",
    "end": "534560"
  },
  {
    "text": "what are the other approaches that you",
    "start": "534560",
    "end": "536480"
  },
  {
    "text": "personally do",
    "start": "536480",
    "end": "537600"
  },
  {
    "text": "when paging i'd love to see them in the",
    "start": "537600",
    "end": "540000"
  },
  {
    "text": "comment section below so we all can",
    "start": "540000",
    "end": "541920"
  },
  {
    "text": "learn",
    "start": "541920",
    "end": "542480"
  },
  {
    "text": "in advance and become better software",
    "start": "542480",
    "end": "545279"
  },
  {
    "text": "engineers",
    "start": "545279",
    "end": "546240"
  },
  {
    "text": "i'm gonna see you in the next one you",
    "start": "546240",
    "end": "548480"
  },
  {
    "text": "guys stay awesome",
    "start": "548480",
    "end": "549360"
  },
  {
    "text": "goodbye",
    "start": "549360",
    "end": "551680"
  }
]