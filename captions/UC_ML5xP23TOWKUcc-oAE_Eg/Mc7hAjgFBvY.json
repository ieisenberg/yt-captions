[
  {
    "text": "hey guys so this is a good question from",
    "start": "120",
    "end": "2639"
  },
  {
    "text": "uh subood talking about",
    "start": "2639",
    "end": "6720"
  },
  {
    "text": "um the sin and they accept cue",
    "start": "6720",
    "end": "9740"
  },
  {
    "text": "specifically here the question is do",
    "start": "9740",
    "end": "12480"
  },
  {
    "text": "kernels maintain one Q each for sin and",
    "start": "12480",
    "end": "15480"
  },
  {
    "text": "except Q per process or the current",
    "start": "15480",
    "end": "17580"
  },
  {
    "text": "maintain contains one Q each for sin and",
    "start": "17580",
    "end": "21840"
  },
  {
    "text": "accept right so the second question is",
    "start": "21840",
    "end": "24660"
  },
  {
    "text": "part of it is how do you maintain about",
    "start": "24660",
    "end": "27119"
  },
  {
    "text": "these two is it basically FIFA principle",
    "start": "27119",
    "end": "29760"
  },
  {
    "text": "so let's discuss this a little bit so",
    "start": "29760",
    "end": "32398"
  },
  {
    "text": "when we create a listening socket in a",
    "start": "32399",
    "end": "36540"
  },
  {
    "text": "process",
    "start": "36540",
    "end": "37620"
  },
  {
    "text": "what happens is we specify the address",
    "start": "37620",
    "end": "39960"
  },
  {
    "text": "this is the IP address and this is the",
    "start": "39960",
    "end": "42300"
  },
  {
    "text": "port and when you do that you get back a",
    "start": "42300",
    "end": "45899"
  },
  {
    "text": "listening socket which is in Linux a",
    "start": "45899",
    "end": "49559"
  },
  {
    "text": "file basically in Linux everything is a",
    "start": "49559",
    "end": "51660"
  },
  {
    "text": "file file descriptor right and when we",
    "start": "51660",
    "end": "54780"
  },
  {
    "text": "do that the Linux kernel will create two",
    "start": "54780",
    "end": "58559"
  },
  {
    "text": "queues for you one is called the synq",
    "start": "58559",
    "end": "60840"
  },
  {
    "text": "and one is called the accept queue for",
    "start": "60840",
    "end": "63480"
  },
  {
    "text": "that listening socket and that like any",
    "start": "63480",
    "end": "67920"
  },
  {
    "text": "other files is not bound to a process",
    "start": "67920",
    "end": "71220"
  },
  {
    "text": "per se right that file and that socket",
    "start": "71220",
    "end": "75240"
  },
  {
    "text": "can be shared with 10 processes which",
    "start": "75240",
    "end": "77820"
  },
  {
    "text": "means 10 processors can read and accept",
    "start": "77820",
    "end": "81119"
  },
  {
    "text": "connections from that socket so what",
    "start": "81119",
    "end": "84659"
  },
  {
    "text": "happens is when when a connection is",
    "start": "84659",
    "end": "86840"
  },
  {
    "text": "attempted to this socket that that is SN",
    "start": "86840",
    "end": "91500"
  },
  {
    "text": "request comes in with a Target IP",
    "start": "91500",
    "end": "95100"
  },
  {
    "text": "address matching the socket listener and",
    "start": "95100",
    "end": "97619"
  },
  {
    "text": "the Target Port matching that 100",
    "start": "97619",
    "end": "100939"
  },
  {
    "text": "then that's in entry is added to the syn",
    "start": "100939",
    "end": "105299"
  },
  {
    "text": "queue which is a dedicated queue just",
    "start": "105299",
    "end": "107340"
  },
  {
    "text": "for that listener but the kernel",
    "start": "107340",
    "end": "109380"
  },
  {
    "text": "immediately just replies back okay",
    "start": "109380",
    "end": "111240"
  },
  {
    "text": "acknowledge I'm good boom let's just",
    "start": "111240",
    "end": "113939"
  },
  {
    "text": "acknowledge this",
    "start": "113939",
    "end": "115380"
  },
  {
    "text": "and when you do that",
    "start": "115380",
    "end": "117680"
  },
  {
    "text": "the client gets back that sin Act Right",
    "start": "117680",
    "end": "121140"
  },
  {
    "text": "the acknowledgment basically you get a",
    "start": "121140",
    "end": "122759"
  },
  {
    "text": "synec and the client gets that synec and",
    "start": "122759",
    "end": "126060"
  },
  {
    "text": "replies back with what or the ACT",
    "start": "126060",
    "end": "128160"
  },
  {
    "text": "finishing that TCP handshake and when",
    "start": "128160",
    "end": "131099"
  },
  {
    "text": "the kernel receives the ACT matching the",
    "start": "131099",
    "end": "134459"
  },
  {
    "text": "sin the sin that is was in the Sin Q",
    "start": "134459",
    "end": "138239"
  },
  {
    "text": "then you have a full-fledged connection",
    "start": "138239",
    "end": "140099"
  },
  {
    "text": "only then an entry is created in the",
    "start": "140099",
    "end": "144180"
  },
  {
    "text": "accept queue with that connection yet",
    "start": "144180",
    "end": "148500"
  },
  {
    "text": "up until that point we don't really have",
    "start": "148500",
    "end": "150540"
  },
  {
    "text": "a connection yet we have a ready to be",
    "start": "150540",
    "end": "154340"
  },
  {
    "text": "accepted connection now the backend",
    "start": "154340",
    "end": "157080"
  },
  {
    "text": "application will call a method a system",
    "start": "157080",
    "end": "159660"
  },
  {
    "text": "called called accept on that listener",
    "start": "159660",
    "end": "162660"
  },
  {
    "text": "and that will pop that entry from the",
    "start": "162660",
    "end": "165959"
  },
  {
    "text": "accept queue right but that time the sin",
    "start": "165959",
    "end": "168720"
  },
  {
    "text": "has been popped right because we have a",
    "start": "168720",
    "end": "171000"
  },
  {
    "text": "connection so the send queue is now",
    "start": "171000",
    "end": "172739"
  },
  {
    "text": "empty",
    "start": "172739",
    "end": "173760"
  },
  {
    "text": "now that backend will call and accept",
    "start": "173760",
    "end": "175980"
  },
  {
    "text": "and then gold gets that connection we",
    "start": "175980",
    "end": "178980"
  },
  {
    "text": "get a file essentially so technically to",
    "start": "178980",
    "end": "181200"
  },
  {
    "text": "answer a good question here is is any",
    "start": "181200",
    "end": "183780"
  },
  {
    "text": "process with access with a pointer",
    "start": "183780",
    "end": "186300"
  },
  {
    "text": "access to that socket listener can call",
    "start": "186300",
    "end": "188580"
  },
  {
    "text": "accept so we have multiple processes can",
    "start": "188580",
    "end": "191519"
  },
  {
    "text": "fight essentially to accept the",
    "start": "191519",
    "end": "194220"
  },
  {
    "text": "connections and why you want to do this",
    "start": "194220",
    "end": "197459"
  },
  {
    "text": "you might say the reason is one process",
    "start": "197459",
    "end": "199800"
  },
  {
    "text": "might not be fast enough to accept like",
    "start": "199800",
    "end": "202440"
  },
  {
    "text": "a lot of connections right so that's",
    "start": "202440",
    "end": "205019"
  },
  {
    "text": "what you do essentially you accept you",
    "start": "205019",
    "end": "207659"
  },
  {
    "text": "spin up multiple processes sharing that",
    "start": "207659",
    "end": "210900"
  },
  {
    "text": "single socket all competing the problem",
    "start": "210900",
    "end": "214019"
  },
  {
    "text": "with this model is you get contention",
    "start": "214019",
    "end": "216599"
  },
  {
    "text": "because because it's a queue it has to",
    "start": "216599",
    "end": "219780"
  },
  {
    "text": "establish a mutex right like how do you",
    "start": "219780",
    "end": "223019"
  },
  {
    "text": "pop something or push something from Key",
    "start": "223019",
    "end": "225239"
  },
  {
    "text": "you have to lock it right otherwise",
    "start": "225239",
    "end": "227340"
  },
  {
    "text": "especially in a multi-threaded or",
    "start": "227340",
    "end": "228840"
  },
  {
    "text": "multi-processor environment you have to",
    "start": "228840",
    "end": "231000"
  },
  {
    "text": "lock it and when you do that",
    "start": "231000",
    "end": "233040"
  },
  {
    "text": "well problems happen because now you",
    "start": "233040",
    "end": "236220"
  },
  {
    "text": "have contention between multiple",
    "start": "236220",
    "end": "237599"
  },
  {
    "text": "processes competing to accept",
    "start": "237599",
    "end": "239760"
  },
  {
    "text": "connections so that's the first part the",
    "start": "239760",
    "end": "241920"
  },
  {
    "text": "second part of the question is is a",
    "start": "241920",
    "end": "243900"
  },
  {
    "text": "simple uh is it simple really fifo",
    "start": "243900",
    "end": "246900"
  },
  {
    "text": "principle I would say yes I'm not really",
    "start": "246900",
    "end": "248879"
  },
  {
    "text": "an expert on what is how is that",
    "start": "248879",
    "end": "251760"
  },
  {
    "text": "actually implemented in the Linux kernel",
    "start": "251760",
    "end": "254280"
  },
  {
    "text": "but I would say yeah it's a basic simple",
    "start": "254280",
    "end": "256139"
  },
  {
    "text": "things unless maybe some cases like the",
    "start": "256139",
    "end": "259440"
  },
  {
    "text": "kernel no particularly for the accept",
    "start": "259440",
    "end": "261479"
  },
  {
    "text": "queue but definitely for the receive",
    "start": "261479",
    "end": "263940"
  },
  {
    "text": "queue where the kernel will say okay we",
    "start": "263940",
    "end": "266280"
  },
  {
    "text": "have like a lot of packets here received",
    "start": "266280",
    "end": "268860"
  },
  {
    "text": "what we're going to do is we're going to",
    "start": "268860",
    "end": "270540"
  },
  {
    "text": "merge all these packets into one place",
    "start": "270540",
    "end": "272520"
  },
  {
    "text": "essentially and and combine them into",
    "start": "272520",
    "end": "275100"
  },
  {
    "text": "one packet just that we can shrink and",
    "start": "275100",
    "end": "278100"
  },
  {
    "text": "remove the headers from the app packet",
    "start": "278100",
    "end": "280860"
  },
  {
    "text": "so we can merge them into fewer and",
    "start": "280860",
    "end": "282780"
  },
  {
    "text": "fewer packets so that is happening but",
    "start": "282780",
    "end": "285479"
  },
  {
    "text": "essentially I think it's gonna be basic",
    "start": "285479",
    "end": "287520"
  },
  {
    "text": "FIFA principle yeah so yeah that was a",
    "start": "287520",
    "end": "290160"
  },
  {
    "text": "it was a good question I thought I'm",
    "start": "290160",
    "end": "291419"
  },
  {
    "text": "gonna create like a a q a section of it",
    "start": "291419",
    "end": "294419"
  },
  {
    "text": "see you in the next one",
    "start": "294419",
    "end": "297139"
  }
]