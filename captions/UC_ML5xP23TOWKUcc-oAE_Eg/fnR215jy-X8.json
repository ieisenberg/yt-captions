[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "you know guys we were told by dbas for the longest time to",
    "start": "240",
    "end": "5839"
  },
  {
    "text": "exercise caution when executing certain workloads to the",
    "start": "5839",
    "end": "11440"
  },
  {
    "text": "database you know because we can get into a situation where your query is using an",
    "start": "11440",
    "end": "17840"
  },
  {
    "text": "index that is fragmented and this might be a confusing term it was a",
    "start": "17840",
    "end": "24480"
  },
  {
    "text": "confusing term for me for the longest time and this index fragmentation is caused by",
    "start": "24480",
    "end": "31359"
  },
  {
    "text": "something called page splits which kind of degrade the performance of the index",
    "start": "31359",
    "end": "37280"
  },
  {
    "text": "but really nobody told us why it is slow",
    "start": "37280",
    "end": "43280"
  },
  {
    "text": "you know so i'd like to i'd like to talk about uh",
    "start": "43280",
    "end": "48719"
  },
  {
    "text": "these building blocks respectively what's what is a page and why spl why do we even need to split a page",
    "start": "48719",
    "end": "56399"
  },
  {
    "text": "why do we get to this situation where we need to split a page i mean if you're adding data just keep creating new pages",
    "start": "56399",
    "end": "63840"
  },
  {
    "text": "why do you go to an existing a page and split it and some of your miners says well that",
    "start": "63840",
    "end": "70080"
  },
  {
    "text": "kind of makes sense we'll come to that right and uh someone who's like yeah i don't understand why do we need to split pages",
    "start": "70080",
    "end": "76799"
  },
  {
    "text": "it's fascinating when you actually understand what we're",
    "start": "76799",
    "end": "81920"
  },
  {
    "text": "doing it's all for a good reason so i'm gonna talk about that i'm going to talk about what is a page what is a page",
    "start": "81920",
    "end": "88159"
  },
  {
    "text": "split how's an index get fragmented and what is the cost what does this cost me as an",
    "start": "88159",
    "end": "93840"
  },
  {
    "text": "engineer when it comes to execution time and is it really a big deal",
    "start": "93840",
    "end": "100799"
  },
  {
    "text": "i will jump into it and discuss welcome to that engineering show with your host hussein nasser and today's topic is page",
    "start": "100799",
    "end": "108240"
  },
  {
    "text": "splits what do you need to talk about what a page is i talked about this many times",
    "start": "108240",
    "end": "113439"
  },
  {
    "start": "110000",
    "end": "300000"
  },
  {
    "text": "in the youtube channel and in my courses as well you see when",
    "start": "113439",
    "end": "119280"
  },
  {
    "text": "the the way the hard drives on disk and ssd",
    "start": "119280",
    "end": "126240"
  },
  {
    "text": "are built it's built around something called block right everything is a block storage so",
    "start": "126240",
    "end": "133200"
  },
  {
    "text": "when you actually issue an il to the ssd or to the hard drives",
    "start": "133200",
    "end": "139760"
  },
  {
    "text": "you don't get a single byte you know you don't get to choose the minimum amount",
    "start": "139760",
    "end": "144959"
  },
  {
    "text": "of things you want to read you get a fixed amount of size you can get multiple of that size you",
    "start": "144959",
    "end": "152080"
  },
  {
    "text": "know like 4kb and then 8 to 16 and whatever but you don't get to choose",
    "start": "152080",
    "end": "158000"
  },
  {
    "text": "like a lower amount so you don't get this granularity as you do with a random",
    "start": "158000",
    "end": "163440"
  },
  {
    "text": "access based memory such as ram right you don't get to say oh go to this address and that's a big off one and",
    "start": "163440",
    "end": "170400"
  },
  {
    "text": "read that by yeah your ssd is kind of big off one you go",
    "start": "170400",
    "end": "176000"
  },
  {
    "text": "to that location but you don't fetch one byte you get you get more",
    "start": "176000",
    "end": "181599"
  },
  {
    "text": "and this is kind of a double edged sword when you read you get more and that also applies to writing",
    "start": "181599",
    "end": "188000"
  },
  {
    "text": "when you write you gotta write in blocks so it's like wait a minute i i didn't really i just changed one byte you want",
    "start": "188000",
    "end": "194720"
  },
  {
    "text": "me to write 4k it's expensive especially when it comes to ssds",
    "start": "194720",
    "end": "200080"
  },
  {
    "text": "normally really much uh when it comes to hard drive but ssds",
    "start": "200080",
    "end": "205200"
  },
  {
    "text": "writing to the same place over and over again uh that particular minimum small",
    "start": "205200",
    "end": "212560"
  },
  {
    "text": "location gets you know get exhausted after a while from the arrays and program cycles",
    "start": "212560",
    "end": "220400"
  },
  {
    "text": "because you you in order to write to this is do you have to raise that portion you know so ssd comes up with all these",
    "start": "220400",
    "end": "228080"
  },
  {
    "text": "tricks on the background which adds more abstraction leaky abstraction to us you",
    "start": "228080",
    "end": "234640"
  },
  {
    "text": "know as in genes we don't know what this is doing you know shuffles things around and the part of the shuffling and",
    "start": "234640",
    "end": "240720"
  },
  {
    "text": "garbage collection and where leveling that is does these algorithms we feel the right amplification",
    "start": "240720",
    "end": "248239"
  },
  {
    "text": "performance as a result but that's that's what we get we get a page right we get to work with pages and pages is",
    "start": "248239",
    "end": "256400"
  },
  {
    "text": "really a database logical abstraction um",
    "start": "256400",
    "end": "262479"
  },
  {
    "text": "i have a page and this is i don't know 8k for example and postgres",
    "start": "262479",
    "end": "268639"
  },
  {
    "text": "and 16k in annualdb mysql and that's that's a page that's how i work that's",
    "start": "268639",
    "end": "275040"
  },
  {
    "text": "that's the amount i work with it's 16 or 4k but doesn't really translate",
    "start": "275040",
    "end": "282479"
  },
  {
    "text": "perfectly when it comes to the ssd it's there is a big mismatch because one",
    "start": "282720",
    "end": "288560"
  },
  {
    "text": "page in postgres could be two pages or blocks in the ssd and this",
    "start": "288560",
    "end": "295360"
  },
  {
    "text": "mismatch causes multiple ios right and you feel really unlucky one page that",
    "start": "295360",
    "end": "302320"
  },
  {
    "start": "300000",
    "end": "525000"
  },
  {
    "text": "has your beautiful index keys",
    "start": "302320",
    "end": "307600"
  },
  {
    "text": "or your rows you know your actual rows and columns",
    "start": "307600",
    "end": "312720"
  },
  {
    "text": "might live on different physical pages and ssds and that's based on how",
    "start": "312720",
    "end": "320240"
  },
  {
    "text": "you write things so we have this idea of pages so",
    "start": "320240",
    "end": "325600"
  },
  {
    "text": "just just look at the concept of a page itself and that's what we have today",
    "start": "325600",
    "end": "331600"
  },
  {
    "text": "okay so the database is always read a page and then caches it into what is called",
    "start": "331600",
    "end": "338400"
  },
  {
    "text": "the buffer pool you know it has many names buffer sharepool you know",
    "start": "338400",
    "end": "345280"
  },
  {
    "text": "shared memory whatever you know it's just a location and that the database",
    "start": "345280",
    "end": "351280"
  },
  {
    "text": "reserve from memory and puts it in reserves it say i'm going to use this for my",
    "start": "351280",
    "end": "358560"
  },
  {
    "text": "pages that i read and when you write to this page you know let's change one row you write",
    "start": "358560",
    "end": "368400"
  },
  {
    "text": "to that cash location it's almost like a right through cash",
    "start": "368400",
    "end": "373360"
  },
  {
    "text": "well you might say hussein what are you talking about databases",
    "start": "374240",
    "end": "379680"
  },
  {
    "text": "writing to the cache we i thought databases are durable",
    "start": "379680",
    "end": "387759"
  },
  {
    "text": "well that's a long story to talk about because you can let's",
    "start": "388880",
    "end": "394639"
  },
  {
    "text": "assume we're gonna do exactly what you're thinking if i change",
    "start": "394639",
    "end": "400880"
  },
  {
    "text": "if one transaction changed the row that happened to be in this page and then transaction two changed the",
    "start": "400880",
    "end": "408560"
  },
  {
    "text": "some other row in the same page and transaction three changed another row",
    "start": "408560",
    "end": "414800"
  },
  {
    "text": "if those were three ios",
    "start": "414800",
    "end": "420080"
  },
  {
    "text": "because again remember we can we get only to flush the whole thing we don't get to write a byte and when it comes to",
    "start": "420080",
    "end": "426560"
  },
  {
    "text": "databases right so that means i just wrote 8k and then",
    "start": "426560",
    "end": "433039"
  },
  {
    "text": "another 8k and then another 8k worth of almost identical information",
    "start": "433039",
    "end": "439759"
  },
  {
    "text": "with a little bit of tiny things that changed right so",
    "start": "439759",
    "end": "445440"
  },
  {
    "text": "why is it bad first it's bad because you got three ios",
    "start": "445440",
    "end": "451599"
  },
  {
    "text": "so that's three amount of slow time that you got response time wise",
    "start": "451599",
    "end": "459918"
  },
  {
    "text": "the second thing is the work that the ssd is doing because let's say we're working all those with ssds",
    "start": "460639",
    "end": "467840"
  },
  {
    "text": "each right you're writing to the same page so physically the logical",
    "start": "467840",
    "end": "473840"
  },
  {
    "text": "blocks are mapped to the same physical blocks in the ssd and when you",
    "start": "473840",
    "end": "480080"
  },
  {
    "text": "write to it well the ssd says okay this block is taken",
    "start": "480080",
    "end": "485199"
  },
  {
    "text": "right let me allocate a new block for you and write your stuff and then you came up with the same",
    "start": "485199",
    "end": "492240"
  },
  {
    "text": "and then you came up with the same rights to the same page but now wait a",
    "start": "492240",
    "end": "498160"
  },
  {
    "text": "second this block is now used let me allocate a new block for you and then right to that",
    "start": "498160",
    "end": "505199"
  },
  {
    "text": "so now you you're leaving your dirty trace you know in the ssd which the ssd needs",
    "start": "505199",
    "end": "512560"
  },
  {
    "text": "to come back and do this garbage collection to clean up these physical location and update these mappings that",
    "start": "512560",
    "end": "519279"
  },
  {
    "text": "it does so there is a lot of work that we do so what is the what is the",
    "start": "519279",
    "end": "524320"
  },
  {
    "text": "solution to this so how do we solve this we do something called batching very",
    "start": "524320",
    "end": "529440"
  },
  {
    "start": "525000",
    "end": "705000"
  },
  {
    "text": "popular uh concept in computer science says hey you",
    "start": "529440",
    "end": "534720"
  },
  {
    "text": "issued all right right let's wait a little bit let's just buffer these rights a little bit oh you",
    "start": "534720",
    "end": "540959"
  },
  {
    "text": "touched row one you touch row two row two or three i'm gonna write all of them into the cache",
    "start": "540959",
    "end": "547360"
  },
  {
    "text": "and then flush all of these once so we got beautiful single change",
    "start": "547360",
    "end": "556399"
  },
  {
    "text": "in ssd speak it's a single ride but we actually successfully wrote three",
    "start": "556880",
    "end": "562000"
  },
  {
    "text": "transaction worth of changes beautiful stuff but some of you are already yelling at",
    "start": "562000",
    "end": "568080"
  },
  {
    "text": "me i'm saying that's not durable yeah because of writing to the cache",
    "start": "568080",
    "end": "573440"
  },
  {
    "text": "and i crashed my database i lost my changes that's why there's another thing",
    "start": "573440",
    "end": "580240"
  },
  {
    "text": "that people have invented called the wall right ahead",
    "start": "580240",
    "end": "586160"
  },
  {
    "text": "log or another fancy name for it is called the redo log",
    "start": "586160",
    "end": "592399"
  },
  {
    "text": "you know and this is an append only traces of",
    "start": "592399",
    "end": "599440"
  },
  {
    "text": "uh the changes that committed transactions made okay",
    "start": "599440",
    "end": "605200"
  },
  {
    "text": "so we don't touch the physical data file pages you know the rows and the",
    "start": "605200",
    "end": "611680"
  },
  {
    "text": "indexes we don't touch them we tax them in the cache so future transactions can read from the cache but",
    "start": "611680",
    "end": "618959"
  },
  {
    "text": "we record the changes and those changes are tiny tiny and we also do some sort of a magical buffering for these wall",
    "start": "618959",
    "end": "626320"
  },
  {
    "text": "changes we call them the wall changes or or the right ahead log changes and then we flush them and because these are not",
    "start": "626320",
    "end": "633680"
  },
  {
    "text": "uh updates these are rights you insert them so we merge and then we",
    "start": "633680",
    "end": "640000"
  },
  {
    "text": "then we we write to a new page and when we write it says they love this stuff oh you want",
    "start": "640000",
    "end": "646560"
  },
  {
    "text": "to write to a new location i love you this is a new location here go write it we're not going to an",
    "start": "646560",
    "end": "653279"
  },
  {
    "text": "existing page and says ah this there is some garbage here okay let me copy that",
    "start": "653279",
    "end": "659040"
  },
  {
    "text": "stuff and let me create a erase this page and then look at a new location for",
    "start": "659040",
    "end": "664720"
  },
  {
    "text": "you and then let's remap the lba the logical block address to this physical block",
    "start": "664720",
    "end": "671279"
  },
  {
    "text": "address and do the mapping and update the dram in the ssd there's a lot of work that we do on the background",
    "start": "671279",
    "end": "678399"
  },
  {
    "text": "and and this gets worse and worse the more garbage you collect and by garbage i",
    "start": "678399",
    "end": "685279"
  },
  {
    "text": "mean the these uh stale ssd pages effectively",
    "start": "685279",
    "end": "691680"
  },
  {
    "text": "all right so the wall saved us here but no okay we're saying eventually we",
    "start": "692000",
    "end": "698640"
  },
  {
    "text": "flush the pages and now we have a beautiful page okay now let's come to the performance",
    "start": "698640",
    "end": "704320"
  },
  {
    "text": "problem that we have when it comes to reading and and writing",
    "start": "704320",
    "end": "709680"
  },
  {
    "start": "705000",
    "end": "960000"
  },
  {
    "text": "to the pages first of all let's identify the difference between",
    "start": "709680",
    "end": "716079"
  },
  {
    "text": "the different pages a page is a page it's just 8k or 16k",
    "start": "716079",
    "end": "721519"
  },
  {
    "text": "based on the database configuration you can change that by the way as a dba a page is a page",
    "start": "721519",
    "end": "727839"
  },
  {
    "text": "but where this what this page represent is actually critical does this page represent a table that",
    "start": "727839",
    "end": "735839"
  },
  {
    "text": "has absolutely no order let's say you created a table",
    "start": "735839",
    "end": "741519"
  },
  {
    "text": "not a not a mysql because my sequel is always ordered by default let's say it's in postgres right",
    "start": "741519",
    "end": "748240"
  },
  {
    "text": "when you create a table in poscas there is no concept of a primary key",
    "start": "748240",
    "end": "753920"
  },
  {
    "text": "when it comes to clustering because usually primary key is is clustering you",
    "start": "753920",
    "end": "759040"
  },
  {
    "text": "know it clusters the table around the primary key index so that the table",
    "start": "759040",
    "end": "765040"
  },
  {
    "text": "rows are ordered based on that what does that mean that means if if you create a",
    "start": "765040",
    "end": "770399"
  },
  {
    "text": "table in postgres and you insert a row that row goes in",
    "start": "770399",
    "end": "776320"
  },
  {
    "text": "the first location and if you insert another row it goes to the second location if you insert another row it",
    "start": "776320",
    "end": "782240"
  },
  {
    "text": "goes to the third location so let's say you inserted row 7 and then draw 3",
    "start": "782240",
    "end": "787680"
  },
  {
    "text": "and then row 5 and then row 0 and then row 100. these are not ordered and they don't",
    "start": "787680",
    "end": "793920"
  },
  {
    "text": "have to be and when you insert them they just keep appending in the same table so they might fit one",
    "start": "793920",
    "end": "800639"
  },
  {
    "text": "page or two pages depending on the sizes but the order is not enforced that's",
    "start": "800639",
    "end": "806639"
  },
  {
    "text": "what i want to talk about here there is no order when it comes to tables and postgres",
    "start": "806639",
    "end": "812880"
  },
  {
    "text": "but indexes on the other hand are called indexes because they are",
    "start": "812880",
    "end": "819040"
  },
  {
    "text": "ordered what does that mean this is a long topic indexes can stack",
    "start": "819040",
    "end": "824959"
  },
  {
    "text": "construct of something called the b3 data structure i talked about that in a member only video if you want to learn",
    "start": "824959",
    "end": "831120"
  },
  {
    "text": "more about the b3 and it's also uh i talk about it in details on my fundamental database engineering",
    "start": "831120",
    "end": "838399"
  },
  {
    "text": "uh course i talk about b3 is not not the fancy computer science world but",
    "start": "838399",
    "end": "844160"
  },
  {
    "text": "actually in real work you know in real world how do you apply your bb b3",
    "start": "844160",
    "end": "849920"
  },
  {
    "text": "understanding and your in your real world database work effectively",
    "start": "849920",
    "end": "856399"
  },
  {
    "text": "but long story short the b3 is really this data structures that allow you to",
    "start": "856399",
    "end": "862480"
  },
  {
    "text": "search for a specific key right",
    "start": "862480",
    "end": "868160"
  },
  {
    "text": "and then when you find that key the beauty is you found a key let's say you found key you're you're indexing on an",
    "start": "868160",
    "end": "875920"
  },
  {
    "text": "integer field and that's that integer field is is ordered of course because it's in the",
    "start": "875920",
    "end": "881519"
  },
  {
    "text": "index so you get one two three four five and let's say you search for seven if you",
    "start": "881519",
    "end": "886560"
  },
  {
    "text": "found seven you found eight nine ten and you also found uh six five four three",
    "start": "886560",
    "end": "893120"
  },
  {
    "text": "because everything is ordered okay it depends on what is is currently indexed so now",
    "start": "893120",
    "end": "899680"
  },
  {
    "text": "now let's take a page that actually belongs to an index a leaf index page so",
    "start": "899680",
    "end": "908639"
  },
  {
    "text": "if i inserted row 7 and then followed by row one",
    "start": "908639",
    "end": "914720"
  },
  {
    "text": "oh then this is gonna do the magic and find the page exactly where one should",
    "start": "914720",
    "end": "921600"
  },
  {
    "text": "belong and let's say it's an empty so one comes before seven so it will actually or",
    "start": "921600",
    "end": "927920"
  },
  {
    "text": "insert that one and then followed by the seven and then if i insert two it will hey one and seven all right nice let's",
    "start": "927920",
    "end": "934880"
  },
  {
    "text": "just stick one and two and then seven so we'll rewrite the page and",
    "start": "934880",
    "end": "941120"
  },
  {
    "text": "since there is still free space left in the page it can easily do this nice arrangement and then",
    "start": "941120",
    "end": "947759"
  },
  {
    "text": "rewrite the same page effectively right so so it does effectively do this so",
    "start": "947759",
    "end": "953600"
  },
  {
    "text": "it's it's literally sticks the entry",
    "start": "953600",
    "end": "958880"
  },
  {
    "text": "in between the page itself right it's not inserting at the end right",
    "start": "958880",
    "end": "964079"
  },
  {
    "start": "960000",
    "end": "1290000"
  },
  {
    "text": "so now you you're gonna do this one two three and then you start inserting until you will",
    "start": "964079",
    "end": "970480"
  },
  {
    "text": "run into situation where you have a a page that is filled",
    "start": "970480",
    "end": "977360"
  },
  {
    "text": "completely filled but you need to insert a value in the",
    "start": "977360",
    "end": "982560"
  },
  {
    "text": "middle of the page why because there is a gap gaps exist if you if you don't",
    "start": "982560",
    "end": "988399"
  },
  {
    "text": "insert things in order especially if you if you use like an index on",
    "start": "988399",
    "end": "994480"
  },
  {
    "text": "a grid or a uuid right these are random",
    "start": "994480",
    "end": "999839"
  },
  {
    "text": "these are the worst thing to index on to be honest because the",
    "start": "999839",
    "end": "1005040"
  },
  {
    "text": "uh uh you will there's no nice order to them",
    "start": "1005040",
    "end": "1010399"
  },
  {
    "text": "right i believe the new version of uid whatever five or six they are",
    "start": "1010399",
    "end": "1015519"
  },
  {
    "text": "considering doing them in an ordered fashion but as of now they are unordered so if",
    "start": "1015519",
    "end": "1022240"
  },
  {
    "text": "they are unordered you will see a lot of these uh find which page this belongs to",
    "start": "1022240",
    "end": "1028160"
  },
  {
    "text": "and then insert it in the middle and then find it and then insert it in the middle all right",
    "start": "1028160",
    "end": "1033600"
  },
  {
    "text": "so you you go into the situation until you will get a page that is filled with beautiful",
    "start": "1033600",
    "end": "1039600"
  },
  {
    "text": "ordered content let's say we have i don't know from one to ten",
    "start": "1039600",
    "end": "1045839"
  },
  {
    "text": "right so one two three",
    "start": "1045839",
    "end": "1050199"
  },
  {
    "text": "one two three there's no value four so nobody inserted but there's four uh five six seven eight nine ten so value four",
    "start": "1052799",
    "end": "1060240"
  },
  {
    "text": "is missing it's all right it doesn't have to be there right so now i'm gonna insert the value for all its index so i have to",
    "start": "1060240",
    "end": "1068640"
  },
  {
    "text": "insert it right after the three because that's how index works right that's how",
    "start": "1068640",
    "end": "1073840"
  },
  {
    "text": "ordered pages work now when you actually do that there is no",
    "start": "1073840",
    "end": "1079520"
  },
  {
    "text": "space what do you do you gotta split the page",
    "start": "1079520",
    "end": "1085679"
  },
  {
    "text": "one two three becomes another page and then oh uh now we have plenty of space because",
    "start": "1085679",
    "end": "1091919"
  },
  {
    "text": "it's a brand new page insert the 4",
    "start": "1091919",
    "end": "1097120"
  },
  {
    "text": "and then let's insert the 5 6 7 8 and then whatever remains let's say",
    "start": "1097120",
    "end": "1102880"
  },
  {
    "text": "8 and 9 and 10 goes into the new page so now you get another page that is full",
    "start": "1102880",
    "end": "1108799"
  },
  {
    "text": "and then new page that is effectively empty but not all the databases do it this way",
    "start": "1108799",
    "end": "1116000"
  },
  {
    "text": "right it says okay oh some databases will say well",
    "start": "1116000",
    "end": "1121200"
  },
  {
    "text": "i don't want to do this page split so often because what happened if you insert i don't know",
    "start": "1121200",
    "end": "1126320"
  },
  {
    "text": "let's say this is actually double so i'm going to insert another value that happens to be here",
    "start": "1126320",
    "end": "1131760"
  },
  {
    "text": "in this full page now it's it's it becomes really a big problem right you'll end up splitting and splitting",
    "start": "1131760",
    "end": "1138480"
  },
  {
    "text": "again so some databases will split the page and leave",
    "start": "1138480",
    "end": "1143600"
  },
  {
    "text": "plenty of space in both of them actually right so we'll insert them now what is the problem with that now instead of one",
    "start": "1143600",
    "end": "1151760"
  },
  {
    "text": "page you got two pages so in order to read",
    "start": "1151760",
    "end": "1158960"
  },
  {
    "text": "the index in order to scan the index to look for a specific value",
    "start": "1158960",
    "end": "1165600"
  },
  {
    "text": "previously you had to scan one page now you have to scan two so that's two",
    "start": "1165600",
    "end": "1172480"
  },
  {
    "text": "io two logical io when it comes to databases but to this is this way more than two",
    "start": "1172480",
    "end": "1180000"
  },
  {
    "text": "ios obviously right i always talked about how io is very overloaded you know to us a",
    "start": "1180000",
    "end": "1187039"
  },
  {
    "text": "logical io in the database say oh i want to read one page one and page two",
    "start": "1187039",
    "end": "1193440"
  },
  {
    "text": "that's two logical reads you know and also logical reads also",
    "start": "1193440",
    "end": "1198720"
  },
  {
    "text": "means you're reading from the cache but when you actually issue two i or even physical i own when it comes to database",
    "start": "1198720",
    "end": "1206640"
  },
  {
    "text": "speak that effectively doesn't translate to two ssd ios right",
    "start": "1206640",
    "end": "1214400"
  },
  {
    "text": "you might need to read multiple blocks in multiple locations the ssd might need to do some shuffling",
    "start": "1214400",
    "end": "1222400"
  },
  {
    "text": "to get you the data so there is a lot more work and as a result you get into this fragmentation of indexes",
    "start": "1222400",
    "end": "1230559"
  },
  {
    "text": "and i give you a very simple example here right so imagine",
    "start": "1230559",
    "end": "1236000"
  },
  {
    "text": "you're churning content you're adding new content that are not ordered by default",
    "start": "1236000",
    "end": "1243360"
  },
  {
    "text": "but because it's not ordered the way you're inserting it is not",
    "start": "1243360",
    "end": "1248640"
  },
  {
    "text": "ordered then the index has to reshuffle and reorder because it cannot see the future",
    "start": "1248640",
    "end": "1255440"
  },
  {
    "text": "right so we'll just insert values and insert values and then oh we need to split the page split the page split the",
    "start": "1255440",
    "end": "1261840"
  },
  {
    "text": "picture so you'll end up splitting many many many pages and at the end of the day",
    "start": "1261840",
    "end": "1268000"
  },
  {
    "text": "you get a lot of index pages that are that has a lot of empty spaces and you'll find",
    "start": "1268000",
    "end": "1275520"
  },
  {
    "text": "yourself reading multiple pages just to get to the results that you want",
    "start": "1275520",
    "end": "1281679"
  },
  {
    "text": "and the larger the data the slower it will get effectively",
    "start": "1281679",
    "end": "1286960"
  },
  {
    "text": "it's fascinating when you think about all that stuff",
    "start": "1286960",
    "end": "1291720"
  },
  {
    "start": "1290000",
    "end": "1710000"
  },
  {
    "text": "that's why there is a configuration in every database it's called the fill factor",
    "start": "1292159",
    "end": "1298720"
  },
  {
    "text": "fill factor it's called a page for the fact that",
    "start": "1298720",
    "end": "1304240"
  },
  {
    "text": "says hey when you're inserting this stuff when you're inserting brand new stuff",
    "start": "1304240",
    "end": "1309360"
  },
  {
    "text": "you know the the page fill factor is 75 percent fill the page up until 75 percent and",
    "start": "1309360",
    "end": "1317280"
  },
  {
    "text": "leave this 25 for emergency cases where you had to split for example or in case",
    "start": "1317280",
    "end": "1324159"
  },
  {
    "text": "of postgres there's this hot optimization heap only tuple optimizations that's all in that",
    "start": "1324159",
    "end": "1330320"
  },
  {
    "text": "particular case uh let's use this 25 so this space is left for dire",
    "start": "1330320",
    "end": "1337559"
  },
  {
    "text": "circumstances to avoid these effectively page splits but obviously the the",
    "start": "1337559",
    "end": "1344840"
  },
  {
    "text": "the smaller the fill factor you're going to get into the same problem you're going to get",
    "start": "1344840",
    "end": "1350080"
  },
  {
    "text": "into index fragmentation again right so you have to be careful with the",
    "start": "1350080",
    "end": "1357200"
  },
  {
    "text": "how small or how big your fill factor is 80 percent i think it's a recommended one but again it depends on your use",
    "start": "1357200",
    "end": "1363200"
  },
  {
    "text": "cases and stuff like that but yeah uh when you think about how",
    "start": "1363200",
    "end": "1369679"
  },
  {
    "text": "how much work we're doing you know it's just fascinating",
    "start": "1369679",
    "end": "1375520"
  },
  {
    "text": "how do you solve this the index for fragmentation now usually dropping and recreating the index will",
    "start": "1375520",
    "end": "1382000"
  },
  {
    "text": "solve it because now that we know all the content we know nothing is",
    "start": "1382000",
    "end": "1387679"
  },
  {
    "text": "going to get inserted after that we have a fragmented index let's drop and",
    "start": "1387679",
    "end": "1392880"
  },
  {
    "text": "recreate the index with 100 percent fill factor if you know that is this going to be a",
    "start": "1392880",
    "end": "1398799"
  },
  {
    "text": "read-only definitely 100 there's no point as far as i know to make it less than that because hey",
    "start": "1398799",
    "end": "1405440"
  },
  {
    "text": "you're not going to receive new rights and i think another thing i forgot to mention is",
    "start": "1405440",
    "end": "1412240"
  },
  {
    "text": "about my sequel my sequel is designed this way so the primary key that you pick for",
    "start": "1412240",
    "end": "1419520"
  },
  {
    "text": "mysql can really make or break your architecture when it",
    "start": "1419520",
    "end": "1424559"
  },
  {
    "text": "comes to data modeling you know picking uuid is usually a bad idea you know not only is just",
    "start": "1424559",
    "end": "1431919"
  },
  {
    "text": "thrashes memory pages when you insert new random uu ids",
    "start": "1431919",
    "end": "1438400"
  },
  {
    "text": "because let's be honest the chances that you're gonna hit your new id hits a page that happens to",
    "start": "1438400",
    "end": "1446000"
  },
  {
    "text": "be cash is almost nil you know it's not like you're inserting one two three four five six seven eight",
    "start": "1446000",
    "end": "1453760"
  },
  {
    "text": "nine ten it's like oh eleven if you're inserting 11 oh 11 is actually",
    "start": "1453760",
    "end": "1460400"
  },
  {
    "text": "supposed to fit in this page which has the lattice and three which is 10. and",
    "start": "1460400",
    "end": "1465440"
  },
  {
    "text": "the database does this calculation really easily right so",
    "start": "1465440",
    "end": "1472760"
  },
  {
    "text": "that page is most of the time is cash because someone just",
    "start": "1472960",
    "end": "1478080"
  },
  {
    "text": "touched it effectively in the buffer pool so if you think about it you really need to understand what is",
    "start": "1478080",
    "end": "1485039"
  },
  {
    "text": "going on behind the scenes in order to build effective backend applications and",
    "start": "1485039",
    "end": "1491919"
  },
  {
    "text": "don't come at me with oh no circle doesn't have all this problem can i just use nosql you just",
    "start": "1491919",
    "end": "1499039"
  },
  {
    "text": "you you'll basically you're closing your eyes effectively because these problems exist in every",
    "start": "1499039",
    "end": "1506720"
  },
  {
    "text": "database no sequel just happened to abstract it away from you right it still exists and i believe",
    "start": "1506720",
    "end": "1513840"
  },
  {
    "text": "mongodb is adding these options for you know uh for engineers because",
    "start": "1513840",
    "end": "1519279"
  },
  {
    "text": "at the end of the day it's like all these databases no matter what the flavor they gotta abide by the",
    "start": "1519279",
    "end": "1525520"
  },
  {
    "text": "fundamentals this is these are block storage you gotta do block storage you know you're gonna have a file system",
    "start": "1525520",
    "end": "1531919"
  },
  {
    "text": "without gonna be at the mercy of a file system which is another abstraction that's why some databases i believe",
    "start": "1531919",
    "end": "1538799"
  },
  {
    "text": "try to skip the operating system to skip this file system mumbo jumbo and just immediately goes to talk to the ssd",
    "start": "1538799",
    "end": "1546559"
  },
  {
    "text": "nvme uh i don't know if you know this nvme is this spec",
    "start": "1546559",
    "end": "1552080"
  },
  {
    "text": "that is that sits on top of the ssd the spec",
    "start": "1552080",
    "end": "1557760"
  },
  {
    "text": "comes up they came up with a new architecture command set called the key value which",
    "start": "1557760",
    "end": "1563360"
  },
  {
    "text": "gives you just very simple no blocks you know key value hey i want go to this key",
    "start": "1563360",
    "end": "1568880"
  },
  {
    "text": "and i want this value and the va and the value could be variable i don't know what's the smallest size to be honest",
    "start": "1568880",
    "end": "1575360"
  },
  {
    "text": "but uh probably the smallest size is the page size right you can do you can go lower than that this is just",
    "start": "1575360",
    "end": "1581840"
  },
  {
    "text": "the limitation of the ssd but i might be wrong there but yeah going directly",
    "start": "1581840",
    "end": "1587440"
  },
  {
    "text": "if you i really understand how to talk to this is do you can skip the whole operating system right",
    "start": "1587440",
    "end": "1593679"
  },
  {
    "text": "and databases mostly do that today anyway right like most databases when you issue",
    "start": "1593679",
    "end": "1601279"
  },
  {
    "text": "most application when you issue a right to the operating system",
    "start": "1601279",
    "end": "1606640"
  },
  {
    "text": "it doesn't really write to desk you know the operating",
    "start": "1606640",
    "end": "1612000"
  },
  {
    "text": "system writes it into its file system cache uh",
    "start": "1612000",
    "end": "1617200"
  },
  {
    "text": "the same the same reason why we have logical rights and the databases we write it to the cache so we can batch",
    "start": "1617200",
    "end": "1623919"
  },
  {
    "text": "right same thing the operating system does that doesn't fly with databases because databases want to be durable they don't",
    "start": "1623919",
    "end": "1630720"
  },
  {
    "text": "trust the os they want to write directly to the desk when you do that",
    "start": "1630720",
    "end": "1636480"
  },
  {
    "text": "you get you get into problems right you you're always my crash and we might lose the data we don't can't afford them",
    "start": "1636480",
    "end": "1642799"
  },
  {
    "text": "especially the wall changes the other kind of rights yeah",
    "start": "1642799",
    "end": "1649120"
  },
  {
    "text": "it can it can go directly to the cache the os cache but if you're doing like a wall changes flush",
    "start": "1649120",
    "end": "1656880"
  },
  {
    "text": "fsync which is the this synchronous rights to disk",
    "start": "1656880",
    "end": "1662720"
  },
  {
    "text": "must skip the cache that's why there's this variable called o direct",
    "start": "1662720",
    "end": "1669600"
  },
  {
    "text": "that uh i believe it's called order right that just skips all this thing and write to this i think i threw a lot of",
    "start": "1669600",
    "end": "1675520"
  },
  {
    "text": "information this is this is a very chunky and you know",
    "start": "1675520",
    "end": "1681760"
  },
  {
    "text": "there's a lot of uh this episode has been i think it's not one of my best",
    "start": "1681760",
    "end": "1688159"
  },
  {
    "text": "i need to get better at summarizing things and just stick to the topic i think i don't know i think everything",
    "start": "1688159",
    "end": "1694559"
  },
  {
    "text": "was related when i discussed might be wrong obviously you got a",
    "start": "1694559",
    "end": "1699760"
  },
  {
    "text": "some some of them some of these are a mess some of these are a hit at the end of the day guys",
    "start": "1699760",
    "end": "1706240"
  },
  {
    "text": "hope you enjoyed this episode of the page splits so as a summary",
    "start": "1706240",
    "end": "1712880"
  },
  {
    "start": "1710000",
    "end": "1866000"
  },
  {
    "text": "this week okay we can just summarize this thing a page a database logical page is just a bunch of bytes that are",
    "start": "1712880",
    "end": "1719520"
  },
  {
    "text": "grouped together and they're fixed size mostly right and this is the unit that the database",
    "start": "1719520",
    "end": "1725520"
  },
  {
    "text": "uses to read and write we only read in pages we write in pages that's what we do a page or present can represent the",
    "start": "1725520",
    "end": "1733200"
  },
  {
    "text": "heap table itself which is a bunch of rows or columns in case of a column store",
    "start": "1733200",
    "end": "1739279"
  },
  {
    "text": "and or it could also represent the index if you have an index these index are",
    "start": "1739279",
    "end": "1745840"
  },
  {
    "text": "ordered right these index leave pages effectively are ordered and this is",
    "start": "1745840",
    "end": "1751120"
  },
  {
    "text": "where it gets tricky anything in the world which uh need to enforce ordering within a page",
    "start": "1751120",
    "end": "1758320"
  },
  {
    "text": "that indicates that if you have certain values you need to jump into the middle",
    "start": "1758320",
    "end": "1763679"
  },
  {
    "text": "of the page and insert that value in that particular order because otherwise the index is useless right you gotta",
    "start": "1763679",
    "end": "1771520"
  },
  {
    "text": "effectively guarantee the order the order of the physical location of the rows or the",
    "start": "1771520",
    "end": "1779279"
  },
  {
    "text": "keys and that's the main problem when it comes to uh",
    "start": "1779279",
    "end": "1785679"
  },
  {
    "text": "page splitting that's main codes let's say so if i want to insert something in",
    "start": "1785679",
    "end": "1790720"
  },
  {
    "text": "the middle in a page that happened to be full then i can't right because the page is",
    "start": "1790720",
    "end": "1797200"
  },
  {
    "text": "full so we end up splitting the page and putting this content on two pages right",
    "start": "1797200",
    "end": "1803520"
  },
  {
    "text": "now we have free free space on both pages we're going to insert the row the neural in the",
    "start": "1803520",
    "end": "1809039"
  },
  {
    "text": "appropriate page this leaves us with a lot of big",
    "start": "1809039",
    "end": "1814159"
  },
  {
    "text": "spaces effectively in the page right and as a result when we issue an io",
    "start": "1814159",
    "end": "1822720"
  },
  {
    "text": "we get only two pages to get the full picture instead of one previously right",
    "start": "1822720",
    "end": "1829120"
  },
  {
    "text": "and that is the main problem indexes become fragmented the more imagine doing this over and over and over and over and",
    "start": "1829120",
    "end": "1835760"
  },
  {
    "text": "over and over again right with many many indexes pages that are fragmented then you get",
    "start": "1835760",
    "end": "1841600"
  },
  {
    "text": "into this situation where where index scans in particular becomes",
    "start": "1841600",
    "end": "1849279"
  },
  {
    "text": "really slow all right so that's that's the summary of the episode obviously i could have done this in one minute but",
    "start": "1849279",
    "end": "1855600"
  },
  {
    "text": "what's the fun we're gonna talk about everything here that's what we do on the",
    "start": "1855600",
    "end": "1860720"
  },
  {
    "text": "back engineering show all right guys that's it for me today i'm gonna see you on the next one you guys stay awesome goodbye",
    "start": "1860720",
    "end": "1867679"
  }
]