[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "what is going on guys my name is Hussein",
    "start": "0",
    "end": "2429"
  },
  {
    "text": "and this video I want to discuss",
    "start": "2429",
    "end": "4020"
  },
  {
    "text": "RabbitMQ and http2 rabbitmq I made a",
    "start": "4020",
    "end": "8940"
  },
  {
    "text": "video about ramen q check it out guys",
    "start": "8940",
    "end": "10590"
  },
  {
    "start": "10000",
    "end": "190000"
  },
  {
    "text": "here it's a very interesting message",
    "start": "10590",
    "end": "13200"
  },
  {
    "text": "cube that I have my doubt about but I a",
    "start": "13200",
    "end": "16379"
  },
  {
    "text": "little bit of changing my mind about it",
    "start": "16379",
    "end": "18990"
  },
  {
    "text": "because it's a really really great tech",
    "start": "18990",
    "end": "20850"
  },
  {
    "text": "and it had a feature that I fall in love",
    "start": "20850",
    "end": "24930"
  },
  {
    "text": "the moment I write about it and it's",
    "start": "24930",
    "end": "27029"
  },
  {
    "text": "called channels and let's talk about",
    "start": "27029",
    "end": "29039"
  },
  {
    "text": "that a little bit and then compare it to",
    "start": "29039",
    "end": "30859"
  },
  {
    "text": "http to streams that also we're going to",
    "start": "30859",
    "end": "34649"
  },
  {
    "text": "talk about it right so when you have an",
    "start": "34649",
    "end": "38870"
  },
  {
    "text": "RabbitMQ server or a broker right here",
    "start": "38870",
    "end": "42120"
  },
  {
    "text": "right and you have a client which is",
    "start": "42120",
    "end": "44070"
  },
  {
    "text": "usually called a consumer the client",
    "start": "44070",
    "end": "47420"
  },
  {
    "text": "establishes a TCP connection between",
    "start": "47420",
    "end": "49890"
  },
  {
    "text": "itself and the server and we know how TV",
    "start": "49890",
    "end": "53460"
  },
  {
    "text": "works guys check it out there is in the",
    "start": "53460",
    "end": "56340"
  },
  {
    "text": "client library for RabbitMQ they add",
    "start": "56340",
    "end": "60329"
  },
  {
    "text": "some abstraction called the channel and",
    "start": "60329",
    "end": "63409"
  },
  {
    "text": "the reason they did that is like every",
    "start": "63409",
    "end": "66869"
  },
  {
    "text": "request you want to send to the server",
    "start": "66869",
    "end": "69590"
  },
  {
    "text": "you have to specify the channel ID and",
    "start": "69590",
    "end": "72869"
  },
  {
    "text": "they have headers for every course they",
    "start": "72869",
    "end": "75000"
  },
  {
    "text": "send tagged with the channel ID and you",
    "start": "75000",
    "end": "77549"
  },
  {
    "text": "might say why do you want to do this",
    "start": "77549",
    "end": "79259"
  },
  {
    "text": "this is so awesome technology that",
    "start": "79259",
    "end": "83130"
  },
  {
    "text": "reason is instead of having multiple",
    "start": "83130",
    "end": "86360"
  },
  {
    "text": "clients to establish multiple TCP",
    "start": "86360",
    "end": "90140"
  },
  {
    "text": "connections to the server you now have",
    "start": "90140",
    "end": "93869"
  },
  {
    "text": "one TCP connection and all of these",
    "start": "93869",
    "end": "96720"
  },
  {
    "text": "requests are funneled in the team's TCP",
    "start": "96720",
    "end": "99479"
  },
  {
    "text": "connection and now you can send a",
    "start": "99479",
    "end": "101759"
  },
  {
    "text": "request and expect the response back",
    "start": "101759",
    "end": "103950"
  },
  {
    "text": "even if that request is already you're",
    "start": "103950",
    "end": "107430"
  },
  {
    "text": "sending another request in the same TCP",
    "start": "107430",
    "end": "109740"
  },
  {
    "text": "channel because they are very uniquely",
    "start": "109740",
    "end": "113640"
  },
  {
    "text": "tagged with the channel ID so now you",
    "start": "113640",
    "end": "116460"
  },
  {
    "text": "can simultaneously send requests on the",
    "start": "116460",
    "end": "119310"
  },
  {
    "text": "same TCP connection and that's exactly",
    "start": "119310",
    "end": "121770"
  },
  {
    "text": "how http/2 works guys the idea of",
    "start": "121770",
    "end": "126540"
  },
  {
    "text": "streams browsers before HTTP 2 what did",
    "start": "126540",
    "end": "129929"
  },
  {
    "text": "they do remember every request you send",
    "start": "129929",
    "end": "133120"
  },
  {
    "text": "you can only send one request at a time",
    "start": "133120",
    "end": "135489"
  },
  {
    "text": "and you better send one request in a",
    "start": "135489",
    "end": "139360"
  },
  {
    "text": "time because you cannot we don't know",
    "start": "139360",
    "end": "142200"
  },
  {
    "text": "that or suppose that comes back which",
    "start": "142200",
    "end": "145090"
  },
  {
    "text": "request was it for because it's just",
    "start": "145090",
    "end": "149290"
  },
  {
    "text": "garbage data coming out and in right so",
    "start": "149290",
    "end": "151690"
  },
  {
    "text": "they made the decision way back to so",
    "start": "151690",
    "end": "154900"
  },
  {
    "text": "Lois in her own request and wait for the",
    "start": "154900",
    "end": "158140"
  },
  {
    "text": "response to come back and that request",
    "start": "158140",
    "end": "160269"
  },
  {
    "text": "must be for that that response must be",
    "start": "160269",
    "end": "162099"
  },
  {
    "text": "for that request and so on that's that's",
    "start": "162099",
    "end": "164079"
  },
  {
    "text": "called essentially head-of-line blocking",
    "start": "164079",
    "end": "165879"
  },
  {
    "text": "so just like so that the rest of the",
    "start": "165879",
    "end": "168489"
  },
  {
    "text": "requests are blocked until that response",
    "start": "168489",
    "end": "171459"
  },
  {
    "text": "is actually the first response or a",
    "start": "171459",
    "end": "172660"
  },
  {
    "text": "sweep and that's a problem right and",
    "start": "172660",
    "end": "174519"
  },
  {
    "text": "that same problem exists with TCP and",
    "start": "174519",
    "end": "177010"
  },
  {
    "text": "any requests response system so what",
    "start": "177010",
    "end": "179799"
  },
  {
    "text": "RabbitMQ did is they added this",
    "start": "179799",
    "end": "181510"
  },
  {
    "text": "abstraction of the idea of channels in",
    "start": "181510",
    "end": "184390"
  },
  {
    "text": "less TCP connection so every request is",
    "start": "184390",
    "end": "188220"
  },
  {
    "text": "almost uniquely identified in the",
    "start": "188220",
    "end": "190870"
  },
  {
    "start": "190000",
    "end": "360000"
  },
  {
    "text": "channel itself that very similar to the",
    "start": "190870",
    "end": "196599"
  },
  {
    "text": "idea of HTTP two streams which we talked",
    "start": "196599",
    "end": "199870"
  },
  {
    "text": "about it right here go check it out so",
    "start": "199870",
    "end": "202750"
  },
  {
    "text": "HTTP 2 streams serves a very similar",
    "start": "202750",
    "end": "208000"
  },
  {
    "text": "idea you have one TCP connection and",
    "start": "208000",
    "end": "210879"
  },
  {
    "text": "stuff six like what the browser's used",
    "start": "210879",
    "end": "213609"
  },
  {
    "text": "to do an HTTP you want and then if you",
    "start": "213609",
    "end": "216700"
  },
  {
    "text": "make a good request they are tacked to",
    "start": "216700",
    "end": "219220"
  },
  {
    "text": "the stream ID if you make a post request",
    "start": "219220",
    "end": "222060"
  },
  {
    "text": "simultaneously they are tagged with the",
    "start": "222060",
    "end": "224199"
  },
  {
    "text": "stream ID if you make another get",
    "start": "224199",
    "end": "225879"
  },
  {
    "text": "request to fetch an image if you make",
    "start": "225879",
    "end": "227799"
  },
  {
    "text": "another request to miss efficient CSS or",
    "start": "227799",
    "end": "229989"
  },
  {
    "text": "or an HTML file or JavaScript file",
    "start": "229989",
    "end": "233590"
  },
  {
    "text": "they are tagged uniquely with a stream",
    "start": "233590",
    "end": "236049"
  },
  {
    "text": "ID very similar to the channel ID and",
    "start": "236049",
    "end": "238120"
  },
  {
    "text": "they are shoved into the TCP connection",
    "start": "238120",
    "end": "241540"
  },
  {
    "text": "right and now when you come back the the",
    "start": "241540",
    "end": "245440"
  },
  {
    "text": "response that comes back is tagged with",
    "start": "245440",
    "end": "247629"
  },
  {
    "text": "a stream ID so you know oh so you know",
    "start": "247629",
    "end": "251410"
  },
  {
    "text": "that oh this this response is actually",
    "start": "251410",
    "end": "253359"
  },
  {
    "text": "for this stream alright so you actually",
    "start": "253359",
    "end": "255160"
  },
  {
    "text": "can assemble things in the client so it",
    "start": "255160",
    "end": "257769"
  },
  {
    "text": "doesn't matter what the order comes back",
    "start": "257769",
    "end": "259539"
  },
  {
    "text": "if this comes back or this comes back",
    "start": "259539",
    "end": "261549"
  },
  {
    "text": "first and it doesn't really matter so",
    "start": "261549",
    "end": "264400"
  },
  {
    "text": "even if there are some delays",
    "start": "264400",
    "end": "266889"
  },
  {
    "text": "so why I made this videos like I'm not",
    "start": "266889",
    "end": "269590"
  },
  {
    "text": "sure who actually invented this idea of",
    "start": "269590",
    "end": "273030"
  },
  {
    "text": "multi concurrent tagging of requests so",
    "start": "273030",
    "end": "277710"
  },
  {
    "text": "RabbitMQ or HTTP - or speedy Google was",
    "start": "277710",
    "end": "281439"
  },
  {
    "text": "invented this idea right so I was like",
    "start": "281439",
    "end": "283719"
  },
  {
    "text": "imma just we're very curious about this",
    "start": "283719",
    "end": "285490"
  },
  {
    "text": "so both obviously come back to that find",
    "start": "285490",
    "end": "289300"
  },
  {
    "text": "out my final point is both HTTP 2 and",
    "start": "289300",
    "end": "292860"
  },
  {
    "text": "rabbitmq suffer from a very severe",
    "start": "292860",
    "end": "295689"
  },
  {
    "text": "problem which is the TCP it's a problem",
    "start": "295689",
    "end": "300639"
  },
  {
    "text": "with the TCP itself right and the",
    "start": "300639",
    "end": "304300"
  },
  {
    "text": "problems TCP is like if you sing a",
    "start": "304300",
    "end": "305860"
  },
  {
    "text": "packet and the packet is damaged or",
    "start": "305860",
    "end": "308800"
  },
  {
    "text": "haven't received by the server and there",
    "start": "308800",
    "end": "310689"
  },
  {
    "text": "is no acknowledgement and that's a",
    "start": "310689",
    "end": "312789"
  },
  {
    "text": "packet right it's just a packet the",
    "start": "312789",
    "end": "315580"
  },
  {
    "text": "client always retransmit that packet",
    "start": "315580",
    "end": "320139"
  },
  {
    "text": "back right and that causes any other",
    "start": "320139",
    "end": "326370"
  },
  {
    "text": "requests packets that you are about to",
    "start": "326370",
    "end": "329439"
  },
  {
    "text": "send to have wait for an acknowledgment",
    "start": "329439",
    "end": "333909"
  },
  {
    "text": "to be received from the server this is a",
    "start": "333909",
    "end": "337419"
  },
  {
    "text": "packet level guys this is not at this",
    "start": "337419",
    "end": "339370"
  },
  {
    "text": "stream level so if your that means if",
    "start": "339370",
    "end": "343000"
  },
  {
    "text": "stream 1 technically didn't receive an",
    "start": "343000",
    "end": "346360"
  },
  {
    "text": "acknowledgement stream 2 cannot even be",
    "start": "346360",
    "end": "349180"
  },
  {
    "text": "fired to the server which is very bad",
    "start": "349180",
    "end": "351789"
  },
  {
    "text": "right that's a problem with TCP that's a",
    "start": "351789",
    "end": "354699"
  },
  {
    "text": "very good and and that problem carries",
    "start": "354699",
    "end": "357129"
  },
  {
    "text": "weather I bet in McCue it's a very",
    "start": "357129",
    "end": "359319"
  },
  {
    "text": "similar problem and that's why guys",
    "start": "359319",
    "end": "361439"
  },
  {
    "start": "360000",
    "end": "590000"
  },
  {
    "text": "quick was invented to say so you know",
    "start": "361439",
    "end": "363699"
  },
  {
    "text": "what we cannot rely on on the idea of",
    "start": "363699",
    "end": "366969"
  },
  {
    "text": "free transmission to put it at then at",
    "start": "366969",
    "end": "369729"
  },
  {
    "text": "that lower level of our architecture you",
    "start": "369729",
    "end": "373089"
  },
  {
    "text": "cannot implement that at the lower level",
    "start": "373089",
    "end": "375339"
  },
  {
    "text": "so what they said is that I'm not",
    "start": "375339",
    "end": "377740"
  },
  {
    "text": "getting we're gonna know they're gonna",
    "start": "377740",
    "end": "378520"
  },
  {
    "text": "use TCP for retransmission we gonna use",
    "start": "378520",
    "end": "382000"
  },
  {
    "text": "the barebone UDP which doesn't have any",
    "start": "382000",
    "end": "385240"
  },
  {
    "text": "of this feature it just sends a request",
    "start": "385240",
    "end": "386830"
  },
  {
    "text": "and relies on the higher level of",
    "start": "386830",
    "end": "391319"
  },
  {
    "text": "application to actually does that",
    "start": "391319",
    "end": "395199"
  },
  {
    "text": "retransmission and verification of the",
    "start": "395199",
    "end": "397209"
  },
  {
    "text": "packets and that's what quake",
    "start": "397209",
    "end": "399760"
  },
  {
    "text": "dead quick implemented re-implemented",
    "start": "399760",
    "end": "402760"
  },
  {
    "text": "tcp by the higher-level and they built",
    "start": "402760",
    "end": "405280"
  },
  {
    "text": "and stream in it so now you can use one",
    "start": "405280",
    "end": "408960"
  },
  {
    "text": "logical connection there are no",
    "start": "408960",
    "end": "410920"
  },
  {
    "text": "connections in UDP so they create a kind",
    "start": "410920",
    "end": "413020"
  },
  {
    "text": "of a similar unique logical connection",
    "start": "413020",
    "end": "415990"
  },
  {
    "text": "and now you can send as many requests as",
    "start": "415990",
    "end": "418570"
  },
  {
    "text": "you want and they are tagged with a",
    "start": "418570",
    "end": "420490"
  },
  {
    "text": "stream ID and if one stream had a bug in",
    "start": "420490",
    "end": "427360"
  },
  {
    "text": "it I don't know that packet didn't",
    "start": "427360",
    "end": "428920"
  },
  {
    "text": "receive correctly that the quick client",
    "start": "428920",
    "end": "433390"
  },
  {
    "text": "will only return submit that it will not",
    "start": "433390",
    "end": "436930"
  },
  {
    "text": "stop the rest of the streams ran all the",
    "start": "436930",
    "end": "439630"
  },
  {
    "text": "other channels if you want to call them",
    "start": "439630",
    "end": "441310"
  },
  {
    "text": "right the rest of the stuff will just go",
    "start": "441310",
    "end": "443290"
  },
  {
    "text": "normally right because they have nothing",
    "start": "443290",
    "end": "445390"
  },
  {
    "text": "to do with that first one because if the",
    "start": "445390",
    "end": "447550"
  },
  {
    "text": "stream too is good or stream 3 is good",
    "start": "447550",
    "end": "449530"
  },
  {
    "text": "instead even one is bad why do you have",
    "start": "449530",
    "end": "451960"
  },
  {
    "text": "them to suffer right likewise did he",
    "start": "451960",
    "end": "453700"
  },
  {
    "text": "beat us today right TB to death if",
    "start": "453700",
    "end": "455920"
  },
  {
    "text": "stream 1 is bad",
    "start": "455920",
    "end": "457450"
  },
  {
    "text": "or has a I don't know it was transferred",
    "start": "457450",
    "end": "460210"
  },
  {
    "text": "in the ocean the fibre was caught right",
    "start": "460210",
    "end": "464460"
  },
  {
    "text": "the stream one will suffer and stream to",
    "start": "464460",
    "end": "468640"
  },
  {
    "text": "a stream 3 or stream 5 all the streams",
    "start": "468640",
    "end": "470800"
  },
  {
    "text": "will suffer so you will feel the",
    "start": "470800",
    "end": "472300"
  },
  {
    "text": "slowness with HTTP 2 that's the problem",
    "start": "472300",
    "end": "475060"
  },
  {
    "text": "with this right so quick solves this",
    "start": "475060",
    "end": "478060"
  },
  {
    "text": "problem very elegantly at that level and",
    "start": "478060",
    "end": "480880"
  },
  {
    "text": "now HTTP 3 is built as a very thin layer",
    "start": "480880",
    "end": "486370"
  },
  {
    "text": "on top of quick that uses all this",
    "start": "486370",
    "end": "489400"
  },
  {
    "text": "protocols that brings me back to the",
    "start": "489400",
    "end": "493210"
  },
  {
    "text": "farm my final point is like I think most",
    "start": "493210",
    "end": "497220"
  },
  {
    "text": "message queues right and databases and",
    "start": "497220",
    "end": "503490"
  },
  {
    "text": "protocols should start using cues to be",
    "start": "503490",
    "end": "506470"
  },
  {
    "text": "honest right because that solves a huge",
    "start": "506470",
    "end": "509440"
  },
  {
    "text": "problem with TCP T if you have this",
    "start": "509440",
    "end": "511420"
  },
  {
    "text": "problem with retransmission and the",
    "start": "511420",
    "end": "513580"
  },
  {
    "text": "packets right",
    "start": "513580",
    "end": "514539"
  },
  {
    "text": "and now concurrent sending concurrent",
    "start": "514540",
    "end": "516849"
  },
  {
    "text": "requests at the same time and dad just",
    "start": "516849",
    "end": "520590"
  },
  {
    "text": "magnificently quick solves this problem",
    "start": "520590",
    "end": "522669"
  },
  {
    "text": "for you right today I just wanted to",
    "start": "522669",
    "end": "524410"
  },
  {
    "text": "talk about rabbitmq and the idea of",
    "start": "524410",
    "end": "527050"
  },
  {
    "text": "channels and then HTTP 2 and then how",
    "start": "527050",
    "end": "531370"
  },
  {
    "text": "both of these are having",
    "start": "531370",
    "end": "533170"
  },
  {
    "text": "this problem now solves with quick and",
    "start": "533170",
    "end": "535720"
  },
  {
    "text": "quick at the wrong problem we're gonna",
    "start": "535720",
    "end": "538180"
  },
  {
    "text": "discuss in this channel but definitely",
    "start": "538180",
    "end": "540700"
  },
  {
    "text": "I'm gonna make a video dedicated for a",
    "start": "540700",
    "end": "542860"
  },
  {
    "text": "quick but I was very interested to know",
    "start": "542860",
    "end": "544899"
  },
  {
    "text": "that the similarities between RabbitMQ",
    "start": "544899",
    "end": "547240"
  },
  {
    "text": "as its own from scratch protocol",
    "start": "547240",
    "end": "550389"
  },
  {
    "text": "building of the channels very similar to",
    "start": "550389",
    "end": "553300"
  },
  {
    "text": "the HTTP 2 protocol all right guys I'm",
    "start": "553300",
    "end": "557139"
  },
  {
    "text": "gonna see you next one leave a like if",
    "start": "557139",
    "end": "558940"
  },
  {
    "text": "you liked this video subscribe and what",
    "start": "558940",
    "end": "561130"
  },
  {
    "text": "do you guys think what is the future",
    "start": "561130",
    "end": "563139"
  },
  {
    "text": "protocol do you think quick will hold to",
    "start": "563139",
    "end": "565420"
  },
  {
    "text": "its glory and it's gonna become really",
    "start": "565420",
    "end": "567970"
  },
  {
    "text": "well known protocol that is used",
    "start": "567970",
    "end": "569529"
  },
  {
    "text": "everywhere because I'm I have a good",
    "start": "569529",
    "end": "573220"
  },
  {
    "text": "feeling in the next 10 years quick who's",
    "start": "573220",
    "end": "575230"
  },
  {
    "text": "gonna become a big thing there's one",
    "start": "575230",
    "end": "577029"
  },
  {
    "text": "problem that I'm gonna not gonna mention",
    "start": "577029",
    "end": "578740"
  },
  {
    "text": "here is essentially the UDP and how the",
    "start": "578740",
    "end": "581199"
  },
  {
    "text": "internet treats UDP but that's a foreign",
    "start": "581199",
    "end": "583899"
  },
  {
    "text": "another video like this video we like it",
    "start": "583899",
    "end": "587019"
  },
  {
    "text": "I'm gonna see you in the next one you",
    "start": "587019",
    "end": "588100"
  },
  {
    "text": "guys stay awesome",
    "start": "588100",
    "end": "590910"
  }
]