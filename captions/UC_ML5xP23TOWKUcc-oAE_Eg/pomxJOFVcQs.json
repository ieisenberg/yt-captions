[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "acid are four properties of relational databases they are atomicity consistency",
    "start": "30",
    "end": "5370"
  },
  {
    "text": "isolation and durability and I think any one working with relational databases",
    "start": "5370",
    "end": "11550"
  },
  {
    "text": "like Bosphorus my sequel sequel server oracle should really understand these",
    "start": "11550",
    "end": "19010"
  },
  {
    "text": "properties in this video we will go through the four properties of",
    "start": "19010",
    "end": "24330"
  },
  {
    "text": "relational databases explain why each is critical to make a relational database",
    "start": "24330",
    "end": "30990"
  },
  {
    "text": "we'll also talk about why some people are moving away from relational",
    "start": "30990",
    "end": "36770"
  },
  {
    "text": "databases to a no sequel database kind of ditching one aspect one vertical of",
    "start": "36770",
    "end": "44520"
  },
  {
    "text": "these properties which is essentially the consistency if you new here welcome my name is Hussein and in this",
    "start": "44520",
    "end": "52050"
  },
  {
    "text": "channel we discuss all sorts of software engineering by example so if you want to become a better software engineer",
    "start": "52050",
    "end": "57329"
  },
  {
    "text": "considering a subscribing hit that Bell icon so you get notified whenever I upload a new video that's it let's just",
    "start": "57329",
    "end": "62550"
  },
  {
    "text": "jump into this video all right agenda here's what we gonna discuss in",
    "start": "62550",
    "end": "69060"
  },
  {
    "text": "this video guys I want to cuss the four properties but I want to first talk about what is a",
    "start": "69060",
    "end": "75240"
  },
  {
    "text": "transaction I think this is important I don't want to take this for granted that people you know what is this so we're",
    "start": "75240",
    "end": "82350"
  },
  {
    "text": "gonna go quickly throw it the restaurant section we're gonna talk about at Tama city I flipped the two properties",
    "start": "82350",
    "end": "88770"
  },
  {
    "text": "isolation and consistency so it's acid but I a slid I changed it because",
    "start": "88770",
    "end": "94920"
  },
  {
    "text": "there's a reason talking about is leaking will and it doesn't matter my city will lead to",
    "start": "94920",
    "end": "100170"
  },
  {
    "text": "consistency in a very nice way you've gotta talk about consistency okay talk about a little bit of our no",
    "start": "100170",
    "end": "106649"
  },
  {
    "text": "sequel database is why people are moving to an or sequel why they create an or sequel to begin oil okay and then forth",
    "start": "106649",
    "end": "112649"
  },
  {
    "text": "okay talk about durability just kind of very straightforward thing great transaction what is a transaction we",
    "start": "112649",
    "end": "120509"
  },
  {
    "start": "120000",
    "end": "270000"
  },
  {
    "text": "hear this a lot in databases a transaction it's nothing but a bunch of queries okay it's a collection of query",
    "start": "120509",
    "end": "127860"
  },
  {
    "text": "so it's a one or more Quade okay and that property",
    "start": "127860",
    "end": "133410"
  },
  {
    "text": "of these queries or they are one unit of work an example would be if you want to",
    "start": "133410",
    "end": "141150"
  },
  {
    "text": "deposit an account right and some cash into an account that is actually a",
    "start": "141150",
    "end": "147300"
  },
  {
    "text": "select statement followed by update statement followed by another updates I mean like we were you gonna show in a",
    "start": "147300",
    "end": "152790"
  },
  {
    "text": "second right but each one of those is a query the three of them can form a",
    "start": "152790",
    "end": "159840"
  },
  {
    "text": "transaction and you define what a transaction began and where transaction and and we also there is another",
    "start": "159840",
    "end": "166850"
  },
  {
    "text": "semantics attached to a transaction like a commit hey I am happy with my changes",
    "start": "166850",
    "end": "172920"
  },
  {
    "text": "go persist them commit that's what it commits me rollback you know what I",
    "start": "172920",
    "end": "178680"
  },
  {
    "text": "think something went wrong roll back abort abort abort so that's another two",
    "start": "178680",
    "end": "184620"
  },
  {
    "text": "piece of concept and attach by transaction we know that let's just jump into example you a transaction I have an",
    "start": "184620",
    "end": "192270"
  },
  {
    "text": "account here with a beautiful table just to feel because that's all where you need obviously for in a bank right just two",
    "start": "192270",
    "end": "198240"
  },
  {
    "text": "fields account you don't need a name no date just to feel so there's that count",
    "start": "198240",
    "end": "204780"
  },
  {
    "text": "ID there is a balance this guy has a thousand dollars guys added two five five hundred and the transaction is send",
    "start": "204780",
    "end": "213630"
  },
  {
    "text": "hundred dollars from account one to account to so what do we need to do first does account one even have $100 I",
    "start": "213630",
    "end": "220470"
  },
  {
    "text": "don't know so I need to check right so that's we're gonna begin the transaction get a select let's check the balance do",
    "start": "220470",
    "end": "229020"
  },
  {
    "text": "you have $100 sir yes your balance is bleh a balance greater than hundred Yasir it is greater than 100 alright",
    "start": "229020",
    "end": "237000"
  },
  {
    "text": "let's dip it that one hundred minus hundred okay so now it's nine hundred okay well that's not committed yes just",
    "start": "237000",
    "end": "244530"
  },
  {
    "text": "yeah me right it's just touched it's a dirty change okay and then I'm gonna add another",
    "start": "244530",
    "end": "252180"
  },
  {
    "text": "hundred to the second account gonna commit my changes turn the green that means it's like it's persisted all good",
    "start": "252180",
    "end": "259109"
  },
  {
    "text": "we're happy and that's it okay so that's essentially what a transaction is it's a unit or fork but it consists of multiple",
    "start": "259109",
    "end": "265740"
  },
  {
    "text": "queries one or more okay that's a transaction let's talk about the first property now that we",
    "start": "265740",
    "end": "272360"
  },
  {
    "start": "270000",
    "end": "420000"
  },
  {
    "text": "understand transaction atomicity otama city is came from the word atom",
    "start": "272360",
    "end": "279050"
  },
  {
    "text": "right in science where is an atom is the smallest piece of a unit that cannot be",
    "start": "279050",
    "end": "286670"
  },
  {
    "text": "divided you cannot divide an atom I'm unless you're doing a nuclear fission and all that stuff but let's assume",
    "start": "286670",
    "end": "292670"
  },
  {
    "text": "atomic Tom cannot be divided cannot be split and that's what a transaction is",
    "start": "292670",
    "end": "298130"
  },
  {
    "text": "here a transaction should be atomic when we say a transaction as atomic that means all of those queries should",
    "start": "298130",
    "end": "305120"
  },
  {
    "text": "succeed and if one of them fail you better fail the whole thing you",
    "start": "305120",
    "end": "310370"
  },
  {
    "text": "better roll back the whole thing and now we know what a rollback is does that make sense guys very simple concept okay",
    "start": "310370",
    "end": "317570"
  },
  {
    "text": "why does it matter though why does it matter why should I care okay why are you enforcing that well you gotta know",
    "start": "317570",
    "end": "324230"
  },
  {
    "text": "Sarah take the same example without atomicity let's say I don't have a Thomas city I don't enforce this in my",
    "start": "324230",
    "end": "330260"
  },
  {
    "text": "database all over the vendor of this database Oracle Postgres didn't implemented a Thomas T which is bad all",
    "start": "330260",
    "end": "336440"
  },
  {
    "text": "all relational should implement atomicity well I say I'm gonna deposit",
    "start": "336440",
    "end": "341870"
  },
  {
    "text": "the same transaction I'm gonna do it but we're gonna add some little bit spices",
    "start": "341870",
    "end": "347180"
  },
  {
    "text": "on top of that began the direction I'm gonna dip it a hundred you code okay I need to check this this guy have 100 he",
    "start": "347180",
    "end": "354440"
  },
  {
    "text": "does sir okay cool go ahead and dip it back out right with a hundred and what the heck",
    "start": "354440",
    "end": "363250"
  },
  {
    "text": "happened hey that's not my machine that's just a slight guys but yeah your",
    "start": "363250",
    "end": "369320"
  },
  {
    "text": "database crashed something happened you went back restarted the database guess",
    "start": "369320",
    "end": "376400"
  },
  {
    "text": "what that's the last thing you did you dip it it wanna come by you for but you",
    "start": "376400",
    "end": "383390"
  },
  {
    "text": "didn't get to the other part of the transaction to actually commit and change that to 600 so now you have a",
    "start": "383390",
    "end": "391340"
  },
  {
    "text": "hundred dollars in the thin air it just went away all right that's just bad ish right",
    "start": "391340",
    "end": "398540"
  },
  {
    "text": "that's very bad ish after we restarted the machines accounts get credit obviously so that's what I",
    "start": "398540",
    "end": "405190"
  },
  {
    "text": "thought my transaction is the transactions that will roll back all queries all changes if one of the",
    "start": "405190",
    "end": "410919"
  },
  {
    "text": "queries fail so that's what it means essentially right so after if this is what we had just did is not an atomic",
    "start": "410919",
    "end": "417160"
  },
  {
    "text": "transaction what happened is is bad right so the correct way is to just roll",
    "start": "417160",
    "end": "422949"
  },
  {
    "start": "420000",
    "end": "570000"
  },
  {
    "text": "back and roll back this mm does that make sense guys that's what I told my city is very simple stuff jump to the",
    "start": "422949",
    "end": "430600"
  },
  {
    "text": "second one isolation I skipped consistency because we're gonna go back to consistency and later after isolation",
    "start": "430600",
    "end": "436780"
  },
  {
    "text": "this is one of the longest and in my opinion one of the most critical",
    "start": "436780",
    "end": "443490"
  },
  {
    "text": "properties a software engineer really should understand really should",
    "start": "443490",
    "end": "448780"
  },
  {
    "text": "understand isolation what is isolation an isolation is to be isolated as I want",
    "start": "448780",
    "end": "455889"
  },
  {
    "text": "to stay alone and I don't want to interact with the world right okay let's take this in the transaction a",
    "start": "455889",
    "end": "461320"
  },
  {
    "text": "transaction is to have a transaction that isolate that means and in-flight",
    "start": "461320",
    "end": "467740"
  },
  {
    "text": "arises a while I'm executing a transaction can this transaction see",
    "start": "467740",
    "end": "473110"
  },
  {
    "text": "other changes made by other transactions and there aren't flights okay so that's",
    "start": "473110",
    "end": "479560"
  },
  {
    "text": "what it means I am now executing my stuff can I see other stuff people are",
    "start": "479560",
    "end": "484720"
  },
  {
    "text": "making okay and is that okay right am i isolate from the other world okay",
    "start": "484720",
    "end": "490960"
  },
  {
    "text": "and it's really up to the implementer the software engineer here to adjust",
    "start": "490960",
    "end": "496900"
  },
  {
    "text": "this knob of isolation that we're gonna talk about okay do you want no isolation I don't care you can change anything you",
    "start": "496900",
    "end": "505419"
  },
  {
    "text": "want and I'm gonna read whatever you change and that's maybe okay but some",
    "start": "505419",
    "end": "510760"
  },
  {
    "text": "cases it is no no sir okay we're gonna",
    "start": "510760",
    "end": "515890"
  },
  {
    "text": "talk about that's isolation I talked about as a lack of isolation you can get",
    "start": "515890",
    "end": "523270"
  },
  {
    "text": "these read phenomena I don't know it's like has a fancy name for some reason",
    "start": "523270",
    "end": "529839"
  },
  {
    "text": "okay it's just you're gonna get some read out read weird Ennis write some weird stuff",
    "start": "529839",
    "end": "537840"
  },
  {
    "text": "while you read it in transactions okay and as a lack of isolation we're gonna",
    "start": "537840",
    "end": "543690"
  },
  {
    "text": "talk about that really isolate reading phenomenon this is their to read and all that stuff and we're gonna talk about",
    "start": "543690",
    "end": "551360"
  },
  {
    "text": "isolation levels that a database can implement to get read of the read",
    "start": "551360",
    "end": "559380"
  },
  {
    "text": "phenomenas okay so uh without isolation you get a bunch of read phenomenas we",
    "start": "559380",
    "end": "565710"
  },
  {
    "text": "implement isolation levels to fix those problems okay let's talk about the read",
    "start": "565710",
    "end": "573180"
  },
  {
    "start": "570000",
    "end": "700000"
  },
  {
    "text": "phenomenon we have three I added the fourth one I don't think it's a read phenomena it's one of the bad things",
    "start": "573180",
    "end": "579900"
  },
  {
    "text": "that can happen as a side-effect but I added it anyway okay so the first one",
    "start": "579900",
    "end": "585480"
  },
  {
    "text": "there to read there are two reads essentially is I am and we saw that right I don't think we just saw that",
    "start": "585480",
    "end": "592710"
  },
  {
    "text": "yeah but essentially dirty read what it is essentially it's like I am in flight transaction and some other times",
    "start": "592710",
    "end": "600060"
  },
  {
    "text": "actually made a change that transaction did not commit that change and I read",
    "start": "600060",
    "end": "606090"
  },
  {
    "text": "that change okay so any minute that transaction can roll back that change and I just read a bad value at dirty",
    "start": "606090",
    "end": "612720"
  },
  {
    "text": "value that hasn't been committed that's what it means isn't true non-repeatable reads we're gonna talk about that it's",
    "start": "612720",
    "end": "619170"
  },
  {
    "text": "like I write a value that is being committed right not necessarily committed or not right",
    "start": "619170",
    "end": "625080"
  },
  {
    "text": "but then I turn around in my sim transaction and I read the same value what are the same query or other query",
    "start": "625080",
    "end": "632400"
  },
  {
    "text": "that give me the same path to that value like a range query and I did not get the",
    "start": "632400",
    "end": "639840"
  },
  {
    "text": "same result so my results my reads were not repeatable in my same transaction",
    "start": "639840",
    "end": "646170"
  },
  {
    "text": "some some users are fine with that some users are not fine with that we're gonna",
    "start": "646170",
    "end": "651390"
  },
  {
    "text": "talk about that okay phantom reads I inserted a new another",
    "start": "651390",
    "end": "657300"
  },
  {
    "text": "transaction inserting a new record and I picked that up where I shouldn't have picked that up it usually happens with",
    "start": "657300",
    "end": "666140"
  },
  {
    "text": "range query most updates is like when when you",
    "start": "666140",
    "end": "671220"
  },
  {
    "text": "started to change something right you changed in the transaction you change the value and some other transaction",
    "start": "671220",
    "end": "677790"
  },
  {
    "text": "over wrote your value before you even commit it so you're gonna commit a wrong",
    "start": "677790",
    "end": "682830"
  },
  {
    "text": "value so you just lost your update essentially okay and these are the four",
    "start": "682830",
    "end": "688410"
  },
  {
    "text": "phenomenas let's talk about each of one one of them read from dirty reads let's talk about dirty reads yeah so we talked",
    "start": "688410",
    "end": "694649"
  },
  {
    "text": "about it read dirty reads I am gonna read a value that hasn't been committed by another transaction let's see I have",
    "start": "694649",
    "end": "702060"
  },
  {
    "start": "700000",
    "end": "880000"
  },
  {
    "text": "a sales there's two products product one Proctor",
    "start": "702060",
    "end": "707160"
  },
  {
    "text": "there's a quantity sales this product one has sold ten units at a price of",
    "start": "707160",
    "end": "712649"
  },
  {
    "text": "five dollars product to 20 price of four and I am asked to write a query to",
    "start": "712649",
    "end": "720089"
  },
  {
    "text": "produce a report of my sales so what I'm gonna do is select the entire thing and",
    "start": "720089",
    "end": "725160"
  },
  {
    "text": "some of those guys so product one has sold what $50 product two has give us",
    "start": "725160",
    "end": "731010"
  },
  {
    "text": "like $80 and then at the end I'm gonna just view the sum of all the sales okay",
    "start": "731010",
    "end": "736470"
  },
  {
    "text": "very simple stuff so to do that again in the transaction even if we don't really",
    "start": "736470",
    "end": "741720"
  },
  {
    "text": "need to commit or change you can also begin a transaction right and that's and",
    "start": "741720",
    "end": "747990"
  },
  {
    "text": "that can have its value I'm gonna begin a transaction selecting the product ID",
    "start": "747990",
    "end": "753600"
  },
  {
    "text": "and then multiplying the quantity times the price obviously and then from sales that will give me what we just saw right",
    "start": "753600",
    "end": "760620"
  },
  {
    "text": "product 150 product ooh that sounds good but here's the trick while this is",
    "start": "760620",
    "end": "766770"
  },
  {
    "text": "executing another transaction just begin right and in stock another quantity is",
    "start": "766770",
    "end": "774420"
  },
  {
    "text": "just added some some someone made us another sale right and they updated the",
    "start": "774420",
    "end": "780149"
  },
  {
    "text": "sales report okay where the PID is equal one so now we just increase the quantity",
    "start": "780149",
    "end": "785579"
  },
  {
    "text": "by five that's pretty good but I don't know if it's good because we just read",
    "start": "785579",
    "end": "791190"
  },
  {
    "text": "this now I just have an old value it might be that okay but let's see what it",
    "start": "791190",
    "end": "797820"
  },
  {
    "text": "will happen all right so I didn't commit transaction two yet right while I'm",
    "start": "797820",
    "end": "805150"
  },
  {
    "text": "doing that I did the second query which is select some quantity times price",
    "start": "805150",
    "end": "810700"
  },
  {
    "text": "which is literally this times this plot some twenty plus four eight but guess",
    "start": "810700",
    "end": "816790"
  },
  {
    "text": "what this is giving me a wrong result this is now reading the dirty value that",
    "start": "816790",
    "end": "825040"
  },
  {
    "text": "never been committed yet this guy's reading it and that's a dirty read right we're reading the bad value",
    "start": "825040",
    "end": "831580"
  },
  {
    "text": "why because it's leading to a bad result see 50 plus 80 is 130 but I am showing",
    "start": "831580",
    "end": "843040"
  },
  {
    "text": "the report 155 so you can see dirty reads are bad yeah I'm not saying they",
    "start": "843040",
    "end": "849760"
  },
  {
    "text": "are always bad it's up to you if you can't tolerate that or not if you're",
    "start": "849760",
    "end": "856600"
  },
  {
    "text": "building Instagram for example you don't really care if the number of likes doesn't match the number of user who",
    "start": "856600",
    "end": "862030"
  },
  {
    "text": "actually liked the picture right so you you might there's a price for everything guys we're gonna talk about that okay",
    "start": "862030",
    "end": "869050"
  },
  {
    "text": "this you cannot just say yeah I'm gonna implement the best isolation ever okay so there's three the first read",
    "start": "869050",
    "end": "875890"
  },
  {
    "text": "phenomenon okay and we commit the transaction obviously but it's useless we got batteries also that's dirty let's",
    "start": "875890",
    "end": "882520"
  },
  {
    "start": "880000",
    "end": "1020000"
  },
  {
    "text": "talk about non repeatable read okay an",
    "start": "882520",
    "end": "888730"
  },
  {
    "text": "unrepeatable read is as we said read that I'm gonna read something in my",
    "start": "888730",
    "end": "894730"
  },
  {
    "text": "transaction and I'm gonna read it again I'm getting those two different values you might say why are you reading the",
    "start": "894730",
    "end": "900760"
  },
  {
    "text": "same values twice are you idiot why are you doing that you just read it while you're reading twice there are believe",
    "start": "900760",
    "end": "907420"
  },
  {
    "text": "me when you're writing code when you're writing transaction you will need to do that sometimes okay and we're gonna show",
    "start": "907420",
    "end": "912610"
  },
  {
    "text": "you an example yeah I had to think about an example this but there's an example same thing right beginning the",
    "start": "912610",
    "end": "919780"
  },
  {
    "text": "transaction I'm gonna select the count of a report right that sounds good 50",
    "start": "919780",
    "end": "924910"
  },
  {
    "text": "and 80 right and then this is the total of this is 130 but guess what a",
    "start": "924910",
    "end": "931230"
  },
  {
    "text": "transaction began at the same time ended up the count sounds like is the same",
    "start": "931230",
    "end": "937360"
  },
  {
    "text": "transaction but he's did a little bit different I did here I actually changed that okay now it's 15 and I also",
    "start": "937360",
    "end": "944410"
  },
  {
    "text": "committed that's the difference between the first one and there so what about doing next is actually not a dirty read",
    "start": "944410",
    "end": "951340"
  },
  {
    "text": "right I'm reading a committed value it's a legit value but the question is should",
    "start": "951340",
    "end": "958000"
  },
  {
    "text": "I or not okay so to me this has been",
    "start": "958000",
    "end": "963730"
  },
  {
    "text": "committed it's a legit value it's not like the previous one where someone actually rolled back right or or it",
    "start": "963730",
    "end": "970630"
  },
  {
    "text": "could could be rolled back it's not a dirty value it's an actual committed value so I'm gonna turn around do the",
    "start": "970630",
    "end": "977830"
  },
  {
    "text": "sum but now you gotta get a better result despite me committing I get a bad",
    "start": "977830",
    "end": "986530"
  },
  {
    "text": "result so having it committed or not doesn't really matter now I got this",
    "start": "986530",
    "end": "992110"
  },
  {
    "text": "phenomena of an unrepeatable rate in this example because their first read",
    "start": "992110",
    "end": "997900"
  },
  {
    "text": "gave me that some 130 the secondary gave me a different some okay so that's an",
    "start": "997900",
    "end": "1004560"
  },
  {
    "text": "unrepeatable read in itself okay so never picked up a rate so we read this",
    "start": "1004560",
    "end": "1009630"
  },
  {
    "text": "first get it as a result then we read it again we got a different results so that's an one repeatable read we're",
    "start": "1009630",
    "end": "1015300"
  },
  {
    "text": "gonna discuss ways to fix this right how can you be fix this we can talk about things how to fix that",
    "start": "1015300",
    "end": "1021000"
  },
  {
    "start": "1020000",
    "end": "1133000"
  },
  {
    "text": "okay non-repeatable rate right and obviously gonna commit their phantom read your phantom rate so what phantom",
    "start": "1021000",
    "end": "1029010"
  },
  {
    "text": "breeze is actually interesting because here's air is an example of phantom rate right let's say I begin a transaction do",
    "start": "1029010",
    "end": "1036930"
  },
  {
    "text": "the same thing selecting count and then sum the whole thing we get one thirty fifty sales and eighteen red and the",
    "start": "1036930",
    "end": "1043800"
  },
  {
    "text": "same time here's with it the other transaction it did actually update it just inserted record it's just in",
    "start": "1043800",
    "end": "1050550"
  },
  {
    "text": "certain new cell of a totally different product and now you committed that so",
    "start": "1050550",
    "end": "1055710"
  },
  {
    "text": "it's it's changed it's in the database and in the same time the sick the first",
    "start": "1055710",
    "end": "1060960"
  },
  {
    "text": "transaction is still executing I am selecting all the count prices from cells",
    "start": "1060960",
    "end": "1067760"
  },
  {
    "text": "that is bad son because now you're just accounted for product three on the first",
    "start": "1068610",
    "end": "1076159"
  },
  {
    "text": "sheet of your paper report you did not account for his hat right so now the",
    "start": "1076159",
    "end": "1083010"
  },
  {
    "text": "some of those of it is the one thirty but you showing one forty okay that's a phantom rate and there is an inventory",
    "start": "1083010",
    "end": "1088740"
  },
  {
    "text": "because this is one of the coders hold their range queries where you're",
    "start": "1088740",
    "end": "1094169"
  },
  {
    "text": "selecting but you're getting extra rows",
    "start": "1094169",
    "end": "1099799"
  },
  {
    "text": "so if we're gonna talk about ways to fix that this is little bit harder to fix",
    "start": "1099799",
    "end": "1107039"
  },
  {
    "text": "and and to avoid the previous ones you can implement locks and version controls",
    "start": "1107039",
    "end": "1115200"
  },
  {
    "text": "to get away with it but this this is a new value how do you lock it it's a new value we cannot say hey don't read that",
    "start": "1115200",
    "end": "1121919"
  },
  {
    "text": "right it's just really interesting and that one of the ways to fix that is",
    "start": "1121919",
    "end": "1127620"
  },
  {
    "text": "actually serialization isolation level alright let's talk about the isolation",
    "start": "1127620",
    "end": "1133740"
  },
  {
    "start": "1133000",
    "end": "1160000"
  },
  {
    "text": "levels right this is very interesting guys I really like this topic so",
    "start": "1133740",
    "end": "1139399"
  },
  {
    "text": "isolation levels are levels of isolation dog saying what are you talking about",
    "start": "1139399",
    "end": "1146580"
  },
  {
    "text": "so isolation levels are level that implemented by the database to fix those",
    "start": "1146580",
    "end": "1151710"
  },
  {
    "text": "phenomena that we talked about okay and there's a nice table by Wikipedia here then I'm gonna reference here it's very",
    "start": "1151710",
    "end": "1157889"
  },
  {
    "text": "nice it just explains the whole thing here okay so read committed is the first type of isolation which is I don't know",
    "start": "1157889",
    "end": "1164760"
  },
  {
    "start": "1160000",
    "end": "1195000"
  },
  {
    "text": "I call that isolation level it's that literally offers no isolation much other that transaction when your transaction",
    "start": "1164760",
    "end": "1172230"
  },
  {
    "text": "starts in a read and committed way is not gonna is gonna it's not gonna",
    "start": "1172230",
    "end": "1177480"
  },
  {
    "text": "perform any isolation any changes the database is happening you're gonna see it so you can add a get dirty reads here",
    "start": "1177480",
    "end": "1184860"
  },
  {
    "text": "obviously because you're just changing everything you're gonna get non-repeatable reads obviously you're",
    "start": "1184860",
    "end": "1191429"
  },
  {
    "text": "gonna get phantom reads right and you get it lost updates as well yeah the read commit",
    "start": "1191429",
    "end": "1198350"
  },
  {
    "start": "1195000",
    "end": "1265000"
  },
  {
    "text": "is each there is a little bit of isolation here and most databases implement that yeah and most of the time",
    "start": "1198350",
    "end": "1207110"
  },
  {
    "text": "this is this is the one of the best transaction isolation level because",
    "start": "1207110",
    "end": "1212419"
  },
  {
    "text": "you're happy with that you're happy to read committed stuff but here's the thing each query in the transaction only",
    "start": "1212419",
    "end": "1219740"
  },
  {
    "text": "sees committed stuff at that time of that query so each query you execute",
    "start": "1219740",
    "end": "1226850"
  },
  {
    "text": "gonna see the new committed values at that time okay and that could be fine",
    "start": "1226850",
    "end": "1234549"
  },
  {
    "text": "right sometimes it is not okay so that's what it means to read committed you are",
    "start": "1234549",
    "end": "1239750"
  },
  {
    "text": "seeing and viewing the committed stuff at the time of the query okay so",
    "start": "1239750",
    "end": "1248240"
  },
  {
    "text": "anything that is committed you're gonna see it okay obviously this does not work",
    "start": "1248240",
    "end": "1254360"
  },
  {
    "text": "on our example that we show because we showed even that is committed the sales report came out wrong right but there",
    "start": "1254360",
    "end": "1261380"
  },
  {
    "text": "are certain cases where read committed is enough for you yeah repeatable read",
    "start": "1261380",
    "end": "1266990"
  },
  {
    "start": "1265000",
    "end": "1420000"
  },
  {
    "text": "each query in the transaction only sees committed updates at the beginning of",
    "start": "1266990",
    "end": "1274370"
  },
  {
    "text": "the transaction so it's the repeatable read isolation level gives you the",
    "start": "1274370",
    "end": "1282409"
  },
  {
    "text": "ability to see committed values but not",
    "start": "1282409",
    "end": "1288440"
  },
  {
    "text": "at every single query at the beginning of the transaction so once you begin a transaction you will only see changes",
    "start": "1288440",
    "end": "1296150"
  },
  {
    "text": "that have been committed before you start the transaction okay so that gives",
    "start": "1296150",
    "end": "1303860"
  },
  {
    "text": "you a nice isolation tie to view and that's really powerful stuff so now I'm",
    "start": "1303860",
    "end": "1311510"
  },
  {
    "text": "not gonna go through the implementation or aspects of this databases some databases implement versioning to",
    "start": "1311510",
    "end": "1317030"
  },
  {
    "text": "implement this like hey when you start a transaction like Cassandra right you start a transaction I am in version 0",
    "start": "1317030",
    "end": "1323270"
  },
  {
    "text": "okay and then anything I read is belong to version 0 of the database okay so if",
    "start": "1323270",
    "end": "1330860"
  },
  {
    "text": "other transactions are committing changing stuff they are updating to version 1 and version 2 and version 3",
    "start": "1330860",
    "end": "1336799"
  },
  {
    "text": "I am only reading version 0 and that gives me a nice consistent view which",
    "start": "1336799",
    "end": "1343070"
  },
  {
    "text": "we're gonna talk about that right so repeatable reads okay so this way I guarantee that I'm gonna read the same",
    "start": "1343070",
    "end": "1350799"
  },
  {
    "text": "repeatable read right gonna sync it the same read because I'm reading the same version right some database is",
    "start": "1350799",
    "end": "1357080"
  },
  {
    "text": "implemented as a form of a lock which is a little bit more expensive okay so you have you establish a exclusive lock and",
    "start": "1357080",
    "end": "1363620"
  },
  {
    "text": "say no I am only reading this please guys don't change this okay",
    "start": "1363620",
    "end": "1369289"
  },
  {
    "text": "don't change it so if once we establish an exclusive lock we cannot nobody actually can or nobody",
    "start": "1369289",
    "end": "1376490"
  },
  {
    "text": "can change that stuff no sorry it's no next of those would look so the lock",
    "start": "1376490",
    "end": "1383330"
  },
  {
    "text": "approach of that another approach to another approach to implement repeatable",
    "start": "1383330",
    "end": "1389240"
  },
  {
    "text": "raises you're gonna start you can place the shared lock so you guarantee that nobody can actually change your data",
    "start": "1389240",
    "end": "1397309"
  },
  {
    "text": "because everybody that needs to edit they need to establish an exclusive close exclusive lock to edit these rows",
    "start": "1397309",
    "end": "1404480"
  },
  {
    "text": "right then you get about to read and then once you do that you release the shirt lock okay so you implement some",
    "start": "1404480",
    "end": "1410480"
  },
  {
    "text": "sort of shared lock but you just blocked people from editing so versioning is kind of a little bit better than but",
    "start": "1410480",
    "end": "1416630"
  },
  {
    "text": "there's a cons of pros and cons for each one obviously serializable it's the",
    "start": "1416630",
    "end": "1422210"
  },
  {
    "start": "1420000",
    "end": "1500000"
  },
  {
    "text": "easiest way to implement and the kind of a slowest and the the performance goes",
    "start": "1422210",
    "end": "1429350"
  },
  {
    "text": "down with every level of isolation so it's like I think of as a chart right this is no isolation this is the highest",
    "start": "1429350",
    "end": "1436400"
  },
  {
    "text": "isolation level okay but this is the fastest thing this is the slowest thing go",
    "start": "1436400",
    "end": "1442010"
  },
  {
    "text": "the serializable is essentially each transaction has to be serialized right",
    "start": "1442010",
    "end": "1447230"
  },
  {
    "text": "so if you as if they are serious almost like serious right so a transaction just followed by another",
    "start": "1447230",
    "end": "1453200"
  },
  {
    "text": "transaction they cannot be executed and in parallel essentially if they try as much as possible the database does",
    "start": "1453200",
    "end": "1459710"
  },
  {
    "text": "little bit tricky things to to execute some of them are parallel but most of",
    "start": "1459710",
    "end": "1464780"
  },
  {
    "text": "them are you can think of it as see realized right so if you are serialized nothing running in parallel",
    "start": "1464780",
    "end": "1470540"
  },
  {
    "text": "you're happy right this is the best thing ever if you're not nothing nothing",
    "start": "1470540",
    "end": "1476060"
  },
  {
    "text": "in running parallel then you're not gonna get in concurrency issue you don't have isolation problems anyway yeah so",
    "start": "1476060",
    "end": "1483230"
  },
  {
    "text": "this is the best way most of the time this is implemented at the application level the application places a lock and",
    "start": "1483230",
    "end": "1488990"
  },
  {
    "text": "says guys stop touching my stuff I'm updating it or I'm reading it all right",
    "start": "1488990",
    "end": "1494420"
  },
  {
    "text": "and then start reading everything and then goes away okay that's the table I was talking about with the from the",
    "start": "1494420",
    "end": "1500960"
  },
  {
    "start": "1500000",
    "end": "1665000"
  },
  {
    "text": "Wikipedia you had the read and committed level we were all of the stall this",
    "start": "1500960",
    "end": "1506230"
  },
  {
    "text": "phenomenas can occur obviously because we don't care Rikka and committed read anything right any change that happens",
    "start": "1506230",
    "end": "1514070"
  },
  {
    "text": "dirty reads lost updates you get not repeatable you get phantom reads read I",
    "start": "1514070",
    "end": "1519440"
  },
  {
    "text": "committed what we gonna did do is essentially read only the committee",
    "start": "1519440",
    "end": "1524480"
  },
  {
    "text": "stuff so you're not gonna get dirty reads you know that because you're reading only committed stuff but you're",
    "start": "1524480",
    "end": "1529700"
  },
  {
    "text": "gonna get around non-repeatable reads because each query is getting the new",
    "start": "1529700",
    "end": "1535070"
  },
  {
    "text": "committed stuff right so if you queried at that point the first query of the",
    "start": "1535070",
    "end": "1541070"
  },
  {
    "text": "transaction and then you turn around and queried again between those two queries someone might change the value and",
    "start": "1541070",
    "end": "1547100"
  },
  {
    "text": "committed it so you're reading the committed value but it changed so it's none repeatable and that's might not be",
    "start": "1547100",
    "end": "1553850"
  },
  {
    "text": "desirable obviously you might get fandoms as well repeatable read you're",
    "start": "1553850",
    "end": "1559730"
  },
  {
    "text": "not going to get dirty reads because we're eating only committed stuff but in addition of that we're only reading",
    "start": "1559730",
    "end": "1566630"
  },
  {
    "text": "committed stuff at the beginning of transaction so you're not getting repeat your you're not gonna get a",
    "start": "1566630",
    "end": "1572210"
  },
  {
    "text": "non-repeatable reads all of URIs are repeatable because you're reading the same version of the database at the",
    "start": "1572210",
    "end": "1578810"
  },
  {
    "text": "start of the transaction or that the database will force you to places a lock",
    "start": "1578810",
    "end": "1583940"
  },
  {
    "text": "and then will only read the stuff at the beginning okay so that's essentially a number of Peterborough and but phantoms",
    "start": "1583940",
    "end": "1591800"
  },
  {
    "text": "still can occur as a result because you cannot control renewals you can only control what you can only control",
    "start": "1591800",
    "end": "1598930"
  },
  {
    "text": "rows that you can lock right and this is debatable with virgin ink you actually",
    "start": "1598930",
    "end": "1606110"
  },
  {
    "text": "can get away with it you right so this tables not entirely accurate with what",
    "start": "1606110",
    "end": "1612170"
  },
  {
    "text": "if you implemented versioning with repeatable rates you can actually you",
    "start": "1612170",
    "end": "1618170"
  },
  {
    "text": "might get away with repeatable reads right if you implement versioning I think rocks DB and the face book storage",
    "start": "1618170",
    "end": "1625850"
  },
  {
    "text": "engine it's that versioning serializable best thing ever I'm not gonna save this there but if you",
    "start": "1625850",
    "end": "1634190"
  },
  {
    "text": "serialize your transaction you're not gonna get any of that stuff right you are guaranteed that nobody",
    "start": "1634190",
    "end": "1639470"
  },
  {
    "text": "touches anything unless they have a lock",
    "start": "1639470",
    "end": "1647180"
  },
  {
    "text": "right so you start the transaction you place the shared lock right and if someone wanna bloom in the exclusive",
    "start": "1647180",
    "end": "1654710"
  },
  {
    "text": "lock they will get a they will get an error because there are shared lock there are red logs so and we talk about",
    "start": "1654710",
    "end": "1660860"
  },
  {
    "text": "shared lock and read locks I'm gonna reference the video there guys all right consistency guys all right so I really",
    "start": "1660860",
    "end": "1667250"
  },
  {
    "start": "1665000",
    "end": "1710000"
  },
  {
    "text": "needed to talk about authenticity and isolation first to talk about consistency right although consistence",
    "start": "1667250",
    "end": "1674150"
  },
  {
    "text": "is the second property or an asset right and the reason is atomicity and",
    "start": "1674150",
    "end": "1680300"
  },
  {
    "text": "isolation leads to consistency in my opinion right and the way I see it there",
    "start": "1680300",
    "end": "1687410"
  },
  {
    "text": "are two types of consistency that way I see it here and the the first one is consistency in your data and the second",
    "start": "1687410",
    "end": "1695180"
  },
  {
    "text": "one is consistency in reading the data and let's talk about each one of the men and and let's talk about what which one",
    "start": "1695180",
    "end": "1703250"
  },
  {
    "text": "of those the no sequel guys came and try to improve upon okay and try to rate can",
    "start": "1703250",
    "end": "1711260"
  },
  {
    "start": "1710000",
    "end": "2030000"
  },
  {
    "text": "be relaxed here consistency in data because this is data is essentially is",
    "start": "1711260",
    "end": "1716870"
  },
  {
    "text": "defined by the user it's something that the user defines in their table schema",
    "start": "1716870",
    "end": "1723020"
  },
  {
    "text": "it says hey that this view and this view should be consistent like say the sum of",
    "start": "1723020",
    "end": "1729170"
  },
  {
    "text": "the money in this table should equal the sum of all the or than the number of likes and this",
    "start": "1729170",
    "end": "1736820"
  },
  {
    "text": "picture should number it should recall the number of the users who actually",
    "start": "1736820",
    "end": "1742020"
  },
  {
    "text": "liked that picture so this is a consistent view that the user defines okay usually it's enforced by referential",
    "start": "1742020",
    "end": "1749580"
  },
  {
    "text": "integrity like foreign keys and primary keys so you ensure consistency in your data and it's also ensured by atomicity",
    "start": "1749580",
    "end": "1756210"
  },
  {
    "text": "and isolation we saw that we will remember when we got the blue screen of death in the middle right",
    "start": "1756210",
    "end": "1762510"
  },
  {
    "text": "we just lost my data right just went away and I got an inconsistent balance",
    "start": "1762510",
    "end": "1769260"
  },
  {
    "text": "sheet as a result we got 900 and 500 where and hunter just went away and the",
    "start": "1769260",
    "end": "1775950"
  },
  {
    "text": "thin air okay so the lack of atomicity leads to inconsistency in your data okay",
    "start": "1775950",
    "end": "1783799"
  },
  {
    "text": "isolation do I need to say anything we saw all that stuff isolation right",
    "start": "1783799",
    "end": "1789690"
  },
  {
    "text": "giving all this false reports as a result of lack of isolation right",
    "start": "1789690",
    "end": "1795000"
  },
  {
    "text": "between the moment people are changing my product sales while I'm reading this",
    "start": "1795000",
    "end": "1800429"
  },
  {
    "text": "data I'm gonna get a bad result I'm gonna get an inconsistent result okay",
    "start": "1800429",
    "end": "1805890"
  },
  {
    "text": "but although my product says the sum is 130 I can see it I can sum it but the",
    "start": "1805890",
    "end": "1812309"
  },
  {
    "text": "actual total is saying 155 that's bad okay so a lack of isolation leads to",
    "start": "1812309",
    "end": "1818789"
  },
  {
    "text": "inconsistencies it's up to you as a user if you can handle if you're okay with that inconsistency or not sometimes it",
    "start": "1818789",
    "end": "1826950"
  },
  {
    "text": "leads to corruption inconsistency if you're not happy with that like a bank transaction you cannot",
    "start": "1826950",
    "end": "1832500"
  },
  {
    "text": "probably be happy with that product sales probably not that's bad right",
    "start": "1832500",
    "end": "1838640"
  },
  {
    "text": "pictures and likes we're gonna show that example see like this is an example right where consistence in my data is",
    "start": "1838640",
    "end": "1845820"
  },
  {
    "text": "really not a big deal right like we have two pictures here this is a blob of the",
    "start": "1845820",
    "end": "1851100"
  },
  {
    "text": "picture let's say this is an Instagram implementation we have a blob of the",
    "start": "1851100",
    "end": "1856500"
  },
  {
    "text": "picture and we have the number of likes right you Jose you might say I'm saying why are you adding a field called like",
    "start": "1856500",
    "end": "1862810"
  },
  {
    "text": "what what is that okay why don't you just query this table and just get the number of lights performance this is the",
    "start": "1862810",
    "end": "1868570"
  },
  {
    "text": "best short answer for this right so you would add likes field here which will",
    "start": "1868570",
    "end": "1875260"
  },
  {
    "text": "contain an important number of likes in this picture that this picture got and",
    "start": "1875260",
    "end": "1880270"
  },
  {
    "text": "there's a another table called picture like which includes like hey John liked",
    "start": "1880270",
    "end": "1885580"
  },
  {
    "text": "picture number one Edmund like picture number one John liked feature number two so if you sum this right picture number",
    "start": "1885580",
    "end": "1893650"
  },
  {
    "text": "I've got two likes from John and Edmund that's correct and then John a picture two got one like it's one from John that",
    "start": "1893650",
    "end": "1899920"
  },
  {
    "text": "so that's a consistent view but if you saw that for example this is four and",
    "start": "1899920",
    "end": "1905110"
  },
  {
    "text": "this view doesn't represent it that's an inconsistent view it stepped up to you",
    "start": "1905110",
    "end": "1910150"
  },
  {
    "text": "if you're happy with that inconsistency or not and that's a very critical question because based on that you can",
    "start": "1910150",
    "end": "1917350"
  },
  {
    "text": "adjust the performance you can adjust the consistency you can adjust scalability you can adjust isolation",
    "start": "1917350",
    "end": "1924100"
  },
  {
    "text": "right based on what can you give up as an engineer as a software engineer you",
    "start": "1924100",
    "end": "1931180"
  },
  {
    "text": "really guys need to think about every single aspect of that what can you give",
    "start": "1931180",
    "end": "1937630"
  },
  {
    "text": "up that's why you have to understand the requirements and then ask yourself what",
    "start": "1937630",
    "end": "1942670"
  },
  {
    "text": "can you give up you're telling me that Instagram if Kylie Jenner gets like five",
    "start": "1942670",
    "end": "1948250"
  },
  {
    "text": "million likes on a picture five million and thirty two likes if I clicked on",
    "start": "1948250",
    "end": "1955420"
  },
  {
    "text": "that and view the five million are you telling me they're gonna match I'm betting everything one day there are no",
    "start": "1955420",
    "end": "1962590"
  },
  {
    "text": "matching this this is impossible to get Incas consistent view on this right and",
    "start": "1962590",
    "end": "1968200"
  },
  {
    "text": "they don't care because nobody's gonna fiddle through five million users anyway",
    "start": "1968200",
    "end": "1974200"
  },
  {
    "text": "so they can give you an approximate number and they can be off there's those two views can be off by even hundred",
    "start": "1974200",
    "end": "1981490"
  },
  {
    "text": "thousand YouTube is the same subscribers right do you think why do you think YouTube is showing you like my",
    "start": "1981490",
    "end": "1989230"
  },
  {
    "text": "subscriber is 6 K or 6.2 K because they cannot guarantee you that I have exact",
    "start": "1989230",
    "end": "1996809"
  },
  {
    "text": "6030 to subscribers okay or 23 or even",
    "start": "1996809",
    "end": "2001940"
  },
  {
    "text": "purifier and he has like one now almost 95 million subscribers that number is",
    "start": "2001940",
    "end": "2009139"
  },
  {
    "text": "not exactly accurate to the actual number of subscribers that he actually",
    "start": "2009139",
    "end": "2015149"
  },
  {
    "text": "got it's an approximation because they cannot they decided say it's not",
    "start": "2015149",
    "end": "2020399"
  },
  {
    "text": "important to maintain the consistency of this thing because why first because nobody's going through 99",
    "start": "2020399",
    "end": "2026909"
  },
  {
    "text": "million subscribers so they are preferring performance over this",
    "start": "2026909",
    "end": "2032580"
  },
  {
    "start": "2030000",
    "end": "2100000"
  },
  {
    "text": "consistency sorry about guys's or about that going to a tangent but as I mean it's critical to this let's talk about",
    "start": "2032580",
    "end": "2039059"
  },
  {
    "text": "the other cost concept of this consistent data sometimes it matters sometimes it doesn't",
    "start": "2039059",
    "end": "2044389"
  },
  {
    "text": "consistent here consistency and reads same thing sometimes it doesn't sometimes it matter so we'll think about",
    "start": "2044389",
    "end": "2051030"
  },
  {
    "text": "that no consistency in reads is very interesting and what it means it's like",
    "start": "2051030",
    "end": "2060510"
  },
  {
    "text": "if I update something for a transaction update something to the database let's say I updated value X and that X gets",
    "start": "2060510",
    "end": "2067888"
  },
  {
    "text": "persistent and then another transaction start reading that it better get the value X Husain what are you saying",
    "start": "2067889",
    "end": "2075060"
  },
  {
    "text": "that's obviously Tariq and ah right obviously it has to get the same value",
    "start": "2075060",
    "end": "2082829"
  },
  {
    "text": "but not necessarily we're going to talk about the concept of eventual consistency here so that's inconsistent",
    "start": "2082829",
    "end": "2091378"
  },
  {
    "text": "to read if I committed something can new transactions see it immediately okay and",
    "start": "2091379",
    "end": "2097108"
  },
  {
    "text": "here's the thing this type of consistency is unavailable",
    "start": "2097109",
    "end": "2104400"
  },
  {
    "start": "2100000",
    "end": "2430000"
  },
  {
    "text": "on both relational and no sequel database it's a big statement here okay",
    "start": "2104400",
    "end": "2109500"
  },
  {
    "text": "both databases suffers from this consistency okay including Oracle including Postgres",
    "start": "2109500",
    "end": "2117030"
  },
  {
    "text": "including my sequel those days are not consistent and reads and let me explain",
    "start": "2117030",
    "end": "2123060"
  },
  {
    "text": "here you have a one server and you're committed something to it and you read",
    "start": "2123060",
    "end": "2129200"
  },
  {
    "text": "from that one server life is good right life is perfect because you have one",
    "start": "2129200",
    "end": "2136280"
  },
  {
    "text": "freaking server but the moment you start adding other server let's click about",
    "start": "2136280",
    "end": "2141619"
  },
  {
    "text": "this is positive on my sequel right what are you gonna do essentially is you gonna have one server and you created a",
    "start": "2141619",
    "end": "2148130"
  },
  {
    "text": "replica of that server and that is like even one way at aplicar to where applicants is gonna start pumping data",
    "start": "2148130",
    "end": "2155210"
  },
  {
    "text": "to the replicas right and now obviously you need to add multiple replicas for",
    "start": "2155210",
    "end": "2161619"
  },
  {
    "text": "horizontal scalability right you cannot serve 7 million people off one database",
    "start": "2161619",
    "end": "2168680"
  },
  {
    "text": "right then YouTube started doing that with one database and they scaled it up",
    "start": "2168680",
    "end": "2174200"
  },
  {
    "text": "to multiple and they implemented now fit test which is this new fancy stuff on",
    "start": "2174200",
    "end": "2179690"
  },
  {
    "text": "top of my sinkhole that gives you like sharding on-the-fly sharding our stuff we're gonna talk about in another video",
    "start": "2179690",
    "end": "2185540"
  },
  {
    "text": "but essentially the moment you break things up into this replicas into this",
    "start": "2185540",
    "end": "2192730"
  },
  {
    "text": "essentially the other databases right these secondary databases called",
    "start": "2192730",
    "end": "2200569"
  },
  {
    "text": "follower leader or follower nodes right now more you start doing that you are",
    "start": "2200569",
    "end": "2205940"
  },
  {
    "text": "inconsistent sir you will become inconsistent because you write to the",
    "start": "2205940",
    "end": "2211309"
  },
  {
    "text": "primary node and someone else read from the secondary node the secondary node",
    "start": "2211309",
    "end": "2216349"
  },
  {
    "text": "takes time to get the value propagated there is networking going on there is",
    "start": "2216349",
    "end": "2222010"
  },
  {
    "text": "delays latency until the secondary not gives the new value so you gonna get an",
    "start": "2222010",
    "end": "2228049"
  },
  {
    "text": "old value my friend you're gonna get an old value right and that is",
    "start": "2228049",
    "end": "2234549"
  },
  {
    "text": "inconsistency so this problem and a lot",
    "start": "2234549",
    "end": "2241490"
  },
  {
    "text": "of people get this wrong inconsistency so the relational database is",
    "start": "2241490",
    "end": "2246670"
  },
  {
    "text": "inconsistent in the reads right the moment you start breaking them into horizontal scalability in multiple",
    "start": "2246670",
    "end": "2253160"
  },
  {
    "text": "servers you're gonna get inconsistency right so they are",
    "start": "2253160",
    "end": "2258260"
  },
  {
    "text": "there is one big nice server right the moment you break now they are inconsistent reads you're gonna read it",
    "start": "2258260",
    "end": "2264050"
  },
  {
    "text": "but someone will get a read an old value and it's up to you now as an engineer",
    "start": "2264050",
    "end": "2269750"
  },
  {
    "text": "are you happy with this old value if you get a slightly older subscriber count'",
    "start": "2269750",
    "end": "2275960"
  },
  {
    "text": "okay that's completely fine if your video the",
    "start": "2275960",
    "end": "2282350"
  },
  {
    "text": "latest view and that's what like YouTube does right there are money servers and all these rights going to multiple",
    "start": "2282350",
    "end": "2288590"
  },
  {
    "text": "databases and then they eventually sink back into one big server one big",
    "start": "2288590",
    "end": "2294320"
  },
  {
    "text": "database right and then if you read if I'm reading that view versus someone",
    "start": "2294320",
    "end": "2299930"
  },
  {
    "text": "from Germany versus from or from Japan reading that same baby you gotta get",
    "start": "2299930",
    "end": "2305030"
  },
  {
    "text": "different results because we're doing different replicas were eating from different follower nodes and that's okay",
    "start": "2305030",
    "end": "2311380"
  },
  {
    "text": "right sometimes that's okay sometimes it's not so now there are a bunch of",
    "start": "2311380",
    "end": "2318020"
  },
  {
    "text": "people I say you know what we don't want to enforce that thing this is all the stuff you guys are doing silly this acid",
    "start": "2318020",
    "end": "2325430"
  },
  {
    "text": "thing is silly and the fact that scaling",
    "start": "2325430",
    "end": "2330460"
  },
  {
    "text": "relational databases has been always hard right because was designed in the",
    "start": "2330460",
    "end": "2336200"
  },
  {
    "text": "70s to be one big beefy machine right one big beefy server the database is",
    "start": "2336200",
    "end": "2341900"
  },
  {
    "text": "there and that's it right in this era those guys said okay you know what I'm",
    "start": "2341900",
    "end": "2347000"
  },
  {
    "text": "gonna give up consistency because you guys already already you don't have consistency right I'm gonna relax a",
    "start": "2347000",
    "end": "2353210"
  },
  {
    "text": "little bit of these four properties and I'm gonna give you a better scalability",
    "start": "2353210",
    "end": "2359990"
  },
  {
    "text": "and performance right so I'm gonna scale horizontally I'm gonna add a little a",
    "start": "2359990",
    "end": "2365420"
  },
  {
    "text": "bunch of other servers on the sides and then just yeah we're gonna we're gonna",
    "start": "2365420",
    "end": "2370880"
  },
  {
    "text": "start sharding doing all these things and distributed manner okay so that's",
    "start": "2370880",
    "end": "2376070"
  },
  {
    "text": "essentially what they did and those thus the no sequel databases came into",
    "start": "2376070",
    "end": "2381140"
  },
  {
    "text": "picture okay so they give up consistency or or on favor of scalability which the",
    "start": "2381140",
    "end": "2388700"
  },
  {
    "text": "relational databases really really hard to do right relation databases whether you have to implement",
    "start": "2388700",
    "end": "2394730"
  },
  {
    "text": "the follower node and leader node and they start replicating pumping changes right and the the the no sequel one",
    "start": "2394730",
    "end": "2403220"
  },
  {
    "text": "gives you a scalability you can add just notes and then we'll scale nicely but if",
    "start": "2403220",
    "end": "2409460"
  },
  {
    "text": "you're looking for isolation and all that is fancy stuff you're not gonna get",
    "start": "2409460",
    "end": "2416690"
  },
  {
    "text": "it obviously right okay you're not gonna get all these properties off of this you",
    "start": "2416690",
    "end": "2421849"
  },
  {
    "text": "you you will get this new concept called eventual consistency which is to me it's",
    "start": "2421849",
    "end": "2427010"
  },
  {
    "text": "just a marketing term okay eventually everything is eventually consistent da okay so it's like if you if you read the",
    "start": "2427010",
    "end": "2433760"
  },
  {
    "start": "2430000",
    "end": "2563000"
  },
  {
    "text": "value you get an old value if you wait a little bit you're gonna get the latest value essentially right so to me a",
    "start": "2433760",
    "end": "2441710"
  },
  {
    "text": "visual consistency both the relational databases and non-relational databases",
    "start": "2441710",
    "end": "2447410"
  },
  {
    "text": "suffer from this gave eventual consistency durability committed transactions must be persisted in a",
    "start": "2447410",
    "end": "2454099"
  },
  {
    "text": "durable non-volatile storage so as what I means if I write and committed a",
    "start": "2454099",
    "end": "2459260"
  },
  {
    "text": "transaction it better stay there when it's when when I lost power I committed a transaction I lost power",
    "start": "2459260",
    "end": "2466040"
  },
  {
    "text": "and then I was shut down if I restarted the value better be there that's what they're built durable means",
    "start": "2466040",
    "end": "2472490"
  },
  {
    "text": "right so Redis for example is not a durable database oh it's a memory database memcached is an in-memory",
    "start": "2472490",
    "end": "2478579"
  },
  {
    "text": "database it's not durable and it's up to you if you're caching stuff you're just",
    "start": "2478579",
    "end": "2484579"
  },
  {
    "text": "doing doing stuff for caching you might really don't care about being durable right so a lot of databases talk these",
    "start": "2484579",
    "end": "2493040"
  },
  {
    "text": "four properties just starting hacking one of them out and then creating a",
    "start": "2493040",
    "end": "2498410"
  },
  {
    "text": "brand new database out of it so radius took the durability out and it just created this in memory database thing",
    "start": "2498410",
    "end": "2505369"
  },
  {
    "text": "they have I think persistence I didn't work very closely order it is but the in-memory they have persistence model I",
    "start": "2505369",
    "end": "2512900"
  },
  {
    "text": "think Cassandra and a MongoDB decided to say you know what I don't need",
    "start": "2512900",
    "end": "2517910"
  },
  {
    "text": "consistency I'm gonna give you consistency when you write your query right but we don't need to insist",
    "start": "2517910",
    "end": "2525240"
  },
  {
    "text": "and you don't have a schema to begin with right this is there's a lot of things that God relaxed not only is the",
    "start": "2525240",
    "end": "2530610"
  },
  {
    "text": "consistency part of it so there's no schema no referential integrity you don't get indexes secondary indexes all",
    "start": "2530610",
    "end": "2537540"
  },
  {
    "text": "that stuff you don't get any of that yeah so really about that's probably another topic no sequel versus sequel but yeah",
    "start": "2537540",
    "end": "2544470"
  },
  {
    "text": "that's that guys long video you made it thank you so much for watching until the",
    "start": "2544470",
    "end": "2550500"
  },
  {
    "text": "end whew racially or leave a comment at the end like this video if you liked it share it with your friend so looks like",
    "start": "2550500",
    "end": "2557100"
  },
  {
    "text": "a course I think it's almost like a 40 minutes video now all right guys I'm gonna see you under the next one you guys stay awesome",
    "start": "2557100",
    "end": "2564290"
  }
]