[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "i stumble upon a new paper written by professor john austerhout",
    "start": "0",
    "end": "6720"
  },
  {
    "text": "from stanford university the paper summarizes a new protocol that replaces",
    "start": "6720",
    "end": "15280"
  },
  {
    "text": "tcp which is one of the most abundant if the if not",
    "start": "15280",
    "end": "20560"
  },
  {
    "text": "the abundant protocol that is used everywhere you know and it's not",
    "start": "20560",
    "end": "26720"
  },
  {
    "text": "directly used it's probably used by your application right now even if you don't know it right",
    "start": "26720",
    "end": "32640"
  },
  {
    "text": "like http uses tcpa i know http 3 does switch to quick",
    "start": "32640",
    "end": "38079"
  },
  {
    "text": "which uses udp but a lot of applications ssh you know smtp all of these",
    "start": "38079",
    "end": "45120"
  },
  {
    "text": "protocols use directly uses tcp as a protocol you know",
    "start": "45120",
    "end": "51680"
  },
  {
    "text": "and it's been very popular for years so why change",
    "start": "51680",
    "end": "56800"
  },
  {
    "text": "apparently when i when i read the title of this um paper you know i was skeptical you know",
    "start": "56800",
    "end": "64799"
  },
  {
    "text": "we need a replacement for tcp in the data center emphasis in the data center",
    "start": "64799",
    "end": "69920"
  },
  {
    "text": "here because don't don't get defensive like i did when i first started",
    "start": "69920",
    "end": "75360"
  },
  {
    "text": "another someone who wanted to change things the way we do",
    "start": "75360",
    "end": "80479"
  },
  {
    "text": "things you know networking and back in engineering i try to be objective and look at the",
    "start": "80479",
    "end": "86799"
  },
  {
    "text": "actual paper and see the original problems that tcp has",
    "start": "86799",
    "end": "92479"
  },
  {
    "text": "because we agree right tcp is not good for everything we know that that's why we have quick that's why we use udp",
    "start": "92479",
    "end": "98720"
  },
  {
    "text": "directly especially for gaming for video streaming things like that because we know that tcp is great but also it has",
    "start": "98720",
    "end": "106320"
  },
  {
    "text": "limitations because it was designed you know it was ossified",
    "start": "106320",
    "end": "112560"
  },
  {
    "text": "it's the right word you know and it's very hard to change but people walked around it",
    "start": "112560",
    "end": "118560"
  },
  {
    "text": "so in this episode of the back engine show it's going to be a little bit different it's going to be a little bit longer so",
    "start": "118560",
    "end": "123680"
  },
  {
    "text": "get a drink relax and let's enjoy this show i think i think it's going to be a good uh",
    "start": "123680",
    "end": "131440"
  },
  {
    "text": "discussion really i think it's a good paper do i think this new protocol",
    "start": "131440",
    "end": "136800"
  },
  {
    "text": "that is called houma by the way a very common persian name like that's",
    "start": "136800",
    "end": "142720"
  },
  {
    "text": "how i know it because my my mom is you know my mom's side is persian so that's a very common used name and i i",
    "start": "142720",
    "end": "149520"
  },
  {
    "text": "think houma is uh is a some sort of a mythical bird that always flies and never lands i",
    "start": "149520",
    "end": "156800"
  },
  {
    "text": "don't know the story but it's i don't know if it's but it's inspired by this you know myth",
    "start": "156800",
    "end": "162800"
  },
  {
    "text": "mythology or not but regardless i think this is going to be interesting and let's just keep an open",
    "start": "162800",
    "end": "168239"
  },
  {
    "text": "mind read through obviously i have my criticism as usual we'll try to keep an open mind read it through let's have fun",
    "start": "168239",
    "end": "175760"
  },
  {
    "text": "let's jump into it welcome to the backend engineering show with your host hussein nasser today we're gonna",
    "start": "175760",
    "end": "182080"
  },
  {
    "start": "180000",
    "end": "330000"
  },
  {
    "text": "read this summary paper that's not actual the actual paper for this new protocol that",
    "start": "182080",
    "end": "190000"
  },
  {
    "text": "attempts to replace tcp in the data centers okay very important",
    "start": "190000",
    "end": "195840"
  },
  {
    "text": "to emphasize that in the data centers things in the data center everything is tightly",
    "start": "195840",
    "end": "202480"
  },
  {
    "text": "tucked in together you know the latency is almost latency when it comes to networking is",
    "start": "202480",
    "end": "208159"
  },
  {
    "text": "is is in a in microseconds you know hundreds and microseconds or maybe even less than",
    "start": "208159",
    "end": "213840"
  },
  {
    "text": "that right in switches like nanoseconds hundreds of nanoseconds like so they they invest a lot in this",
    "start": "213840",
    "end": "221920"
  },
  {
    "text": "uh making these equipments as fast as possible unlike the internet which is like wild west and",
    "start": "221920",
    "end": "228000"
  },
  {
    "text": "obviously there's latency there is limitation when it comes to the mtus",
    "start": "228000",
    "end": "233120"
  },
  {
    "text": "used in the maximum transmission unit we don't have these limits in the data center we",
    "start": "233120",
    "end": "238640"
  },
  {
    "text": "we are so fast and tcp is apparently slowing development",
    "start": "238640",
    "end": "245200"
  },
  {
    "text": "uh of applications on the dead center let's find out i never worked in the data center i don't know the challenges of",
    "start": "245200",
    "end": "251360"
  },
  {
    "text": "data center that's why i i'm taking the word of professor john here",
    "start": "251360",
    "end": "257040"
  },
  {
    "text": "and the references he references let's get started we need a replacement for tcp in the",
    "start": "257040",
    "end": "264160"
  },
  {
    "text": "data center let's read the abstract uh by the way uh i downloaded the pdf and i started highlighting the important parts",
    "start": "264160",
    "end": "271120"
  },
  {
    "text": "that i believe it's important because i can't go through the whole paper obviously it's it's not real it's just six pages you know but i i only don't",
    "start": "271120",
    "end": "279520"
  },
  {
    "text": "highlighted the interested parts that i want to discuss here right abstract",
    "start": "279520",
    "end": "284960"
  },
  {
    "text": "in spite of its long and successful history tcp is a poor transport protocol",
    "start": "284960",
    "end": "292880"
  },
  {
    "text": "for modern death centers every significant element of tcp from its stream orientation to its requirement of",
    "start": "292880",
    "end": "300160"
  },
  {
    "text": "in-order packet delivery is wrong again for the data center",
    "start": "300160",
    "end": "306560"
  },
  {
    "text": "professor john emphasizes on this statement it's just for the net center if you're using it on",
    "start": "306560",
    "end": "312160"
  },
  {
    "text": "the internet don't change it so think about stream orientation so when we talk about tcp",
    "start": "312160",
    "end": "318320"
  },
  {
    "text": "now the id of tcp tcp sits on top of ip and ip has packets and if you want to",
    "start": "318320",
    "end": "324160"
  },
  {
    "text": "send data through dcp you sh ship them into segments right",
    "start": "324160",
    "end": "330560"
  },
  {
    "start": "330000",
    "end": "450000"
  },
  {
    "text": "no mention of segments at all here which is something i i have to criticize you know it's very",
    "start": "330560",
    "end": "336400"
  },
  {
    "text": "hard not to talk about tcp and not mention very critical concept of tcp which is the segment not i mentioned not",
    "start": "336400",
    "end": "342960"
  },
  {
    "text": "in the original tip uh paper not in this one",
    "start": "342960",
    "end": "348240"
  },
  {
    "text": "zit nothing you know so tcp has this idea of segments and",
    "start": "348240",
    "end": "353759"
  },
  {
    "text": "segments will have the tcp header which includes the ports information about congestion control",
    "start": "353759",
    "end": "361680"
  },
  {
    "text": "other information as well can't remember right now sequences you know window sizes stuff like that",
    "start": "361680",
    "end": "367280"
  },
  {
    "text": "you know and this is where the headers actually all the information these segments becomes",
    "start": "367280",
    "end": "373440"
  },
  {
    "text": "carries your data so if you send a bunch of data let's say i want to send i don't know i want to send a whole word",
    "start": "373440",
    "end": "379840"
  },
  {
    "text": "document you know it's a bad example but that will be",
    "start": "379840",
    "end": "385039"
  },
  {
    "text": "try to send into this tcp socket you know when you create a connection through tcp and you just stream that",
    "start": "385039",
    "end": "392000"
  },
  {
    "text": "whole word document into this socket your application doesn't really know about this concept of segments the",
    "start": "392000",
    "end": "399039"
  },
  {
    "text": "kernel takes care of breaking things down into segments right sometimes i guess you can't have access",
    "start": "399039",
    "end": "405600"
  },
  {
    "text": "to those but you just get a bunch this will eventually be broken into",
    "start": "405600",
    "end": "411120"
  },
  {
    "text": "multiple segments and will be shipped each segment will be sequenced with a number okay segment number one right the",
    "start": "411120",
    "end": "416960"
  },
  {
    "text": "first part of document second part of the document so how many segments it really depends on the mtu that down down",
    "start": "416960",
    "end": "423280"
  },
  {
    "text": "link layer obviously the how much your wi-fi connection can handle how much",
    "start": "423280",
    "end": "428880"
  },
  {
    "text": "your lan can handle you know and that is your basically the maximum transmission unit your net your neck your network",
    "start": "428880",
    "end": "435680"
  },
  {
    "text": "card effectively and that carries on to the maximum the pdu which is the uh the packet uh",
    "start": "435680",
    "end": "443360"
  },
  {
    "text": "size in the iep packet which of obviously translates to the maximum segment size right so you can send up to",
    "start": "443360",
    "end": "450319"
  },
  {
    "start": "450000",
    "end": "720000"
  },
  {
    "text": "maximum segment size worth of content but all of this is called a stream it's just a stream of data it's just in",
    "start": "450319",
    "end": "457199"
  },
  {
    "text": "sequence packet so if you think about it there is no concept of you know request in tcp and you send",
    "start": "457199",
    "end": "464879"
  },
  {
    "text": "uh the word document how do you know if it actually arrives right the application has to decide that you",
    "start": "464879",
    "end": "471120"
  },
  {
    "text": "know because it doesn't know the transport transfer protocol doesn't know about",
    "start": "471120",
    "end": "476240"
  },
  {
    "text": "this discrete you know boundaries of your messages",
    "start": "476240",
    "end": "481840"
  },
  {
    "text": "as uh the paper calls it or request even the http request http request through tcp there is no concept of a request at",
    "start": "481840",
    "end": "489440"
  },
  {
    "text": "the tcp layer you know you send a bunch of bytes the bytes goes",
    "start": "489440",
    "end": "495039"
  },
  {
    "text": "right and the the the http request becomes get slash http one one for you put the",
    "start": "495039",
    "end": "501199"
  },
  {
    "text": "headers all of this becomes a byte string and that buy string is shoved into the tcp layer",
    "start": "501199",
    "end": "506879"
  },
  {
    "text": "the kernel might use one if you're lucky like i think the 1500 is the maximum",
    "start": "506879",
    "end": "512159"
  },
  {
    "text": "segment size in the internet by default and the data center is way larger than that obviously right because they have",
    "start": "512159",
    "end": "518560"
  },
  {
    "text": "control of all this equipment they can increase that that basically controls the frame",
    "start": "518560",
    "end": "524240"
  },
  {
    "text": "at that data link layer so we're still in the app stack and i still didn't get continue i have to i have to",
    "start": "524240",
    "end": "530640"
  },
  {
    "text": "shut up and read so from its stream orientation to its requirement of in-order packet delivery it has to be an",
    "start": "530640",
    "end": "537920"
  },
  {
    "text": "order because you're sending a stream in a better arriving order as otherwise the award document or the request the actual",
    "start": "537920",
    "end": "544640"
  },
  {
    "text": "content of the request will be arrived out of order right so that's why when you send multiple requests on the same",
    "start": "544640",
    "end": "551040"
  },
  {
    "text": "tcp connection you have no idea at the server side where the request the",
    "start": "551040",
    "end": "557680"
  },
  {
    "text": "first request starts where the second request end we don't have that knowledge right at the transport layer the",
    "start": "557680",
    "end": "563440"
  },
  {
    "text": "application has to start receiving everything and then it says oh okay this is request",
    "start": "563440",
    "end": "569920"
  },
  {
    "text": "number one because it ends in a new line or whatever this gp standard says and then the second request starts right",
    "start": "569920",
    "end": "576320"
  },
  {
    "text": "there so that's what we have here we have in order packet delivery it is time to recognize that tcp problems are two",
    "start": "576320",
    "end": "583440"
  },
  {
    "text": "fundamentals and fundamental and interrelated to be fixed the only way to harness the full",
    "start": "583440",
    "end": "590880"
  },
  {
    "text": "performance potential of modern network is to introduce a new transfer protocol",
    "start": "590880",
    "end": "596320"
  },
  {
    "text": "into the data center homa demonstrate that it is possible to",
    "start": "596320",
    "end": "601920"
  },
  {
    "text": "create a transport protocol that avoids all of tcp's problems interesting",
    "start": "601920",
    "end": "607440"
  },
  {
    "text": "although homa is not uh api i keep saying homa as in and because that's in",
    "start": "607440",
    "end": "613440"
  },
  {
    "text": "persian that's how we pronounce it it probably proves a different thing homa some might be something else but i'm",
    "start": "613440",
    "end": "619279"
  },
  {
    "text": "gonna say homa although homa is not api compatible with tcp it should be possible to bring into",
    "start": "619279",
    "end": "627120"
  },
  {
    "text": "this is this is really big right if your application is running on tc on top of tcp directly then",
    "start": "627120",
    "end": "634800"
  },
  {
    "text": "you cannot use this you have to rewrite your whole application to use homo right because it's a different api right there",
    "start": "634800",
    "end": "641200"
  },
  {
    "text": "is no write or read the whole thing is different it's not as simple as it is",
    "start": "641200",
    "end": "648480"
  },
  {
    "text": "maybe they probably when they say there's no api comparable that means it is literally it's not because the whole",
    "start": "648480",
    "end": "654160"
  },
  {
    "text": "thing changes we're going to find out is the paper doesn't detail this and they doesn't really",
    "start": "654160",
    "end": "660399"
  },
  {
    "text": "oddly doesn't even mention the header how it looks like nothing right i tried to",
    "start": "660399",
    "end": "666320"
  },
  {
    "text": "as much as possible information there is no concept of ports as far as i've seen there's no concept of ports at all they",
    "start": "666320",
    "end": "673200"
  },
  {
    "text": "just say hey host connects to our host why do we need ports they just completely removed that concept",
    "start": "673200",
    "end": "679760"
  },
  {
    "text": "altogether so they saved on the header sizes of the you know the messages that they sent",
    "start": "679760",
    "end": "685440"
  },
  {
    "text": "i got out of bed it's clever they are reinventing the whole wheel here right so it's scary for us it's like",
    "start": "685440",
    "end": "693040"
  },
  {
    "text": "something new we get scared of course but yeah it's uh courageous",
    "start": "693040",
    "end": "699279"
  },
  {
    "text": "might i say although homo is not an api computer okay we're at this okay",
    "start": "699279",
    "end": "704560"
  },
  {
    "text": "this is the introduction i'm going to read just this part i'm going to discuss however",
    "start": "704560",
    "end": "709839"
  },
  {
    "text": "data center computing creates unprecedented challenges for tcp so here's the focus on the what's what's so",
    "start": "709839",
    "end": "716160"
  },
  {
    "text": "unique about data centers here right the data center environment with",
    "start": "716160",
    "end": "721360"
  },
  {
    "start": "720000",
    "end": "840000"
  },
  {
    "text": "millions of cores in close proximity focus on close proximity you guys close",
    "start": "721360",
    "end": "728480"
  },
  {
    "text": "proximity they are so tucked in together this is not a solution for the internet",
    "start": "728480",
    "end": "733839"
  },
  {
    "text": "don't bring this to the internet i don't think it will fit in the internet to be honest right with the way i",
    "start": "733839",
    "end": "739600"
  },
  {
    "text": "i've read the design there is a lot of chattiness going on especially with the unscheduled packet",
    "start": "739600",
    "end": "746079"
  },
  {
    "text": "and the schedule packing and the receiver has to say go ahead and now you can send it oh you can wait uh go ahead",
    "start": "746079",
    "end": "751519"
  },
  {
    "text": "and send it there is a lot of chattiness i don't know if it will work in the internet at all with millions of course",
    "start": "751519",
    "end": "757120"
  },
  {
    "text": "proximity individual application harnessing thousands of machine to interact on micro",
    "start": "757120",
    "end": "763200"
  },
  {
    "text": "second time scale so this is the latency is so tiny between the machines so we want",
    "start": "763200",
    "end": "768959"
  },
  {
    "text": "we are burdened by the tcp protocol could not be envisioned by the designers of tcp",
    "start": "768959",
    "end": "775680"
  },
  {
    "text": "yeah dissipated the tv's designer 40 years ago did they didn't know that they didn't know they were going to reach",
    "start": "775680",
    "end": "781600"
  },
  {
    "text": "this scale so i mean would they what they built is amazing",
    "start": "781600",
    "end": "787760"
  },
  {
    "text": "that it actually survived 40 years so i'm going to jump in here and read the requirements okay obviously this is visible and i can disappear that's all",
    "start": "787760",
    "end": "794800"
  },
  {
    "text": "right if i'm covering the page requirements",
    "start": "794800",
    "end": "801519"
  },
  {
    "text": "what are we trying to solve here before discussing the problem tcp let us review the challenges that must be addressed by",
    "start": "801519",
    "end": "808560"
  },
  {
    "text": "any transport protocol for data centers for data centers again reliable delivery",
    "start": "808560",
    "end": "815279"
  },
  {
    "text": "their protocol must deliver data reliably from one host to another in spite of transient failure so they're",
    "start": "815279",
    "end": "821600"
  },
  {
    "text": "not taking that away there's a big difference between in-order delivery versus reliable",
    "start": "821600",
    "end": "827760"
  },
  {
    "text": "delivery so that returns we're talking about re-transmission here if something failed",
    "start": "827760",
    "end": "833120"
  },
  {
    "text": "we have to know that it failed it was dropped and we need to send it again",
    "start": "833120",
    "end": "838880"
  },
  {
    "text": "reliably we have to deliver that no matter what the consequences were so here the throughput",
    "start": "838880",
    "end": "846560"
  },
  {
    "start": "840000",
    "end": "1105000"
  },
  {
    "text": "is the concept of throughput is like how many units can be delivered in x amount of time so",
    "start": "846560",
    "end": "851760"
  },
  {
    "text": "let's say i can i can process thousand packets",
    "start": "851760",
    "end": "856800"
  },
  {
    "text": "iep packets that is in a given second right",
    "start": "856800",
    "end": "861839"
  },
  {
    "text": "versus someone else can process ten thousand packets in a second so my that their throughput is better than mine i",
    "start": "861839",
    "end": "868639"
  },
  {
    "text": "have more they have more throughput than i do right why because i take more time",
    "start": "868639",
    "end": "874240"
  },
  {
    "text": "processing each packet compared to there right so you want to increase throughput you need to",
    "start": "874240",
    "end": "880560"
  },
  {
    "text": "reduce time spent in each packet thus increasing the throughput but that's",
    "start": "880560",
    "end": "886160"
  },
  {
    "text": "usually called the data throughput as they call it here right what they care about is actually a",
    "start": "886160",
    "end": "891680"
  },
  {
    "text": "higher level of throughput which is application level message or request so what does it mean",
    "start": "891680",
    "end": "898880"
  },
  {
    "text": "even if you say a thousand packet how many requests are that those right",
    "start": "898880",
    "end": "904480"
  },
  {
    "text": "if you're sending uh it doesn't really mean a thousand packet doesn't mean thousand requests",
    "start": "904480",
    "end": "909760"
  },
  {
    "text": "not at all it could be 30 right depends on the sizes of the request right so throughput here is",
    "start": "909760",
    "end": "917360"
  },
  {
    "text": "is completely different because each request each mess i keep saying request but you can translate it to a message",
    "start": "917360",
    "end": "923360"
  },
  {
    "text": "they use the word message inextensively here it's very abstract but uh think of the messages i request",
    "start": "923360",
    "end": "931199"
  },
  {
    "text": "when it's going from the sender to the server right and as a result how many requests can i send in a in a",
    "start": "931199",
    "end": "937839"
  },
  {
    "text": "second how many requests can you process that is a very important metric in",
    "start": "937839",
    "end": "943199"
  },
  {
    "text": "proxies such as nginx envoy he proxy how many requests can you",
    "start": "943199",
    "end": "948320"
  },
  {
    "text": "pull and request and process and that obviously depends on the protocol at the layer seven right is it http is hdb2 is",
    "start": "948320",
    "end": "956480"
  },
  {
    "text": "it grpc how many requests can you process and that is",
    "start": "956480",
    "end": "962000"
  },
  {
    "text": "another concept that is a requirement here the ability to send large number of small messages quickly so that's one of",
    "start": "962000",
    "end": "968240"
  },
  {
    "text": "their requirements they really they're gonna when you notice then the the the",
    "start": "968240",
    "end": "973680"
  },
  {
    "text": "the theme that you're gonna notice in this paper is they focus on messages and they're short messages to specific",
    "start": "973680",
    "end": "981279"
  },
  {
    "text": "i think they define what it what do they mean by short messages like within the kilobytes right",
    "start": "981279",
    "end": "988079"
  },
  {
    "text": "uh which is i believe it's very common especially in microservices you're probably going to make a small",
    "start": "988079",
    "end": "994480"
  },
  {
    "text": "request and a large response or maybe a large request and a small response usually requests are smaller",
    "start": "994480",
    "end": "1001279"
  },
  {
    "text": "than responses usually all right i i don't i don't i can't think of an example where a request yeah i guess if",
    "start": "1001279",
    "end": "1006560"
  },
  {
    "text": "you sound like you're writing something hey i'm posting a tweet right so there is request in",
    "start": "1006560",
    "end": "1012320"
  },
  {
    "text": "this case so i take it back the request is large the response is tiny right but",
    "start": "1012320",
    "end": "1018240"
  },
  {
    "text": "short messages are are often in this case the response is short so they want to prioritize short messages tcp",
    "start": "1018240",
    "end": "1026880"
  },
  {
    "text": "really works really bad when it comes to short messages just because",
    "start": "1026880",
    "end": "1032160"
  },
  {
    "text": "what does it mean a short message right a short message is i don't know",
    "start": "1032160",
    "end": "1037280"
  },
  {
    "text": "let's say 200 300 bytes you can fit that in a segment right and you can say you",
    "start": "1037280",
    "end": "1042880"
  },
  {
    "text": "might say well short messages to fit in a single segment at the client side",
    "start": "1042880",
    "end": "1050000"
  },
  {
    "text": "some clients can delay sending that segment and wait until it",
    "start": "1050000",
    "end": "1055679"
  },
  {
    "text": "actually fills up to fill up a maximum segment size the whole segment you know because it's wasteful",
    "start": "1055679",
    "end": "1062400"
  },
  {
    "text": "you're gonna see this theme with tcp it's don't never send a single byte in a message in",
    "start": "1062400",
    "end": "1067679"
  },
  {
    "text": "a segment always wait to fill it up right that's why most implementations today disable this",
    "start": "1067679",
    "end": "1074559"
  },
  {
    "text": "behavior of waiting to fill a mess segment which is called nigel algorithm",
    "start": "1074559",
    "end": "1080080"
  },
  {
    "text": "they curl back in 2016 they just disable that altogether no it's like i have 300",
    "start": "1080080",
    "end": "1085520"
  },
  {
    "text": "bytes why do you have me to wait and again it's not just always waiting it's just if there is acknowledgement right",
    "start": "1085520",
    "end": "1092080"
  },
  {
    "text": "so that's how it gets part of the things that were kind of frankensteining",
    "start": "1092080",
    "end": "1098240"
  },
  {
    "text": "on top of tcp that makes sense right so so i i get that let's continue congestion control",
    "start": "1098240",
    "end": "1105039"
  },
  {
    "start": "1105000",
    "end": "1358000"
  },
  {
    "text": "so what is congestion control so obviously they don't explain any of these concepts right they they assume",
    "start": "1105039",
    "end": "1110480"
  },
  {
    "text": "you know and that's my job here to kind of explain and illustrate and demystify",
    "start": "1110480",
    "end": "1116080"
  },
  {
    "text": "anything that is not clear because when i read this obviously some of the stuff i didn't understand some of the",
    "start": "1116080",
    "end": "1122400"
  },
  {
    "text": "stuff i did and spent some time to kind of i might get some of this wrong obviously but",
    "start": "1122400",
    "end": "1129760"
  },
  {
    "text": "oh well that's part of it right congestion control so congestion control",
    "start": "1129760",
    "end": "1135360"
  },
  {
    "text": "is refers to you know tcp has two",
    "start": "1135360",
    "end": "1141679"
  },
  {
    "text": "control if you will there is a flow control at the receiver side where it says okay the host",
    "start": "1141760",
    "end": "1149360"
  },
  {
    "text": "that you're sending to how much they can handle how much buffer they have",
    "start": "1149360",
    "end": "1154400"
  },
  {
    "text": "to receive data the host itself how much bandwidth those guys actually have no at",
    "start": "1154400",
    "end": "1160320"
  },
  {
    "text": "that application site and that's called flow control receiver flow control and there is another",
    "start": "1160320",
    "end": "1166320"
  },
  {
    "text": "level of control which is congestion control which basically usually describes the middle network now things",
    "start": "1166320",
    "end": "1172080"
  },
  {
    "text": "like in the middle how much how much can you handle in the middle right the routers in the middle and the",
    "start": "1172080",
    "end": "1178480"
  },
  {
    "text": "switches in the middle will buffer packets and if those buffers are full",
    "start": "1178480",
    "end": "1185120"
  },
  {
    "text": "for any rotor of any host in the middle before we reach the end then those packets will be dropped and",
    "start": "1185120",
    "end": "1192320"
  },
  {
    "text": "that dropping of a packet will signal to the cinder they say hey there is a congestion let",
    "start": "1192320",
    "end": "1199360"
  },
  {
    "text": "me slow down and the author of homer hate this",
    "start": "1199360",
    "end": "1206000"
  },
  {
    "text": "they hate the fact that the cinder is actually slowing down rating you know",
    "start": "1206000",
    "end": "1211280"
  },
  {
    "text": "the transmission rate right and and the congestion control algorithm goes like the first there's something",
    "start": "1211280",
    "end": "1217360"
  },
  {
    "text": "called a slow star by the way i talk about all of this stuff in my networking course check it check it check it out network.com",
    "start": "1217360",
    "end": "1223600"
  },
  {
    "text": "all these fundamental stuff i try to explain you know so it's all there",
    "start": "1223600",
    "end": "1228640"
  },
  {
    "text": "in detail but i'll explain it here so congestion control starts with the cb starts with a",
    "start": "1228640",
    "end": "1233679"
  },
  {
    "text": "slow start so it will aggressively sentence and sense and and then start the the",
    "start": "1233679",
    "end": "1239679"
  },
  {
    "text": "another algorithm which is basically the conjunction control algorithm the normal one where it will increase segment by",
    "start": "1239679",
    "end": "1246320"
  },
  {
    "text": "segment right until uh and the conjunction",
    "start": "1246320",
    "end": "1252159"
  },
  {
    "text": "was detected and what does that mean and this is where the disagreement here the the authors of the houma paper here they",
    "start": "1252159",
    "end": "1260320"
  },
  {
    "text": "disagree where what does it mean to be congested you know",
    "start": "1260320",
    "end": "1265440"
  },
  {
    "text": "the conjunction in tcp says if there is a dropped packet or sometimes there is",
    "start": "1265440",
    "end": "1270480"
  },
  {
    "text": "something the excess explicit con congestion notification said in the ip header that router set",
    "start": "1270480",
    "end": "1277600"
  },
  {
    "text": "and layer three switches to be specific also uh they will say hey i detected a conductor oh i'm about to be congested",
    "start": "1277600",
    "end": "1284080"
  },
  {
    "text": "yeah get in here slow down",
    "start": "1284080",
    "end": "1289360"
  },
  {
    "text": "so that once the congestion is detected by if a buffer is filled packets are dropped",
    "start": "1289360",
    "end": "1295360"
  },
  {
    "text": "timing out as a result the client said hey segment i didn't receive an account for this segment there must be a",
    "start": "1295360",
    "end": "1301440"
  },
  {
    "text": "congestion i'm gonna have my window the congestion window the cwnd all right and",
    "start": "1301440",
    "end": "1307039"
  },
  {
    "text": "then it will go on right and then slows down and that's just really bad apparently for data centers",
    "start": "1307039",
    "end": "1313440"
  },
  {
    "text": "right it's it's interesting how they are trying to kind of solve this problem you know",
    "start": "1313440",
    "end": "1319200"
  },
  {
    "text": "they are instead of introducing because who let's think",
    "start": "1319200",
    "end": "1324880"
  },
  {
    "text": "about it who's introducing the congestion the cinder right because it's sending data like there is no tomorrow right",
    "start": "1324880",
    "end": "1331679"
  },
  {
    "text": "it's like a sending syndicate and then eventually it will reach a state where no the routers in the middle there was a",
    "start": "1331679",
    "end": "1338559"
  },
  {
    "text": "weakest link that cannot handle this because the the the packets will get backed up",
    "start": "1338559",
    "end": "1344400"
  },
  {
    "text": "and the buffers will fill and when the buffers fill the new packets will know they will not have will have no room to",
    "start": "1344400",
    "end": "1351360"
  },
  {
    "text": "sit in these routers and as a result they will basically drop the packet will slow down the counter so they are",
    "start": "1351360",
    "end": "1357600"
  },
  {
    "text": "they're flipping this algorithm so i guess it's a spoiler uh spoiler i'm gonna explain what homa does",
    "start": "1357600",
    "end": "1364240"
  },
  {
    "start": "1358000",
    "end": "1500000"
  },
  {
    "text": "here what they did is actually flip it they make the receiver decide tell the",
    "start": "1364240",
    "end": "1370320"
  },
  {
    "text": "sender hey it's okay to send now okay so what happened here is",
    "start": "1370320",
    "end": "1376080"
  },
  {
    "text": "the in houma the messages",
    "start": "1376080",
    "end": "1382559"
  },
  {
    "text": "will be sent regardless blindly sent that's what they called the just just send anything you have but only things",
    "start": "1382559",
    "end": "1390000"
  },
  {
    "text": "that's called unscheduled packets or scheduled messages so they're going to send only few parts of them of",
    "start": "1390000",
    "end": "1398240"
  },
  {
    "text": "each of the message that you're going to send they're going to send the parts the the beginning of the message which",
    "start": "1398240",
    "end": "1403440"
  },
  {
    "text": "includes the message length and that gives kind of information metadata the",
    "start": "1403440",
    "end": "1408960"
  },
  {
    "text": "receiver says oh uh this message is short go ahead and send that this message is",
    "start": "1408960",
    "end": "1414000"
  },
  {
    "text": "long let's wait a little bit on this i'm gonna grant you sending these messages but keep the rest of them so the",
    "start": "1414000",
    "end": "1420880"
  },
  {
    "text": "receiver is just orchestrating the congestion not really congestion it's the receiving the receiver",
    "start": "1420880",
    "end": "1427679"
  },
  {
    "text": "orchestrating the sending right so you're going to see a lot of chattiness if you think about it right just",
    "start": "1427679",
    "end": "1434480"
  },
  {
    "text": "this this thing didn't really exist i can you can argue there's acknowledgement right coming back and forth so they're replacing that with",
    "start": "1434480",
    "end": "1440880"
  },
  {
    "text": "this concept of grant i know i know i know i i have to continue reading",
    "start": "1440880",
    "end": "1447520"
  },
  {
    "text": "in order to uh provide low latency the transport message transfer protocol must limit the build",
    "start": "1447520",
    "end": "1454240"
  },
  {
    "text": "up of packet in the network queues packet cues can occur both at the edge",
    "start": "1454240",
    "end": "1460400"
  },
  {
    "text": "the links connecting hosts to the top of racks you're gonna see this mentioned a lot in the paper top of racks",
    "start": "1460400",
    "end": "1466799"
  },
  {
    "text": "uh tor i think stands not the onion router not to be confused with the onion rotten because",
    "start": "1466799",
    "end": "1472960"
  },
  {
    "text": "i've seen tors what does tor has to do with this top of rack switches and in the network",
    "start": "1472960",
    "end": "1479279"
  },
  {
    "text": "core each of these forms of congestion creates distinct problems",
    "start": "1479279",
    "end": "1484840"
  },
  {
    "text": "obviously all right this is a uh some some of this part is like actually my favorite here and again we are we are",
    "start": "1484840",
    "end": "1492720"
  },
  {
    "text": "here in the requirements section right what is the requirement for a new product on the",
    "start": "1492720",
    "end": "1498240"
  },
  {
    "text": "data center so we talked about congestion control we want to try to",
    "start": "1498240",
    "end": "1503520"
  },
  {
    "start": "1500000",
    "end": "1710000"
  },
  {
    "text": "avoid it as much as possible efficient load balancing across server cores for more than a decade network speeds have",
    "start": "1503520",
    "end": "1510880"
  },
  {
    "text": "been increasing rapidly while the processor clock rates have remained essentially statics so you see",
    "start": "1510880",
    "end": "1518559"
  },
  {
    "text": "i'm not a hardware engineer i'm not a network engineer right but this this actually",
    "start": "1518559",
    "end": "1524000"
  },
  {
    "text": "i mean this makes sense right but i didn't know about this apparently the switches are getting better the routers",
    "start": "1524000",
    "end": "1530080"
  },
  {
    "text": "are bigger and better but the cpu is staying the static the speed let's see because what what is what's his name uh moore's",
    "start": "1530080",
    "end": "1537039"
  },
  {
    "text": "law moore's lawyer that's more slow not murphy's law i'm confused more more slow",
    "start": "1537039",
    "end": "1542640"
  },
  {
    "text": "yeah more slow that every 18 months it doubles i think it's slowing down but network is just keeping the switches",
    "start": "1542640",
    "end": "1550080"
  },
  {
    "text": "are keeping getting better and better apparently i don't know that so that's a again i didn't work on the data center",
    "start": "1550080",
    "end": "1555520"
  },
  {
    "text": "so any information here is new to me news thus it's no longer possible for a",
    "start": "1555520",
    "end": "1560960"
  },
  {
    "text": "single core to keep up with a single network link you have to have multiple cores that is very interesting also i",
    "start": "1560960",
    "end": "1568559"
  },
  {
    "text": "love it i absolutely love it so that the fact that you need multiple cores",
    "start": "1568559",
    "end": "1573840"
  },
  {
    "text": "which kind of translate to these scores must be load balanced like whatever the data",
    "start": "1573840",
    "end": "1580880"
  },
  {
    "text": "coming into you your neck has been to be shuffled into these",
    "start": "1580880",
    "end": "1586880"
  },
  {
    "text": "chords in an organized manner and in a balanced manner we're gonna we're gonna read later that",
    "start": "1586880",
    "end": "1593440"
  },
  {
    "text": "tcp cannot do this effectively it creates this hot spot in a single core",
    "start": "1593440",
    "end": "1599120"
  },
  {
    "text": "pair connection because of this concept of connections both incoming and outgoing load must be",
    "start": "1599120",
    "end": "1606080"
  },
  {
    "text": "distributed across multiple cores this is true at multiple levels at the",
    "start": "1606080",
    "end": "1612880"
  },
  {
    "text": "application level high throughput services must run on many cores and divide their work among the cores at the",
    "start": "1612880",
    "end": "1619840"
  },
  {
    "text": "transport layer a single core cannot keep up with the high speed link especially with short messages",
    "start": "1619840",
    "end": "1627440"
  },
  {
    "text": "load balancing impacts transport protocols in two ways first it can introduce overhead",
    "start": "1627440",
    "end": "1633840"
  },
  {
    "text": "example the use of multiple court causes additional cash misses and coherence second load balancing can lead",
    "start": "1633840",
    "end": "1641840"
  },
  {
    "text": "to hot spots where load is unevenly distributed around across cores right so we're gonna see",
    "start": "1641840",
    "end": "1649679"
  },
  {
    "text": "like all the packets going to one core the other cores are not",
    "start": "1649679",
    "end": "1655039"
  },
  {
    "text": "as even and the reason we do this is for stickiness reason we want the package to",
    "start": "1655039",
    "end": "1660880"
  },
  {
    "text": "be processed in the same core as much as possible so that file descriptors of the connection live",
    "start": "1660880",
    "end": "1667600"
  },
  {
    "text": "in the process of cache and we don't have to go to the memory to fetch those information i guess that's that's that's one way to",
    "start": "1667600",
    "end": "1675200"
  },
  {
    "text": "look at it right that's probably why this is the form of the the congestion of the software level load balancing",
    "start": "1675200",
    "end": "1682080"
  },
  {
    "text": "overheads are now one of the primary sources of tail latency and they are",
    "start": "1682080",
    "end": "1687679"
  },
  {
    "text": "impacted by the design of transport protocol this is so fascinating to read this stuff",
    "start": "1687679",
    "end": "1694720"
  },
  {
    "text": "if you read it in details that is nick offload i'm not going to spend much in this because",
    "start": "1694720",
    "end": "1700799"
  },
  {
    "text": "uh to be honest what nick airflow is like let me the network interface controller right that means like we want",
    "start": "1700799",
    "end": "1708240"
  },
  {
    "text": "as much as possible the protocol to run in the network card the network",
    "start": "1708240",
    "end": "1713600"
  },
  {
    "start": "1710000",
    "end": "1800000"
  },
  {
    "text": "interface controller instead of the actual software because it's way faster to run in the in",
    "start": "1713600",
    "end": "1719760"
  },
  {
    "text": "that hardware environment problem is i think linux is",
    "start": "1719760",
    "end": "1727200"
  },
  {
    "text": "very against that you know and i when i read that i think i always argue wikipedia entries and references some",
    "start": "1728000",
    "end": "1735200"
  },
  {
    "text": "articles the reason they links do not want to use neck offloading like a running software",
    "start": "1735200",
    "end": "1742000"
  },
  {
    "text": "related to transport protocol in the actual neck is because of patches like what if",
    "start": "1742000",
    "end": "1748240"
  },
  {
    "text": "you want to patch this right how do you patch hardware stuff and every vendor is going to do it",
    "start": "1748240",
    "end": "1753520"
  },
  {
    "text": "differently right so for for specific data center might might be a",
    "start": "1753520",
    "end": "1758880"
  },
  {
    "text": "problem that might not be a problem because like i say this the whole thing will be managed by one vendor right the whole hardware but",
    "start": "1758880",
    "end": "1767039"
  },
  {
    "text": "like if there's a security concern like in their transport protocol you want to fix it you want to fix a bug",
    "start": "1767039",
    "end": "1773279"
  },
  {
    "text": "like what do you do in linux you just it's a software you just patch it right and hardware like it's a firmware what",
    "start": "1773279",
    "end": "1779679"
  },
  {
    "text": "do you do you just you have to like yeah it's just it's very complicated to",
    "start": "1779679",
    "end": "1786000"
  },
  {
    "text": "fix when i read this like not a lot of people are in favor of nick offloading putting everything into the neck because",
    "start": "1786000",
    "end": "1792320"
  },
  {
    "text": "of these problems like it's get very sticky to update right especially if you have like a security",
    "start": "1792320",
    "end": "1798640"
  },
  {
    "text": "problems and stuff like that i don't know i know i might be wrong there but i kind of agree that it's like yeah nick",
    "start": "1798640",
    "end": "1803760"
  },
  {
    "start": "1800000",
    "end": "2220000"
  },
  {
    "text": "is faster but is it worth it let's continue reading all right section three",
    "start": "1803760",
    "end": "1809039"
  },
  {
    "text": "everything about tcp is wrong notice that yeah of course it's uh",
    "start": "1809039",
    "end": "1815440"
  },
  {
    "text": "the language used in this paper it's almost used in purpose",
    "start": "1815440",
    "end": "1820880"
  },
  {
    "text": "to ruffle some feathers and ruffle some feathers it did",
    "start": "1820880",
    "end": "1827600"
  },
  {
    "text": "i absolutely love it let's continue this section discusses five key properties of tcp which cover",
    "start": "1827919",
    "end": "1834159"
  },
  {
    "text": "almost all of its designs that's actually very interesting things and we can learn a lot about tcp from",
    "start": "1834159",
    "end": "1841279"
  },
  {
    "text": "this uh this section really steam orientation the idea of having concept of stream",
    "start": "1841279",
    "end": "1847600"
  },
  {
    "text": "instead of messages actual discrete",
    "start": "1847600",
    "end": "1852799"
  },
  {
    "text": "start and end right here messages there is no concept of messages or requests in",
    "start": "1852799",
    "end": "1859279"
  },
  {
    "text": "in tcp right you create this at the application layer you are",
    "start": "1859279",
    "end": "1865120"
  },
  {
    "text": "responsible to do that when you use tcp and that's what http does like cdb has this header",
    "start": "1865120",
    "end": "1871840"
  },
  {
    "text": "called content length and that header has been abused to oblivion with http smuggling attack most hdb's",
    "start": "1871840",
    "end": "1878640"
  },
  {
    "text": "magnetic attack happens because of the stream orientation right where we don't",
    "start": "1878640",
    "end": "1883679"
  },
  {
    "text": "know where the message starts and where the message ends and as a result where the request starts and where the",
    "start": "1883679",
    "end": "1890000"
  },
  {
    "text": "request ends what makes it worse http has actually http the fluid design of",
    "start": "1890000",
    "end": "1895279"
  },
  {
    "text": "http has multiple ways to indicate an end right of an of a request like there is",
    "start": "1895279",
    "end": "1901360"
  },
  {
    "text": "the content length and there is the what is it called the the transfer encoding i believe which is",
    "start": "1901360",
    "end": "1908000"
  },
  {
    "text": "like hey i i don't know i'm gonna have about to send unlimited stuff so just just",
    "start": "1908000",
    "end": "1913360"
  },
  {
    "text": "be ready if i send like backslash n backslash r that's the end of my transmission i think twice black stitch",
    "start": "1913360",
    "end": "1920559"
  },
  {
    "text": "and backslash rb extension bar slasher that that basically hey that that ends my transmission so just because we have",
    "start": "1920559",
    "end": "1927120"
  },
  {
    "text": "multiple ways the problem is like what if you have content length and you have transmission",
    "start": "1927120",
    "end": "1932840"
  },
  {
    "text": "encoding the proxy will process it differently and the back end let's say you know js will trans will process",
    "start": "1932840",
    "end": "1939919"
  },
  {
    "text": "completely differently and as a result hackers can smuggle sensitive requests",
    "start": "1939919",
    "end": "1946640"
  },
  {
    "text": "in the second message that will be processed by that will be skipped completely by the",
    "start": "1946640",
    "end": "1953120"
  },
  {
    "text": "proxy and will be processed by the application on the back end this way i",
    "start": "1953120",
    "end": "1958640"
  },
  {
    "text": "attack i can call an admin api on the back end that has been actually blocked in the proxy so that's what http smugman",
    "start": "1958640",
    "end": "1965600"
  },
  {
    "text": "it's mostly because of the tcp streaming or orientation problem right right they",
    "start": "1965600",
    "end": "1971440"
  },
  {
    "text": "could have mentioned that but they didn't that's like having clear definition of where the",
    "start": "1971440",
    "end": "1977360"
  },
  {
    "text": "message starts and at the transport layer immediately solves this problem we don't",
    "start": "1977360",
    "end": "1983519"
  },
  {
    "text": "have a solution for this problem unfortunately that's why every two days you see you see advisory",
    "start": "1983519",
    "end": "1991440"
  },
  {
    "text": "the idea of having tcp not needs to have a connection because",
    "start": "1998880",
    "end": "2004399"
  },
  {
    "text": "well i don't know why it needs to have a connection now after reading this like i i'm questioning everything to be honest",
    "start": "2004399",
    "end": "2010880"
  },
  {
    "text": "like like why why do you need a connection right yeah it's like i have",
    "start": "2010880",
    "end": "2015919"
  },
  {
    "text": "some state and you can store all the state in the connection that's handy right you have port that comes with port you",
    "start": "2015919",
    "end": "2022880"
  },
  {
    "text": "connect to a port then this way you can have the same host can have many applications",
    "start": "2022880",
    "end": "2030720"
  },
  {
    "text": "and the application is at the connection level you're going to see this is a very similar thing right",
    "start": "2030720",
    "end": "2036799"
  },
  {
    "text": "with the homer with the concept of rpc but homa doesn't have connections they",
    "start": "2036799",
    "end": "2042559"
  },
  {
    "text": "removed all that together yeah because we have connections in tcp no we need to store them and we need to store",
    "start": "2042559",
    "end": "2049200"
  },
  {
    "text": "that state and boy if you have many connections then you're going to need a lot of",
    "start": "2049200",
    "end": "2054320"
  },
  {
    "text": "memory there is a lot of management going on there bandwidth sharing fair scheduling so i",
    "start": "2054320",
    "end": "2060560"
  },
  {
    "text": "didn't really uh know about this in tcp to be honest this is a new thing to me first scheduling or",
    "start": "2060560",
    "end": "2067760"
  },
  {
    "text": "fair queuing or whatever is called i think tcp works at the segment level so",
    "start": "2067760",
    "end": "2073280"
  },
  {
    "text": "if you have a segment if you have like 10 connections coming like all coming to",
    "start": "2073280",
    "end": "2079200"
  },
  {
    "text": "your host right the segments will be processed in order in a fair manner like so you have one",
    "start": "2079200",
    "end": "2085839"
  },
  {
    "text": "segment the segment this segment the segment and it will just round robin through them one by one getting all",
    "start": "2085839",
    "end": "2092320"
  },
  {
    "text": "these segments right so if your segment happened to have one byte and the second segment is fully",
    "start": "2092320",
    "end": "2098720"
  },
  {
    "text": "loaded with content then you will be starved short messages will be start in this",
    "start": "2098720",
    "end": "2105520"
  },
  {
    "text": "example right so short messages living in short segments will starve that's how i",
    "start": "2105520",
    "end": "2111520"
  },
  {
    "text": "understood at least right because you'll have to wait because you're processing a larger messages segments while you",
    "start": "2111520",
    "end": "2118640"
  },
  {
    "text": "have 10 short segments right that needs to that can be processed quickly",
    "start": "2118640",
    "end": "2124240"
  },
  {
    "text": "but instead you decided to wait and serve larger segments right because of",
    "start": "2124240",
    "end": "2130560"
  },
  {
    "text": "just the order is just fair right we'll go through this in details we'll talk about cinder driven congestion control",
    "start": "2130560",
    "end": "2138240"
  },
  {
    "text": "we talked about this right the sender dictates the congestion and where we're going to send data and data and data",
    "start": "2138240",
    "end": "2144960"
  },
  {
    "text": "sent sentences and sensors up [Music] i'm i'm detecting congestion my packets",
    "start": "2144960",
    "end": "2151359"
  },
  {
    "text": "are not being acknowledged my segments are not being acknowledged",
    "start": "2151359",
    "end": "2156560"
  },
  {
    "text": "drop drop drop drop right so the sender that's effectively the bad thing about",
    "start": "2156560",
    "end": "2162079"
  },
  {
    "text": "tcp in order packet delivery so in order packet delivery so the ip packets which",
    "start": "2162079",
    "end": "2169760"
  },
  {
    "text": "carries the tcp segments which have the information about the sick ones",
    "start": "2169760",
    "end": "2174880"
  },
  {
    "text": "will have to be arrived in order so even if your ip packets arrive out of order which will",
    "start": "2174880",
    "end": "2181680"
  },
  {
    "text": "they will right the end of the day because it's the internet i mean the data center you can control that in a",
    "start": "2181680",
    "end": "2188000"
  },
  {
    "text": "sense not not much in the internet then the application the transport layer",
    "start": "2188000",
    "end": "2193920"
  },
  {
    "text": "will start blocking it says oh this is segment number three where is two and",
    "start": "2193920",
    "end": "2199200"
  },
  {
    "text": "one i'm gonna wait for them so the fact that you waited and you did not process segment three",
    "start": "2199200",
    "end": "2205920"
  },
  {
    "text": "despite segment three being complete and um and a good message to be processed is a wasted latency right so",
    "start": "2205920",
    "end": "2214320"
  },
  {
    "text": "the under in order packet delivery is kind of problematic",
    "start": "2214320",
    "end": "2219520"
  },
  {
    "text": "but we solve this problem we know about this we have this problem today with http",
    "start": "2219520",
    "end": "2226000"
  },
  {
    "start": "2220000",
    "end": "2400000"
  },
  {
    "text": "right a browser want to send 10 requests right",
    "start": "2226000",
    "end": "2231599"
  },
  {
    "text": "how does it send requests to the same host in quick we use udp streams which is the very",
    "start": "2231599",
    "end": "2239200"
  },
  {
    "text": "similar concepts just udp to avoid tcp head of blocking",
    "start": "2239200",
    "end": "2244400"
  },
  {
    "text": "but in this case yes in this request they are they are completely independent",
    "start": "2244400",
    "end": "2250560"
  },
  {
    "text": "stream so the application when we arrive at the other end we're",
    "start": "2250560",
    "end": "2255839"
  },
  {
    "text": "gonna see oh this is a it's yeah we received this segment segment number three arabic for segment number one sure",
    "start": "2255839",
    "end": "2263920"
  },
  {
    "text": "yeah they are out of order but they are completely its own stream so i don't care",
    "start": "2263920",
    "end": "2270400"
  },
  {
    "text": "take it and start processing it do not wait for segment two and one to arrive",
    "start": "2270400",
    "end": "2275599"
  },
  {
    "text": "or request one or two to arrive to process request number three that's ridiculous right so that's that's",
    "start": "2275599",
    "end": "2281839"
  },
  {
    "text": "basically uh the idea of head of line blocking again it still exists if you're using a cmtcp",
    "start": "2281839",
    "end": "2288640"
  },
  {
    "text": "connection that's why hdb2 still have the idea of head of line",
    "start": "2288640",
    "end": "2294000"
  },
  {
    "text": "blocking at the tcp layer so that's one limitation of tcp right there right",
    "start": "2294000",
    "end": "2299280"
  },
  {
    "text": "that's why quick solves that completely because quick has independent streams",
    "start": "2299280",
    "end": "2305599"
  },
  {
    "text": "right that's another reason why probably this paper never mentioned quick because",
    "start": "2305599",
    "end": "2312400"
  },
  {
    "text": "same problem the streams we don't care about streams they don't want streams they want messages right",
    "start": "2312400",
    "end": "2319119"
  },
  {
    "text": "so the idea of having street i wish that quick they just thought of a concept to switch to messages and all",
    "start": "2319119",
    "end": "2326320"
  },
  {
    "text": "of this will be gone that's it this this won't exist right if we just implement it in quick",
    "start": "2326320",
    "end": "2334880"
  },
  {
    "text": "the idea of messages i don't think it's gonna be easy but",
    "start": "2334880",
    "end": "2339920"
  },
  {
    "text": "that will solve the problem right technically because that's what they want they want messages",
    "start": "2339920",
    "end": "2345440"
  },
  {
    "text": "but if you think about it like they also want other things the congestion control right we have congestion control and",
    "start": "2345440",
    "end": "2351200"
  },
  {
    "text": "quick we have each stream is has its own congestion control limit",
    "start": "2351200",
    "end": "2357680"
  },
  {
    "text": "it's completely independent so but it's still limited by the sender right so that's",
    "start": "2357680",
    "end": "2365200"
  },
  {
    "text": "something that they don't like i wish they really you know what they didn't mention anything about quick and i'm mad they",
    "start": "2365200",
    "end": "2372079"
  },
  {
    "text": "really should talk about that because like why didn't you pick quick i know the answer the answer is like",
    "start": "2372079",
    "end": "2377760"
  },
  {
    "text": "it's stream so it won't solve anything why not udp just build on top of udp",
    "start": "2377760",
    "end": "2383680"
  },
  {
    "text": "probably they want to reinvent the wheel they don't want that concept of ports",
    "start": "2383680",
    "end": "2389520"
  },
  {
    "text": "which has it udp has it they don't need this concept again i'm making a lot of things up implying and i'm not afraid of",
    "start": "2389520",
    "end": "2397200"
  },
  {
    "text": "implying things because like hey there's it's not written in here and not nothing written here and not in the other paper",
    "start": "2397200",
    "end": "2402960"
  },
  {
    "start": "2400000",
    "end": "2650000"
  },
  {
    "text": "so by the way there's another paper right here uh i'm gonna share it with you which is the actual home",
    "start": "2402960",
    "end": "2408480"
  },
  {
    "text": "implementation back in 2018. i read that nothing no mention of quick nothing",
    "start": "2408480",
    "end": "2414960"
  },
  {
    "text": "let's read let's read stream orientation the data model for tcp is stream of byte",
    "start": "2414960",
    "end": "2422079"
  },
  {
    "text": "however this is not the right model for most data center applications",
    "start": "2422079",
    "end": "2427200"
  },
  {
    "text": "data center applications typically exchange discrete messages to implement remote procedure calls very critical we",
    "start": "2427200",
    "end": "2434319"
  },
  {
    "text": "talked about this right when you when you are in a data center or you have like a microservice to talk",
    "start": "2434319",
    "end": "2441040"
  },
  {
    "text": "into another microsoft it doesn't have to be microsoft it's just the normal data center thing right whatever things",
    "start": "2441040",
    "end": "2447359"
  },
  {
    "text": "they talk about these you know kubernetes or whatever you know other you know host to host or whatever",
    "start": "2447359",
    "end": "2454560"
  },
  {
    "text": "applications have in their data center these communication happen as a request",
    "start": "2454560",
    "end": "2459599"
  },
  {
    "text": "response give me a request give me a response all right",
    "start": "2459599",
    "end": "2464800"
  },
  {
    "text": "and the discrete message is the ramuch group procedural call where hey i'm going to make a request you give me a response",
    "start": "2464800",
    "end": "2472800"
  },
  {
    "text": "this means when an application reads from a stream this is very important that's why i",
    "start": "2472800",
    "end": "2478319"
  },
  {
    "text": "highlighted it there is no guarantee that it will receive a complete message",
    "start": "2478319",
    "end": "2484720"
  },
  {
    "text": "true it's a stream you read whatever the kernel will give you will give you",
    "start": "2485040",
    "end": "2490880"
  },
  {
    "text": "you don't know that's why the application the library the http library for example on node.js needs to continue",
    "start": "2490880",
    "end": "2497200"
  },
  {
    "text": "reading reading until it's it gets a sense of what uh what is",
    "start": "2497200",
    "end": "2502400"
  },
  {
    "text": "reading it's like oh it's a request it's actually a request so there is no guarantee you'll receive a complete message or a complete request",
    "start": "2502400",
    "end": "2509520"
  },
  {
    "text": "think of a message as a request here right it could le it could receive less than a message a full message or parts of",
    "start": "2509520",
    "end": "2516960"
  },
  {
    "text": "several messages right because it might be the messages are so short you might receive i don't know three requests in a",
    "start": "2516960",
    "end": "2524160"
  },
  {
    "text": "single read highly unlikely http requests are so hot large right",
    "start": "2524160",
    "end": "2530319"
  },
  {
    "text": "large is like several bytes gonna be a lot of bytes so i don't know maybe yeah if you make your request so short like",
    "start": "2530319",
    "end": "2537359"
  },
  {
    "text": "get slash the minimum no headers whatever the applicable headers you can",
    "start": "2537359",
    "end": "2542400"
  },
  {
    "text": "do it yeah or use another protocol",
    "start": "2542400",
    "end": "2547599"
  },
  {
    "text": "tcp based application must mark message boundaries when they see realize the",
    "start": "2547599",
    "end": "2553359"
  },
  {
    "text": "messages you have to encode your length somehow in the data so you're",
    "start": "2553359",
    "end": "2559440"
  },
  {
    "text": "wasting precious data from your side as an application to mark",
    "start": "2559440",
    "end": "2567760"
  },
  {
    "text": "messages length and you're responsible for managing the length and stuff like that",
    "start": "2567760",
    "end": "2572960"
  },
  {
    "text": "this is another important thing if multiple threads both read from a stream it is possible",
    "start": "2572960",
    "end": "2579359"
  },
  {
    "text": "that parts of a single message might be received by different thread that's true",
    "start": "2579359",
    "end": "2584480"
  },
  {
    "text": "right if the message is learned if a request is long and you have multiple threads reading from the same stream or",
    "start": "2584480",
    "end": "2591280"
  },
  {
    "text": "socket or a connection right think of a connection as a stream here so",
    "start": "2591280",
    "end": "2596319"
  },
  {
    "text": "not to be confused right again this overloaded of terms is is really killing me you know",
    "start": "2596319",
    "end": "2603119"
  },
  {
    "text": "i just i try to parse this paper but you know professors love to use abstractions",
    "start": "2603119",
    "end": "2608400"
  },
  {
    "text": "as much as possible so that's why i try to parse it i try my best",
    "start": "2608400",
    "end": "2614000"
  },
  {
    "text": "but a stream is a connection as far as i know here a tcp connection right so if you're",
    "start": "2614000",
    "end": "2620000"
  },
  {
    "text": "reading that stream of connection of data and if multiple threads are reading it",
    "start": "2620000",
    "end": "2625680"
  },
  {
    "text": "one large request might be received from one thread and the other part will be received by the other yikes that is the",
    "start": "2625680",
    "end": "2632480"
  },
  {
    "text": "worst case scenario because like oh you got my request can you can you give me the request please so now coordination",
    "start": "2632480",
    "end": "2638880"
  },
  {
    "text": "has to happen it's so expensive i have to agree with that so yeah this is the most interesting thing load balancing",
    "start": "2638880",
    "end": "2644720"
  },
  {
    "text": "how do we actually solve this the first approach used by memcached",
    "start": "2644720",
    "end": "2650400"
  },
  {
    "start": "2650000",
    "end": "2835000"
  },
  {
    "text": "is divide is to divide a collection of streams statically among the thread",
    "start": "2650400",
    "end": "2656480"
  },
  {
    "text": "where each thread handles all the requests arriving on his streams so each each thread has a single stream white",
    "start": "2656480",
    "end": "2663839"
  },
  {
    "text": "why can't we just say this each thread gets a stream basically right so one thread one stream one thread one stream",
    "start": "2663839",
    "end": "2670319"
  },
  {
    "text": "the up this approach is prone to host because this way you don't you want you know you you're not to get the like the",
    "start": "2670319",
    "end": "2677040"
  },
  {
    "text": "two threads dealing with multiple you know same requests right all the requests",
    "start": "2677040",
    "end": "2682480"
  },
  {
    "text": "will be handled by a threat but now this is a problem with the hotspot you're going to get a hotspot problem where one",
    "start": "2682480",
    "end": "2688240"
  },
  {
    "text": "connection will be so busy and the other connection is so light so one thread will be overloaded and the other throw",
    "start": "2688240",
    "end": "2694720"
  },
  {
    "text": "won't be overloaded and that's a problem and i guess in memcache d but then the second approach",
    "start": "2694720",
    "end": "2700000"
  },
  {
    "text": "used by ram cloud it dedicates one thread to read all incoming messages",
    "start": "2700000",
    "end": "2705040"
  },
  {
    "text": "from all connections so all connections one thread it's up to you you can design it any any",
    "start": "2705040",
    "end": "2711440"
  },
  {
    "text": "way you want what's the problem with this so this is so this thread reads all the messages all",
    "start": "2711440",
    "end": "2717680"
  },
  {
    "text": "the stream data which is a bunch of segments which now becomes a stream of data and now it",
    "start": "2717680",
    "end": "2724640"
  },
  {
    "text": "dispatches dispatch messages to the thread so that that is responsible to",
    "start": "2724640",
    "end": "2731680"
  },
  {
    "text": "breaking down the boundaries of the message it's like oh you are an http request wait where do you start you",
    "start": "2731680",
    "end": "2738240"
  },
  {
    "text": "start here oh this is where you hand because you're contending there so it needs to pass this all takes cpu",
    "start": "2738240",
    "end": "2743839"
  },
  {
    "text": "processing power right then so imagine if this we can be offloaded",
    "start": "2743839",
    "end": "2749359"
  },
  {
    "text": "to somewhere else that'll be really interesting i just i i love absolutely love that part",
    "start": "2749359",
    "end": "2754880"
  },
  {
    "text": "where the message boundary is handled at the transport layer",
    "start": "2754880",
    "end": "2761680"
  },
  {
    "text": "i love this i love this in this design we it's it's a novel idea that i never",
    "start": "2761680",
    "end": "2768160"
  },
  {
    "text": "yeah because to me i always think of messages or requests being processed application layer but why why do we have",
    "start": "2768160",
    "end": "2774880"
  },
  {
    "text": "to why why not push this down at the layer four let layer four does it this",
    "start": "2774880",
    "end": "2780640"
  },
  {
    "text": "stuff and even better i'll float this to the neck although i don't know if it's a good idea i think it's gonna buy this in",
    "start": "2780640",
    "end": "2786880"
  },
  {
    "text": "the butt in the future if we upload everything to the neck right i don't know",
    "start": "2786880",
    "end": "2793119"
  },
  {
    "text": "i don't know anything you guys dedicates one thread to read all the",
    "start": "2793119",
    "end": "2798400"
  },
  {
    "text": "incoming messages from all streams and then dispatch messages to the thread of the service so the thread is doing a lot",
    "start": "2798400",
    "end": "2804079"
  },
  {
    "text": "of work here this is also much better blood balancing worker because now the thread knows",
    "start": "2804079",
    "end": "2810240"
  },
  {
    "text": "which thread is which which thread h thread is doing right that's actually very interesting",
    "start": "2810240",
    "end": "2815440"
  },
  {
    "text": "so you can do a better load balancing there is no hot spotting",
    "start": "2815440",
    "end": "2820480"
  },
  {
    "text": "man this is a completely different world you know i absolutely love this",
    "start": "2820480",
    "end": "2826240"
  },
  {
    "text": "but the dispatcher thread becomes a throw put what button neck it makes sense right",
    "start": "2826240",
    "end": "2832079"
  },
  {
    "text": "it becomes a bottleneck the fundamental problem with streaming is that units of where in which data is received ranges",
    "start": "2832079",
    "end": "2839040"
  },
  {
    "start": "2835000",
    "end": "3060000"
  },
  {
    "text": "of by do not correspond to dispatchable units work of messages why not",
    "start": "2839040",
    "end": "2845760"
  },
  {
    "text": "why not why not let me let me challenge that let me challenge that can we fix that with tcp",
    "start": "2845760",
    "end": "2852400"
  },
  {
    "text": "can we fix that can i",
    "start": "2852400",
    "end": "2857200"
  },
  {
    "text": "assuming we don't have a limit in my mtu right",
    "start": "2857839",
    "end": "2863520"
  },
  {
    "text": "assume i don't have a limit to my mtu right because i'm in a data center i'm gonna make i don't know one gig my mtu i",
    "start": "2863680",
    "end": "2871119"
  },
  {
    "text": "don't know if that's even possible let's say it is right that means my ip package is so large",
    "start": "2871119",
    "end": "2877440"
  },
  {
    "text": "right can we even have a gig ip packet 2 to power what 16 bit",
    "start": "2877440",
    "end": "2883280"
  },
  {
    "text": "so that gives us 65 k",
    "start": "2883280",
    "end": "2888480"
  },
  {
    "text": "that's tiny dude so the largest mtu we can get is 65k in ipv4 right",
    "start": "2888480",
    "end": "2895119"
  },
  {
    "text": "that is tiny dude 65k so that's the largest mtu we can get all",
    "start": "2895119",
    "end": "2901040"
  },
  {
    "text": "right okay that is tiny i have to agree with you all right but i'm still gonna continue",
    "start": "2901040",
    "end": "2906160"
  },
  {
    "text": "my theory here right ipv6 um let's see ipv6 yeah it",
    "start": "2906160",
    "end": "2911599"
  },
  {
    "text": "sounds like a 64k all right regardless let's go back all right let's let's",
    "start": "2911599",
    "end": "2916800"
  },
  {
    "text": "let's stick with this all right so let's say the mtu is 65k because apparently anything larger than",
    "start": "2916800",
    "end": "2924079"
  },
  {
    "text": "that doesn't make sense because it can't fit the ip header where did i hear that that sometimes the",
    "start": "2924079",
    "end": "2930400"
  },
  {
    "text": "payload is zero so you put the payload length at zero and you can put whatever",
    "start": "2930400",
    "end": "2935599"
  },
  {
    "text": "you want yeah i'm pretty sure there was i read something like that i might be wrong but yeah let's assume 65k like",
    "start": "2935599",
    "end": "2942480"
  },
  {
    "text": "don't send any message larger than 65k alright let's let's let's let's put some restriction here so now the mtu that",
    "start": "2942480",
    "end": "2949359"
  },
  {
    "text": "large then you have the frame is 65k obviously and then you have the ip",
    "start": "2949359",
    "end": "2954880"
  },
  {
    "text": "packet as a 65k and then as a result the mss will be 65k minus whatever 40",
    "start": "2954880",
    "end": "2961440"
  },
  {
    "text": "bytes of the headers that's beautiful right this way now you can control each",
    "start": "2961440",
    "end": "2968319"
  },
  {
    "text": "message you send actually send it in a segment so now if your message is a thousand by",
    "start": "2968319",
    "end": "2974880"
  },
  {
    "text": "have a low level api which you i believe you can flush the segment",
    "start": "2974880",
    "end": "2980720"
  },
  {
    "text": "one segment it doesn't have to be full and have your application",
    "start": "2980720",
    "end": "2986480"
  },
  {
    "text": "treat the segment as a message can we do this can we do this is this even possible i'm",
    "start": "2986480",
    "end": "2992880"
  },
  {
    "text": "just challenging this i don't know if it's possible or not if you can in gcb treat the segment as a unit of",
    "start": "2992880",
    "end": "3000800"
  },
  {
    "text": "work then for free we got the length you guys that's the message length",
    "start": "3000800",
    "end": "3007119"
  },
  {
    "text": "can we do this can we do this you guys",
    "start": "3007119",
    "end": "3012319"
  },
  {
    "text": "maybe not maybe yes right unless if there is like if this is if",
    "start": "3012319",
    "end": "3018160"
  },
  {
    "text": "middle middle router try to play with the segments and re-transmit it i cannot",
    "start": "3018160",
    "end": "3023760"
  },
  {
    "text": "guarantee that i don't think we can guarantee the segment size right if you have proxies forget about it right if",
    "start": "3023760",
    "end": "3029920"
  },
  {
    "text": "you have like end to end the host is behind a proxy right and then the proxy is like you're",
    "start": "3029920",
    "end": "3035760"
  },
  {
    "text": "establishing a specification between you and the proxy and the proxy establish connection with the back-end",
    "start": "3035760",
    "end": "3041200"
  },
  {
    "text": "actual back-end then you the proxy have to rewrite these segments to the to the",
    "start": "3041200",
    "end": "3046319"
  },
  {
    "text": "back-end right so you have to make sure that proxy is actually rewriting the same segment sizes which you cannot",
    "start": "3046319",
    "end": "3053680"
  },
  {
    "text": "guarantee because there is no these these are not written in stone as far as i know right these segment sizes",
    "start": "3053680",
    "end": "3061280"
  },
  {
    "start": "3060000",
    "end": "3180000"
  },
  {
    "text": "it's like whatever you receive doesn't won't necessarily go into that i think so it",
    "start": "3061280",
    "end": "3066960"
  },
  {
    "text": "might work it might not but i i guess it's safer to create a new protocol but i know",
    "start": "3066960",
    "end": "3073040"
  },
  {
    "text": "i would like to give it a try first it would be better for each message to be dispatched to a different thread so",
    "start": "3073040",
    "end": "3079920"
  },
  {
    "text": "messages can be concurrently so that's another advantage now that if the thread knows where the",
    "start": "3079920",
    "end": "3087040"
  },
  {
    "text": "message starts where the message ends then it can be oh this is one message you thread take it here one ticket right",
    "start": "3087040",
    "end": "3094480"
  },
  {
    "text": "that's the same thing if you if we somehow can guarantee that's what i'm saying right if you can somehow",
    "start": "3094480",
    "end": "3100160"
  },
  {
    "text": "guarantee a message fitting in a single segment then we can solve this",
    "start": "3100160",
    "end": "3106240"
  },
  {
    "text": "right can we guarantee that i don't have an answer to that let's say this highlighted that i highlighted the red",
    "start": "3106240",
    "end": "3112240"
  },
  {
    "text": "for some reason in this word the nick should perform load balancing",
    "start": "3112240",
    "end": "3117520"
  },
  {
    "text": "dispatching incoming requests across a collection of application threads via kernel bypass",
    "start": "3117520",
    "end": "3124079"
  },
  {
    "text": "however this will not be possible since information about message boundaries is",
    "start": "3124079",
    "end": "3129440"
  },
  {
    "text": "application specific and unknown to transform layer i think i mentioned that but i highlighted it here again because",
    "start": "3129440",
    "end": "3136000"
  },
  {
    "text": "it's so important the fact that the information the metadata about the message is available at the transport",
    "start": "3136000",
    "end": "3142559"
  },
  {
    "text": "layer is so powerful which you think about it the segment does have a size right the",
    "start": "3142559",
    "end": "3148640"
  },
  {
    "text": "the the length of the actual content of the segment this is how that's the",
    "start": "3148640",
    "end": "3153680"
  },
  {
    "text": "length of the segment it does have that right the data length right",
    "start": "3153680",
    "end": "3158880"
  },
  {
    "text": "but maybe it's not guaranteed right",
    "start": "3158880",
    "end": "3164000"
  },
  {
    "text": "that's why we cannot use it right but what they are inventing effectively is",
    "start": "3164000",
    "end": "3170160"
  },
  {
    "text": "eventing the same concept of a segment was a as a there's a decree a discrete",
    "start": "3170160",
    "end": "3175520"
  },
  {
    "text": "message here obviously it's more complicated than i'm mentioning but but yeah",
    "start": "3175520",
    "end": "3181280"
  },
  {
    "start": "3180000",
    "end": "3600000"
  },
  {
    "text": "if the if the nick for example knows about the link it can it can do the work and then",
    "start": "3181280",
    "end": "3186319"
  },
  {
    "text": "immediately dispatch the message to the thread all right let's uh we are reaching connection orientation very",
    "start": "3186319",
    "end": "3192480"
  },
  {
    "text": "critical so the concept of connections in tcp is",
    "start": "3192480",
    "end": "3197839"
  },
  {
    "text": "we've talked about this right whatsapp you know at some point supported one",
    "start": "3197839",
    "end": "3202880"
  },
  {
    "text": "million tcp guys and then they are back to three and i believe that now they're more than that three million tcp",
    "start": "3202880",
    "end": "3209440"
  },
  {
    "text": "election pair hosts and they are doing their best to uh to make sure that they fit a",
    "start": "3209440",
    "end": "3215760"
  },
  {
    "text": "lot of connection in a single host tcp connection that is in a single host right",
    "start": "3215760",
    "end": "3221040"
  },
  {
    "text": "so they're squeezing as much as possible memory wise right",
    "start": "3221040",
    "end": "3226400"
  },
  {
    "text": "but the reason they cannot go more than that is because of because each connection takes memory right",
    "start": "3226400",
    "end": "3232559"
  },
  {
    "text": "it's a long lift connection states left and right there's window sizes there's the sequences what kind of the sequence",
    "start": "3232559",
    "end": "3238800"
  },
  {
    "text": "the file descriptors right and i i believe linux as they mentioned here yeah it's actually in the mission here let's go let's read",
    "start": "3238800",
    "end": "3245200"
  },
  {
    "text": "actually connections are under the undesirable data center environment because application can have hundreds or",
    "start": "3245200",
    "end": "3251839"
  },
  {
    "text": "thousands of them resulting in high overhead in space",
    "start": "3251839",
    "end": "3257520"
  },
  {
    "text": "and time for example an external keeps about two kilobytes of state for each",
    "start": "3257520",
    "end": "3263200"
  },
  {
    "text": "tcp soccer excluding bucket packet buffers additional state is required at the",
    "start": "3263200",
    "end": "3269520"
  },
  {
    "text": "application level yeah that's that's that's a positive point we talked about this many times",
    "start": "3269520",
    "end": "3276640"
  },
  {
    "text": "at one of the you know pet peeves in the tcp is the connection it's just it's it's it's expensive to keep a connection",
    "start": "3276640",
    "end": "3283200"
  },
  {
    "text": "a stateful connection and a server and might say at the client level as well right",
    "start": "3283200",
    "end": "3289040"
  },
  {
    "text": "so yeah it's expensive to give a connection so they don't like that they want to change that",
    "start": "3289040",
    "end": "3295119"
  },
  {
    "text": "facebook found memory demand for a separate connection demanding this allows a single connection for each",
    "start": "3295119",
    "end": "3301680"
  },
  {
    "text": "server to be shared across all application thread a single can so they match they made",
    "start": "3301680",
    "end": "3308000"
  },
  {
    "text": "sure that a single connection is shared across all applications right let's continue reading here",
    "start": "3308000",
    "end": "3314960"
  },
  {
    "text": "right so that's what they did they started okay instead of having a lot of connections let's have one connection",
    "start": "3314960",
    "end": "3320160"
  },
  {
    "text": "and share it between application threads right so effectively we're multiplexing right that's multiplexing we're",
    "start": "3320160",
    "end": "3326799"
  },
  {
    "text": "multiplexing with things going into one right to reduce proxy overhead facebook uses",
    "start": "3326799",
    "end": "3333200"
  },
  {
    "text": "udp because there is an overhead now now that we have with proxies and we have this connection we have an overhead so",
    "start": "3333200",
    "end": "3339760"
  },
  {
    "text": "they use udp instead of tcp to tolerate the unreliability but",
    "start": "3339760",
    "end": "3346880"
  },
  {
    "text": "this sacrifices congestion control for the europe we know that right but i believe this this is now outdated",
    "start": "3347119",
    "end": "3353440"
  },
  {
    "text": "because i'm pretty sure facebook completely moved to quick yeah quicker is on top of udp",
    "start": "3353440",
    "end": "3361359"
  },
  {
    "text": "but quick supports congestion control at the stream level might say",
    "start": "3361359",
    "end": "3367040"
  },
  {
    "text": "so yeah maybe this this paper was written a little bit a while back",
    "start": "3367040",
    "end": "3372079"
  },
  {
    "text": "the overhead for connection state are also problematic when offloading the transport to the neck due to limited",
    "start": "3372079",
    "end": "3378079"
  },
  {
    "text": "resources on the next chip yeah what you're gonna you're gonna float the tcp connections down to the neck that's",
    "start": "3378079",
    "end": "3385280"
  },
  {
    "text": "impossible right what how much memory can you handle on that controller that's",
    "start": "3385280",
    "end": "3391920"
  },
  {
    "text": "that's not possible all right so that i i believe they want to move to the neck",
    "start": "3391920",
    "end": "3398079"
  },
  {
    "text": "that's from the from the paper here the in ic the network",
    "start": "3398079",
    "end": "3404480"
  },
  {
    "text": "interface controller they don't move everything as much as possible from software to the hardware and make it firmware yeah patching is",
    "start": "3404480",
    "end": "3411119"
  },
  {
    "text": "gonna be a nightmare but they they're gonna take care of it's a data center who cares right",
    "start": "3411119",
    "end": "3417359"
  },
  {
    "text": "still security vulnerability stuff like that i don't know man sounds to me like",
    "start": "3417359",
    "end": "3423440"
  },
  {
    "text": "easier to patch an operating system than a hardware firmware especially if you have thousands and",
    "start": "3423440",
    "end": "3429200"
  },
  {
    "text": "hundreds of thousands servers i don't know if you thought about that i don't know it's a good idea yeah it's",
    "start": "3429200",
    "end": "3435839"
  },
  {
    "text": "fast but another problem with connection is that they require a setup phase before any",
    "start": "3435839",
    "end": "3443599"
  },
  {
    "text": "data can be transmitted sure we know that there's since an x ack",
    "start": "3443599",
    "end": "3448960"
  },
  {
    "text": "not only that they didn't mention even the encryption here like tls you gotta have encryption between your data centers right",
    "start": "3448960",
    "end": "3455280"
  },
  {
    "text": "so you can encrypt so yep there is a handshake going on",
    "start": "3455280",
    "end": "3460480"
  },
  {
    "text": "i don't read anything related to encryption when it comes to homer now that i um",
    "start": "3460480",
    "end": "3465680"
  },
  {
    "text": "actually thinking about it didn't read anything related to encryption maybe they don't have that",
    "start": "3465680",
    "end": "3472000"
  },
  {
    "text": "or maybe they do bandwidth sharing so there's a console fair schedule which we talked about in in tcp unfortunately",
    "start": "3472000",
    "end": "3478720"
  },
  {
    "text": "scheduling discipline like this which is this fair thing like a segment as a segment hey you get a segment ugly",
    "start": "3478720",
    "end": "3485200"
  },
  {
    "text": "segment segment segment so even if the segment is one byte and this segment is",
    "start": "3485200",
    "end": "3491040"
  },
  {
    "text": "1500 bytes which is full segment then i'm gonna process them in order",
    "start": "3491040",
    "end": "3498000"
  },
  {
    "text": "i don't care if you have you might have a thousand one byte segments and we have",
    "start": "3498000",
    "end": "3503680"
  },
  {
    "text": "uh three uh or we have like a couple link longer segments which is like this",
    "start": "3503680",
    "end": "3510960"
  },
  {
    "text": "actual uh tcp segment right then the or in order is fair it's like hey i don't care",
    "start": "3510960",
    "end": "3517440"
  },
  {
    "text": "if you're short online i'm gonna process you one bite then process one fifteen hundred and then process fifty hundred",
    "start": "3517440",
    "end": "3523119"
  },
  {
    "text": "then press 1500 up until until i go back to you and then process another bite so",
    "start": "3523119",
    "end": "3529440"
  },
  {
    "text": "technically the shorter messages are starving because you have 10 shorter messages",
    "start": "3529440",
    "end": "3534640"
  },
  {
    "text": "that can be processed in one go but you have waited because you are fair i don't know what i'm doing air codes",
    "start": "3534640",
    "end": "3541839"
  },
  {
    "text": "but yeah so that's uh they don't like that so they're shifting to this thing that's called shortest remaining",
    "start": "3541839",
    "end": "3546880"
  },
  {
    "text": "processing time and and basically what that means is that uh",
    "start": "3546880",
    "end": "3552319"
  },
  {
    "text": "as i am processing something i'm gonna i wanna know like how",
    "start": "3552319",
    "end": "3557760"
  },
  {
    "text": "how how long are you how short are you in tcp we don't know the length right of the actual message",
    "start": "3557760",
    "end": "3564559"
  },
  {
    "text": "we know the length of the segment which is useless right right but we don't know the length of the message so but if we",
    "start": "3564559",
    "end": "3570559"
  },
  {
    "text": "do we could have then oh how much uh how much are we remaining for this oh we need a thousand bytes for this 20 20. oh",
    "start": "3570559",
    "end": "3577520"
  },
  {
    "text": "let me just process the shortest the 20s and then i'm gonna hit that one thousand and one one hit so you your",
    "start": "3577520",
    "end": "3584720"
  },
  {
    "text": "throughput automatically increases here right it's just fascinating stuff i like to",
    "start": "3584720",
    "end": "3591040"
  },
  {
    "text": "think about all this stuff that's good stuff that's good stuff provide better overall response time",
    "start": "3591040",
    "end": "3596720"
  },
  {
    "text": "because they they dedicate all of the available resources to a single task at a time",
    "start": "3596720",
    "end": "3602960"
  },
  {
    "start": "3600000",
    "end": "3780000"
  },
  {
    "text": "ensuring that it finishes quickly right so it's like hey single task little finish you let's finish you up",
    "start": "3602960",
    "end": "3608480"
  },
  {
    "text": "let's wrap it up anything is that can be and that's because it comes back to",
    "start": "3608480",
    "end": "3614000"
  },
  {
    "text": "priorities and stuff like that again i realized important stuff tcp has no information about message boundaries",
    "start": "3614000",
    "end": "3621440"
  },
  {
    "text": "we do not know where the message starts and where the message into this cinder driven conjection",
    "start": "3621440",
    "end": "3628799"
  },
  {
    "text": "control tcp drives congestion control from senders which voluntarily",
    "start": "3628799",
    "end": "3635599"
  },
  {
    "text": "slow their rate of packet transmission when they detect conduction we talked about that right that's one problem another problem with",
    "start": "3635599",
    "end": "3642319"
  },
  {
    "text": "the tcp again a problem for data centers that is so the continue again discussing uh",
    "start": "3642319",
    "end": "3649280"
  },
  {
    "text": "congestion control here they rely on conjunction signals related to buffer occupancy more commonly",
    "start": "3649280",
    "end": "3654720"
  },
  {
    "text": "switches generate ecn notification when cue length reach a certain for sure i",
    "start": "3654720",
    "end": "3660880"
  },
  {
    "text": "talked about that uh the eca notification where if the routers or the switches again",
    "start": "3660880",
    "end": "3667760"
  },
  {
    "text": "saying just switches here to me a switch is a layer two thing it has nothing to do with layer three it does it doesn't",
    "start": "3667760",
    "end": "3674000"
  },
  {
    "text": "it doesn't touch the ip packets right again maybe in the data center they speak this language to me it's confusing",
    "start": "3674000",
    "end": "3682000"
  },
  {
    "text": "you have to say layer three switch you can't just say switch right so that's one another another pet peeve with this",
    "start": "3682000",
    "end": "3688799"
  },
  {
    "text": "paper it's like yeah is it specifically say layer three switch which are switches that look at layer three which",
    "start": "3688799",
    "end": "3695359"
  },
  {
    "text": "is the ip protocol and does the stuff to that stuf at that layer right",
    "start": "3695359",
    "end": "3701280"
  },
  {
    "text": "reads the ip headers which most switches just read you know the mac addresses the frames right it doesn't care about the",
    "start": "3701280",
    "end": "3707920"
  },
  {
    "text": "ip either so layer 3 switches does a deep packet inspection and",
    "start": "3707920",
    "end": "3713920"
  },
  {
    "text": "determines the iep packet and when it does that there is a bit that it can set in the ip called the ecn which is the",
    "start": "3713920",
    "end": "3721599"
  },
  {
    "text": "explicit congestion notification it tells uh",
    "start": "3721599",
    "end": "3727359"
  },
  {
    "text": "as it processes this packet it will say hey i'm i'm about to be congested there is a lot of stuff in my buffer",
    "start": "3727359",
    "end": "3734319"
  },
  {
    "text": "it marks it up so as it go as the iep package goes all the way to the host the",
    "start": "3734319",
    "end": "3739599"
  },
  {
    "text": "host replay back that ip packet and sits it in to",
    "start": "3739599",
    "end": "3745599"
  },
  {
    "text": "sit the acn header in the ip packet and this way the sender will know that oh",
    "start": "3745599",
    "end": "3750960"
  },
  {
    "text": "something happened congestion happen but look how long it took right",
    "start": "3750960",
    "end": "3756480"
  },
  {
    "text": "for the cinder to know there was a conjunction it was it took a whole round trip basically",
    "start": "3756480",
    "end": "3762559"
  },
  {
    "text": "and that's what i mentioned here it takes about one route one rtt for a",
    "start": "3762559",
    "end": "3767680"
  },
  {
    "text": "sender to find out about traffic changes tcp does not take advantage of priority queues",
    "start": "3767680",
    "end": "3773200"
  },
  {
    "text": "in modern network i honestly don't know what a priority queue is now maybe again network engineers let us",
    "start": "3773200",
    "end": "3779280"
  },
  {
    "text": "know in the comment section uh apparently it's it's a specific feature in switches that allows",
    "start": "3779280",
    "end": "3786960"
  },
  {
    "start": "3780000",
    "end": "4020000"
  },
  {
    "text": "certain packets to have a priority over others thus all packets are treated equal for short",
    "start": "3786960",
    "end": "3793359"
  },
  {
    "text": "messages can get queued behind long one and that's a bad thing for data center",
    "start": "3793359",
    "end": "3798400"
  },
  {
    "text": "because a short message cured behind a long one you know the long one will take longer time to",
    "start": "3798400",
    "end": "3804880"
  },
  {
    "text": "process and when i say process i don't mean the application actually processing it right in the app no i mean just just",
    "start": "3804880",
    "end": "3812640"
  },
  {
    "text": "to receive that message to deliver that message it takes time more time to",
    "start": "3812640",
    "end": "3817680"
  },
  {
    "text": "deliver than a single shorter message in order packet delivery another bad thing about the tcp",
    "start": "3817680",
    "end": "3824720"
  },
  {
    "text": "as far as this paper mentioned in data center networks the most effective way to perform load balancing is to perform",
    "start": "3824720",
    "end": "3830799"
  },
  {
    "text": "packet spraying which is something new to me as well",
    "start": "3830799",
    "end": "3835920"
  },
  {
    "text": "packet spraying if you don't know is the idea of having a lot of you have a lot of packets",
    "start": "3835920",
    "end": "3841599"
  },
  {
    "text": "coming ip packets that is and then you just spray it across the different links that you have like for load balancing",
    "start": "3841599",
    "end": "3848400"
  },
  {
    "text": "reasons let's say you have uh your switch or your router has multiple links and all of these links",
    "start": "3848400",
    "end": "3855440"
  },
  {
    "text": "eventually they are load balanced right and it will it will eventually lead",
    "start": "3855440",
    "end": "3860480"
  },
  {
    "text": "there will it's a whole a mesh at the end of the day right if you think about it this way then you can send the packet",
    "start": "3860480",
    "end": "3866240"
  },
  {
    "text": "number one here packet number two here packet number three here instead of thinking packet packet packet using",
    "start": "3866240",
    "end": "3871280"
  },
  {
    "text": "packet packet number one two three on each link so effectively you're spraying",
    "start": "3871280",
    "end": "3877039"
  },
  {
    "text": "the packets just like as a hose just playing it i'm doing that with my hand now just spraying the hose",
    "start": "3877039",
    "end": "3883760"
  },
  {
    "text": "right so what's wrong can we do this in tcp apparently not so instead tcp network",
    "start": "3883760",
    "end": "3891039"
  },
  {
    "text": "must use flow consistent routing where all the packets from a given connection take the same trajectory through the",
    "start": "3891039",
    "end": "3897359"
  },
  {
    "text": "network flow consisting route and ensures in order packet delivery but it",
    "start": "3897359",
    "end": "3902480"
  },
  {
    "text": "virtually guarantees that there will be overloaded links in the network yeah that makes sense right because you're",
    "start": "3902480",
    "end": "3908720"
  },
  {
    "text": "now you're now everything just goes into the same link but",
    "start": "3908720",
    "end": "3914240"
  },
  {
    "text": "it creates a hotspot like for a connection it just follows one link but",
    "start": "3914240",
    "end": "3919680"
  },
  {
    "text": "i'm really surprised to learn about this do we really in the internet forget about the data centers i don't have an",
    "start": "3919680",
    "end": "3926079"
  },
  {
    "text": "answer for that do routers in the internet actually do that",
    "start": "3926079",
    "end": "3932079"
  },
  {
    "text": "do they look at the source and the destination and then say oh your tcp and you're",
    "start": "3932079",
    "end": "3938319"
  },
  {
    "text": "going to this source so you're always going to take this path so we can ensure in order",
    "start": "3938319",
    "end": "3943520"
  },
  {
    "text": "uh guarantee and is that why multipath",
    "start": "3943520",
    "end": "3949039"
  },
  {
    "text": "tcp was invented right because",
    "start": "3949039",
    "end": "3954079"
  },
  {
    "text": "to take a different path effectively that sounds like a bad idea for doing",
    "start": "3954079",
    "end": "3959359"
  },
  {
    "text": "that really on the internet that sounds like a bad idea i don't know",
    "start": "3959359",
    "end": "3966480"
  },
  {
    "text": "i don't know anything anymore really we're just doing a sticky session",
    "start": "3966480",
    "end": "3972480"
  },
  {
    "text": "per connection yeah but apparently from this paper this is the second time i've seen this term",
    "start": "3972480",
    "end": "3978880"
  },
  {
    "text": "the flow consistent first and when i read the multi-path tcp paper and then",
    "start": "3978880",
    "end": "3984240"
  },
  {
    "text": "when i wrote this paper flow consistent sounds like this is what's happening it's like i i can't find information anymore",
    "start": "3984240",
    "end": "3991119"
  },
  {
    "text": "online about these low-level questions i need to speak to someone who",
    "start": "3991119",
    "end": "3997119"
  },
  {
    "text": "is an expert not not me you know obviously i need to ask someone who",
    "start": "3997119",
    "end": "4002640"
  },
  {
    "text": "actually entrenched with this on a day-to-day basis that knows these answers because i don't have answers to",
    "start": "4002640",
    "end": "4008559"
  },
  {
    "text": "this to be honest so here is they say tcp is beyond repair",
    "start": "4008559",
    "end": "4015759"
  },
  {
    "text": "tcp is beyond repair again one of the problems consider",
    "start": "4015920",
    "end": "4021520"
  },
  {
    "start": "4020000",
    "end": "4110000"
  },
  {
    "text": "congestion control right and this is the data center tcp let's talk about a little bit there is a",
    "start": "4021520",
    "end": "4026799"
  },
  {
    "text": "center tcp protocol you you remember when i talked about the explicit congestion",
    "start": "4026799",
    "end": "4032839"
  },
  {
    "text": "notification all right this bit that we set in the ip header what happens is",
    "start": "4032839",
    "end": "4040720"
  },
  {
    "text": "that bit that tells you there is a congestion it doesn't tell you anything else it doesn't tell you how much congestion how much are we about to get",
    "start": "4040720",
    "end": "4048880"
  },
  {
    "text": "be congested how much bite left doesn't tell you any of that data center speed",
    "start": "4048880",
    "end": "4054400"
  },
  {
    "text": "sets more metadata to the sender to make better decisions about congestion that's",
    "start": "4054400",
    "end": "4059520"
  },
  {
    "text": "that's all what it is and if you want to read more about us right here that's the abstract",
    "start": "4059520",
    "end": "4066000"
  },
  {
    "text": "the data center tcp just it's rfc for those listening it's rfc it's rfc 8257",
    "start": "4066000",
    "end": "4074480"
  },
  {
    "text": "for those who are interested so again they're mentioning here that all of these schemes all the protocols that try",
    "start": "4074480",
    "end": "4081599"
  },
  {
    "text": "to enhance tcp or recreate tcp are based on the fundamental problem",
    "start": "4081599",
    "end": "4087920"
  },
  {
    "text": "that it is buffer based right so if one of the routers in the middle uh filled",
    "start": "4087920",
    "end": "4093599"
  },
  {
    "text": "up tough luck right that's the only signal right which they want to change that",
    "start": "4093599",
    "end": "4100000"
  },
  {
    "text": "buffer is not just because you're you're filled with stuff doesn't mean it's time to drop it",
    "start": "4100000",
    "end": "4106318"
  },
  {
    "text": "they want to change that they want to flip that they want to avoid the buffer to begin with it's very interesting",
    "start": "4106319",
    "end": "4114159"
  },
  {
    "start": "4110000",
    "end": "4260000"
  },
  {
    "text": "let's continue we're almost there now we'll get to houma homo is a clean slate redesign of",
    "start": "4114159",
    "end": "4121040"
  },
  {
    "text": "network transport or for the data center so the first concept messages homo is",
    "start": "4121040",
    "end": "4127440"
  },
  {
    "text": "message based it's not biased it's it's not streams it's message based so at the transport",
    "start": "4127440",
    "end": "4134080"
  },
  {
    "text": "layer at layer four you have access to a message it's a complete message when i get you",
    "start": "4134080",
    "end": "4139278"
  },
  {
    "text": "something it's a complete message yeah that's the that's the work we're working",
    "start": "4139279",
    "end": "4145040"
  },
  {
    "text": "around a message that context is a message yeah we kind of got that with the with",
    "start": "4145040",
    "end": "4150480"
  },
  {
    "text": "the with tcp we got segments but segment didn't really correspond to messages and",
    "start": "4150480",
    "end": "4156560"
  },
  {
    "text": "that's what breaks this a client sends a request message to a server and eventually receives a response message",
    "start": "4156560",
    "end": "4163600"
  },
  {
    "text": "the primary advantage of a message is they make dispatchable unit explicit at",
    "start": "4163600",
    "end": "4169359"
  },
  {
    "text": "the transport layer this dispatchable unit of work not",
    "start": "4169359",
    "end": "4174719"
  },
  {
    "text": "a bunch of bytes right it's actual message that we can consume immediately and we can work on",
    "start": "4174719",
    "end": "4182318"
  },
  {
    "text": "it immediately nick based implementation of the protocol could dispatch message directly",
    "start": "4182319",
    "end": "4187920"
  },
  {
    "text": "to a pool forker thread via kernel bypass so now even if you implemented huma",
    "start": "4187920",
    "end": "4193679"
  },
  {
    "text": "in the neck in the network uh interface controller the neck will",
    "start": "4193679",
    "end": "4199360"
  },
  {
    "text": "only give the application a message that it immediately can consume not just a",
    "start": "4199360",
    "end": "4204960"
  },
  {
    "text": "byte so the application has to do zero work when it comes to you know parsing and doing all this",
    "start": "4204960",
    "end": "4211360"
  },
  {
    "text": "you know uh work that the http people are called as oh content length blah blah blah you",
    "start": "4211360",
    "end": "4217199"
  },
  {
    "text": "know doesn't have any of that right it's just immediately consume it",
    "start": "4217199",
    "end": "4222880"
  },
  {
    "text": "beautiful it's a it's a commended way but the moment we work with messages you",
    "start": "4222880",
    "end": "4228000"
  },
  {
    "text": "guys forget about video streaming this is useless for video streaming this",
    "start": "4228000",
    "end": "4234239"
  },
  {
    "text": "is useless for gaming you know the concept of the gaming maybe yeah well it depends on the game i guess",
    "start": "4234239",
    "end": "4240960"
  },
  {
    "text": "right if a game relies heavily on delivering state from the server then",
    "start": "4240960",
    "end": "4247760"
  },
  {
    "text": "that's would be large messages i take that back maybe it's it's it might be a good idea for the game but if you're",
    "start": "4247760",
    "end": "4253600"
  },
  {
    "text": "receiving like a video streaming or live streaming that forget about any of that stuff no audio calls",
    "start": "4253600",
    "end": "4261440"
  },
  {
    "start": "4260000",
    "end": "4320000"
  },
  {
    "text": "that won't that won't work with homer because you'll have to wait for the whole",
    "start": "4261440",
    "end": "4266640"
  },
  {
    "text": "message to arrive in order to deliver it for the application that is the trick so if you",
    "start": "4266640",
    "end": "4272960"
  },
  {
    "text": "have a large message the nick is buffering this message i think it should right so that's",
    "start": "4272960",
    "end": "4279520"
  },
  {
    "text": "another limitations like what if you have like a large message are you going to buffer it in the neck and does the",
    "start": "4279520",
    "end": "4285360"
  },
  {
    "text": "does the neck actually support buffering these large messages so for example an application cannot",
    "start": "4285360",
    "end": "4291120"
  },
  {
    "text": "receive any part of the message until the entire message has been received",
    "start": "4291120",
    "end": "4296480"
  },
  {
    "text": "all right so that's a limitation i guess of this but at the end hey they they are fine with this limitation and that's",
    "start": "4296480",
    "end": "4302960"
  },
  {
    "text": "what i like about they actually mentioned that hey this is the limitation it's not good it's not great for anyone",
    "start": "4302960",
    "end": "4309199"
  },
  {
    "text": "but hey right no connections homa is connectionless so",
    "start": "4309199",
    "end": "4314239"
  },
  {
    "text": "when i read this while homa is connectionless you guys it doesn't mean it's stateless",
    "start": "4314239",
    "end": "4322159"
  },
  {
    "start": "4320000",
    "end": "4519000"
  },
  {
    "text": "it is a stateful protocol it has a state stored both in the client and the server",
    "start": "4322159",
    "end": "4328560"
  },
  {
    "text": "about this thing that is called the rpc right so there is a state but there's no connection",
    "start": "4328560",
    "end": "4334880"
  },
  {
    "text": "right the constant of a connection there is no connection set up overhead and an application can use a single socket to",
    "start": "4334880",
    "end": "4341360"
  },
  {
    "text": "manage any number of concurrent rpcs with any number of peers again here",
    "start": "4341360",
    "end": "4346640"
  },
  {
    "text": "they're talking about a scheduling policy let's continue receiver driven congestion control so",
    "start": "4346640",
    "end": "4352400"
  },
  {
    "text": "that's interesting here so the difference here is the receiver dictates how the sender sends the information",
    "start": "4352400",
    "end": "4358880"
  },
  {
    "text": "normal interesting the receiver has knowledge of all its incoming messages that's true",
    "start": "4358880",
    "end": "4366159"
  },
  {
    "text": "right so it is in a better position to manage this congestion",
    "start": "4366159",
    "end": "4371199"
  },
  {
    "text": "when a sender transmits a message it can send a few unscheduled packet",
    "start": "4371199",
    "end": "4378400"
  },
  {
    "text": "unilaterally enough to cover the round trip time but the remaining scheduled packets",
    "start": "4378400",
    "end": "4384400"
  },
  {
    "text": "may only be sent in response to grants from the receiver that's what we talked in the beginning",
    "start": "4384400",
    "end": "4389920"
  },
  {
    "text": "right so there is yeah we always send something called the unscheduled packet so you cannot first",
    "start": "4389920",
    "end": "4396880"
  },
  {
    "text": "of all large or small messages they homa doesn't send",
    "start": "4396880",
    "end": "4402159"
  },
  {
    "text": "large messages at once like tcp's like oh let's just send censor and say no",
    "start": "4402159",
    "end": "4407920"
  },
  {
    "text": "it it it divides things into two buckets if you will the",
    "start": "4407920",
    "end": "4413199"
  },
  {
    "text": "unscheduled package which always gets in the schedule package which is like get scheduled until we get a grant from the",
    "start": "4413199",
    "end": "4419120"
  },
  {
    "text": "receiver to receive them and that basically the moment you get a grant that means we will have the congestion",
    "start": "4419120",
    "end": "4427040"
  },
  {
    "text": "is controlled by the receiver and this will guarantee almost no congestion right because we know the moment we",
    "start": "4427040",
    "end": "4434000"
  },
  {
    "text": "release the ground that means hey i'm good to send what other problems that does this cause to be honest what kind of problems i",
    "start": "4434000",
    "end": "4441120"
  },
  {
    "text": "don't know maybe maybe the sender will have backed up a",
    "start": "4441120",
    "end": "4446480"
  },
  {
    "text": "lot of scheduled packets backed up right and this chattiness again",
    "start": "4446480",
    "end": "4453360"
  },
  {
    "text": "going back from the server to the client once the first packet of the message has",
    "start": "4453360",
    "end": "4459600"
  },
  {
    "text": "been seen the total length of the message is known that's very interesting so when you send",
    "start": "4459600",
    "end": "4465440"
  },
  {
    "text": "unscheduled packet for each message we for free give the headers",
    "start": "4465440",
    "end": "4471679"
  },
  {
    "text": "right and the header includes the length of the message so the receiver immediately know that they're gonna get a bunch of",
    "start": "4471679",
    "end": "4477199"
  },
  {
    "text": "messages not complete not necessarily complete some of them might be complete some of them might not",
    "start": "4477199",
    "end": "4482960"
  },
  {
    "text": "and they get to decide the receiver get decide okay let's grant this oh these are short they are already complete let",
    "start": "4482960",
    "end": "4489840"
  },
  {
    "text": "me let me deliver them these are these are not completed here let's send the grant for this one and",
    "start": "4489840",
    "end": "4495840"
  },
  {
    "text": "now we can you get to choose and pick and choose so that's interesting design right there",
    "start": "4495840",
    "end": "4501920"
  },
  {
    "text": "does it have limitations no man sounds like keeping stuff in the cinder",
    "start": "4501920",
    "end": "4508080"
  },
  {
    "text": "buffer yeah i don't know if this will starve",
    "start": "4508080",
    "end": "4513120"
  },
  {
    "text": "longer messages or not it might out of order packets",
    "start": "4513120",
    "end": "4519520"
  },
  {
    "start": "4519000",
    "end": "4580000"
  },
  {
    "text": "a key design feature of huma is that it can tolerate out of order packets sure i don't care if if a message",
    "start": "4519520",
    "end": "4526400"
  },
  {
    "text": "one three received before message one the the order of the which the messages are sent has no",
    "start": "4526400",
    "end": "4534560"
  },
  {
    "text": "to be honest that has nothing to do with the processing of the messages it's just messages why are you blocking message",
    "start": "4535040",
    "end": "4542880"
  },
  {
    "text": "three just because message one didn't arrive no i get to choose like okay i might block message three",
    "start": "4542880",
    "end": "4549520"
  },
  {
    "text": "because message one is short and i have to i have to arrive message one first so",
    "start": "4549520",
    "end": "4554719"
  },
  {
    "text": "yeah you message three is very long so yeah you can wait it's okay but message one",
    "start": "4554719",
    "end": "4560880"
  },
  {
    "text": "is short and i wanna process shorter package so all of this can be actually controlled so out of order packets are",
    "start": "4560880",
    "end": "4568880"
  },
  {
    "text": "so fine in this case but again as long as we have enough",
    "start": "4568880",
    "end": "4575679"
  },
  {
    "text": "information delivered to us so that we can see these",
    "start": "4575679",
    "end": "4580880"
  },
  {
    "start": "4580000",
    "end": "4660000"
  },
  {
    "text": "messages to begin with right all right so getting",
    "start": "4580880",
    "end": "4586320"
  },
  {
    "text": "there from here almost done conclusion almost done so again uh homa because of all of this",
    "start": "4586320",
    "end": "4593760"
  },
  {
    "text": "all the scheduled and unscheduled and grants it has its own api and it's not compatible with tcp so what the what",
    "start": "4593760",
    "end": "4599440"
  },
  {
    "text": "those guys did they said wait a minute yeah sure nobody who who's the last one who built",
    "start": "4599440",
    "end": "4606960"
  },
  {
    "text": "on top of tcp yeah some application built directly on tcp but most people use apis that sits on top of tcp such as",
    "start": "4606960",
    "end": "4615199"
  },
  {
    "text": "grpc apache thrift right those are built on top of http 2 grpcs built built.htb2",
    "start": "4615199",
    "end": "4621600"
  },
  {
    "text": "which uses tcp right and there's like a an ongoing backlog item in grpc to use hdb3",
    "start": "4621600",
    "end": "4629920"
  },
  {
    "text": "now those guys are working with grpc team the google team to support",
    "start": "4630480",
    "end": "4636800"
  },
  {
    "text": "houma as a grpc transport layer in this case the moment",
    "start": "4636800",
    "end": "4641920"
  },
  {
    "text": "homer comes to grpc immediately all the applications light up",
    "start": "4641920",
    "end": "4647120"
  },
  {
    "text": "and that's the beauty of this if you're a grpc user you're going to get home for free if",
    "start": "4647120",
    "end": "4653520"
  },
  {
    "text": "this gets implemented by the way did i mention that they have a linux implementation already",
    "start": "4653520",
    "end": "4659280"
  },
  {
    "text": "so those guys already did the work and they showed the numbers so yeah so yeah",
    "start": "4659280",
    "end": "4665280"
  },
  {
    "start": "4660000",
    "end": "4725000"
  },
  {
    "text": "not all applications http do is http on top of homer",
    "start": "4665280",
    "end": "4671520"
  },
  {
    "text": "http 4 maybe because http has nothing to do with streaming",
    "start": "4671520",
    "end": "4676960"
  },
  {
    "text": "wait a minute no no no we can't do we can't use messages on top of http that's just not not a good idea",
    "start": "4676960",
    "end": "4684239"
  },
  {
    "text": "because http is a streaming also the same concept right imagine like you don't you don't see the page until",
    "start": "4684239",
    "end": "4690239"
  },
  {
    "text": "everything is loaded no i want to see as things are arrived especially http",
    "start": "4690239",
    "end": "4695520"
  },
  {
    "text": "streaming and yeah video we watched youtubers no no no no no keep this away",
    "start": "4695520",
    "end": "4702159"
  },
  {
    "text": "keep up keep using tcp and quick yeah no no no hdv3 that's it no no no no",
    "start": "4702159",
    "end": "4708719"
  },
  {
    "text": "bad idea bad idea i don't think it works for the web homo i don't think it does so yeah this is",
    "start": "4708719",
    "end": "4716000"
  },
  {
    "text": "their proposal they're gonna use a grpc let's look at the conclusion and end",
    "start": "4716000",
    "end": "4722159"
  },
  {
    "text": "this video i know you guys are tired i am also exhausted so i think it's one of the longest",
    "start": "4722159",
    "end": "4727760"
  },
  {
    "start": "4725000",
    "end": "4976000"
  },
  {
    "text": "videos i made ever but let's read this the conclusion tcp is the wrong protocol for this and",
    "start": "4727760",
    "end": "4734320"
  },
  {
    "text": "computer again they focus on the data center yeah right nothing to do with other stuff nothing",
    "start": "4734320",
    "end": "4740640"
  },
  {
    "text": "to do with the web data center computing tcp is wrong they want a low-level protocol a",
    "start": "4740640",
    "end": "4747600"
  },
  {
    "text": "transport protocol that fixes these problems which they articulated very well in this",
    "start": "4747600",
    "end": "4754719"
  },
  {
    "text": "in my opinion in this paper over this bit this paper doesn't have details about hormone if you want the",
    "start": "4754719",
    "end": "4760800"
  },
  {
    "text": "actual details from that there's like a a lot of deep more detailed uh paper",
    "start": "4760800",
    "end": "4767440"
  },
  {
    "text": "that i'm gonna reference as well that reads like the actual in the weed",
    "start": "4767440",
    "end": "4772480"
  },
  {
    "text": "if you want to go that far every aspect of tcp design is wrong there is no part",
    "start": "4772480",
    "end": "4777760"
  },
  {
    "text": "worth keeping again wrong in for the data center there is no part worth keeping if we",
    "start": "4777760",
    "end": "4785199"
  },
  {
    "text": "want to eliminate the data center tax we must find a way to move most of the",
    "start": "4785199",
    "end": "4791760"
  },
  {
    "text": "traffic to a radically different protocol homa offers an alternative that appears to solve all of tcp problems",
    "start": "4791760",
    "end": "4800400"
  },
  {
    "text": "the best way to bring houma into widespread usage is integrated with",
    "start": "4800400",
    "end": "4806400"
  },
  {
    "text": "rpc frameworks with rpc frameworks that underlie most large scale center",
    "start": "4806400",
    "end": "4811760"
  },
  {
    "text": "applications like yeah in microservices basically most of this stuff uh",
    "start": "4811760",
    "end": "4817600"
  },
  {
    "text": "uses jrpc any communication between services actually used maybe grpc that's",
    "start": "4817600",
    "end": "4823040"
  },
  {
    "text": "pretty much it that's the like the de facto right isn't it so yeah this was the we need a",
    "start": "4823040",
    "end": "4828719"
  },
  {
    "text": "replacement for tcp in the data center right written by uh professor john",
    "start": "4828719",
    "end": "4834000"
  },
  {
    "text": "outsterhout stand for university a game paper is still currently under submission but",
    "start": "4834000",
    "end": "4840800"
  },
  {
    "text": "didn't didn't prevented us from actually reviewing it and reading it i think it's a good protocol i think it's a good idea",
    "start": "4840800",
    "end": "4847760"
  },
  {
    "text": "uh for the data center that is it doesn't does it fix all our tcp problems no i think tcp is still relevant i think we",
    "start": "4847760",
    "end": "4854880"
  },
  {
    "text": "still need the tcp protocol yeah uh",
    "start": "4854880",
    "end": "4860480"
  },
  {
    "text": "but it's not it's not it's not applicable for everything it's applicable for certain use cases",
    "start": "4860480",
    "end": "4865920"
  },
  {
    "text": "especially if you have this request response and responses and your responses don't have the concept of",
    "start": "4865920",
    "end": "4873440"
  },
  {
    "text": "streaming right so in the web i don't believe this is good for us yeah http is",
    "start": "4873440",
    "end": "4879360"
  },
  {
    "text": "a request response system but the response i cannot think of waiting",
    "start": "4879360",
    "end": "4886560"
  },
  {
    "text": "for the whole response to arrive in order to just deliver it right i i want to see",
    "start": "4886560",
    "end": "4892400"
  },
  {
    "text": "the html headers i want to see the body i want to see the skeleton comes in",
    "start": "4892400",
    "end": "4899040"
  },
  {
    "text": "right as content comes in let me let me this idea of streaming the html page",
    "start": "4899040",
    "end": "4905600"
  },
  {
    "text": "whatever you see is what you get is important we need to see stuff right",
    "start": "4905600",
    "end": "4910880"
  },
  {
    "text": "unless you just want to click and then just have a loading screen and then your puff everything appears",
    "start": "4910880",
    "end": "4916400"
  },
  {
    "text": "you can do that but i don't know if that will fly in the web right and that just did an arrival when when you like watch",
    "start": "4916400",
    "end": "4922880"
  },
  {
    "text": "your youtube video or stuff like that this is not suitable for streaming videos right",
    "start": "4922880",
    "end": "4928880"
  },
  {
    "text": "because uh the main disadvantage is we have to have a message",
    "start": "4928880",
    "end": "4934239"
  },
  {
    "text": "which we don't have this concept in tcp tcv is just whatever is really bytes it's by",
    "start": "4934239",
    "end": "4940000"
  },
  {
    "text": "streaming data it's just like a hose i'm filled with data and there is a",
    "start": "4940000",
    "end": "4945199"
  },
  {
    "text": "disadvantage or advantages for this streaming concept so it really depends on you what do you want uh what's your",
    "start": "4945199",
    "end": "4952800"
  },
  {
    "text": "use cases uh i enjoyed uh going through this i think it's a it's a good paper guys what do you think",
    "start": "4952800",
    "end": "4959120"
  },
  {
    "text": "about this paper what do you think about this homemade protocol do you think we need it do you think we don't in the",
    "start": "4959120",
    "end": "4964320"
  },
  {
    "text": "data center again in the data center outside they don't address anything outside at all but let me know what do",
    "start": "4964320",
    "end": "4971600"
  },
  {
    "text": "you think uh i'm gonna see in the next one you guys stay awesome goodbye",
    "start": "4971600",
    "end": "4977280"
  }
]