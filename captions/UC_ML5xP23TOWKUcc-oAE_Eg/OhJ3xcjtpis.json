[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "in version 5.3 mongodb has introduced a",
    "start": "0",
    "end": "3840"
  },
  {
    "text": "new feature called a clustered",
    "start": "3840",
    "end": "5700"
  },
  {
    "text": "collection and I want to uh going into a",
    "start": "5700",
    "end": "9660"
  },
  {
    "text": "deep dive into how this functionality",
    "start": "9660",
    "end": "12360"
  },
  {
    "text": "work and how it can actually improve the",
    "start": "12360",
    "end": "16080"
  },
  {
    "text": "performance of your reads and of your",
    "start": "16080",
    "end": "19020"
  },
  {
    "text": "writes and before we do that we really",
    "start": "19020",
    "end": "21539"
  },
  {
    "text": "need to explain how used to store",
    "start": "21539",
    "end": "26240"
  },
  {
    "text": "Collections and documents in these",
    "start": "26240",
    "end": "29160"
  },
  {
    "text": "Collections and the the in",
    "start": "29160",
    "end": "33260"
  },
  {
    "text": "on desk storage representation if you",
    "start": "33260",
    "end": "37500"
  },
  {
    "text": "will and then how cluster collection can",
    "start": "37500",
    "end": "39899"
  },
  {
    "text": "actually improve that and of course",
    "start": "39899",
    "end": "42420"
  },
  {
    "text": "everything we do in software engineering",
    "start": "42420",
    "end": "44700"
  },
  {
    "text": "that has a cost so when we introduced a",
    "start": "44700",
    "end": "47399"
  },
  {
    "text": "new feature it comes with its own",
    "start": "47399",
    "end": "49200"
  },
  {
    "text": "limitations and it's good to understand",
    "start": "49200",
    "end": "51180"
  },
  {
    "text": "these limitations right so let's talk",
    "start": "51180",
    "end": "54300"
  },
  {
    "text": "about clustered collections in mongodb",
    "start": "54300",
    "end": "56340"
  },
  {
    "text": "so before we talk about cluster",
    "start": "56340",
    "end": "58140"
  },
  {
    "text": "collections on mongodb I want to talk",
    "start": "58140",
    "end": "59879"
  },
  {
    "text": "about how regular collections or",
    "start": "59879",
    "end": "63180"
  },
  {
    "start": "60000",
    "end": "410000"
  },
  {
    "text": "unclustered collections those regular",
    "start": "63180",
    "end": "65460"
  },
  {
    "text": "collections that you create in version",
    "start": "65460",
    "end": "67799"
  },
  {
    "text": "5.2 or earlier even 5.3 you have an",
    "start": "67799",
    "end": "70860"
  },
  {
    "text": "option to enable those right the cluster",
    "start": "70860",
    "end": "73920"
  },
  {
    "text": "collection but how does the normal",
    "start": "73920",
    "end": "76460"
  },
  {
    "text": "collections work you see and in recent",
    "start": "76460",
    "end": "80759"
  },
  {
    "text": "versions the version 4 and newer uh",
    "start": "80759",
    "end": "84720"
  },
  {
    "text": " acquired this data storage company",
    "start": "84720",
    "end": "89460"
  },
  {
    "text": "called wire tiger today based engine",
    "start": "89460",
    "end": "92759"
  },
  {
    "text": "that allows you to do this mango that",
    "start": "92759",
    "end": "96060"
  },
  {
    "text": "allows you to do acid multiversion",
    "start": "96060",
    "end": "98340"
  },
  {
    "text": "concurrency control and concurrency and",
    "start": "98340",
    "end": "101100"
  },
  {
    "text": "other things",
    "start": "101100",
    "end": "102060"
  },
  {
    "text": "no and uh the way wire tiger and mongodb",
    "start": "102060",
    "end": "106860"
  },
  {
    "text": "stores thing is they have a hidden",
    "start": "106860",
    "end": "110399"
  },
  {
    "text": "index now the history about behind this",
    "start": "110399",
    "end": "113280"
  },
  {
    "text": "hidden index I discussed in my deep dive",
    "start": "113280",
    "end": "116100"
  },
  {
    "text": "on the mongodb architecture if you want",
    "start": "116100",
    "end": "118259"
  },
  {
    "text": "to go there check that video out",
    "start": "118259",
    "end": "120840"
  },
  {
    "text": "but essentially that hidden index the",
    "start": "120840",
    "end": "124979"
  },
  {
    "text": "key to that hidden index is called the",
    "start": "124979",
    "end": "127380"
  },
  {
    "text": "record ID",
    "start": "127380",
    "end": "128660"
  },
  {
    "text": "and you there's no way as far as I know",
    "start": "128660",
    "end": "131879"
  },
  {
    "text": "you can to see that ID or that key that",
    "start": "131879",
    "end": "135720"
  },
  {
    "text": "record ID",
    "start": "135720",
    "end": "136980"
  },
  {
    "text": "is a 64-bit integer so eight bytes and",
    "start": "136980",
    "end": "140819"
  },
  {
    "text": "in that hidden index the key is that",
    "start": "140819",
    "end": "142560"
  },
  {
    "text": "record Rd and the value",
    "start": "142560",
    "end": "145140"
  },
  {
    "text": "in the leave pages of that hidden index",
    "start": "145140",
    "end": "147959"
  },
  {
    "text": "is the document that you store which is",
    "start": "147959",
    "end": "150660"
  },
  {
    "text": "the Basin document the binary Json",
    "start": "150660",
    "end": "154920"
  },
  {
    "text": "and it's compressed and all that jazz",
    "start": "154920",
    "end": "156959"
  },
  {
    "text": "for efficiency reasons so you submit a",
    "start": "156959",
    "end": "159840"
  },
  {
    "text": "document to store in a collection it",
    "start": "159840",
    "end": "162000"
  },
  {
    "text": "goes into that hidden index that you",
    "start": "162000",
    "end": "163739"
  },
  {
    "text": "don't see but then you say you might say",
    "start": "163739",
    "end": "166200"
  },
  {
    "text": "Hussein but I don't really deal with",
    "start": "166200",
    "end": "167819"
  },
  {
    "text": "that record I have an ID field and",
    "start": "167819",
    "end": "169860"
  },
  {
    "text": "underscore ID field or I can create my",
    "start": "169860",
    "end": "172739"
  },
  {
    "text": "own other indexes right so that other ID",
    "start": "172739",
    "end": "176580"
  },
  {
    "text": "field that you actually visible to you",
    "start": "176580",
    "end": "179040"
  },
  {
    "text": "that is auto generated for you it's",
    "start": "179040",
    "end": "181680"
  },
  {
    "text": "actually another B tree index so there's",
    "start": "181680",
    "end": "184920"
  },
  {
    "text": "one B3 B plus 3 index that's hidden",
    "start": "184920",
    "end": "187620"
  },
  {
    "text": "right and that's technically already",
    "start": "187620",
    "end": "190620"
  },
  {
    "text": "clustered around that record ID with the",
    "start": "190620",
    "end": "194220"
  },
  {
    "text": "documents",
    "start": "194220",
    "end": "195420"
  },
  {
    "text": "and the documents are live in the leave",
    "start": "195420",
    "end": "197580"
  },
  {
    "text": "pages",
    "start": "197580",
    "end": "198599"
  },
  {
    "text": "then you have the underscore ID",
    "start": "198599",
    "end": "201360"
  },
  {
    "text": "which is your the object ID of that",
    "start": "201360",
    "end": "205620"
  },
  {
    "text": "document and that underscore ID field is",
    "start": "205620",
    "end": "208080"
  },
  {
    "text": "actually around 12 bytes",
    "start": "208080",
    "end": "210840"
  },
  {
    "text": "right",
    "start": "210840",
    "end": "211980"
  },
  {
    "text": "um in size that key",
    "start": "211980",
    "end": "214920"
  },
  {
    "text": "and the value that in that big trees",
    "start": "214920",
    "end": "219300"
  },
  {
    "text": "when I say value that when you do a",
    "start": "219300",
    "end": "221519"
  },
  {
    "text": "traversal on that tree and you find that",
    "start": "221519",
    "end": "224099"
  },
  {
    "text": "ID the corresponding value because B3 is",
    "start": "224099",
    "end": "227519"
  },
  {
    "text": "always a key value at the end right the",
    "start": "227519",
    "end": "229440"
  },
  {
    "text": "leaf Pages stores the value where",
    "start": "229440",
    "end": "232200"
  },
  {
    "text": "of that key that you just found and the",
    "start": "232200",
    "end": "234900"
  },
  {
    "text": "value is actually the record ID we",
    "start": "234900",
    "end": "237120"
  },
  {
    "text": "talked about",
    "start": "237120",
    "end": "239280"
  },
  {
    "text": "so",
    "start": "239280",
    "end": "240360"
  },
  {
    "text": "we have when you technically search",
    "start": "240360",
    "end": "244379"
  },
  {
    "text": "for a document by its ID you do the get",
    "start": "244379",
    "end": "246659"
  },
  {
    "text": "on the command get on ID you",
    "start": "246659",
    "end": "250980"
  },
  {
    "text": "actually do two",
    "start": "250980",
    "end": "253200"
  },
  {
    "text": "reads and mango DB documents actually",
    "start": "253200",
    "end": "257040"
  },
  {
    "text": "call it reads it's actually kind of an",
    "start": "257040",
    "end": "259320"
  },
  {
    "text": "understatement because it's not just",
    "start": "259320",
    "end": "260639"
  },
  {
    "text": "reads it's it's a it's 2b3 seeks it's",
    "start": "260639",
    "end": "265080"
  },
  {
    "text": "not the same as a just a read a read",
    "start": "265080",
    "end": "267240"
  },
  {
    "text": "indicate that it's a single i o not",
    "start": "267240",
    "end": "269820"
  },
  {
    "text": "really right a read here or a B3 seek",
    "start": "269820",
    "end": "273600"
  },
  {
    "text": "you're actually traversing the internal",
    "start": "273600",
    "end": "275699"
  },
  {
    "text": "nodes",
    "start": "275699",
    "end": "277380"
  },
  {
    "text": "find",
    "start": "277380",
    "end": "278759"
  },
  {
    "text": "on the ID field or the on the ID index",
    "start": "278759",
    "end": "281880"
  },
  {
    "text": "just to find the record ID then that's",
    "start": "281880",
    "end": "284759"
  },
  {
    "text": "that doesn't give you the document you",
    "start": "284759",
    "end": "286740"
  },
  {
    "text": "have to take the record ID and then go",
    "start": "286740",
    "end": "288780"
  },
  {
    "text": "and then go to the hidden index and do",
    "start": "288780",
    "end": "291900"
  },
  {
    "text": "another B3 traversal right and if you",
    "start": "291900",
    "end": "296040"
  },
  {
    "text": "know how B3 works you check the root",
    "start": "296040",
    "end": "298800"
  },
  {
    "text": "then your intermediate and then you go",
    "start": "298800",
    "end": "300780"
  },
  {
    "text": "to the leaf and then you fetch the leave",
    "start": "300780",
    "end": "303419"
  },
  {
    "text": "page and then from the leave page you",
    "start": "303419",
    "end": "305100"
  },
  {
    "text": "find oh here's my record ID and here's",
    "start": "305100",
    "end": "307440"
  },
  {
    "text": "my documents and if you're lucky",
    "start": "307440",
    "end": "310680"
  },
  {
    "text": "and that page holds many other documents",
    "start": "310680",
    "end": "314639"
  },
  {
    "text": "you cache this whole thing in the buffer",
    "start": "314639",
    "end": "317580"
  },
  {
    "text": "pool hopefully the next record that you",
    "start": "317580",
    "end": "320100"
  },
  {
    "text": "you request is in the same",
    "start": "320100",
    "end": "323220"
  },
  {
    "text": "document name but unfortunately it never",
    "start": "323220",
    "end": "327240"
  },
  {
    "text": "is right because this thing is always",
    "start": "327240",
    "end": "330539"
  },
  {
    "text": "random that it causes random iOS the",
    "start": "330539",
    "end": "334800"
  },
  {
    "text": "architecture of unclustered collection",
    "start": "334800",
    "end": "336419"
  },
  {
    "text": "which is the default requires you to do",
    "start": "336419",
    "end": "338820"
  },
  {
    "text": "a double read or double b36",
    "start": "338820",
    "end": "343020"
  },
  {
    "text": "right just to find the document we're",
    "start": "343020",
    "end": "345360"
  },
  {
    "text": "looking for same thing for all right",
    "start": "345360",
    "end": "346740"
  },
  {
    "text": "when you when you write a document",
    "start": "346740",
    "end": "349560"
  },
  {
    "text": "you",
    "start": "349560",
    "end": "351180"
  },
  {
    "text": "write it in the hidden index and you",
    "start": "351180",
    "end": "353340"
  },
  {
    "text": "update the B3 structure for that hidden",
    "start": "353340",
    "end": "355380"
  },
  {
    "text": "index you get a brand new record ID you",
    "start": "355380",
    "end": "358080"
  },
  {
    "text": "take that record ready and insert it",
    "start": "358080",
    "end": "359880"
  },
  {
    "text": "into the appropriate location after",
    "start": "359880",
    "end": "363300"
  },
  {
    "text": "generation generating a new ID field for",
    "start": "363300",
    "end": "366720"
  },
  {
    "text": "you and then update that index so you're",
    "start": "366720",
    "end": "369539"
  },
  {
    "text": "doing double writes effectively so to",
    "start": "369539",
    "end": "372960"
  },
  {
    "text": "summarize anacosta collection we have",
    "start": "372960",
    "end": "375060"
  },
  {
    "text": "the ID field as an index and that points",
    "start": "375060",
    "end": "378600"
  },
  {
    "text": "to when you do a search you find the ID",
    "start": "378600",
    "end": "382759"
  },
  {
    "text": "but then you don't find the document",
    "start": "382759",
    "end": "385020"
  },
  {
    "text": "immediately that you're looking for you",
    "start": "385020",
    "end": "386639"
  },
  {
    "text": "actually find a record ID a pointer and",
    "start": "386639",
    "end": "389160"
  },
  {
    "text": "when I say a pointer I don't mean a c",
    "start": "389160",
    "end": "390960"
  },
  {
    "text": "pointer here or a memory pointer no I'm",
    "start": "390960",
    "end": "393900"
  },
  {
    "text": "I mean an actual value that you use to",
    "start": "393900",
    "end": "396660"
  },
  {
    "text": "do another traversal on another index",
    "start": "396660",
    "end": "398880"
  },
  {
    "text": "which is the record ID and that will",
    "start": "398880",
    "end": "401340"
  },
  {
    "text": "give you the index the the document so",
    "start": "401340",
    "end": "404699"
  },
  {
    "text": "there is two B3 traversals in now now we",
    "start": "404699",
    "end": "409319"
  },
  {
    "text": "know that the cluster collection which",
    "start": "409319",
    "end": "410880"
  },
  {
    "start": "410000",
    "end": "600000"
  },
  {
    "text": "is a 5.3 and 6 0 actually removes that",
    "start": "410880",
    "end": "414840"
  },
  {
    "text": "hidden index altogether and then makes",
    "start": "414840",
    "end": "417120"
  },
  {
    "text": "the ID index your clustered index",
    "start": "417120",
    "end": "420720"
  },
  {
    "text": "that is becomes your cluster index it",
    "start": "420720",
    "end": "423600"
  },
  {
    "text": "means",
    "start": "423600",
    "end": "424620"
  },
  {
    "text": "the document is is stored in line in",
    "start": "424620",
    "end": "429180"
  },
  {
    "text": "that ID Index right and of course",
    "start": "429180",
    "end": "432120"
  },
  {
    "text": "naturally you only can have one cluster",
    "start": "432120",
    "end": "434100"
  },
  {
    "text": "index because that's what you have only",
    "start": "434100",
    "end": "436620"
  },
  {
    "text": "one way to store your data so now when",
    "start": "436620",
    "end": "440400"
  },
  {
    "text": "you do an ID lookup you do you go use",
    "start": "440400",
    "end": "444240"
  },
  {
    "text": "the ID index and then you immediately",
    "start": "444240",
    "end": "446819"
  },
  {
    "text": "find the ID key and the value now is not",
    "start": "446819",
    "end": "450360"
  },
  {
    "text": "the record ID anymore it's actually the",
    "start": "450360",
    "end": "452340"
  },
  {
    "text": "whole document the Basin document right",
    "start": "452340",
    "end": "454919"
  },
  {
    "text": "and then you return it after you",
    "start": "454919",
    "end": "457560"
  },
  {
    "text": "decompress it and do all that jazz so",
    "start": "457560",
    "end": "459840"
  },
  {
    "text": "that's that's about cluster collection",
    "start": "459840",
    "end": "461520"
  },
  {
    "text": "says so you're doing a single read right",
    "start": "461520",
    "end": "465360"
  },
  {
    "text": "you're doing a single write you're",
    "start": "465360",
    "end": "468419"
  },
  {
    "text": "changing one thing instead of two so",
    "start": "468419",
    "end": "470699"
  },
  {
    "text": "your queries are faster your updates are",
    "start": "470699",
    "end": "473520"
  },
  {
    "text": "faster your inserts are technically",
    "start": "473520",
    "end": "475680"
  },
  {
    "text": "faster even your range queries are",
    "start": "475680",
    "end": "478319"
  },
  {
    "text": "faster why if you're doing a range query",
    "start": "478319",
    "end": "481919"
  },
  {
    "text": "on the ID give me all documents between",
    "start": "481919",
    "end": "483900"
  },
  {
    "text": "this ID and this ID like and and because",
    "start": "483900",
    "end": "486840"
  },
  {
    "text": "the ID field is is incremental it has a",
    "start": "486840",
    "end": "489960"
  },
  {
    "text": "time stamp right I think in the first",
    "start": "489960",
    "end": "492120"
  },
  {
    "text": "few bytes then it's actually very nice",
    "start": "492120",
    "end": "495180"
  },
  {
    "text": "to do a range query in a clustered index",
    "start": "495180",
    "end": "497280"
  },
  {
    "text": "because we know that these IDs will live",
    "start": "497280",
    "end": "499379"
  },
  {
    "text": "together",
    "start": "499379",
    "end": "500400"
  },
  {
    "text": "would be next to each other that will",
    "start": "500400",
    "end": "502800"
  },
  {
    "text": "give us fewer page",
    "start": "502800",
    "end": "505020"
  },
  {
    "text": "IO to disk and we're going to give and",
    "start": "505020",
    "end": "508500"
  },
  {
    "text": "all the documents that we're going to",
    "start": "508500",
    "end": "509940"
  },
  {
    "text": "look on the same hot pages that we find",
    "start": "509940",
    "end": "513360"
  },
  {
    "text": "right compare this to the older design",
    "start": "513360",
    "end": "518099"
  },
  {
    "text": "where if you do a range query on an",
    "start": "518099",
    "end": "521039"
  },
  {
    "text": "unclustered index all you're going to",
    "start": "521039",
    "end": "523260"
  },
  {
    "text": "find is record IDs right but this record",
    "start": "523260",
    "end": "525720"
  },
  {
    "text": "right is",
    "start": "525720",
    "end": "527220"
  },
  {
    "text": "can you guarantee that they are actually",
    "start": "527220",
    "end": "529320"
  },
  {
    "text": "exactly next to each other in the header",
    "start": "529320",
    "end": "532080"
  },
  {
    "text": "index maybe maybe not so that will cause",
    "start": "532080",
    "end": "534600"
  },
  {
    "text": "actually random reads on the hidden",
    "start": "534600",
    "end": "537779"
  },
  {
    "text": "index while sure that",
    "start": "537779",
    "end": "541380"
  },
  {
    "text": "range query was sequential",
    "start": "541380",
    "end": "545399"
  },
  {
    "text": "the randomness to actually get the",
    "start": "545399",
    "end": "548339"
  },
  {
    "text": "documents to go to the hidden index That",
    "start": "548339",
    "end": "552060"
  },
  {
    "text": "Is Random and random is bad",
    "start": "552060",
    "end": "554820"
  },
  {
    "text": "when it comes to databases right we try",
    "start": "554820",
    "end": "557160"
  },
  {
    "text": "to avoid random because",
    "start": "557160",
    "end": "558600"
  },
  {
    "text": "when you do random your paging your",
    "start": "558600",
    "end": "561540"
  },
  {
    "text": "rating from multiple places in desk",
    "start": "561540",
    "end": "564019"
  },
  {
    "text": "you're lowering the case cases of",
    "start": "564019",
    "end": "567300"
  },
  {
    "text": "logical reads which is basically page",
    "start": "567300",
    "end": "570360"
  },
  {
    "text": "heads or memory and as a result",
    "start": "570360",
    "end": "573540"
  },
  {
    "text": "things can get slower and as you pull in",
    "start": "573540",
    "end": "576779"
  },
  {
    "text": "fresh pages that are random you have to",
    "start": "576779",
    "end": "579360"
  },
  {
    "text": "discard older pages that you didn't use",
    "start": "579360",
    "end": "581399"
  },
  {
    "text": "for a long time and most of the time if",
    "start": "581399",
    "end": "584519"
  },
  {
    "text": "you discard the old page chances that",
    "start": "584519",
    "end": "586380"
  },
  {
    "text": "you're going to need it again are very",
    "start": "586380",
    "end": "587580"
  },
  {
    "text": "high because if the thing is random and",
    "start": "587580",
    "end": "589800"
  },
  {
    "text": "you have limited amount of memory so",
    "start": "589800",
    "end": "591420"
  },
  {
    "text": "with that said we know what the end",
    "start": "591420",
    "end": "593399"
  },
  {
    "text": "cluster collection we know cluster",
    "start": "593399",
    "end": "595140"
  },
  {
    "text": "collection let's go to the dock and read",
    "start": "595140",
    "end": "597540"
  },
  {
    "text": "this",
    "start": "597540",
    "end": "599339"
  },
  {
    "text": "and discuss more alright so this is the",
    "start": "599339",
    "end": "602220"
  },
  {
    "start": "600000",
    "end": "1020000"
  },
  {
    "text": "mongodb official documentation plus",
    "start": "602220",
    "end": "604260"
  },
  {
    "text": "search collections new and version 5.3",
    "start": "604260",
    "end": "606540"
  },
  {
    "text": "starting in mongodb 5.3 you can create a",
    "start": "606540",
    "end": "610260"
  },
  {
    "text": "collection with a cluster index",
    "start": "610260",
    "end": "612540"
  },
  {
    "text": "collections created with a cluster index",
    "start": "612540",
    "end": "614640"
  },
  {
    "text": "are called cluster collections",
    "start": "614640",
    "end": "617640"
  },
  {
    "text": "you can only have one clustered index we",
    "start": "617640",
    "end": "619980"
  },
  {
    "text": "talked about what a cluster index is is",
    "start": "619980",
    "end": "621899"
  },
  {
    "text": "it's with it's when your data is in the",
    "start": "621899",
    "end": "624660"
  },
  {
    "text": "index right and it's also",
    "start": "624660",
    "end": "627300"
  },
  {
    "text": "called the primary index in other",
    "start": "627300",
    "end": "630060"
  },
  {
    "text": "databases so every time you hear the",
    "start": "630060",
    "end": "631920"
  },
  {
    "text": "term primary index it is",
    "start": "631920",
    "end": "634640"
  },
  {
    "text": "mostly a cluster index postgres being",
    "start": "634640",
    "end": "638519"
  },
  {
    "text": "the exception and I think Oracle also is",
    "start": "638519",
    "end": "642060"
  },
  {
    "text": "exception",
    "start": "642060",
    "end": "643279"
  },
  {
    "text": "unless you create an index organized",
    "start": "643279",
    "end": "646200"
  },
  {
    "text": "table specifically right by default and",
    "start": "646200",
    "end": "649680"
  },
  {
    "text": "even SQL Server Like have this idea you",
    "start": "649680",
    "end": "651600"
  },
  {
    "text": "can create a primary key but you can",
    "start": "651600",
    "end": "652980"
  },
  {
    "text": "make it a clustered index so actually",
    "start": "652980",
    "end": "654959"
  },
  {
    "text": "cluster your data around that index and",
    "start": "654959",
    "end": "657899"
  },
  {
    "text": "as opposed to have it just as a heap",
    "start": "657899",
    "end": "660480"
  },
  {
    "text": "table somewhere and point to it",
    "start": "660480",
    "end": "664260"
  },
  {
    "text": "benefits because cluster Linux store the",
    "start": "664260",
    "end": "667380"
  },
  {
    "text": "documents ordered by the clustered index",
    "start": "667380",
    "end": "669240"
  },
  {
    "text": "value cluster collection have the",
    "start": "669240",
    "end": "671220"
  },
  {
    "text": "following benefits over a non-clockstar",
    "start": "671220",
    "end": "673440"
  },
  {
    "text": "collection faster queries on classic",
    "start": "673440",
    "end": "675360"
  },
  {
    "text": "Azure without needing a secondary index",
    "start": "675360",
    "end": "678120"
  },
  {
    "text": "such as queries Ranger coin and a",
    "start": "678120",
    "end": "681300"
  },
  {
    "text": "quality comparison with on the cluster",
    "start": "681300",
    "end": "683640"
  },
  {
    "text": "index so if you're doing something on",
    "start": "683640",
    "end": "684839"
  },
  {
    "text": "the cluster index it's fast because if",
    "start": "684839",
    "end": "687240"
  },
  {
    "text": "you're looking for a certain document",
    "start": "687240",
    "end": "689640"
  },
  {
    "text": "it's in line in that document in in that",
    "start": "689640",
    "end": "693000"
  },
  {
    "text": "in that index there's no other jumping",
    "start": "693000",
    "end": "695220"
  },
  {
    "text": "to another hidden index to get that",
    "start": "695220",
    "end": "697079"
  },
  {
    "text": "document it's right there and we talked",
    "start": "697079",
    "end": "699180"
  },
  {
    "text": "about range how range scans are really",
    "start": "699180",
    "end": "701579"
  },
  {
    "text": "nice figure hey give me all the",
    "start": "701579",
    "end": "703560"
  },
  {
    "text": "documents or just not all documents just",
    "start": "703560",
    "end": "706019"
  },
  {
    "text": "all the particular fields in a document",
    "start": "706019",
    "end": "708420"
  },
  {
    "text": "in this range right",
    "start": "708420",
    "end": "712200"
  },
  {
    "text": "again no cluster",
    "start": "712200",
    "end": "714300"
  },
  {
    "text": "cluster collection have a fewer lower",
    "start": "714300",
    "end": "716880"
  },
  {
    "text": "storage size which improve the",
    "start": "716880",
    "end": "718740"
  },
  {
    "text": "performance of the queries and and bulk",
    "start": "718740",
    "end": "721140"
  },
  {
    "text": "answers so the reason is have lower",
    "start": "721140",
    "end": "722820"
  },
  {
    "text": "storage side because we used to store",
    "start": "722820",
    "end": "724920"
  },
  {
    "text": "the hidden index with inline the the",
    "start": "724920",
    "end": "728700"
  },
  {
    "text": "collection and the data the documents",
    "start": "728700",
    "end": "731399"
  },
  {
    "text": "and then we also had the ID index in a",
    "start": "731399",
    "end": "733560"
  },
  {
    "text": "separate structure so we're storing we",
    "start": "733560",
    "end": "736140"
  },
  {
    "text": "have",
    "start": "736140",
    "end": "737160"
  },
  {
    "text": "we have two places to store things we're",
    "start": "737160",
    "end": "740040"
  },
  {
    "text": "having this additional data structure",
    "start": "740040",
    "end": "741720"
  },
  {
    "text": "that we've managed so more size right",
    "start": "741720",
    "end": "743760"
  },
  {
    "text": "plus the ID index is not",
    "start": "743760",
    "end": "746940"
  },
  {
    "text": "is is massive right it's 12 byte key",
    "start": "746940",
    "end": "750480"
  },
  {
    "text": "right so it multiplies right plus the",
    "start": "750480",
    "end": "754079"
  },
  {
    "text": "record the record ID was 8 bytes so",
    "start": "754079",
    "end": "757320"
  },
  {
    "text": "you're storing 8 bytes and storing a 12",
    "start": "757320",
    "end": "760140"
  },
  {
    "text": "byte keys so for each document and add",
    "start": "760140",
    "end": "764820"
  },
  {
    "text": "to that the overhead of the key",
    "start": "764820",
    "end": "767279"
  },
  {
    "text": "management in the B plus three The Roots",
    "start": "767279",
    "end": "769440"
  },
  {
    "text": "the intermediate nodes it all adds up",
    "start": "769440",
    "end": "771120"
  },
  {
    "text": "right",
    "start": "771120",
    "end": "772500"
  },
  {
    "text": "so then the the the storage lower or you",
    "start": "772500",
    "end": "775980"
  },
  {
    "text": "might say I don't care about storage but",
    "start": "775980",
    "end": "778139"
  },
  {
    "text": "storage kind of almost translates always",
    "start": "778139",
    "end": "780839"
  },
  {
    "text": "to IO right because if you're storing",
    "start": "780839",
    "end": "783720"
  },
  {
    "text": "play stuff in multiple places then you",
    "start": "783720",
    "end": "786480"
  },
  {
    "text": "need to read multiple places to do an i",
    "start": "786480",
    "end": "789480"
  },
  {
    "text": "o in multiple places to fetch the thing",
    "start": "789480",
    "end": "791459"
  },
  {
    "text": "that you want right and that's the",
    "start": "791459",
    "end": "793740"
  },
  {
    "text": "problem really",
    "start": "793740",
    "end": "795240"
  },
  {
    "text": "cluster collection can eliminate the",
    "start": "795240",
    "end": "797399"
  },
  {
    "text": "need of a secondary time to La time to",
    "start": "797399",
    "end": "800519"
  },
  {
    "text": "live index so they they have a feature",
    "start": "800519",
    "end": "802380"
  },
  {
    "text": "here called the time to live where you",
    "start": "802380",
    "end": "804000"
  },
  {
    "text": "can set it essentially and expire after",
    "start": "804000",
    "end": "807360"
  },
  {
    "text": "X seconds on the cluster index and you",
    "start": "807360",
    "end": "810120"
  },
  {
    "text": "can just use that feature to to delete a",
    "start": "810120",
    "end": "813300"
  },
  {
    "text": "document that that expires I think redis",
    "start": "813300",
    "end": "816180"
  },
  {
    "text": "has the feature as well right",
    "start": "816180",
    "end": "818880"
  },
  {
    "text": "cluster collection have additional",
    "start": "818880",
    "end": "820860"
  },
  {
    "text": "performance",
    "start": "820860",
    "end": "821820"
  },
  {
    "text": "Improvement for inserts updates and",
    "start": "821820",
    "end": "824160"
  },
  {
    "text": "deletes and here they go into details",
    "start": "824160",
    "end": "826380"
  },
  {
    "text": "all collections have an ID index and",
    "start": "826380",
    "end": "828660"
  },
  {
    "text": "unclustered collection stores the ID",
    "start": "828660",
    "end": "830399"
  },
  {
    "text": "index separately from the document as we",
    "start": "830399",
    "end": "832560"
  },
  {
    "text": "explained right this requires two rights",
    "start": "832560",
    "end": "836160"
  },
  {
    "text": "for insert updates and deletes and two",
    "start": "836160",
    "end": "839220"
  },
  {
    "text": "reads for quiz they try to avoid talking",
    "start": "839220",
    "end": "841440"
  },
  {
    "text": "about this hidden index because this is",
    "start": "841440",
    "end": "843839"
  },
  {
    "text": "a Kaka public",
    "start": "843839",
    "end": "845339"
  },
  {
    "text": "user facing document but if you go to",
    "start": "845339",
    "end": "847980"
  },
  {
    "text": "the for the forums and the threads you",
    "start": "847980",
    "end": "851100"
  },
  {
    "text": "can you can clearly see that details",
    "start": "851100",
    "end": "853139"
  },
  {
    "text": "right you can see it in conversations",
    "start": "853139",
    "end": "854820"
  },
  {
    "text": "which is which I love and also I think I",
    "start": "854820",
    "end": "857639"
  },
  {
    "text": "think in the source code which is",
    "start": "857639",
    "end": "858660"
  },
  {
    "text": "Mango's open source right",
    "start": "858660",
    "end": "860700"
  },
  {
    "text": "a cluster collection stores the index",
    "start": "860700",
    "end": "862800"
  },
  {
    "text": "and document together in in ID value",
    "start": "862800",
    "end": "866399"
  },
  {
    "text": "order this requires one right for insert",
    "start": "866399",
    "end": "869399"
  },
  {
    "text": "update and delete and one read for",
    "start": "869399",
    "end": "871560"
  },
  {
    "text": "queries right again when we say two",
    "start": "871560",
    "end": "874500"
  },
  {
    "text": "reads and one read we're talking about",
    "start": "874500",
    "end": "876019"
  },
  {
    "text": "an actual",
    "start": "876019",
    "end": "878120"
  },
  {
    "text": "B3 traversal read it's not a single i o",
    "start": "878120",
    "end": "882060"
  },
  {
    "text": "no no no it's not a single go to disk",
    "start": "882060",
    "end": "885300"
  },
  {
    "text": "and ah hey this is a read no it can",
    "start": "885300",
    "end": "888060"
  },
  {
    "text": "cause multiple iOS one read is equal one",
    "start": "888060",
    "end": "892019"
  },
  {
    "text": "or more iOS here",
    "start": "892019",
    "end": "894000"
  },
  {
    "text": "all right so be careful with this",
    "start": "894000",
    "end": "895740"
  },
  {
    "text": "terminology here",
    "start": "895740",
    "end": "899279"
  },
  {
    "text": "Behavior Behavior cluster collection",
    "start": "900380",
    "end": "903240"
  },
  {
    "text": "store documents ordered by the cluster",
    "start": "903240",
    "end": "905399"
  },
  {
    "text": "index key value right and the key value",
    "start": "905399",
    "end": "908160"
  },
  {
    "text": "for the ID I think you can change it",
    "start": "908160",
    "end": "909959"
  },
  {
    "text": "which is something you have to watch out",
    "start": "909959",
    "end": "911699"
  },
  {
    "text": "for and we're going to talk about why",
    "start": "911699",
    "end": "914459"
  },
  {
    "text": "you can you can have one clustered index",
    "start": "914459",
    "end": "917639"
  },
  {
    "text": "in a collection because the document can",
    "start": "917639",
    "end": "919440"
  },
  {
    "text": "be stored in only one order makes sense",
    "start": "919440",
    "end": "922199"
  },
  {
    "text": "only collections with a clustered index",
    "start": "922199",
    "end": "924779"
  },
  {
    "text": "store the uh store the data in sorted",
    "start": "924779",
    "end": "927839"
  },
  {
    "text": "order you can have a cluster index and",
    "start": "927839",
    "end": "930120"
  },
  {
    "text": "add secondary indexes to a cluster",
    "start": "930120",
    "end": "933120"
  },
  {
    "text": "collection clustered indexes differ from",
    "start": "933120",
    "end": "936779"
  },
  {
    "text": "secondary indexes now here's an",
    "start": "936779",
    "end": "939420"
  },
  {
    "text": "interesting thing and I think they do",
    "start": "939420",
    "end": "940800"
  },
  {
    "text": "mention it here hopefully they do",
    "start": "940800",
    "end": "943800"
  },
  {
    "text": "a cluster index can only be created when",
    "start": "943800",
    "end": "946860"
  },
  {
    "text": "you create the collection so there are",
    "start": "946860",
    "end": "948240"
  },
  {
    "text": "some limitations I suppose so they don't",
    "start": "948240",
    "end": "951000"
  },
  {
    "text": "let you create an index cluster index",
    "start": "951000",
    "end": "953220"
  },
  {
    "text": "after the fact that's to me that's just",
    "start": "953220",
    "end": "955019"
  },
  {
    "text": "the limitation software limitation",
    "start": "955019",
    "end": "956519"
  },
  {
    "text": "there's no technical reason not to do it",
    "start": "956519",
    "end": "958680"
  },
  {
    "text": "they just they just they want to do it",
    "start": "958680",
    "end": "961920"
  },
  {
    "text": "later because probably",
    "start": "961920",
    "end": "964040"
  },
  {
    "text": "here's my guess I think the reason they",
    "start": "964040",
    "end": "966540"
  },
  {
    "text": "don't want to do it is because to to",
    "start": "966540",
    "end": "968760"
  },
  {
    "text": "create an index they have to acquire an",
    "start": "968760",
    "end": "970860"
  },
  {
    "text": "exclusive lock like an almost an axis",
    "start": "970860",
    "end": "973440"
  },
  {
    "text": "exclusive lock on the whole collection",
    "start": "973440",
    "end": "975899"
  },
  {
    "text": "you cannot do anything to that",
    "start": "975899",
    "end": "978839"
  },
  {
    "text": "collection when I add a a cluster index",
    "start": "978839",
    "end": "982440"
  },
  {
    "text": "and they didn't want to do that because",
    "start": "982440",
    "end": "985519"
  },
  {
    "text": "it blocked raw it blocks reads and",
    "start": "985519",
    "end": "988740"
  },
  {
    "text": "writes right so that's why they don't",
    "start": "988740",
    "end": "990959"
  },
  {
    "text": "want to do it this is there just do it",
    "start": "990959",
    "end": "992639"
  },
  {
    "text": "just just copy The Collection to another",
    "start": "992639",
    "end": "996000"
  },
  {
    "text": "collection and create the index custom",
    "start": "996000",
    "end": "998459"
  },
  {
    "text": "index",
    "start": "998459",
    "end": "999660"
  },
  {
    "text": "there right",
    "start": "999660",
    "end": "1001279"
  },
  {
    "text": "because that why do we need exclusive X",
    "start": "1001279",
    "end": "1003440"
  },
  {
    "text": "because we're reordering how data is",
    "start": "1003440",
    "end": "1005779"
  },
  {
    "text": "stored right the whole thing is changing",
    "start": "1005779",
    "end": "1007820"
  },
  {
    "text": "it's a massive big change so cluster",
    "start": "1007820",
    "end": "1010940"
  },
  {
    "text": "index has to be done from scratch or",
    "start": "1010940",
    "end": "1013040"
  },
  {
    "text": "just created from from the beginning uh",
    "start": "1013040",
    "end": "1015860"
  },
  {
    "text": "cluster collection limitation you cannot",
    "start": "1015860",
    "end": "1017959"
  },
  {
    "text": "transform a non-cluster collection to a",
    "start": "1017959",
    "end": "1020420"
  },
  {
    "start": "1020000",
    "end": "1574000"
  },
  {
    "text": "cluster collection or the reverse",
    "start": "1020420",
    "end": "1022160"
  },
  {
    "text": "instead you can so they're talking about",
    "start": "1022160",
    "end": "1024199"
  },
  {
    "text": "this like how do you convert an",
    "start": "1024199",
    "end": "1026418"
  },
  {
    "text": "uncollection cluster collection to a",
    "start": "1026419",
    "end": "1028280"
  },
  {
    "text": "cluster collection you cannot just do it",
    "start": "1028280",
    "end": "1030199"
  },
  {
    "text": "you cannot just hey add a cluster next",
    "start": "1030199",
    "end": "1032600"
  },
  {
    "text": "because that will acquire an exclusive",
    "start": "1032600",
    "end": "1035178"
  },
  {
    "text": "log and they will block reads that's my",
    "start": "1035179",
    "end": "1037579"
  },
  {
    "text": "guess I think right they just don't want",
    "start": "1037579",
    "end": "1040400"
  },
  {
    "text": "to do that or maybe they're more",
    "start": "1040400",
    "end": "1042199"
  },
  {
    "text": "technical details that I'm I'm not aware",
    "start": "1042199",
    "end": "1045438"
  },
  {
    "text": "of at least when it comes to right",
    "start": "1045439",
    "end": "1048260"
  },
  {
    "text": "but I I envisioned them having that",
    "start": "1048260",
    "end": "1051860"
  },
  {
    "text": "feature in the future definitely because",
    "start": "1051860",
    "end": "1054380"
  },
  {
    "text": "that that that's just",
    "start": "1054380",
    "end": "1056720"
  },
  {
    "text": "right that's just something all",
    "start": "1056720",
    "end": "1058940"
  },
  {
    "text": "databases almost all databases have",
    "start": "1058940",
    "end": "1060740"
  },
  {
    "text": "right let me just create a cluster Index",
    "start": "1060740",
    "end": "1063140"
  },
  {
    "text": "right now",
    "start": "1063140",
    "end": "1065120"
  },
  {
    "text": "by default if a secondary index exists",
    "start": "1065120",
    "end": "1068120"
  },
  {
    "text": "on a cluster collection and the",
    "start": "1068120",
    "end": "1070520"
  },
  {
    "text": "secondary index is usable by your query",
    "start": "1070520",
    "end": "1072799"
  },
  {
    "text": "the secondary is selected instead of the",
    "start": "1072799",
    "end": "1074960"
  },
  {
    "text": "cluster index so we gotta be careful",
    "start": "1074960",
    "end": "1076520"
  },
  {
    "text": "with this I still don't understand why",
    "start": "1076520",
    "end": "1079220"
  },
  {
    "text": "would the secondary index be preferred",
    "start": "1079220",
    "end": "1081679"
  },
  {
    "text": "over the",
    "start": "1081679",
    "end": "1083080"
  },
  {
    "text": "primary",
    "start": "1083080",
    "end": "1084919"
  },
  {
    "text": "index it's just weird because what if I",
    "start": "1084919",
    "end": "1088039"
  },
  {
    "text": "do like where ID equal blah and the the",
    "start": "1088039",
    "end": "1095120"
  },
  {
    "text": "this field that I happen to index is X",
    "start": "1095120",
    "end": "1098780"
  },
  {
    "text": "right",
    "start": "1098780",
    "end": "1100039"
  },
  {
    "text": "it'll be really slow to use the",
    "start": "1100039",
    "end": "1103160"
  },
  {
    "text": "secondary index",
    "start": "1103160",
    "end": "1104780"
  },
  {
    "text": "just to get",
    "start": "1104780",
    "end": "1106780"
  },
  {
    "text": "all these documents right and then",
    "start": "1106780",
    "end": "1110900"
  },
  {
    "text": "filter the documents for that ID",
    "start": "1110900",
    "end": "1113480"
  },
  {
    "text": "so that is a really",
    "start": "1113480",
    "end": "1115940"
  },
  {
    "text": "something really to watch out because it",
    "start": "1115940",
    "end": "1117799"
  },
  {
    "text": "can really uh",
    "start": "1117799",
    "end": "1121340"
  },
  {
    "text": "uh",
    "start": "1121340",
    "end": "1123140"
  },
  {
    "text": "cause degradation and performance right",
    "start": "1123140",
    "end": "1125360"
  },
  {
    "text": "because hey I'm literally pulling one",
    "start": "1125360",
    "end": "1128240"
  },
  {
    "text": "document and I happen to have another",
    "start": "1128240",
    "end": "1130100"
  },
  {
    "text": "filter you just happen to use that index",
    "start": "1130100",
    "end": "1134360"
  },
  {
    "text": "just because I had it no a proper",
    "start": "1134360",
    "end": "1137360"
  },
  {
    "text": "problem plan I would say oh that's it",
    "start": "1137360",
    "end": "1139520"
  },
  {
    "text": "that's a more selective index I'm going",
    "start": "1139520",
    "end": "1141740"
  },
  {
    "text": "to use there I don't have details as why",
    "start": "1141740",
    "end": "1144919"
  },
  {
    "text": "they are doing that it seems to be a bad",
    "start": "1144919",
    "end": "1147200"
  },
  {
    "text": "idea but there must be a technical",
    "start": "1147200",
    "end": "1150020"
  },
  {
    "text": "reasons behind it but so they tell you",
    "start": "1150020",
    "end": "1152419"
  },
  {
    "text": "at least hey if you really know what",
    "start": "1152419",
    "end": "1154400"
  },
  {
    "text": "you're doing use a hint which is good I",
    "start": "1154400",
    "end": "1156260"
  },
  {
    "text": "like that mongod uses heads right",
    "start": "1156260",
    "end": "1159200"
  },
  {
    "text": "supports head so in that case like if",
    "start": "1159200",
    "end": "1161720"
  },
  {
    "text": "you actually s doing something like this",
    "start": "1161720",
    "end": "1164960"
  },
  {
    "text": "right then probably just hint the plan",
    "start": "1164960",
    "end": "1168799"
  },
  {
    "text": "and say hey please use this cluster in",
    "start": "1168799",
    "end": "1170660"
  },
  {
    "text": "that so",
    "start": "1170660",
    "end": "1171860"
  },
  {
    "text": "something to watch out for here the",
    "start": "1171860",
    "end": "1174500"
  },
  {
    "text": "clustered index key must be on the ID",
    "start": "1174500",
    "end": "1177919"
  },
  {
    "text": "field",
    "start": "1177919",
    "end": "1179299"
  },
  {
    "text": "sure okay you cannot hide a clustered",
    "start": "1179299",
    "end": "1182900"
  },
  {
    "text": "index hidden indexes that's another",
    "start": "1182900",
    "end": "1185240"
  },
  {
    "text": "thing",
    "start": "1185240",
    "end": "1186080"
  },
  {
    "text": "if there are secondary indexes for the",
    "start": "1186080",
    "end": "1188660"
  },
  {
    "text": "cluster collection The Collection has a",
    "start": "1188660",
    "end": "1191419"
  },
  {
    "text": "larger storage size I'm glad I mentioned",
    "start": "1191419",
    "end": "1194840"
  },
  {
    "text": "this let's talk about why the secondary",
    "start": "1194840",
    "end": "1196820"
  },
  {
    "text": "indexes uh have a larger storage",
    "start": "1196820",
    "end": "1199700"
  },
  {
    "text": "requirement in cluster collection and",
    "start": "1199700",
    "end": "1202580"
  },
  {
    "text": "here's why so",
    "start": "1202580",
    "end": "1204080"
  },
  {
    "text": "to explain that we need to",
    "start": "1204080",
    "end": "1207740"
  },
  {
    "text": "know how secondary indexes work in",
    "start": "1207740",
    "end": "1210080"
  },
  {
    "text": "unclustered or non-clustered collections",
    "start": "1210080",
    "end": "1213080"
  },
  {
    "text": "They Do by the secondary index actually",
    "start": "1213080",
    "end": "1216500"
  },
  {
    "text": "points to the record ID",
    "start": "1216500",
    "end": "1220640"
  },
  {
    "text": "back in the older model right so both",
    "start": "1220640",
    "end": "1226039"
  },
  {
    "text": "the ID and the uh",
    "start": "1226039",
    "end": "1229940"
  },
  {
    "text": "and all the second indexes Point",
    "start": "1229940",
    "end": "1231980"
  },
  {
    "text": "directly to that record ID which is just",
    "start": "1231980",
    "end": "1234740"
  },
  {
    "text": "another",
    "start": "1234740",
    "end": "1235700"
  },
  {
    "text": "uh",
    "start": "1235700",
    "end": "1237500"
  },
  {
    "text": "you know B3 data structure so",
    "start": "1237500",
    "end": "1242660"
  },
  {
    "text": "if you search by ID or search by the",
    "start": "1242660",
    "end": "1244880"
  },
  {
    "text": "secondary indexes you are incurring the",
    "start": "1244880",
    "end": "1248179"
  },
  {
    "text": "devil reads we talked about the Double B",
    "start": "1248179",
    "end": "1251120"
  },
  {
    "text": "tree uh traversal okay and the second",
    "start": "1251120",
    "end": "1254480"
  },
  {
    "text": "index in this case includes the key that",
    "start": "1254480",
    "end": "1256880"
  },
  {
    "text": "you're indexing let's say this is the",
    "start": "1256880",
    "end": "1258980"
  },
  {
    "text": "date of birth or",
    "start": "1258980",
    "end": "1261679"
  },
  {
    "text": "or or the salary or whatever the field",
    "start": "1261679",
    "end": "1264440"
  },
  {
    "text": "is in the document and then the value of",
    "start": "1264440",
    "end": "1266600"
  },
  {
    "text": "the secondary index is the record ID",
    "start": "1266600",
    "end": "1268100"
  },
  {
    "text": "which is what we said is 64-bit 8 bytes",
    "start": "1268100",
    "end": "1271220"
  },
  {
    "text": "right so that's fixed eight bytes number",
    "start": "1271220",
    "end": "1273799"
  },
  {
    "text": "changes the older in the new model in",
    "start": "1273799",
    "end": "1277039"
  },
  {
    "text": "the cluster collection",
    "start": "1277039",
    "end": "1279440"
  },
  {
    "text": "the secondary index is point not to the",
    "start": "1279440",
    "end": "1282380"
  },
  {
    "text": "record audio because that doesn't exist",
    "start": "1282380",
    "end": "1283820"
  },
  {
    "text": "anymore what is a point to that you",
    "start": "1283820",
    "end": "1286280"
  },
  {
    "text": "don't have a choice you have to point to",
    "start": "1286280",
    "end": "1288740"
  },
  {
    "text": "the ID",
    "start": "1288740",
    "end": "1290179"
  },
  {
    "text": "key",
    "start": "1290179",
    "end": "1292720"
  },
  {
    "text": "so that makes it identical to the I know",
    "start": "1293299",
    "end": "1296780"
  },
  {
    "text": "DB MySQL model",
    "start": "1296780",
    "end": "1298880"
  },
  {
    "text": "right",
    "start": "1298880",
    "end": "1299960"
  },
  {
    "text": "where now we're pointing to the primary",
    "start": "1299960",
    "end": "1302360"
  },
  {
    "text": "key values",
    "start": "1302360",
    "end": "1305179"
  },
  {
    "text": "what is the size of the primary key it",
    "start": "1305179",
    "end": "1308059"
  },
  {
    "text": "is 12 bytes not eight so that's an",
    "start": "1308059",
    "end": "1311120"
  },
  {
    "text": "additional four bytes you're incurring",
    "start": "1311120",
    "end": "1313580"
  },
  {
    "text": "on the secondary indexes so yeah so",
    "start": "1313580",
    "end": "1315919"
  },
  {
    "text": "you're incurring an additional four",
    "start": "1315919",
    "end": "1317299"
  },
  {
    "text": "bytes in this case right which might not",
    "start": "1317299",
    "end": "1319700"
  },
  {
    "text": "seem much better record right but can",
    "start": "1319700",
    "end": "1322159"
  },
  {
    "text": "add up right so a few extra megaboys",
    "start": "1322159",
    "end": "1324620"
  },
  {
    "text": "four or five megabytes right and it can",
    "start": "1324620",
    "end": "1327919"
  },
  {
    "text": "add up right and especially if you have",
    "start": "1327919",
    "end": "1330200"
  },
  {
    "text": "a lot of indexes it can really really",
    "start": "1330200",
    "end": "1332360"
  },
  {
    "text": "really add up and what can make it worse",
    "start": "1332360",
    "end": "1336500"
  },
  {
    "text": "is uh",
    "start": "1336500",
    "end": "1339640"
  },
  {
    "text": "is is if you did",
    "start": "1339940",
    "end": "1343100"
  },
  {
    "text": "choose to change the ID field content",
    "start": "1343100",
    "end": "1347179"
  },
  {
    "text": "and you're not using the default that's",
    "start": "1347179",
    "end": "1348799"
  },
  {
    "text": "the default it's 12 bars if you let's",
    "start": "1348799",
    "end": "1351740"
  },
  {
    "text": "say I I've seen a lot of people use",
    "start": "1351740",
    "end": "1353360"
  },
  {
    "text": "uuids for example",
    "start": "1353360",
    "end": "1355460"
  },
  {
    "text": "and you IDs if you do store them I",
    "start": "1355460",
    "end": "1359900"
  },
  {
    "text": "suppose doors are stored as string right",
    "start": "1359900",
    "end": "1362780"
  },
  {
    "text": "if you store them as if you store uid is",
    "start": "1362780",
    "end": "1366640"
  },
  {
    "text": "natively they are 16 bytes 128 bits but",
    "start": "1366640",
    "end": "1371480"
  },
  {
    "text": "almost we rarely store them this way we",
    "start": "1371480",
    "end": "1374960"
  },
  {
    "text": "store them as a string and with the",
    "start": "1374960",
    "end": "1377059"
  },
  {
    "text": "dashes and based on whether it's utf-8",
    "start": "1377059",
    "end": "1379640"
  },
  {
    "text": "or other encoding that gives you like 36",
    "start": "1379640",
    "end": "1382940"
  },
  {
    "text": "bytes",
    "start": "1382940",
    "end": "1384559"
  },
  {
    "text": "that's a lot ah that is a lot of bytes",
    "start": "1384559",
    "end": "1388880"
  },
  {
    "text": "right so you're jumping from 8 bytes to",
    "start": "1388880",
    "end": "1392840"
  },
  {
    "text": "36 so that is massive per record so",
    "start": "1392840",
    "end": "1397880"
  },
  {
    "text": "there's like a significant difference so",
    "start": "1397880",
    "end": "1400700"
  },
  {
    "text": "you're talking about what 28 bytes extra",
    "start": "1400700",
    "end": "1404000"
  },
  {
    "text": "per record so that makes your secondary",
    "start": "1404000",
    "end": "1407659"
  },
  {
    "text": "indexes larger you might say who cares",
    "start": "1407659",
    "end": "1410120"
  },
  {
    "text": "if the secondary indexes are larger well",
    "start": "1410120",
    "end": "1412340"
  },
  {
    "text": "the moment things get larger iOS suffer",
    "start": "1412340",
    "end": "1416240"
  },
  {
    "text": "and the reason is because the page size",
    "start": "1416240",
    "end": "1418460"
  },
  {
    "text": "what is the page size in mongodb it says",
    "start": "1418460",
    "end": "1420919"
  },
  {
    "text": "here wire tigers",
    "start": "1420919",
    "end": "1422840"
  },
  {
    "text": "or kilobyte I don't know if that's",
    "start": "1422840",
    "end": "1424880"
  },
  {
    "text": "correct or not but but if if it's really",
    "start": "1424880",
    "end": "1428360"
  },
  {
    "text": "that small",
    "start": "1428360",
    "end": "1429679"
  },
  {
    "text": "then yeah you need to do more iOS to",
    "start": "1429679",
    "end": "1434539"
  },
  {
    "text": "fetch what you need right more pages you",
    "start": "1434539",
    "end": "1437539"
  },
  {
    "text": "need to pull more pages to fetch the",
    "start": "1437539",
    "end": "1439880"
  },
  {
    "text": "things that you want right because it's",
    "start": "1439880",
    "end": "1442039"
  },
  {
    "text": "just just the thing that you want is no",
    "start": "1442039",
    "end": "1444440"
  },
  {
    "text": "longer and fits in one page it's in",
    "start": "1444440",
    "end": "1446360"
  },
  {
    "text": "multiple pages so the larger the the the",
    "start": "1446360",
    "end": "1450380"
  },
  {
    "text": "the index the larger the slower it gets",
    "start": "1450380",
    "end": "1454700"
  },
  {
    "text": "to pull and you're trying to find what",
    "start": "1454700",
    "end": "1457280"
  },
  {
    "text": "you're looking for",
    "start": "1457280",
    "end": "1459820"
  },
  {
    "text": "and here's a and of course they go into",
    "start": "1459980",
    "end": "1462500"
  },
  {
    "text": "the details here on how to create it so",
    "start": "1462500",
    "end": "1464600"
  },
  {
    "text": "they go into details here says there",
    "start": "1464600",
    "end": "1466159"
  },
  {
    "text": "should be small size as possible talking",
    "start": "1466159",
    "end": "1468799"
  },
  {
    "text": "about the key because very critical the",
    "start": "1468799",
    "end": "1471500"
  },
  {
    "text": "key value selecting that key for the",
    "start": "1471500",
    "end": "1473419"
  },
  {
    "text": "cluster index is critical right because",
    "start": "1473419",
    "end": "1476000"
  },
  {
    "text": "it does support up to eight megabytes in",
    "start": "1476000",
    "end": "1478580"
  },
  {
    "text": "size that just sounds like a bad idea to",
    "start": "1478580",
    "end": "1481640"
  },
  {
    "text": "have a key in eight megabyte like that",
    "start": "1481640",
    "end": "1484760"
  },
  {
    "text": "is gonna be showing up in all your",
    "start": "1484760",
    "end": "1486500"
  },
  {
    "text": "secondary indexes if you don't have any",
    "start": "1486500",
    "end": "1488360"
  },
  {
    "text": "secondary indexes who cares that's fine",
    "start": "1488360",
    "end": "1490400"
  },
  {
    "text": "but that's just the the just that sounds",
    "start": "1490400",
    "end": "1493820"
  },
  {
    "text": "like a",
    "start": "1493820",
    "end": "1494900"
  },
  {
    "text": "bad problem to have so but a smaller",
    "start": "1494900",
    "end": "1498380"
  },
  {
    "text": "indexes is a key is better a cluster",
    "start": "1498380",
    "end": "1501380"
  },
  {
    "text": "index key is better of course a large",
    "start": "1501380",
    "end": "1503360"
  },
  {
    "text": "cluster index key causes the cluster to",
    "start": "1503360",
    "end": "1505820"
  },
  {
    "text": "increase in size and the secondary",
    "start": "1505820",
    "end": "1507080"
  },
  {
    "text": "indexes do you even get larger this",
    "start": "1507080",
    "end": "1509000"
  },
  {
    "text": "reduces the performance and storage",
    "start": "1509000",
    "end": "1510440"
  },
  {
    "text": "benefits of the cluster collection",
    "start": "1510440",
    "end": "1513020"
  },
  {
    "text": "as we explain right",
    "start": "1513020",
    "end": "1515120"
  },
  {
    "text": "secondary indexes on the cluster index",
    "start": "1515120",
    "end": "1517039"
  },
  {
    "text": "with large clustered index Keys may use",
    "start": "1517039",
    "end": "1520220"
  },
  {
    "text": "more space compared to Second underscore",
    "start": "1520220",
    "end": "1523220"
  },
  {
    "text": "known with non-cluster because that's",
    "start": "1523220",
    "end": "1525500"
  },
  {
    "text": "the secondary index would not clustered",
    "start": "1525500",
    "end": "1527539"
  },
  {
    "text": "or fixed to because they are pointing",
    "start": "1527539",
    "end": "1530179"
  },
  {
    "text": "their values point to this 8 byte uh",
    "start": "1530179",
    "end": "1534020"
  },
  {
    "text": "record IDs while the secondary indexes",
    "start": "1534020",
    "end": "1536900"
  },
  {
    "text": "and cluster indexes at the cluster",
    "start": "1536900",
    "end": "1539240"
  },
  {
    "text": "collections they point to this massive",
    "start": "1539240",
    "end": "1541880"
  },
  {
    "text": "thing that whatever you have in that",
    "start": "1541880",
    "end": "1543980"
  },
  {
    "text": "case right so be careful with that uh",
    "start": "1543980",
    "end": "1546080"
  },
  {
    "text": "here's a short example how to create a",
    "start": "1546080",
    "end": "1547940"
  },
  {
    "text": "collection so you would specify a",
    "start": "1547940",
    "end": "1550100"
  },
  {
    "text": "clustered index and it has to be this",
    "start": "1550100",
    "end": "1552380"
  },
  {
    "text": "key id1 right it has to be unique of",
    "start": "1552380",
    "end": "1556400"
  },
  {
    "text": "course and you can give it any name you",
    "start": "1556400",
    "end": "1558140"
  },
  {
    "text": "want and here they give you how to do",
    "start": "1558140",
    "end": "1561500"
  },
  {
    "text": "these examples and",
    "start": "1561500",
    "end": "1563240"
  },
  {
    "text": "but yeah so that's what I thought I'll",
    "start": "1563240",
    "end": "1565100"
  },
  {
    "text": "talk about cluster collections I was",
    "start": "1565100",
    "end": "1566720"
  },
  {
    "text": "like an interesting features if you're",
    "start": "1566720",
    "end": "1567919"
  },
  {
    "text": "using mongodb or you're planning to use",
    "start": "1567919",
    "end": "1569659"
  },
  {
    "text": "this feature let me know in the comment",
    "start": "1569659",
    "end": "1571220"
  },
  {
    "text": "section below gonna see in the next one",
    "start": "1571220",
    "end": "1572779"
  },
  {
    "text": "goodbye",
    "start": "1572779",
    "end": "1575080"
  }
]