[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "what is going on guys my name is hussein and in this video i want to build an upload service from scratch",
    "start": "240",
    "end": "7120"
  },
  {
    "text": "and the goal is really uh to build this service with uh",
    "start": "7120",
    "end": "13040"
  },
  {
    "text": "almost no libraries really in the front end i'm going to use the built-in uh browser",
    "start": "13040",
    "end": "19920"
  },
  {
    "text": "functionality which is the file reader this is the ability to read a file from",
    "start": "19920",
    "end": "24960"
  },
  {
    "text": "disk of obviously that the user have picked and then once i have the bunch of bytes i'm",
    "start": "24960",
    "end": "31439"
  },
  {
    "text": "going to stream those uh bytes to the back end and then store the file on the",
    "start": "31439",
    "end": "37120"
  },
  {
    "text": "backend and uh to transmit the content to the back and i'm going to use",
    "start": "37120",
    "end": "43120"
  },
  {
    "text": "the fetch api which is also a standard so my html is literally referencing no libraries external third-party libraries",
    "start": "43120",
    "end": "49680"
  },
  {
    "text": "that are right and on the back end i'm going to make keep it simple as well and i'm going to use the vanilla http",
    "start": "49680",
    "end": "57120"
  },
  {
    "text": "library and that is it to build a completely fully functional",
    "start": "57120",
    "end": "62480"
  },
  {
    "text": "uh upload uh service and um let's test it this is",
    "start": "62480",
    "end": "67680"
  },
  {
    "text": "what we're planning to do so i'm gonna pick my uh nginx dot png file here for example",
    "start": "67680",
    "end": "75200"
  },
  {
    "text": "and then go ahead and upload and you can see there is a progress here it is slow because i'm uploading 1 000 bytes per",
    "start": "75200",
    "end": "82479"
  },
  {
    "text": "request obviously you can control that you can increase that but it's just all configurable at the end of the day and",
    "start": "82479",
    "end": "88880"
  },
  {
    "text": "once the file is completely uploaded if you go to the back end you can see that",
    "start": "88880",
    "end": "94880"
  },
  {
    "text": "this is the file effectively right and there is no limit you can",
    "start": "94880",
    "end": "100000"
  },
  {
    "text": "upload literally any file size you want because we we're chunking it up",
    "start": "100000",
    "end": "105439"
  },
  {
    "text": "right and ascending in small portions obviously this code is not going to be",
    "start": "105439",
    "end": "111520"
  },
  {
    "text": "perfect it can be improved obviously to have a resumability if in case of failure you",
    "start": "111520",
    "end": "118719"
  },
  {
    "text": "can resume it all of this stuff can be built and added as feature once you understand",
    "start": "118719",
    "end": "124880"
  },
  {
    "text": "the the basic fundamentals of how this is actually working so let's go ahead and",
    "start": "124880",
    "end": "131120"
  },
  {
    "text": "upload actually a move web dirt and paper and then just you can see",
    "start": "131120",
    "end": "136959"
  },
  {
    "text": "that's a little bit slower that is expected because we're sending small chunks right this file and as you",
    "start": "136959",
    "end": "145040"
  },
  {
    "text": "can see it's almost done and here's what's happening here when i",
    "start": "145040",
    "end": "150319"
  },
  {
    "text": "pick a file i read that file using file reader i have an array buffer and then chunk it",
    "start": "150319",
    "end": "157760"
  },
  {
    "text": "up and then send the each chunk my chunk size is default thousand i can obviously",
    "start": "157760",
    "end": "163760"
  },
  {
    "text": "change that and then send that by it sets off by to the server on that server",
    "start": "163760",
    "end": "168800"
  },
  {
    "text": "and i immediately write it to a file obviously of my choosing",
    "start": "168800",
    "end": "173840"
  },
  {
    "text": "okay let's go ahead and start from scratch and then just just enjoy building this from",
    "start": "173840",
    "end": "179599"
  },
  {
    "text": "scratch right so start a brand fresh project here and and",
    "start": "179599",
    "end": "184800"
  },
  {
    "start": "180000",
    "end": "420000"
  },
  {
    "text": "maybe you can start with the back end right i'm gonna write index dot js here",
    "start": "184800",
    "end": "193280"
  },
  {
    "text": "and my back end i need an http library obviously",
    "start": "193280",
    "end": "198959"
  },
  {
    "text": "right equal require http and that's pretty much the only library and it's a",
    "start": "198959",
    "end": "204239"
  },
  {
    "text": "built-in library that's available on node.js right and then let's go ahead and build a server",
    "start": "204239",
    "end": "210080"
  },
  {
    "text": "equal http create server let's just listen up",
    "start": "210080",
    "end": "217040"
  },
  {
    "text": "and add a listening event when we're starting listening we're",
    "start": "217040",
    "end": "223040"
  },
  {
    "text": "listening something like that just we're gonna pick the port later http",
    "start": "223040",
    "end": "228080"
  },
  {
    "text": "server and uh when when a request comes in",
    "start": "228080",
    "end": "233680"
  },
  {
    "text": "we're gonna get two beautiful parameters here and uh here's what i wanna do if if the",
    "start": "233680",
    "end": "240640"
  },
  {
    "text": "request though url is equal equal equal the root right",
    "start": "240640",
    "end": "246000"
  },
  {
    "text": "then what i'm gonna do if if we're visiting the root which is the slash",
    "start": "246000",
    "end": "252159"
  },
  {
    "text": "then immediately i want to just read some index.html page here and then",
    "start": "252159",
    "end": "258959"
  },
  {
    "text": "return it so let's go ahead and create that index.html",
    "start": "258959",
    "end": "264240"
  },
  {
    "text": "html html5 for this uh file uploader",
    "start": "266240",
    "end": "273919"
  },
  {
    "text": "and let's just do my file uploader",
    "start": "273919",
    "end": "279680"
  },
  {
    "text": "here you go my friend and uh how how how do we how do we send the",
    "start": "279680",
    "end": "287040"
  },
  {
    "text": "result responded and immediately i want to send a bunch of",
    "start": "287040",
    "end": "292479"
  },
  {
    "text": "okay so i lied i'm gonna need another library called fs",
    "start": "292479",
    "end": "297840"
  },
  {
    "text": "we're going to read from disk i lied okay we're going to read it from disk on the back end right",
    "start": "297840",
    "end": "304080"
  },
  {
    "text": "why because i need to read this index.html so read file synchronous and indexo.html",
    "start": "304080",
    "end": "313560"
  },
  {
    "text": "and then boom return i just i want you just to end the response and then return it immediately right",
    "start": "313759",
    "end": "320960"
  },
  {
    "text": "uh so that that that ends my http request let's go ahead and do http server dot",
    "start": "320960",
    "end": "328400"
  },
  {
    "text": "listing on port it all right looks like what what am i",
    "start": "328400",
    "end": "334880"
  },
  {
    "text": "doing here should be console.log all right",
    "start": "334880",
    "end": "340960"
  },
  {
    "text": "run no debug console listening so open a new browser run",
    "start": "340960",
    "end": "346639"
  },
  {
    "text": "my file uploader nothing fancy okay so we the first piece",
    "start": "346639",
    "end": "352080"
  },
  {
    "text": "to serve the html file is there now let's build up the actual html file",
    "start": "352080",
    "end": "358080"
  },
  {
    "text": "we really need a uh a file right so there is a this thing",
    "start": "358080",
    "end": "363759"
  },
  {
    "text": "that's called input type equal file and let's give it an id f",
    "start": "363759",
    "end": "369039"
  },
  {
    "text": "right because we're going to read that thing and then i'm going to need some sort of a dev element here",
    "start": "369039",
    "end": "376240"
  },
  {
    "text": "dev output that will effectively output the",
    "start": "376240",
    "end": "381600"
  },
  {
    "text": "progress bar how far are we okay we can do something like that look at this beautiful front end guys we might",
    "start": "381600",
    "end": "388560"
  },
  {
    "text": "need actually a button right a button what an id equal button uh",
    "start": "388560",
    "end": "395759"
  },
  {
    "text": "upload right and the button upload we're gonna go read and upload because it's gonna",
    "start": "395759",
    "end": "401039"
  },
  {
    "text": "read the file and then it's gonna upload the file but no none of the logic is",
    "start": "401039",
    "end": "406080"
  },
  {
    "text": "wired so we're gonna need a script button upload equal document dot",
    "start": "406080",
    "end": "412960"
  },
  {
    "text": "get to element by id button upload",
    "start": "412960",
    "end": "418240"
  },
  {
    "text": "just so we can wire the event i'm going to also give the output",
    "start": "418560",
    "end": "425440"
  },
  {
    "start": "420000",
    "end": "840000"
  },
  {
    "text": "div output and then also going to get the file itself right",
    "start": "425440",
    "end": "433680"
  },
  {
    "text": "so these are the elements that we're going to need and we need to wire an event when someone clicks on the button",
    "start": "435680",
    "end": "442880"
  },
  {
    "text": "that is effectively upload add an event listener",
    "start": "442880",
    "end": "447919"
  },
  {
    "text": "so that what i don't really need to do anything so we're gonna do that so we need a",
    "start": "447919",
    "end": "454800"
  },
  {
    "text": "to declare a file reader here equal new file reader and this will be",
    "start": "454800",
    "end": "462720"
  },
  {
    "text": "available for us because where we are in the client right this is just opens a file but here's the",
    "start": "462880",
    "end": "470240"
  },
  {
    "text": "thing uh you cannot just willy-nilly read any file in the browser",
    "start": "470240",
    "end": "475440"
  },
  {
    "text": "that's just a big security flaw right you have to ask the user to actually read",
    "start": "475440",
    "end": "482160"
  },
  {
    "text": "select the file from the f and then you're just reading that file so let's get that file right",
    "start": "482160",
    "end": "487440"
  },
  {
    "text": "a bunch of files and i believe it's f dot files if",
    "start": "487440",
    "end": "493360"
  },
  {
    "text": "i'm not mistaken right it's effectively it's an array you can pick the select file we can support",
    "start": "493360",
    "end": "500800"
  },
  {
    "text": "up even uploading multiple files if we want to we just really just do a loop so let's call this the file right",
    "start": "500800",
    "end": "508400"
  },
  {
    "text": "so the file is this and it has its own objects and stuff like that we're gonna we're gonna go",
    "start": "508400",
    "end": "514640"
  },
  {
    "text": "through it has a name it has a length and stuff like that so",
    "start": "514640",
    "end": "519839"
  },
  {
    "text": "up until here you didn't actually read the file you have metadata about the file so how about we actually go and",
    "start": "519839",
    "end": "526320"
  },
  {
    "text": "show you what do we can what what do we see with this file right",
    "start": "526320",
    "end": "531600"
  },
  {
    "text": "so if i refresh this thing we see my beautiful buttons and then i'm going to do that right then just just uh",
    "start": "531600",
    "end": "539600"
  },
  {
    "text": "let's just do some debugging here i'm going to put my file here",
    "start": "539600",
    "end": "545680"
  },
  {
    "text": "can i can i put a breakpoint here i think i can put a breakpoint here right and then i'm gonna",
    "start": "545680",
    "end": "552320"
  },
  {
    "text": "select a file engine axle click and immediately you can see that we're",
    "start": "552320",
    "end": "559120"
  },
  {
    "text": "breaking point and here's what we have that's pretty much it the file selector only gives you the",
    "start": "559120",
    "end": "565839"
  },
  {
    "text": "name they give you the size which is pretty useful this is useful method they give you the type of the image",
    "start": "565839",
    "end": "572800"
  },
  {
    "text": "right and they give you the last modification date and so just without reading the file you",
    "start": "572800",
    "end": "579440"
  },
  {
    "text": "have access to the full the metadata almost all the metadata you want right but that's not what we want we're going",
    "start": "579440",
    "end": "585680"
  },
  {
    "text": "to upload the damn thing right so we need to actually read it and here's how you read the file and i i",
    "start": "585680",
    "end": "593600"
  },
  {
    "text": "have one complaint about this uh library uh you can do",
    "start": "593600",
    "end": "600000"
  },
  {
    "text": "by the way read as array buffer binary string the as text if you know it's text",
    "start": "600000",
    "end": "606240"
  },
  {
    "text": "and i'm going to choose to read it as an array buffer because i'm i'm dealing with it as a bunch of bytes i don't care",
    "start": "606240",
    "end": "613279"
  },
  {
    "text": "what it is right and when you do that right you specify",
    "start": "613279",
    "end": "619600"
  },
  {
    "text": "what to read right which is the file right if you do that",
    "start": "619600",
    "end": "625040"
  },
  {
    "text": "then that is an asynchronous call it's gonna start calling a callback",
    "start": "625040",
    "end": "632399"
  },
  {
    "text": "every time it reads a chunk and these callbacks are defined in i",
    "start": "632399",
    "end": "637519"
  },
  {
    "text": "believe on load start on progress",
    "start": "637519",
    "end": "642880"
  },
  {
    "text": "on lowered end and unload it's going to tell you",
    "start": "642880",
    "end": "648640"
  },
  {
    "text": "how far our again we're still in reading we're still reading the file from disk",
    "start": "648640",
    "end": "654480"
  },
  {
    "text": "to the memory in there for the browser so if you have a large file it is worth to track the progress of",
    "start": "654480",
    "end": "662560"
  },
  {
    "text": "this file right just the reading of it to memory what my problem with this is",
    "start": "662560",
    "end": "669600"
  },
  {
    "text": "unfortunately the progress event doesn't tell you the actual bites it read",
    "start": "669600",
    "end": "676560"
  },
  {
    "text": "it will be really nice if it tells you hi by the way i read this i read this no it just tells you how much it read",
    "start": "676560",
    "end": "683120"
  },
  {
    "text": "because if it did tell me how much it reads as it as it reads it i can immediately go",
    "start": "683120",
    "end": "690480"
  },
  {
    "text": "and send that chunk right so this will be a true streaming",
    "start": "690480",
    "end": "695839"
  },
  {
    "text": "from the desk immediately to the network unfortunately what what we have is only",
    "start": "695839",
    "end": "702079"
  },
  {
    "text": "on load end i believe or just on load i believe it's called tells you hey i'm done and",
    "start": "702079",
    "end": "708480"
  },
  {
    "text": "here's my file and then you get an event function like that where you say okay i'm done right",
    "start": "708480",
    "end": "716399"
  },
  {
    "text": "so we can do a console.log here for example just that so i can show you exactly what we have we have we're going",
    "start": "716399",
    "end": "722160"
  },
  {
    "text": "to have the event we have the target and we're going to have the actual full file on load and that's the only",
    "start": "722160",
    "end": "729120"
  },
  {
    "text": "really bad thing that i don't like not bad i mean i don't really want to read the whole file",
    "start": "729120",
    "end": "736160"
  },
  {
    "text": "only so i can upload it next right does that make sense i want i want to stream it from desk and stream it to the back",
    "start": "736160",
    "end": "743920"
  },
  {
    "text": "end as i read it from this if especially if it's a huge file regardless this is a limitation that we have",
    "start": "743920",
    "end": "750800"
  },
  {
    "text": "until unless i'm missing something let's save",
    "start": "750800",
    "end": "757839"
  },
  {
    "text": "we don't really need to this is all html so all we have to do is just refresh the page really i didn't really need to",
    "start": "757839",
    "end": "763360"
  },
  {
    "text": "restart the server and uh choose a file",
    "start": "763360",
    "end": "769279"
  },
  {
    "text": "boom boom read and let's put it",
    "start": "769279",
    "end": "775360"
  },
  {
    "text": "uh did we actually read it oh there you go it's done right so now",
    "start": "775360",
    "end": "781200"
  },
  {
    "text": "because it's done we have access to this ev thing the event progress event right and there is",
    "start": "781200",
    "end": "788160"
  },
  {
    "text": "something called target i believe and in the target there is a result look",
    "start": "788160",
    "end": "794240"
  },
  {
    "text": "at this beautiful array buffer this is a beautiful array buffer what is that",
    "start": "794240",
    "end": "801360"
  },
  {
    "text": "they feel a memory inspector oh that's new i never seen this before reveal in memory",
    "start": "801360",
    "end": "807440"
  },
  {
    "text": "inspector panel reveal memory inspector panel all right so we have the access the full thing and",
    "start": "807440",
    "end": "814639"
  },
  {
    "text": "you can play with this so your event to upload will be on",
    "start": "814639",
    "end": "820399"
  },
  {
    "text": "finish load when once we finish loading that now we can actually upload the damn thing",
    "start": "820399",
    "end": "825519"
  },
  {
    "text": "but since it's an uh it's a load event so what do we do we're gonna chunk it up",
    "start": "825519",
    "end": "831920"
  },
  {
    "text": "right we cannot just upload this whole file to to the back end and and you can",
    "start": "831920",
    "end": "837360"
  },
  {
    "text": "try you're gonna fail because that of course would be so huge that most routers in the middle most uh",
    "start": "837360",
    "end": "846160"
  },
  {
    "start": "840000",
    "end": "1140000"
  },
  {
    "text": "proxies in the middle want uh will not successfully deliver that",
    "start": "846240",
    "end": "851279"
  },
  {
    "text": "request and even most back end and most proxies have timeouts request time okay",
    "start": "851279",
    "end": "857839"
  },
  {
    "text": "your request is just too huge i'm not gonna send seven gigabyte in one request",
    "start": "857839",
    "end": "863519"
  },
  {
    "text": "so it's not a good idea to upload a huge file it won't even let you that's why you",
    "start": "863519",
    "end": "869279"
  },
  {
    "text": "have to break it up all right so how about we start chunking this up and um sending it to the back and",
    "start": "869279",
    "end": "875760"
  },
  {
    "text": "let's do that all right so how about we start chunking this up and sending it to the back end",
    "start": "875760",
    "end": "882240"
  },
  {
    "text": "let's do that so back to our beautiful html page so let's add something here so",
    "start": "882240",
    "end": "887360"
  },
  {
    "text": "it says okay red success fully right",
    "start": "887360",
    "end": "892800"
  },
  {
    "text": "and then we're gonna do ev dot target",
    "start": "892800",
    "end": "899040"
  },
  {
    "text": "dot results all right so result is the actual thing right",
    "start": "899040",
    "end": "904399"
  },
  {
    "text": "the byte length is what we that's the total link okay",
    "start": "904399",
    "end": "909920"
  },
  {
    "text": "so now if we do some magic right let's let's create a",
    "start": "909920",
    "end": "915279"
  },
  {
    "text": "constant here call it uh chunk size and we're gonna",
    "start": "915279",
    "end": "920959"
  },
  {
    "text": "make it thousand bytes almost a kilobyte not not quite and we're going to do",
    "start": "920959",
    "end": "927120"
  },
  {
    "text": "i'm going to do a beautiful for loop let i equal 0",
    "start": "927120",
    "end": "932480"
  },
  {
    "text": "which is the chunk idea it's called chunk id right chunk id 0",
    "start": "932480",
    "end": "938720"
  },
  {
    "text": "while chunk id is listed then how many chunks do we have so how many chunks do",
    "start": "938720",
    "end": "944720"
  },
  {
    "text": "we have chunk count is equal literally this is a thing right",
    "start": "944720",
    "end": "952480"
  },
  {
    "text": "divided by the chunk size that gives us x amount of chunks but there's always",
    "start": "953440",
    "end": "960560"
  },
  {
    "text": "remaining right there is always an extra chunk with the remain like so",
    "start": "960560",
    "end": "966399"
  },
  {
    "text": "let's say we have a thousand and one bytes right so if you've divided by a thousand then you get one but also the",
    "start": "966399",
    "end": "974000"
  },
  {
    "text": "there is a one byte remained right so this is the leftover stuff right so if you have like i don't know three",
    "start": "974000",
    "end": "980160"
  },
  {
    "text": "thousand and one divided by three you get three chunks right one two three but",
    "start": "980160",
    "end": "985279"
  },
  {
    "text": "there is one byte remains so we need to also send that last point so we're gonna",
    "start": "985279",
    "end": "990720"
  },
  {
    "text": "we're gonna play with that so i'm gonna loop through this chunk id from zero up",
    "start": "990720",
    "end": "995920"
  },
  {
    "text": "until chunk id while chunk id is less than chunk count just looping through all the",
    "start": "995920",
    "end": "1001600"
  },
  {
    "text": "chunks uh uh chunk id plus so plus so",
    "start": "1001600",
    "end": "1007199"
  },
  {
    "text": "okay but here's what i want to do i want to go an extra one loop so i can either do plus one",
    "start": "1007199",
    "end": "1015120"
  },
  {
    "text": "to account for the last uh remaining chunk with the remainder",
    "start": "1015120",
    "end": "1022959"
  },
  {
    "text": "that's why i have to do plus one as well and here's what we're gonna do what we're gonna do is uh here's the actual",
    "start": "1022959",
    "end": "1030319"
  },
  {
    "text": "chunk itself the content right we're gonna do ev dot target the result dot there's a neat",
    "start": "1030319",
    "end": "1037520"
  },
  {
    "text": "function called slice which slices the array bytes which is a huge thing into",
    "start": "1037520",
    "end": "1045038"
  },
  {
    "text": "whatever you want so we're going to start from so we're going to start from byte zero",
    "start": "1045039",
    "end": "1052480"
  },
  {
    "text": "you can tell it okay go to byte number thousand this is not how many bytes you go this is the byte you want to go so if",
    "start": "1052480",
    "end": "1060480"
  },
  {
    "text": "you said thousand that means this is going to give you a thousand bytes if you get 2 000 this",
    "start": "1060480",
    "end": "1066480"
  },
  {
    "text": "is going to give you 2 000 bytes right if you do this 1000 and 1000 that means",
    "start": "1066480",
    "end": "1072559"
  },
  {
    "text": "go this is literally just going to give you one byte right so if you go 1000 then",
    "start": "1072559",
    "end": "1079600"
  },
  {
    "text": "give me 2 000. that means if you said 1 000 and 2 000 it means okay start from 1000 and go to 2000 position 2000 and",
    "start": "1079600",
    "end": "1088960"
  },
  {
    "text": "read anything between this so if you do the math really is just literally chunk",
    "start": "1088960",
    "end": "1094320"
  },
  {
    "text": "id times the chunk size right right which is a thousand in this case",
    "start": "1094320",
    "end": "1100720"
  },
  {
    "text": "right so if it's zero times changi the chunk size is gonna be started with",
    "start": "1100720",
    "end": "1105760"
  },
  {
    "text": "zero right and then what do we really what where are we going to what are we going",
    "start": "1105760",
    "end": "1112160"
  },
  {
    "text": "to read we're going to read exactly the same if you think about it the same location but",
    "start": "1112160",
    "end": "1117840"
  },
  {
    "text": "plus a thousand which is plus the chunk size that is that is the math i think i got",
    "start": "1117840",
    "end": "1124960"
  },
  {
    "text": "it right let's go through the loop if you start from zero then this is zero",
    "start": "1124960",
    "end": "1130240"
  },
  {
    "text": "right if you start from zero then this is zero this is gonna be zero plus a thousand",
    "start": "1130240",
    "end": "1137679"
  },
  {
    "text": "which is gonna be a thousand awesome if you solve a one then this is gonna be one thousand",
    "start": "1137679",
    "end": "1143120"
  },
  {
    "start": "1140000",
    "end": "1380000"
  },
  {
    "text": "right this is gonna be one thousand plus one thousand so two thousand and so we're gonna read the next thousand and",
    "start": "1143120",
    "end": "1149280"
  },
  {
    "text": "the next thousand and the next thousand all right so that's now we're gonna get have a beautiful array chunks which we",
    "start": "1149280",
    "end": "1156000"
  },
  {
    "text": "need just to send to the back how do we send stuff to the back end well first of all we need to make this",
    "start": "1156000",
    "end": "1162640"
  },
  {
    "text": "function into asynchronous i'm going to tell you why because i'm going to use a weight here right",
    "start": "1162640",
    "end": "1170559"
  },
  {
    "text": "a weight fetch we're going to do a fetch command we're going to localhost 8080",
    "start": "1170559",
    "end": "1177600"
  },
  {
    "text": "right and then we're going to go to upload here there's obviously",
    "start": "1177600",
    "end": "1182880"
  },
  {
    "text": "there's no route by the way here the constants of browse is just literally path so we have to have an if statement",
    "start": "1182880",
    "end": "1189280"
  },
  {
    "text": "on the back end to capture that right so what are we sending we're sending a bunch of stuff",
    "start": "1189280",
    "end": "1195600"
  },
  {
    "text": "so the first thing you're gonna specify is the method i'm gonna post because hey we're sending stuff the next thing we're",
    "start": "1195600",
    "end": "1201679"
  },
  {
    "text": "gonna send is the headers right it's an array of headers and the final thing is the body and i guess the",
    "start": "1201679",
    "end": "1208720"
  },
  {
    "text": "body is the easiest thing can you guess what the body is the body is the chunk baby for the headers we really need to",
    "start": "1208720",
    "end": "1214720"
  },
  {
    "text": "till the back end but um and not just the back in any proxies in the middle hey by the way i'm sending some bytes",
    "start": "1214720",
    "end": "1222400"
  },
  {
    "text": "and this is called the content type the content type is called application slash octet",
    "start": "1222400",
    "end": "1228240"
  },
  {
    "text": "i always misspell this opted stream octadream and then the content length",
    "start": "1228240",
    "end": "1235600"
  },
  {
    "text": "is is what it's junk dot length hey this is how much i'm sending",
    "start": "1235600",
    "end": "1241120"
  },
  {
    "text": "you beautiful so we're looping and we're sending a bunch of requests but they are kind of",
    "start": "1241120",
    "end": "1248159"
  },
  {
    "text": "stateless they know don't know each other we want to somehow tag this request with some unique identifier",
    "start": "1248159",
    "end": "1255120"
  },
  {
    "text": "and this is the file name so i want to generate a unique file name here right",
    "start": "1255120",
    "end": "1261360"
  },
  {
    "text": "and i want the easiest really better way to do it is just create a",
    "start": "1261360",
    "end": "1266799"
  },
  {
    "text": "file name here and the file name is and the file is up there right the file",
    "start": "1266799",
    "end": "1274000"
  },
  {
    "text": "the file the name i believe it was the property called the name then when you get the file",
    "start": "1274000",
    "end": "1281360"
  },
  {
    "text": "right this is the whole name with the extension but",
    "start": "1281360",
    "end": "1287200"
  },
  {
    "text": "but what if you uploaded the same file again right we don't we we want to take a completely unique one so i'm just",
    "start": "1287200",
    "end": "1294240"
  },
  {
    "text": "gonna do math.random here uh times a thousand",
    "start": "1294240",
    "end": "1299520"
  },
  {
    "text": "just to create it some randomness here on at this end",
    "start": "1299520",
    "end": "1305600"
  },
  {
    "text": "all right and here's the file name and that is the unique file name are there better ways to do this there's",
    "start": "1305600",
    "end": "1312559"
  },
  {
    "text": "always better ways to do anything to be honest but i think a simple thing here really",
    "start": "1312559",
    "end": "1319120"
  },
  {
    "text": "so now we have a unique way we have a unique upload id think of it like this way right",
    "start": "1319120",
    "end": "1324720"
  },
  {
    "text": "so now i'm going to send an extra header here and this is a custom editor that i'm going to make up and this is called",
    "start": "1324720",
    "end": "1330799"
  },
  {
    "text": "literally i'm going to call it file name and uh there you go",
    "start": "1330799",
    "end": "1336320"
  },
  {
    "text": "the file name now this is the front end we're looping and we're sending a",
    "start": "1336320",
    "end": "1341360"
  },
  {
    "text": "request we're awaiting it because we want to be in the loop waiting we want we don't want to go to the next loop",
    "start": "1341360",
    "end": "1347360"
  },
  {
    "text": "send the next request before we actually get a some sort of a response from the server",
    "start": "1347360",
    "end": "1354400"
  },
  {
    "text": "okay so that's why we're awaiting this if i don't have this if i remove this this is going to be asynchronous that",
    "start": "1354400",
    "end": "1360240"
  },
  {
    "text": "means the whole entire loop whatever chuck count chunk count is is going to be",
    "start": "1360240",
    "end": "1366799"
  },
  {
    "text": "sending a flood of requests to the backend right order",
    "start": "1366799",
    "end": "1372320"
  },
  {
    "text": "we have no idea if we can maintain order or not right threading will be it will gonna be a mess",
    "start": "1372320",
    "end": "1378559"
  },
  {
    "text": "and you're gonna run out of resources and your and your client so we have this is one way to do it",
    "start": "1378559",
    "end": "1384960"
  },
  {
    "start": "1380000",
    "end": "1680000"
  },
  {
    "text": "we prop we can can you do it probably you can if you know if you if you want to",
    "start": "1384960",
    "end": "1390960"
  },
  {
    "text": "paralyze stuff you can do it it's just to unlimit right but if you're doing in this way",
    "start": "1390960",
    "end": "1397120"
  },
  {
    "text": "then you're gonna really run out of so we're almost serialized we own we don't",
    "start": "1397120",
    "end": "1402799"
  },
  {
    "text": "send the next request the next chunk until we get a response that the chunk has been received i'm not",
    "start": "1402799",
    "end": "1409280"
  },
  {
    "text": "handling any errors cases or whatnot but we're only sending a chunk when we get",
    "start": "1409280",
    "end": "1415120"
  },
  {
    "text": "a response from the server that we actually received some sort of response from the server so",
    "start": "1415120",
    "end": "1420799"
  },
  {
    "text": "that's that's what we're doing here uh can this be optimized of course",
    "start": "1420799",
    "end": "1426240"
  },
  {
    "text": "you can definitely optimize that send seven chunks at a time",
    "start": "1426240",
    "end": "1431440"
  },
  {
    "text": "but you need some sort of a finesse to do that out of the scope of this video",
    "start": "1431440",
    "end": "1437360"
  },
  {
    "text": "all right back end what do you have for me so this path is when we are requesting",
    "start": "1437360",
    "end": "1444000"
  },
  {
    "text": "the the url right but what if i'm requesting the",
    "start": "1444000",
    "end": "1450480"
  },
  {
    "text": "upload if i'm uploading what do you have for me",
    "start": "1450480",
    "end": "1456320"
  },
  {
    "text": "well i need some data right first of all i need that",
    "start": "1456320",
    "end": "1461760"
  },
  {
    "text": "what do i need from you i need the file name can i get the file name from you very",
    "start": "1461760",
    "end": "1467279"
  },
  {
    "text": "simple headers so request.headers and we have a beautiful",
    "start": "1467279",
    "end": "1472960"
  },
  {
    "text": "custom header right here it's just hey that's a file name and then",
    "start": "1472960",
    "end": "1479360"
  },
  {
    "text": "there is a nice function in the fs right that appends",
    "start": "1479360",
    "end": "1485360"
  },
  {
    "text": "the content synchronously right append some content to a file and if the file doesn't exist",
    "start": "1485360",
    "end": "1490799"
  },
  {
    "text": "it will create it for us all right so what we're gonna do let's get the chunk but here's the",
    "start": "1490799",
    "end": "1496559"
  },
  {
    "text": "here's the trick here we need to read the body",
    "start": "1496559",
    "end": "1501760"
  },
  {
    "text": "right of the request because it's a post request right so what do we do here right",
    "start": "1501760",
    "end": "1508400"
  },
  {
    "text": "how do we read the body request if you think about it i don't know if this shows you it's an",
    "start": "1508400",
    "end": "1514480"
  },
  {
    "text": "incoming message and if you go to it's an incoming message if you go to the help right always the help is your",
    "start": "1514480",
    "end": "1521120"
  },
  {
    "text": "friend if you go to the help it's going to tell you that this is actually just another stream",
    "start": "1521120",
    "end": "1527360"
  },
  {
    "text": "yeah so if it's a stream then you can essentially",
    "start": "1527360",
    "end": "1534080"
  },
  {
    "text": "just read that stream right and there's an event called data and this data is the data in the body",
    "start": "1534080",
    "end": "1540240"
  },
  {
    "text": "itself so we're going to receive that chunk and then what i'm going to do with the chunk i will take that chunk and immediately",
    "start": "1540240",
    "end": "1548400"
  },
  {
    "text": "first of all maybe just write a console message here says okay receive chunk awesome so now what we",
    "start": "1548400",
    "end": "1556159"
  },
  {
    "text": "need to do is just write this chunk to the file how do we do that fs dot append",
    "start": "1556159",
    "end": "1562159"
  },
  {
    "text": "file synchronous to the path guess what the path is just i don't care",
    "start": "1562159",
    "end": "1569200"
  },
  {
    "text": "but in the same location here and then what's what's the what are we",
    "start": "1569200",
    "end": "1574559"
  },
  {
    "text": "writing we're writing a bunch of bytes and this is the chunk that we're writing boom receive trunk",
    "start": "1574559",
    "end": "1580960"
  },
  {
    "text": "slam and literally once you're done with this",
    "start": "1580960",
    "end": "1586640"
  },
  {
    "text": "respond upload it",
    "start": "1586640",
    "end": "1591679"
  },
  {
    "text": "so this will keep repeating depending on the size of the chunk right",
    "start": "1593200",
    "end": "1598880"
  },
  {
    "text": "uh one request might have many many man chugging this is what we're talking about this might time out right so if",
    "start": "1598880",
    "end": "1605440"
  },
  {
    "text": "the smaller the chunk size that you send the better in this case so i'm sending 1000 which is too low by the way right",
    "start": "1605440",
    "end": "1612320"
  },
  {
    "text": "and now we have to restart the back end and i have no idea if this is going to work from the first time so let's go ahead and refresh",
    "start": "1612320",
    "end": "1618799"
  },
  {
    "text": "and select my engine up so this net read it",
    "start": "1618799",
    "end": "1624400"
  },
  {
    "text": "how many chunks do we have we have 330.954 chunks",
    "start": "1624400",
    "end": "1629919"
  },
  {
    "text": "and we're going to read successfully let's continue [Music]",
    "start": "1629919",
    "end": "1636880"
  },
  {
    "text": "we're going to loop nope get the chunk beautiful thousand array buffer chunk",
    "start": "1636880",
    "end": "1644000"
  },
  {
    "text": "and then we're gonna call the back end post to the back end up one",
    "start": "1644000",
    "end": "1649679"
  },
  {
    "text": "we sent something we sent something did we get a response looks like we did we got a response",
    "start": "1649679",
    "end": "1657279"
  },
  {
    "text": "nice we got a response now let's just let it run",
    "start": "1657279",
    "end": "1662480"
  },
  {
    "text": "go to the back end we have a beautiful ass file the nginx and we have the",
    "start": "1662480",
    "end": "1669600"
  },
  {
    "text": "beautiful engine x right so now",
    "start": "1669600",
    "end": "1674960"
  },
  {
    "text": "if what we forgot to do is is actually just do some progression on the on the front",
    "start": "1674960",
    "end": "1681520"
  },
  {
    "start": "1680000",
    "end": "1800000"
  },
  {
    "text": "end let's do that actually how about we do that",
    "start": "1681520",
    "end": "1685440"
  },
  {
    "text": "so i'm looping uh the progressive should be really easy right if you think about it uh",
    "start": "1691520",
    "end": "1697200"
  },
  {
    "text": "we have uh do we have on my output yeah div output what are we gonna do once we send it",
    "start": "1697200",
    "end": "1703520"
  },
  {
    "text": "only when actually it's sent so we're gonna do here is text content equal literally uh chunk id",
    "start": "1703520",
    "end": "1712720"
  },
  {
    "text": "right divided by chunk count times thousand hundred that's the",
    "start": "1712720",
    "end": "1719760"
  },
  {
    "text": "percentage right see if we if that does that's right uh we don't really need to restore the back",
    "start": "1719760",
    "end": "1725120"
  },
  {
    "text": "end boom let's do it let's pick something a little bit large i want something large",
    "start": "1725120",
    "end": "1731360"
  },
  {
    "text": "sure let's do this boom again boom",
    "start": "1731360",
    "end": "1736720"
  },
  {
    "text": "boom awesome you can see there is a percentage here",
    "start": "1736840",
    "end": "1742320"
  },
  {
    "text": "but we didn't do that math the round i don't really care about this",
    "start": "1742320",
    "end": "1748799"
  },
  {
    "text": "zero it means round it round around it up a little bit",
    "start": "1748799",
    "end": "1753840"
  },
  {
    "text": "let's do it again and let's pick a large file now boom",
    "start": "1753840",
    "end": "1759679"
  },
  {
    "text": "upload uh-oh we have a beautiful progressor",
    "start": "1759679",
    "end": "1765840"
  },
  {
    "text": "nice cancel let's do my podcast my podcast logo is huge it's like seven meg",
    "start": "1765840",
    "end": "1772000"
  },
  {
    "text": "sheesh if i do this and i upload it look at that it's so slow",
    "start": "1772000",
    "end": "1777200"
  },
  {
    "text": "but if i do this i actually can't see it right here",
    "start": "1777200",
    "end": "1782480"
  },
  {
    "text": "and uh the beauty of this is this visual studio code which is gonna actually draw it for you as you receive it",
    "start": "1782480",
    "end": "1789840"
  },
  {
    "text": "does this uh do any flashbacks guys 1990",
    "start": "1789840",
    "end": "1795120"
  },
  {
    "text": "right back when we browse the pages look at this",
    "start": "1795120",
    "end": "1800240"
  },
  {
    "start": "1800000",
    "end": "1860000"
  },
  {
    "text": "that's some upload service right there man oh this is ridiculous let's increase the chunk size guys we're gonna increase",
    "start": "1800559",
    "end": "1807279"
  },
  {
    "text": "the chunk size 1000 is too little so",
    "start": "1807279",
    "end": "1812720"
  },
  {
    "text": "let's do how about 5 000 5 kilobytes",
    "start": "1812720",
    "end": "1818000"
  },
  {
    "text": "you don't need more than 5 kilobytes",
    "start": "1818000",
    "end": "1823320"
  },
  {
    "text": "run yeah we're gonna be here forever otherwise",
    "start": "1824000",
    "end": "1829039"
  },
  {
    "text": "refresh take my podcasto even five kilobytes too low but sure",
    "start": "1829039",
    "end": "1834640"
  },
  {
    "text": "eight megabytes",
    "start": "1834640",
    "end": "1837840"
  },
  {
    "text": "there you go done we received 309 no we received 1650",
    "start": "1841200",
    "end": "1848559"
  },
  {
    "text": "chunks you get the idea guys percentage i'm saying can you upload zip files sure",
    "start": "1848559",
    "end": "1855120"
  },
  {
    "text": "upload this is a file source code of the of my nginx course",
    "start": "1855120",
    "end": "1862159"
  },
  {
    "start": "1860000",
    "end": "2251000"
  },
  {
    "text": "where is it there you go reveal in finder",
    "start": "1862159",
    "end": "1867279"
  },
  {
    "text": "extract look at that nginx this is my source",
    "start": "1867279",
    "end": "1872640"
  },
  {
    "text": "code so yeah that's what i want to show guys works uh but there are a lot of flaws it's far far far from from perfect",
    "start": "1872640",
    "end": "1880640"
  },
  {
    "text": "i'm going to push that code so yeah feel free to edit that how many lines of code do we have let's take a look",
    "start": "1880640",
    "end": "1886480"
  },
  {
    "text": "in the html size we have 58 lines of code to do an upload",
    "start": "1886480",
    "end": "1893120"
  },
  {
    "text": "and on the back end what 24 26 22 26 lines of code obviously the mod you need",
    "start": "1893120",
    "end": "1900480"
  },
  {
    "text": "to add resumability right which you can right with this with this model you're",
    "start": "1900480",
    "end": "1906799"
  },
  {
    "text": "just appending right if so if there is one failure and the next chuck's chunks come in",
    "start": "1906799",
    "end": "1912960"
  },
  {
    "text": "right the file will be corrupt right this is the file from perfect but that's why you have to retry the same chunk id",
    "start": "1912960",
    "end": "1919360"
  },
  {
    "text": "that means you have to have idem potency what is it called i di important see this name",
    "start": "1919360",
    "end": "1927279"
  },
  {
    "text": "right by the importance you have to have importancy so each chunk should have a unique",
    "start": "1927279",
    "end": "1933120"
  },
  {
    "text": "identifier with it effectively right uh what else what else where else so",
    "start": "1933120",
    "end": "1939200"
  },
  {
    "text": "another bad thing i did here uh is i sent a header a custom header",
    "start": "1939200",
    "end": "1945039"
  },
  {
    "text": "usually you're gonna send it either in the body or in the url parameter something other",
    "start": "1945039",
    "end": "1951440"
  },
  {
    "text": "than the header but the problem with the header is if you have it's a hub it's not a hop-by-hop",
    "start": "1951440",
    "end": "1957279"
  },
  {
    "text": "basis right the nginx or ha proxy or any proxy in the middle if you have used",
    "start": "1957279",
    "end": "1962799"
  },
  {
    "text": "proxying then uh it might drop the headers it's like what is this i don't know it right",
    "start": "1962799",
    "end": "1968799"
  },
  {
    "text": "it's not it's an unknown header unless you configure it so it's sent these headers right",
    "start": "1968799",
    "end": "1974799"
  },
  {
    "text": "i believe experimenter just has to start with x or something like that again it works here when you have but",
    "start": "1974799",
    "end": "1981360"
  },
  {
    "text": "when you have just us uploading another thing i want to discuss this can",
    "start": "1981360",
    "end": "1987279"
  },
  {
    "text": "be used to build a scalable upload service",
    "start": "1987279",
    "end": "1993600"
  },
  {
    "text": "yes what do i mean by a scalable upload service today this is a stateful service",
    "start": "1993600",
    "end": "1999600"
  },
  {
    "text": "why because i am writing to the server that i received that means",
    "start": "1999600",
    "end": "2006960"
  },
  {
    "text": "if my next request goes to another server another chunk will be written to another",
    "start": "2006960",
    "end": "2013039"
  },
  {
    "text": "server obviously that will just break the whole thing so what you need to do is",
    "start": "2013039",
    "end": "2018880"
  },
  {
    "text": "what i would do is one solution is have a database on the back end and write the chunks to a blob",
    "start": "2018880",
    "end": "2026320"
  },
  {
    "text": "table right just write the chunks uniquely identified by a chunk id on the",
    "start": "2026320",
    "end": "2032159"
  },
  {
    "text": "table and when the client is done he says okay i'm done what are you gonna do one of the servers will read the",
    "start": "2032159",
    "end": "2038640"
  },
  {
    "text": "database and then i gotta get all the chunks and then write it to a persisted location as",
    "start": "2038640",
    "end": "2046480"
  },
  {
    "text": "three or one of the servers and then retrieve that server this what in that case",
    "start": "2046480",
    "end": "2052240"
  },
  {
    "text": "it will be a completely scalable upload service so each chunk that you send the",
    "start": "2052240",
    "end": "2057919"
  },
  {
    "text": "client send from the front end will go can go to a completely different server and that is okay because each",
    "start": "2057919",
    "end": "2064720"
  },
  {
    "text": "server will not write it to its own thus being stateless right it will write",
    "start": "2064720",
    "end": "2069919"
  },
  {
    "text": "it to a database which is a third thing it's a completely different thing so yes the system is stateful because we have a",
    "start": "2069919",
    "end": "2076560"
  },
  {
    "text": "database but the application that back-end application is is stateless it does not care about anything it just",
    "start": "2076560",
    "end": "2084878"
  },
  {
    "text": "merely you can destroy it restart it doesn't matter right",
    "start": "2084879",
    "end": "2090960"
  },
  {
    "text": "the client will retry and then we'll hit another server which where that server will hit the back end and then write it",
    "start": "2090960",
    "end": "2096638"
  },
  {
    "text": "so we can do so much cool stuff to make a scalable",
    "start": "2096639",
    "end": "2101839"
  },
  {
    "text": "upload service right and in the front end again guys we can do some more things this is so",
    "start": "2101839",
    "end": "2108560"
  },
  {
    "text": "this is so you know this is this is very very in performance i'm waiting right let me",
    "start": "2108560",
    "end": "2115760"
  },
  {
    "text": "actually show you what will happen if i don't do this if i do this right if i just say okay and just loop through and",
    "start": "2115760",
    "end": "2121920"
  },
  {
    "text": "then send everything this thing is gonna break this thing is gonna break let's do it",
    "start": "2121920",
    "end": "2127839"
  },
  {
    "text": "whoa look at that",
    "start": "2127839",
    "end": "2131839"
  },
  {
    "text": "insufficient resources because that is just insane you're doing a lube",
    "start": "2133680",
    "end": "2139920"
  },
  {
    "text": "and then sending a lot of requests almost in parallel not quite but almost",
    "start": "2139920",
    "end": "2145280"
  },
  {
    "text": "imperative you're sending the next request despite you didn't receive a a response",
    "start": "2145280",
    "end": "2151040"
  },
  {
    "text": "from the first one so i can imagine now the look at that look at that so now the",
    "start": "2151040",
    "end": "2156839"
  },
  {
    "text": "connection yes we're doing multiplexing not much this is a reverse multiplexing in this case right because http one one",
    "start": "2156839",
    "end": "2164000"
  },
  {
    "text": "that's what we're using we're not using hdb2 uh so the browser opens six there's a",
    "start": "2164000",
    "end": "2169520"
  },
  {
    "text": "connection and then reverse multiplex the request on these multi tcp connections and then pull them back on",
    "start": "2169520",
    "end": "2175839"
  },
  {
    "text": "the back end and god knows if you're gonna get them in order or not you will not get them in",
    "start": "2175839",
    "end": "2181760"
  },
  {
    "text": "order so definitely i'm not gonna you could get the file uh",
    "start": "2181760",
    "end": "2187119"
  },
  {
    "text": "you could get the file on an order by chance but this needs a lot of work",
    "start": "2187119",
    "end": "2193359"
  },
  {
    "text": "right you can take advantage of this thing right let's say send five in",
    "start": "2193359",
    "end": "2198480"
  },
  {
    "text": "parallel four in parallel play with that a little bit and then make sure that hopefully they reach",
    "start": "2198480",
    "end": "2205040"
  },
  {
    "text": "in order in the back end and if they because why did why does the order matter in my",
    "start": "2205040",
    "end": "2210800"
  },
  {
    "text": "particular case because i'm just appending to the to the file immediately if it was a database",
    "start": "2210800",
    "end": "2217280"
  },
  {
    "text": "and i have a sequential chunk id the order doesn't matter because i'm going to write it to",
    "start": "2217280",
    "end": "2222320"
  },
  {
    "text": "the database and i have a sequence right so if sequence number two chunk number two has arrived before chunk",
    "start": "2222320",
    "end": "2228400"
  },
  {
    "text": "number one doesn't matter because i'm gonna order it at the end i have a field that is representing the orders of",
    "start": "2228400",
    "end": "2234400"
  },
  {
    "text": "chunks all right guys that's that's it for me today i'm gonna see you in the next one hope you enjoy this video you know guys it's just i just love to break",
    "start": "2234400",
    "end": "2241040"
  },
  {
    "text": "these things and just go back to the basics and fundamentals from time to time well guys um see you",
    "start": "2241040",
    "end": "2247359"
  },
  {
    "text": "in the next one you guys stay awesome on this night bye",
    "start": "2247359",
    "end": "2252319"
  }
]