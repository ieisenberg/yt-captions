[
  {
    "text": "an old function in linux called memchar",
    "start": "80",
    "end": "3040"
  },
  {
    "text": "has been improved recently with the",
    "start": "3040",
    "end": "4960"
  },
  {
    "text": "latest patch of linux by four times but",
    "start": "4960",
    "end": "8400"
  },
  {
    "text": "this is not really the most instructive",
    "start": "8400",
    "end": "10320"
  },
  {
    "text": "thing because this function was",
    "start": "10320",
    "end": "11759"
  },
  {
    "text": "introduced back in what 1991",
    "start": "11759",
    "end": "14799"
  },
  {
    "text": "but the most instructive thing here is",
    "start": "14799",
    "end": "18640"
  },
  {
    "text": "how it was discovered and",
    "start": "18640",
    "end": "22000"
  },
  {
    "text": "the way",
    "start": "22000",
    "end": "23600"
  },
  {
    "text": "uh the the code is written back in the",
    "start": "23600",
    "end": "26560"
  },
  {
    "text": "days versus taking advantage of modern",
    "start": "26560",
    "end": "30080"
  },
  {
    "text": "systems and cpus and this is what what",
    "start": "30080",
    "end": "33040"
  },
  {
    "text": "is fascinating to me this comes from",
    "start": "33040",
    "end": "34719"
  },
  {
    "text": "phoronx i'm going to read it to you and",
    "start": "34719",
    "end": "36239"
  },
  {
    "text": "then a little bit i'm going to discuss a",
    "start": "36239",
    "end": "37600"
  },
  {
    "text": "little bit so optimized memchar",
    "start": "37600",
    "end": "39680"
  },
  {
    "text": "implementations for linux kernel up to",
    "start": "39680",
    "end": "42480"
  },
  {
    "text": "four times faster",
    "start": "42480",
    "end": "44399"
  },
  {
    "text": "a set of proposed patches",
    "start": "44399",
    "end": "46399"
  },
  {
    "text": "promises to make the linux kernel's",
    "start": "46399",
    "end": "48879"
  },
  {
    "text": "memchar which is a function basically",
    "start": "48879",
    "end": "52239"
  },
  {
    "text": "you guys that you give it a block of",
    "start": "52239",
    "end": "54239"
  },
  {
    "text": "memory the start of the block of the",
    "start": "54239",
    "end": "55760"
  },
  {
    "text": "memory you give it what character you",
    "start": "55760",
    "end": "57760"
  },
  {
    "text": "want to find and it will give you",
    "start": "57760",
    "end": "60160"
  },
  {
    "text": "where exactly in that memory that",
    "start": "60160",
    "end": "62320"
  },
  {
    "text": "character exists so it's almost like a",
    "start": "62320",
    "end": "64478"
  },
  {
    "text": "search you know contains if you will in",
    "start": "64479",
    "end": "66320"
  },
  {
    "text": "tests carried out by the developer the",
    "start": "66320",
    "end": "68000"
  },
  {
    "text": "new implementation can be nearly four",
    "start": "68000",
    "end": "70159"
  },
  {
    "text": "times faster in large",
    "start": "70159",
    "end": "72880"
  },
  {
    "text": "searches",
    "start": "72880",
    "end": "74479"
  },
  {
    "text": "only in large searches so it's not",
    "start": "74479",
    "end": "76560"
  },
  {
    "text": "really a big deal if you're searching in",
    "start": "76560",
    "end": "78880"
  },
  {
    "text": "small binaries small strengths but in a",
    "start": "78880",
    "end": "82000"
  },
  {
    "text": "large when you're searching large things",
    "start": "82000",
    "end": "83759"
  },
  {
    "text": "yeah it can be beneficial but this is",
    "start": "83759",
    "end": "86000"
  },
  {
    "text": "not really what i'm interested in i'm",
    "start": "86000",
    "end": "87920"
  },
  {
    "text": "interested in the explanation here and",
    "start": "87920",
    "end": "90560"
  },
  {
    "text": "how",
    "start": "90560",
    "end": "91759"
  },
  {
    "text": "we can learn something from this from",
    "start": "91759",
    "end": "94479"
  },
  {
    "text": "experts so this comes from one of the",
    "start": "94479",
    "end": "96640"
  },
  {
    "text": "developers of linux kernel eugene chang",
    "start": "96640",
    "end": "99680"
  },
  {
    "text": "who sent other patches let's read this",
    "start": "99680",
    "end": "101280"
  },
  {
    "text": "and discuss a little bit the original",
    "start": "101280",
    "end": "103280"
  },
  {
    "text": "version of mem char is implemented with",
    "start": "103280",
    "end": "106240"
  },
  {
    "text": "a buy twice comparing technique",
    "start": "106240",
    "end": "109200"
  },
  {
    "text": "which does not fully use the 64 or",
    "start": "109200",
    "end": "112799"
  },
  {
    "text": "32-bit registers in the cpu",
    "start": "112799",
    "end": "115759"
  },
  {
    "text": "we",
    "start": "115759",
    "end": "116560"
  },
  {
    "text": "that means them we use word wide",
    "start": "116560",
    "end": "119840"
  },
  {
    "text": "comparing so that eight characters so",
    "start": "119840",
    "end": "122880"
  },
  {
    "text": "eight bytes assuming uh one byte is one",
    "start": "122880",
    "end": "124960"
  },
  {
    "text": "character that might not always be true",
    "start": "124960",
    "end": "127119"
  },
  {
    "text": "for utf-8",
    "start": "127119",
    "end": "128560"
  },
  {
    "text": "but you get the point can be compared at",
    "start": "128560",
    "end": "131039"
  },
  {
    "text": "the same time on the cpu this code is",
    "start": "131039",
    "end": "134160"
  },
  {
    "text": "based on david lates implementation so",
    "start": "134160",
    "end": "137920"
  },
  {
    "text": "this is and they they go on and explain",
    "start": "137920",
    "end": "140400"
  },
  {
    "text": "the",
    "start": "140400",
    "end": "141520"
  },
  {
    "text": "actual performance because",
    "start": "141520",
    "end": "143200"
  },
  {
    "text": "you see if you compare a single byte",
    "start": "143200",
    "end": "146879"
  },
  {
    "text": "that means you have to take it from",
    "start": "146879",
    "end": "148400"
  },
  {
    "text": "memory",
    "start": "148400",
    "end": "149520"
  },
  {
    "text": "copy to the cpu register and then",
    "start": "149520",
    "end": "151680"
  },
  {
    "text": "compare it with the actual value that",
    "start": "151680",
    "end": "154480"
  },
  {
    "text": "you will look for so if you're comparing",
    "start": "154480",
    "end": "156640"
  },
  {
    "text": "byte by byte you're going to go back and",
    "start": "156640",
    "end": "158959"
  },
  {
    "text": "forth from memory to the cpu",
    "start": "158959",
    "end": "161519"
  },
  {
    "text": "what they those guys did it's like okay",
    "start": "161519",
    "end": "163360"
  },
  {
    "text": "since we have",
    "start": "163360",
    "end": "165040"
  },
  {
    "text": "plenty of room in the cpu register which",
    "start": "165040",
    "end": "167040"
  },
  {
    "text": "is the closest cache to the cpu let's go",
    "start": "167040",
    "end": "170160"
  },
  {
    "text": "p8 let's copy the whole 64-bit",
    "start": "170160",
    "end": "172959"
  },
  {
    "text": "let's understand how much the register",
    "start": "172959",
    "end": "175040"
  },
  {
    "text": "is using and then maybe change that",
    "start": "175040",
    "end": "177920"
  },
  {
    "text": "they don't mention if if the cpus",
    "start": "177920",
    "end": "179840"
  },
  {
    "text": "register is 32 they shift to a four",
    "start": "179840",
    "end": "182000"
  },
  {
    "text": "board or four bytes or four characters i",
    "start": "182000",
    "end": "184239"
  },
  {
    "text": "don't know but",
    "start": "184239",
    "end": "186080"
  },
  {
    "text": "it's still comparing eight",
    "start": "186080",
    "end": "188480"
  },
  {
    "text": "together you know it's much faster",
    "start": "188480",
    "end": "191519"
  },
  {
    "text": "close to the cpu compared to one byte",
    "start": "191519",
    "end": "194400"
  },
  {
    "text": "by",
    "start": "194400",
    "end": "195200"
  },
  {
    "text": "one and uh this is the basically the the",
    "start": "195200",
    "end": "198239"
  },
  {
    "text": "actual function this is the code right",
    "start": "198239",
    "end": "200239"
  },
  {
    "text": "and as you can see it was written back",
    "start": "200239",
    "end": "202879"
  },
  {
    "text": "in 1992 by linus trevor and the the",
    "start": "202879",
    "end": "207280"
  },
  {
    "text": "the code is really simple you can read",
    "start": "207280",
    "end": "209280"
  },
  {
    "text": "through it through it and really",
    "start": "209280",
    "end": "210640"
  },
  {
    "text": "understand what's going on",
    "start": "210640",
    "end": "212560"
  },
  {
    "text": "you know",
    "start": "212560",
    "end": "213440"
  },
  {
    "text": "it it's this is the trick here the p",
    "start": "213440",
    "end": "216480"
  },
  {
    "text": "here is the",
    "start": "216480",
    "end": "218560"
  },
  {
    "text": "basically the storage where you're",
    "start": "218560",
    "end": "220239"
  },
  {
    "text": "looping through each bite right so it's",
    "start": "220239",
    "end": "222640"
  },
  {
    "text": "an inside character and you're looping",
    "start": "222640",
    "end": "224480"
  },
  {
    "text": "through all the n size that's the memory",
    "start": "224480",
    "end": "227120"
  },
  {
    "text": "size",
    "start": "227120",
    "end": "228080"
  },
  {
    "text": "right and this is what you're looking",
    "start": "228080",
    "end": "229280"
  },
  {
    "text": "for if you found it",
    "start": "229280",
    "end": "231760"
  },
  {
    "text": "then",
    "start": "231760",
    "end": "232640"
  },
  {
    "text": "exit right and this return the result",
    "start": "232640",
    "end": "235599"
  },
  {
    "text": "otherwise return now that means you",
    "start": "235599",
    "end": "237360"
  },
  {
    "text": "didn't find it didn't find it",
    "start": "237360",
    "end": "239360"
  },
  {
    "text": "so we're searching bite by bite",
    "start": "239360",
    "end": "242319"
  },
  {
    "text": "what those guys did is they changed this",
    "start": "242319",
    "end": "244319"
  },
  {
    "text": "to award which is i believe it's a it's",
    "start": "244319",
    "end": "247280"
  },
  {
    "text": "an eight",
    "start": "247280",
    "end": "249439"
  },
  {
    "text": "eight byte so this is what fascinates me",
    "start": "249439",
    "end": "251599"
  },
  {
    "text": "when i read this article i was like is",
    "start": "251599",
    "end": "253200"
  },
  {
    "text": "it worth it to make a video on it",
    "start": "253200",
    "end": "255439"
  },
  {
    "text": "for the benefits",
    "start": "255439",
    "end": "257280"
  },
  {
    "text": "we might not get anything out of it as a",
    "start": "257280",
    "end": "259519"
  },
  {
    "text": "as you as a user we might not feel it at",
    "start": "259519",
    "end": "261919"
  },
  {
    "text": "all",
    "start": "261919",
    "end": "262720"
  },
  {
    "text": "maybe if you use this function if it's",
    "start": "262720",
    "end": "264880"
  },
  {
    "text": "exposed to you in the string.c which is",
    "start": "264880",
    "end": "267280"
  },
  {
    "text": "the the c library that this is exposed",
    "start": "267280",
    "end": "269680"
  },
  {
    "text": "to yeah you might use it if you're using",
    "start": "269680",
    "end": "272160"
  },
  {
    "text": "really large string then you're going to",
    "start": "272160",
    "end": "273919"
  },
  {
    "text": "start fitting it because you're going to",
    "start": "273919",
    "end": "275600"
  },
  {
    "text": "start reading more and more you're going",
    "start": "275600",
    "end": "277759"
  },
  {
    "text": "to utilize the cache of the cpu",
    "start": "277759",
    "end": "279360"
  },
  {
    "text": "registers right",
    "start": "279360",
    "end": "280960"
  },
  {
    "text": "but it doesn't really matter what this i",
    "start": "280960",
    "end": "283919"
  },
  {
    "text": "think teaches us is",
    "start": "283919",
    "end": "286160"
  },
  {
    "text": "how to look beyond the abstractions",
    "start": "286160",
    "end": "289600"
  },
  {
    "text": "you know because",
    "start": "289600",
    "end": "291280"
  },
  {
    "text": "if i'm look if i'm writing a code and",
    "start": "291280",
    "end": "293040"
  },
  {
    "text": "it's looping through a character",
    "start": "293040",
    "end": "294960"
  },
  {
    "text": "we don't really think in terms of",
    "start": "294960",
    "end": "296560"
  },
  {
    "text": "software architecture and hardware",
    "start": "296560",
    "end": "299120"
  },
  {
    "text": "architecture we really at least i don't",
    "start": "299120",
    "end": "301440"
  },
  {
    "text": "personally you know but this kind of",
    "start": "301440",
    "end": "303520"
  },
  {
    "text": "changes the game",
    "start": "303520",
    "end": "304960"
  },
  {
    "text": "i believe those c the kernel guys think",
    "start": "304960",
    "end": "307840"
  },
  {
    "text": "of this in this time all the time right",
    "start": "307840",
    "end": "310720"
  },
  {
    "text": "but i personally don't you know because",
    "start": "310720",
    "end": "312560"
  },
  {
    "text": "i i mostly write in high-level languages",
    "start": "312560",
    "end": "314560"
  },
  {
    "text": "so i rarely think like this but this",
    "start": "314560",
    "end": "317440"
  },
  {
    "text": "kind of this kind of news changes",
    "start": "317440",
    "end": "320160"
  },
  {
    "text": "completely how i think you know and i",
    "start": "320160",
    "end": "323039"
  },
  {
    "text": "think we can learn something of them",
    "start": "323039",
    "end": "324720"
  },
  {
    "text": "there",
    "start": "324720",
    "end": "326320"
  },
  {
    "text": "look at the code you're writing today",
    "start": "326320",
    "end": "328000"
  },
  {
    "text": "and",
    "start": "328000",
    "end": "329360"
  },
  {
    "text": "see can it really improve i believe",
    "start": "329360",
    "end": "331120"
  },
  {
    "text": "every code can be improved",
    "start": "331120",
    "end": "333280"
  },
  {
    "text": "but the goal here is",
    "start": "333280",
    "end": "336800"
  },
  {
    "text": "we don't want to also go and improve",
    "start": "336800",
    "end": "338720"
  },
  {
    "text": "everything right because it's like okay",
    "start": "338720",
    "end": "341199"
  },
  {
    "text": "how much the gains are really worth it",
    "start": "341199",
    "end": "343280"
  },
  {
    "text": "or not",
    "start": "343280",
    "end": "344400"
  },
  {
    "text": "you have to think about it this way but",
    "start": "344400",
    "end": "346479"
  },
  {
    "text": "just the fact that understanding what's",
    "start": "346479",
    "end": "349120"
  },
  {
    "text": "going on gives you internal i don't know",
    "start": "349120",
    "end": "352880"
  },
  {
    "text": "comfort",
    "start": "352880",
    "end": "354400"
  },
  {
    "text": "of some sort at least to me that okay",
    "start": "354400",
    "end": "357360"
  },
  {
    "text": "this is exactly how that code works",
    "start": "357360",
    "end": "359600"
  },
  {
    "text": "instead of just i don't know it's just",
    "start": "359600",
    "end": "362240"
  },
  {
    "text": "looping but what is it actually doing",
    "start": "362240",
    "end": "365199"
  },
  {
    "text": "this trip between the memory and the cpu",
    "start": "365199",
    "end": "368160"
  },
  {
    "text": "and it's less",
    "start": "368160",
    "end": "370560"
  },
  {
    "text": "significant this trip between the cpu",
    "start": "370560",
    "end": "373280"
  },
  {
    "text": "and memory when you're in a noma",
    "start": "373280",
    "end": "376400"
  },
  {
    "text": "architecture",
    "start": "376400",
    "end": "377840"
  },
  {
    "text": "where the cpu or or the the the new",
    "start": "377840",
    "end": "382160"
  },
  {
    "text": "architecture with m1 or m2 the apple one",
    "start": "382160",
    "end": "385120"
  },
  {
    "text": "where the cpu literally lives within the",
    "start": "385120",
    "end": "387520"
  },
  {
    "text": "memory so there is no trap to go to a",
    "start": "387520",
    "end": "390080"
  },
  {
    "text": "bus of some sort to read the memory",
    "start": "390080",
    "end": "392400"
  },
  {
    "text": "there is no trap so this i believe will",
    "start": "392400",
    "end": "395039"
  },
  {
    "text": "be even less significant right in in",
    "start": "395039",
    "end": "398240"
  },
  {
    "text": "this kind of architecture where the",
    "start": "398240",
    "end": "399919"
  },
  {
    "text": "things are so close to each other but i",
    "start": "399919",
    "end": "402160"
  },
  {
    "text": "i find it just fascinating to",
    "start": "402160",
    "end": "404960"
  },
  {
    "text": "as as you go through the code and",
    "start": "404960",
    "end": "407280"
  },
  {
    "text": "understand what is exactly doing and by",
    "start": "407280",
    "end": "410000"
  },
  {
    "text": "all means i i'm not really an expert it",
    "start": "410000",
    "end": "412400"
  },
  {
    "text": "just makes me really think about this",
    "start": "412400",
    "end": "415840"
  },
  {
    "text": "uh in details i don't know what do you",
    "start": "415840",
    "end": "418400"
  },
  {
    "text": "guys think do do you feel the same or do",
    "start": "418400",
    "end": "420560"
  },
  {
    "text": "you say yeah this is really just really",
    "start": "420560",
    "end": "423440"
  },
  {
    "text": "nothing burger let me know in the",
    "start": "423440",
    "end": "425120"
  },
  {
    "text": "comment section below gonna see in the",
    "start": "425120",
    "end": "426319"
  },
  {
    "text": "next one",
    "start": "426319",
    "end": "427199"
  },
  {
    "text": "quick news today",
    "start": "427199",
    "end": "430160"
  }
]