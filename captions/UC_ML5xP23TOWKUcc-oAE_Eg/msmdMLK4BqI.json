[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hey guys i thought i'd make a video to talk about the life cycle of an http",
    "start": "0",
    "end": "5440"
  },
  {
    "text": "request in node.js and what's the best way then actually building a small",
    "start": "5440",
    "end": "10719"
  },
  {
    "text": "application with http vanilla node.js http server",
    "start": "10719",
    "end": "16480"
  },
  {
    "text": "i'm going to show you how that actually works how about you jump into it let's go ahead and create a brand new project here",
    "start": "16480",
    "end": "23439"
  },
  {
    "text": "i'm going to call it requests nude and then i'm going to build a quick uh",
    "start": "23439",
    "end": "31279"
  },
  {
    "start": "30000",
    "end": "300000"
  },
  {
    "text": "yes we trust i'm going to go build a quick node.js",
    "start": "31279",
    "end": "36559"
  },
  {
    "text": "library right here index.js and uh let's go ahead and import the",
    "start": "36559",
    "end": "45200"
  },
  {
    "text": "http library because that's what we're going to use and then we're going to go ahead and create a server here",
    "start": "45200",
    "end": "52399"
  },
  {
    "text": "off of that do we get intellisense thank you right just by creating that server",
    "start": "52399",
    "end": "60718"
  },
  {
    "text": "we get the server object which we can add events to and one of the beautiful",
    "start": "61600",
    "end": "67840"
  },
  {
    "text": "events is called request which means when a request",
    "start": "67840",
    "end": "74240"
  },
  {
    "text": "an http request that is obviously because we're dealing with http arrives to me as node.js",
    "start": "74240",
    "end": "82159"
  },
  {
    "text": "please call this function that's what exactly what it means",
    "start": "82159",
    "end": "87520"
  },
  {
    "text": "so i'm going to go ahead and just type one here right so when a request",
    "start": "87520",
    "end": "93520"
  },
  {
    "text": "arrives i'm going to print one i'm not going to respond to the client here so",
    "start": "93520",
    "end": "100560"
  },
  {
    "text": "this is what i'm going to do here then obviously i'm going to do",
    "start": "100560",
    "end": "105118"
  },
  {
    "text": "just do a listen to a port 8080 yeah let's listen all interfaces",
    "start": "105600",
    "end": "111520"
  },
  {
    "text": "and then just do console.log listening",
    "start": "111520",
    "end": "116640"
  },
  {
    "text": "last evening [Music] all right",
    "start": "116880",
    "end": "122079"
  },
  {
    "text": "quickly initialize the project npm in it that way all that jazz",
    "start": "122079",
    "end": "128560"
  },
  {
    "text": "let's go ahead and run and this is not js and we're getting yelled at because we",
    "start": "128560",
    "end": "135200"
  },
  {
    "text": "used es6 and this is js so either i can do this as an mjs or just added",
    "start": "135200",
    "end": "143440"
  },
  {
    "text": "what is it type i think that's what they say right just like i have to use type module because i use",
    "start": "143440",
    "end": "149680"
  },
  {
    "text": "the es6 things module",
    "start": "149680",
    "end": "154800"
  },
  {
    "text": "i should do it because i use that new thing okay we're listening right so now while we're",
    "start": "154800",
    "end": "161760"
  },
  {
    "text": "listening what i'm gonna do is i'm gonna use uh curl",
    "start": "161760",
    "end": "168159"
  },
  {
    "text": "i'm gonna use curl to make a request to my beautiful hdb server",
    "start": "168400",
    "end": "176319"
  },
  {
    "text": "and i can easily either do it this way right and if i want it to be fancy i can do it",
    "start": "176319",
    "end": "182239"
  },
  {
    "text": "this way and if i want it to be even fancier",
    "start": "182239",
    "end": "187680"
  },
  {
    "text": "i can do it this way all of this is the same thing because i",
    "start": "187680",
    "end": "195040"
  },
  {
    "text": "listen to all my interfaces that includes all the ip local ip addresses effectively",
    "start": "195040",
    "end": "202000"
  },
  {
    "text": "including ipv6 this is the ipv6 local loopback so if i do enter",
    "start": "202000",
    "end": "207760"
  },
  {
    "text": "what we're going to do here is we go back to the debug and we can see that one was printed and curl is waiting",
    "start": "207760",
    "end": "214959"
  },
  {
    "text": "effectively so it sends all the requests but it's just sitting here and waiting right because we never actually",
    "start": "214959",
    "end": "221280"
  },
  {
    "text": "responded so it's gonna kill that and now what i'm going to do is i'm going to",
    "start": "221280",
    "end": "228239"
  },
  {
    "text": "copy and paste that and add multiple events to the request",
    "start": "228239",
    "end": "234720"
  },
  {
    "text": "event handler which means usually when when you see this",
    "start": "234720",
    "end": "240959"
  },
  {
    "text": "you know it's not very clear what the application will do right well the last one wins will it be",
    "start": "240959",
    "end": "247760"
  },
  {
    "text": "called one after the other well the first one wins you don't know right how about we actually test it and",
    "start": "247760",
    "end": "253439"
  },
  {
    "text": "see what will exactly happen some of you might already know the answer to that but",
    "start": "253439",
    "end": "258880"
  },
  {
    "text": "it's better to actually see it all right so i'm going to do another",
    "start": "258880",
    "end": "264320"
  },
  {
    "text": "curl v you can see the call was sent the tcp connection was established",
    "start": "264320",
    "end": "270880"
  },
  {
    "text": "obviously to the destination we sent the this is the first line",
    "start": "270880",
    "end": "276880"
  },
  {
    "text": "the second line this is the header right there's another header another header and then a new",
    "start": "276880",
    "end": "283440"
  },
  {
    "text": "line and there is nobody because it's a get request and then when you actually look at the debug",
    "start": "283440",
    "end": "290560"
  },
  {
    "text": "we printed one and two and three which means that whole unit was sent as an",
    "start": "290560",
    "end": "296320"
  },
  {
    "text": "object that was passed to that function as this parameter request",
    "start": "296320",
    "end": "302320"
  },
  {
    "start": "300000",
    "end": "490000"
  },
  {
    "text": "and obviously we printed one and once this function exited immediately node.js called the second",
    "start": "302320",
    "end": "309199"
  },
  {
    "text": "one because it's one request it and then pass that same request right",
    "start": "309199",
    "end": "315600"
  },
  {
    "text": "and then over and over again the beauty here is is it's passing",
    "start": "315600",
    "end": "322479"
  },
  {
    "text": "that request object around but the question here is if i make a change to that request will",
    "start": "322479",
    "end": "330080"
  },
  {
    "text": "that change appear in that second one right because we we have established",
    "start": "330080",
    "end": "336000"
  },
  {
    "text": "that the three of them are getting cold so i've already actually test that i never actually test that that before so",
    "start": "336000",
    "end": "342080"
  },
  {
    "text": "let's go ahead and do that so i'm going to do here is i'm going to do a request i'm going to add an object",
    "start": "342080",
    "end": "347840"
  },
  {
    "text": "here so i don't know value which doesn't exist equal one right and then i'm gonna actually print that",
    "start": "347840",
    "end": "354639"
  },
  {
    "text": "value here request.value",
    "start": "354639",
    "end": "360600"
  },
  {
    "text": "if i can type all right and then followed by two right",
    "start": "362960",
    "end": "369600"
  },
  {
    "text": "let's do that then and then three let's just print three",
    "start": "369600",
    "end": "375680"
  },
  {
    "text": "there so what i expect here is since i didn't print anything there i expect that requested value will have the up",
    "start": "375680",
    "end": "383600"
  },
  {
    "text": "the key will create a new key of value one and then that request will be passed",
    "start": "383600",
    "end": "389440"
  },
  {
    "text": "and we're gonna use that so it's either if we see one here one space two that",
    "start": "389440",
    "end": "396560"
  },
  {
    "text": "means the second call to the request was actually fulfilled successfully and",
    "start": "396560",
    "end": "402479"
  },
  {
    "text": "we got the value if we see undefined that means our theory is incorrect how about we",
    "start": "402479",
    "end": "408479"
  },
  {
    "text": "actually test it and do another end go here",
    "start": "408479",
    "end": "414400"
  },
  {
    "text": "and we actually were right so this is very valuable you know you can",
    "start": "414400",
    "end": "420080"
  },
  {
    "text": "this is i believe this is how express works when it comes to middleware right",
    "start": "420080",
    "end": "425440"
  },
  {
    "text": "the idea of middlewares yeah is that how exponential works sure",
    "start": "425440",
    "end": "430880"
  },
  {
    "text": "like if you add like a json body parser to the middleware",
    "start": "430880",
    "end": "436880"
  },
  {
    "text": "we receive the post request usually and that has a json body",
    "start": "436880",
    "end": "444000"
  },
  {
    "text": "okay usually we're too lazy to actually look at the body and parse to jason",
    "start": "444000",
    "end": "450720"
  },
  {
    "text": "understand what it is so there's a middleware and express that actually reads the body",
    "start": "450720",
    "end": "457759"
  },
  {
    "text": "parses the body to adjacent and then stores it into an actual",
    "start": "457759",
    "end": "463120"
  },
  {
    "text": "vertical json body whatever right you can do something like that if you want",
    "start": "463120",
    "end": "469759"
  },
  {
    "text": "and i believe there are a lot of middleware once you said that you so the middleware will run first",
    "start": "469759",
    "end": "476400"
  },
  {
    "text": "process the request for you and then your functions that you add will get called later with a brand new",
    "start": "476400",
    "end": "484319"
  },
  {
    "text": "uh request function effectively right so that's actually pretty cool if you think about it you",
    "start": "484319",
    "end": "490479"
  },
  {
    "start": "490000",
    "end": "860000"
  },
  {
    "text": "have a lot of control at this low level api so now that we understand the request",
    "start": "490479",
    "end": "496560"
  },
  {
    "text": "how do i actually write something to the poor client i'm gonna write the value of one",
    "start": "496560",
    "end": "501840"
  },
  {
    "text": "right the second one here i'm gonna write respond right",
    "start": "501840",
    "end": "507919"
  },
  {
    "text": "two right and the third one i'm gonna respond right three i want you",
    "start": "507919",
    "end": "514560"
  },
  {
    "text": "to notice something here if i do now let's do this",
    "start": "514560",
    "end": "520959"
  },
  {
    "text": "clear if i do curl",
    "start": "520959",
    "end": "526000"
  },
  {
    "text": "immediately notice what will happen here right",
    "start": "526000",
    "end": "531360"
  },
  {
    "text": "the connection was terminated somewhere yeah look at that this is something i never knew",
    "start": "531360",
    "end": "538240"
  },
  {
    "text": "you cannot say then you cannot send an integer it has to be either a string or an",
    "start": "538240",
    "end": "544640"
  },
  {
    "text": "instance of a buffer or an an integer array that's interesting so string works right",
    "start": "544640",
    "end": "551279"
  },
  {
    "text": "so all right let's send the string one string two string three and make sense right they",
    "start": "551279",
    "end": "558080"
  },
  {
    "text": "have to restrict it to certain types they can't just go right",
    "start": "558080",
    "end": "563680"
  },
  {
    "text": "wild west so let's go ahead and do that again boom",
    "start": "563680",
    "end": "568720"
  },
  {
    "text": "now you you see that uh what happens here is we sent the",
    "start": "568720",
    "end": "574240"
  },
  {
    "text": "request right and then we actually",
    "start": "574240",
    "end": "579279"
  },
  {
    "text": "got more information because in curl by the way this is this",
    "start": "579279",
    "end": "584320"
  },
  {
    "text": "indicates that you sent data right this indicates that you received stuff so",
    "start": "584320",
    "end": "590720"
  },
  {
    "text": "just the fact that we wrote something to the client",
    "start": "590720",
    "end": "597519"
  },
  {
    "text": "we also sent the default headers which are http 1 1 200 okay which means",
    "start": "597519",
    "end": "604959"
  },
  {
    "text": "this is the protocol this is the status and i believe this is the translation of",
    "start": "604959",
    "end": "611120"
  },
  {
    "text": "this mistake the another header was sent this is the",
    "start": "611120",
    "end": "617600"
  },
  {
    "text": "date the connection it says it told the client to keep the re that",
    "start": "617600",
    "end": "625519"
  },
  {
    "text": "that connection alive and then there is a timeout right for",
    "start": "625519",
    "end": "630959"
  },
  {
    "text": "five i don't know what buy for it represents because hey we've been here for a long time and still didn't",
    "start": "630959",
    "end": "636320"
  },
  {
    "text": "disconnect so that timeout could have been on something else",
    "start": "636320",
    "end": "641519"
  },
  {
    "text": "and the fact that we wrote something that is an indication to the kind of",
    "start": "641519",
    "end": "647120"
  },
  {
    "text": "content that we're sending it's a transfer encoding it means chunked which",
    "start": "647120",
    "end": "652320"
  },
  {
    "text": "means hey i'm gonna chunk that request to you slowly",
    "start": "652320",
    "end": "658399"
  },
  {
    "text": "so we did send one to a three but if you notice none of those came back to the client",
    "start": "658399",
    "end": "666399"
  },
  {
    "text": "and the reason is because right actually does not send",
    "start": "666399",
    "end": "673440"
  },
  {
    "text": "the the responses to the client so let's read what what write does here",
    "start": "673440",
    "end": "680000"
  },
  {
    "text": "the writable write method writes some data to the stream right so the socket",
    "start": "680000",
    "end": "686399"
  },
  {
    "text": "right it writes these data right and then",
    "start": "686399",
    "end": "693040"
  },
  {
    "text": "and calls the supplied callback once the data has been fully handled if an error",
    "start": "693040",
    "end": "699040"
  },
  {
    "text": "occurs the callback will be called with an error as its first argument the callback is called asynchronously and",
    "start": "699040",
    "end": "706240"
  },
  {
    "text": "before error is limited the return value is true if the internal buffer is less than",
    "start": "706240",
    "end": "713120"
  },
  {
    "text": "the high water mark configured when the stream created after admitting chunk",
    "start": "713120",
    "end": "720480"
  },
  {
    "text": "if false has returned further attempts to write the data the stream should stop until drain",
    "start": "720480",
    "end": "727279"
  },
  {
    "text": "event is emitted right so if you notice here there is a",
    "start": "727279",
    "end": "733519"
  },
  {
    "text": "volume there is there is a variable here so what is that can i change that so",
    "start": "733519",
    "end": "740160"
  },
  {
    "text": "that function says the high water mark configured when the",
    "start": "740160",
    "end": "746480"
  },
  {
    "text": "stream was created after admitting chunk if false was",
    "start": "746480",
    "end": "751680"
  },
  {
    "text": "returned further attempts to write data to the stream should stop until the drain event",
    "start": "751680",
    "end": "758800"
  },
  {
    "text": "is emitted so as you think about these blocking scenarios and when the data",
    "start": "758800",
    "end": "764880"
  },
  {
    "text": "actually gets to the user you don't need to like it can impact performance if you think about right",
    "start": "764880",
    "end": "772399"
  },
  {
    "text": "so how can i let my data get sent get flushed if you will to",
    "start": "772399",
    "end": "781279"
  },
  {
    "text": "the client regardless of its size right first of all let me let me show you exactly that that high water mark if you",
    "start": "781279",
    "end": "787600"
  },
  {
    "text": "will so what i'm going to do here is i'm going to print that thing the high",
    "start": "787600",
    "end": "793440"
  },
  {
    "text": "watermark value and if num of num if i'm not mistaken it might be this guy",
    "start": "793440",
    "end": "801200"
  },
  {
    "text": "rideable high watermark it might be that value",
    "start": "801200",
    "end": "807760"
  },
  {
    "text": "let's go ahead and print it right so i'm going to do hard",
    "start": "807760",
    "end": "814480"
  },
  {
    "text": "and let's do that so now if i made a request here",
    "start": "814480",
    "end": "819680"
  },
  {
    "text": "right it's going to make a request boom boom boom you can see that",
    "start": "819680",
    "end": "826000"
  },
  {
    "text": "writable high warm watermark is 16 000 bytes",
    "start": "826000",
    "end": "831040"
  },
  {
    "text": "which means that if you re if you the right buffer reached 16 000 bytes",
    "start": "831040",
    "end": "838480"
  },
  {
    "text": "then it will automatically flush that well sometimes",
    "start": "838480",
    "end": "844000"
  },
  {
    "text": "i'm building a game for example and i'm sending the inputs the user the game",
    "start": "844000",
    "end": "850079"
  },
  {
    "text": "user moved forward backward i want that input to arrive as fast as possible",
    "start": "850079",
    "end": "855680"
  },
  {
    "text": "right or i'm building for example a chatting app if i'm sending a message i i want",
    "start": "855680",
    "end": "860720"
  },
  {
    "start": "860000",
    "end": "1123000"
  },
  {
    "text": "that message to be arrived immediately right so this can be solved by literally just",
    "start": "860720",
    "end": "867440"
  },
  {
    "text": "calling right let's read let's read through this",
    "start": "867440",
    "end": "872880"
  },
  {
    "text": "it's like it's like discovering the the lore if you will often the uh",
    "start": "872880",
    "end": "878240"
  },
  {
    "text": "of the node.js stuff here so let's run end",
    "start": "878240",
    "end": "883279"
  },
  {
    "text": "calling the writable end method signals that that no more data will be written to the",
    "start": "883279",
    "end": "891040"
  },
  {
    "text": "writeable right so that that the writing that we talked about the optional chunk",
    "start": "891040",
    "end": "897760"
  },
  {
    "text": "and the encoding arguments right is that what it is",
    "start": "897760",
    "end": "903600"
  },
  {
    "text": "it's okay because in text look on cb [Music] that takes a function that returns a",
    "start": "903600",
    "end": "910639"
  },
  {
    "text": "void allow one final additional chunk of data",
    "start": "910639",
    "end": "916160"
  },
  {
    "text": "to be written immediately before closing the stream interesting",
    "start": "916160",
    "end": "921760"
  },
  {
    "text": "so calling the right method after calling end or raise an error because",
    "start": "921760",
    "end": "928240"
  },
  {
    "text": "that is by design because that's what they said so now what is wrong with my code as it stands",
    "start": "928240",
    "end": "935920"
  },
  {
    "text": "today i'm writing and i told end the stream that means slush whatever you wrote to",
    "start": "935920",
    "end": "943279"
  },
  {
    "text": "the client that means prepare the response",
    "start": "943279",
    "end": "948560"
  },
  {
    "text": "and prepare the segments the tcp segment and then prepare the destination ip in",
    "start": "948560",
    "end": "954720"
  },
  {
    "text": "the destination report and then send it back to the client right",
    "start": "954720",
    "end": "960399"
  },
  {
    "text": "and if i'm not mistaken that might also override",
    "start": "960399",
    "end": "966160"
  },
  {
    "text": "nachel's algorithm which kind of indicates to wait",
    "start": "966160",
    "end": "972160"
  },
  {
    "text": "for a full uh maximum segment size before the data is sent right",
    "start": "972160",
    "end": "978959"
  },
  {
    "text": "i'm not i'm not sure about that because there must be a configuration to to enable and disable them right and",
    "start": "978959",
    "end": "986000"
  },
  {
    "text": "natural algorithm only takes effect if there are unacknowledged data obviously right",
    "start": "986000",
    "end": "991199"
  },
  {
    "text": "let's go ahead and do that see what will happen boom",
    "start": "991199",
    "end": "997440"
  },
  {
    "text": "look at this beauty thing we got response guys one we got it",
    "start": "997440",
    "end": "1004480"
  },
  {
    "text": "but look at this we're getting errors in the debugger",
    "start": "1004480",
    "end": "1010600"
  },
  {
    "text": "you probably have guessed it why because i'm writing after the fact that i ended",
    "start": "1012320",
    "end": "1018720"
  },
  {
    "text": "so that's why two and three never made it to the client only one made it okay",
    "start": "1018720",
    "end": "1024640"
  },
  {
    "text": "so now see this is the error that they're throwing error stream right after end",
    "start": "1024640",
    "end": "1030319"
  },
  {
    "text": "right after end so that's that's the error so the logical",
    "start": "1030319",
    "end": "1035438"
  },
  {
    "text": "uh code really for me is either add it right here or since i don't like curly",
    "start": "1035439",
    "end": "1041918"
  },
  {
    "text": "braces i can remove these guys right and i can add an end right here",
    "start": "1041919",
    "end": "1050000"
  },
  {
    "text": "and it says here that you can final chunk i do not see it it takes a",
    "start": "1050000",
    "end": "1056720"
  },
  {
    "text": "function right that's kind of weird right yeah so like",
    "start": "1056720",
    "end": "1061840"
  },
  {
    "text": "this looks weird to me right because end it takes a function",
    "start": "1061840",
    "end": "1067039"
  },
  {
    "text": "right but it says hey sounds like the documentation is weird or i didn't understand that it says like",
    "start": "1067039",
    "end": "1074080"
  },
  {
    "text": "hey you can send a segment send a final chunk all right let's send a test",
    "start": "1074080",
    "end": "1080400"
  },
  {
    "text": "this is and right well this is and make it",
    "start": "1080400",
    "end": "1086160"
  },
  {
    "text": "the signature doesn't say that huh it did make it that's awesome",
    "start": "1086160",
    "end": "1092480"
  },
  {
    "text": "so one two three this is end right so the beauty here is you can end",
    "start": "1092480",
    "end": "1098720"
  },
  {
    "text": "this stream right that responds and also send data during that thing",
    "start": "1098720",
    "end": "1105520"
  },
  {
    "text": "so that's fascinating stuff you think about it right and i can't think of a lot of examples",
    "start": "1105520",
    "end": "1111200"
  },
  {
    "text": "where you want to do multiple you know events if you will",
    "start": "1111200",
    "end": "1116320"
  },
  {
    "text": "but you might have you might might be building a framework",
    "start": "1116320",
    "end": "1121760"
  },
  {
    "text": "like express and you want to make these as flexible",
    "start": "1121760",
    "end": "1126799"
  },
  {
    "start": "1123000",
    "end": "1480000"
  },
  {
    "text": "as possible right you know what express does right uh what express does",
    "start": "1126799",
    "end": "1134080"
  },
  {
    "text": "says hey i want i don't know server.get",
    "start": "1134080",
    "end": "1139520"
  },
  {
    "text": "and you call a method and you specify the path right",
    "start": "1139520",
    "end": "1145440"
  },
  {
    "text": "say hey if this path was called call this function right",
    "start": "1145440",
    "end": "1150799"
  },
  {
    "text": "and you do your your stuff right here so how does that exactly work when in that configuration",
    "start": "1150799",
    "end": "1158000"
  },
  {
    "text": "well what i can do here is effectively build an array of gets right functions",
    "start": "1158000",
    "end": "1166480"
  },
  {
    "text": "and an array of posts function and i'm not going to do the poll paths for now",
    "start": "1166480",
    "end": "1171840"
  },
  {
    "text": "because it's it's not really hard to do but if and i'm going to build a function",
    "start": "1171840",
    "end": "1179280"
  },
  {
    "text": "called get right here this function technically takes a function",
    "start": "1179280",
    "end": "1186640"
  },
  {
    "text": "that function is literally just pushes",
    "start": "1186640",
    "end": "1191919"
  },
  {
    "text": "that function okay this array of functions i'm going to do",
    "start": "1191919",
    "end": "1197200"
  },
  {
    "text": "the same thing with post and keep this around if you will",
    "start": "1197200",
    "end": "1202320"
  },
  {
    "text": "so what i'm going to do here is go hd server dot owned when someone sends me a request right",
    "start": "1202320",
    "end": "1209760"
  },
  {
    "text": "obviously request has to do request and response right and",
    "start": "1209760",
    "end": "1215039"
  },
  {
    "text": "what i'm gonna do here is i'm gonna do an if statement",
    "start": "1215039",
    "end": "1220880"
  },
  {
    "text": "if the request the method is equal equal equal get",
    "start": "1220880",
    "end": "1227200"
  },
  {
    "text": "then i want you to loop through all the gets that have been",
    "start": "1227200",
    "end": "1232480"
  },
  {
    "text": "added and literally call them so what how to do that",
    "start": "1232480",
    "end": "1238240"
  },
  {
    "text": "well we have that array right here right okay right and you can just literally call",
    "start": "1238240",
    "end": "1244240"
  },
  {
    "text": "that function but a function where you need to pass in whatever the request and response",
    "start": "1244240",
    "end": "1251679"
  },
  {
    "text": "were right and you can do the copy and paste and you can do the exact same thing for what",
    "start": "1251679",
    "end": "1256720"
  },
  {
    "text": "for posts this way this is a bug post right this",
    "start": "1256720",
    "end": "1262480"
  },
  {
    "text": "way you can effectively wire events not just like express",
    "start": "1262480",
    "end": "1268960"
  },
  {
    "text": "it's a little bit rudimentary compared to express but you get the point right so now what i can do is something like",
    "start": "1268960",
    "end": "1275679"
  },
  {
    "text": "uh server.get and i'll call function and immediately",
    "start": "1275679",
    "end": "1282960"
  },
  {
    "text": "do this right and i'm gonna do response to it end get one",
    "start": "1282960",
    "end": "1289280"
  },
  {
    "text": "all right i'm gonna go to another function get two as you received your get received your",
    "start": "1289280",
    "end": "1297520"
  },
  {
    "text": "get one and then received your get two let's do",
    "start": "1297520",
    "end": "1303360"
  },
  {
    "text": "let's do a post two posts someone did a post received your post",
    "start": "1303360",
    "end": "1310159"
  },
  {
    "text": "one you'll see if they're opposed to sweet so just like that",
    "start": "1310159",
    "end": "1315840"
  },
  {
    "text": "we're building functions right here right and you can do all sides of logics just",
    "start": "1315840",
    "end": "1321360"
  },
  {
    "text": "like we have expressed the only differences in express you have also a path right which you can add the logic",
    "start": "1321360",
    "end": "1326960"
  },
  {
    "text": "right here we can search for the path and only call the functions that matches the path that the user passes and you",
    "start": "1326960",
    "end": "1333520"
  },
  {
    "text": "can get the path from the request so let's test this do we actually",
    "start": "1333520",
    "end": "1339120"
  },
  {
    "text": "does this actually work right if i do this by default curl does a get if you",
    "start": "1339120",
    "end": "1345919"
  },
  {
    "text": "don't tell it anything so now we're getting a failure",
    "start": "1345919",
    "end": "1351280"
  },
  {
    "text": "server.get is not a function because i am a genius right because i called it before i",
    "start": "1351280",
    "end": "1357840"
  },
  {
    "text": "actually defined it what a genius hussein what a genius",
    "start": "1357840",
    "end": "1364320"
  },
  {
    "text": "gotta do it here right now let's do it again run",
    "start": "1364320",
    "end": "1369840"
  },
  {
    "text": "boom you can see received your get won",
    "start": "1369840",
    "end": "1375039"
  },
  {
    "text": "and we made a mistake why did we only get received your get one and we don't receive uh receiver get two because it's",
    "start": "1375039",
    "end": "1383120"
  },
  {
    "text": "your fault as a claw as a developer you ended the response very prematurely",
    "start": "1383120",
    "end": "1389919"
  },
  {
    "text": "you can do this in this case right you can write and then end right and then end and that",
    "start": "1389919",
    "end": "1396799"
  },
  {
    "text": "if i obviously run the server again do a girl all right",
    "start": "1396799",
    "end": "1402400"
  },
  {
    "text": "now we get both of them can you see them let's see if you get wonders if you're good to hussain how about post how about post",
    "start": "1402400",
    "end": "1410080"
  },
  {
    "text": "does your post work because i don't believe you well let's do a post",
    "start": "1410080",
    "end": "1416400"
  },
  {
    "text": "coral dash x post dp",
    "start": "1416400",
    "end": "1422000"
  },
  {
    "text": "locals this time let's not be fancy this means i can use the post method in",
    "start": "1422000",
    "end": "1427360"
  },
  {
    "text": "this case i still want verbose and now received your post one and received your",
    "start": "1427360",
    "end": "1433520"
  },
  {
    "text": "pause too you might say i'm saying why i don't like this like why there are no new lines",
    "start": "1433520",
    "end": "1439279"
  },
  {
    "text": "hey carl carl and node.js respects what you did you are exactly what you sent",
    "start": "1439279",
    "end": "1445120"
  },
  {
    "text": "will exactly be same no new lines will be added because new lines are data you just we don't just send additional data",
    "start": "1445120",
    "end": "1452159"
  },
  {
    "text": "right just add additional data from our you know armpit",
    "start": "1452159",
    "end": "1457600"
  },
  {
    "text": "we need to respect what the client tells us so if you want new lines just do this",
    "start": "1457600",
    "end": "1464640"
  },
  {
    "text": "if this is like causing you anxiety do this",
    "start": "1468320",
    "end": "1475360"
  },
  {
    "text": "much better right all right guys so so let's summarize what what we what did we learn here we",
    "start": "1475520",
    "end": "1482559"
  },
  {
    "start": "1480000",
    "end": "1818000"
  },
  {
    "text": "learned that and sorry about that my voice because baby's sleeping on the other room so",
    "start": "1482559",
    "end": "1489919"
  },
  {
    "text": "kind of speak quietly and what we learned here is",
    "start": "1489919",
    "end": "1496159"
  },
  {
    "text": "node.js the http beautiful library right that is will",
    "start": "1496159",
    "end": "1501360"
  },
  {
    "text": "allow us to add an event called request and when we when the client like curl or",
    "start": "1501360",
    "end": "1507600"
  },
  {
    "text": "postman or python request library sends us a",
    "start": "1507600",
    "end": "1512880"
  },
  {
    "text": "request an http request that will be translated into tcp land as",
    "start": "1512880",
    "end": "1518720"
  },
  {
    "text": "a bunch of segments right and the segment size default to 1 1500",
    "start": "1518720",
    "end": "1524720"
  },
  {
    "text": "bytes right so if you have a large request like you're suddenly uploading a file that will translate to many many many",
    "start": "1524720",
    "end": "1530960"
  },
  {
    "text": "many segments so this beautiful library will buffer",
    "start": "1530960",
    "end": "1536320"
  },
  {
    "text": "all these tcp segments right the operating system will receive the segments will know which process to send",
    "start": "1536320",
    "end": "1542080"
  },
  {
    "text": "them to because we have the port right or the 88 in this case right they will it will do immediately any segment that",
    "start": "1542080",
    "end": "1549360"
  },
  {
    "text": "we we get the tcp stack in the operating system in this case mac",
    "start": "1549360",
    "end": "1554559"
  },
  {
    "text": "will send an acknowledgement to the server and if delayed acknowledgement rfc is enabled it will delay",
    "start": "1554559",
    "end": "1561520"
  },
  {
    "text": "and send it after 40 milliseconds you know just to don't over warm the bandwidth",
    "start": "1561520",
    "end": "1568240"
  },
  {
    "text": "and then once we receive enough of our data well these data will this segments will be sent to the application which is",
    "start": "1568240",
    "end": "1574240"
  },
  {
    "text": "this http library is doing a lot of work for us here and says okay so we're going to buffer buffer buffer read",
    "start": "1574240",
    "end": "1580640"
  },
  {
    "text": "read and we'll start reading it says okay i got your post i got this i got this i got this i got this",
    "start": "1580640",
    "end": "1587360"
  },
  {
    "text": "and up until here it will never call our function it will never call this",
    "start": "1587360",
    "end": "1593279"
  },
  {
    "text": "event only when the actual new line is received that is an",
    "start": "1593279",
    "end": "1600480"
  },
  {
    "text": "indication that this is the end of the request okay and usually",
    "start": "1600480",
    "end": "1606480"
  },
  {
    "text": "there is a content length that will allow us to know where the end of the request is but if the if there is no",
    "start": "1606480",
    "end": "1614240"
  },
  {
    "text": "none it will basically assume there is no body right and it will end right",
    "start": "1614240",
    "end": "1620480"
  },
  {
    "text": "there so that will basically uh determine the size of the request and",
    "start": "1620480",
    "end": "1627279"
  },
  {
    "text": "boy this is a huge how do i know this is the end of the request and this is the beginning of the",
    "start": "1627279",
    "end": "1633520"
  },
  {
    "text": "second request this is where http smuggling happens right the the because we're dealing with with",
    "start": "1633520",
    "end": "1640799"
  },
  {
    "text": "strings geez a lot of people a lot of hackers actually take advantage of this and and",
    "start": "1640799",
    "end": "1646559"
  },
  {
    "text": "sneak in another post request within a post request and and",
    "start": "1646559",
    "end": "1651679"
  },
  {
    "text": "some some web servers like this one for example will never know where is the end",
    "start": "1651679",
    "end": "1657360"
  },
  {
    "text": "where's the start right so we'll choose a different ending and based on that if you have reverse",
    "start": "1657360",
    "end": "1664399"
  },
  {
    "text": "proxies or load balancers things can go really wrong but yeah once we know the side that the",
    "start": "1664399",
    "end": "1671840"
  },
  {
    "text": "the boundaries if you will of the request we will take this request and then",
    "start": "1671840",
    "end": "1678080"
  },
  {
    "text": "pass that request object with with not only that http will do a lot of",
    "start": "1678080",
    "end": "1684240"
  },
  {
    "text": "work for us we'll parse the headers it will understand that this is a post method like like it will populate",
    "start": "1684240",
    "end": "1691440"
  },
  {
    "text": "a variable in itself called method right because by default there's nothing none",
    "start": "1691440",
    "end": "1696799"
  },
  {
    "text": "of this stuff exists you can argue you can build the http",
    "start": "1696799",
    "end": "1701840"
  },
  {
    "text": "library from scratch using the tcp net library right but it's called net yeah",
    "start": "1701840",
    "end": "1708559"
  },
  {
    "text": "the net library by doing exactly what it's doing and you can build",
    "start": "1708559",
    "end": "1713840"
  },
  {
    "text": "express using http right i just i like to make these videos just",
    "start": "1713840",
    "end": "1719120"
  },
  {
    "text": "so i can just unveil behind the curtain what is happening you know from scratch",
    "start": "1719120",
    "end": "1724559"
  },
  {
    "text": "it's just so much stuff that we take for granted and once we understand this we can optimize our code we can debug our",
    "start": "1724559",
    "end": "1732480"
  },
  {
    "text": "code if things when wrong right because we understand what's happening right",
    "start": "1732480",
    "end": "1739679"
  },
  {
    "text": "so once we have a beautiful single request that request will be",
    "start": "1739679",
    "end": "1745840"
  },
  {
    "text": "called for every instance of an event that has been",
    "start": "1745840",
    "end": "1750880"
  },
  {
    "text": "assigned to this event so this function will be called with the request object and an empty response",
    "start": "1750880",
    "end": "1758399"
  },
  {
    "text": "object right that will be filled with every function so if you call this you",
    "start": "1758399",
    "end": "1763919"
  },
  {
    "text": "fill it and then that filled new state will be passed to the second one so if these are",
    "start": "1763919",
    "end": "1770480"
  },
  {
    "text": "accumulative the request and response and we proved this in the beginning of this video if you will right",
    "start": "1770480",
    "end": "1776799"
  },
  {
    "text": "and that's it so at the end of the day you build your response and then you call end",
    "start": "1776799",
    "end": "1782559"
  },
  {
    "text": "you you write right right right right right and you when you're done you call end all right and once this end",
    "start": "1782559",
    "end": "1789600"
  },
  {
    "text": "this is an indication for the http library in this case to say hey don't call any more functions stop right",
    "start": "1789600",
    "end": "1796000"
  },
  {
    "text": "here so it will never bother calling other actually you know what i",
    "start": "1796000",
    "end": "1801679"
  },
  {
    "text": "take that back actually it calls other functions but it fails with that error",
    "start": "1801679",
    "end": "1807039"
  },
  {
    "text": "that we saw right which is hey the the chunks has been already sent",
    "start": "1807039",
    "end": "1812799"
  },
  {
    "text": "all right guys that was it for me today hope you enjoyed this video going to see you on the next one goodbye",
    "start": "1812799",
    "end": "1819200"
  }
]