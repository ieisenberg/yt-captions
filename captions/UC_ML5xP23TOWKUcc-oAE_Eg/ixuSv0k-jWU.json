[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "i want to spend some time to discuss the communication protocols in database systems",
    "start": "80",
    "end": "7919"
  },
  {
    "text": "within the context of the web and the three-tier architecture to",
    "start": "7919",
    "end": "14880"
  },
  {
    "text": "in general and how the web and rest and and and the three tier",
    "start": "14880",
    "end": "22960"
  },
  {
    "text": "architecture have changed the way we communicate to",
    "start": "22960",
    "end": "28000"
  },
  {
    "text": "the database and personally i think we need to pay attention and revise",
    "start": "28000",
    "end": "34800"
  },
  {
    "text": "this communication that was initially designed to be one-to-one client server",
    "start": "34800",
    "end": "41920"
  },
  {
    "text": "peer-to-peer where the client is the final",
    "start": "41920",
    "end": "47680"
  },
  {
    "text": "consumer of the database there is no additional hop and i wanted to",
    "start": "48559",
    "end": "55039"
  },
  {
    "text": "talk through these points that i have in my mind and how multiplexing",
    "start": "55039",
    "end": "62480"
  },
  {
    "text": "the technology of multiplexing in general with regards to how we have improved the",
    "start": "62480",
    "end": "69040"
  },
  {
    "text": "web with multiplexing with the idea of http 2 with speedy",
    "start": "69040",
    "end": "74080"
  },
  {
    "text": "then we move to quack as a general purpose protocol and how not really how just",
    "start": "74080",
    "end": "81200"
  },
  {
    "text": "does quick or does multiplexing help a three-tier architecture to",
    "start": "81200",
    "end": "88080"
  },
  {
    "text": "to to give you more throughput less resource uh less resource",
    "start": "88080",
    "end": "93920"
  },
  {
    "text": "consumption in the back end and finally will the database even",
    "start": "93920",
    "end": "99439"
  },
  {
    "text": "handle the increased concurrency as a result i'm going to discuss all of that in this",
    "start": "99439",
    "end": "106240"
  },
  {
    "text": "show if you are interested stay tuned welcome to the backend engineering show with your host hussein",
    "start": "106240",
    "end": "111840"
  },
  {
    "text": "nasser and today's episode is a very interesting one uh i wanted i have discussed this topic many times",
    "start": "111840",
    "end": "118560"
  },
  {
    "text": "in this show but every day i gain a little bit more insight",
    "start": "118560",
    "end": "124479"
  },
  {
    "start": "120000",
    "end": "480000"
  },
  {
    "text": "that kind of makes me go back and and reverse my statements in the",
    "start": "124479",
    "end": "129759"
  },
  {
    "text": "past and this is basically the communication protocols between the client and the",
    "start": "129759",
    "end": "135200"
  },
  {
    "text": "database and and we don't really have something other",
    "start": "135200",
    "end": "140640"
  },
  {
    "text": "than tcp the beautiful transmission control protocol tcp",
    "start": "140640",
    "end": "146160"
  },
  {
    "text": "pretty much all databases eventually use that as a method as a medium of communication",
    "start": "146160",
    "end": "154319"
  },
  {
    "text": "between the client and the database server and when i say database server i",
    "start": "154319",
    "end": "159840"
  },
  {
    "text": "mean a dbm as a full-fledged dbms that supports",
    "start": "159840",
    "end": "165360"
  },
  {
    "text": "multi-user features right because a database system",
    "start": "165760",
    "end": "173440"
  },
  {
    "text": "by itself can be a standalone engine that has nothing to do that",
    "start": "173440",
    "end": "179599"
  },
  {
    "text": "doesn't have a feature that allows other external clients to",
    "start": "179599",
    "end": "184720"
  },
  {
    "text": "connect to it it could be a single user like uh uh light sequel sequel light",
    "start": "184720",
    "end": "190879"
  },
  {
    "text": "and uh or or my rocks roxdb or levels db right",
    "start": "190879",
    "end": "197519"
  },
  {
    "text": "it could be like this single instance that i can just instantiate and run right to locally",
    "start": "197519",
    "end": "204959"
  },
  {
    "text": "but in this video i specifically want to talk about the",
    "start": "204959",
    "end": "210480"
  },
  {
    "text": "communication layer between the database and the server and it's very interesting because it all started",
    "start": "210480",
    "end": "217599"
  },
  {
    "text": "with with just thick clients wanted",
    "start": "217599",
    "end": "225200"
  },
  {
    "text": "to connect to the database directly right i built a lot of applications this",
    "start": "225200",
    "end": "230879"
  },
  {
    "text": "way back in early 2000s right you have you have a c-sharp windows",
    "start": "230879",
    "end": "238560"
  },
  {
    "text": "app that's desktop app that connects to a back office database you're in the same network or you're",
    "start": "238560",
    "end": "245439"
  },
  {
    "text": "behind some sort of a form citrix form that",
    "start": "245439",
    "end": "250560"
  },
  {
    "text": "kind of abstracts away that thing you remote in and connect things on the back end but the idea",
    "start": "250560",
    "end": "256880"
  },
  {
    "text": "always have been this thick app that the user's desktop app that you",
    "start": "256880",
    "end": "262639"
  },
  {
    "text": "the users interface with and then every user would log in would",
    "start": "262639",
    "end": "268960"
  },
  {
    "text": "have an actual database user login",
    "start": "268960",
    "end": "276720"
  },
  {
    "text": "that they log in with in the application",
    "start": "276880",
    "end": "281919"
  },
  {
    "text": "so that's why we needed database users log",
    "start": "281919",
    "end": "287040"
  },
  {
    "text": "in to begin with that's always have been the case we provide that login and i log into the",
    "start": "287040",
    "end": "293520"
  },
  {
    "text": "application and now all of a sudden i have a session between my thick application",
    "start": "293520",
    "end": "301600"
  },
  {
    "text": "and the database server and i execute queries i do all that some fancy stuff right and we do all",
    "start": "301600",
    "end": "308320"
  },
  {
    "text": "these tracks like okay i want to do concurrency i want to do multi-threading",
    "start": "308320",
    "end": "313440"
  },
  {
    "text": "so would in the app in the c-sharp app",
    "start": "313440",
    "end": "318560"
  },
  {
    "text": "or or any other any other language really but i built windows application",
    "start": "318560",
    "end": "324000"
  },
  {
    "text": "for a long time so that's what example i give you would spin up multiple tcp",
    "start": "324000",
    "end": "332240"
  },
  {
    "text": "connections to your database and then concurrently",
    "start": "332240",
    "end": "338639"
  },
  {
    "text": "execute multiple queries if you're smart enough you want if you want to like load multiple views or",
    "start": "338639",
    "end": "346560"
  },
  {
    "text": "load some something asynchronously you can do that right instead of running multiple queries synchronously",
    "start": "346880",
    "end": "354720"
  },
  {
    "text": "on the same socket that's just because to avoid to avoid",
    "start": "354720",
    "end": "360880"
  },
  {
    "text": "waiting right it's like if though those queries don't have anything to do with them we can execute multiple ones has been",
    "start": "360880",
    "end": "367280"
  },
  {
    "text": "working for a long time right tcp is basically the main",
    "start": "367280",
    "end": "373120"
  },
  {
    "text": "medium for this and i know other databases build their own protocol on top of tcp",
    "start": "373120",
    "end": "379680"
  },
  {
    "text": "but like i know postgres has their own binary protocol oracle has their own oci",
    "start": "379680",
    "end": "385280"
  },
  {
    "text": "thing sql server has their own stuff and they also support name pipe uh",
    "start": "385280",
    "end": "392840"
  },
  {
    "text": "redis have the their resp i believe right i forgot what",
    "start": "392840",
    "end": "398560"
  },
  {
    "text": "stands for the binary protocol their partner mongodb had their own but essentially",
    "start": "398560",
    "end": "404880"
  },
  {
    "text": "i even made a lot of videos using wireshark to see how those protocol look",
    "start": "404880",
    "end": "410960"
  },
  {
    "text": "like an in wire transfer but eventually everything uses tcp right and there's this application",
    "start": "410960",
    "end": "417599"
  },
  {
    "text": "connected to that and so you as a user you were given",
    "start": "417599",
    "end": "423120"
  },
  {
    "text": "a database user with specific permissions to access certain tables you would not",
    "start": "423120",
    "end": "429039"
  },
  {
    "text": "giving any dba right you would create a user and that user will access certain",
    "start": "429039",
    "end": "437280"
  },
  {
    "text": "views certain tables that dba will do a very good job here to kind of",
    "start": "437280",
    "end": "444479"
  },
  {
    "text": "limit permissions because very critical you don't really need to have access to",
    "start": "444479",
    "end": "450000"
  },
  {
    "text": "everything that's just ugly right so some databases go further and have",
    "start": "450000",
    "end": "456720"
  },
  {
    "text": "idea of saml authentication in the database like sql server so that",
    "start": "456720",
    "end": "463120"
  },
  {
    "text": "users have single sign on right once you log in we're going to pass in your windows",
    "start": "463120",
    "end": "468879"
  },
  {
    "text": "login all the way to the database and when we do that you don't have to have a separate login for the database",
    "start": "468879",
    "end": "475759"
  },
  {
    "text": "right so we're still up until this point we have not discussed",
    "start": "475759",
    "end": "481520"
  },
  {
    "start": "480000",
    "end": "890000"
  },
  {
    "text": "the web architecture right once the web came into the picture things changed because",
    "start": "481520",
    "end": "491280"
  },
  {
    "text": "yeah i still need a database to to query",
    "start": "491280",
    "end": "496639"
  },
  {
    "text": "uh to put my blog post right like wordpress and i need to query that",
    "start": "496639",
    "end": "502879"
  },
  {
    "text": "but wait a minute now my users hit a url on their browser",
    "start": "502879",
    "end": "511440"
  },
  {
    "text": "does that mean i should give a login the database login all the way",
    "start": "512080",
    "end": "518399"
  },
  {
    "text": "to the user nobody talks about this stuff we just take it for granted right that's why i wanted to kind of",
    "start": "518399",
    "end": "526080"
  },
  {
    "text": "talk about the elephant in the room and just discuss this stuff because nobody talks about this stuff",
    "start": "526080",
    "end": "532240"
  },
  {
    "text": "and obviously that just sounds ridiculous right you're not going to create a database user for",
    "start": "532240",
    "end": "538320"
  },
  {
    "text": "every single possible someone to visit with your website that just",
    "start": "538320",
    "end": "543760"
  },
  {
    "text": "it's a doa it's a dead on arrival right you can't possibly scale that",
    "start": "543760",
    "end": "549680"
  },
  {
    "text": "architecture and makes me think okay",
    "start": "549680",
    "end": "555360"
  },
  {
    "text": "what should we do so people resolve to this hack",
    "start": "555839",
    "end": "562560"
  },
  {
    "text": "okay let's introduce this uh let's just have a set of users that",
    "start": "562560",
    "end": "569680"
  },
  {
    "text": "database users that are just dumb with with very long password that nobody",
    "start": "569680",
    "end": "575760"
  },
  {
    "text": "will use to actually connect but this will be our web application connected to the database right i should maybe i shouldn't have",
    "start": "575760",
    "end": "582240"
  },
  {
    "text": "called it a hack but it feels like a hack to me i don't know how i described but technically the application the web",
    "start": "582240",
    "end": "589519"
  },
  {
    "text": "application is a user now right and when i make a get request to my web",
    "start": "589519",
    "end": "596800"
  },
  {
    "text": "application through express or iis or or apache php anything",
    "start": "596800",
    "end": "603279"
  },
  {
    "text": "my web app will turn around and call",
    "start": "603279",
    "end": "610800"
  },
  {
    "text": "the the database and what it needs to connect right to the database",
    "start": "610800",
    "end": "616959"
  },
  {
    "text": "the user doesn't have this credentials so the database now the application i'm sorry have this",
    "start": "616959",
    "end": "624720"
  },
  {
    "text": "database credentials baked into it that's something we never done before",
    "start": "624720",
    "end": "630800"
  },
  {
    "text": "we usually give the user it was almost like an end to end with the thick application model",
    "start": "630800",
    "end": "637440"
  },
  {
    "text": "the user have the password they log in and immediately immediately it's end to end we don't",
    "start": "637440",
    "end": "643360"
  },
  {
    "text": "really care we don't store the databases users anywhere because we don't have to the user have",
    "start": "643360",
    "end": "649760"
  },
  {
    "text": "them right now all of a sudden we had to persist this somewhere",
    "start": "649760",
    "end": "655920"
  },
  {
    "text": "for the application to read from for the application to actually store right that's to me that feels like a",
    "start": "655920",
    "end": "663040"
  },
  {
    "text": "flaw you might disagree with this obviously but and feel free",
    "start": "663040",
    "end": "669279"
  },
  {
    "text": "let me know in the comment section or or just ping me this is a very interesting",
    "start": "669279",
    "end": "675040"
  },
  {
    "text": "discussion to me i don't know now and we see all this kind of",
    "start": "675040",
    "end": "680399"
  },
  {
    "text": "hack that happens oh someone pushed the user password accidentally to github and someone got",
    "start": "680399",
    "end": "686160"
  },
  {
    "text": "it and they were able to access their databases on the back which is terrible by the way",
    "start": "686160",
    "end": "691600"
  },
  {
    "text": "right you never expose the database to the internet",
    "start": "691600",
    "end": "697360"
  },
  {
    "text": "now that we are in the three-tier model that we talked about here where we have a an application a web",
    "start": "697360",
    "end": "703519"
  },
  {
    "text": "application in the middle the backend is the database the web application is in the middle",
    "start": "703519",
    "end": "708880"
  },
  {
    "text": "that's second tier and the first tier is what the client itself right the application",
    "start": "708880",
    "end": "714959"
  },
  {
    "text": "browser or your python script that hits your web app",
    "start": "714959",
    "end": "721760"
  },
  {
    "text": "right it's very interesting thinking about all that stuff",
    "start": "721760",
    "end": "727440"
  },
  {
    "text": "so but that's what we have today anyway i just wanted like to look at this",
    "start": "728839",
    "end": "735360"
  },
  {
    "text": "with a pragmatic eye you know just like let's just discuss this and",
    "start": "735360",
    "end": "741040"
  },
  {
    "text": "is there a better way of doing things feels hacky to me i don't know",
    "start": "741040",
    "end": "747440"
  },
  {
    "text": "i'm speaking really i didn't prepare for this",
    "start": "747440",
    "end": "753120"
  },
  {
    "text": "episode or anything like that i just like speak i like to speak organically and raw like that",
    "start": "753120",
    "end": "758399"
  },
  {
    "text": "because that's the original thoughts that i have because if i create everything and edit everything to perfection",
    "start": "758399",
    "end": "764880"
  },
  {
    "text": "you get i don't know you get you get you get artificial show from me i like to have my actual",
    "start": "764880",
    "end": "772160"
  },
  {
    "text": "thoughts and maybe as i talk i kind of reconcile these thoughts but you see you",
    "start": "772160",
    "end": "779440"
  },
  {
    "text": "get to see the process and that's the purpose of this show you don't you don't get to see",
    "start": "779440",
    "end": "786480"
  },
  {
    "text": "like an advice right hey do this no it's it's a conversation that we have",
    "start": "786480",
    "end": "791600"
  },
  {
    "text": "engineers we like we we crave these kind of conversation we are not having",
    "start": "791600",
    "end": "796639"
  },
  {
    "text": "this conversations anywhere unfortunately so that's what we have today",
    "start": "796639",
    "end": "803600"
  },
  {
    "text": "the application the second tier this middle tier is the one that connects to the database",
    "start": "803600",
    "end": "809760"
  },
  {
    "text": "all right and it is the one that has the usernames and now all these questions now it's",
    "start": "809760",
    "end": "816399"
  },
  {
    "text": "like because what about what if i have thousand users",
    "start": "816399",
    "end": "821760"
  },
  {
    "text": "does a thousand viewers a thousand people who visited my app do",
    "start": "821760",
    "end": "827360"
  },
  {
    "text": "i spin up a tcp connection for every single viewer",
    "start": "827360",
    "end": "836720"
  },
  {
    "text": "no because remember in the in the in the in the thick application model where we have a client and server",
    "start": "836959",
    "end": "843760"
  },
  {
    "text": "there is not a lot of search there is just few users there's just one right or multiples and every",
    "start": "843760",
    "end": "850000"
  },
  {
    "text": "user have like almost like a one connection and that doesn't that's okay because we don't have the",
    "start": "850000",
    "end": "855279"
  },
  {
    "text": "model where we have a web app where we have thousands and thousands and even millions of users connecting",
    "start": "855279",
    "end": "860959"
  },
  {
    "text": "now we it's a different story we have scaled so far clients have",
    "start": "860959",
    "end": "867519"
  },
  {
    "text": "become so thin they spin up and multiply so quickly we have to think about this",
    "start": "867519",
    "end": "874639"
  },
  {
    "text": "the amount of requests that can come is just huge and it is impossible to establish a",
    "start": "874639",
    "end": "881279"
  },
  {
    "text": "single tcp connection for for everyone so we had to trade off we",
    "start": "881279",
    "end": "887440"
  },
  {
    "text": "had to trade off horses first let's let's go with with what the singleton",
    "start": "887440",
    "end": "892800"
  },
  {
    "start": "890000",
    "end": "1420000"
  },
  {
    "text": "ccp connection was because i've seen applications like that because they are terrible right a single tcp connection model and every",
    "start": "892800",
    "end": "899839"
  },
  {
    "text": "single client executes on this tcp connection",
    "start": "899839",
    "end": "905120"
  },
  {
    "text": "is bad idea that's why we moved from pipelining in http people just",
    "start": "905120",
    "end": "911920"
  },
  {
    "text": "don't realize that unless until they get an actual nasty bug",
    "start": "911920",
    "end": "918000"
  },
  {
    "text": "when when you start when you start using a single tcp connection",
    "start": "918000",
    "end": "923760"
  },
  {
    "text": "on your between your web application and the database and you have thousands of client just",
    "start": "923760",
    "end": "931120"
  },
  {
    "text": "hammering your web app your web app if it's like node.js is asynchronous",
    "start": "931120",
    "end": "937600"
  },
  {
    "text": "is gonna start just pushing queries on the same tcp connection and you're hoping that",
    "start": "937600",
    "end": "945360"
  },
  {
    "text": "the tcp stack is gonna it's gonna give you the give it to you",
    "start": "945360",
    "end": "950560"
  },
  {
    "text": "in order well if you sent request one request two request three",
    "start": "950560",
    "end": "956639"
  },
  {
    "text": "all right the application the backend database will receive them",
    "start": "956639",
    "end": "961759"
  },
  {
    "text": "at request one request to request three but you have no idea which one will finish first request three by",
    "start": "961759",
    "end": "968160"
  },
  {
    "text": "finish first and if request three finished processing that sql finish processing first",
    "start": "968160",
    "end": "974800"
  },
  {
    "text": "it's gonna respond to the socket it's not gonna wait it doesn't know to wait it's gonna respond to the single",
    "start": "974800",
    "end": "980959"
  },
  {
    "text": "socket and your web application is also dumb because hey i got response it thinks that",
    "start": "980959",
    "end": "988160"
  },
  {
    "text": "request three that we just received belongs to request one the response number three",
    "start": "988160",
    "end": "994320"
  },
  {
    "text": "is all of a sudden delivered to request number one terrible model all of a sudden you have",
    "start": "994320",
    "end": "1001839"
  },
  {
    "text": "leaks and stuff like yeah that's just bad idea query number one gets the result of query number",
    "start": "1001839",
    "end": "1009040"
  },
  {
    "text": "three that's why we never ever execute two queries on the same tcp connection at the same",
    "start": "1009040",
    "end": "1016720"
  },
  {
    "text": "time and parallel we don't do that we execute a query we wait",
    "start": "1016720",
    "end": "1022160"
  },
  {
    "text": "until we get a response and as long as we wait that socket is busy we just mark it as",
    "start": "1022160",
    "end": "1028798"
  },
  {
    "text": "busy that is in use that's how pooling works right that's",
    "start": "1028799",
    "end": "1035280"
  },
  {
    "text": "why we invented the idea of pulling once you exceed you one equation on that specification it's",
    "start": "1035280",
    "end": "1040319"
  },
  {
    "text": "bad idea to re-execute another query while that query is processing because you don't know how the database is going",
    "start": "1040319",
    "end": "1046480"
  },
  {
    "text": "to respond that that's why we have all this http 1 1 no all the whole thing right",
    "start": "1046480",
    "end": "1056080"
  },
  {
    "text": "with with pipelining we move to a model where we we have separate streams or separate tcp",
    "start": "1056080",
    "end": "1063200"
  },
  {
    "text": "connections we then replace with with multiplex multiplexing we're going to talk about it in a minute but yeah",
    "start": "1063200",
    "end": "1068559"
  },
  {
    "text": "the idea of having multiple one tcp connections or one tcp version that serves multiple ba",
    "start": "1068559",
    "end": "1076559"
  },
  {
    "text": "front end clients is a bad idea so that's why we have the idea of pulling what is pulling",
    "start": "1076559",
    "end": "1084559"
  },
  {
    "text": "pooling database pooling is the idea of having when the web application starts",
    "start": "1085039",
    "end": "1093200"
  },
  {
    "text": "it just established 20 tcp connections to the database and just have a state marked with every",
    "start": "1093200",
    "end": "1100720"
  },
  {
    "text": "connection in the application itself and most clients support this database client",
    "start": "1100720",
    "end": "1107600"
  },
  {
    "text": "supports this idea of polling now we have 20 for example you can configure this right you can go up and down you",
    "start": "1107600",
    "end": "1116240"
  },
  {
    "text": "can have maximum of 100 tcp connections all the way to down like",
    "start": "1116240",
    "end": "1122880"
  },
  {
    "text": "20 whatever you can configure that now as you receive request on the viewer",
    "start": "1122880",
    "end": "1130720"
  },
  {
    "text": "right from a viewer in the web you will if that request require a database",
    "start": "1130720",
    "end": "1135919"
  },
  {
    "text": "interaction you would pick the web application would pick a connection from the pool execute the query and mark",
    "start": "1135919",
    "end": "1143679"
  },
  {
    "text": "that connection as in use that's how polling works the next request that comes as long as that",
    "start": "1143679",
    "end": "1149360"
  },
  {
    "text": "connection is busy the next request that comes in it picks another tcp cancellation is never picks",
    "start": "1149360",
    "end": "1155760"
  },
  {
    "text": "that same tcp connection because it's busy executing stuff you don't run and stuff",
    "start": "1155760",
    "end": "1161039"
  },
  {
    "text": "again bad idea right so you pick another one another or",
    "start": "1161039",
    "end": "1166400"
  },
  {
    "text": "another one right so unless you until you hit that 20 all of them are busy executing",
    "start": "1166400",
    "end": "1172960"
  },
  {
    "text": "these queries right then that next request that comes in has",
    "start": "1172960",
    "end": "1178799"
  },
  {
    "text": "to wait right based on your configuration you might decide to configure your polling instance to",
    "start": "1178799",
    "end": "1185919"
  },
  {
    "text": "spin up another tcp connection and then reserve that up and then you you'll play with that",
    "start": "1185919",
    "end": "1191440"
  },
  {
    "text": "right up until you reach the maximum right and if a free if if an instance is freed if a connection is",
    "start": "1191440",
    "end": "1197520"
  },
  {
    "text": "freed you can then serve at a quest to that free dynamics and that's how polling essentially works",
    "start": "1197520",
    "end": "1203200"
  },
  {
    "text": "it's a beautiful design okay however it's expensive right because now the idea of having pooling",
    "start": "1203200",
    "end": "1212080"
  },
  {
    "text": "first of all you have to preheat these connections because if you preheat them if you don't",
    "start": "1212080",
    "end": "1217440"
  },
  {
    "text": "preheat these connections when i say preheat i mean start them early right",
    "start": "1217440",
    "end": "1223360"
  },
  {
    "text": "to avoid the problem of cold start which serverless applications now suffer from right",
    "start": "1223360",
    "end": "1231360"
  },
  {
    "text": "that's the major pro one of the major problem in serverless architectures the cold start how fast can i start up",
    "start": "1231360",
    "end": "1239200"
  },
  {
    "text": "an instance how fast can i start up this connection connections is not it's not it's not it's not fast",
    "start": "1239200",
    "end": "1246159"
  },
  {
    "text": "right i gotta establish the tcp handshake the three-way handshake and then obviously you know if you're on a cloud",
    "start": "1246159",
    "end": "1252240"
  },
  {
    "text": "architecture you're gonna do a tls because you're gonna encrypt that stuff right you don't want to",
    "start": "1252240",
    "end": "1257840"
  },
  {
    "text": "send stuff unencrypted that's bad idea especially in a cloud architecture where things you where you have this uh",
    "start": "1257840",
    "end": "1265679"
  },
  {
    "text": "people in your network kind of uh kind of has the same almost the same",
    "start": "1265679",
    "end": "1271600"
  },
  {
    "text": "network and they can't technically snap it in the physical layer so you don't want to do that you have to",
    "start": "1271600",
    "end": "1276799"
  },
  {
    "text": "encrypt stuff from the cloud i mean cloud providers i think when they use this",
    "start": "1276799",
    "end": "1282400"
  },
  {
    "text": "software defined networking thing i don't know much about it but it's a layer of software that actually",
    "start": "1282400",
    "end": "1288960"
  },
  {
    "text": "abstracts the underlining hardware right so it can do all that jazz i think it encrypts it by",
    "start": "1288960",
    "end": "1294240"
  },
  {
    "text": "default all right yeah the network network chalk",
    "start": "1294240",
    "end": "1299360"
  },
  {
    "text": "have a great video on that i believe uh he interviewed one of verizon's",
    "start": "1299360",
    "end": "1305039"
  },
  {
    "text": "engineers they should they talk about the how software defined well follow the network",
    "start": "1305039",
    "end": "1310559"
  },
  {
    "text": "great videos he has great videos so now we have those we talked about the",
    "start": "1310559",
    "end": "1316000"
  },
  {
    "text": "pooling right now what's next pooling is great but we talked about the",
    "start": "1316000",
    "end": "1323520"
  },
  {
    "text": "cost of establishing tcp connection we talked about also another cost is not just the startup",
    "start": "1323520",
    "end": "1329440"
  },
  {
    "text": "the memory cost because now you have you have multiple connections",
    "start": "1329440",
    "end": "1335919"
  },
  {
    "text": "right you have to keep them running in memory so that costs is",
    "start": "1335919",
    "end": "1346080"
  },
  {
    "text": "depleted from your web application instance because you can establish this x amount",
    "start": "1346080",
    "end": "1351840"
  },
  {
    "text": "of tcp connections plus your cpu has to work harder to work",
    "start": "1351840",
    "end": "1357440"
  },
  {
    "text": "with multiple tcp connections plus there's something that",
    "start": "1357440",
    "end": "1362960"
  },
  {
    "text": "is happening underneath you which is the idea of mutexes and locking",
    "start": "1362960",
    "end": "1369760"
  },
  {
    "text": "across these connections itself right how do you if you want to build an",
    "start": "1369760",
    "end": "1375360"
  },
  {
    "text": "application where where you're going to mark a state in every single connection how do you do",
    "start": "1375360",
    "end": "1380480"
  },
  {
    "text": "that right how do you mark a connection as stable or this is your news oh this is",
    "start": "1380480",
    "end": "1386320"
  },
  {
    "text": "unhealthy how do you do that you might say i'm just i'm going to build a map or dictionary",
    "start": "1386320",
    "end": "1393520"
  },
  {
    "text": "but how can you guarantee that no two threads accessing that seven and",
    "start": "1393520",
    "end": "1399600"
  },
  {
    "text": "then set it at the same time right you might sit it as a news at the same time someone thinks it's free",
    "start": "1399600",
    "end": "1407039"
  },
  {
    "text": "right this concurrency race condition is the ugliest problem to solve in computer science so",
    "start": "1407039",
    "end": "1414720"
  },
  {
    "text": "you have to obtain mutexes or result to a single threaded model where you",
    "start": "1414720",
    "end": "1420640"
  },
  {
    "start": "1420000",
    "end": "1920000"
  },
  {
    "text": "sure that only a single thread can access this thing okay it's complicated",
    "start": "1420640",
    "end": "1426080"
  },
  {
    "text": "i'm not saying the next solution that i'm gonna propose which is i don't believe",
    "start": "1426080",
    "end": "1431200"
  },
  {
    "text": "any database actually use or maybe for a good reason maybe people",
    "start": "1431200",
    "end": "1436799"
  },
  {
    "text": "small people discussed this already and decided it's a bad idea but the idea of moving to a multiplexed",
    "start": "1436799",
    "end": "1446080"
  },
  {
    "text": "version of the whole thing where you have you build a protocol or you use a",
    "start": "1446400",
    "end": "1453279"
  },
  {
    "text": "protocol that supports multiplexing multiplexing multiplexing",
    "start": "1453279",
    "end": "1458720"
  },
  {
    "text": "into a single connection right uh http 2",
    "start": "1458720",
    "end": "1465919"
  },
  {
    "text": "right and before you start dbs is going to yellow they're going to yell at me hey jose we don't use http and db databases yeah i",
    "start": "1465919",
    "end": "1472799"
  },
  {
    "text": "know overhead and all whatnot but take the idea of that and maybe move all the way too quick",
    "start": "1472799",
    "end": "1481039"
  },
  {
    "text": "and the idea is here we have a single tcp connection",
    "start": "1481039",
    "end": "1486640"
  },
  {
    "text": "and we multiplex request into that single tcp connection you",
    "start": "1486640",
    "end": "1492880"
  },
  {
    "text": "might say jose didn't you just tell us you can't send multiple requests in the same tcp connection well",
    "start": "1492880",
    "end": "1499279"
  },
  {
    "text": "you can if you build the infrastructure around it if you tag every request with a with a",
    "start": "1499279",
    "end": "1506880"
  },
  {
    "text": "dedicated channel or sometimes called stream",
    "start": "1506880",
    "end": "1512400"
  },
  {
    "text": "then you have a dedicated stream that you can dedicate for every single request in the",
    "start": "1512400",
    "end": "1519440"
  },
  {
    "text": "same tcp connection and the idea is not magic it's just literally building headers upon headers on top of",
    "start": "1519440",
    "end": "1526720"
  },
  {
    "text": "the tcp stack so that your application can identify oh this request is for this stream or this channel i like the word channel",
    "start": "1526720",
    "end": "1533360"
  },
  {
    "text": "better than stream in my opinion that's how http 2 works the idea of streams you have multiple streams",
    "start": "1533360",
    "end": "1540240"
  },
  {
    "text": "and it was http tools built because of a need in the browsers because we found out that",
    "start": "1540240",
    "end": "1548000"
  },
  {
    "text": "we can't obviously send multiple http requests on the same tcp socket in the browser",
    "start": "1548000",
    "end": "1554880"
  },
  {
    "text": "to like load an image and then load an html and then css no we can't do that",
    "start": "1554880",
    "end": "1561279"
  },
  {
    "text": "so we either spin up multiple ccp connections same same the problem as the pooling we have the same exact thing",
    "start": "1561279",
    "end": "1567679"
  },
  {
    "text": "is it software engineering is not magic guys it's the same thing happen if you actually looked",
    "start": "1567679",
    "end": "1575279"
  },
  {
    "text": "into what's underneath what's the first principle it's all identical no change",
    "start": "1575279",
    "end": "1582480"
  },
  {
    "text": "once you add django and mango and fango and flask and and react this is where it",
    "start": "1582480",
    "end": "1590000"
  },
  {
    "text": "gets fuzzy because it's all abstraction built upon these fundamentals if you",
    "start": "1590000",
    "end": "1595520"
  },
  {
    "text": "just live in this husk of frameworks and you don't understand",
    "start": "1595520",
    "end": "1601120"
  },
  {
    "text": "what's underneath you will be lost if it's not in a year you're gonna be lost in two years",
    "start": "1601120",
    "end": "1606960"
  },
  {
    "text": "do not just learn the shell of the husk learn the basic fundamental and you will",
    "start": "1606960",
    "end": "1613279"
  },
  {
    "text": "see that everything will just make sense because you're just building up it's like",
    "start": "1613279",
    "end": "1618880"
  },
  {
    "text": "memorizing every possible combination of multiplications like oh seven plus",
    "start": "1618880",
    "end": "1624960"
  },
  {
    "text": "eight is this and eight plus seven is this and nine plus eight you get imagine memorizing every",
    "start": "1624960",
    "end": "1630159"
  },
  {
    "text": "possible addition you can't right you have to know how addition works and then based on that",
    "start": "1630159",
    "end": "1636559"
  },
  {
    "text": "you build up an and and repeat that's that's that's a silly example but you get my",
    "start": "1636559",
    "end": "1642559"
  },
  {
    "text": "point but the multiplexing natures here is has",
    "start": "1642559",
    "end": "1647919"
  },
  {
    "text": "been in the browser for a long time in http1 is still used http 2s try to solve that",
    "start": "1647919",
    "end": "1655760"
  },
  {
    "text": "by having a single tcp connection and marking every having these logical streams or logical",
    "start": "1655760",
    "end": "1662559"
  },
  {
    "text": "channels where you send requests in the in the same tcp connection but marked they are just",
    "start": "1662559",
    "end": "1667760"
  },
  {
    "text": "think of it like it's marked oh this is actually request number 700. so if if something come back the server",
    "start": "1667760",
    "end": "1674240"
  },
  {
    "text": "is responsible to tag the packet to tag the response with the stream",
    "start": "1674240",
    "end": "1680320"
  },
  {
    "text": "number so that we know oh this is actually stream 700 so that you don't you don't just you",
    "start": "1680320",
    "end": "1686240"
  },
  {
    "text": "can't just assume things are the way it is right order is not guaranteed at all i mean order is",
    "start": "1686240",
    "end": "1694080"
  },
  {
    "text": "guaranteed in the tcp stack as packets but order",
    "start": "1694080",
    "end": "1699600"
  },
  {
    "text": "within the application layer is never guaranteed because you have no idea when the server responds",
    "start": "1699600",
    "end": "1705520"
  },
  {
    "text": "to you all your requests right it's it's very very interesting these these kind of discussions to me",
    "start": "1705520",
    "end": "1713120"
  },
  {
    "text": "so multiplexing hdb2 solved it we came with another problem",
    "start": "1713120",
    "end": "1718799"
  },
  {
    "text": "so that i don't have to i have i don't have time to cover in this show but we solve these problems with",
    "start": "1718799",
    "end": "1727039"
  },
  {
    "text": "quick mainly the head of line blocking and all that jazz we solved it with quick",
    "start": "1727039",
    "end": "1733360"
  },
  {
    "text": "i say we i didn't i didn't have anything to do with it people way more than we did so",
    "start": "1733360",
    "end": "1739679"
  },
  {
    "text": "quick solve this with udp they built they said okay tcp is just too much for us",
    "start": "1739679",
    "end": "1744799"
  },
  {
    "text": "it's it's tcp is trying to be too clever we we don't want clever protocols let's",
    "start": "1744799",
    "end": "1749919"
  },
  {
    "text": "move down the stack in order to rebuild things up that's what quick did move down the",
    "start": "1749919",
    "end": "1755039"
  },
  {
    "text": "stack they picked udb which is like this this this stripless just send a",
    "start": "1755039",
    "end": "1760880"
  },
  {
    "text": "packet and then they built the guarantee that packet identity they built in stream",
    "start": "1760880",
    "end": "1766000"
  },
  {
    "text": "inside it they built in connection logical connection and they built in tls in it the idea of",
    "start": "1766000",
    "end": "1773520"
  },
  {
    "text": "they did that this is just genius right they thought about that they they saw",
    "start": "1773520",
    "end": "1778720"
  },
  {
    "text": "they kind of had two birds with one stone fed",
    "start": "1778720",
    "end": "1783919"
  },
  {
    "text": "two birds with one scone so peter don't get mad and you get the idea",
    "start": "1783919",
    "end": "1791840"
  },
  {
    "text": "right we have moved and now quick is popular hdb2 is popular",
    "start": "1791840",
    "end": "1800960"
  },
  {
    "text": "and now we have one connection or fewer connection you don't have you don't want to put everything in one",
    "start": "1800960",
    "end": "1806000"
  },
  {
    "text": "connection now less resources so now i have few connections and i can",
    "start": "1806000",
    "end": "1813440"
  },
  {
    "text": "multiplex this stuff right into this single logical connection let's say quick",
    "start": "1813440",
    "end": "1819120"
  },
  {
    "text": "for simplicity now can we bring this to the",
    "start": "1819120",
    "end": "1825360"
  },
  {
    "text": "application layer to the web application layer and can we use quick",
    "start": "1825360",
    "end": "1832399"
  },
  {
    "text": "as a way for my application to multiplex all these requests that comes in instead of using",
    "start": "1832399",
    "end": "1838880"
  },
  {
    "text": "pooling maybe how much",
    "start": "1838880",
    "end": "1845360"
  },
  {
    "text": "would that solve how much does that really improve the performance",
    "start": "1845360",
    "end": "1853600"
  },
  {
    "text": "i really don't have numbers will that help it really depends",
    "start": "1853600",
    "end": "1861120"
  },
  {
    "text": "but it's worth experimenting with this i believe it's",
    "start": "1861519",
    "end": "1867840"
  },
  {
    "text": "not easy because no database supports quick today or no database supports",
    "start": "1867840",
    "end": "1873039"
  },
  {
    "text": "the id of channels right because all dbms systems today",
    "start": "1873039",
    "end": "1880799"
  },
  {
    "text": "support their own tcp protocol that is designed to have a single client in mind they don't",
    "start": "1880799",
    "end": "1886320"
  },
  {
    "text": "they don't build this so to have multiple clients in a single tcp connection they don't they don't do that right",
    "start": "1886320",
    "end": "1892640"
  },
  {
    "text": "right rabbit mq for example they they built this with that in mind they",
    "start": "1892640",
    "end": "1898720"
  },
  {
    "text": "had okay yeah i might have one connection but i might have multiple channels",
    "start": "1898720",
    "end": "1903840"
  },
  {
    "text": "i love this design ssh same idea they have multiple channels in",
    "start": "1903840",
    "end": "1910320"
  },
  {
    "text": "this event empty simplification so so it's it's a very efficient way of",
    "start": "1910320",
    "end": "1915360"
  },
  {
    "text": "delivering communication between the client and the server and i",
    "start": "1915360",
    "end": "1921120"
  },
  {
    "start": "1920000",
    "end": "2438000"
  },
  {
    "text": "think it's gonna is gonna give us more throughput what i believe",
    "start": "1921120",
    "end": "1927760"
  },
  {
    "text": "we will suffer from is the more throughput we get",
    "start": "1927760",
    "end": "1934399"
  },
  {
    "text": "i don't believe that databases at their current state can handle this much throughput",
    "start": "1934399",
    "end": "1943760"
  },
  {
    "text": "in my opinion we've seen it with more databases most perhaps they say well hey guys when you do",
    "start": "1944080",
    "end": "1950080"
  },
  {
    "text": "pooling try to don't set this as an unlimited set a maximum",
    "start": "1950080",
    "end": "1955279"
  },
  {
    "text": "number of connections so that you don't just hammer the database connection with",
    "start": "1955279",
    "end": "1960559"
  },
  {
    "text": "so many tcp connections and so many requests and you might wonder why can we just",
    "start": "1960559",
    "end": "1967360"
  },
  {
    "text": "add more cores can we do horizontal scalability can we do all that just [Music]",
    "start": "1967360",
    "end": "1973760"
  },
  {
    "text": "first of all i'm not going to talk about horizontal scalability when it comes to right that's just a very difficult problem to solve",
    "start": "1973760",
    "end": "1981760"
  },
  {
    "text": "in my opinion i know i know spanner did a great job with atomic clocks there",
    "start": "1981760",
    "end": "1988080"
  },
  {
    "text": "but and there are databases and other databases i forgot the names uh they're doing fauna db i believe they",
    "start": "1988080",
    "end": "1995279"
  },
  {
    "text": "did great jobs at uh trying to to kind of scale right",
    "start": "1995279",
    "end": "2000399"
  },
  {
    "text": "horizontally but the idea of having multiple requests and multiple connections",
    "start": "2000399",
    "end": "2007000"
  },
  {
    "text": "simultaneously concurrently in parallel databases don't like that the reason",
    "start": "2007000",
    "end": "2014559"
  },
  {
    "text": "they don't like that is is the acidity nature and i just invented this one acidity",
    "start": "2014559",
    "end": "2020159"
  },
  {
    "text": "which is the asset right the acidity nature of databases to be an ascent",
    "start": "2020159",
    "end": "2026559"
  },
  {
    "text": "compliant database you really have to",
    "start": "2026559",
    "end": "2033840"
  },
  {
    "text": "maintain concurrency and when you maintain concurrency what does that mean really",
    "start": "2035200",
    "end": "2041440"
  },
  {
    "text": "one one part of concurrency is the idea of mvcc multiversion concurrency control",
    "start": "2041440",
    "end": "2047679"
  },
  {
    "text": "and and if you just sit down and think about the work that the databases do",
    "start": "2047679",
    "end": "2053440"
  },
  {
    "text": "you're gonna appreciate the work and you're gonna understand why it's a bad idea to have",
    "start": "2053440",
    "end": "2058878"
  },
  {
    "text": "this much clients connecting to the database sending all these queries specifically long transactions um we",
    "start": "2058879",
    "end": "2065679"
  },
  {
    "text": "don't really mind short transactions long transactions or the one that kills the database",
    "start": "2065679",
    "end": "2071040"
  },
  {
    "text": "performance and the main reasons is we can't get it",
    "start": "2071040",
    "end": "2076079"
  },
  {
    "text": "this that this episode is going to be like an hour or two hours if we can discuss that stuff but main",
    "start": "2076079",
    "end": "2082398"
  },
  {
    "text": "things and some of this stuff is just like way beyond my head right the idea of locks right",
    "start": "2082399",
    "end": "2089440"
  },
  {
    "text": "as you edit rows in a single in transaction one",
    "start": "2089440",
    "end": "2096480"
  },
  {
    "text": "that row is locked exclusively so that we don't allow other",
    "start": "2096480",
    "end": "2102160"
  },
  {
    "text": "transactions to mutually is the same role you can read it right but you can't edit it another",
    "start": "2102160",
    "end": "2110400"
  },
  {
    "text": "same question now you just edit that row you change that layout of that row you edited a field",
    "start": "2110400",
    "end": "2117520"
  },
  {
    "text": "employee the seller you change the seller from 20 to 100 000 to 300 000 wow what a",
    "start": "2117520",
    "end": "2123359"
  },
  {
    "text": "raise now what happened to transactions that",
    "start": "2123359",
    "end": "2129520"
  },
  {
    "text": "are already running what do they see do they see if transaction was",
    "start": "2129520",
    "end": "2135440"
  },
  {
    "text": "changed to 300 and didn't commit yet instead of doing some some stuff on the background",
    "start": "2135440",
    "end": "2141200"
  },
  {
    "text": "what do transaction zero says what do what do transaction three which just started c's does it see",
    "start": "2141200",
    "end": "2149040"
  },
  {
    "text": "the three thousand three hundred thousand or does it see the two hundred thousand of course gonna see to two hundred thousand otherwise it's not asset right you need",
    "start": "2149040",
    "end": "2157040"
  },
  {
    "text": "the idea of having concurrency and the ability to read to be isolated that's the correct word",
    "start": "2157040",
    "end": "2164560"
  },
  {
    "text": "the asset the i and the asset isolation you need to be isolated so the database",
    "start": "2164560",
    "end": "2171119"
  },
  {
    "text": "need to keep a version of the old row and now every database does this differently",
    "start": "2171119",
    "end": "2177839"
  },
  {
    "text": "in oracle and mysql and mariadb there's something called the undo log that that is",
    "start": "2177839",
    "end": "2185280"
  },
  {
    "text": "literally keeps the old version in an undo log so we can",
    "start": "2185280",
    "end": "2190400"
  },
  {
    "text": "undo the changes in case of a rollback right so that means older transactions or",
    "start": "2190400",
    "end": "2196400"
  },
  {
    "text": "newer transactions that have been started after the fact and still not committed",
    "start": "2196400",
    "end": "2201839"
  },
  {
    "text": "they need to repack this undo log and apply to the raw in order to see",
    "start": "2201839",
    "end": "2208000"
  },
  {
    "text": "the changes right because these kind of databases like oracle",
    "start": "2208000",
    "end": "2213280"
  },
  {
    "text": "and and and my sequel they change the final presentation of the actual row to say",
    "start": "2213280",
    "end": "2220079"
  },
  {
    "text": "it's three hundred thousand right so if you have a long transaction and you have",
    "start": "2220079",
    "end": "2225520"
  },
  {
    "text": "this change this this transaction number one that changed the row to 300 000 and remain running",
    "start": "2225520",
    "end": "2234000"
  },
  {
    "text": "thousands and thousands of new transactions that start and every request is a transaction by default",
    "start": "2234480",
    "end": "2239599"
  },
  {
    "text": "right whether you like it or not we start a transaction and we commit it immediately even if you have a single query that",
    "start": "2239599",
    "end": "2248240"
  },
  {
    "text": "has to always do that work which is the undo go to the undo stack and then and then pull it back up and then kind",
    "start": "2248240",
    "end": "2255839"
  },
  {
    "text": "of roll it up so that gets the actual 200 value to 100 000",
    "start": "2255839",
    "end": "2261359"
  },
  {
    "text": "while postgres does this differently by actually keeping the row",
    "start": "2261359",
    "end": "2269599"
  },
  {
    "text": "as it is and as a neuro directly copies and pastes a neuro",
    "start": "2269680",
    "end": "2276320"
  },
  {
    "text": "that has its own ramification there is no right or wrong but regardless of what approach it is",
    "start": "2276320",
    "end": "2283599"
  },
  {
    "text": "expensive to maintain isolation imagine hundreds of thousands of transactions executing",
    "start": "2283599",
    "end": "2289920"
  },
  {
    "text": "the doing this kind of thing the database is going to do a lot of work",
    "start": "2289920",
    "end": "2295359"
  },
  {
    "text": "every edit has to do this thing add to this locking the idea of having this row is locked",
    "start": "2295359",
    "end": "2302800"
  },
  {
    "text": "how do you know this row is locked there is information about the lock itself",
    "start": "2302800",
    "end": "2308079"
  },
  {
    "text": "that the database has to read for you in order to block you it's a very complex system and having",
    "start": "2308079",
    "end": "2315440"
  },
  {
    "text": "quick on top of all this thing again i'm i'm kind of contradicting myself here right",
    "start": "2315440",
    "end": "2320960"
  },
  {
    "text": "if you think about it i'm not saying that quick is the solution or or http 2 or multiplexing",
    "start": "2320960",
    "end": "2326000"
  },
  {
    "text": "in general is the solution for this but",
    "start": "2326000",
    "end": "2330640"
  },
  {
    "text": "having increased number of requests all of a sudden concurrency will suffer",
    "start": "2331359",
    "end": "2338079"
  },
  {
    "text": "performance will suffer as a result doesn't mean that you just enable multiplexing all of everything is just",
    "start": "2338079",
    "end": "2345599"
  },
  {
    "text": "dandy and happy lucid charts lucid charts a company that produced",
    "start": "2345599",
    "end": "2353359"
  },
  {
    "text": "char i used their product a while back back in 2012. they decided to turn htv",
    "start": "2353359",
    "end": "2359119"
  },
  {
    "text": "2 on their back end and they their cpu cores",
    "start": "2359119",
    "end": "2365599"
  },
  {
    "text": "shot to all hundred percent all of the machines all of a sudden and they're backing out",
    "start": "2365599",
    "end": "2373680"
  },
  {
    "text": "slower as a fact because when they enable hdb2 they didn't put an upper limit to the maximum",
    "start": "2373680",
    "end": "2379839"
  },
  {
    "text": "number of streams they can multiplex through so as a result [Music]",
    "start": "2379839",
    "end": "2385520"
  },
  {
    "text": "the clients just felt more throughput flood through the through the the",
    "start": "2385520",
    "end": "2393040"
  },
  {
    "text": "pipeline you got more requests that means more load on the back end and as a",
    "start": "2393040",
    "end": "2399359"
  },
  {
    "text": "result the cpu has to work harder to parse",
    "start": "2399359",
    "end": "2404400"
  },
  {
    "text": "the tcp stack at the application level in order to understand that oh",
    "start": "2404400",
    "end": "2411040"
  },
  {
    "text": "this request is stream one or this request is stream three or this response is stream hunt seven",
    "start": "2411040",
    "end": "2417599"
  },
  {
    "text": "hundred it needs to do work that didn't have to do before so i'm gonna pass the question back to",
    "start": "2417599",
    "end": "2423680"
  },
  {
    "text": "you guys do you think multiplexing is a possible solution",
    "start": "2423680",
    "end": "2428720"
  },
  {
    "text": "for this inefficiency that we have in the back end let me know in the comment section below",
    "start": "2428720",
    "end": "2433760"
  },
  {
    "text": "i'm gonna see you in the next one you guys awesome goodbye",
    "start": "2433760",
    "end": "2439039"
  }
]