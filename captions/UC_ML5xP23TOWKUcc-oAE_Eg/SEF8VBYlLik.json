[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "the web transport protocol is slowly",
    "start": "0",
    "end": "2460"
  },
  {
    "text": "becoming a reality Chrome has released",
    "start": "2460",
    "end": "5580"
  },
  {
    "text": "support for it around a year as at least",
    "start": "5580",
    "end": "8099"
  },
  {
    "text": "experimental support for it and Firefox",
    "start": "8099",
    "end": "10580"
  },
  {
    "text": "version 114 just few days ago",
    "start": "10580",
    "end": "14340"
  },
  {
    "text": "actually enabled support for the web",
    "start": "14340",
    "end": "17100"
  },
  {
    "text": "transport protocol despite this protocol",
    "start": "17100",
    "end": "21320"
  },
  {
    "text": "and spec is now being finalized yet it's",
    "start": "21320",
    "end": "24720"
  },
  {
    "text": "still in draft mode that means there",
    "start": "24720",
    "end": "27180"
  },
  {
    "text": "isn't even a number for it there's no",
    "start": "27180",
    "end": "29279"
  },
  {
    "text": "RFC official RFC number for it's just a",
    "start": "29279",
    "end": "32220"
  },
  {
    "text": "draft mode so in this video slash",
    "start": "32220",
    "end": "35399"
  },
  {
    "text": "podcast I'd like to talk about what is",
    "start": "35399",
    "end": "37380"
  },
  {
    "text": "the swap transport protocol",
    "start": "37380",
    "end": "39500"
  },
  {
    "text": "what features does it have what is it",
    "start": "39500",
    "end": "42840"
  },
  {
    "text": "gonna why do we need another protocol",
    "start": "42840",
    "end": "44820"
  },
  {
    "text": "right what is it really so if you're",
    "start": "44820",
    "end": "47760"
  },
  {
    "text": "interested stay tuned it's important to",
    "start": "47760",
    "end": "49559"
  },
  {
    "start": "48000",
    "end": "150000"
  },
  {
    "text": "start with the basics you know the web",
    "start": "49559",
    "end": "52260"
  },
  {
    "text": "has been built as the standard for",
    "start": "52260",
    "end": "55140"
  },
  {
    "text": "anything that shares what pages and",
    "start": "55140",
    "end": "58620"
  },
  {
    "text": "documents and anything on the web and",
    "start": "58620",
    "end": "61800"
  },
  {
    "text": "HTTP was built for that and it is simply",
    "start": "61800",
    "end": "65220"
  },
  {
    "text": "designed for a simple request",
    "start": "65220",
    "end": "67860"
  },
  {
    "text": "response so always the client initiate",
    "start": "67860",
    "end": "71460"
  },
  {
    "text": "the request never the server no the",
    "start": "71460",
    "end": "74159"
  },
  {
    "text": "server sits there waits for request and",
    "start": "74159",
    "end": "76500"
  },
  {
    "text": "gives a response but then we wanted more",
    "start": "76500",
    "end": "79400"
  },
  {
    "text": "interactivity from the server we came up",
    "start": "79400",
    "end": "81780"
  },
  {
    "text": "with a lot of tricks the idea of long",
    "start": "81780",
    "end": "83759"
  },
  {
    "text": "pulling such that okay I'm gonna send",
    "start": "83759",
    "end": "86220"
  },
  {
    "text": "you a request and just stream",
    "start": "86220",
    "end": "90540"
  },
  {
    "text": "uh the results",
    "start": "90540",
    "end": "93500"
  },
  {
    "text": "whenever you have the response it",
    "start": "93500",
    "end": "96479"
  },
  {
    "text": "doesn't you don't don't immediately",
    "start": "96479",
    "end": "99119"
  },
  {
    "text": "respond to me",
    "start": "99119",
    "end": "100439"
  },
  {
    "text": "hold that request until you actually",
    "start": "100439",
    "end": "103500"
  },
  {
    "text": "have the response we came up with",
    "start": "103500",
    "end": "105659"
  },
  {
    "text": "another tricks of our server sent events",
    "start": "105659",
    "end": "108180"
  },
  {
    "text": "which is also another cool idea where we",
    "start": "108180",
    "end": "110520"
  },
  {
    "text": "send another one request but the",
    "start": "110520",
    "end": "113220"
  },
  {
    "text": "response is infinite it doesn't end",
    "start": "113220",
    "end": "116159"
  },
  {
    "text": "right and we use transfer chunk encoding",
    "start": "116159",
    "end": "119520"
  },
  {
    "text": "for that and and specific content type",
    "start": "119520",
    "end": "122759"
  },
  {
    "text": "to say event stream it's like let's just",
    "start": "122759",
    "end": "125640"
  },
  {
    "text": "send data send data it's like sending a",
    "start": "125640",
    "end": "127920"
  },
  {
    "text": "request but an infinite",
    "start": "127920",
    "end": "131179"
  },
  {
    "text": "that doesn't end and we use that to",
    "start": "131660",
    "end": "134760"
  },
  {
    "text": "chunk those",
    "start": "134760",
    "end": "136440"
  },
  {
    "text": "response into logical frames that we",
    "start": "136440",
    "end": "140780"
  },
  {
    "text": "interpret in the client as quote-unquote",
    "start": "140780",
    "end": "143640"
  },
  {
    "text": "events brilliant brilliant pattern no",
    "start": "143640",
    "end": "147660"
  },
  {
    "text": "but still we also needed a",
    "start": "147660",
    "end": "150239"
  },
  {
    "start": "150000",
    "end": "300000"
  },
  {
    "text": "bi-directional communication you know",
    "start": "150239",
    "end": "152760"
  },
  {
    "text": "which HTTP doesn't provide it's a",
    "start": "152760",
    "end": "154980"
  },
  {
    "text": "request response server cannot just send",
    "start": "154980",
    "end": "157319"
  },
  {
    "text": "us things like that well you can still",
    "start": "157319",
    "end": "160260"
  },
  {
    "text": "use these two techniques to build a",
    "start": "160260",
    "end": "162360"
  },
  {
    "text": "bi-directional communication it's not",
    "start": "162360",
    "end": "164940"
  },
  {
    "text": "really",
    "start": "164940",
    "end": "166620"
  },
  {
    "text": "it's not intuitive no",
    "start": "166620",
    "end": "169500"
  },
  {
    "text": "that's why the web sockets protocol was",
    "start": "169500",
    "end": "172140"
  },
  {
    "text": "to be designed websockets was designed",
    "start": "172140",
    "end": "174480"
  },
  {
    "text": "as a bi-directional communication it's a",
    "start": "174480",
    "end": "177480"
  },
  {
    "text": "really simple thing on top of http",
    "start": "177480",
    "end": "181980"
  },
  {
    "text": "and what what we really what we did was",
    "start": "181980",
    "end": "186180"
  },
  {
    "text": "really upgraded",
    "start": "186180",
    "end": "188519"
  },
  {
    "text": "the connection that we use for HTTP and",
    "start": "188519",
    "end": "192420"
  },
  {
    "text": "we used it as a raw",
    "start": "192420",
    "end": "194879"
  },
  {
    "text": "uh medium to send data back and forth of",
    "start": "194879",
    "end": "199560"
  },
  {
    "text": "course the websocket has its own",
    "start": "199560",
    "end": "200940"
  },
  {
    "text": "overhead right such as it has the ID of",
    "start": "200940",
    "end": "204659"
  },
  {
    "text": "frames its own concept of frames and",
    "start": "204659",
    "end": "207720"
  },
  {
    "text": "that frames has certain headers so",
    "start": "207720",
    "end": "210239"
  },
  {
    "text": "there's an overhead that you didn't have",
    "start": "210239",
    "end": "212400"
  },
  {
    "text": "before",
    "start": "212400",
    "end": "213599"
  },
  {
    "text": "right",
    "start": "213599",
    "end": "214739"
  },
  {
    "text": "when you use the warp socket protocol",
    "start": "214739",
    "end": "216480"
  },
  {
    "text": "it's not much it's like around 14 bytes",
    "start": "216480",
    "end": "219420"
  },
  {
    "text": "10 bytes per frame and the other thing",
    "start": "219420",
    "end": "221640"
  },
  {
    "text": "is the websocket protocol is uses",
    "start": "221640",
    "end": "226440"
  },
  {
    "text": "certain things that are just weird you",
    "start": "226440",
    "end": "229680"
  },
  {
    "text": "know that these are pre-dates the TLs",
    "start": "229680",
    "end": "233459"
  },
  {
    "text": "you know because websockets was a built",
    "start": "233459",
    "end": "235980"
  },
  {
    "text": "in 2011 right even before that so TLS",
    "start": "235980",
    "end": "239340"
  },
  {
    "text": "was not a thing back then it was but",
    "start": "239340",
    "end": "241560"
  },
  {
    "text": "it's not as dominant so they had this",
    "start": "241560",
    "end": "243659"
  },
  {
    "text": "idea called masking which you have to do",
    "start": "243659",
    "end": "245819"
  },
  {
    "text": "and it's cryptography cryptographic",
    "start": "245819",
    "end": "247980"
  },
  {
    "text": "information to avoid cash poisoning for",
    "start": "247980",
    "end": "250439"
  },
  {
    "text": "proxies which is basically non-existent",
    "start": "250439",
    "end": "252720"
  },
  {
    "text": "problem with us TLS you know because if",
    "start": "252720",
    "end": "255420"
  },
  {
    "text": "you're encrypting things",
    "start": "255420",
    "end": "257400"
  },
  {
    "text": "then you have an encrypted Channel",
    "start": "257400",
    "end": "259199"
  },
  {
    "text": "nobody can change anything and nobody",
    "start": "259199",
    "end": "261780"
  },
  {
    "text": "can you know intercept that so masking",
    "start": "261780",
    "end": "265620"
  },
  {
    "text": "and all this idea of unnecessary",
    "start": "265620",
    "end": "267720"
  },
  {
    "text": "overhead of the client and the server",
    "start": "267720",
    "end": "270900"
  },
  {
    "text": "pair frame that just adds unnecessary",
    "start": "270900",
    "end": "273660"
  },
  {
    "text": "things you know so there's like a little",
    "start": "273660",
    "end": "276300"
  },
  {
    "text": "bit of overhead plus over whoop socket",
    "start": "276300",
    "end": "279479"
  },
  {
    "text": "must be on top of TCP which because HTTP",
    "start": "279479",
    "end": "282840"
  },
  {
    "text": "one and two is on top of TCP so there's",
    "start": "282840",
    "end": "285900"
  },
  {
    "text": "like certain limitations for warp",
    "start": "285900",
    "end": "287520"
  },
  {
    "text": "sockets that well great of course we use",
    "start": "287520",
    "end": "290280"
  },
  {
    "text": "it all the time",
    "start": "290280",
    "end": "291500"
  },
  {
    "text": "there's still",
    "start": "291500",
    "end": "293280"
  },
  {
    "text": "something missing",
    "start": "293280",
    "end": "295100"
  },
  {
    "text": "what the of course the the HTTP protocol",
    "start": "295100",
    "end": "298020"
  },
  {
    "text": "itself was evolved you know hdb2 was it",
    "start": "298020",
    "end": "301440"
  },
  {
    "start": "300000",
    "end": "400000"
  },
  {
    "text": "was invented to allow for the idea of",
    "start": "301440",
    "end": "304080"
  },
  {
    "text": "streams right",
    "start": "304080",
    "end": "306139"
  },
  {
    "text": "so instead of just having a TCP",
    "start": "306139",
    "end": "310500"
  },
  {
    "text": "connection to the",
    "start": "310500",
    "end": "311940"
  },
  {
    "text": "server and you send one request and you",
    "start": "311940",
    "end": "314759"
  },
  {
    "text": "wait for that server you almost",
    "start": "314759",
    "end": "317400"
  },
  {
    "text": "serialize all the requests in one",
    "start": "317400",
    "end": "319620"
  },
  {
    "text": "connection",
    "start": "319620",
    "end": "320639"
  },
  {
    "text": "what you do is",
    "start": "320639",
    "end": "322320"
  },
  {
    "text": "you segment that connection into streams",
    "start": "322320",
    "end": "326100"
  },
  {
    "text": "and you tag",
    "start": "326100",
    "end": "328940"
  },
  {
    "text": "everything you send with specific frames",
    "start": "328940",
    "end": "333300"
  },
  {
    "text": "the idea of frames was invented also in",
    "start": "333300",
    "end": "336720"
  },
  {
    "text": "um",
    "start": "336720",
    "end": "337380"
  },
  {
    "text": "in HTTP 2 right so each the there's this",
    "start": "337380",
    "end": "341520"
  },
  {
    "text": "kind of frames and the frames will have",
    "start": "341520",
    "end": "343500"
  },
  {
    "text": "an Associated stream ID with it so this",
    "start": "343500",
    "end": "346860"
  },
  {
    "text": "way I can send technically",
    "start": "346860",
    "end": "349500"
  },
  {
    "text": "any number of requests at the same time",
    "start": "349500",
    "end": "353539"
  },
  {
    "text": "concurrently in the same connection and",
    "start": "353539",
    "end": "356820"
  },
  {
    "text": "because each are uniquely identified",
    "start": "356820",
    "end": "359900"
  },
  {
    "text": "each they have their own lane sort of",
    "start": "359900",
    "end": "363479"
  },
  {
    "text": "speak regardless websocket HTTP 2 hdb3",
    "start": "363479",
    "end": "368160"
  },
  {
    "text": "solved many problems I talk about all of",
    "start": "368160",
    "end": "370320"
  },
  {
    "text": "this stuff in my back in engineering",
    "start": "370320",
    "end": "372060"
  },
  {
    "text": "course Shameless plug head to",
    "start": "372060",
    "end": "374280"
  },
  {
    "text": "backend.hose and also.com learn about",
    "start": "374280",
    "end": "376919"
  },
  {
    "text": "all these patterns and protocols in",
    "start": "376919",
    "end": "379860"
  },
  {
    "text": "details",
    "start": "379860",
    "end": "381000"
  },
  {
    "text": "but then the web transport protocol",
    "start": "381000",
    "end": "384319"
  },
  {
    "text": "McKenna came in to solve",
    "start": "384319",
    "end": "388500"
  },
  {
    "text": "a diverse sets of problems I want to",
    "start": "388500",
    "end": "392340"
  },
  {
    "text": "introduce flexibility to the user and I",
    "start": "392340",
    "end": "395940"
  },
  {
    "text": "suppose this was maybe introduced by",
    "start": "395940",
    "end": "399380"
  },
  {
    "text": "grpc you know from Google",
    "start": "399380",
    "end": "402479"
  },
  {
    "start": "400000",
    "end": "520000"
  },
  {
    "text": "grpc came in and built itself its own",
    "start": "402479",
    "end": "405600"
  },
  {
    "text": "protocol on top of hdb2 such that it can",
    "start": "405600",
    "end": "409259"
  },
  {
    "text": "use a stream same thing you have one",
    "start": "409259",
    "end": "412259"
  },
  {
    "text": "connection but multiple streams so you",
    "start": "412259",
    "end": "414600"
  },
  {
    "text": "can create a unidirectional stream you",
    "start": "414600",
    "end": "417120"
  },
  {
    "text": "can create a bi-directional stream so",
    "start": "417120",
    "end": "419400"
  },
  {
    "text": "this stream is just a unit direction",
    "start": "419400",
    "end": "421319"
  },
  {
    "text": "that means it's a request response right",
    "start": "421319",
    "end": "423600"
  },
  {
    "text": "this stream is bi-directional that means",
    "start": "423600",
    "end": "426000"
  },
  {
    "text": "the server can send data the client can",
    "start": "426000",
    "end": "428160"
  },
  {
    "text": "send data and so on right",
    "start": "428160",
    "end": "431240"
  },
  {
    "text": "db2 and it's a very popular protocol",
    "start": "431240",
    "end": "434220"
  },
  {
    "text": "it's language agnostic",
    "start": "434220",
    "end": "437520"
  },
  {
    "text": "is that right thing to say I suppose",
    "start": "437520",
    "end": "439740"
  },
  {
    "text": "because they supports many languages you",
    "start": "439740",
    "end": "442080"
  },
  {
    "text": "can use protocol buffer so",
    "start": "442080",
    "end": "444960"
  },
  {
    "text": "anything that supports protocol buffer",
    "start": "444960",
    "end": "446699"
  },
  {
    "text": "for affiliate language supports protocol",
    "start": "446699",
    "end": "448199"
  },
  {
    "text": "buffer then you got grpc right into and",
    "start": "448199",
    "end": "451860"
  },
  {
    "text": "has support so I became popular right",
    "start": "451860",
    "end": "454740"
  },
  {
    "text": "grpc doesn't work on the web despite it",
    "start": "454740",
    "end": "457440"
  },
  {
    "text": "anyone who tells you it does it does not",
    "start": "457440",
    "end": "460259"
  },
  {
    "text": "you have to use all these weird proxies",
    "start": "460259",
    "end": "462479"
  },
  {
    "text": "and stuff like that but it's not",
    "start": "462479",
    "end": "464400"
  },
  {
    "text": "natively supported in the web and the",
    "start": "464400",
    "end": "467520"
  },
  {
    "text": "reason is because grpc needs access to",
    "start": "467520",
    "end": "471780"
  },
  {
    "text": "these low-level streams it needs to",
    "start": "471780",
    "end": "474120"
  },
  {
    "text": "manipulate the streams it needs to you",
    "start": "474120",
    "end": "477120"
  },
  {
    "text": "know",
    "start": "477120",
    "end": "478080"
  },
  {
    "text": "have low level access to the HTTP 2 API",
    "start": "478080",
    "end": "482099"
  },
  {
    "text": "which the web doesn't give you you don't",
    "start": "482099",
    "end": "485340"
  },
  {
    "text": "even get access to the raw TCP",
    "start": "485340",
    "end": "487919"
  },
  {
    "text": "connection",
    "start": "487919",
    "end": "488780"
  },
  {
    "text": "or in case of HTTP 3 the raw quick",
    "start": "488780",
    "end": "492300"
  },
  {
    "text": "connection you don't get access to that",
    "start": "492300",
    "end": "493979"
  },
  {
    "text": "you have apis you send a request you",
    "start": "493979",
    "end": "498780"
  },
  {
    "text": "read a stream of a response and the",
    "start": "498780",
    "end": "502379"
  },
  {
    "text": "browser takes care of which stream",
    "start": "502379",
    "end": "504660"
  },
  {
    "text": "whether it creates a new stream for you",
    "start": "504660",
    "end": "506879"
  },
  {
    "text": "whether creates a new connection it all",
    "start": "506879",
    "end": "510479"
  },
  {
    "text": "does that by itself you know so as a",
    "start": "510479",
    "end": "513539"
  },
  {
    "text": "developer writing JavaScript in the",
    "start": "513539",
    "end": "516539"
  },
  {
    "text": "client side",
    "start": "516539",
    "end": "519300"
  },
  {
    "text": "you have no control over them and that's",
    "start": "519300",
    "end": "522060"
  },
  {
    "start": "520000",
    "end": "570000"
  },
  {
    "text": "why grpc cannot be built natively in the",
    "start": "522060",
    "end": "525300"
  },
  {
    "text": "browser the web transport protocol",
    "start": "525300",
    "end": "527700"
  },
  {
    "text": "actually does all of that for you",
    "start": "527700",
    "end": "531300"
  },
  {
    "text": "okay so you can create a web transport",
    "start": "531300",
    "end": "535399"
  },
  {
    "text": "session in the web transport session if",
    "start": "535399",
    "end": "539100"
  },
  {
    "text": "the server supports web transport it",
    "start": "539100",
    "end": "541140"
  },
  {
    "text": "will allow you either the server or the",
    "start": "541140",
    "end": "543420"
  },
  {
    "text": "client to create a stream",
    "start": "543420",
    "end": "547399"
  },
  {
    "text": "that is bi-directional that is you",
    "start": "547500",
    "end": "552440"
  },
  {
    "text": "unidirectional or get this",
    "start": "552440",
    "end": "556440"
  },
  {
    "text": "unreliable",
    "start": "556440",
    "end": "559320"
  },
  {
    "text": "I just want a stream of unreliable data",
    "start": "559320",
    "end": "561779"
  },
  {
    "text": "I want UDP",
    "start": "561779",
    "end": "563399"
  },
  {
    "text": "I want UDP on my browser",
    "start": "563399",
    "end": "566880"
  },
  {
    "text": "um",
    "start": "566880",
    "end": "568200"
  },
  {
    "text": "can I have udb on my browser",
    "start": "568200",
    "end": "571740"
  },
  {
    "start": "570000",
    "end": "709000"
  },
  {
    "text": "we never had that feature well take that",
    "start": "571740",
    "end": "574560"
  },
  {
    "text": "back webrtc remember that thing you know",
    "start": "574560",
    "end": "578300"
  },
  {
    "text": "webrtc is kind of UDP right so that's",
    "start": "578300",
    "end": "581459"
  },
  {
    "text": "that's not only UDP source that",
    "start": "581459",
    "end": "584760"
  },
  {
    "text": "the web developer has at you know to",
    "start": "584760",
    "end": "589320"
  },
  {
    "text": "that anything resembles UDP with web",
    "start": "589320",
    "end": "592019"
  },
  {
    "text": "transport you can actually create a new",
    "start": "592019",
    "end": "594600"
  },
  {
    "text": "stream as a client or the server the",
    "start": "594600",
    "end": "596820"
  },
  {
    "text": "server can initiate their own streams as",
    "start": "596820",
    "end": "598920"
  },
  {
    "text": "well and says hey I want a",
    "start": "598920",
    "end": "601080"
  },
  {
    "text": "bi-directional I want directional I want",
    "start": "601080",
    "end": "604320"
  },
  {
    "text": "unit Direction I want datagram I just",
    "start": "604320",
    "end": "607260"
  },
  {
    "text": "want",
    "start": "607260",
    "end": "608399"
  },
  {
    "text": "UD YouTube is wrong it's called",
    "start": "608399",
    "end": "610800"
  },
  {
    "text": "literally it's called HTTP datagram",
    "start": "610800",
    "end": "612540"
  },
  {
    "text": "right and I want that stream to be",
    "start": "612540",
    "end": "616080"
  },
  {
    "text": "unreliable don't try to order the",
    "start": "616080",
    "end": "618720"
  },
  {
    "text": "packets whatever their whatever I send",
    "start": "618720",
    "end": "621660"
  },
  {
    "text": "it's an audio or a video whatever and I",
    "start": "621660",
    "end": "624720"
  },
  {
    "text": "wanted to arrive whatever the net",
    "start": "624720",
    "end": "627720"
  },
  {
    "text": "decides if the internet desire to reach",
    "start": "627720",
    "end": "631440"
  },
  {
    "text": "out of order let it arrive our order I",
    "start": "631440",
    "end": "635220"
  },
  {
    "text": "will deal with the out of order",
    "start": "635220",
    "end": "639720"
  },
  {
    "text": "packets frames in this case and I'll",
    "start": "639720",
    "end": "643620"
  },
  {
    "text": "I'll deal with them as an application I",
    "start": "643620",
    "end": "645660"
  },
  {
    "text": "don't know what I'm doing and I'm",
    "start": "645660",
    "end": "647220"
  },
  {
    "text": "application developer if I receive",
    "start": "647220",
    "end": "649380"
  },
  {
    "text": "something that I know is out of out of",
    "start": "649380",
    "end": "652560"
  },
  {
    "text": "order I'll deal with it maybe I'll just",
    "start": "652560",
    "end": "655740"
  },
  {
    "text": "show it to the user if it supported",
    "start": "655740",
    "end": "657779"
  },
  {
    "text": "video maybe I'll skip a frame",
    "start": "657779",
    "end": "659640"
  },
  {
    "text": "maybe I'll buffer and wait for the order",
    "start": "659640",
    "end": "662820"
  },
  {
    "text": "so",
    "start": "662820",
    "end": "663959"
  },
  {
    "text": "you have no idea guys how powerful",
    "start": "663959",
    "end": "667500"
  },
  {
    "text": "control is for application developers",
    "start": "667500",
    "end": "670740"
  },
  {
    "text": "never ever give up control",
    "start": "670740",
    "end": "674720"
  },
  {
    "text": "and the flexibility",
    "start": "674720",
    "end": "678120"
  },
  {
    "text": "to have the power to control these",
    "start": "678120",
    "end": "681300"
  },
  {
    "text": "things",
    "start": "681300",
    "end": "682920"
  },
  {
    "text": "is priceless having magic box that does",
    "start": "682920",
    "end": "687660"
  },
  {
    "text": "everything for you and you have",
    "start": "687660",
    "end": "689399"
  },
  {
    "text": "absolutely no idea what it's doing and",
    "start": "689399",
    "end": "691320"
  },
  {
    "text": "you have no control or what's doing",
    "start": "691320",
    "end": "694140"
  },
  {
    "text": "is a nightmare for developers you see",
    "start": "694140",
    "end": "696120"
  },
  {
    "text": "that's why postgres gives you a thousand",
    "start": "696120",
    "end": "699120"
  },
  {
    "text": "knob a thousand tuning parameter because",
    "start": "699120",
    "end": "701519"
  },
  {
    "text": "they know the software databases are",
    "start": "701519",
    "end": "705000"
  },
  {
    "text": "complex that is why web transport is",
    "start": "705000",
    "end": "708839"
  },
  {
    "text": "technically available as far as I know",
    "start": "708839",
    "end": "710760"
  },
  {
    "start": "709000",
    "end": "775000"
  },
  {
    "text": "in two flavors web transport over HTTP 2",
    "start": "710760",
    "end": "715079"
  },
  {
    "text": "there is a draft for that and there is a",
    "start": "715079",
    "end": "717720"
  },
  {
    "text": "web transport over HTTP 3. and",
    "start": "717720",
    "end": "720540"
  },
  {
    "text": "surprisingly they are very different",
    "start": "720540",
    "end": "722660"
  },
  {
    "text": "Naturally Speaking web transport doesn't",
    "start": "722660",
    "end": "726660"
  },
  {
    "text": "really make sense on HTTP one because it",
    "start": "726660",
    "end": "729240"
  },
  {
    "text": "doesn't have the idea of streams so",
    "start": "729240",
    "end": "731100"
  },
  {
    "text": "there is no web transport for HTTP one",
    "start": "731100",
    "end": "733500"
  },
  {
    "text": "you know if you want that just use",
    "start": "733500",
    "end": "735540"
  },
  {
    "text": "websockets well HTTP 2 on the other hand",
    "start": "735540",
    "end": "740100"
  },
  {
    "text": "uh will give you the ability for",
    "start": "740100",
    "end": "742880"
  },
  {
    "text": "bi-directional you can create a",
    "start": "742880",
    "end": "745019"
  },
  {
    "text": "bi-directional you can create",
    "start": "745019",
    "end": "746899"
  },
  {
    "text": "directional but there is no",
    "start": "746899",
    "end": "750060"
  },
  {
    "text": "unreliable",
    "start": "750060",
    "end": "752640"
  },
  {
    "text": "datagrams",
    "start": "752640",
    "end": "755100"
  },
  {
    "text": "for web transport on top of HTTP 2.",
    "start": "755100",
    "end": "759300"
  },
  {
    "text": "Naturally Speaking because HTTP 2 is on",
    "start": "759300",
    "end": "762060"
  },
  {
    "text": "top of TCP you have to go order that is",
    "start": "762060",
    "end": "765720"
  },
  {
    "text": "the one main reason why hdv3 was",
    "start": "765720",
    "end": "768420"
  },
  {
    "text": "invented right to solve the head of line",
    "start": "768420",
    "end": "770880"
  },
  {
    "text": "blocking problem that is available in",
    "start": "770880",
    "end": "773519"
  },
  {
    "text": "mrtb2 right I don't see why not but you",
    "start": "773519",
    "end": "775920"
  },
  {
    "start": "775000",
    "end": "810000"
  },
  {
    "text": "can proxy web transport",
    "start": "775920",
    "end": "778200"
  },
  {
    "text": "right you can terminate TLS you can",
    "start": "778200",
    "end": "781019"
  },
  {
    "text": "understand those frames God is going to",
    "start": "781019",
    "end": "783660"
  },
  {
    "text": "be difficult but I didn't see any proxy",
    "start": "783660",
    "end": "785820"
  },
  {
    "text": "support swap transport yet",
    "start": "785820",
    "end": "789000"
  },
  {
    "text": "add a layer seven because NL layer 4 is",
    "start": "789000",
    "end": "791760"
  },
  {
    "text": "easy just",
    "start": "791760",
    "end": "794420"
  },
  {
    "text": "I just did that whole anything you send",
    "start": "796019",
    "end": "799200"
  },
  {
    "text": "goes to the Upstream server right",
    "start": "799200",
    "end": "802860"
  },
  {
    "text": "but as a layer 7 you terminate you",
    "start": "802860",
    "end": "806040"
  },
  {
    "text": "understand how to read them and you",
    "start": "806040",
    "end": "809220"
  },
  {
    "text": "forward those frames to the dedicated",
    "start": "809220",
    "end": "811620"
  },
  {
    "start": "810000",
    "end": "863000"
  },
  {
    "text": "server but yeah web transport guys if",
    "start": "811620",
    "end": "814740"
  },
  {
    "text": "you're on top of HTTP 3",
    "start": "814740",
    "end": "816779"
  },
  {
    "text": "you have all the beautiful things we get",
    "start": "816779",
    "end": "820079"
  },
  {
    "text": "bi-directional you're indirectional and",
    "start": "820079",
    "end": "822440"
  },
  {
    "text": "unreliable delivery right on your app",
    "start": "822440",
    "end": "826440"
  },
  {
    "text": "check out the member only version of",
    "start": "826440",
    "end": "828660"
  },
  {
    "text": "this episode where I go into more",
    "start": "828660",
    "end": "831240"
  },
  {
    "text": "details about the connect method the",
    "start": "831240",
    "end": "833339"
  },
  {
    "text": "extended connect method the proxying and",
    "start": "833339",
    "end": "836399"
  },
  {
    "text": "how the kernel handles web transport and",
    "start": "836399",
    "end": "839760"
  },
  {
    "text": "the other things that I cut from this",
    "start": "839760",
    "end": "842279"
  },
  {
    "text": "public episode I usually make the public",
    "start": "842279",
    "end": "844920"
  },
  {
    "text": "episode a little bit shorter and uh the",
    "start": "844920",
    "end": "848700"
  },
  {
    "text": "longer form content I put it as a",
    "start": "848700",
    "end": "850740"
  },
  {
    "text": "member-only section",
    "start": "850740",
    "end": "852260"
  },
  {
    "text": "supports the channel and there are over",
    "start": "852260",
    "end": "855240"
  },
  {
    "text": "60 member only content videos and you",
    "start": "855240",
    "end": "858300"
  },
  {
    "text": "get a lot of perks check out the member",
    "start": "858300",
    "end": "860519"
  },
  {
    "text": "only content become a member now thank",
    "start": "860519",
    "end": "861959"
  },
  {
    "text": "you",
    "start": "861959",
    "end": "864019"
  }
]