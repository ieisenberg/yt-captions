[
  {
    "start": "0",
    "end": "230000"
  },
  {
    "text": "I'd like to take you for a journey of the request",
    "start": "0",
    "end": "5279"
  },
  {
    "text": "and which is this unit of work that the front end sends to the",
    "start": "5279",
    "end": "11400"
  },
  {
    "text": "back end exactly what happened from the moment that this request is sent",
    "start": "11400",
    "end": "18240"
  },
  {
    "text": "to until it reaches the back end user space",
    "start": "18240",
    "end": "25880"
  },
  {
    "text": "process for processing it's often the case that we",
    "start": "25880",
    "end": "33420"
  },
  {
    "text": "focus on I suppose the first step sending the request and the last step",
    "start": "33420",
    "end": "38880"
  },
  {
    "text": "actually processing that request when you get that on request beautiful",
    "start": "38880",
    "end": "45960"
  },
  {
    "text": "event in node.js or python right hey someone just sent the request that's all",
    "start": "45960",
    "end": "51539"
  },
  {
    "text": "what you see in the backing process but there is so much to it and that there",
    "start": "51539",
    "end": "57780"
  },
  {
    "text": "are so many uh things that happen in the in between and",
    "start": "57780",
    "end": "65700"
  },
  {
    "text": "while we'd like sometimes to it's nice to close our eyes and just",
    "start": "65700",
    "end": "73080"
  },
  {
    "text": "wish that this magic happens in the most performant way it doesn't always happen",
    "start": "73080",
    "end": "81119"
  },
  {
    "text": "right just because these things are hidden from us",
    "start": "81119",
    "end": "87979"
  },
  {
    "text": "using you know TLS libraries open SSL and HTTP libraries if you're using HTTP",
    "start": "87979",
    "end": "95100"
  },
  {
    "text": "as a protocol and then the kernel and it's all it's mighty you know",
    "start": "95100",
    "end": "101220"
  },
  {
    "text": "you know capabilities it's it's to be honest it's hiding this things from us",
    "start": "101220",
    "end": "108479"
  },
  {
    "text": "right but just because these things are hidden they do not mean that they don't exist",
    "start": "108479",
    "end": "115439"
  },
  {
    "text": "right there's so much work that is involved in this really understanding in",
    "start": "115439",
    "end": "122880"
  },
  {
    "text": "it is what I I tend to push in this channel right it's like you don't have to",
    "start": "122880",
    "end": "128580"
  },
  {
    "text": "code everything like like build everything yourself",
    "start": "128580",
    "end": "134940"
  },
  {
    "text": "that's not what I'm saying it's just you can use these libraries and but I think",
    "start": "134940",
    "end": "141900"
  },
  {
    "text": "back in engineer specifically full stack you know mandatory uh",
    "start": "141900",
    "end": "150780"
  },
  {
    "text": "we have to understand this thing right we need to understand exactly what happens",
    "start": "150780",
    "end": "156780"
  },
  {
    "text": "at every stage of of the lifetime of a request because",
    "start": "156780",
    "end": "162300"
  },
  {
    "text": "we we tend to take it for granted and then and when things",
    "start": "162300",
    "end": "168420"
  },
  {
    "text": "go wrong we are we feel paralyzed right because because we don't we don't we",
    "start": "168420",
    "end": "173760"
  },
  {
    "text": "don't understand what's happening right when we couldn't scale uh Beyond a",
    "start": "173760",
    "end": "180060"
  },
  {
    "text": "thousand connection per machine we tend to just throw more Hardware at it right",
    "start": "180060",
    "end": "186480"
  },
  {
    "text": "or or just spin up more machines or or go distributed right",
    "start": "186480",
    "end": "192800"
  },
  {
    "text": "prematurely might I say right adding more Hardware without actually",
    "start": "192800",
    "end": "198720"
  },
  {
    "text": "understanding the cause of the bottlenecks here and I talk about that in my my new course my performance I'm",
    "start": "198720",
    "end": "207480"
  },
  {
    "text": "unlocking the backend performance bottlenecks so many things happen until",
    "start": "207480",
    "end": "212640"
  },
  {
    "text": "the request is is ready to be processed and I'm here to kind of go through that",
    "start": "212640",
    "end": "217920"
  },
  {
    "text": "Journey kind of illuminate these steps but before we get we are getting started we need to Define what a requests really",
    "start": "217920",
    "end": "225120"
  },
  {
    "text": "mean that's right so how about we get started welcome to the",
    "start": "225120",
    "end": "230700"
  },
  {
    "start": "230000",
    "end": "614000"
  },
  {
    "text": "back engineering show with your host Jose Nasser and a request is",
    "start": "230700",
    "end": "238260"
  },
  {
    "text": "um is a unit of work that is submitted by",
    "start": "238319",
    "end": "246000"
  },
  {
    "text": "afront end of some sort in in a form of a specific well-defined",
    "start": "246000",
    "end": "253860"
  },
  {
    "text": "protocol and this is often this protocol often",
    "start": "253860",
    "end": "260760"
  },
  {
    "text": "sits on top of either TCP or UDP which is the you know the de facto protocol of",
    "start": "260760",
    "end": "268199"
  },
  {
    "text": "Transport in the internet right you might say why do I why do I need why",
    "start": "268199",
    "end": "274259"
  },
  {
    "text": "do I need that why do I need another protocol to Define requests can't I say",
    "start": "274259",
    "end": "281100"
  },
  {
    "text": "hey my requests are always 10 byte long and if I send them they always start",
    "start": "281100",
    "end": "288180"
  },
  {
    "text": "with this particular binary binary cone and this is their end right",
    "start": "288180",
    "end": "294440"
  },
  {
    "text": "and they are always 10 10 bytes in length well you just defined a protocol",
    "start": "294440",
    "end": "300240"
  },
  {
    "text": "essentially right like you defined your own application protocol that segments",
    "start": "300240",
    "end": "307020"
  },
  {
    "text": "the the the stream of byte because you see always think of the TCP layer at",
    "start": "307020",
    "end": "313919"
  },
  {
    "text": "least no as a as a hose it's a water hose you",
    "start": "313919",
    "end": "319680"
  },
  {
    "text": "know it just looks like someone's pointing a constant stream of water to a",
    "start": "319680",
    "end": "325139"
  },
  {
    "text": "machine and just it's just a stream of bytes right and",
    "start": "325139",
    "end": "331080"
  },
  {
    "text": "that machine just reads Retreats this but it doesn't have any meaning per se but then you define meaning to it in the",
    "start": "331080",
    "end": "339120"
  },
  {
    "text": "in the application by actually reading these streams you're reading reading reading says oh here's a start of",
    "start": "339120",
    "end": "346440"
  },
  {
    "text": "request and you define what that what does that mean right here's oh I see a head of a request like that's the head",
    "start": "346440",
    "end": "352860"
  },
  {
    "text": "it's like okay I'm reading that oh never mind that's just a false alarm just toss it it's like oh actually",
    "start": "352860",
    "end": "360120"
  },
  {
    "text": "this is a request it's a get space slash hdv11 oh looks like I hdb11",
    "start": "360120",
    "end": "366660"
  },
  {
    "text": "request all right let me continue reading oh I see content length header okay continuous is like here it's a",
    "start": "366660",
    "end": "372660"
  },
  {
    "text": "thousand byte length so I need to read right after I finish the headers I need",
    "start": "372660",
    "end": "378060"
  },
  {
    "text": "to read a thousand bytes after the headers that's my body of the request it has to be a post in this case because",
    "start": "378060",
    "end": "384780"
  },
  {
    "text": "gets don't have body but then that is essentially my request",
    "start": "384780",
    "end": "391199"
  },
  {
    "text": "and that is as a unit you probably deserialize that",
    "start": "391199",
    "end": "397500"
  },
  {
    "text": "right into the language of choice that you choose C plus plus C by python Ruby",
    "start": "397500",
    "end": "405919"
  },
  {
    "text": "node.js whatever and that gets you a nice object in the back end",
    "start": "405919",
    "end": "412560"
  },
  {
    "text": "that says hey wreck req and that's your request",
    "start": "412560",
    "end": "418680"
  },
  {
    "text": "but there's so much work that happened there and and and and essentially it's just defining the first that request the",
    "start": "418680",
    "end": "425940"
  },
  {
    "text": "start of the request and the end of the record but guess what the the the back",
    "start": "425940",
    "end": "431880"
  },
  {
    "text": "end is to read the stream of byte and always do this parsing thing that we",
    "start": "431880",
    "end": "437160"
  },
  {
    "text": "talked about to find out the start and the end of a request and chunk those",
    "start": "437160",
    "end": "442500"
  },
  {
    "text": "buys into meaningful unit of work and HTTP 11 as a protocol",
    "start": "442500",
    "end": "448800"
  },
  {
    "text": "is different than hdb2 and and it's different than hdb3 as a protocol",
    "start": "448800",
    "end": "455039"
  },
  {
    "text": "when it comes to the on wire uh representation of a request",
    "start": "455039",
    "end": "462960"
  },
  {
    "text": "completely different hdb one was the simplest most elegant",
    "start": "462960",
    "end": "469860"
  },
  {
    "text": "representation of that if you receive something from http11 protocol that is",
    "start": "469860",
    "end": "476340"
  },
  {
    "text": "the request there is no you know other",
    "start": "476340",
    "end": "482280"
  },
  {
    "text": "stuff to it you know it's it's straight to the point well this to",
    "start": "482280",
    "end": "487860"
  },
  {
    "text": "be two no there are frames there are there are there's an additional",
    "start": "487860",
    "end": "494520"
  },
  {
    "text": "structure that is wrapped around requests there are streams and streams have frames and",
    "start": "494520",
    "end": "502620"
  },
  {
    "text": "there is a data frame and there is a header frame and there is other type of frames there is more work involved in",
    "start": "502620",
    "end": "509039"
  },
  {
    "text": "parsing hdb 2 than HTTP one and that's why hdb2",
    "start": "509039",
    "end": "515099"
  },
  {
    "text": "is more CPU intensive because your back end process believe it or not",
    "start": "515099",
    "end": "521339"
  },
  {
    "text": "is doing stuff that it didn't used to do in",
    "start": "521339",
    "end": "527640"
  },
  {
    "text": "http 11. and then there is also your back end is",
    "start": "527640",
    "end": "533820"
  },
  {
    "text": "referencing an open SSL or a Libra SSL library to do the decryption and",
    "start": "533820",
    "end": "540060"
  },
  {
    "text": "encryption for TLS sessions right that's also an untrivial cost right",
    "start": "540060",
    "end": "546500"
  },
  {
    "text": "before you even start parsing all that stuff you need to",
    "start": "546500",
    "end": "552000"
  },
  {
    "text": "to decrypt these bytes before it even begin to parse right that's that's the",
    "start": "552000",
    "end": "558300"
  },
  {
    "text": "problem that we're faced with that there's so much happening so that's a",
    "start": "558300",
    "end": "564540"
  },
  {
    "text": "request now let's go through these steps and now that we Define what a request is",
    "start": "564540",
    "end": "571140"
  },
  {
    "text": "a request like to summarize and of course has a",
    "start": "571140",
    "end": "576240"
  },
  {
    "text": "start and a beginning and it has a beginning and an end and at this defined by your protocol so",
    "start": "576240",
    "end": "582959"
  },
  {
    "text": "even SSH has a request if you do an uh anything like LS and you hit enter",
    "start": "582959",
    "end": "591120"
  },
  {
    "text": "right and in bash environment as such you are sending a request and you're",
    "start": "591120",
    "end": "597120"
  },
  {
    "text": "waiting for a response from the server right and that that's also has its unique",
    "start": "597120",
    "end": "603660"
  },
  {
    "text": "definition so let's go through these stages these steps go through six stages",
    "start": "603660",
    "end": "609000"
  },
  {
    "text": "a request goes through six Stitch before we even send our request we need a vehicle to send the request on and",
    "start": "609000",
    "end": "616500"
  },
  {
    "start": "614000",
    "end": "1290000"
  },
  {
    "text": "that's called the connection uh it's a it's customary to establish a",
    "start": "616500",
    "end": "623040"
  },
  {
    "text": "connection between a client and a server and it's often a TCP connection so you",
    "start": "623040",
    "end": "628140"
  },
  {
    "text": "do a send snack and then ack right and then you have a connection",
    "start": "628140",
    "end": "634560"
  },
  {
    "text": "that means you you as a front-end and the server the back end have agreed on",
    "start": "634560",
    "end": "641760"
  },
  {
    "text": "certain situations you agree on the window sizes",
    "start": "641760",
    "end": "646860"
  },
  {
    "text": "you agree on the sequences and now you can start labeling your bytes not",
    "start": "646860",
    "end": "652740"
  },
  {
    "text": "request TCP does not know anything about requests just bites to it right",
    "start": "652740",
    "end": "659640"
  },
  {
    "text": "now you use these bytes this stream of byte as a vehicle to stop sending your",
    "start": "659640",
    "end": "666899"
  },
  {
    "text": "request in whatever language you want in however protocol you want but",
    "start": "666899",
    "end": "672959"
  },
  {
    "text": "before we actually build that connection what is really happening here so let's",
    "start": "672959",
    "end": "678300"
  },
  {
    "text": "talk let's let's explore the connection space and how the kernel is involved and",
    "start": "678300",
    "end": "684360"
  },
  {
    "text": "how the backend is involved as well so when you first listen on this part 8080 TCP",
    "start": "684360",
    "end": "693480"
  },
  {
    "text": "and you listen on a specific interface all right specific IP address",
    "start": "693480",
    "end": "700140"
  },
  {
    "text": "when you do that listening the kernel will create",
    "start": "700140",
    "end": "706339"
  },
  {
    "text": "two cues for you just for the listener right so the 8080 listener",
    "start": "706380",
    "end": "712980"
  },
  {
    "text": "it will create a socket object and that socket object",
    "start": "712980",
    "end": "718980"
  },
  {
    "text": "is a file descriptor everything in linux's file is a file that is associated with port 8080 and",
    "start": "718980",
    "end": "726839"
  },
  {
    "text": "that that is the destination IP is this and you can also listen on all interfaces by doing",
    "start": "726839",
    "end": "733940"
  },
  {
    "text": "0.0.0.0 or that's ipv4 all inter all ipv4 interface if you listen to want to",
    "start": "733940",
    "end": "742079"
  },
  {
    "text": "listen to All IPv6 interfaces you do call in Colon double columns and then",
    "start": "742079",
    "end": "747120"
  },
  {
    "text": "that will listen on all IPv6 not always a good idea because now you're",
    "start": "747120",
    "end": "753899"
  },
  {
    "text": "you're attack surface just unnecessarily expanded right just listen on the things",
    "start": "753899",
    "end": "759120"
  },
  {
    "text": "you actually need to listen on that's always a good idea now that file descriptor points to this port and then",
    "start": "759120",
    "end": "765300"
  },
  {
    "text": "it has this IP address right let's give it an IP address one two",
    "start": "765300",
    "end": "770519"
  },
  {
    "text": "three four the kernel also creates two pieces of data structure that is",
    "start": "770519",
    "end": "775680"
  },
  {
    "text": "associated with this socket essentially those there are Pointers no",
    "start": "775680",
    "end": "782399"
  },
  {
    "text": "and this is essentially called the syncue",
    "start": "782399",
    "end": "787680"
  },
  {
    "text": "and the accept queue the accept queue holds the full-fledged",
    "start": "787680",
    "end": "793680"
  },
  {
    "text": "connections right while the syncue holds the sentence that are arrived",
    "start": "793680",
    "end": "800040"
  },
  {
    "text": "to this particular socket and they are held often temporarily until we and this",
    "start": "800040",
    "end": "807240"
  },
  {
    "text": "is all in the kernel the backend is not even involved with any of this stuff right all you do is just basically say listen",
    "start": "807240",
    "end": "814139"
  },
  {
    "text": "and the kernel creates a data structure for you two data structures two cues in this case",
    "start": "814139",
    "end": "819360"
  },
  {
    "text": "so now let's say a client want to connect to this one two three four port 8080 it will send us in",
    "start": "819360",
    "end": "826380"
  },
  {
    "text": "the the that packet will go all the way to the",
    "start": "826380",
    "end": "833519"
  },
  {
    "text": "neck right the network interface controller I'm or card",
    "start": "833519",
    "end": "838980"
  },
  {
    "text": "and that sen will eventually it's just still it's a packet right it's a CTV",
    "start": "838980",
    "end": "846420"
  },
  {
    "text": "background it will move from that neck to the kernel memory they are a process",
    "start": "846420",
    "end": "853740"
  },
  {
    "text": "often called dma which is the direct memory access where the the data is moved directly",
    "start": "853740",
    "end": "859800"
  },
  {
    "text": "from that to the kernel CPU is not often involved in that area the kernel",
    "start": "859800",
    "end": "866579"
  },
  {
    "text": "directly reads data from the network memory a little card memory or",
    "start": "866579",
    "end": "872880"
  },
  {
    "text": "you can actually flip it that the network card actually writes to the kernel directly so now the kernel finds",
    "start": "872880",
    "end": "880380"
  },
  {
    "text": "out that oh we got a sin right what is it addressed to is it addressed to one two three four port 88 guess what it",
    "start": "880380",
    "end": "887519"
  },
  {
    "text": "will do a lookup so actually I have a queue for that that particular",
    "start": "887519",
    "end": "893160"
  },
  {
    "text": "uh socket if it doesn't have it will drop it it",
    "start": "893160",
    "end": "898860"
  },
  {
    "text": "will drop the packet and well-behaved kernels will actually reply back with an icmp message saying",
    "start": "898860",
    "end": "906800"
  },
  {
    "text": "destination unreachable port and reachable or whatever",
    "start": "906800",
    "end": "913380"
  },
  {
    "text": "but if the packet does exist then it will it will put that sin into that",
    "start": "913380",
    "end": "921540"
  },
  {
    "text": "sin Q for that back end again this is all on the Kernel",
    "start": "921540",
    "end": "926639"
  },
  {
    "text": "and the kernel immediately applies back to the client with a synec to complete the connection and now it continues to",
    "start": "926639",
    "end": "934139"
  },
  {
    "text": "wait says sorry I sent that as an AG now once the client acts the snack",
    "start": "934139",
    "end": "940980"
  },
  {
    "text": "right and we give back an ack that is when I have a full-fledged connection",
    "start": "940980",
    "end": "946079"
  },
  {
    "text": "that's the three-way handshake right in the TCP now I can move",
    "start": "946079",
    "end": "952339"
  },
  {
    "text": "that full-fledged connection to the accept queue which is another cue",
    "start": "952339",
    "end": "958380"
  },
  {
    "text": "also in the kernel and we put it there and now the",
    "start": "958380",
    "end": "963839"
  },
  {
    "text": "connection lives there is it still ready to be consumed not yet it's now us the",
    "start": "963839",
    "end": "970800"
  },
  {
    "text": "backend application responsible for",
    "start": "970800",
    "end": "976100"
  },
  {
    "text": "accepting the connection we have to accept the connection and that's a literally a system call",
    "start": "976100",
    "end": "982820"
  },
  {
    "text": "system call s except",
    "start": "982820",
    "end": "988079"
  },
  {
    "text": "you call accept on the socket file descriptor and says hey accept",
    "start": "988079",
    "end": "995300"
  },
  {
    "text": "today whatever there is okay if there is a connection I won't accept it when you",
    "start": "995540",
    "end": "1001399"
  },
  {
    "text": "call accept if there is a connection in the accept queue the kernel will pop it",
    "start": "1001399",
    "end": "1009920"
  },
  {
    "text": "will lock a structure pop it and then return a file description a new file",
    "start": "1009920",
    "end": "1017000"
  },
  {
    "text": "descriptor representing that connection to the backend application now the",
    "start": "1017000",
    "end": "1023480"
  },
  {
    "text": "backend has a pointer if you wish to the connection",
    "start": "1023480",
    "end": "1028760"
  },
  {
    "text": "now the back end can talk directly to the client via this file descriptor we",
    "start": "1028760",
    "end": "1035298"
  },
  {
    "text": "almost like established this this well connection right there's all this is now",
    "start": "1035299",
    "end": "1042199"
  },
  {
    "text": "a line connecting the client all the way to the back nice we have a connection",
    "start": "1042199",
    "end": "1047600"
  },
  {
    "text": "how large is this accept queue I can go into details right you can actually specify how large this accept queue can",
    "start": "1047600",
    "end": "1055039"
  },
  {
    "text": "get because guess what if the back end doesn't accept connections then the connections will remain in the accept",
    "start": "1055039",
    "end": "1062419"
  },
  {
    "text": "queue but for how long right well until the accept queue is full well",
    "start": "1062419",
    "end": "1068900"
  },
  {
    "text": "how what does what is the size of the accept queue well you determine it as the backing application when you listen",
    "start": "1068900",
    "end": "1074660"
  },
  {
    "text": "you actually specify a parameter called backlog and the backlog",
    "start": "1074660",
    "end": "1080299"
  },
  {
    "text": "can specify how many connections can live there unacceptable",
    "start": "1080299",
    "end": "1086440"
  },
  {
    "text": "before new uh sin",
    "start": "1086440",
    "end": "1092419"
  },
  {
    "text": "will start to be timed out right because hey my accept queue is full I can't",
    "start": "1092419",
    "end": "1098240"
  },
  {
    "text": "accept new connections I cannot complete not accept I cannot as a kernel I cannot",
    "start": "1098240",
    "end": "1103280"
  },
  {
    "text": "complete new connections nice",
    "start": "1103280",
    "end": "1109760"
  },
  {
    "text": "all right First Step accept so there is",
    "start": "1109760",
    "end": "1115760"
  },
  {
    "text": "just that step right",
    "start": "1115760",
    "end": "1120799"
  },
  {
    "text": "there there is so much work right that you as the back end engineer",
    "start": "1120799",
    "end": "1128480"
  },
  {
    "text": "need to understand because your challenge here is",
    "start": "1128480",
    "end": "1134120"
  },
  {
    "text": "to support a lot of connections first you have to learn how to",
    "start": "1134120",
    "end": "1139700"
  },
  {
    "text": "accept connections as fast as possible because if the backlog except Q size is",
    "start": "1139700",
    "end": "1147980"
  },
  {
    "text": "128. then if you if you received a thousand",
    "start": "1147980",
    "end": "1153799"
  },
  {
    "text": "connections that backlog is going to be filled and if you have a single thread",
    "start": "1153799",
    "end": "1159520"
  },
  {
    "text": "accepting connection dedicated for accept connection it cannot possibly",
    "start": "1159520",
    "end": "1164660"
  },
  {
    "text": "you will reach a point where that accept queue will be so small",
    "start": "1164660",
    "end": "1170360"
  },
  {
    "text": "and you will increase it and then but then the problem is you still have a lot",
    "start": "1170360",
    "end": "1175640"
  },
  {
    "text": "of backlog connections to be accepted and you're now you're forced to spin up multiple",
    "start": "1175640",
    "end": "1183140"
  },
  {
    "text": "threads to accept I talked about all of that in my new course as well okay there's there is tricks and challenges",
    "start": "1183140",
    "end": "1190520"
  },
  {
    "text": "and and and uh you can you can literally",
    "start": "1190520",
    "end": "1196460"
  },
  {
    "text": "have your back end spin up two threads or two processes",
    "start": "1196460",
    "end": "1202160"
  },
  {
    "text": "even both listen on the same port you might say no that's not right you're",
    "start": "1202160",
    "end": "1208100"
  },
  {
    "text": "gonna get this error and there's a news nope not a few uh flagged listener as a",
    "start": "1208100",
    "end": "1215539"
  },
  {
    "text": "with a flat codes socket option reuse board right and if there is like a specific",
    "start": "1215539",
    "end": "1222260"
  },
  {
    "text": "handshake between you two as processes you can theoretically have 16 threads listening on the same port",
    "start": "1222260",
    "end": "1228860"
  },
  {
    "text": "so if you do that then you get 16 except queues and 16 cine queues do you get 16",
    "start": "1228860",
    "end": "1235880"
  },
  {
    "text": "next since cues I don't know you're probably gonna get Once in Q and 16 accept cues right and now once once you",
    "start": "1235880",
    "end": "1244400"
  },
  {
    "text": "receive connections you receive connections the kernel load balance those connections to the 16 queues and",
    "start": "1244400",
    "end": "1251539"
  },
  {
    "text": "the threads can each read from their own except from their own except queue",
    "start": "1251539",
    "end": "1256940"
  },
  {
    "text": "essentially right as I suppose as multiple threads fighting to read from the single except queue",
    "start": "1256940",
    "end": "1264020"
  },
  {
    "text": "because you're gonna get limited by the accepting mutex right it's basic you know sum of four ideas",
    "start": "1264020",
    "end": "1270799"
  },
  {
    "text": "you have to lock stuff otherwise you get race condition that's bad",
    "start": "1270799",
    "end": "1276380"
  },
  {
    "text": "all right so we talked so much about the accept but eventually we have there's so much you can do here with the exception",
    "start": "1276380",
    "end": "1283820"
  },
  {
    "text": "to accept a connection step number two our work does not even begin we just",
    "start": "1283820",
    "end": "1288860"
  },
  {
    "text": "have a connection now right the step number two is actually",
    "start": "1288860",
    "end": "1294740"
  },
  {
    "start": "1290000",
    "end": "1770000"
  },
  {
    "text": "you gotta read buddy as a backend application you now you have a connection the client's gonna send you",
    "start": "1294740",
    "end": "1301159"
  },
  {
    "text": "stuff who's gonna read well it's you the backend application is",
    "start": "1301159",
    "end": "1307340"
  },
  {
    "text": "gonna read or receive RCA RCV I suppose but what happened here let's",
    "start": "1307340",
    "end": "1314419"
  },
  {
    "text": "what really really happened and what are we reading you're reading",
    "start": "1314419",
    "end": "1321140"
  },
  {
    "text": "and let's say let's say it's Port 844 443 so it's encrypted as let's spice",
    "start": "1321140",
    "end": "1327440"
  },
  {
    "text": "things up a little bit let's add encryption to the next frame so the client will send requests right",
    "start": "1327440",
    "end": "1335480"
  },
  {
    "text": "they are one after the other right whether they are in streams or",
    "start": "1335480",
    "end": "1341480"
  },
  {
    "text": "right or other format they'll be sent and those will be encrypted with DLS so",
    "start": "1341480",
    "end": "1348260"
  },
  {
    "text": "the at the end of the day once you accept a connection I forgot to",
    "start": "1348260",
    "end": "1354919"
  },
  {
    "text": "mention that you get additional two queues per connection",
    "start": "1354919",
    "end": "1363620"
  },
  {
    "text": "one is called the X the receive queue and one one is the send queue okay for",
    "start": "1363620",
    "end": "1372440"
  },
  {
    "text": "each connection that you create you're gonna get a receiver queue where the bytes will arrive from the client and",
    "start": "1372440",
    "end": "1378679"
  },
  {
    "text": "you're gonna get a Cindy queue where your voice is a backend application will be moved to the send queue before it's",
    "start": "1378679",
    "end": "1386900"
  },
  {
    "text": "transmitted across the network right and guess what let's talk about just the",
    "start": "1386900",
    "end": "1392240"
  },
  {
    "text": "receiver queue so if a client sends an HTTP request right and it's encrypted",
    "start": "1392240",
    "end": "1397880"
  },
  {
    "text": "those are bytes right the current the neck will receive those bytes as we talked about and the the",
    "start": "1397880",
    "end": "1406460"
  },
  {
    "text": "kernel will identify that oh these bytes are going to this uh to this IP to this port and",
    "start": "1406460",
    "end": "1414260"
  },
  {
    "text": "and to this part from this particular client from this particular Port so and",
    "start": "1414260",
    "end": "1419960"
  },
  {
    "text": "I and I guess what these four pairs essentially mapped to a unique connection and here it is",
    "start": "1419960",
    "end": "1426740"
  },
  {
    "text": "it is this receiver queue it's all pointers at the end of the day right it's like oh so let me just move this",
    "start": "1426740",
    "end": "1433600"
  },
  {
    "text": "SKB I think that's called socket buffers right so that I move the socket buffer to this",
    "start": "1433600",
    "end": "1441500"
  },
  {
    "text": "receiver queue to this connection buffer",
    "start": "1441500",
    "end": "1447320"
  },
  {
    "text": "Q now you have a connection",
    "start": "1447320",
    "end": "1453020"
  },
  {
    "text": "that you as the backend application got the file descriptor for and it has a",
    "start": "1453020",
    "end": "1459500"
  },
  {
    "text": "receive queue with data but you don't see that yet that receiver queue keeps receiving data and I'm just and",
    "start": "1459500",
    "end": "1466400"
  },
  {
    "text": "accumulating the receive queue and those packets are acknowledged by the kernel all the TCP",
    "start": "1466400",
    "end": "1472880"
  },
  {
    "text": "stuff is done by the kernel that was work done long time ago to to",
    "start": "1472880",
    "end": "1478400"
  },
  {
    "text": "actually move the TCP layer down to the kernel as opposed",
    "start": "1478400",
    "end": "1484460"
  },
  {
    "text": "the kernel space Sorry the user space quick to today's is being done at the",
    "start": "1484460",
    "end": "1491299"
  },
  {
    "text": "user space right now like as far as the kernel is concerned it's all UDP it",
    "start": "1491299",
    "end": "1498559"
  },
  {
    "text": "doesn't know it's a quick or not maybe it does but it doesn't do anything about it in the future maybe but today",
    "start": "1498559",
    "end": "1506360"
  },
  {
    "text": "we're acknowledging all these you know window sizing and controlling the window",
    "start": "1506360",
    "end": "1511400"
  },
  {
    "text": "sizes and shrinking and increasing and then the congestion control algorithms",
    "start": "1511400",
    "end": "1516559"
  },
  {
    "text": "and and the slow start all of this was implemented in the kernel and with the users you can specify change parameters",
    "start": "1516559",
    "end": "1523880"
  },
  {
    "text": "of course but yeah that's that's that's what you have you have now the receive queue with a bunch of bytes right",
    "start": "1523880",
    "end": "1531860"
  },
  {
    "text": "now as a backend application you call read again you might say Hussein I never",
    "start": "1531860",
    "end": "1537500"
  },
  {
    "text": "in my life did accept all called read or anything too well",
    "start": "1537500",
    "end": "1543620"
  },
  {
    "text": "the framework or the library the language often does that for you so yeah",
    "start": "1543620",
    "end": "1549740"
  },
  {
    "text": "your backend is reading points but guess what those bytes are raw",
    "start": "1549740",
    "end": "1555220"
  },
  {
    "text": "awning are raw encrypted bytes",
    "start": "1555220",
    "end": "1560299"
  },
  {
    "text": "and that you read that back in reads and you you have a buffer and you read",
    "start": "1560299",
    "end": "1565580"
  },
  {
    "text": "them and the back end associate specific memory either in the",
    "start": "1565580",
    "end": "1573380"
  },
  {
    "text": "stack or the Heap depends how you do it like if you declare a variable in your",
    "start": "1573380",
    "end": "1578600"
  },
  {
    "text": "function that is a stack right but if you did a man lock then that's a heap so this data is copied",
    "start": "1578600",
    "end": "1586520"
  },
  {
    "text": "from the kernel memory receive queue down to the user space",
    "start": "1586520",
    "end": "1592340"
  },
  {
    "text": "memory and that's why IOU rank the new interface and Linux tries to eliminate",
    "start": "1592340",
    "end": "1598100"
  },
  {
    "text": "this unnecessary copying back and forth right between kernel space and memory user",
    "start": "1598100",
    "end": "1605059"
  },
  {
    "text": "space but yeah you get you get you now you copied encrypted data guess what what do",
    "start": "1605059",
    "end": "1610700"
  },
  {
    "text": "you do with this they are absolutely useless to you they don't represent a request up until the step we don't know",
    "start": "1610700",
    "end": "1617179"
  },
  {
    "text": "what a request is yet so we're step number one we accept the connections remember to we're reading",
    "start": "1617179",
    "end": "1622700"
  },
  {
    "text": "bytes we have absolutely no idea what a request is we're just blind as a backend",
    "start": "1622700",
    "end": "1628279"
  },
  {
    "text": "application so now you're reading bytes and those bytes will be copied as we said this encrypted",
    "start": "1628279",
    "end": "1635900"
  },
  {
    "text": "byte will be copied to the memory of the user space to your backend application essentially",
    "start": "1635900",
    "end": "1641779"
  },
  {
    "text": "and they live there another challenge is is reading as well like how fast you",
    "start": "1641779",
    "end": "1647299"
  },
  {
    "text": "read because that receive buffer also have a size a limited size so you as a backend",
    "start": "1647299",
    "end": "1654260"
  },
  {
    "text": "application must read fast as fast as the client can send",
    "start": "1654260",
    "end": "1661159"
  },
  {
    "text": "and it's the other way around if you send data the client should be able to handle what you sent",
    "start": "1661159",
    "end": "1668900"
  },
  {
    "text": "I'm it's a it's a delicate you know tug of war",
    "start": "1668900",
    "end": "1674900"
  },
  {
    "text": "kind of a situation here right so that's another thing you can",
    "start": "1674900",
    "end": "1680200"
  },
  {
    "text": "investigate and invest in and understand the architecture of multiple readers",
    "start": "1680200",
    "end": "1686960"
  },
  {
    "text": "all right so you can have multiple acceptors one acceptor up to you like",
    "start": "1686960",
    "end": "1692600"
  },
  {
    "text": "node.js is a one acceptor one reader right model because it's a single thread and everything happens in that thread",
    "start": "1692600",
    "end": "1701480"
  },
  {
    "text": "literally and unless you you do asynchronous work then multiple threads",
    "start": "1701480",
    "end": "1707720"
  },
  {
    "text": "will be used node.js but yes that's why we're like every language you pick every framework you",
    "start": "1707720",
    "end": "1714559"
  },
  {
    "text": "pick it's it's gonna do the thing differently but the fundamentals do not change they you",
    "start": "1714559",
    "end": "1722240"
  },
  {
    "text": "have to do these things right if there's a fire it must be smoke and now that's the",
    "start": "1722240",
    "end": "1728779"
  },
  {
    "text": "second step read if things were not encrypted right we're probably gonna be almost",
    "start": "1728779",
    "end": "1735020"
  },
  {
    "text": "done here I'm gonna read and then we're gonna start with the process of parsing right but we can't parse anything yet in",
    "start": "1735020",
    "end": "1741799"
  },
  {
    "text": "the back the protocol cannot kick in yet our protocol the HTTP or the SSH or",
    "start": "1741799",
    "end": "1750020"
  },
  {
    "text": "whatever protocol you built or websockets Nothing Game can kick in yet",
    "start": "1750020",
    "end": "1756140"
  },
  {
    "text": "and step two we're just reading corrupting but if it's unencrypted yeah we can start the process of parsing the",
    "start": "1756140",
    "end": "1763220"
  },
  {
    "text": "protocol and finding our request but not yet right so now move us to step number three",
    "start": "1763220",
    "end": "1770240"
  },
  {
    "start": "1770000",
    "end": "2040000"
  },
  {
    "text": "which is decrypting now now that I have in my memory a bunch of",
    "start": "1770240",
    "end": "1776020"
  },
  {
    "text": "a bag of encrypted buys that I know they are encrypted because I did a session I",
    "start": "1776020",
    "end": "1782000"
  },
  {
    "text": "did a ctls session now I find my key the you know the",
    "start": "1782000",
    "end": "1788360"
  },
  {
    "text": "symmetric key that I use to decrypt and I exchange with the client that's just the whole thing you know did I put in a",
    "start": "1788360",
    "end": "1795980"
  },
  {
    "text": "memory probably sit there in your user space memory let's just pull it up and",
    "start": "1795980",
    "end": "1801679"
  },
  {
    "text": "decrypt it you know with it uh if you're sophisticated enough uh you probably",
    "start": "1801679",
    "end": "1809840"
  },
  {
    "text": "like the private key and the certificates and all the stuff is going to be in a TPM somewhere in your heart",
    "start": "1809840",
    "end": "1814940"
  },
  {
    "text": "you know on your motherboard you're gonna ask your TPM to do the decryption",
    "start": "1814940",
    "end": "1821720"
  },
  {
    "text": "right or at least this session establishment for you because you don't use the private key to the craft",
    "start": "1821720",
    "end": "1828140"
  },
  {
    "text": "you know traffic you know you just use it to sign stuff more likely right the",
    "start": "1828140",
    "end": "1834500"
  },
  {
    "text": "session key is probably living somewhere in your user space memory which is I suppose you",
    "start": "1834500",
    "end": "1842120"
  },
  {
    "text": "can say it's dangerous but that's what we do today right okay",
    "start": "1842120",
    "end": "1847960"
  },
  {
    "text": "if another hard plead happened and it's it's unlikely because these session",
    "start": "1848299",
    "end": "1854000"
  },
  {
    "text": "keys are ephemeral once you're done with the connection you drop the session key so it's not like it's going to live",
    "start": "1854000",
    "end": "1860299"
  },
  {
    "text": "forever like the private key so you're not gonna get a heart bleed situation",
    "start": "1860299",
    "end": "1866120"
  },
  {
    "text": "here but yeah you can there's another thing the security Forks are taken care of",
    "start": "1866120",
    "end": "1872179"
  },
  {
    "text": "thinking about all these problems so step number three to the klept you take",
    "start": "1872179",
    "end": "1877220"
  },
  {
    "text": "the session key and then you decrypt these parts and guess what you have to copy them in another",
    "start": "1877220",
    "end": "1883100"
  },
  {
    "text": "location right now you equipped by double the memory essentially can you decrypt in place I don't know",
    "start": "1883100",
    "end": "1890299"
  },
  {
    "text": "maybe but now you're occupying memory more memory you need more memory to aquify",
    "start": "1890299",
    "end": "1897559"
  },
  {
    "text": "from decorate from this and this and you often you don't do this yourself as well you use a library and and even you might",
    "start": "1897559",
    "end": "1906020"
  },
  {
    "text": "even don't know any of that stuff because you use a HTTP Library or even node right or python",
    "start": "1906020",
    "end": "1913960"
  },
  {
    "text": "that uses https protocol that uses",
    "start": "1913960",
    "end": "1919279"
  },
  {
    "text": "either whatever is installed in your drive is it openssl or Libra SSL or",
    "start": "1919279",
    "end": "1924440"
  },
  {
    "text": "whatever and that library is probably linked with your right in a specific",
    "start": "1924440",
    "end": "1929840"
  },
  {
    "text": "virtual page in your process and then you use that to do the decryption so the",
    "start": "1929840",
    "end": "1935360"
  },
  {
    "text": "code is is already on your machine I just use that to the clip so so that code gets kicked",
    "start": "1935360",
    "end": "1943159"
  },
  {
    "text": "in but it's it's the cost that it's your process that is done does the execution",
    "start": "1943159",
    "end": "1949399"
  },
  {
    "text": "because you it's it's that Library open since it is map this is linked to your",
    "start": "1949399",
    "end": "1954799"
  },
  {
    "text": "process right so it's as if you are doing that back and you might come back",
    "start": "1954799",
    "end": "1961700"
  },
  {
    "text": "and say hey why is my back-end process taking like 98 CPU I don't do anything",
    "start": "1961700",
    "end": "1967520"
  },
  {
    "text": "I'm not doing anything well you are doing a lot of things it's just you don't know about it right",
    "start": "1967520",
    "end": "1973399"
  },
  {
    "text": "so all this crypto magic you know AES 128 256",
    "start": "1973399",
    "end": "1980500"
  },
  {
    "text": "signature signing you know digest all of this happens and step number three the",
    "start": "1980500",
    "end": "1987200"
  },
  {
    "text": "collecting now that we we can toss the encrypted stuff located now we have a nice memory of",
    "start": "1987200",
    "end": "1994580"
  },
  {
    "text": "unencrypted stuff step number three we decrypted",
    "start": "1994580",
    "end": "2000279"
  },
  {
    "text": "we took another hit right now this is the first time we actually take a CPU",
    "start": "2000279",
    "end": "2006039"
  },
  {
    "text": "hit per se step number two wasn't really we didn't really need anything CPU we just literally did a copy right it's an",
    "start": "2006039",
    "end": "2012760"
  },
  {
    "text": "IO and we don't do any processing for saying step two",
    "start": "2012760",
    "end": "2018220"
  },
  {
    "text": "maybe in step one even step one is just an exception like except we're accepting",
    "start": "2018220",
    "end": "2023260"
  },
  {
    "text": "stuff so that's the first step we're actually using is CPU so your process",
    "start": "2023260",
    "end": "2028539"
  },
  {
    "text": "becomes slightly CPU bound if it's uh TLS or if there's tssl is involved but",
    "start": "2028539",
    "end": "2034779"
  },
  {
    "text": "yeah watch out for that step number four now that we have a bunch of unencrypted bytes We Begin parsing",
    "start": "2034779",
    "end": "2042460"
  },
  {
    "start": "2040000",
    "end": "2436000"
  },
  {
    "text": "we know our backend is an HTTP protocol or let's say it's http11 or hdb2 or CB",
    "start": "2042460",
    "end": "2049358"
  },
  {
    "text": "message or SSH or postgres or MySQL protocol now we begin actually parsing",
    "start": "2049359",
    "end": "2055720"
  },
  {
    "text": "by the way this this this steps is identical for any any back-end talk",
    "start": "2055720",
    "end": "2061599"
  },
  {
    "text": "about database web server uh a live streaming web server a server",
    "start": "2061599",
    "end": "2069580"
  },
  {
    "text": "you know any back-end must do these steps right so parsing is another step",
    "start": "2069580",
    "end": "2077919"
  },
  {
    "text": "here which is based on my protocol I'm gonna parse now this is all right here's where my request starts oh there you go",
    "start": "2077919",
    "end": "2084460"
  },
  {
    "text": "there's a request I have I have this much amount of bite if we're lucky",
    "start": "2084460",
    "end": "2091839"
  },
  {
    "text": "and whatever I have in my memory so far I begin parsing and my",
    "start": "2091839",
    "end": "2098740"
  },
  {
    "text": "mind I might find a request in this hunk of bite right or might be even lucky I'll find two",
    "start": "2098740",
    "end": "2106240"
  },
  {
    "text": "requests oh there's one because then there's another Quest or even luckier I have three requests",
    "start": "2106240",
    "end": "2112720"
  },
  {
    "text": "Isn't that cool three request in one shot",
    "start": "2112720",
    "end": "2117820"
  },
  {
    "text": "well which one gets processed first",
    "start": "2117820",
    "end": "2124560"
  },
  {
    "text": "that's a decision to the back end let's not get there",
    "start": "2125260",
    "end": "2131140"
  },
  {
    "text": "again that's that's why I am fascinated by back energy because there is no one",
    "start": "2131140",
    "end": "2137200"
  },
  {
    "text": "way to do any of this stuff you can do it anywhere anywhere you want there is",
    "start": "2137200",
    "end": "2142960"
  },
  {
    "text": "always pros and cons to anything but yeah or the bad side is you might be an unlucky",
    "start": "2142960",
    "end": "2150940"
  },
  {
    "text": "bastard and the memory that you just read",
    "start": "2150940",
    "end": "2159880"
  },
  {
    "text": "doesn't have a half a request",
    "start": "2159880",
    "end": "2164460"
  },
  {
    "text": "it happens right because that of course is still large so you happen to accept read but I only",
    "start": "2166480",
    "end": "2174339"
  },
  {
    "text": "read half of words of data you decrypted that half of fourth but that request is",
    "start": "2174339",
    "end": "2180460"
  },
  {
    "text": "in another half or maybe Estelle is in the receive queue that didn't read or maybe that client sent it and it didn't",
    "start": "2180460",
    "end": "2188740"
  },
  {
    "text": "arrive so now you're in this parsing hell so oh man this is now",
    "start": "2188740",
    "end": "2195579"
  },
  {
    "text": "uncomplete request what do you do with that well you put it on a side because you",
    "start": "2195579",
    "end": "2200680"
  },
  {
    "text": "have other stuff to take care of well what what do you do really do you wait for more dates to arrive and hopefully",
    "start": "2200680",
    "end": "2206859"
  },
  {
    "text": "the the request will be completed you have to because it's an uncomplete",
    "start": "2206859",
    "end": "2212740"
  },
  {
    "text": "request you cannot fulfill an uncompleted request well",
    "start": "2212740",
    "end": "2218500"
  },
  {
    "text": "unless you're uploading some file and and you got enough information from the",
    "start": "2218500",
    "end": "2224380"
  },
  {
    "text": "first request that you know that the remaining is actually the data so you",
    "start": "2224380",
    "end": "2229599"
  },
  {
    "text": "can do tricks with that but most of the case if you do that then you",
    "start": "2229599",
    "end": "2235359"
  },
  {
    "text": "the backing will be waiting for more data to be read and decrypted before it can actually",
    "start": "2235359",
    "end": "2240820"
  },
  {
    "text": "um parse this request right and you know what I mean by Porsche right",
    "start": "2240820",
    "end": "2246880"
  },
  {
    "text": "just find out the start and the end all right and and sometimes not any data that available",
    "start": "2246880",
    "end": "2255160"
  },
  {
    "text": "there is actually a request it could be just system",
    "start": "2255160",
    "end": "2260339"
  },
  {
    "text": "frames from an http 2. protocol like settings or window update right",
    "start": "2260339",
    "end": "2268420"
  },
  {
    "text": "that that's where it's like okay I can't do anything that's not a request",
    "start": "2268420",
    "end": "2274359"
  },
  {
    "text": "that's not an actionable back in request",
    "start": "2274359",
    "end": "2278578"
  },
  {
    "text": "and here is where the second hit to your CPUs is performed",
    "start": "2281680",
    "end": "2287440"
  },
  {
    "text": "right on parsing because now it's all CPU right you're",
    "start": "2287440",
    "end": "2292540"
  },
  {
    "text": "just taking the memory and then you're reading reading reading looking for campaigning certain things",
    "start": "2292540",
    "end": "2298140"
  },
  {
    "text": "binding specific headers finding specific bodies finding",
    "start": "2298140",
    "end": "2304300"
  },
  {
    "text": "specific patterns for your request so it's all CPU and and hdb11 is is gonna",
    "start": "2304300",
    "end": "2311980"
  },
  {
    "text": "give you the least amount of headache here because it's it's a very vanilla straight protocol it doesn't have any",
    "start": "2311980",
    "end": "2320200"
  },
  {
    "text": "you know magic to it but hdb2",
    "start": "2320200",
    "end": "2325780"
  },
  {
    "text": "well there's a lot of other headers and binary frames websockets same thing has its own headers that you need to unpack",
    "start": "2325780",
    "end": "2333040"
  },
  {
    "text": "and understand so you're you're using this Library",
    "start": "2333040",
    "end": "2338560"
  },
  {
    "text": "that you hope someone wrote in a very efficient manner that parses this you",
    "start": "2338560",
    "end": "2343599"
  },
  {
    "text": "know stuff right so you take another hit of the CPU and",
    "start": "2343599",
    "end": "2348760"
  },
  {
    "text": "and up until today 2023 it's it's known that hdb 2 consumes more CPU than http11",
    "start": "2348760",
    "end": "2355720"
  },
  {
    "text": "and just because the it's logic HTTP 2 does more right well it does give you",
    "start": "2355720",
    "end": "2361839"
  },
  {
    "text": "benefits that you can Multiplex request on the same",
    "start": "2361839",
    "end": "2367960"
  },
  {
    "text": "connection but it does that as a cost of extra stuff you know now if you take advantage",
    "start": "2367960",
    "end": "2376720"
  },
  {
    "text": "of that then the the cost is apportioned but if",
    "start": "2376720",
    "end": "2382780"
  },
  {
    "text": "you if you if your front end sends one request and waits for another",
    "start": "2382780",
    "end": "2388480"
  },
  {
    "text": "there is no point of using HTTP 2. I just added an additional cost for nothing right",
    "start": "2388480",
    "end": "2394420"
  },
  {
    "text": "so I always like you know measured that the need for HTTP one versus two based",
    "start": "2394420",
    "end": "2401020"
  },
  {
    "text": "on that right because I I like to treat my CPU with",
    "start": "2401020",
    "end": "2406180"
  },
  {
    "text": "respect you know just because we have something in abundance doesn't mean we",
    "start": "2406180",
    "end": "2412300"
  },
  {
    "text": "have to waste okay like it's like going to a restaurant",
    "start": "2412300",
    "end": "2417880"
  },
  {
    "text": "ordering everything and only eating one meal and throwing the rest well we have enough food let's just",
    "start": "2417880",
    "end": "2424240"
  },
  {
    "text": "order right",
    "start": "2424240",
    "end": "2430800"
  },
  {
    "text": "respect your CPU decoding the fifth step uh this spine",
    "start": "2430800",
    "end": "2437200"
  },
  {
    "start": "2436000",
    "end": "2594000"
  },
  {
    "text": "this step might actually happen before parsing that depends on their protocol",
    "start": "2437200",
    "end": "2443560"
  },
  {
    "text": "but decoding essentially is like referring to what am I reading right the",
    "start": "2443560",
    "end": "2449320"
  },
  {
    "text": "actual request itself it's often happening after so that you you need whatever you got as a request is this",
    "start": "2449320",
    "end": "2456460"
  },
  {
    "text": "text is this binary what is it really right and if it Stacks is it as key is it utf-8 because the byte might look the",
    "start": "2456460",
    "end": "2466540"
  },
  {
    "text": "same but if it's ASCII it might look completely different than if it's you",
    "start": "2466540",
    "end": "2472420"
  },
  {
    "text": "know utf-8 right you might send an emoji in ASCII doesn't mean anything",
    "start": "2472420",
    "end": "2478300"
  },
  {
    "text": "but right it will show you maybe two letters right but in in",
    "start": "2478300",
    "end": "2484540"
  },
  {
    "text": "right in in utf-8 it means a dog right",
    "start": "2484540",
    "end": "2492099"
  },
  {
    "text": "that that's why a decoding is very critical right that's just one space or",
    "start": "2492099",
    "end": "2497500"
  },
  {
    "text": "decoding and utff can take up to four bytes for certain characters like I think kanji",
    "start": "2497500",
    "end": "2503500"
  },
  {
    "text": "can can take up to fire for white like for specific countries in Japanese",
    "start": "2503500",
    "end": "2510400"
  },
  {
    "text": "uh so yeah drawing the stick you decoding that's based on the language of the bank",
    "start": "2510400",
    "end": "2516400"
  },
  {
    "text": "and the language here I mean the human language not the programming language per se and also",
    "start": "2516400",
    "end": "2523780"
  },
  {
    "text": "while not common there's sometimes you compress a request right and you need to decode",
    "start": "2523780",
    "end": "2531880"
  },
  {
    "text": "this compressed request such that uh uh if you compress the request with Giza",
    "start": "2531880",
    "end": "2539740"
  },
  {
    "text": "for example the backend can decompress it and that is another head for CPU so",
    "start": "2539740",
    "end": "2545920"
  },
  {
    "text": "now we have three steps so we're hitting the CPU right so we have the TLs",
    "start": "2545920",
    "end": "2552160"
  },
  {
    "text": "we have parsing and decoding as we'll take CPU so we're talking CBO and all these",
    "start": "2552160",
    "end": "2559540"
  },
  {
    "text": "things I might say these are just tiny stuff who cares why even measure it",
    "start": "2559540",
    "end": "2564940"
  },
  {
    "text": "well knowing about it actually doesn't hurt because",
    "start": "2564940",
    "end": "2571000"
  },
  {
    "text": "if they happen on abundance and you did move your application to an iot device",
    "start": "2571000",
    "end": "2577720"
  },
  {
    "text": "and all of a sudden you say oh why is this application taking 100 CPU and everything is slow well because you did",
    "start": "2577720",
    "end": "2583780"
  },
  {
    "text": "all of the stuff that you didn't feel in your 128 core whatever CPU right",
    "start": "2583780",
    "end": "2591700"
  },
  {
    "text": "take it for granted final step now that we decoded now we know the start and the",
    "start": "2591700",
    "end": "2598240"
  },
  {
    "start": "2594000",
    "end": "3086000"
  },
  {
    "text": "end of the request now we fire the event if there is such a",
    "start": "2598240",
    "end": "2604359"
  },
  {
    "text": "thing in in the back-end process I said hey a callback happened I just got a",
    "start": "2604359",
    "end": "2611380"
  },
  {
    "text": "request yay",
    "start": "2611380",
    "end": "2614740"
  },
  {
    "text": "I just got a quest do whatever you want with it but did you see all the stuff that",
    "start": "2616599",
    "end": "2622540"
  },
  {
    "text": "happened right now this is what we just see as back in the",
    "start": "2622540",
    "end": "2628839"
  },
  {
    "text": "days it's okay I just received a request now let me process this request right",
    "start": "2628839",
    "end": "2634720"
  },
  {
    "text": "and even this step here as uh sometimes like",
    "start": "2634720",
    "end": "2641920"
  },
  {
    "text": "there is before you process the request I'm I'm glad also like node and express",
    "start": "2641920",
    "end": "2650040"
  },
  {
    "text": "Express uh JS does not do that for you I'm really",
    "start": "2650040",
    "end": "2656440"
  },
  {
    "text": "glad that it's actually explicitly said hey this request contains a Json you",
    "start": "2656440",
    "end": "2661540"
  },
  {
    "text": "parse that so that's a different parsing from the parsing from step four right",
    "start": "2661540",
    "end": "2667480"
  },
  {
    "text": "we get that request but the request has a body and the body is of type Json and",
    "start": "2667480",
    "end": "2673900"
  },
  {
    "text": "it's only bytes right if you want those Json bytes from normal bytes to actually",
    "start": "2673900",
    "end": "2681040"
  },
  {
    "text": "something that you can work with in the application",
    "start": "2681040",
    "end": "2687160"
  },
  {
    "text": "as objects then you deserialize that's a step that I don't mention right so it",
    "start": "2687160",
    "end": "2694420"
  },
  {
    "text": "can happen before processing if you will right you can shove it in with decoding if you will right like I would",
    "start": "2694420",
    "end": "2701319"
  },
  {
    "text": "deserialize this step uh this this Json into Json object",
    "start": "2701319",
    "end": "2707800"
  },
  {
    "text": "such that I can call a DOT whatever in it right I",
    "start": "2707800",
    "end": "2713740"
  },
  {
    "text": "can play with it in JavaScript or in Python you move this binaries into dictionaries right in Python is that",
    "start": "2713740",
    "end": "2720400"
  },
  {
    "text": "what's called dictionaries right python that's what Json is right in Python so you move these bytes into the applicable",
    "start": "2720400",
    "end": "2728460"
  },
  {
    "text": "uh programming language data structure of your choice if you're",
    "start": "2728460",
    "end": "2735220"
  },
  {
    "text": "using node then it's JavaScript it's Json it's native Json of the JavaScript then there will be serial",
    "start": "2735220",
    "end": "2741040"
  },
  {
    "text": "deserialization Happening Here boom move it from a serialized byte down to an",
    "start": "2741040",
    "end": "2747220"
  },
  {
    "text": "object that I can use if it's Java it's going to be a bunch of objects right",
    "start": "2747220",
    "end": "2753838"
  },
  {
    "text": "and boy this is really costly especially it",
    "start": "2753960",
    "end": "2759339"
  },
  {
    "text": "depends on the language there's a lot of overhead when it comes to Jason parsing and deserializing so that's another step",
    "start": "2759339",
    "end": "2765579"
  },
  {
    "text": "and then finally once you get the Json object now you actually can process because now you know what you sent",
    "start": "2765579",
    "end": "2772480"
  },
  {
    "text": "what you are sent and you can process it and what does it mean to process well",
    "start": "2772480",
    "end": "2778660"
  },
  {
    "text": "well you received a request too I don't know get slash",
    "start": "2778660",
    "end": "2784380"
  },
  {
    "text": "books go give me the books right all right let",
    "start": "2784380",
    "end": "2790480"
  },
  {
    "text": "me do it now you turn around and do a select star from books right",
    "start": "2790480",
    "end": "2796780"
  },
  {
    "text": "limit 10. give me the first 10 books",
    "start": "2796780",
    "end": "2801880"
  },
  {
    "text": "and that's another now your backend becomes a client and the database becomes the backend",
    "start": "2801880",
    "end": "2809759"
  },
  {
    "text": "and you go through the exact same steps nothing changes the fundamentals are the fundamentals or",
    "start": "2809859",
    "end": "2817780"
  },
  {
    "text": "the fundamentals and then once you process you now go to the reverse of these steps",
    "start": "2817780",
    "end": "2824980"
  },
  {
    "text": "where you still do the these steps but they are in Reverse",
    "start": "2824980",
    "end": "2831460"
  },
  {
    "text": "right where now you're writing instead of reading you have the connection you're",
    "start": "2831460",
    "end": "2838180"
  },
  {
    "text": "writing to the send queue before you write you have to encrypt right and before you encrypt you have to encode",
    "start": "2838180",
    "end": "2844960"
  },
  {
    "text": "right so encode decrypt the serialize and then encrypt right to the send queue",
    "start": "2844960",
    "end": "2852880"
  },
  {
    "text": "now the kernel will take take care of that Wilson you're encrypted by to the",
    "start": "2852880",
    "end": "2857920"
  },
  {
    "text": "client and the client will do that the reverse and so on",
    "start": "2857920",
    "end": "2863380"
  },
  {
    "text": "right so the processing aspects of things is actually also",
    "start": "2863380",
    "end": "2868960"
  },
  {
    "text": "interesting because all these six steps actually any one of them you can",
    "start": "2868960",
    "end": "2875619"
  },
  {
    "text": "really write I'm not exaggerating you can write a white paper and you can take your",
    "start": "2875619",
    "end": "2882040"
  },
  {
    "text": "Masters or or PhD in each one of these steps right because like take the",
    "start": "2882040",
    "end": "2887619"
  },
  {
    "text": "processing first like how do you process request you you have a fleet of requests",
    "start": "2887619",
    "end": "2892900"
  },
  {
    "text": "arriving to your request and I don't care about distribution don't don't don't don't don't involve the stuff now",
    "start": "2892900",
    "end": "2899619"
  },
  {
    "text": "here robot Simplicity what about learning what happens in a single",
    "start": "2899619",
    "end": "2905079"
  },
  {
    "text": "machine let's not care about what multi-process and multi you know distributed and stuff like that or one",
    "start": "2905079",
    "end": "2911680"
  },
  {
    "text": "machine only one machine it's like how do you my to me you should",
    "start": "2911680",
    "end": "2920200"
  },
  {
    "text": "be as efficient as possible in one machine otherwise if you distribute",
    "start": "2920200",
    "end": "2926560"
  },
  {
    "text": "too soon to me it's a cop-out you know it's just like you well you just said yeah",
    "start": "2926560",
    "end": "2934540"
  },
  {
    "text": "CPU 100 add more machines why is it 100",
    "start": "2934540",
    "end": "2940480"
  },
  {
    "text": "which of these steps are actually consuming more of your memory",
    "start": "2940480",
    "end": "2945700"
  },
  {
    "text": "well I don't care well sure okay just throw more Ramen make the venture",
    "start": "2945700",
    "end": "2951099"
  },
  {
    "text": "capitalist happy and then move on with your life you can do that sure but you can also be an engineer",
    "start": "2951099",
    "end": "2959680"
  },
  {
    "text": "and understand these things and that's what fascinates me you know I just sit down wake up every day and pick",
    "start": "2959680",
    "end": "2967540"
  },
  {
    "text": "one thing that I think I know but I turned out that I don't right and and",
    "start": "2967540",
    "end": "2975280"
  },
  {
    "text": "they're just processing the thick think of just processing request right",
    "start": "2975280",
    "end": "2981420"
  },
  {
    "text": "like you can have our your own architecture to",
    "start": "2981420",
    "end": "2986680"
  },
  {
    "text": "process requests right even if it ends up Distributing to another machine but",
    "start": "2986680",
    "end": "2992920"
  },
  {
    "text": "it's just understanding that we have now a bunch of requests",
    "start": "2992920",
    "end": "2998020"
  },
  {
    "text": "I can spin up a pool of worker processes five six",
    "start": "2998020",
    "end": "3005220"
  },
  {
    "text": "what's this number what does this number depend to well it depends on the workload of the process what is the",
    "start": "3005220",
    "end": "3012599"
  },
  {
    "text": "nature of your request this is definitely out of the scope of this video is it is your",
    "start": "3012599",
    "end": "3019440"
  },
  {
    "text": "is your workload is your request CPU bound or is it I O bound",
    "start": "3019440",
    "end": "3026520"
  },
  {
    "text": "okay is your request is your request traversing",
    "start": "3026520",
    "end": "3032400"
  },
  {
    "text": "uh one billion uh graph looking for something which is CPU intensive thing",
    "start": "3032400",
    "end": "3038880"
  },
  {
    "text": "or is it uh reading from a database or reading from",
    "start": "3038880",
    "end": "3045660"
  },
  {
    "text": "another service or is it both where you are reading the graph well that's IO and",
    "start": "3045660",
    "end": "3051780"
  },
  {
    "text": "then you are traversing the graph right so IO and CPU intensive and and that's",
    "start": "3051780",
    "end": "3057300"
  },
  {
    "text": "how you scale that's how people pay or paid millions of dollars just to",
    "start": "3057300",
    "end": "3062880"
  },
  {
    "text": "understand how to scale things you know how do I size my machines so yeah that's what I'm",
    "start": "3062880",
    "end": "3071460"
  },
  {
    "text": "interested in to be honest is just understanding the bottleneck right understanding the nature of your",
    "start": "3071460",
    "end": "3077220"
  },
  {
    "text": "requests what happens through all of that I hope you enjoyed this episode and I'm gonna see you in",
    "start": "3077220",
    "end": "3083400"
  },
  {
    "text": "the next one you guys stay awesome goodbye",
    "start": "3083400",
    "end": "3087380"
  }
]