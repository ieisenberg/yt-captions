[
  {
    "text": "i want to spend a few minutes to talk about three acronyms that",
    "start": "160",
    "end": "6720"
  },
  {
    "text": "to be honest confused me for the longest time in my career i just this is something that i will",
    "start": "6720",
    "end": "13120"
  },
  {
    "text": "always work with but i take it for granted that exists and those acronyms are",
    "start": "13120",
    "end": "20080"
  },
  {
    "text": "o l t p o l a p olap",
    "start": "20080",
    "end": "26720"
  },
  {
    "text": "and the new one which is called hdap",
    "start": "26720",
    "end": "32079"
  },
  {
    "text": "these are database uh kind of jargon words they are important don't",
    "start": "32160",
    "end": "39120"
  },
  {
    "text": "get me wrong but i'd like to explain them",
    "start": "39120",
    "end": "44559"
  },
  {
    "text": "from from the bottom up you know why do they exist why did we create",
    "start": "44559",
    "end": "52079"
  },
  {
    "text": "online transactional processing and differentiate it between uh",
    "start": "52079",
    "end": "60480"
  },
  {
    "text": "the online analytical processing or analytics different from",
    "start": "60480",
    "end": "66799"
  },
  {
    "text": "pros uh transactional systems and then wha what's this new thing that is called a",
    "start": "66799",
    "end": "72240"
  },
  {
    "text": "hdap which is the hybrid transactional and analytical processing",
    "start": "72240",
    "end": "80000"
  },
  {
    "text": "so this will be the topic of this podcast how about we jump into it",
    "start": "80000",
    "end": "86560"
  },
  {
    "text": "welcome to the backend engineering show with your host hussein nasser but today's topic is um all tp",
    "start": "86560",
    "end": "94240"
  },
  {
    "text": "all app and htap and uh let's start with the concept of",
    "start": "94240",
    "end": "104720"
  },
  {
    "text": "processing in a database you create a database and then you create",
    "start": "104799",
    "end": "111119"
  },
  {
    "text": "your data model and this is usually you're gonna do a normalized data model you don't have",
    "start": "111119",
    "end": "118240"
  },
  {
    "text": "to but you can and part of that you want to execute queries that ensures",
    "start": "118240",
    "end": "127119"
  },
  {
    "text": "that you have these acid properties this atomicity consistency isolation and",
    "start": "127119",
    "end": "132800"
  },
  {
    "text": "durability and then when you execute these queries you touch multiple tables you do dml which",
    "start": "132800",
    "end": "139520"
  },
  {
    "text": "is data manipulation language kind of queries",
    "start": "139520",
    "end": "144640"
  },
  {
    "text": "and you you edit those tables right and and if you edit multiple tables you",
    "start": "144640",
    "end": "151200"
  },
  {
    "text": "want this view to be consistent right and you don't want to",
    "start": "151200",
    "end": "156400"
  },
  {
    "text": "execute one query to write one table and then the power goes off and all of a sudden you",
    "start": "156400",
    "end": "161760"
  },
  {
    "text": "have your database with kind of a inconsistent state where something is written",
    "start": "161760",
    "end": "167519"
  },
  {
    "text": "and it's not written on the back end on the other table so that's bad essentially transactions need to be consistent",
    "start": "167519",
    "end": "175280"
  },
  {
    "text": "and as part of making these queries consistent",
    "start": "175280",
    "end": "182560"
  },
  {
    "text": "you you you split those tables into multiple tables based on your entity",
    "start": "182560",
    "end": "188319"
  },
  {
    "text": "model right you so you have an order table and a product table and",
    "start": "188319",
    "end": "194640"
  },
  {
    "text": "and a customer table and so on and then you join accordingly",
    "start": "194640",
    "end": "200959"
  },
  {
    "text": "based on the type of quiz and you start inserting stuff you so you create transactions the",
    "start": "200959",
    "end": "207040"
  },
  {
    "text": "the system this is your production database essentially right where",
    "start": "207040",
    "end": "212720"
  },
  {
    "text": "your application hits this database by executing these dml queries and occasionally it's gonna",
    "start": "212720",
    "end": "219040"
  },
  {
    "text": "also query but this is your production database so what's wrong with that this this",
    "start": "219040",
    "end": "224400"
  },
  {
    "text": "seems to be most of the time this is the kind of queries you execute right",
    "start": "224400",
    "end": "230480"
  },
  {
    "text": "however we don't only edit right in database we also read",
    "start": "230480",
    "end": "237920"
  },
  {
    "text": "and the nature of queries that you execute for reads",
    "start": "237920",
    "end": "244959"
  },
  {
    "text": "really depends on on on how they will perform based",
    "start": "244959",
    "end": "252080"
  },
  {
    "text": "on your data model essentially we if you can nothing stopping you from",
    "start": "252080",
    "end": "261040"
  },
  {
    "text": "using your current transactional production database to execute a query that",
    "start": "261040",
    "end": "268560"
  },
  {
    "text": "sums all the products for the past 10 years and and check the price of how",
    "start": "268560",
    "end": "276639"
  },
  {
    "text": "this product was doing for the past 10 years or what is the previous versions of this",
    "start": "276639",
    "end": "282479"
  },
  {
    "text": "product and how how did it go through these iterations you can execute these aggregate queries on the on the",
    "start": "282479",
    "end": "289360"
  },
  {
    "text": "transactional database when i say transaction i mean this this normalized database as",
    "start": "289360",
    "end": "294400"
  },
  {
    "text": "is right but first of all these queries",
    "start": "294400",
    "end": "303120"
  },
  {
    "text": "are not cheap because if you understand what the database is doing",
    "start": "303120",
    "end": "308800"
  },
  {
    "text": "to do account you will appreciate how the database",
    "start": "308800",
    "end": "315759"
  },
  {
    "text": "works first right and you appreciate the the the open source maintainers the",
    "start": "315759",
    "end": "321280"
  },
  {
    "text": "developers people who are building this kind of system it's not easy right you",
    "start": "321280",
    "end": "329120"
  },
  {
    "text": "harmlessly do a select count on your backend application to do to return the count of how many",
    "start": "329120",
    "end": "336560"
  },
  {
    "text": "instagram likes but that that scans",
    "start": "336560",
    "end": "342800"
  },
  {
    "text": "pretty much the whole table and if you have billions of rows how do you count you have to count one",
    "start": "342800",
    "end": "348880"
  },
  {
    "text": "by one the database is not doing anything different you have to literally go one",
    "start": "348880",
    "end": "354400"
  },
  {
    "text": "biter at one and count and you can't count fast enough right you can you can do tricks and",
    "start": "354400",
    "end": "361440"
  },
  {
    "text": "execute multi current concurrent views but that can only go get you so far but that in general",
    "start": "361440",
    "end": "369120"
  },
  {
    "text": "these kind of aggregate queries analytical queries let's call them",
    "start": "369120",
    "end": "375280"
  },
  {
    "text": "are slow right because of the work that we need to do",
    "start": "375360",
    "end": "381600"
  },
  {
    "text": "and it also it is slow",
    "start": "381600",
    "end": "386720"
  },
  {
    "text": "because we in a transactional system in a",
    "start": "386960",
    "end": "393120"
  },
  {
    "text": "transactional database and guys i'm talking about relational databases right um i know nosql and",
    "start": "393120",
    "end": "401520"
  },
  {
    "text": "key value store have their value but i don't have enough expertise to to",
    "start": "401520",
    "end": "408720"
  },
  {
    "text": "kind of talk about those databases right so that i talk i'm talking about",
    "start": "408720",
    "end": "414000"
  },
  {
    "text": "at the end of the day it's it's i o and logic and algorithms right if you think",
    "start": "414000",
    "end": "420000"
  },
  {
    "text": "about it really depends and one day i'm going to expand my knowledge to those so i can",
    "start": "420000",
    "end": "425759"
  },
  {
    "text": "speak better to how they work those nodes equal databases but we're talking about relational here and",
    "start": "425759",
    "end": "433680"
  },
  {
    "text": "the transactional model usually is a what we call a row store",
    "start": "433680",
    "end": "442080"
  },
  {
    "text": "what does that mean it means that when you store rows",
    "start": "442080",
    "end": "449520"
  },
  {
    "text": "on your table right and let's say you have your table have seven columns",
    "start": "449520",
    "end": "456319"
  },
  {
    "text": "that tuple of those seven values think of them they are adjacent",
    "start": "456319",
    "end": "462960"
  },
  {
    "text": "to each other this is stored nice",
    "start": "462960",
    "end": "469120"
  },
  {
    "text": "tucked in together in one block right and the second row",
    "start": "469120",
    "end": "476319"
  },
  {
    "text": "comes directly directly after it so in a block which is",
    "start": "476319",
    "end": "483759"
  },
  {
    "text": "which is this is how we read from the desk we read in blocks unlike memory we read byte by",
    "start": "483759",
    "end": "491520"
  },
  {
    "text": "bytes not it's byte address the desk is block address you",
    "start": "491520",
    "end": "497039"
  },
  {
    "text": "it's so expensive to go to the disk so we always read by page in case of ssdn by block in case",
    "start": "497039",
    "end": "502479"
  },
  {
    "text": "of mechanical drive right you read one block and then you get",
    "start": "502479",
    "end": "508879"
  },
  {
    "text": "you get all this data in that block so a row store stores this in rows if you",
    "start": "508879",
    "end": "515360"
  },
  {
    "text": "pull one block you get all this content you get many raw rows in that block right",
    "start": "515360",
    "end": "524399"
  },
  {
    "text": "so and not only you get rows you get all the columns for free essentially",
    "start": "524399",
    "end": "532160"
  },
  {
    "text": "for that row right in in that block okay so if i want to",
    "start": "532160",
    "end": "538800"
  },
  {
    "text": "if i want to select only one column and i want to sum that column it is actually more expensive to do that",
    "start": "538800",
    "end": "544959"
  },
  {
    "text": "in a row store database right because i'm gonna get",
    "start": "544959",
    "end": "550959"
  },
  {
    "text": "i'm gonna get fewer rows right in a block because because i'm i'm i'm",
    "start": "550959",
    "end": "557279"
  },
  {
    "text": "encumbered by all these other columns that i i don't really need but but i'm given anyway right",
    "start": "557279",
    "end": "563760"
  },
  {
    "text": "so that's why there's this other concept of a column store database where we store and",
    "start": "563760",
    "end": "570480"
  },
  {
    "text": "instead of the storing a row all the values we store",
    "start": "570480",
    "end": "575680"
  },
  {
    "text": "the column values column by column right so column one and all the values",
    "start": "575680",
    "end": "584240"
  },
  {
    "text": "in all the stable so you for free when you read a block right that block will cont",
    "start": "584240",
    "end": "592560"
  },
  {
    "text": "and you know which field you want that block will contain all the field values for that particular",
    "start": "592560",
    "end": "600080"
  },
  {
    "text": "field so you will get way more efficient in a column store if you",
    "start": "600080",
    "end": "607120"
  },
  {
    "text": "want to do aggregate like a count or some on an average in a column store",
    "start": "607120",
    "end": "612160"
  },
  {
    "text": "versus a row store right so that's i talk about that in another video check it out right here",
    "start": "612160",
    "end": "617839"
  },
  {
    "text": "hopefully i pointed to the right location so however rose store is is very",
    "start": "617839",
    "end": "627120"
  },
  {
    "text": "performant when we want to right and and uh we wanna we want to",
    "start": "627440",
    "end": "635519"
  },
  {
    "text": "we when we want to do a transactions calm store not so much because of of the way we",
    "start": "635519",
    "end": "642959"
  },
  {
    "text": "need to traverse and and and build that hierarchy right of columns and blocks right",
    "start": "642959",
    "end": "648959"
  },
  {
    "text": "so transactions are great for rows but large expensive queries are great for",
    "start": "648959",
    "end": "654160"
  },
  {
    "text": "common store that is why when we understand how these",
    "start": "654160",
    "end": "660640"
  },
  {
    "text": "expensive queries actually work you really can't have one size fits all",
    "start": "660640",
    "end": "670160"
  },
  {
    "text": "right you really need to think and you might say hussein i'm going to",
    "start": "670160",
    "end": "676800"
  },
  {
    "text": "add indexes on my tables i'm just going to add a bunch of indexes yeah i can do this queries yeah i'm",
    "start": "676800",
    "end": "683200"
  },
  {
    "text": "doing all these kind of queries i'm going to add indexes fine right it's definitely you will need",
    "start": "683200",
    "end": "689519"
  },
  {
    "text": "to add indexes but indexes will only get you so much in a large data set",
    "start": "689519",
    "end": "697040"
  },
  {
    "text": "the more indexes you have on your transactional",
    "start": "697040",
    "end": "704800"
  },
  {
    "text": "database what will happen is when you insert and update and delete",
    "start": "704800",
    "end": "712800"
  },
  {
    "text": "a row in a table all these indexes need to get",
    "start": "712800",
    "end": "720160"
  },
  {
    "text": "updated with the values that you just insert so you need to touch all the b3s in case that's the data",
    "start": "720160",
    "end": "728000"
  },
  {
    "text": "structure that's used for to build these indexes you need to touch those you need to update them",
    "start": "728000",
    "end": "734160"
  },
  {
    "text": "and that's not so bad don't don't take my word like this is the end of the word oh i have i",
    "start": "734160",
    "end": "740079"
  },
  {
    "text": "have seven indexes then it's the end of the word my inserts are going to be slow not necessary it really depends on the",
    "start": "740079",
    "end": "747279"
  },
  {
    "text": "depth of the tree and other other semantics as well",
    "start": "747279",
    "end": "752320"
  },
  {
    "text": "but at the end of the day if you have so many indexes at a certain time",
    "start": "752320",
    "end": "757440"
  },
  {
    "text": "when we hit millions and millions and millions and billions of rows",
    "start": "757440",
    "end": "762880"
  },
  {
    "text": "you can start feeling that your inserts are slowing down because of the overhead",
    "start": "762880",
    "end": "770000"
  },
  {
    "text": "of updating those index uh indexes correct all right and another side effect",
    "start": "770000",
    "end": "777920"
  },
  {
    "text": "in certain databases as well is what we call write amplification this is this might",
    "start": "777920",
    "end": "783680"
  },
  {
    "text": "be more important and certain for certain customers",
    "start": "783680",
    "end": "791120"
  },
  {
    "text": "than the performance of a single transaction itself right you want your transaction",
    "start": "791120",
    "end": "796240"
  },
  {
    "text": "to be as fast as possible but still the side effect of right amplification",
    "start": "796240",
    "end": "803360"
  },
  {
    "text": "resulting from excessive need of indexes right can",
    "start": "803440",
    "end": "811600"
  },
  {
    "text": "be detrimental can have a side a huge side effect right and it's it's",
    "start": "811600",
    "end": "817760"
  },
  {
    "text": "it's a it's a snowball effect you're inserting a single row",
    "start": "817760",
    "end": "824480"
  },
  {
    "text": "but that single row in your application or your application translate that single statement into many statements",
    "start": "824480",
    "end": "831360"
  },
  {
    "text": "maybe you're updating multiple tables and each table is really",
    "start": "831360",
    "end": "838560"
  },
  {
    "text": "having so many indexes so physically the database has to go and update the pages",
    "start": "838720",
    "end": "846880"
  },
  {
    "text": "for that these b3 indexes right to insert the new values you just",
    "start": "846880",
    "end": "852720"
  },
  {
    "text": "inserted so if you have 10 indexes that has to update 10 entries in those indexes",
    "start": "852720",
    "end": "858959"
  },
  {
    "text": "right and potentially this is a result of the b3 structure",
    "start": "858959",
    "end": "868800"
  },
  {
    "text": "you're gonna rebalance the three it's inevitable the more rows you're",
    "start": "868800",
    "end": "874000"
  },
  {
    "text": "gonna have you're gonna balance the three eventually balancing the tree is is an in place",
    "start": "874000",
    "end": "880079"
  },
  {
    "text": "update you're changing the route right page and as a result you have to",
    "start": "880079",
    "end": "887519"
  },
  {
    "text": "obtain what we call in memory the c plus plus lingo's mutex is i believe or",
    "start": "887519",
    "end": "893279"
  },
  {
    "text": "c mutexes you have to lock the memory in place to so that nobody touches",
    "start": "893279",
    "end": "899519"
  },
  {
    "text": "that you can because you you want to perform in place update to that and then i believe in sql",
    "start": "899519",
    "end": "905760"
  },
  {
    "text": "server they call it latches right these latches or these mutexes",
    "start": "905760",
    "end": "911040"
  },
  {
    "text": "slows concurrent transaction even more right so the more indexes you",
    "start": "911040",
    "end": "917120"
  },
  {
    "text": "have you start you're gonna start feeling these effects right and i'm talking about low level stuff",
    "start": "917120",
    "end": "923279"
  },
  {
    "text": "here it's very low level but again don't take i'm talking about",
    "start": "923279",
    "end": "930720"
  },
  {
    "text": "billions of rows guys here now if you have thousands of rows you probably want fields if you have you",
    "start": "930720",
    "end": "938320"
  },
  {
    "text": "don't have concurrent users and when i say users here i don't mean actual",
    "start": "938320",
    "end": "943600"
  },
  {
    "text": "person i'm talking about back end threads executing on tcp connections",
    "start": "943600",
    "end": "951360"
  },
  {
    "text": "actually connections many connections concurrently executing transition databases yeah they love concurrency",
    "start": "951360",
    "end": "958880"
  },
  {
    "text": "they they support that but too much concurrency can screw the database actually",
    "start": "958880",
    "end": "965440"
  },
  {
    "text": "all right especially what locking is just slows things down so we try to make our transactional",
    "start": "965440",
    "end": "971839"
  },
  {
    "text": "processing the production database that that the back end faces directly",
    "start": "971839",
    "end": "977839"
  },
  {
    "text": "as efficient and as it does one thing and it's the cqrs mantra right command queries",
    "start": "977839",
    "end": "986000"
  },
  {
    "text": "separation segregation what is it whatever it's called try to separate writes from reads",
    "start": "986000",
    "end": "992399"
  },
  {
    "text": "essentially right so yeah let's keep the right aspect of this application and you can",
    "start": "992399",
    "end": "999600"
  },
  {
    "text": "you can doesn't mean you have to do it you know just straight",
    "start": "999600",
    "end": "1006079"
  },
  {
    "text": "split reads and write no of course that that that doesn't fly you have to mix and",
    "start": "1006079",
    "end": "1011839"
  },
  {
    "text": "match obviously you write and read you can do some reads that are",
    "start": "1011839",
    "end": "1017440"
  },
  {
    "text": "reasonable but doing too much reads that are that that require the the indexes you",
    "start": "1017440",
    "end": "1024720"
  },
  {
    "text": "just added ask yourself if you're writing an index what what what will it do this index",
    "start": "1024720",
    "end": "1031760"
  },
  {
    "text": "where i'm gonna use it if you're gonna absolutely need it then",
    "start": "1031760",
    "end": "1036880"
  },
  {
    "text": "okay so for the consequences um i say suffer with the you know tongue",
    "start": "1036880",
    "end": "1043038"
  },
  {
    "text": "and cheek really it's just not really bad right it's just one and two indexes",
    "start": "1043039",
    "end": "1048799"
  },
  {
    "text": "three four five index is not that bad right really depends on what at the end of the",
    "start": "1048799",
    "end": "1054400"
  },
  {
    "text": "day you have to measure your workflow i can't possibly in a podcast explain all possible cases right",
    "start": "1054400",
    "end": "1060480"
  },
  {
    "text": "it's just and i and i don't know everything at the end of the day right you only",
    "start": "1060480",
    "end": "1066160"
  },
  {
    "text": "know what you faced and i'm talking based on my what now 20 years of experience dealing",
    "start": "1066160",
    "end": "1073039"
  },
  {
    "text": "with databases and kind of working with kind of these kind of things so",
    "start": "1073039",
    "end": "1079120"
  },
  {
    "text": "these are the transactional aspects of the database when we move to the olap",
    "start": "1079120",
    "end": "1086240"
  },
  {
    "text": "we establish that we need online analytical processing right we're going to make",
    "start": "1086240",
    "end": "1093039"
  },
  {
    "text": "another database dedicated for reads and expensive reads",
    "start": "1093039",
    "end": "1098240"
  },
  {
    "text": "might i say for older data archive data that we barely touched or maybe yeah or maybe",
    "start": "1098240",
    "end": "1106480"
  },
  {
    "text": "i'm running reports i'm doing batch jobs that are executed and then",
    "start": "1106480",
    "end": "1113280"
  },
  {
    "text": "running for maybe i don't know three three hours queries fine you can do it there you can execute",
    "start": "1113280",
    "end": "1120160"
  },
  {
    "text": "a three hour query on a on a production database on the transactional system that will just kill your your your",
    "start": "1120160",
    "end": "1126880"
  },
  {
    "text": "concurrency on a production system yeah i mean queries that queries obtain shared logs but",
    "start": "1126880",
    "end": "1134160"
  },
  {
    "text": "the concurrency the management of logs and all that stuff right",
    "start": "1134160",
    "end": "1141039"
  },
  {
    "text": "uh i say that assuming that you obtain the shared log",
    "start": "1141039",
    "end": "1146160"
  },
  {
    "text": "so that your your view is consistent some some queries do that for like i don't want i'm going to query",
    "start": "1146160",
    "end": "1152640"
  },
  {
    "text": "this product table but i don't want anyone to change it so you obtain a shared log",
    "start": "1152640",
    "end": "1158000"
  },
  {
    "text": "if you do that then that's that's bad in a production database right so you move to an analytical database",
    "start": "1158000",
    "end": "1164400"
  },
  {
    "text": "that does that right so all app is fit for these kind of courses counts",
    "start": "1164400",
    "end": "1171520"
  },
  {
    "text": "and sums and averages and and then expensive ctes and",
    "start": "1171520",
    "end": "1176559"
  },
  {
    "text": "all this stuff right you can do it on an online analytical",
    "start": "1176559",
    "end": "1182960"
  },
  {
    "text": "processing kind of databases right and usually the the the",
    "start": "1182960",
    "end": "1190240"
  },
  {
    "text": "the word for it has been called data lakes and data warehousing because",
    "start": "1190240",
    "end": "1195840"
  },
  {
    "text": "like okay let's put in the warehouse and let's just execute those queries against it",
    "start": "1195840",
    "end": "1202400"
  },
  {
    "text": "now the first question comes in here all right i agree we have an a database for my",
    "start": "1202880",
    "end": "1208640"
  },
  {
    "text": "transaction where i write and write and write and write and occasionally i'm going to read one z2 zs and for my expensive long",
    "start": "1208640",
    "end": "1216720"
  },
  {
    "text": "running jobs and queries and reports and stuff i'm going to execute against that who's",
    "start": "1216720",
    "end": "1223120"
  },
  {
    "text": "saying how how i have the two databases",
    "start": "1223120",
    "end": "1228159"
  },
  {
    "text": "what are they are going to get out how do you get",
    "start": "1228159",
    "end": "1233200"
  },
  {
    "text": "what what are the rights going how do how would the other database gets",
    "start": "1233200",
    "end": "1238559"
  },
  {
    "text": "the rights well that's where",
    "start": "1238559",
    "end": "1244240"
  },
  {
    "text": "hadoop and all these systems came in to solve these problems the batch",
    "start": "1244240",
    "end": "1249919"
  },
  {
    "text": "processing right moving uh doing",
    "start": "1249919",
    "end": "1254960"
  },
  {
    "text": "etls essentially extract transform transfor uh transform load",
    "start": "1254960",
    "end": "1262159"
  },
  {
    "text": "processing tools to move these data from the oltp the transactional",
    "start": "1262159",
    "end": "1271039"
  },
  {
    "text": "normalized kind of tables down to the oltp and you have to move them on",
    "start": "1271039",
    "end": "1278720"
  },
  {
    "text": "batches nightly every three hours every two hour as a result",
    "start": "1278720",
    "end": "1286400"
  },
  {
    "text": "next question you might have is and i'm gonna get the stale data sure that's the price we pay and",
    "start": "1286400",
    "end": "1292720"
  },
  {
    "text": "companies are still struggling solving this problem kafka tries",
    "start": "1292720",
    "end": "1300320"
  },
  {
    "text": "to solve this by trying to do this in real time fashion and it's",
    "start": "1300320",
    "end": "1307600"
  },
  {
    "text": "really commended what they're trying to do right for the longest time we have this batch",
    "start": "1307600",
    "end": "1313280"
  },
  {
    "text": "process run a nightly job hadoop or whatever and move everything yeah you have here",
    "start": "1313280",
    "end": "1320559"
  },
  {
    "text": "in the transaction the new changes to the ol or lab so i can run my long-running",
    "start": "1320559",
    "end": "1326320"
  },
  {
    "text": "expensive queries right here right and i don't care if this is nobody's touching this olap is except us",
    "start": "1326320",
    "end": "1333760"
  },
  {
    "text": "so if the query takes three four ten seconds that's fine that is fine i can i can",
    "start": "1333760",
    "end": "1340480"
  },
  {
    "text": "host it even in a cheap hd hd what the hell is this hdd",
    "start": "1340480",
    "end": "1347280"
  },
  {
    "text": "hard disk spinning you can you can definitely host it there queries are slow fine but if you have",
    "start": "1347280",
    "end": "1353760"
  },
  {
    "text": "money you can obviously put an ssd and that's fine because ssds they love things that don't change right",
    "start": "1353760",
    "end": "1360640"
  },
  {
    "text": "no lab you don't change stuff right it's just it's just really almost static right well it might be",
    "start": "1360640",
    "end": "1368080"
  },
  {
    "text": "that might be wrong because if what happened if you update so yeah i i might take that back",
    "start": "1368080",
    "end": "1375360"
  },
  {
    "text": "but essentially that's what we used to do batch kafka",
    "start": "1375360",
    "end": "1380720"
  },
  {
    "text": "came to the rescue and then all this message queueing with kafka connect and",
    "start": "1380720",
    "end": "1386320"
  },
  {
    "text": "and essentially guaran not guaranteeing promising the idea of having",
    "start": "1386320",
    "end": "1392340"
  },
  {
    "text": "[Music] real time communication",
    "start": "1392340",
    "end": "1398480"
  },
  {
    "text": "i'm gonna give you real time as you insert that stinking draw and you touch all these tables",
    "start": "1398480",
    "end": "1404320"
  },
  {
    "text": "immediately we're going to move it to the other view right to the other database",
    "start": "1404320",
    "end": "1411679"
  },
  {
    "text": "so you can build this right because you can push these changes to kafka and then",
    "start": "1411679",
    "end": "1418559"
  },
  {
    "text": "there is another process which consumes from kafka immediately and applies the changes to",
    "start": "1418559",
    "end": "1424080"
  },
  {
    "text": "the overlap right that's how basically it's almost like a message q it's a pop sub system which uses a queue",
    "start": "1424080",
    "end": "1433840"
  },
  {
    "text": "but obviously there is you have to that's why kafka is very very",
    "start": "1433840",
    "end": "1439200"
  },
  {
    "text": "important to use because they have this exactly once guarantee because if you",
    "start": "1439200",
    "end": "1446320"
  },
  {
    "text": "if that fails and you try it again kafka should tell you that hey by the way you did this don't apply it again",
    "start": "1446320",
    "end": "1454000"
  },
  {
    "text": "that is very very critical okay i'd important potency guys idem potency is",
    "start": "1454000",
    "end": "1459600"
  },
  {
    "text": "very very critical in this concept right so yeah kafka but obviously",
    "start": "1459600",
    "end": "1465440"
  },
  {
    "text": "when you tell company hey there's this thing there's this thing there's all tp there is all lab",
    "start": "1465440",
    "end": "1471679"
  },
  {
    "text": "and there's you can you have to deploy kafka go hit yourself in the head right",
    "start": "1471679",
    "end": "1479520"
  },
  {
    "text": "there you'll freak out right just like wow i'm managing all these systems",
    "start": "1479840",
    "end": "1486080"
  },
  {
    "text": "and infrastructures just to maintain real time sometimes people say yeah",
    "start": "1486080",
    "end": "1491200"
  },
  {
    "text": "i don't want real time yeah it's not worth it it's not worth it to deploy kafka kafka is a beautiful beautiful",
    "start": "1491200",
    "end": "1497679"
  },
  {
    "text": "software i love it by maintaining it",
    "start": "1497679",
    "end": "1501840"
  },
  {
    "text": "i don't know i never maintained it but boy have you seen kafka it's a beautiful design but it's it",
    "start": "1502960",
    "end": "1511039"
  },
  {
    "text": "comes with its complexity zookeeper alone they're getting rid of",
    "start": "1511039",
    "end": "1516720"
  },
  {
    "text": "zookeeper anyway so that's that's gonna be easier for maintenance that's good",
    "start": "1516720",
    "end": "1523120"
  },
  {
    "text": "so yeah so that's that that's the of of data warehousing and all app",
    "start": "1523120",
    "end": "1531200"
  },
  {
    "text": "and all tp and transactional that's why i try as much as possible",
    "start": "1531200",
    "end": "1538640"
  },
  {
    "text": "when i design a database i try to make it overlappy kind of uh database and",
    "start": "1538640",
    "end": "1546000"
  },
  {
    "text": "at the same time so i i work very hard on my data model such that it's like okay",
    "start": "1546000",
    "end": "1553279"
  },
  {
    "text": "what kind of queries i'm gonna execute against i really think hard and and i don't look at the queries and",
    "start": "1553279",
    "end": "1560799"
  },
  {
    "text": "if there's a query like from an app that is i don't know belong to an admin",
    "start": "1560799",
    "end": "1566960"
  },
  {
    "text": "and they are using a field i don't have an x on that let the admin suffer",
    "start": "1566960",
    "end": "1573360"
  },
  {
    "text": "screw the admin i'm not going to add an index for my admin they",
    "start": "1573360",
    "end": "1580480"
  },
  {
    "text": "the admin can't wait they're patient they can wait my customer on the other",
    "start": "1580480",
    "end": "1586960"
  },
  {
    "text": "hand that's why guys when you add a feature think think really really",
    "start": "1586960",
    "end": "1594799"
  },
  {
    "text": "long and hard before adding a feature to your product right because any",
    "start": "1594799",
    "end": "1601600"
  },
  {
    "text": "feature you add oh i'm gonna search by order id and by name and by first name and by",
    "start": "1601600",
    "end": "1608320"
  },
  {
    "text": "filter and by uh my my mother's maiden name",
    "start": "1608320",
    "end": "1614720"
  },
  {
    "text": "i'm gonna search by my ssn i'm gonna say i'm gonna let people search with everything",
    "start": "1614720",
    "end": "1620960"
  },
  {
    "text": "you you can but you're gonna shirt yourself in the foot that's why big companies look look at",
    "start": "1620960",
    "end": "1628559"
  },
  {
    "text": "look at their instagram instagram is not allowing you to search by certain fields",
    "start": "1628559",
    "end": "1635120"
  },
  {
    "text": "it's just like there's this random search and they they they cook the of everything",
    "start": "1635120",
    "end": "1641440"
  },
  {
    "text": "right everything is cached multi-layer caching to to achieve this search and you don't",
    "start": "1641440",
    "end": "1647760"
  },
  {
    "text": "get real time that's not real-time data that's definitely",
    "start": "1647760",
    "end": "1653360"
  },
  {
    "text": "in real time data all the numbers that you get on instagram or these big apps they are not the actual numbers",
    "start": "1653360",
    "end": "1661600"
  },
  {
    "text": "they are delayed so delayed right because you you don't see them live it's",
    "start": "1661600",
    "end": "1667520"
  },
  {
    "text": "very hard to get live data right this is expensive once you understand",
    "start": "1667520",
    "end": "1673200"
  },
  {
    "text": "once you build a system you understand how expensive it is and i'm not talking about oh i i i i",
    "start": "1673200",
    "end": "1678399"
  },
  {
    "text": "spun up a database and i built an apple hitting that database no actually production",
    "start": "1678399",
    "end": "1683919"
  },
  {
    "text": "because if you build if you if you start supporting all these features and you start adding",
    "start": "1683919",
    "end": "1690000"
  },
  {
    "text": "all right all these features and users will start using them and when they use will query against",
    "start": "1690000",
    "end": "1695360"
  },
  {
    "text": "your mother's uh middle name that query is going to be slow",
    "start": "1695360",
    "end": "1700480"
  },
  {
    "text": "and you're going to look at the back and says oh of course it's slow there's no index admin add an index",
    "start": "1700480",
    "end": "1708240"
  },
  {
    "text": "okay i'm going to add an index hey they're searching on ssn admin add an index few months later you",
    "start": "1708240",
    "end": "1716159"
  },
  {
    "text": "have like 3300 indexes i'm i'm exaggerating but you get an idea",
    "start": "1716159",
    "end": "1722840"
  },
  {
    "text": "features think about it yagni you ain't gonna need it",
    "start": "1722840",
    "end": "1728880"
  },
  {
    "text": "if you're gonna need it edit really think hard about the features you",
    "start": "1728880",
    "end": "1734240"
  },
  {
    "text": "had all right now that being said what i'm what i'm",
    "start": "1734240",
    "end": "1740559"
  },
  {
    "text": "talking about here is the all app versus the old tp right old tp versus",
    "start": "1740559",
    "end": "1746480"
  },
  {
    "text": "oil app and now there's a new thing that's called hybrid which",
    "start": "1746480",
    "end": "1754480"
  },
  {
    "text": "kind of does what with kafka the kafka solution but it's like baked in into the database",
    "start": "1754480",
    "end": "1761279"
  },
  {
    "text": "maria db came up with an h-tap solution and mario db is by the way if you don't know",
    "start": "1761279",
    "end": "1767279"
  },
  {
    "text": "it is a a fork of my sequel once my sequel was",
    "start": "1767279",
    "end": "1774799"
  },
  {
    "text": "uh acquired by oracle the author of my sequel i believe they just forked my",
    "start": "1774799",
    "end": "1781679"
  },
  {
    "text": "and called it my they forked my squad called it mario db and they went to town it's a good database",
    "start": "1781679",
    "end": "1788880"
  },
  {
    "text": "it's a really good database so they they now they they they have a column store",
    "start": "1788880",
    "end": "1794799"
  },
  {
    "text": "digita engine because that's how my sequel works i i love my sequel",
    "start": "1794799",
    "end": "1801279"
  },
  {
    "text": "design by the way if i i have seen it many times on this channel i know i know i'm freaking i love my sequel",
    "start": "1801279",
    "end": "1809760"
  },
  {
    "text": "architecture the idea of separating the data engine from",
    "start": "1809760",
    "end": "1817039"
  },
  {
    "text": "the dbms is genius right and i wish",
    "start": "1817039",
    "end": "1824640"
  },
  {
    "text": "i love postgres and it's my favorite database but i wish they did that postgres",
    "start": "1824640",
    "end": "1831840"
  },
  {
    "text": "a lot of people disagree with me obviously they say having multiple engines like my asm or",
    "start": "1831840",
    "end": "1837679"
  },
  {
    "text": "anodb or my rocks or or other column store database engine",
    "start": "1837679",
    "end": "1845600"
  },
  {
    "text": "compatibility maintainability of the software becomes harder which is true definitely it's it's features and then",
    "start": "1845840",
    "end": "1850960"
  },
  {
    "text": "they're supporting more features more complexity more bugs more money more problems right",
    "start": "1850960",
    "end": "1856240"
  },
  {
    "text": "but i love it i absolutely love because now you can extend it hey let's build a column store",
    "start": "1856240",
    "end": "1865039"
  },
  {
    "text": "database store uh database engine just like that i'm gonna create my table as a column",
    "start": "1865039",
    "end": "1870720"
  },
  {
    "text": "store and just change the database engine boom same database two tables different engines",
    "start": "1870720",
    "end": "1876640"
  },
  {
    "text": "one is you can have a database engine has a csv the backing is csv oh obviously that's bad but it's useful",
    "start": "1876640",
    "end": "1884480"
  },
  {
    "text": "it's useful if you want to convert your data to csv just change that engine swizzle the",
    "start": "1884480",
    "end": "1890880"
  },
  {
    "text": "engine to csv and all the data is dumped to a csv but pulse chris has that another",
    "start": "1890880",
    "end": "1899679"
  },
  {
    "text": "solution right they they it's a different system it's a different piece i know i'm going all",
    "start": "1899679",
    "end": "1905919"
  },
  {
    "text": "over that place guys i know i'm sorry but talking about mario db we're talking",
    "start": "1905919",
    "end": "1911519"
  },
  {
    "text": "about mario db and they managed to do this ishtab thing because mainly because of this",
    "start": "1911519",
    "end": "1917960"
  },
  {
    "text": "extensibility of mysql which i love absolutely love",
    "start": "1917960",
    "end": "1924320"
  },
  {
    "text": "right so now they have the hybrid model they support a transaction which is the native mysql",
    "start": "1924320",
    "end": "1931679"
  },
  {
    "text": "mariadb right and they also have a column store",
    "start": "1931679",
    "end": "1939519"
  },
  {
    "text": "right database engine and what they built is they built this",
    "start": "1939519",
    "end": "1946640"
  },
  {
    "text": "hybrid mechanism asynchronously updating",
    "start": "1946640",
    "end": "1952880"
  },
  {
    "text": "um the back end olap through the oltp they just",
    "start": "1952880",
    "end": "1961279"
  },
  {
    "text": "mash it up together i don't i can't speak in details about it i believe it's asynchronous",
    "start": "1961279",
    "end": "1967600"
  },
  {
    "text": "but that's that's what i think right it could be synchronized but i i",
    "start": "1967600",
    "end": "1973039"
  },
  {
    "text": "really doubt it synchronicity kills performance i really doubt it's synchronous",
    "start": "1973039",
    "end": "1978480"
  },
  {
    "text": "has to be asynchronous another one is oracle actually came up with a solution an h-tap",
    "start": "1978480",
    "end": "1985679"
  },
  {
    "text": "solution called rapid i talked about it right here rapid oracle rapid is it this my sequel",
    "start": "1985679",
    "end": "1995600"
  },
  {
    "text": "i don't know if it's my sequel i forgot actually i i the details in the video but that's another hybrid approach it's",
    "start": "1995600",
    "end": "2002320"
  },
  {
    "text": "like okay hey guys once you move to us we're gonna do the all app and all tb you don't have",
    "start": "2002320",
    "end": "2008080"
  },
  {
    "text": "to worry about everything this is a very enticing for companies what really you're gonna manage all of",
    "start": "2008080",
    "end": "2014320"
  },
  {
    "text": "this for us sign me in companies love that throw the money i don't have to maintain",
    "start": "2014320",
    "end": "2022000"
  },
  {
    "text": "kafka and then and databases and write those bash jobs atls c sharp btls oh my",
    "start": "2022000",
    "end": "2030399"
  },
  {
    "text": "how many etls i wrote oh my god i lost count they're just three i lost count",
    "start": "2030399",
    "end": "2038720"
  },
  {
    "text": "oh my god but yeah all right so let's wind down and finish",
    "start": "2038720",
    "end": "2043919"
  },
  {
    "text": "the podcast so we talked about all tp online",
    "start": "2043919",
    "end": "2049358"
  },
  {
    "text": "i don't know why they called online but i guess it's has to be i just",
    "start": "2049359",
    "end": "2056158"
  },
  {
    "text": "i think it's just an acclaim right transactional processing which is your",
    "start": "2056159",
    "end": "2061919"
  },
  {
    "text": "production normalized kind of optimized for rights um",
    "start": "2061919",
    "end": "2068480"
  },
  {
    "text": "workloads right you want those transactions to execute you want them to be short sweet and fast",
    "start": "2068480",
    "end": "2075919"
  },
  {
    "text": "because that's what the customer hits that's what the end user hits",
    "start": "2075919",
    "end": "2081118"
  },
  {
    "text": "right you want them fast transaction you want them have out don't execute like",
    "start": "2081119",
    "end": "2086480"
  },
  {
    "text": "think don't add features that you're not supposed to add in a transactional if you want if you absolutely want to",
    "start": "2086480",
    "end": "2092800"
  },
  {
    "text": "think twice about the data model think how you can optimize this question it's fast",
    "start": "2092800",
    "end": "2099200"
  },
  {
    "text": "always think about scale right uh avoid queries that does",
    "start": "2099200",
    "end": "2104800"
  },
  {
    "text": "like 100 100 joins right to to produce some sort of content right",
    "start": "2104800",
    "end": "2111040"
  },
  {
    "text": "joins well well kind of a nice but they kind of can kill performance if you",
    "start": "2111040",
    "end": "2117359"
  },
  {
    "text": "join multiple table to produce some sort of view then once you start doing joins really",
    "start": "2117359",
    "end": "2123520"
  },
  {
    "text": "think about doing it another way really",
    "start": "2123520",
    "end": "2129680"
  },
  {
    "text": "uh i think it's like is this really necessary if this is necessary then yeah because joins at the larger the tables",
    "start": "2129680",
    "end": "2136160"
  },
  {
    "text": "get that this scales proportionately with it right so that's your old tp all",
    "start": "2136160",
    "end": "2144079"
  },
  {
    "text": "app on the other hand for queries aggregation things reports three hour queries",
    "start": "2144079",
    "end": "2151520"
  },
  {
    "text": "and and things that are kind of ad hockey they do not really execute on um",
    "start": "2151520",
    "end": "2159680"
  },
  {
    "text": "uh on the try on the production transactional system you don't really change the all app",
    "start": "2159680",
    "end": "2165440"
  },
  {
    "text": "barely change it it's read only most of the time right so it's it's optimized for this",
    "start": "2165440",
    "end": "2170800"
  },
  {
    "text": "kind of workload reads right and that's it the final one is",
    "start": "2170800",
    "end": "2177040"
  },
  {
    "text": "we had we had these two natures we had we have two natures of queries queries that read",
    "start": "2177040",
    "end": "2183599"
  },
  {
    "text": "and are expensive by nature and the queries are rights and then needs to be fast right",
    "start": "2183599",
    "end": "2189520"
  },
  {
    "text": "dml and kind of a queries that are also read but also fast need to be fast",
    "start": "2189520",
    "end": "2195359"
  },
  {
    "text": "these are the old tp right and these the long-running aggregates",
    "start": "2195359",
    "end": "2202079"
  },
  {
    "text": "count average needs to exist somewhere else you can't put them on there you can",
    "start": "2202079",
    "end": "2207680"
  },
  {
    "text": "but you're gonna suffer you're gonna consume additional resources that these precious",
    "start": "2207680",
    "end": "2214079"
  },
  {
    "text": "production transactional resources instead of spent serving actual",
    "start": "2214079",
    "end": "2219280"
  },
  {
    "text": "customers you're querying and serving that long learning query right",
    "start": "2219280",
    "end": "2225440"
  },
  {
    "text": "so we had to separate them we had to produce the olap and all tp and as a result we created",
    "start": "2226839",
    "end": "2234480"
  },
  {
    "text": "a gap right all of a sudden we have delay in the data we have",
    "start": "2234480",
    "end": "2240640"
  },
  {
    "text": "eventual consistency that's a fancy term for you",
    "start": "2240640",
    "end": "2245680"
  },
  {
    "text": "so to reach that consistency between the the two databases we need to update them",
    "start": "2245839",
    "end": "2251520"
  },
  {
    "text": "right and to update them we invented a whole switch so people made so much money with these etl",
    "start": "2251520",
    "end": "2259119"
  },
  {
    "text": "tools right moving data from the production",
    "start": "2259119",
    "end": "2264720"
  },
  {
    "text": "the transactional to i keep saying production that's that also a production database the whole app is uploaded all",
    "start": "2264720",
    "end": "2270800"
  },
  {
    "text": "lap is a production right but it's it's a different kind of production it's not the active production fuel it's a data",
    "start": "2270800",
    "end": "2277359"
  },
  {
    "text": "warehouse where we on the back and we're just doing our own thing nobody's seeing watching us",
    "start": "2277359",
    "end": "2283520"
  },
  {
    "text": "kind of thinking and under the hor under the horses under the table",
    "start": "2283520",
    "end": "2288880"
  },
  {
    "text": "you know trading horses and stuff but so there is this itch tab the hybrid",
    "start": "2288880",
    "end": "2295920"
  },
  {
    "text": "approach which combines both two natively in the database itself",
    "start": "2295920",
    "end": "2302240"
  },
  {
    "text": "so that it can update that asynchronously at least the rapid model i'm pretty sure it's asynchronous",
    "start": "2302240",
    "end": "2308000"
  },
  {
    "text": "it's just the moment you insert there's a job that picks up and then writes it so there is a delay",
    "start": "2308000",
    "end": "2313040"
  },
  {
    "text": "there's still delay you're not going to see immediately you're right into you whatever you're on the",
    "start": "2313040",
    "end": "2320400"
  },
  {
    "text": "transactional system you're not immediately going to see it in in the in the old app system right",
    "start": "2320400",
    "end": "2328960"
  },
  {
    "text": "it's going to take a little bit of a delay i believe rapid",
    "start": "2328960",
    "end": "2335119"
  },
  {
    "text": "and h tab they give you the option if you want and and",
    "start": "2335119",
    "end": "2341760"
  },
  {
    "text": "it's not really rocket science they just make it synchronous right that insert that comment only",
    "start": "2341760",
    "end": "2350160"
  },
  {
    "text": "that's probably a little bit harsh but i'm just making stuff up right now guys so take it with a grain of salt",
    "start": "2350160",
    "end": "2357040"
  },
  {
    "text": "that right that transaction that you just committed i believe it will commit successfully if",
    "start": "2357040",
    "end": "2362880"
  },
  {
    "text": "that commit also committed successfully on the olap right and only then it will be it will",
    "start": "2362880",
    "end": "2369119"
  },
  {
    "text": "return to this to the user return successful right",
    "start": "2369119",
    "end": "2374320"
  },
  {
    "text": "that's the quorum approach at least for the with cassandra right where you write",
    "start": "2374320",
    "end": "2379520"
  },
  {
    "text": "multiple nodes and if two succeeded i declare this",
    "start": "2379520",
    "end": "2387040"
  },
  {
    "text": "as a winner right so there's a synchronicity at least oregon and guys if anyone",
    "start": "2387040",
    "end": "2393440"
  },
  {
    "text": "listening here expert or or know more about the edge",
    "start": "2393440",
    "end": "2398560"
  },
  {
    "text": "dab than i do let me know reach out and let's have",
    "start": "2398560",
    "end": "2404480"
  },
  {
    "text": "some more discussions and if correct anything wrong that i said i'd love to be corrected",
    "start": "2404480",
    "end": "2411920"
  },
  {
    "text": "appreciate you guys and it's been a long episode huh but i had a lot of my mind so i had to",
    "start": "2411920",
    "end": "2418079"
  },
  {
    "text": "just kind of talk about it organically uh i know some some of you don't like",
    "start": "2418079",
    "end": "2423760"
  },
  {
    "text": "this kind of long videos but i i i enjoy making them because it's um",
    "start": "2423760",
    "end": "2429119"
  },
  {
    "text": "it's very organic and it's um i'm in california so",
    "start": "2429119",
    "end": "2434240"
  },
  {
    "text": "that was a terrible joke all right and i love just talking",
    "start": "2434240",
    "end": "2442319"
  },
  {
    "text": "whatever in my head i just really i without scripting or anything like",
    "start": "2442319",
    "end": "2448079"
  },
  {
    "text": "that i had literally started this video with three bullet points all tp all app",
    "start": "2448079",
    "end": "2455920"
  },
  {
    "text": "and then each tab that's it right i didn't even i don't even have them right in here it's just right there and i started and",
    "start": "2455920",
    "end": "2462640"
  },
  {
    "text": "i made up around what are we in an hour already i think we made an hour video out of it i don't know a",
    "start": "2462640",
    "end": "2468079"
  },
  {
    "text": "podcast i enjoy this kind of content free form you see my thoughts right and i",
    "start": "2468079",
    "end": "2476160"
  },
  {
    "text": "talk about many things i can't possibly make a 60 second video",
    "start": "2476160",
    "end": "2481760"
  },
  {
    "text": "talking about this kind of details right we have to kind of explore and you walk",
    "start": "2481760",
    "end": "2487920"
  },
  {
    "text": "with me throwing through all of this thing and i call myself out all the time when i miss something",
    "start": "2487920",
    "end": "2494560"
  },
  {
    "text": "out or when i reach a dead end okay this doesn't make any sense and i",
    "start": "2494560",
    "end": "2499760"
  },
  {
    "text": "say that oh this doesn't make any sense i don't know right and guys uh if you like this content",
    "start": "2499760",
    "end": "2508079"
  },
  {
    "text": "make sure to check the podcast out rate it share it with your friends like this",
    "start": "2508079",
    "end": "2514800"
  },
  {
    "text": "video subscribe all that good stuff and uh i'm gonna see on the next one guys",
    "start": "2514800",
    "end": "2522640"
  },
  {
    "text": "you stay awesome goodbye",
    "start": "2522640",
    "end": "2526559"
  }
]