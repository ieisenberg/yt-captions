[
  {
    "text": "what's going on guys my name is Hussein",
    "start": "359",
    "end": "2679"
  },
  {
    "text": "and I subscribe to the belief that",
    "start": "2679",
    "end": "7160"
  },
  {
    "text": "understanding uh a technology allows us",
    "start": "7160",
    "end": "10400"
  },
  {
    "text": "to build better software on top of it",
    "start": "10400",
    "end": "13839"
  },
  {
    "text": "and I believe the least understandable",
    "start": "13839",
    "end": "17480"
  },
  {
    "text": "technology that and yet the most popular",
    "start": "17480",
    "end": "19760"
  },
  {
    "text": "one is is no JS as a runtime so I spent",
    "start": "19760",
    "end": "24800"
  },
  {
    "text": "seven months or so the better part of",
    "start": "24800",
    "end": "27039"
  },
  {
    "text": "2024 and",
    "start": "27039",
    "end": "28400"
  },
  {
    "text": "2025 uh just delving into the internals",
    "start": "28400",
    "end": "33719"
  },
  {
    "text": "and architecture of nodejs and I found",
    "start": "33719",
    "end": "37120"
  },
  {
    "text": "so much Beauty there so I designed this",
    "start": "37120",
    "end": "40480"
  },
  {
    "text": "particular course that I titled nodejs",
    "start": "40480",
    "end": "43960"
  },
  {
    "text": "internals and architecture to help the",
    "start": "43960",
    "end": "46879"
  },
  {
    "text": "engineer look with nodejs with a",
    "start": "46879",
    "end": "49399"
  },
  {
    "text": "different perspective in a completely",
    "start": "49399",
    "end": "52760"
  },
  {
    "text": "transparent way to write code on top of",
    "start": "52760",
    "end": "56800"
  },
  {
    "text": "nodejs and be able to tell exactly what",
    "start": "56800",
    "end": "62600"
  },
  {
    "text": "happens behind the scene have you ever",
    "start": "62600",
    "end": "64439"
  },
  {
    "text": "run nodejs code and you run it once and",
    "start": "64439",
    "end": "67000"
  },
  {
    "text": "it produce an output and you run it",
    "start": "67000",
    "end": "68960"
  },
  {
    "text": "again and it produce a different output",
    "start": "68960",
    "end": "70880"
  },
  {
    "text": "that is absolutely explainable you can",
    "start": "70880",
    "end": "73520"
  },
  {
    "text": "explain why it happens but only when you",
    "start": "73520",
    "end": "77119"
  },
  {
    "text": "understand the different phases of the",
    "start": "77119",
    "end": "79400"
  },
  {
    "text": "event loop I designed this course to be",
    "start": "79400",
    "end": "82360"
  },
  {
    "text": "three major",
    "start": "82360",
    "end": "83640"
  },
  {
    "text": "sections the first section is the node",
    "start": "83640",
    "end": "87320"
  },
  {
    "text": "architecture what is this V8 engine",
    "start": "87320",
    "end": "90799"
  },
  {
    "text": "why do we need it what how does it work",
    "start": "90799",
    "end": "94240"
  },
  {
    "text": "what is the optimizations it does",
    "start": "94240",
    "end": "96600"
  },
  {
    "text": "compile and to interpret to be specific",
    "start": "96600",
    "end": "100439"
  },
  {
    "text": "this the",
    "start": "100439",
    "end": "101640"
  },
  {
    "text": "JavaScript into executable code what",
    "start": "101640",
    "end": "104840"
  },
  {
    "text": "happens what is the difference between",
    "start": "104840",
    "end": "106119"
  },
  {
    "text": "interpreted code and language and",
    "start": "106119",
    "end": "108680"
  },
  {
    "text": "compile language what is really the the",
    "start": "108680",
    "end": "111079"
  },
  {
    "text": "major difference here so we talk about",
    "start": "111079",
    "end": "113320"
  },
  {
    "text": "that talk about V8 in this architecture",
    "start": "113320",
    "end": "117000"
  },
  {
    "text": "another component another part of the",
    "start": "117000",
    "end": "118719"
  },
  {
    "text": "architecture is the this beautiful",
    "start": "118719",
    "end": "120960"
  },
  {
    "text": "Library that's called",
    "start": "120960",
    "end": "123280"
  },
  {
    "text": "libuv which is responsible for pretty",
    "start": "123280",
    "end": "125680"
  },
  {
    "text": "much anything I owe in",
    "start": "125680",
    "end": "128959"
  },
  {
    "text": "njs what is it what are the",
    "start": "128959",
    "end": "132720"
  },
  {
    "text": "threadpool that exist in it how does",
    "start": "132720",
    "end": "136519"
  },
  {
    "text": "networking Works in this Li in this",
    "start": "136519",
    "end": "140440"
  },
  {
    "text": "Library how do we do IO and the major",
    "start": "140440",
    "end": "143160"
  },
  {
    "text": "component of this is literally the event",
    "start": "143160",
    "end": "146480"
  },
  {
    "text": "Loop what is this event Loop in njz what",
    "start": "146480",
    "end": "149680"
  },
  {
    "text": "are the different phases I have a",
    "start": "149680",
    "end": "151440"
  },
  {
    "text": "lecture for every single phase because",
    "start": "151440",
    "end": "153840"
  },
  {
    "text": "each phase technically deserve its own",
    "start": "153840",
    "end": "156959"
  },
  {
    "text": "lecture you know at 30 minutes or so",
    "start": "156959",
    "end": "159760"
  },
  {
    "text": "just discussing how an input from one",
    "start": "159760",
    "end": "163440"
  },
  {
    "text": "phase goes to the another phase and how",
    "start": "163440",
    "end": "166840"
  },
  {
    "text": "do these are linked and why do sometimes",
    "start": "166840",
    "end": "169760"
  },
  {
    "text": "when I run something I get the output or",
    "start": "169760",
    "end": "173640"
  },
  {
    "text": "flipped all of this can be explainable",
    "start": "173640",
    "end": "176360"
  },
  {
    "text": "once we understand it node packages how",
    "start": "176360",
    "end": "180200"
  },
  {
    "text": "do node packages modules what is the",
    "start": "180200",
    "end": "183840"
  },
  {
    "text": "cost of importing a module what really",
    "start": "183840",
    "end": "186840"
  },
  {
    "text": "happens behind the",
    "start": "186840",
    "end": "188680"
  },
  {
    "text": "scene understand that just calling Fitch",
    "start": "188680",
    "end": "193400"
  },
  {
    "text": "or sorry require module or import module",
    "start": "193400",
    "end": "197760"
  },
  {
    "text": "what's the difference what really",
    "start": "197760",
    "end": "199159"
  },
  {
    "text": "happens behind the scene and and again",
    "start": "199159",
    "end": "202519"
  },
  {
    "text": "you might not be interested and that's",
    "start": "202519",
    "end": "204239"
  },
  {
    "text": "fine and again I'm talking about those",
    "start": "204239",
    "end": "206959"
  },
  {
    "text": "who who look at this piece of technology",
    "start": "206959",
    "end": "210799"
  },
  {
    "text": "and want to kind of explore what's",
    "start": "210799",
    "end": "212640"
  },
  {
    "text": "behind and that that's pretty much all",
    "start": "212640",
    "end": "215040"
  },
  {
    "text": "my courses are like that and",
    "start": "215040",
    "end": "217959"
  },
  {
    "text": "even when you consider taking this",
    "start": "217959",
    "end": "220360"
  },
  {
    "text": "course you'll see me just enjoying the",
    "start": "220360",
    "end": "223840"
  },
  {
    "text": "process of exploring what's behind the",
    "start": "223840",
    "end": "226000"
  },
  {
    "text": "scene and it's so amazing how much stuff",
    "start": "226000",
    "end": "229519"
  },
  {
    "text": "what is promises what's a",
    "start": "229519",
    "end": "231840"
  },
  {
    "text": "promise really in no JS and and we watch",
    "start": "231840",
    "end": "237079"
  },
  {
    "text": "we're going to we're going to watch How",
    "start": "237079",
    "end": "238480"
  },
  {
    "text": "to we distill that that you know",
    "start": "238480",
    "end": "240959"
  },
  {
    "text": "abstraction down to its basic component",
    "start": "240959",
    "end": "244280"
  },
  {
    "text": "it's so beautiful the package managers",
    "start": "244280",
    "end": "246879"
  },
  {
    "text": "how do we link together so that's the",
    "start": "246879",
    "end": "248959"
  },
  {
    "text": "architecture section then we take a",
    "start": "248959",
    "end": "251599"
  },
  {
    "text": "magnifier glass for the second section",
    "start": "251599",
    "end": "255239"
  },
  {
    "text": "node internals now let's go deeper in",
    "start": "255239",
    "end": "259680"
  },
  {
    "text": "every single major component in",
    "start": "259680",
    "end": "264440"
  },
  {
    "text": "note how does node TCP Works how does",
    "start": "264440",
    "end": "270039"
  },
  {
    "text": "node DNS work what are the internals of",
    "start": "270039",
    "end": "273720"
  },
  {
    "text": "node HTTP what are the internals of node",
    "start": "273720",
    "end": "277479"
  },
  {
    "text": "https and I'm now let's link every",
    "start": "277479",
    "end": "280840"
  },
  {
    "text": "single thing we learned in the previous",
    "start": "280840",
    "end": "284280"
  },
  {
    "text": "architecture right here now show me what",
    "start": "284280",
    "end": "288160"
  },
  {
    "text": "happen when I when I receive a request",
    "start": "288160",
    "end": "291199"
  },
  {
    "text": "from the client as a server as a njs",
    "start": "291199",
    "end": "293600"
  },
  {
    "text": "server what phase get executed is it the",
    "start": "293600",
    "end": "296479"
  },
  {
    "text": "poll phase is it the check phase now",
    "start": "296479",
    "end": "298759"
  },
  {
    "text": "what kind of phase",
    "start": "298759",
    "end": "300919"
  },
  {
    "text": "does the request get executed in and why",
    "start": "300919",
    "end": "304919"
  },
  {
    "text": "do we care even well we care because any",
    "start": "304919",
    "end": "308919"
  },
  {
    "text": "delay in any of these phases because of",
    "start": "308919",
    "end": "312680"
  },
  {
    "text": "code you have inserted will delay the",
    "start": "312680",
    "end": "315680"
  },
  {
    "text": "next phase and when you delay the next",
    "start": "315680",
    "end": "318800"
  },
  {
    "text": "phase you are potentially blocking the",
    "start": "318800",
    "end": "322360"
  },
  {
    "text": "main the the the the event Loop and when",
    "start": "322360",
    "end": "325639"
  },
  {
    "text": "you block the event Loop you delay a",
    "start": "325639",
    "end": "329000"
  },
  {
    "text": "potential i o to the network which",
    "start": "329000",
    "end": "333639"
  },
  {
    "text": "thens getting felt by the client or the",
    "start": "333639",
    "end": "337680"
  },
  {
    "text": "server right depends who where are you",
    "start": "337680",
    "end": "340400"
  },
  {
    "text": "looking from it's absolutely amazing",
    "start": "340400",
    "end": "343120"
  },
  {
    "text": "looking at just taking the lib UV",
    "start": "343120",
    "end": "345800"
  },
  {
    "text": "library and then breaking the thread",
    "start": "345800",
    "end": "348479"
  },
  {
    "text": "pole and understanding how it does no",
    "start": "348479",
    "end": "351600"
  },
  {
    "text": "DNS why when I listen on a port without",
    "start": "351600",
    "end": "354800"
  },
  {
    "text": "a host name I can connect immediately",
    "start": "354800",
    "end": "357759"
  },
  {
    "text": "but when I listen with the port and a",
    "start": "357759",
    "end": "361080"
  },
  {
    "text": "host name the the listening gets delayed",
    "start": "361080",
    "end": "365720"
  },
  {
    "text": "I cannot connect immediately it takes me",
    "start": "365720",
    "end": "367800"
  },
  {
    "text": "a while what's the difference there is",
    "start": "367800",
    "end": "370759"
  },
  {
    "text": "no magic it's just pure understanding of",
    "start": "370759",
    "end": "375680"
  },
  {
    "text": "how DNS linked to socket management",
    "start": "375680",
    "end": "379599"
  },
  {
    "text": "linked to how the kernel behave and it's",
    "start": "379599",
    "end": "382400"
  },
  {
    "text": "all explainable and it feels so good",
    "start": "382400",
    "end": "385319"
  },
  {
    "text": "when you understand these kind of things",
    "start": "385319",
    "end": "387280"
  },
  {
    "text": "so I dive into lot lots of stuff here",
    "start": "387280",
    "end": "390479"
  },
  {
    "text": "I'm looking at the lectures here it's",
    "start": "390479",
    "end": "392400"
  },
  {
    "text": "beautiful we talk about node HTTP https",
    "start": "392400",
    "end": "397039"
  },
  {
    "text": "UDP uh uh node streams which is a",
    "start": "397039",
    "end": "400880"
  },
  {
    "text": "completely new abstraction in node that",
    "start": "400880",
    "end": "405000"
  },
  {
    "text": "sits on top of pretty much almost",
    "start": "405000",
    "end": "408240"
  },
  {
    "text": "everything that we use in node like a",
    "start": "408240",
    "end": "412720"
  },
  {
    "text": "request in the client is what was called",
    "start": "412720",
    "end": "416520"
  },
  {
    "text": "a writable stream because it's can",
    "start": "416520",
    "end": "419919"
  },
  {
    "text": "continue right you can continue to write",
    "start": "419919",
    "end": "422240"
  },
  {
    "text": "a request and it take a while because",
    "start": "422240",
    "end": "423960"
  },
  {
    "text": "let's say you're uploading a file uh uh",
    "start": "423960",
    "end": "427160"
  },
  {
    "text": "while a request on the server side is",
    "start": "427160",
    "end": "429000"
  },
  {
    "text": "actually a readable stream you know",
    "start": "429000",
    "end": "431199"
  },
  {
    "text": "because you keep reading stuff processes",
    "start": "431199",
    "end": "434319"
  },
  {
    "text": "thread how do you",
    "start": "434319",
    "end": "436080"
  },
  {
    "text": "clusters how to do socket Management in",
    "start": "436080",
    "end": "439039"
  },
  {
    "text": "nodejs with the cluster module such that",
    "start": "439039",
    "end": "442800"
  },
  {
    "text": "you can distribute connections that is",
    "start": "442800",
    "end": "446080"
  },
  {
    "text": "that are",
    "start": "446080",
    "end": "447319"
  },
  {
    "text": "incoming to nodejs between the different",
    "start": "447319",
    "end": "451120"
  },
  {
    "text": "processes what are the different",
    "start": "451120",
    "end": "453080"
  },
  {
    "text": "scheduling policies what are the",
    "start": "453080",
    "end": "455240"
  },
  {
    "text": "difference uh what's the difference",
    "start": "455240",
    "end": "456560"
  },
  {
    "text": "between them what is the most optimal",
    "start": "456560",
    "end": "458879"
  },
  {
    "text": "what is the limitation currently and",
    "start": "458879",
    "end": "460919"
  },
  {
    "text": "finally after having complete and deep",
    "start": "460919",
    "end": "463879"
  },
  {
    "text": "understanding of the architecture the",
    "start": "463879",
    "end": "466840"
  },
  {
    "text": "internals and the different components",
    "start": "466840",
    "end": "468840"
  },
  {
    "text": "we bring it to the final section the",
    "start": "468840",
    "end": "471199"
  },
  {
    "text": "performance and optimization Ts for",
    "start": "471199",
    "end": "474280"
  },
  {
    "text": "nodejs and these are best practices that",
    "start": "474280",
    "end": "476639"
  },
  {
    "text": "are in the wild",
    "start": "476639",
    "end": "479720"
  },
  {
    "text": "and take best practices always with a",
    "start": "479720",
    "end": "482199"
  },
  {
    "text": "grain of salt whatever is best practice",
    "start": "482199",
    "end": "483800"
  },
  {
    "text": "today may be not in the future but any",
    "start": "483800",
    "end": "488560"
  },
  {
    "text": "best practice anything that we say in",
    "start": "488560",
    "end": "491400"
  },
  {
    "text": "this in this particular section I try to",
    "start": "491400",
    "end": "494919"
  },
  {
    "text": "link it to a why you will always find it",
    "start": "494919",
    "end": "498840"
  },
  {
    "text": "that anything that we mention this is",
    "start": "498840",
    "end": "502479"
  },
  {
    "text": "why callbacks are constant because they",
    "start": "502479",
    "end": "505159"
  },
  {
    "text": "may block the main Loop and if the main",
    "start": "505159",
    "end": "507280"
  },
  {
    "text": "Loop what what's the what's the problem",
    "start": "507280",
    "end": "509280"
  },
  {
    "text": "with blocking the main Loop well if you",
    "start": "509280",
    "end": "512000"
  },
  {
    "text": "block the main Loop then you will delay",
    "start": "512000",
    "end": "514039"
  },
  {
    "text": "the poll phase where what's the problem",
    "start": "514039",
    "end": "515880"
  },
  {
    "text": "with delaying the poll phase then the io",
    "start": "515880",
    "end": "517919"
  },
  {
    "text": "will be delayed what's the problem with",
    "start": "517919",
    "end": "519719"
  },
  {
    "text": "delaying the io well you're not going to",
    "start": "519719",
    "end": "521399"
  },
  {
    "text": "read from files you're not going to",
    "start": "521399",
    "end": "523000"
  },
  {
    "text": "write to files and if you don't write to",
    "start": "523000",
    "end": "525080"
  },
  {
    "text": "files you might cause corruption because",
    "start": "525080",
    "end": "528440"
  },
  {
    "text": "someone accepted something expected",
    "start": "528440",
    "end": "530440"
  },
  {
    "text": "something to be written and it's not",
    "start": "530440",
    "end": "531680"
  },
  {
    "text": "written yet because you delayed it or an",
    "start": "531680",
    "end": "535279"
  },
  {
    "text": "IO might be sent and it was not sent",
    "start": "535279",
    "end": "538880"
  },
  {
    "text": "like a request like you're writing to a",
    "start": "538880",
    "end": "541160"
  },
  {
    "text": "socket and it was not sent back to the",
    "start": "541160",
    "end": "544440"
  },
  {
    "text": "client or back to the server because of",
    "start": "544440",
    "end": "547160"
  },
  {
    "text": "a delay that happens in the loop so how",
    "start": "547160",
    "end": "549839"
  },
  {
    "text": "how can I get around it well we can",
    "start": "549839",
    "end": "552000"
  },
  {
    "text": "schedule it there's so many tips here we",
    "start": "552000",
    "end": "554800"
  },
  {
    "text": "can partition we can partition the",
    "start": "554800",
    "end": "557320"
  },
  {
    "text": "expensive compute we can offload it to",
    "start": "557320",
    "end": "559399"
  },
  {
    "text": "complete thread we can offload it to a",
    "start": "559399",
    "end": "561560"
  },
  {
    "text": "completely different process heck we can",
    "start": "561560",
    "end": "565000"
  },
  {
    "text": "do a C++ add-ons in Nos and I'll show",
    "start": "565000",
    "end": "568880"
  },
  {
    "text": "how to do that",
    "start": "568880",
    "end": "570200"
  },
  {
    "text": "we will if if if the function is so",
    "start": "570200",
    "end": "573000"
  },
  {
    "text": "expensive to be written in JavaScript",
    "start": "573000",
    "end": "575200"
  },
  {
    "text": "we'll write it in C++ and we'll compile",
    "start": "575200",
    "end": "577920"
  },
  {
    "text": "it and we'll link it back to no and",
    "start": "577920",
    "end": "580279"
  },
  {
    "text": "we'll run it and I'll show you even how",
    "start": "580279",
    "end": "582560"
  },
  {
    "text": "to debug C++ code from JavaScript is so",
    "start": "582560",
    "end": "586640"
  },
  {
    "text": "amazing how much you can do with this",
    "start": "586640",
    "end": "588320"
  },
  {
    "text": "stuff I I had so much fun designing this",
    "start": "588320",
    "end": "591480"
  },
  {
    "text": "course and I hope you enjoy it give it a",
    "start": "591480",
    "end": "593680"
  },
  {
    "text": "shot go to node. husin",
    "start": "593680",
    "end": "596440"
  },
  {
    "text": "n.com for a discount coupon and I hope I",
    "start": "596440",
    "end": "599959"
  },
  {
    "text": "see you there thank you so much for all",
    "start": "599959",
    "end": "602160"
  },
  {
    "text": "the support appreciate you guys see you",
    "start": "602160",
    "end": "604560"
  },
  {
    "text": "in the next one",
    "start": "604560",
    "end": "607040"
  }
]