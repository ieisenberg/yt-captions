[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "rabbitmq is an open source distributed message queue written in Erlang and supports many communication protocols it",
    "start": "30",
    "end": "7649"
  },
  {
    "text": "was trying to solve a problem with what we call the spaghetti mesh architecture",
    "start": "7649",
    "end": "13230"
  },
  {
    "text": "you know guys remember where every client is trying to talk to another client in the system",
    "start": "13230",
    "end": "20340"
  },
  {
    "text": "remember guys the days of the enterprise message bus and all this god-awful days",
    "start": "20340",
    "end": "25890"
  },
  {
    "text": "you know so Robbie queue was introduced to solve this problem right by introducing this intermediate layer in",
    "start": "25890",
    "end": "32668"
  },
  {
    "text": "this video we will explain the main basic components of RabbitMQ right and",
    "start": "32669",
    "end": "40500"
  },
  {
    "text": "you got to start seeing jump codes or time codes guys where you want to jump to the interesting topics and and you",
    "start": "40500",
    "end": "47820"
  },
  {
    "text": "don't have to watch the whole videos just whatever you're interested in can jump to that right so we're gonna talk about the rabbit in queue components I",
    "start": "47820",
    "end": "54329"
  },
  {
    "text": "said such as the advance message queue protocol AMQP what is a channel what is",
    "start": "54329",
    "end": "60570"
  },
  {
    "text": "it queue what is a publisher what is a consumer what does an exchange what is all that stuff right and then we're",
    "start": "60570",
    "end": "67020"
  },
  {
    "text": "gonna talk about the meat and potatoes of those and stuff where we will actually spit up our own rabbit MQ",
    "start": "67020",
    "end": "74430"
  },
  {
    "text": "server with docker okay then obviously that's not enough we're gonna write some code we're gonna write our own publisher",
    "start": "74430",
    "end": "81240"
  },
  {
    "text": "that uses no js' okay that publishes to the rabbit in queue server okay and",
    "start": "81240",
    "end": "86490"
  },
  {
    "text": "learn we're gonna write our own consumer piece with JavaScript no J's that will",
    "start": "86490",
    "end": "92549"
  },
  {
    "text": "consume that queue that will consume these messages okay finally guys I want",
    "start": "92549",
    "end": "99360"
  },
  {
    "text": "to talk about my thoughts my personal thoughts about this technology finally",
    "start": "99360",
    "end": "105990"
  },
  {
    "text": "we obviously we're gonna summarize the whole thing all right guys if you new here welcome my name is Husein and in",
    "start": "105990",
    "end": "111930"
  },
  {
    "text": "this channel we discuss all sorts of software engineering by example so if you're gonna become a better software engineer consider subscribing had that",
    "start": "111930",
    "end": "118170"
  },
  {
    "text": "be like and so you didn't notified every time I upload on your video would I say let's just jump into this video guys all",
    "start": "118170",
    "end": "123750"
  },
  {
    "start": "120000",
    "end": "510000"
  },
  {
    "text": "right so we're a bit impure so here's the architecture of RabbitMQ RabbitMQ uses this metal layer and solves as we",
    "start": "123750",
    "end": "132569"
  },
  {
    "text": "talked about so problem where clients want to talk another to other clients in the same",
    "start": "132569",
    "end": "137840"
  },
  {
    "text": "system or external systems and instead of having each client having knowledge of other clients we kind of grouped",
    "start": "137840",
    "end": "144920"
  },
  {
    "text": "everything into this layer okay we call this rabbitmq server rabbitmq server",
    "start": "144920",
    "end": "150470"
  },
  {
    "text": "listens to five seven six seven two port by default because it's a server has to listen right does it's using TCP okay so",
    "start": "150470",
    "end": "157970"
  },
  {
    "text": "that's the first abstraction the rabbitmq serve there is a lot of pieces inside of that I'm not going to go",
    "start": "157970",
    "end": "164450"
  },
  {
    "text": "through that yet but I want to explain that first piece which is the server",
    "start": "164450",
    "end": "169610"
  },
  {
    "text": "this could be multiple servers could be distributed replicated and all that's jazz right but we have this first piece",
    "start": "169610",
    "end": "176780"
  },
  {
    "text": "I don't I didn't you say if the second piece third piece is the publisher where",
    "start": "176780",
    "end": "181940"
  },
  {
    "text": "hey I am a client and I want to publish a message for certain consumers that are interested in this message and we're",
    "start": "181940",
    "end": "189710"
  },
  {
    "text": "going to talk about an actual example guys where we write the code but essentially what the publisher does is",
    "start": "189710",
    "end": "196220"
  },
  {
    "text": "this establishes a stateful TCP connection between itself and there are",
    "start": "196220",
    "end": "202970"
  },
  {
    "text": "between cue server and this is very critical to understand it's a two-way communication Jim so the underlining",
    "start": "202970",
    "end": "211330"
  },
  {
    "text": "transport protocol is TCP okay it's not HDTV okay it's using TCP or TCP and",
    "start": "211330",
    "end": "217850"
  },
  {
    "text": "there's a nice protocol on top of it yeah there are multiple protocol but we are interested in is is the advanced",
    "start": "217850",
    "end": "224510"
  },
  {
    "text": "message queue protocol is like sort of thin header system messages right think of us just like in an application layer",
    "start": "224510",
    "end": "229760"
  },
  {
    "text": "HTTP where it uses TCP right has his own headers and body and gate and methods",
    "start": "229760",
    "end": "235730"
  },
  {
    "text": "and posts right the advanced message cube protocol has its own format as well",
    "start": "235730",
    "end": "242090"
  },
  {
    "text": "it has its own protocol okay so it uses that okay and then it uses that and",
    "start": "242090",
    "end": "247190"
  },
  {
    "text": "publisher can send messages to the server the server can send messages to the publisher so it's a two-way communication very critical to",
    "start": "247190",
    "end": "253790"
  },
  {
    "text": "understand okay so that is a connection so that's the second abstraction a connection third a process is that yeah",
    "start": "253790",
    "end": "260959"
  },
  {
    "text": "so publisher a connection to the server consumer who would consume messages",
    "start": "260959",
    "end": "267760"
  },
  {
    "text": "they will connect again using a stateful two-way bi-directional TCP connection to",
    "start": "267760",
    "end": "276670"
  },
  {
    "text": "the server using the advanced Message protocol there are other protocols but I'm gonna kind of talk about this in this video right so let's focus on just",
    "start": "276670",
    "end": "283390"
  },
  {
    "text": "one protocol here so the AMQP protocols man that's hard to",
    "start": "283390",
    "end": "289480"
  },
  {
    "text": "pronounce all right so a consumer establishes a two-way communication with the server and says hey what's up server",
    "start": "289480",
    "end": "296950"
  },
  {
    "text": "sup give me some messages right so and the server will start posting messages",
    "start": "296950",
    "end": "304320"
  },
  {
    "text": "emphasis on the pushing guys very strong word here the pushing the server pushes",
    "start": "304320",
    "end": "310000"
  },
  {
    "text": "messages to the consumer yeah very interesting okay so the server pushes messages to",
    "start": "310000",
    "end": "316720"
  },
  {
    "text": "the consumer when they are ready okay when they have em messages and there is",
    "start": "316720",
    "end": "322630"
  },
  {
    "text": "the publisher sent messages to the server another abstraction for epidemic queue is what were they called a channel",
    "start": "322630",
    "end": "329140"
  },
  {
    "text": "okay and the channel is a logical connection in your connection it's just",
    "start": "329140",
    "end": "335800"
  },
  {
    "text": "like a mini connection think of it right and the reason they did that they want to separate the consumer connection from",
    "start": "335800",
    "end": "341980"
  },
  {
    "text": "multiple consumers inside that consumer an example would be you would create",
    "start": "341980",
    "end": "347140"
  },
  {
    "text": "this consumer have three channels using the same TCP connection and the reason",
    "start": "347140",
    "end": "353860"
  },
  {
    "text": "they're using that is just instead of if you're trying to like instead of having",
    "start": "353860",
    "end": "359110"
  },
  {
    "text": "three consumers having three TCP connections let's have one consumers or three channels with one TCP connection",
    "start": "359110",
    "end": "365500"
  },
  {
    "text": "this is called multiplexing where you bring a lot of stuff into one pipe and",
    "start": "365500",
    "end": "371170"
  },
  {
    "text": "that's a good thing I like this about it I like it a lot right you can use the same TCP connection but you can send",
    "start": "371170",
    "end": "377320"
  },
  {
    "text": "certain bits with the channel ID say hey this is by the way this belong to this channel this belongs to this channel",
    "start": "377320",
    "end": "382930"
  },
  {
    "text": "this belongs to this channel so they can segregate and do certain things based on that so that's an a nice abstraction",
    "start": "382930",
    "end": "388870"
  },
  {
    "text": "right a channel okay same thing with the publisher so you can send through a",
    "start": "388870",
    "end": "394050"
  },
  {
    "text": "searching channel okay if you don't have channels then the publisher let's say",
    "start": "394050",
    "end": "400360"
  },
  {
    "text": "you write up publisher that does more than one thing okay you have you will be forced to use",
    "start": "400360",
    "end": "406900"
  },
  {
    "text": "multiple publishers instead of kind of putting all your code into one publisher",
    "start": "406900",
    "end": "412870"
  },
  {
    "text": "or one consumer right another abstraction is what that Hugh stands for",
    "start": "412870",
    "end": "418060"
  },
  {
    "text": "is the queue right all of this stuff goes into the queues okay so the queue",
    "start": "418060",
    "end": "423880"
  },
  {
    "text": "is that he you send an information goes to the queue and then other the consumer",
    "start": "423880",
    "end": "428920"
  },
  {
    "text": "will basically pull information from the queue right and then that's that's where the queue is right but however that's",
    "start": "428920",
    "end": "436480"
  },
  {
    "text": "very important the publisher and consumer are not aware of queues yeah technically they are aware of what they",
    "start": "436480",
    "end": "443050"
  },
  {
    "text": "call exchanges and that's the seventh abstraction on this rabbit in queue yeah",
    "start": "443050",
    "end": "448990"
  },
  {
    "text": "there is an exchange where the whole thing is is an exchange there's a default exchange and you send all this",
    "start": "448990",
    "end": "454390"
  },
  {
    "text": "stuff to an exchange and that will take care of propagating into a queue right you don't have to know about this we're",
    "start": "454390",
    "end": "461320"
  },
  {
    "text": "not going to talk about exchanges well we're gonna use the default exchange with take zero care about a lot of stuff",
    "start": "461320",
    "end": "467110"
  },
  {
    "text": "right an exchange can be used to use different algorithms to to kinda fan out",
    "start": "467110",
    "end": "473560"
  },
  {
    "text": "and do around droppin into different queues but that's that's out of the",
    "start": "473560",
    "end": "479260"
  },
  {
    "text": "scope of the video as well because we have exchanges we have queues but let's let's just think about the concept of a",
    "start": "479260",
    "end": "485470"
  },
  {
    "text": "queue where you put a messages publisher publicity message goes to the queue consumer consumes a message from a queue",
    "start": "485470",
    "end": "492190"
  },
  {
    "text": "and the exchange is that default exchange thing right you can have multiple exchanges as well all right",
    "start": "492190",
    "end": "497650"
  },
  {
    "text": "guys how about we spin up our or about in queue and we play with this thing",
    "start": "497650",
    "end": "503020"
  },
  {
    "text": "okay all right guys so to spin up our own rabbit MQ server I'm not gonna tell",
    "start": "503020",
    "end": "509710"
  },
  {
    "text": "you to download and install that thing right you don't have to pull it to your machine with with your with these",
    "start": "509710",
    "end": "514990"
  },
  {
    "start": "510000",
    "end": "660000"
  },
  {
    "text": "installers so what do you have to do is just install docker make sure you can say docker and you get some sort of a",
    "start": "514990",
    "end": "522099"
  },
  {
    "text": "feedback here and you make sure to you can do docker run hello - word if this",
    "start": "522099",
    "end": "529690"
  },
  {
    "text": "gives you back hello docker that means you have docker and stop once you have dr. install we're gonna",
    "start": "529690",
    "end": "536050"
  },
  {
    "text": "spin up our own rabbit MQ message container for you well and that message",
    "start": "536050",
    "end": "544480"
  },
  {
    "text": "container my message server that container will have a rabbitmq server from which we will start writing code",
    "start": "544480",
    "end": "551350"
  },
  {
    "text": "okay and we're going to talk about what we're gonna write but let's first spin up that thing how do we do it very",
    "start": "551350",
    "end": "558180"
  },
  {
    "text": "simple okay so first thing we want to do is write docker run okay and boy always make it a",
    "start": "558180",
    "end": "569620"
  },
  {
    "text": "habit to give your container a name let's give it a name rabbit in queue okay and then once we give it a name we",
    "start": "569620",
    "end": "577420"
  },
  {
    "text": "will expose the port of that container to my machine so I can communicate with",
    "start": "577420",
    "end": "584230"
  },
  {
    "text": "it right so that's essentially what's the default port of RabbitMQ you have to memorize that five six seven two right",
    "start": "584230",
    "end": "591250"
  },
  {
    "text": "and what is that's what I want to expose to my machine this could be anything right the second part of five six seven",
    "start": "591250",
    "end": "598300"
  },
  {
    "text": "two is what is inside your container right so that has to stay that has to",
    "start": "598300",
    "end": "605950"
  },
  {
    "text": "stay five six seven - this could be anything you want okay and then also",
    "start": "605950",
    "end": "611650"
  },
  {
    "text": "just use this default thing okay and then finally we do rabbit in queue and",
    "start": "611650",
    "end": "618340"
  },
  {
    "text": "that's the image from which we're gonna pull the RabbitMQ docker image from",
    "start": "618340",
    "end": "623410"
  },
  {
    "text": "which we're gonna spend a container let's go ahead and spin that and just like that we're gonna start downloading all that",
    "start": "623410",
    "end": "629680"
  },
  {
    "text": "stuff right and then yeah just like that",
    "start": "629680",
    "end": "636000"
  },
  {
    "text": "this terminal is now occupied all right so this you can start seeing the messages that goes into this docker",
    "start": "636000",
    "end": "643050"
  },
  {
    "text": "container which is the RabbitMQ okay now we have a container that is",
    "start": "643050",
    "end": "649600"
  },
  {
    "text": "running and half rabbitmq what we're gonna build with this technology here is we're gonna build we will build an",
    "start": "649600",
    "end": "655570"
  },
  {
    "text": "asynchronous job execution okay engine and how this works is essentially we'll",
    "start": "655570",
    "end": "662470"
  },
  {
    "start": "660000",
    "end": "1230000"
  },
  {
    "text": "have a publisher that will publish jobs say hey consumers I want you to execute",
    "start": "662470",
    "end": "667570"
  },
  {
    "text": "this job this job and then there was nudey Atticus consumer which is essentially a",
    "start": "667570",
    "end": "673000"
  },
  {
    "text": "process that will take that job and start executing it right this could be like think of it like you you're",
    "start": "673000",
    "end": "679480"
  },
  {
    "text": "publishing tasks and these tasks are executed by actual processes right and",
    "start": "679480",
    "end": "684550"
  },
  {
    "text": "this could be heavy process like I don't know calculating the prime number or certain number or finding or going to",
    "start": "684550",
    "end": "692079"
  },
  {
    "text": "the database and doing a batch job or doing a Hadoop job right and MapReduce",
    "start": "692079",
    "end": "697300"
  },
  {
    "text": "right so all kind of job we're gonna publish it to the queue we're gonna publish it to the rabbit in queue",
    "start": "697300",
    "end": "702930"
  },
  {
    "text": "message and then that consumers will start pulling the nonstop polling they",
    "start": "702930",
    "end": "710379"
  },
  {
    "text": "will get that message that get that job and start executing it all right so now",
    "start": "710379",
    "end": "715779"
  },
  {
    "text": "we know what we're gonna build let's go ahead and build it up guys so what are we gonna need here is you're gonna",
    "start": "715779",
    "end": "721689"
  },
  {
    "text": "install Visual Studio code or any favorite editor you have I'm gonna use",
    "start": "721689",
    "end": "727120"
  },
  {
    "text": "nodejs as my execution engine here to build my publisher and consumer and",
    "start": "727120",
    "end": "734110"
  },
  {
    "text": "here's what I'm gonna build right so let's go ahead and build a publisher okay my publisher and consumer will live",
    "start": "734110",
    "end": "741250"
  },
  {
    "text": "in the same project that's okay because we're gonna do have a different kind of input to things right so let's go ahead",
    "start": "741250",
    "end": "748240"
  },
  {
    "text": "and build the project so you go go ahead and go file up in and then we'll go to",
    "start": "748240",
    "end": "754480"
  },
  {
    "text": "JavaScript here playground that's great a project called rabbit in queue just a",
    "start": "754480",
    "end": "761079"
  },
  {
    "text": "blank folder we're gonna go ahead and create a publisher das file and here's",
    "start": "761079",
    "end": "769209"
  },
  {
    "text": "the thing guys let's go ahead and initialize npm so we create a project in",
    "start": "769209",
    "end": "775829"
  },
  {
    "text": "PM in it that's white right that means shut up I know what I'm doing just and",
    "start": "775829",
    "end": "781990"
  },
  {
    "text": "give me a package to Jason we're gonna use that later and now here's what I want to do I'm going to create a Const",
    "start": "781990",
    "end": "789279"
  },
  {
    "text": "and then what we want to do is we talked about this a little bit and when we",
    "start": "789279",
    "end": "795189"
  },
  {
    "text": "explain that right and we talked about RabbitMQ uses the advanced message queue",
    "start": "795189",
    "end": "801160"
  },
  {
    "text": "Pro a mq p and this protocol has a lot of",
    "start": "801160",
    "end": "806299"
  },
  {
    "text": "clients and nodejs has that client so i'm gonna create an advanced message queue protocol instance and then we're",
    "start": "806299",
    "end": "814879"
  },
  {
    "text": "gonna call that library she's called at a advanced message queue protocol library okay that's what scope and",
    "start": "814879",
    "end": "822079"
  },
  {
    "text": "that's a promise based library which is amazing because we love prime fssi this stuff it's using i think blue bird to promoter",
    "start": "822079",
    "end": "830569"
  },
  {
    "text": "modify from of his kata can't pronounce anything promised if i this things okay",
    "start": "830569",
    "end": "836869"
  },
  {
    "text": "so i have that so the what is the first apply abstraction we do right we're",
    "start": "836869",
    "end": "842419"
  },
  {
    "text": "gonna create a connection to my server do you remember where my servers running do you remember the port guys i hope you",
    "start": "842419",
    "end": "848989"
  },
  {
    "text": "do yeah because that we're gonna use that but first of all since we're gonna use and a promise based thing that's great a",
    "start": "848989",
    "end": "856669"
  },
  {
    "text": "function obviously it's gonna be an async function i'm gonna call it connect right can call it publish anything you",
    "start": "856669",
    "end": "863839"
  },
  {
    "text": "want and we're gonna do a try/catch just to catch any bad things right and then",
    "start": "863839",
    "end": "871610"
  },
  {
    "text": "console does law error yeah just just the list kill it in here and here's the",
    "start": "871610",
    "end": "878239"
  },
  {
    "text": "first thing we're gonna do we're gonna do a connection create a connection how",
    "start": "878239",
    "end": "885290"
  },
  {
    "text": "do we do that a mq p dot connect that's not hard what do you expect you want a string",
    "start": "885290",
    "end": "892399"
  },
  {
    "text": "from me what's the URL here's the URL guys since we're using the advanced message queue protocol that's the",
    "start": "892399",
    "end": "901129"
  },
  {
    "text": "protocol are you using and since my rabbit mq is used running online mac it's gonna be localhost or",
    "start": "901129",
    "end": "907489"
  },
  {
    "text": "the machine so what is the port guys it's five six seven two I can memorize",
    "start": "907489",
    "end": "912769"
  },
  {
    "text": "that thing okay and here's the thing guys since this is a returns a promise right it's a blooper that means it's a",
    "start": "912769",
    "end": "920359"
  },
  {
    "text": "promise you gotta await that thing await that thing and here's my TCP connection",
    "start": "920359",
    "end": "927589"
  },
  {
    "text": "remember there's another abstraction or the rabbitmq which is called the channel which is just one channel that goes in",
    "start": "927589",
    "end": "934699"
  },
  {
    "text": "your connects so you can create I don't know how what's the maximum number of channels per connection but you have to create a",
    "start": "934699",
    "end": "941300"
  },
  {
    "text": "channel because that that's the channel of communication so that's not enough so",
    "start": "941300",
    "end": "946310"
  },
  {
    "text": "let's create a channel how do you create a channel again you away the connection dot create channel that sounds not hard",
    "start": "946310",
    "end": "954019"
  },
  {
    "text": "at all okay that creates also that's a promise base that means ook will be awaited there is a rejected promise we",
    "start": "954019",
    "end": "960199"
  },
  {
    "text": "go go here you can use then dot then up to you guys but here's the thing now we",
    "start": "960199",
    "end": "965720"
  },
  {
    "text": "have a channel what do we do right the idea here is we gonna publish to a queue",
    "start": "965720",
    "end": "973940"
  },
  {
    "text": "ok RabbitMQ documentation says the client doesn't know offer queue I kind",
    "start": "973940",
    "end": "980000"
  },
  {
    "text": "of disagree because I write a queue job I literally specify the queue name in my",
    "start": "980000",
    "end": "985579"
  },
  {
    "text": "publisher that means don't tell me that the client is not aware of that queue it just doesn't make any sense to me alright so the coin is aware of a queue",
    "start": "985579",
    "end": "993110"
  },
  {
    "text": "right but internally you kind of publish to an exchange but I don't know it's",
    "start": "993110",
    "end": "998120"
  },
  {
    "text": "just hole just mumbo-jumbo abstraction to me right I don't I don't believe in any of that so a channel can do",
    "start": "998120",
    "end": "1007149"
  },
  {
    "text": "something called assert cue and that assert cue will make sure that your",
    "start": "1007149",
    "end": "1013480"
  },
  {
    "text": "queue exists on the server and if it doesn't you're gonna create it for you so what do we do we're gonna create a",
    "start": "1013480",
    "end": "1019569"
  },
  {
    "text": "queue that's called jobs and let's just use that default there's like whether",
    "start": "1019569",
    "end": "1026110"
  },
  {
    "text": "you want it durable that means the persistent disk or not let's just use the defaults here okay and then const",
    "start": "1026110",
    "end": "1032220"
  },
  {
    "text": "result equal await since this is also going through the tcp you get out away",
    "start": "1032220",
    "end": "1039130"
  },
  {
    "text": "because the it's gonna take some time i weight everything and then to know basically if you see blue Bluebird as a",
    "start": "1039130",
    "end": "1045308"
  },
  {
    "text": "result that means it it's a promise based okay we got a result now we got a queue what do we asserted that we have a",
    "start": "1045309",
    "end": "1052659"
  },
  {
    "text": "queue if you don't do this you might get an error of the second statement so here's the thing what do we do now I",
    "start": "1052659",
    "end": "1059830"
  },
  {
    "text": "want to send something sent to a queue what do we send which queue which Q are",
    "start": "1059830",
    "end": "1065830"
  },
  {
    "text": "sending here I'm gonna send to the jobs queue what do you want to send son I'm gonna",
    "start": "1065830",
    "end": "1071380"
  },
  {
    "text": "send an array of buffer essentially which is it's just like a buffer and the buffer is you have to send a buffer and",
    "start": "1071380",
    "end": "1079030"
  },
  {
    "text": "to send a buffer you can do offer from and then pass a string so let's just send adjacent object here and then let's",
    "start": "1079030",
    "end": "1088570"
  },
  {
    "text": "just do a message with our message here what should a message what are we gonna do const message equal let's say I'm",
    "start": "1088570",
    "end": "1096549"
  },
  {
    "text": "gonna send a number here okay and this is the JSON object with the number to my",
    "start": "1096549",
    "end": "1103059"
  },
  {
    "text": "notes 19 and then I'm gonna send that JSON object so you can't send just the",
    "start": "1103059",
    "end": "1109570"
  },
  {
    "text": "JSON object as as it is you have to string if I it so you're gonna do string jason-2 string if I message and that",
    "start": "1109570",
    "end": "1117490"
  },
  {
    "text": "string will become a buffer so you obviously need to send a buffer you can",
    "start": "1117490",
    "end": "1123309"
  },
  {
    "text": "also if you want just to send text say hi you can do that alright but we want to be fancy or guys we want to be fancy",
    "start": "1123309",
    "end": "1129970"
  },
  {
    "text": "okay we send a job what else guys is that L as I roll that's it so we can if",
    "start": "1129970",
    "end": "1137830"
  },
  {
    "text": "you want to you can close the connection here okay and just be happy but let's",
    "start": "1137830",
    "end": "1145179"
  },
  {
    "text": "just just say console dot log let's say job sent successfully",
    "start": "1145179",
    "end": "1152130"
  },
  {
    "text": "alright and what's the job that's the job what's the job",
    "start": "1152130",
    "end": "1161070"
  },
  {
    "text": "the jobbers no number I don't know you were sending a number and that the",
    "start": "1161070",
    "end": "1167169"
  },
  {
    "text": "process will take that number and process that and but right think of it as an input you're sending a message to",
    "start": "1167169",
    "end": "1173020"
  },
  {
    "text": "the queue and then one of the your processes will pick that and start processing that okay whatever it's gonna",
    "start": "1173020",
    "end": "1179559"
  },
  {
    "text": "do whatever right okay how about we run this thing guys before we run we have to",
    "start": "1179559",
    "end": "1187510"
  },
  {
    "text": "call this function we never called it so as the other I don't run it and hopefully that works let's do I might it",
    "start": "1187510",
    "end": "1195010"
  },
  {
    "text": "might fail because I didn't install yep cannot find module am QB let well how do",
    "start": "1195010",
    "end": "1202090"
  },
  {
    "text": "we in stole a module very simple sir we do npm",
    "start": "1202090",
    "end": "1207490"
  },
  {
    "text": "install a m QP lib just for you to see",
    "start": "1207490",
    "end": "1212770"
  },
  {
    "text": "it guys we have to install the library that we use it doesn't come default by not with no GS okay now we have it",
    "start": "1212770",
    "end": "1220770"
  },
  {
    "text": "what's wrong I'm gonna by the way guys give you the coach I don't have to worry",
    "start": "1220770",
    "end": "1227080"
  },
  {
    "text": "about pausing the video and general all that stuff right there that get a channel after we get the channel we got",
    "start": "1227080",
    "end": "1233260"
  },
  {
    "start": "1230000",
    "end": "2030000"
  },
  {
    "text": "the channel successfully what is the result what is that so it gives you back the Q essentially so we can print that Q",
    "start": "1233260",
    "end": "1240460"
  },
  {
    "text": "if you want okay and then that's sense to the job and then we say job send successfully and then obviously my",
    "start": "1240460",
    "end": "1247660"
  },
  {
    "text": "debugger still running because we didn't kill the connection right so it might be a good idea just to kill the connection afterwards okay so we submitted",
    "start": "1247660",
    "end": "1255400"
  },
  {
    "text": "something to the Q how about we consume it guys so that's create I know that another one",
    "start": "1255400",
    "end": "1262020"
  },
  {
    "text": "write another one confirm our Joss who",
    "start": "1262020",
    "end": "1267940"
  },
  {
    "text": "is a consumer it's the same code almost the same code so here's what I we do",
    "start": "1267940",
    "end": "1273420"
  },
  {
    "text": "same mq so it's just it's just steel code guys because it's almost the same",
    "start": "1273420",
    "end": "1280480"
  },
  {
    "text": "but I don't want to do all this mumbo-jumbo right I don't want to send",
    "start": "1280480",
    "end": "1286810"
  },
  {
    "text": "anything to the queue I want to do something else so just delete that all",
    "start": "1286810",
    "end": "1293950"
  },
  {
    "text": "right okay so that's I don't think I need a message because I'm consuming",
    "start": "1293950",
    "end": "1299500"
  },
  {
    "text": "messages here so we connect to the server we get the channel because you",
    "start": "1299500",
    "end": "1307000"
  },
  {
    "text": "have to do a channel by the way this channel is different than the channel the publisher they are completely different channels right they are",
    "start": "1307000",
    "end": "1313660"
  },
  {
    "text": "completely different TCP connections to begin with right so what I want to do here is we have to keep the consumer",
    "start": "1313660",
    "end": "1322990"
  },
  {
    "text": "alive unlike the publisher publisher you can actually kill the connection if you want after you're done but you might",
    "start": "1322990",
    "end": "1328930"
  },
  {
    "text": "want to keep the client the consumer happy and dandy so what do you want to",
    "start": "1328930",
    "end": "1334540"
  },
  {
    "text": "do is that console the law listen waiting for messages something",
    "start": "1334540",
    "end": "1341500"
  },
  {
    "text": "like that right we're just waiting for messages but how how do i do how do I get messages well you do this channel",
    "start": "1341500",
    "end": "1351220"
  },
  {
    "text": "dot couldn't zoom and guess what what do you consume guys you consume a",
    "start": "1351220",
    "end": "1357060"
  },
  {
    "text": "queue and what's the queue name it's called jobs and what do you want to do",
    "start": "1357060",
    "end": "1362430"
  },
  {
    "text": "when you consume a job I want you sir to call this function when a message comes",
    "start": "1362430",
    "end": "1369610"
  },
  {
    "text": "in okay and here's what I want to do I just want to do console dot log all right and then just print name message",
    "start": "1369610",
    "end": "1378430"
  },
  {
    "text": "okay and then uncle pay attention to it will happen here I'm gonna run this",
    "start": "1378430",
    "end": "1384070"
  },
  {
    "text": "thing now I'm gonna run the consumer and I see what will happen this is a debug I",
    "start": "1384070",
    "end": "1390460"
  },
  {
    "text": "put a debug here so after if the after the connection if the server which is",
    "start": "1390460",
    "end": "1398200"
  },
  {
    "text": "RabbitMQ sent me as a consumer and message I am going it triggered here",
    "start": "1398200",
    "end": "1403540"
  },
  {
    "text": "and here's what would I do what would I do",
    "start": "1403540",
    "end": "1408790"
  },
  {
    "text": "I just want to print where we got oh we went to the publisher for some reason I don't want that all right so let's run",
    "start": "1408790",
    "end": "1416020"
  },
  {
    "text": "my consumer ooh",
    "start": "1416020",
    "end": "1419400"
  },
  {
    "text": "nice look at that so we got a message what does this message have it has a",
    "start": "1421510",
    "end": "1428830"
  },
  {
    "text": "content that's the buffer we got guys remember we sent the buffer we get a",
    "start": "1428830",
    "end": "1434080"
  },
  {
    "text": "buffer back how do we get from the buffer we get a string back which is what we're interested in we're gonna",
    "start": "1434080",
    "end": "1439990"
  },
  {
    "text": "talk about that so it's it's unreadable so let's make it into but we didn't quite do to get the message which is",
    "start": "1439990",
    "end": "1446110"
  },
  {
    "text": "pretty cool - guys alright so here's what I wanna do if I just start it again",
    "start": "1446110",
    "end": "1452580"
  },
  {
    "text": "what I thought a queue when you just read the message the message is DQ'd",
    "start": "1452580",
    "end": "1460090"
  },
  {
    "text": "right but every time I restart the consumer I always get the same message again let's print it so we can we can",
    "start": "1460090",
    "end": "1466930"
  },
  {
    "text": "see content the to string just let's see what we get as a as a consumer",
    "start": "1466930",
    "end": "1475169"
  },
  {
    "text": "and look at that we got the number 19 okay it's a little bit boring so let's",
    "start": "1475470",
    "end": "1484270"
  },
  {
    "text": "make it into actual Jason right input equal Jason dot parse right how this is",
    "start": "1484270",
    "end": "1492220"
  },
  {
    "text": "how you convert a string back to Jason baby we get the patient and then we do a",
    "start": "1492220",
    "end": "1498490"
  },
  {
    "text": "console dot log received job with input",
    "start": "1498490",
    "end": "1507690"
  },
  {
    "text": "input dot number right that's so what's the function and then let's do the fancy",
    "start": "1507690",
    "end": "1513370"
  },
  {
    "text": "text here template letter literals all",
    "start": "1513370",
    "end": "1518710"
  },
  {
    "text": "right guys let's do that consume again we got it get it then we get receive job",
    "start": "1518710",
    "end": "1526900"
  },
  {
    "text": "with input 19 now you can take that number query the database do your thing and here's the interesting part guys",
    "start": "1526900",
    "end": "1534960"
  },
  {
    "text": "the reason we keep receiving the same message over and over and over and over and over again right is because we did",
    "start": "1534960",
    "end": "1544030"
  },
  {
    "text": "not tell the server that we have received it as a consumer that's what's",
    "start": "1544030",
    "end": "1549640"
  },
  {
    "text": "called acknowledgment I didn't talk about that but we're gonna we're gonna talk about a little bit now okay so why",
    "start": "1549640",
    "end": "1555550"
  },
  {
    "text": "do we do what do we do alright so let me first clean up some",
    "start": "1555550",
    "end": "1561100"
  },
  {
    "text": "some of stuff guys right I want to do it stirs to certain thing I want to create an S script here and NPM so that if I do",
    "start": "1561100",
    "end": "1568360"
  },
  {
    "text": "NPM ROM publish right I will run node",
    "start": "1568360",
    "end": "1575130"
  },
  {
    "text": "publisher yes okay that's what I want to do and if someone says consume I'm gonna",
    "start": "1575130",
    "end": "1582820"
  },
  {
    "text": "do a guru node consumers I would call Joe to Jess okay this way if I do if I",
    "start": "1582820",
    "end": "1589540"
  },
  {
    "text": "go to a terminal how do I clear this thing right if I do I come and I do MPM",
    "start": "1589540",
    "end": "1598390"
  },
  {
    "text": "run publish I'm gonna publish the message and let's kill it if",
    "start": "1598390",
    "end": "1604029"
  },
  {
    "text": "I do npm run consume I'm gonna consume that message and you can see I received",
    "start": "1604029",
    "end": "1610299"
  },
  {
    "text": "two jobs with the same ID because I just published another one another thing I want to fix here let's kill this job in",
    "start": "1610299",
    "end": "1616739"
  },
  {
    "text": "the publish I want to get I want to",
    "start": "1616739",
    "end": "1622059"
  },
  {
    "text": "publish a number that the user sends me how do I do that right as I wouldn't do",
    "start": "1622059",
    "end": "1627429"
  },
  {
    "text": "MPM run publish and then I put a number and that number will be published this",
    "start": "1627429",
    "end": "1632739"
  },
  {
    "text": "way we are always hard coding the number 19 we don't like that right so here's what I want to do to do that kinda",
    "start": "1632739",
    "end": "1639609"
  },
  {
    "text": "hockey but why not so the process dot RB and I believe it's the third element of",
    "start": "1639609",
    "end": "1648669"
  },
  {
    "text": "the input will be the input right",
    "start": "1648669",
    "end": "1654489"
  },
  {
    "text": "because the I think 0 is the node J esterday XE or or ever in your mac was",
    "start": "1654489",
    "end": "1660429"
  },
  {
    "text": "it Cola for God the second thing is the path to the JavaScript the third thing is the input right so if I do that that",
    "start": "1660429",
    "end": "1666759"
  },
  {
    "text": "will be the input so let's try it out so now if I do in p.m. run this woman here",
    "start": "1666759",
    "end": "1675849"
  },
  {
    "text": "so you can see NPR unpublish 8 jobs in",
    "start": "1675849",
    "end": "1681969"
  },
  {
    "text": "successfully 8 alright that's pretty cool if I do MPM run consume yeah we got",
    "start": "1681969",
    "end": "1690179"
  },
  {
    "text": "1919 and 8 ok so we keep getting these jobs here's the thing now ok so we now",
    "start": "1690179",
    "end": "1696639"
  },
  {
    "text": "have that let's get out of this and show you that we can actually run it out of the terminal guys' doesn't have to be in",
    "start": "1696639",
    "end": "1703989"
  },
  {
    "text": "the visual studio code so let's go ahead and do something fancier here I'm going to create a new terminal right let's go",
    "start": "1703989",
    "end": "1716109"
  },
  {
    "text": "ahead and create another terminal here alright so I have two terminals here",
    "start": "1716109",
    "end": "1723129"
  },
  {
    "text": "we're gonna do you go to the same folder which is I think old JavaScript JavaScript playground and then it's",
    "start": "1723129",
    "end": "1729669"
  },
  {
    "text": "called rabbitmq right and then what I'm gonna do is npm run publish seven and",
    "start": "1729669",
    "end": "1735869"
  },
  {
    "text": "just publish seven six and I'm gonna do here is go to the same folder JavaScript jobs could playing on",
    "start": "1735869",
    "end": "1742990"
  },
  {
    "text": "the rabbit in queue and then NPM corn run consume and then we can see that we",
    "start": "1742990",
    "end": "1750039"
  },
  {
    "text": "got all of them now okay so that's just another way of consuming stuff here's",
    "start": "1750039",
    "end": "1755860"
  },
  {
    "text": "the thing guys the last thing before we end this video with the exercises I want",
    "start": "1755860",
    "end": "1761590"
  },
  {
    "text": "to tell the server server please DQ this job because I have processed it how do",
    "start": "1761590",
    "end": "1767350"
  },
  {
    "text": "we do that here's way we do go back to the code the",
    "start": "1767350",
    "end": "1774429"
  },
  {
    "text": "consumer job is to DQ or to acknowledge",
    "start": "1774429",
    "end": "1779889"
  },
  {
    "text": "that they received that job in order for the server to bullet from the queue okay",
    "start": "1779889",
    "end": "1786389"
  },
  {
    "text": "and there's a lot of stuff here this is a complicated topic Kafka's have their",
    "start": "1786389",
    "end": "1793750"
  },
  {
    "text": "own implementation of how like guarantees of delivery like at least",
    "start": "1793750",
    "end": "1800169"
  },
  {
    "text": "once or at most once or exactly one right so there is like a lot of",
    "start": "1800169",
    "end": "1805240"
  },
  {
    "text": "guarantees I which I'm not gonna go through this because it's just gonna get longer and longer but there'll be",
    "start": "1805240",
    "end": "1810340"
  },
  {
    "text": "another topic to discuss but the RabbitMQ guarantees I think at least",
    "start": "1810340",
    "end": "1817480"
  },
  {
    "text": "once delivery or at most once it cannot guarantee that it exactly you received",
    "start": "1817480",
    "end": "1822909"
  },
  {
    "text": "it once right it's just a little bit tricky stuff that people take PhD in",
    "start": "1822909",
    "end": "1828399"
  },
  {
    "text": "right this is really complicated because even above my head really it's just",
    "start": "1828399",
    "end": "1833500"
  },
  {
    "text": "really complicated stuff all right so here's one of if I received a message I want to acknowledge their message",
    "start": "1833500",
    "end": "1841470"
  },
  {
    "text": "certain thing let's say if the input dot number is equal equal seven they started",
    "start": "1841470",
    "end": "1848110"
  },
  {
    "text": "out I just want to process number seven for some reason right I don't want to process all the cues go ahead and do",
    "start": "1848110",
    "end": "1855510"
  },
  {
    "text": "channel dot ACK and you can acknowledge everything you cannot know just a",
    "start": "1855510",
    "end": "1862269"
  },
  {
    "text": "certain message so I'm gonna acknowledge this particular message which is golden message right when a message is received",
    "start": "1862269",
    "end": "1869230"
  },
  {
    "text": "if that message is satisfy certain criteria let's say you went to the database and you process and",
    "start": "1869230",
    "end": "1875349"
  },
  {
    "text": "you get a successful message you process that you run your Hadoop job you gotto all of that stuff you're on your",
    "start": "1875349",
    "end": "1883200"
  },
  {
    "text": "everything and you got back the results you want the way you want it then you can tell the server it's safe to remove",
    "start": "1883200",
    "end": "1889419"
  },
  {
    "text": "it from your queue and that's what acknowledging me okay let's go ahead and acknowledge this thing only okay seven",
    "start": "1889419",
    "end": "1895690"
  },
  {
    "text": "if I go back here and I say npm run consume you can see that i receive job",
    "start": "1895690",
    "end": "1902229"
  },
  {
    "text": "with all of them again but this one was acknowledged but it doesn't show here so",
    "start": "1902229",
    "end": "1907389"
  },
  {
    "text": "now if i kill that consume a night run another consumer you can see that is",
    "start": "1907389",
    "end": "1912399"
  },
  {
    "text": "still there this is a problem with it's it's my problem now i'm gonna show it",
    "start": "1912399",
    "end": "1918309"
  },
  {
    "text": "tell you exactly why it's a just a javascript something it was javascript right so i don't you alright",
    "start": "1918309",
    "end": "1924519"
  },
  {
    "text": "the problem was not acknowledged is because i think this is this is a very",
    "start": "1924519",
    "end": "1933099"
  },
  {
    "text": "javascript ething right where i told it hey if the number is exactly equal seven and the type is also matching right but",
    "start": "1933099",
    "end": "1941349"
  },
  {
    "text": "i bet that this number is actually a string right it's not actually seven so if I do just double equal this will work",
    "start": "1941349",
    "end": "1947769"
  },
  {
    "text": "so let's go ahead and do that all right so what what happens here is equally",
    "start": "1947769",
    "end": "1953019"
  },
  {
    "text": "code there are friends quickly really quick triple equal that means the numbers the the values do match without",
    "start": "1953019",
    "end": "1959200"
  },
  {
    "text": "implicit conversion right that means if this is a number that second side has to",
    "start": "1959200",
    "end": "1964239"
  },
  {
    "text": "be a number if you say just equal like what that means this is true right if",
    "start": "1964239",
    "end": "1974589"
  },
  {
    "text": "you do this is yeah let's just iterator this is true but if you do this this is",
    "start": "1974589",
    "end": "1982899"
  },
  {
    "text": "actually false all right as is the difference okay so now that we actually coerced it let's go ahead back to the",
    "start": "1982899",
    "end": "1990579"
  },
  {
    "text": "terminal and clear and p.m. run consume",
    "start": "1990579",
    "end": "1996489"
  },
  {
    "text": "you can see that we have acknowledged and hopefully this time run it again and",
    "start": "1996489",
    "end": "2001950"
  },
  {
    "text": "then it's no longer there all right guys long video but hopefully you hope you",
    "start": "2001950",
    "end": "2010100"
  },
  {
    "text": "got some benefit from it so let's jump back to the slides continue this beam give you my taken to this technology",
    "start": "2010100",
    "end": "2016190"
  },
  {
    "text": "that we can summarize this video let's go back alright guys so we finished the consumer but the consumer which we built",
    "start": "2016190",
    "end": "2021530"
  },
  {
    "text": "in an asynchronous job system with RabbitMQ we have a publisher we have",
    "start": "2021530",
    "end": "2027169"
  },
  {
    "text": "consumer we sent a job and we execute and what about this fancy stuff and we talked about all the beautiful stuff and",
    "start": "2027169",
    "end": "2033679"
  },
  {
    "start": "2030000",
    "end": "2573000"
  },
  {
    "text": "RabbitMQ and here is my thoughts about this technology it has too many",
    "start": "2033679",
    "end": "2041720"
  },
  {
    "text": "abstractions and here's the thing my old boss told me says f you building a",
    "start": "2041720",
    "end": "2050898"
  },
  {
    "text": "system with a lot of abstractions then you want to introduce a new abstraction you get a remove an abstraction you have",
    "start": "2050899",
    "end": "2058280"
  },
  {
    "text": "to remove something you cannot have this many abstraction what do you mean by",
    "start": "2058280",
    "end": "2063470"
  },
  {
    "text": "abstractions well let me explain to you right when I started research this brought this this technology seriously",
    "start": "2063470",
    "end": "2070040"
  },
  {
    "text": "last week I was so confused because there are so many terms for this",
    "start": "2070040",
    "end": "2077599"
  },
  {
    "text": "technology it's a message queue what the heck are you guys doing what the heck is",
    "start": "2077599",
    "end": "2082608"
  },
  {
    "text": "a publisher consumer channel exchange what else there was like so many things",
    "start": "2082609",
    "end": "2087858"
  },
  {
    "text": "and channel and then connection and then to deploys and then push and pull so",
    "start": "2087859",
    "end": "2093138"
  },
  {
    "text": "many stuff and then they are supporting three or four protocols so there is an",
    "start": "2093139",
    "end": "2100580"
  },
  {
    "text": "advanced message queue protocol there is the stomper con there is the HTTP protocol too many abstractions you know",
    "start": "2100580",
    "end": "2107540"
  },
  {
    "text": "what you get when you have too many obstructions you get a complex system and complex systems do not scale with",
    "start": "2107540",
    "end": "2115550"
  },
  {
    "text": "the human we are not designed to work with complex systems we are not designed",
    "start": "2115550",
    "end": "2121760"
  },
  {
    "text": "and this is my opinion take it with a grain of salt guys you might be smarter than I am but if you're introducing this",
    "start": "2121760",
    "end": "2128359"
  },
  {
    "text": "much complexity right I even I don't remember all abstractions this is just a",
    "start": "2128359",
    "end": "2133790"
  },
  {
    "text": "few of the abstraction I'm pretty sure there are more and if you're introducing all these",
    "start": "2133790",
    "end": "2139090"
  },
  {
    "text": "your systems gonna get complex and if there's good complex adoptions will slow",
    "start": "2139090",
    "end": "2144760"
  },
  {
    "text": "down okay and that's why I believe RabbitMQ is getting less and less popular with these years and that's one",
    "start": "2144760",
    "end": "2151690"
  },
  {
    "text": "of the reasons in my opinion it's just too complex does it do the job of course it does but if you figure it out right",
    "start": "2151690",
    "end": "2160150"
  },
  {
    "text": "there is like and I didn't even go deep into this tonight she's like you know what I'm just gonna scratch the surface",
    "start": "2160150",
    "end": "2165850"
  },
  {
    "text": "I'm not gonna go deep because it's so confusing guys right so to me it's a very complex system right another thing",
    "start": "2165850",
    "end": "2173980"
  },
  {
    "text": "I want to talk about here is the Porsche model the the decision that RabbitMQ",
    "start": "2173980",
    "end": "2179140"
  },
  {
    "text": "team did says as a consumer if you connect to a RabbitMQ server which is",
    "start": "2179140",
    "end": "2185350"
  },
  {
    "text": "called an exchange which is as talented ultimately goes to a queue through our channel oh my God look at",
    "start": "2185350",
    "end": "2191350"
  },
  {
    "text": "all this stuff right that's what I'm talking about look at how complex that to talk about things is so much cool",
    "start": "2191350",
    "end": "2198070"
  },
  {
    "text": "look at the HTTP how simple it is request response system over TCP that's it right that's a whole Internet is",
    "start": "2198070",
    "end": "2205180"
  },
  {
    "text": "running on this thing guys difference between this to see how complex this thing is and I think they RabbitMQ like",
    "start": "2205180",
    "end": "2212860"
  },
  {
    "text": "community made the same problem with with the Enterprise Service bus it's a little bit better Enterprise Service",
    "start": "2212860",
    "end": "2219160"
  },
  {
    "text": "RESP was even worse it was so complex and it's just an equalizer between",
    "start": "2219160",
    "end": "2225510"
  },
  {
    "text": "whether you want to have a completely open system extendable extensible versus",
    "start": "2225510",
    "end": "2232990"
  },
  {
    "text": "a simple system it's just over that is kind of closed and I don't mean closed source here closed in and limited",
    "start": "2232990",
    "end": "2239860"
  },
  {
    "text": "functionality that it gives right ready Redis did this very well I think Redis",
    "start": "2239860",
    "end": "2245440"
  },
  {
    "text": "is aid hey it's an in-memory database yeah we can give the durability but I'm",
    "start": "2245440",
    "end": "2250450"
  },
  {
    "text": "gonna give you functionality very simple publish subscribe and that's it right it's a very limited set of function and",
    "start": "2250450",
    "end": "2256420"
  },
  {
    "text": "memcache D I learn research memcache D but it has the same concept which is a very simple model simplicity rules guys",
    "start": "2256420",
    "end": "2264690"
  },
  {
    "text": "so let's talk about Porsche model so when a consumer consumes a certain cue",
    "start": "2264690",
    "end": "2273270"
  },
  {
    "text": "rabbitmq pushes messages as you as you saw guys I didn't ask for it",
    "start": "2273270",
    "end": "2278950"
  },
  {
    "text": "I didn't actually hey saying hey do I have a message do I have a message do I have a message I didn't do that I just",
    "start": "2278950",
    "end": "2284500"
  },
  {
    "text": "said hey by the way if you got a message push it to this function and the",
    "start": "2284500",
    "end": "2289840"
  },
  {
    "text": "function got called and triggered and then we got the results right the problem with this is it does not scale",
    "start": "2289840",
    "end": "2296980"
  },
  {
    "text": "how do you guarantee that the consumer will receive that message right and how",
    "start": "2296980",
    "end": "2304570"
  },
  {
    "text": "do you not overwhelm a consume because guys remember I have a just poor consumer if you have like thousand",
    "start": "2304570",
    "end": "2311560"
  },
  {
    "text": "messages and you're pushing this this down my throat there's this what is",
    "start": "2311560",
    "end": "2318310"
  },
  {
    "text": "called a backfill problem I think where where as you start pushing more messages I cannot process them fast enough for",
    "start": "2318310",
    "end": "2325810"
  },
  {
    "text": "you so now you're kind of putting more work on the server right - to start",
    "start": "2325810",
    "end": "2334810"
  },
  {
    "text": "pushing start slowing down the pushing process because now your thing that can",
    "start": "2334810",
    "end": "2341140"
  },
  {
    "text": "see you're telling the server says hey server please slow down that's the option that there are by Tim",
    "start": "2341140",
    "end": "2347290"
  },
  {
    "text": "q have I think it's called the maximum something right so it's like hey by the way I can only process five messages at",
    "start": "2347290",
    "end": "2352900"
  },
  {
    "text": "a in a second right so don't send me more than five messages now you're pushing this complexity to the server",
    "start": "2352900",
    "end": "2360190"
  },
  {
    "text": "that's why your server became more complicated and that's an kind of an",
    "start": "2360190",
    "end": "2365800"
  },
  {
    "text": "unneeded complexity on the server side because the server now will stop pushing more and more messages to you and they",
    "start": "2365800",
    "end": "2372190"
  },
  {
    "text": "start oh I have oh this consumer is slow this consumer is it's fast I'm gonna push in more message to this consumer",
    "start": "2372190",
    "end": "2378910"
  },
  {
    "text": "versus this one it's very complicated Kafka I think I agree with what Kafka",
    "start": "2378910",
    "end": "2384280"
  },
  {
    "text": "did with this and they said you know what we're not gonna do a push model we're gonna do a long polling model pull",
    "start": "2384280",
    "end": "2391150"
  },
  {
    "text": "it back push this complexity on the consumer and let the consumer consume",
    "start": "2391150",
    "end": "2396400"
  },
  {
    "text": "whenever they want right whenever they are ready to consume they run into",
    "start": "2396400",
    "end": "2402070"
  },
  {
    "text": "another problem which is the acknowledgement problem which way which they solved in a smart way I don't research Kafka in",
    "start": "2402070",
    "end": "2408130"
  },
  {
    "text": "detail but when I do and leave a comment in the comment section below if you want to see the Kafka message right a Kafka",
    "start": "2408130",
    "end": "2415210"
  },
  {
    "text": "video and I'm really interested to make that video but I think Kafka did a",
    "start": "2415210",
    "end": "2421630"
  },
  {
    "text": "better job at this by shoving that responsibility to the consumer to the",
    "start": "2421630",
    "end": "2426850"
  },
  {
    "text": "client instead of having the server push push push messages right so that's what",
    "start": "2426850",
    "end": "2432700"
  },
  {
    "text": "we're doing with with the notification system as well like why YouTube have problem with notification because of the",
    "start": "2432700",
    "end": "2439480"
  },
  {
    "text": "push this thing right there is always it curl pros and cons with this Redis tip",
    "start": "2439480",
    "end": "2445720"
  },
  {
    "text": "hook pick the push model but I would understand what the right is it has limited clients consumers because it's",
    "start": "2445720",
    "end": "2454240"
  },
  {
    "text": "all a back-end technology unlike this this is very front in D the message key",
    "start": "2454240",
    "end": "2459700"
  },
  {
    "text": "because consumers will immediately consume the red the rabbit MQ message",
    "start": "2459700",
    "end": "2465970"
  },
  {
    "text": "queue versus Redis it's always the caching technology so it is always gonna",
    "start": "2465970",
    "end": "2471460"
  },
  {
    "text": "be in the back end deep deep deep back end so the number of clients will be",
    "start": "2471460",
    "end": "2476680"
  },
  {
    "text": "limited compared to the number of clients to rabbit and queue I might be wrong I might be mistaken but that's my",
    "start": "2476680",
    "end": "2482410"
  },
  {
    "text": "take on it hopefully you guys give me your second and what do you think right all right guys",
    "start": "2482410",
    "end": "2487840"
  },
  {
    "text": "summary what did we discuss in this video but it's got the components right",
    "start": "2487840",
    "end": "2494710"
  },
  {
    "text": "I don't even I don't even remember that components there are a lot of components don't exchange and queues and publisher",
    "start": "2494710",
    "end": "2503350"
  },
  {
    "text": "and consumer and channels and connections there is other stuff that I didn't discuss by the way guys but it",
    "start": "2503350",
    "end": "2509530"
  },
  {
    "text": "that we just got there but in queue we discussed how would you spin rabbitmq",
    "start": "2509530",
    "end": "2514750"
  },
  {
    "text": "server with docker I think this is if you want to try anything you use darker all the time don't install garbage on",
    "start": "2514750",
    "end": "2520600"
  },
  {
    "text": "your machine guys don't install things and just take memory whenever you install something piece of technology do",
    "start": "2520600",
    "end": "2527140"
  },
  {
    "text": "docker start rabbitmq when you're done docker stop rabbitmq so ii just even if you were",
    "start": "2527140",
    "end": "2533710"
  },
  {
    "text": "studying machine the contents will not start by default so you can disable memory right and you feel done",
    "start": "2533710",
    "end": "2540130"
  },
  {
    "text": "the doctor RM rabbitmq okay we wrote the",
    "start": "2540130",
    "end": "2546100"
  },
  {
    "text": "publisher right we also wrote a consumer and wait we did a social agent we built",
    "start": "2546100",
    "end": "2551950"
  },
  {
    "text": "an asynchronous job system where a publisher publishes a job and the",
    "start": "2551950",
    "end": "2557740"
  },
  {
    "text": "consumer just starts and pick a job and start working on it and then do this thing and then produces the output okay",
    "start": "2557740",
    "end": "2563050"
  },
  {
    "text": "and I finally gave you my thoughts about this technology guys hope you enjoy this",
    "start": "2563050",
    "end": "2568180"
  },
  {
    "text": "video I'm gonna see you in the next one you guys stay awesome",
    "start": "2568180",
    "end": "2573660"
  }
]