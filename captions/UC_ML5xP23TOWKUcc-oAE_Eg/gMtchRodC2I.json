[
  {
    "start": "0",
    "end": "240000"
  },
  {
    "text": "so guys node.js is branded as the single",
    "start": "0",
    "end": "2720"
  },
  {
    "text": "threaded",
    "start": "2720",
    "end": "3439"
  },
  {
    "text": "asynchronous non-blocking javascript",
    "start": "3439",
    "end": "6640"
  },
  {
    "text": "runtime",
    "start": "6640",
    "end": "7440"
  },
  {
    "text": "right but we've also been told that",
    "start": "7440",
    "end": "11120"
  },
  {
    "text": "that's not entirely true because node.js",
    "start": "11120",
    "end": "14080"
  },
  {
    "text": "does",
    "start": "14080",
    "end": "14480"
  },
  {
    "text": "use threads in certain situations",
    "start": "14480",
    "end": "17840"
  },
  {
    "text": "so in this video i want to kind of",
    "start": "17840",
    "end": "19760"
  },
  {
    "text": "demystify this thing a little bit",
    "start": "19760",
    "end": "22000"
  },
  {
    "text": "and understand when node.js is a single",
    "start": "22000",
    "end": "25039"
  },
  {
    "text": "threaded",
    "start": "25039",
    "end": "26000"
  },
  {
    "text": "this event loop that we talked about all",
    "start": "26000",
    "end": "28240"
  },
  {
    "text": "the time",
    "start": "28240",
    "end": "29119"
  },
  {
    "text": "and when does it really use threads and",
    "start": "29119",
    "end": "31199"
  },
  {
    "text": "what does that mean for our applications",
    "start": "31199",
    "end": "33920"
  },
  {
    "text": "and can i utilize node.js",
    "start": "33920",
    "end": "37600"
  },
  {
    "text": "threading model if i really understand",
    "start": "37600",
    "end": "40000"
  },
  {
    "text": "it",
    "start": "40000",
    "end": "40719"
  },
  {
    "text": "how about we jump into and understand",
    "start": "40719",
    "end": "42160"
  },
  {
    "text": "that so we can start with the event",
    "start": "42160",
    "end": "44000"
  },
  {
    "text": "loop real quick the event loop is",
    "start": "44000",
    "end": "46960"
  },
  {
    "text": "literally",
    "start": "46960",
    "end": "47760"
  },
  {
    "text": "an infinite loop that runs as long",
    "start": "47760",
    "end": "50800"
  },
  {
    "text": "as the process is running it's a single",
    "start": "50800",
    "end": "52320"
  },
  {
    "text": "thread that is literally does",
    "start": "52320",
    "end": "54960"
  },
  {
    "text": "multiple checks it checks certain things",
    "start": "54960",
    "end": "57600"
  },
  {
    "text": "like let's say there is a compute that",
    "start": "57600",
    "end": "59440"
  },
  {
    "text": "needs to be done by node.js",
    "start": "59440",
    "end": "61120"
  },
  {
    "text": "i don't know adding two numbers this is",
    "start": "61120",
    "end": "63520"
  },
  {
    "text": "a compute right",
    "start": "63520",
    "end": "64640"
  },
  {
    "text": "and then this is an execution so it will",
    "start": "64640",
    "end": "66880"
  },
  {
    "text": "check hey do i have any compute that you",
    "start": "66880",
    "end": "68720"
  },
  {
    "text": "know",
    "start": "68720",
    "end": "69040"
  },
  {
    "text": "to execute do i have any functions i",
    "start": "69040",
    "end": "71119"
  },
  {
    "text": "need to execute",
    "start": "71119",
    "end": "72080"
  },
  {
    "text": "let me execute it and the another thing",
    "start": "72080",
    "end": "74880"
  },
  {
    "text": "is",
    "start": "74880",
    "end": "75360"
  },
  {
    "text": "part of the compute is essentially",
    "start": "75360",
    "end": "77680"
  },
  {
    "text": "sending a request to say hey",
    "start": "77680",
    "end": "79520"
  },
  {
    "text": "do are there a request that need to be",
    "start": "79520",
    "end": "82080"
  },
  {
    "text": "sent",
    "start": "82080",
    "end": "82880"
  },
  {
    "text": "right to to another server and here's",
    "start": "82880",
    "end": "85119"
  },
  {
    "text": "the interesting part",
    "start": "85119",
    "end": "87280"
  },
  {
    "text": "you can compile that get request",
    "start": "87280",
    "end": "90720"
  },
  {
    "text": "the act of compiling that git request",
    "start": "90720",
    "end": "93360"
  },
  {
    "text": "putting the parameters",
    "start": "93360",
    "end": "94880"
  },
  {
    "text": "building the payload and then sending",
    "start": "94880",
    "end": "97759"
  },
  {
    "text": "that payload",
    "start": "97759",
    "end": "98880"
  },
  {
    "text": "that's compute that get execute but once",
    "start": "98880",
    "end": "102000"
  },
  {
    "text": "you",
    "start": "102000",
    "end": "102960"
  },
  {
    "text": "sent that you're effectively",
    "start": "102960",
    "end": "107280"
  },
  {
    "text": "done right you're not gonna",
    "start": "107280",
    "end": "110479"
  },
  {
    "text": "be blocked and waiting for that response",
    "start": "110479",
    "end": "112960"
  },
  {
    "text": "from the server because",
    "start": "112960",
    "end": "113920"
  },
  {
    "text": "we we said that stuff we send it we sent",
    "start": "113920",
    "end": "115920"
  },
  {
    "text": "that resource oh no we need to wait for",
    "start": "115920",
    "end": "117680"
  },
  {
    "text": "the server to respond",
    "start": "117680",
    "end": "119399"
  },
  {
    "text": "meanwhile node.js actually",
    "start": "119399",
    "end": "122399"
  },
  {
    "text": "sets a callback say okay by the way when",
    "start": "122399",
    "end": "125439"
  },
  {
    "text": "we get a response from",
    "start": "125439",
    "end": "126719"
  },
  {
    "text": "this particular function for that",
    "start": "126719",
    "end": "128080"
  },
  {
    "text": "particular call",
    "start": "128080",
    "end": "129840"
  },
  {
    "text": "here's a call back and let's put it in",
    "start": "129840",
    "end": "132560"
  },
  {
    "text": "this shelf this is a list of",
    "start": "132560",
    "end": "134400"
  },
  {
    "text": "bunch of callbacks callbacks from",
    "start": "134400",
    "end": "136959"
  },
  {
    "text": "timeouts",
    "start": "136959",
    "end": "137920"
  },
  {
    "text": "uh it's set timer the timeouts callback",
    "start": "137920",
    "end": "140480"
  },
  {
    "text": "from functions callback from",
    "start": "140480",
    "end": "142239"
  },
  {
    "text": "other operations as well all of them",
    "start": "142239",
    "end": "144160"
  },
  {
    "text": "let's set them here",
    "start": "144160",
    "end": "145280"
  },
  {
    "text": "okay certain operations not all of them",
    "start": "145280",
    "end": "147200"
  },
  {
    "text": "the next thing the event loop goes okay",
    "start": "147200",
    "end": "149200"
  },
  {
    "text": "do i have any callback that is ready to",
    "start": "149200",
    "end": "151599"
  },
  {
    "text": "be executed did i get a response from",
    "start": "151599",
    "end": "153360"
  },
  {
    "text": "this server",
    "start": "153360",
    "end": "154239"
  },
  {
    "text": "well no but there's another thing here",
    "start": "154239",
    "end": "156720"
  },
  {
    "text": "there's another call back from",
    "start": "156720",
    "end": "158319"
  },
  {
    "text": "a timeout that we did there is a timer",
    "start": "158319",
    "end": "160959"
  },
  {
    "text": "is this timer already",
    "start": "160959",
    "end": "162160"
  },
  {
    "text": "ready for us to be called uh no there's",
    "start": "162160",
    "end": "164879"
  },
  {
    "text": "like a",
    "start": "164879",
    "end": "165440"
  },
  {
    "text": "three more seconds done okay let's move",
    "start": "165440",
    "end": "167280"
  },
  {
    "text": "on is there any more compute",
    "start": "167280",
    "end": "168959"
  },
  {
    "text": "that i have to do well yeah there is",
    "start": "168959",
    "end": "171280"
  },
  {
    "text": "like a",
    "start": "171280",
    "end": "172400"
  },
  {
    "text": "some operation that you have to do oh",
    "start": "172400",
    "end": "173840"
  },
  {
    "text": "okay let's do that operation",
    "start": "173840",
    "end": "176000"
  },
  {
    "text": "okay done so while you're actually",
    "start": "176000",
    "end": "179440"
  },
  {
    "text": "computing this",
    "start": "179440",
    "end": "181840"
  },
  {
    "text": "that is blocking operation",
    "start": "181840",
    "end": "186480"
  },
  {
    "text": "you the single for that's eventually",
    "start": "186480",
    "end": "189040"
  },
  {
    "text": "that executing that compute",
    "start": "189040",
    "end": "191040"
  },
  {
    "text": "you're gonna be blocked so if you're if",
    "start": "191040",
    "end": "193760"
  },
  {
    "text": "you have in your code",
    "start": "193760",
    "end": "195680"
  },
  {
    "text": "a while one while true",
    "start": "195680",
    "end": "199519"
  },
  {
    "text": "you're not just gonna stuck forever in",
    "start": "199519",
    "end": "201680"
  },
  {
    "text": "the event loop because",
    "start": "201680",
    "end": "202879"
  },
  {
    "text": "hey you just hey i'm i'm computing",
    "start": "202879",
    "end": "205440"
  },
  {
    "text": "there's nothing asynchronous about this",
    "start": "205440",
    "end": "207360"
  },
  {
    "text": "you gave me a compute that happens to be",
    "start": "207360",
    "end": "209040"
  },
  {
    "text": "an infinite loop i'm gonna be stuck in",
    "start": "209040",
    "end": "210959"
  },
  {
    "text": "the infinite loop",
    "start": "210959",
    "end": "212959"
  },
  {
    "text": "the main thread the main event level is",
    "start": "212959",
    "end": "214879"
  },
  {
    "text": "going to thread so be careful with your",
    "start": "214879",
    "end": "216560"
  },
  {
    "text": "compute that's why",
    "start": "216560",
    "end": "217440"
  },
  {
    "text": "people just like hey let's be careful",
    "start": "217440",
    "end": "219280"
  },
  {
    "text": "with this event loop thing that",
    "start": "219280",
    "end": "220879"
  },
  {
    "text": "how much computer you put down all right",
    "start": "220879",
    "end": "222720"
  },
  {
    "text": "so now we execute this computer we move",
    "start": "222720",
    "end": "224480"
  },
  {
    "text": "on",
    "start": "224480",
    "end": "225040"
  },
  {
    "text": "and then hey there is another network",
    "start": "225040",
    "end": "228319"
  },
  {
    "text": "network request that we need to send uh",
    "start": "228319",
    "end": "230799"
  },
  {
    "text": "sure thing let's do it",
    "start": "230799",
    "end": "232159"
  },
  {
    "text": "let's do an uh this asynchronous",
    "start": "232159",
    "end": "235360"
  },
  {
    "text": "network request send it and then move on",
    "start": "235360",
    "end": "237599"
  },
  {
    "text": "right that's asynchronous",
    "start": "237599",
    "end": "239360"
  },
  {
    "text": "non-blocking so there is no blocking in",
    "start": "239360",
    "end": "241840"
  },
  {
    "start": "240000",
    "end": "480000"
  },
  {
    "text": "certain situations",
    "start": "241840",
    "end": "243439"
  },
  {
    "text": "all right so that's that's essentially",
    "start": "243439",
    "end": "245680"
  },
  {
    "text": "the event loop",
    "start": "245680",
    "end": "246799"
  },
  {
    "text": "very simple and very elegant we love it",
    "start": "246799",
    "end": "249760"
  },
  {
    "text": "absolutely love it",
    "start": "249760",
    "end": "252000"
  },
  {
    "text": "but there is this thing obviously",
    "start": "252000",
    "end": "255360"
  },
  {
    "text": "guys this design as we talked about",
    "start": "255360",
    "end": "258799"
  },
  {
    "text": "imagine we don't have threads",
    "start": "258799",
    "end": "260160"
  },
  {
    "text": "imagine just we have only the event loop",
    "start": "260160",
    "end": "263600"
  },
  {
    "text": "we're reading from the file reading",
    "start": "263600",
    "end": "267840"
  },
  {
    "text": "we're doing a lot of queries that is",
    "start": "267840",
    "end": "271199"
  },
  {
    "text": "i o we're doing a lot of cpu intensive",
    "start": "271199",
    "end": "274479"
  },
  {
    "text": "operation not just like out of the box",
    "start": "274479",
    "end": "276240"
  },
  {
    "text": "does all the stuff",
    "start": "276240",
    "end": "277199"
  },
  {
    "text": "compression encryption this is cpu",
    "start": "277199",
    "end": "279520"
  },
  {
    "text": "intensive",
    "start": "279520",
    "end": "280240"
  },
  {
    "text": "so they take time to execute it's",
    "start": "280240",
    "end": "283759"
  },
  {
    "text": "really hurtful to put this in the event",
    "start": "283759",
    "end": "286960"
  },
  {
    "text": "loop because",
    "start": "286960",
    "end": "287759"
  },
  {
    "text": "if you put in the event loop to compress",
    "start": "287759",
    "end": "290320"
  },
  {
    "text": "a file",
    "start": "290320",
    "end": "292479"
  },
  {
    "text": "then the your beautiful app will suffer",
    "start": "292479",
    "end": "295520"
  },
  {
    "text": "if i do a lot of read requests to fo",
    "start": "295520",
    "end": "299040"
  },
  {
    "text": "to the file system or another",
    "start": "299040",
    "end": "302479"
  },
  {
    "text": "popular example is dns queries because",
    "start": "302479",
    "end": "305039"
  },
  {
    "text": "not just doing dns all the time",
    "start": "305039",
    "end": "307120"
  },
  {
    "text": "because you you i don't know you're",
    "start": "307120",
    "end": "308720"
  },
  {
    "text": "trying to do a fashion network",
    "start": "308720",
    "end": "310720"
  },
  {
    "text": "query you're trying to ping something",
    "start": "310720",
    "end": "312639"
  },
  {
    "text": "you're trying to essentially resolve the",
    "start": "312639",
    "end": "314400"
  },
  {
    "text": "units whether",
    "start": "314400",
    "end": "315360"
  },
  {
    "text": "whether they are packages that you",
    "start": "315360",
    "end": "316880"
  },
  {
    "text": "import or",
    "start": "316880",
    "end": "318400"
  },
  {
    "text": "there are just things that you actually",
    "start": "318400",
    "end": "320160"
  },
  {
    "text": "do that require dns resolution to get",
    "start": "320160",
    "end": "322080"
  },
  {
    "text": "the ipads from",
    "start": "322080",
    "end": "323280"
  },
  {
    "text": "host names these are expensive",
    "start": "323280",
    "end": "326320"
  },
  {
    "text": "we're going to end up with a lot of",
    "start": "326320",
    "end": "327600"
  },
  {
    "text": "callback even if they are asynchronous",
    "start": "327600",
    "end": "329600"
  },
  {
    "text": "right we can end up with a lot of",
    "start": "329600",
    "end": "330800"
  },
  {
    "text": "callback we don't want to overwhelm the",
    "start": "330800",
    "end": "333759"
  },
  {
    "text": "the main thread with this kind of",
    "start": "333759",
    "end": "336400"
  },
  {
    "text": "operation",
    "start": "336400",
    "end": "337199"
  },
  {
    "text": "that's why node.js started using a",
    "start": "337199",
    "end": "340000"
  },
  {
    "text": "library called",
    "start": "340000",
    "end": "340800"
  },
  {
    "text": "uvlib all right and this is a c library",
    "start": "340800",
    "end": "344000"
  },
  {
    "text": "that you",
    "start": "344000",
    "end": "344639"
  },
  {
    "text": "can just use it it's just important and",
    "start": "344639",
    "end": "347440"
  },
  {
    "text": "start using it it's an",
    "start": "347440",
    "end": "348479"
  },
  {
    "text": "application that supports threading and",
    "start": "348479",
    "end": "351280"
  },
  {
    "text": "here's what node.js uses for",
    "start": "351280",
    "end": "353600"
  },
  {
    "text": "it uses it for two things i o intensive",
    "start": "353600",
    "end": "356639"
  },
  {
    "text": "operation",
    "start": "356639",
    "end": "357759"
  },
  {
    "text": "and cpu intensive operations so let's",
    "start": "357759",
    "end": "360080"
  },
  {
    "text": "take example of i o intensive operations",
    "start": "360080",
    "end": "362160"
  },
  {
    "text": "so here's the only these four things",
    "start": "362160",
    "end": "365520"
  },
  {
    "text": "are the only things that we know of that",
    "start": "365520",
    "end": "368479"
  },
  {
    "text": "node.js",
    "start": "368479",
    "end": "369199"
  },
  {
    "text": "use the lib uv threading pool with",
    "start": "369199",
    "end": "372800"
  },
  {
    "text": "okay and these are dns squares so",
    "start": "372800",
    "end": "376080"
  },
  {
    "text": "anytime there is a need",
    "start": "376080",
    "end": "379680"
  },
  {
    "text": "to resolve a host name to an ip",
    "start": "379680",
    "end": "383360"
  },
  {
    "text": "node.js not gonna use the main loop it's",
    "start": "383360",
    "end": "385440"
  },
  {
    "text": "then a user thread",
    "start": "385440",
    "end": "386639"
  },
  {
    "text": "and it's gonna use basically this lib",
    "start": "386639",
    "end": "389759"
  },
  {
    "text": "uv library the built-in library that is",
    "start": "389759",
    "end": "391680"
  },
  {
    "text": "being imported",
    "start": "391680",
    "end": "393120"
  },
  {
    "text": "to do this resolution another thing is",
    "start": "393120",
    "end": "395440"
  },
  {
    "text": "file system anytime",
    "start": "395440",
    "end": "397199"
  },
  {
    "text": "you do an asynchronous file system read",
    "start": "397199",
    "end": "400560"
  },
  {
    "text": "and mined that i said asynchronous",
    "start": "400560",
    "end": "403840"
  },
  {
    "text": "because",
    "start": "403840",
    "end": "404319"
  },
  {
    "text": "the built-in file system you can do to",
    "start": "404319",
    "end": "406240"
  },
  {
    "text": "both you can do synchronous and",
    "start": "406240",
    "end": "408080"
  },
  {
    "text": "and asynchronous the synchronous will",
    "start": "408080",
    "end": "410479"
  },
  {
    "text": "use the event loop",
    "start": "410479",
    "end": "411520"
  },
  {
    "text": "the asynchronous will spin up a thread",
    "start": "411520",
    "end": "413520"
  },
  {
    "text": "to do the read",
    "start": "413520",
    "end": "414960"
  },
  {
    "text": "so that it's just it's it's it's it's an",
    "start": "414960",
    "end": "417919"
  },
  {
    "text": "own thing it's not",
    "start": "417919",
    "end": "418880"
  },
  {
    "text": "bothering essentially it's not bothering",
    "start": "418880",
    "end": "421199"
  },
  {
    "text": "anything and it's essentially you can",
    "start": "421199",
    "end": "422639"
  },
  {
    "text": "you can",
    "start": "422639",
    "end": "423680"
  },
  {
    "text": "spread them as much as we want right",
    "start": "423680",
    "end": "426080"
  },
  {
    "text": "it's not bothering us",
    "start": "426080",
    "end": "427599"
  },
  {
    "text": "and the other part is the crypto library",
    "start": "427599",
    "end": "429759"
  },
  {
    "text": "the famous crypto library any encryption",
    "start": "429759",
    "end": "432240"
  },
  {
    "text": "then it uses the lab uv uh the uv lab",
    "start": "432240",
    "end": "435280"
  },
  {
    "text": "library uses the threads so crypto",
    "start": "435280",
    "end": "437680"
  },
  {
    "text": "encryption",
    "start": "437680",
    "end": "438880"
  },
  {
    "text": "hashing all that stuff uses the threads",
    "start": "438880",
    "end": "442319"
  },
  {
    "text": "so",
    "start": "442319",
    "end": "443360"
  },
  {
    "text": "you can bump up the number of threads",
    "start": "443360",
    "end": "445680"
  },
  {
    "text": "that you want",
    "start": "445680",
    "end": "446720"
  },
  {
    "text": "to take advantage of that compression",
    "start": "446720",
    "end": "449199"
  },
  {
    "text": "the zip library",
    "start": "449199",
    "end": "450479"
  },
  {
    "text": "you just uses the tripod and you can use",
    "start": "450479",
    "end": "452720"
  },
  {
    "text": "this environment variable",
    "start": "452720",
    "end": "454319"
  },
  {
    "text": "to bump up the thread pool number",
    "start": "454319",
    "end": "457680"
  },
  {
    "text": "so that you can take advantage of these",
    "start": "457680",
    "end": "460160"
  },
  {
    "text": "if you",
    "start": "460160",
    "end": "460800"
  },
  {
    "text": "know you're using them okay that is what",
    "start": "460800",
    "end": "463840"
  },
  {
    "text": "i want to talk about here",
    "start": "463840",
    "end": "466080"
  },
  {
    "text": "if you just bump up this number and your",
    "start": "466080",
    "end": "468879"
  },
  {
    "text": "code doesn't",
    "start": "468879",
    "end": "470240"
  },
  {
    "text": "utilize threads then it's useless and",
    "start": "470240",
    "end": "472720"
  },
  {
    "text": "that's what i",
    "start": "472720",
    "end": "473520"
  },
  {
    "text": "i seen i've been seeing some people make",
    "start": "473520",
    "end": "476160"
  },
  {
    "text": "this mistake they say oh i'm just gonna",
    "start": "476160",
    "end": "479120"
  },
  {
    "text": "build an http server and my code in the",
    "start": "479120",
    "end": "482000"
  },
  {
    "start": "480000",
    "end": "960000"
  },
  {
    "text": "middle they just put their code in the",
    "start": "482000",
    "end": "483520"
  },
  {
    "text": "middle",
    "start": "483520",
    "end": "483919"
  },
  {
    "text": "say my computer is gonna scale because",
    "start": "483919",
    "end": "486560"
  },
  {
    "text": "i'm gonna just bump up my threads to",
    "start": "486560",
    "end": "488160"
  },
  {
    "text": "200.",
    "start": "488160",
    "end": "490639"
  },
  {
    "text": "now you're really gonna you really need",
    "start": "490639",
    "end": "493039"
  },
  {
    "text": "to know",
    "start": "493039",
    "end": "493840"
  },
  {
    "text": "when the threads are getting trigger and",
    "start": "493840",
    "end": "495440"
  },
  {
    "text": "i'm gonna give you now a bunch of",
    "start": "495440",
    "end": "497360"
  },
  {
    "text": "examples",
    "start": "497360",
    "end": "498479"
  },
  {
    "text": "and uh let's make it like a fancy quiz",
    "start": "498479",
    "end": "501360"
  },
  {
    "text": "how about that",
    "start": "501360",
    "end": "502080"
  },
  {
    "text": "all right guys let's take some examples",
    "start": "502080",
    "end": "504560"
  },
  {
    "text": "so here's the first example example",
    "start": "504560",
    "end": "506240"
  },
  {
    "text": "number one we're running an http server",
    "start": "506240",
    "end": "509759"
  },
  {
    "text": "very simple server that just returned",
    "start": "509759",
    "end": "511919"
  },
  {
    "text": "hello to the server",
    "start": "511919",
    "end": "513200"
  },
  {
    "text": "when we make a get request we",
    "start": "513200",
    "end": "514719"
  },
  {
    "text": "immediately return hello and",
    "start": "514719",
    "end": "517200"
  },
  {
    "text": "matter of fact any request that makes in",
    "start": "517200",
    "end": "519440"
  },
  {
    "text": "the server we're going to return hello",
    "start": "519440",
    "end": "521200"
  },
  {
    "text": "what is this going to use is this going",
    "start": "521200",
    "end": "524480"
  },
  {
    "text": "to",
    "start": "524480",
    "end": "524959"
  },
  {
    "text": "is is this going to use the main thread",
    "start": "524959",
    "end": "527519"
  },
  {
    "text": "to execute this",
    "start": "527519",
    "end": "528640"
  },
  {
    "text": "or is going to use the thread pull",
    "start": "528640",
    "end": "532000"
  },
  {
    "text": "the answer is it's only going to use the",
    "start": "532000",
    "end": "533920"
  },
  {
    "text": "main thread because",
    "start": "533920",
    "end": "535040"
  },
  {
    "text": "hey what this is networking networking",
    "start": "535040",
    "end": "537839"
  },
  {
    "text": "operations",
    "start": "537839",
    "end": "538720"
  },
  {
    "text": "always use the main thread it never",
    "start": "538720",
    "end": "541120"
  },
  {
    "text": "never uses",
    "start": "541120",
    "end": "542080"
  },
  {
    "text": "the thread pull okay network operation",
    "start": "542080",
    "end": "544240"
  },
  {
    "text": "except for the dns",
    "start": "544240",
    "end": "545760"
  },
  {
    "text": "right so this is a part of the network",
    "start": "545760",
    "end": "548320"
  },
  {
    "text": "we're not going to use the thread pull",
    "start": "548320",
    "end": "549760"
  },
  {
    "text": "we're just going to use the main thread",
    "start": "549760",
    "end": "552720"
  },
  {
    "text": "to get to execute this part all right so",
    "start": "552720",
    "end": "554560"
  },
  {
    "text": "if i run this",
    "start": "554560",
    "end": "555920"
  },
  {
    "text": "node example1.js and then i'm going to",
    "start": "555920",
    "end": "559200"
  },
  {
    "text": "curl",
    "start": "559200",
    "end": "559680"
  },
  {
    "text": "let's do curl dash v http",
    "start": "559680",
    "end": "562720"
  },
  {
    "text": "localhost 1337 lead all right you can",
    "start": "562720",
    "end": "566160"
  },
  {
    "text": "see that",
    "start": "566160",
    "end": "567040"
  },
  {
    "text": "we established the tcp connection nicely",
    "start": "567040",
    "end": "569120"
  },
  {
    "text": "we sent the get request and we got hello",
    "start": "569120",
    "end": "571279"
  },
  {
    "text": "back",
    "start": "571279",
    "end": "572160"
  },
  {
    "text": "nicely done this is simple this is not",
    "start": "572160",
    "end": "574320"
  },
  {
    "text": "rocket science",
    "start": "574320",
    "end": "575440"
  },
  {
    "text": "let's take another example here okay",
    "start": "575440",
    "end": "578800"
  },
  {
    "text": "let's do example two now if i run",
    "start": "578800",
    "end": "581120"
  },
  {
    "text": "example two",
    "start": "581120",
    "end": "582320"
  },
  {
    "text": "node.js and i do this i want to pay",
    "start": "582320",
    "end": "584880"
  },
  {
    "text": "attention to what happened i want to do",
    "start": "584880",
    "end": "586480"
  },
  {
    "text": "dash v curl what do you think will",
    "start": "586480",
    "end": "588480"
  },
  {
    "text": "happen here will we be able",
    "start": "588480",
    "end": "590000"
  },
  {
    "text": "to establish tcp connection let's find",
    "start": "590000",
    "end": "592080"
  },
  {
    "text": "out if i do that look at that",
    "start": "592080",
    "end": "594000"
  },
  {
    "text": "it says connected so we can't",
    "start": "594000",
    "end": "596640"
  },
  {
    "text": "technically connect to that",
    "start": "596640",
    "end": "598640"
  },
  {
    "text": "we send the get a request and if i check",
    "start": "598640",
    "end": "601680"
  },
  {
    "text": "in wireshark we even acknowledge",
    "start": "601680",
    "end": "603760"
  },
  {
    "text": "the server let's be very specific the",
    "start": "603760",
    "end": "606079"
  },
  {
    "text": "kernel's",
    "start": "606079",
    "end": "607040"
  },
  {
    "text": "server responds with an acknowledgement",
    "start": "607040",
    "end": "608800"
  },
  {
    "text": "to our request",
    "start": "608800",
    "end": "610079"
  },
  {
    "text": "but the request sits in the queue",
    "start": "610079",
    "end": "614800"
  },
  {
    "text": "of the application so we're stuck so we",
    "start": "614800",
    "end": "617440"
  },
  {
    "text": "did get the request in this case but we",
    "start": "617440",
    "end": "618959"
  },
  {
    "text": "couldn't even respond",
    "start": "618959",
    "end": "620240"
  },
  {
    "text": "so let's prove this by creating another",
    "start": "620240",
    "end": "622399"
  },
  {
    "text": "request here",
    "start": "622399",
    "end": "623680"
  },
  {
    "text": "do a curl dash v uh localhost can i",
    "start": "623680",
    "end": "628880"
  },
  {
    "text": "let's give him http there you go now",
    "start": "628880",
    "end": "632320"
  },
  {
    "text": "i established another core request that",
    "start": "632320",
    "end": "634480"
  },
  {
    "text": "means another tcp connection",
    "start": "634480",
    "end": "636560"
  },
  {
    "text": "which worked right the connection we we",
    "start": "636560",
    "end": "639680"
  },
  {
    "text": "connected to the server",
    "start": "639680",
    "end": "641600"
  },
  {
    "text": "we sent the request but this time we",
    "start": "641600",
    "end": "643839"
  },
  {
    "text": "acknowledged it",
    "start": "643839",
    "end": "644959"
  },
  {
    "text": "but that request never even got",
    "start": "644959",
    "end": "647600"
  },
  {
    "text": "delivered to that to begin with",
    "start": "647600",
    "end": "650160"
  },
  {
    "text": "right so let's let's let's let's close",
    "start": "650160",
    "end": "653360"
  },
  {
    "text": "these two requests and",
    "start": "653360",
    "end": "654720"
  },
  {
    "text": "and add something here so you can",
    "start": "654720",
    "end": "657200"
  },
  {
    "text": "essentially see",
    "start": "657200",
    "end": "658959"
  },
  {
    "text": "right console.log",
    "start": "658959",
    "end": "662399"
  },
  {
    "text": "request delivered delivered",
    "start": "662399",
    "end": "666079"
  },
  {
    "text": "and then all right let's do requests",
    "start": "666079",
    "end": "668240"
  },
  {
    "text": "delivered let's do the same thing again",
    "start": "668240",
    "end": "670240"
  },
  {
    "text": "close clean boom run again boom",
    "start": "670240",
    "end": "674480"
  },
  {
    "text": "localhost you can send a run request",
    "start": "674480",
    "end": "678880"
  },
  {
    "text": "we did a curl here we got request",
    "start": "678880",
    "end": "682160"
  },
  {
    "text": "delivered that's the first request",
    "start": "682160",
    "end": "683440"
  },
  {
    "text": "that's the first infinity request right",
    "start": "683440",
    "end": "685680"
  },
  {
    "text": "so the request got delivered to the app",
    "start": "685680",
    "end": "688399"
  },
  {
    "text": "right",
    "start": "688399",
    "end": "689360"
  },
  {
    "text": "and we got stuck here now another one",
    "start": "689360",
    "end": "692880"
  },
  {
    "text": "let's prove that this is actually a",
    "start": "692880",
    "end": "694160"
  },
  {
    "text": "single thread",
    "start": "694160",
    "end": "695200"
  },
  {
    "text": "right if i do another call see that",
    "start": "695200",
    "end": "698560"
  },
  {
    "text": "i established the tcp connection i sent",
    "start": "698560",
    "end": "700560"
  },
  {
    "text": "the request but the request",
    "start": "700560",
    "end": "702160"
  },
  {
    "text": "never got delivered to the app why",
    "start": "702160",
    "end": "704160"
  },
  {
    "text": "because i did not get another request",
    "start": "704160",
    "end": "706160"
  },
  {
    "text": "ever so be very very careful what you",
    "start": "706160",
    "end": "709839"
  },
  {
    "text": "put in your http request whether this is",
    "start": "709839",
    "end": "711920"
  },
  {
    "text": "express",
    "start": "711920",
    "end": "712959"
  },
  {
    "text": "or this is just normal http server",
    "start": "712959",
    "end": "716160"
  },
  {
    "text": "if you put a huge heavy compute here",
    "start": "716160",
    "end": "719279"
  },
  {
    "text": "right here",
    "start": "719279",
    "end": "720320"
  },
  {
    "text": "your app is going to suffer and no",
    "start": "720320",
    "end": "723360"
  },
  {
    "text": "worker thread pull can save you from",
    "start": "723360",
    "end": "726000"
  },
  {
    "text": "that",
    "start": "726000",
    "end": "726880"
  },
  {
    "text": "it really depends what you do here",
    "start": "726880",
    "end": "728320"
  },
  {
    "text": "that's why that's when you need to use",
    "start": "728320",
    "end": "729839"
  },
  {
    "text": "cluster and i have i don't have time to",
    "start": "729839",
    "end": "731920"
  },
  {
    "text": "explain",
    "start": "731920",
    "end": "732560"
  },
  {
    "text": "all that stuff right we need to go",
    "start": "732560",
    "end": "734160"
  },
  {
    "text": "through the video real quick",
    "start": "734160",
    "end": "735839"
  },
  {
    "text": "all right jump another example three",
    "start": "735839",
    "end": "739279"
  },
  {
    "text": "example number three dd okay for example",
    "start": "739279",
    "end": "741760"
  },
  {
    "text": "number three",
    "start": "741760",
    "end": "742720"
  },
  {
    "text": "we're it's a simple http server",
    "start": "742720",
    "end": "746399"
  },
  {
    "text": "but it reads from a file http.js just",
    "start": "746399",
    "end": "750480"
  },
  {
    "text": "raise a file and then calls back a",
    "start": "750480",
    "end": "752240"
  },
  {
    "text": "function",
    "start": "752240",
    "end": "753279"
  },
  {
    "text": "which is the console.log so what do we",
    "start": "753279",
    "end": "756000"
  },
  {
    "text": "what",
    "start": "756000",
    "end": "756560"
  },
  {
    "text": "what are we gonna do in this case well",
    "start": "756560",
    "end": "759120"
  },
  {
    "text": "the networking aspect of this",
    "start": "759120",
    "end": "761120"
  },
  {
    "text": "is definitely an event main loop but",
    "start": "761120",
    "end": "765519"
  },
  {
    "text": "remember the execution of that",
    "start": "765519",
    "end": "770399"
  },
  {
    "text": "work the file reading the file is",
    "start": "770399",
    "end": "772880"
  },
  {
    "text": "asynchronous",
    "start": "772880",
    "end": "774320"
  },
  {
    "text": "and we said any file operations that is",
    "start": "774320",
    "end": "777839"
  },
  {
    "text": "asynchronous",
    "start": "777839",
    "end": "778800"
  },
  {
    "text": "we're going to use the thread pool so",
    "start": "778800",
    "end": "780480"
  },
  {
    "text": "now if you have it like you're reading i",
    "start": "780480",
    "end": "782399"
  },
  {
    "text": "don't know if you're building a web",
    "start": "782399",
    "end": "783360"
  },
  {
    "text": "server and you're reading all these",
    "start": "783360",
    "end": "784480"
  },
  {
    "text": "static files to serve it to your",
    "start": "784480",
    "end": "786720"
  },
  {
    "text": "client then thread pool's definitely",
    "start": "786720",
    "end": "789760"
  },
  {
    "text": "useful here",
    "start": "789760",
    "end": "790800"
  },
  {
    "text": "example number four example number four",
    "start": "790800",
    "end": "794800"
  },
  {
    "text": "didi diddy so",
    "start": "794800",
    "end": "798320"
  },
  {
    "text": "same exact thing but we're using the",
    "start": "798320",
    "end": "801200"
  },
  {
    "text": "we're printing immediately",
    "start": "801200",
    "end": "803279"
  },
  {
    "text": "the read of file synchronous what are we",
    "start": "803279",
    "end": "805920"
  },
  {
    "text": "going to do here in this case",
    "start": "805920",
    "end": "807440"
  },
  {
    "text": "synchronous operations goes into the",
    "start": "807440",
    "end": "809839"
  },
  {
    "text": "event main loop",
    "start": "809839",
    "end": "811440"
  },
  {
    "text": "so this is a blocking operation right",
    "start": "811440",
    "end": "814560"
  },
  {
    "text": "so now when the event with the event",
    "start": "814560",
    "end": "817200"
  },
  {
    "text": "loop",
    "start": "817200",
    "end": "817760"
  },
  {
    "text": "goes into the part where anyone reads",
    "start": "817760",
    "end": "820160"
  },
  {
    "text": "the file",
    "start": "820160",
    "end": "820880"
  },
  {
    "text": "it's going to use the synchronous",
    "start": "820880",
    "end": "822079"
  },
  {
    "text": "operation so it's going to be put in the",
    "start": "822079",
    "end": "824240"
  },
  {
    "text": "event main loop",
    "start": "824240",
    "end": "825279"
  },
  {
    "text": "okay all right example number five we're",
    "start": "825279",
    "end": "827839"
  },
  {
    "text": "doing a networking operation",
    "start": "827839",
    "end": "830000"
  },
  {
    "text": "to read from google and print the text",
    "start": "830000",
    "end": "833120"
  },
  {
    "text": "that we comes from back from google",
    "start": "833120",
    "end": "835279"
  },
  {
    "text": "what node.js is going to use is it",
    "start": "835279",
    "end": "837440"
  },
  {
    "text": "threading is going to use the event main",
    "start": "837440",
    "end": "839199"
  },
  {
    "text": "loop or",
    "start": "839199",
    "end": "840000"
  },
  {
    "text": "the thread it's actually a combinator of",
    "start": "840000",
    "end": "842000"
  },
  {
    "text": "both because",
    "start": "842000",
    "end": "843680"
  },
  {
    "text": "this part is a dns query before we call",
    "start": "843680",
    "end": "846880"
  },
  {
    "text": "fetch fetch will call",
    "start": "846880",
    "end": "848560"
  },
  {
    "text": "the dns package in node.js to do the dns",
    "start": "848560",
    "end": "852399"
  },
  {
    "text": "resolution to get google.com",
    "start": "852399",
    "end": "854399"
  },
  {
    "text": "that uses threading so if you have a lot",
    "start": "854399",
    "end": "857519"
  },
  {
    "text": "of domains",
    "start": "857519",
    "end": "858639"
  },
  {
    "text": "that is safe you can do all kinds of dns",
    "start": "858639",
    "end": "861760"
  },
  {
    "text": "operations there",
    "start": "861760",
    "end": "862720"
  },
  {
    "text": "however the network aspect of that",
    "start": "862720",
    "end": "866160"
  },
  {
    "text": "the actual call to fetch",
    "start": "866160",
    "end": "869279"
  },
  {
    "text": "to make the tcp request",
    "start": "869279",
    "end": "872720"
  },
  {
    "text": "to make the tcp segment to send the that",
    "start": "872720",
    "end": "875839"
  },
  {
    "text": "request to get request to get the back",
    "start": "875839",
    "end": "877600"
  },
  {
    "text": "the result",
    "start": "877600",
    "end": "878399"
  },
  {
    "text": "that's in the event main loop because",
    "start": "878399",
    "end": "879920"
  },
  {
    "text": "it's a networking operation",
    "start": "879920",
    "end": "881920"
  },
  {
    "text": "and as a result goes into event main",
    "start": "881920",
    "end": "884160"
  },
  {
    "text": "loop it says asynchronous",
    "start": "884160",
    "end": "886079"
  },
  {
    "text": "non-blocking because we're going to put",
    "start": "886079",
    "end": "888720"
  },
  {
    "text": "it as a callback",
    "start": "888720",
    "end": "889839"
  },
  {
    "text": "because of beautiful promises right",
    "start": "889839",
    "end": "894800"
  },
  {
    "text": "final example here is this is how you",
    "start": "894800",
    "end": "897519"
  },
  {
    "text": "basically",
    "start": "897519",
    "end": "898560"
  },
  {
    "text": "utilize the thread pole you do a uv",
    "start": "898560",
    "end": "900639"
  },
  {
    "text": "underscore thread pull underscore size",
    "start": "900639",
    "end": "903040"
  },
  {
    "text": "okay and this is the uv lib library",
    "start": "903040",
    "end": "906399"
  },
  {
    "text": "by default is four okay and you can",
    "start": "906399",
    "end": "909360"
  },
  {
    "text": "increase it",
    "start": "909360",
    "end": "910160"
  },
  {
    "text": "to any number you want again based on",
    "start": "910160",
    "end": "913519"
  },
  {
    "text": "what kind of operation you're doing so",
    "start": "913519",
    "end": "915920"
  },
  {
    "text": "if you're saying do if you're seeing",
    "start": "915920",
    "end": "917199"
  },
  {
    "text": "yourself doing crypto",
    "start": "917199",
    "end": "919360"
  },
  {
    "text": "or doing encryption or doing compression",
    "start": "919360",
    "end": "922639"
  },
  {
    "text": "a lot",
    "start": "922639",
    "end": "923760"
  },
  {
    "text": "uh then thread pools are definitely",
    "start": "923760",
    "end": "928240"
  },
  {
    "text": "very very useful right and uh you might",
    "start": "928240",
    "end": "931120"
  },
  {
    "text": "say finally you're saying",
    "start": "931120",
    "end": "933120"
  },
  {
    "text": "how can i make like how can i make my",
    "start": "933120",
    "end": "935839"
  },
  {
    "text": "node.js let's end up this video by the",
    "start": "935839",
    "end": "938160"
  },
  {
    "text": "by saying this how can i make my node.js",
    "start": "938160",
    "end": "940240"
  },
  {
    "text": "actually scalable",
    "start": "940240",
    "end": "941519"
  },
  {
    "text": "because node.js is a single threaded",
    "start": "941519",
    "end": "943600"
  },
  {
    "text": "when it comes to",
    "start": "943600",
    "end": "944800"
  },
  {
    "text": "building a web server or a service right",
    "start": "944800",
    "end": "947839"
  },
  {
    "text": "so in that case you can use clustering",
    "start": "947839",
    "end": "949680"
  },
  {
    "text": "i'm going to what you're going to do is",
    "start": "949680",
    "end": "950800"
  },
  {
    "text": "require the cluster and with the first",
    "start": "950800",
    "end": "953120"
  },
  {
    "text": "node.js that runs checks hey am i the",
    "start": "953120",
    "end": "955680"
  },
  {
    "text": "master am i their",
    "start": "955680",
    "end": "957120"
  },
  {
    "text": "primary node.js app yes if you are",
    "start": "957120",
    "end": "960320"
  },
  {
    "start": "960000",
    "end": "1122000"
  },
  {
    "text": "which is the first one you are then you",
    "start": "960320",
    "end": "962399"
  },
  {
    "text": "are the master process",
    "start": "962399",
    "end": "964079"
  },
  {
    "text": "then i am going to that's a very um",
    "start": "964079",
    "end": "967120"
  },
  {
    "text": "that's a best practice to use the number",
    "start": "967120",
    "end": "969279"
  },
  {
    "text": "of threads",
    "start": "969279",
    "end": "970160"
  },
  {
    "text": "as the number of cpu so you can",
    "start": "970160",
    "end": "971920"
  },
  {
    "text": "essentially execute them",
    "start": "971920",
    "end": "973279"
  },
  {
    "text": "in parallel right there is also the cpu",
    "start": "973279",
    "end": "976160"
  },
  {
    "text": "itself there's a physical cpu and",
    "start": "976160",
    "end": "977759"
  },
  {
    "text": "there's",
    "start": "977759",
    "end": "978560"
  },
  {
    "text": "physical threads on the cpu so like as",
    "start": "978560",
    "end": "981360"
  },
  {
    "text": "of course if you can have multiple",
    "start": "981360",
    "end": "982800"
  },
  {
    "text": "threads",
    "start": "982800",
    "end": "983839"
  },
  {
    "text": "those are like again these are like time",
    "start": "983839",
    "end": "986720"
  },
  {
    "text": "slicing essentially",
    "start": "986720",
    "end": "988160"
  },
  {
    "text": "not real threats they give you the",
    "start": "988160",
    "end": "989680"
  },
  {
    "text": "ability to give you the concurrency",
    "start": "989680",
    "end": "991519"
  },
  {
    "text": "right",
    "start": "991519",
    "end": "992800"
  },
  {
    "text": "but it's not really true parallelism and",
    "start": "992800",
    "end": "995920"
  },
  {
    "text": "then what we",
    "start": "995920",
    "end": "996560"
  },
  {
    "text": "do here is just loop through all the",
    "start": "996560",
    "end": "998639"
  },
  {
    "text": "number of uh",
    "start": "998639",
    "end": "999600"
  },
  {
    "text": "might as well just use the actual that",
    "start": "999600",
    "end": "1001199"
  },
  {
    "text": "variable",
    "start": "1001199",
    "end": "1002959"
  },
  {
    "text": "so we're going to loop through a number",
    "start": "1002959",
    "end": "1004240"
  },
  {
    "text": "of cpu and spin up",
    "start": "1004240",
    "end": "1006240"
  },
  {
    "text": "n number of forks essentially",
    "start": "1006240",
    "end": "1009519"
  },
  {
    "text": "essentially literally different",
    "start": "1009519",
    "end": "1010720"
  },
  {
    "text": "processes right and then",
    "start": "1010720",
    "end": "1013120"
  },
  {
    "text": "that process will use obviously the same",
    "start": "1013120",
    "end": "1015600"
  },
  {
    "text": "code when it comes that it knows it's",
    "start": "1015600",
    "end": "1017120"
  },
  {
    "text": "not the master right",
    "start": "1017120",
    "end": "1018959"
  },
  {
    "text": "that it will go to the else and we're",
    "start": "1018959",
    "end": "1020480"
  },
  {
    "text": "gonna listen to the same part one three",
    "start": "1020480",
    "end": "1022320"
  },
  {
    "text": "three seven right",
    "start": "1022320",
    "end": "1023680"
  },
  {
    "text": "and okay that's what the first process",
    "start": "1023680",
    "end": "1025520"
  },
  {
    "text": "listens to one three three seven",
    "start": "1025520",
    "end": "1027120"
  },
  {
    "text": "ready to take accept stuff right and",
    "start": "1027120",
    "end": "1029520"
  },
  {
    "text": "we're gonna explain what happened",
    "start": "1029520",
    "end": "1030798"
  },
  {
    "text": "what happened if i spin up another",
    "start": "1030799",
    "end": "1032400"
  },
  {
    "text": "process another process we're gonna go",
    "start": "1032400",
    "end": "1034160"
  },
  {
    "text": "with the same code and again listen",
    "start": "1034160",
    "end": "1035520"
  },
  {
    "text": "the same server you might say saying",
    "start": "1035520",
    "end": "1037678"
  },
  {
    "text": "that that's just",
    "start": "1037679",
    "end": "1038880"
  },
  {
    "text": "that's a bind error right there no",
    "start": "1038880",
    "end": "1042160"
  },
  {
    "text": "no no node.js have all sorts of hacky",
    "start": "1042160",
    "end": "1045678"
  },
  {
    "text": "stuff in this function that's called",
    "start": "1045679",
    "end": "1047520"
  },
  {
    "text": "listen what they do is",
    "start": "1047520",
    "end": "1050240"
  },
  {
    "text": "this function actually have knowledge",
    "start": "1050240",
    "end": "1053360"
  },
  {
    "text": "whether you are a fork or a primary if",
    "start": "1053360",
    "end": "1056480"
  },
  {
    "text": "you are a fork",
    "start": "1056480",
    "end": "1057600"
  },
  {
    "text": "it never listens on itself it asks its",
    "start": "1057600",
    "end": "1060880"
  },
  {
    "text": "parent to listen for it so the first",
    "start": "1060880",
    "end": "1063760"
  },
  {
    "text": "process",
    "start": "1063760",
    "end": "1064559"
  },
  {
    "text": "the first fork process will ask the",
    "start": "1064559",
    "end": "1066960"
  },
  {
    "text": "master process",
    "start": "1066960",
    "end": "1068320"
  },
  {
    "text": "to listen on port 13337 on that shirt",
    "start": "1068320",
    "end": "1070799"
  },
  {
    "text": "socket",
    "start": "1070799",
    "end": "1071520"
  },
  {
    "text": "get a file descriptor and then the",
    "start": "1071520",
    "end": "1073360"
  },
  {
    "text": "second process will do oh",
    "start": "1073360",
    "end": "1075440"
  },
  {
    "text": "hey master do i have this listen you go",
    "start": "1075440",
    "end": "1078000"
  },
  {
    "text": "okay let's just use the same thing it's",
    "start": "1078000",
    "end": "1080080"
  },
  {
    "text": "gonna start hooking on the same",
    "start": "1080080",
    "end": "1081919"
  },
  {
    "text": "all of them will share the same socket",
    "start": "1081919",
    "end": "1083440"
  },
  {
    "text": "essentially that's",
    "start": "1083440",
    "end": "1085440"
  },
  {
    "text": "a very powerful concept right so they",
    "start": "1085440",
    "end": "1087919"
  },
  {
    "text": "essentially this master process will",
    "start": "1087919",
    "end": "1089760"
  },
  {
    "text": "will manage the mutexes and then all",
    "start": "1089760",
    "end": "1091840"
  },
  {
    "text": "that stuff so you don't get locking and",
    "start": "1091840",
    "end": "1093760"
  },
  {
    "text": "all that jazz",
    "start": "1093760",
    "end": "1094559"
  },
  {
    "text": "right uh there there is a lot going on",
    "start": "1094559",
    "end": "1097600"
  },
  {
    "text": "here",
    "start": "1097600",
    "end": "1098000"
  },
  {
    "text": "obviously so there's in the uv library",
    "start": "1098000",
    "end": "1100160"
  },
  {
    "text": "here there's an option called except",
    "start": "1100160",
    "end": "1101520"
  },
  {
    "text": "simultaneous option uh",
    "start": "1101520",
    "end": "1103600"
  },
  {
    "text": "sockets this has to be enabled and it's",
    "start": "1103600",
    "end": "1106160"
  },
  {
    "text": "enabled by default",
    "start": "1106160",
    "end": "1107440"
  },
  {
    "text": "to properly do whatever you're doing",
    "start": "1107440",
    "end": "1110480"
  },
  {
    "text": "right here to accept multiple",
    "start": "1110480",
    "end": "1112720"
  },
  {
    "text": "uh connection on behalf of multiple",
    "start": "1112720",
    "end": "1114559"
  },
  {
    "text": "sockets all right guys that's it for me",
    "start": "1114559",
    "end": "1116240"
  },
  {
    "text": "today",
    "start": "1116240",
    "end": "1116720"
  },
  {
    "text": "i'm gonna see you in the next one hope",
    "start": "1116720",
    "end": "1118000"
  },
  {
    "text": "you enjoyed this video i'm gonna see you",
    "start": "1118000",
    "end": "1119440"
  },
  {
    "text": "in the next one you guys stay awesome",
    "start": "1119440",
    "end": "1120880"
  },
  {
    "text": "goodbye",
    "start": "1120880",
    "end": "1123440"
  }
]