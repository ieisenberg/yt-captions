[
  {
    "text": "what's going on guys today i want to",
    "start": "160",
    "end": "1839"
  },
  {
    "text": "talk about indexing",
    "start": "1839",
    "end": "3040"
  },
  {
    "text": "database indexes to be specific and um",
    "start": "3040",
    "end": "6640"
  },
  {
    "text": "specifically the reads and the rights to",
    "start": "6640",
    "end": "9679"
  },
  {
    "text": "these indexes",
    "start": "9679",
    "end": "10719"
  },
  {
    "text": "so how about we just casually talk about",
    "start": "10719",
    "end": "13280"
  },
  {
    "text": "that",
    "start": "13280",
    "end": "14559"
  },
  {
    "text": "let's assume you have one table with one",
    "start": "14559",
    "end": "17119"
  },
  {
    "text": "field",
    "start": "17119",
    "end": "17680"
  },
  {
    "text": "and an integer field so you can put",
    "start": "17680",
    "end": "19520"
  },
  {
    "text": "values in and you start adding",
    "start": "19520",
    "end": "21439"
  },
  {
    "text": "a row right in the second row and a",
    "start": "21439",
    "end": "23840"
  },
  {
    "text": "third row",
    "start": "23840",
    "end": "24720"
  },
  {
    "text": "with different values until you get to",
    "start": "24720",
    "end": "26960"
  },
  {
    "text": "million three million four million row",
    "start": "26960",
    "end": "28800"
  },
  {
    "text": "now the challenge becomes",
    "start": "28800",
    "end": "30000"
  },
  {
    "text": "how do you search for something exactly",
    "start": "30000",
    "end": "32320"
  },
  {
    "text": "like the number seven",
    "start": "32320",
    "end": "34000"
  },
  {
    "text": "right there's no solution you have to",
    "start": "34000",
    "end": "36399"
  },
  {
    "text": "pick up",
    "start": "36399",
    "end": "37040"
  },
  {
    "text": "row by row until you go through all of",
    "start": "37040",
    "end": "40160"
  },
  {
    "text": "them",
    "start": "40160",
    "end": "40719"
  },
  {
    "text": "and you retrieve all of them that has a",
    "start": "40719",
    "end": "42480"
  },
  {
    "text": "value of seven",
    "start": "42480",
    "end": "44000"
  },
  {
    "text": "and it really depends on the kind of",
    "start": "44000",
    "end": "45520"
  },
  {
    "text": "query if you want all the instances that",
    "start": "45520",
    "end": "47600"
  },
  {
    "text": "have the value of seven then obviously",
    "start": "47600",
    "end": "49520"
  },
  {
    "text": "it's the worst case you know you have to",
    "start": "49520",
    "end": "50960"
  },
  {
    "text": "go through the entire three million rows",
    "start": "50960",
    "end": "52719"
  },
  {
    "text": "table",
    "start": "52719",
    "end": "53280"
  },
  {
    "text": "but if you want the first instance there",
    "start": "53280",
    "end": "55520"
  },
  {
    "text": "could be a best case",
    "start": "55520",
    "end": "56800"
  },
  {
    "text": "worst case scenario as well right so",
    "start": "56800",
    "end": "58719"
  },
  {
    "text": "that's what the database people refer to",
    "start": "58719",
    "end": "60960"
  },
  {
    "text": "as a full",
    "start": "60960",
    "end": "62320"
  },
  {
    "text": "table scan and it's a the worst case",
    "start": "62320",
    "end": "65680"
  },
  {
    "text": "scenario basically you're scanning the",
    "start": "65680",
    "end": "67439"
  },
  {
    "text": "entire table",
    "start": "67439",
    "end": "68400"
  },
  {
    "text": "and you want to avoid that as much as",
    "start": "68400",
    "end": "70720"
  },
  {
    "text": "possible",
    "start": "70720",
    "end": "71520"
  },
  {
    "text": "let's talk about indexes so now if i",
    "start": "71520",
    "end": "74000"
  },
  {
    "text": "want to index",
    "start": "74000",
    "end": "75119"
  },
  {
    "text": "this 3 million row table i need another",
    "start": "75119",
    "end": "78400"
  },
  {
    "text": "data structure",
    "start": "78400",
    "end": "79600"
  },
  {
    "text": "on the side not in the tables could be",
    "start": "79600",
    "end": "81759"
  },
  {
    "text": "in the side",
    "start": "81759",
    "end": "83040"
  },
  {
    "text": "that has metadata above the table itself",
    "start": "83040",
    "end": "87360"
  },
  {
    "text": "and one data structure that is popular",
    "start": "87360",
    "end": "89360"
  },
  {
    "text": "is called b3 or balance",
    "start": "89360",
    "end": "90960"
  },
  {
    "text": "trees right where you start with a",
    "start": "90960",
    "end": "93759"
  },
  {
    "text": "number",
    "start": "93759",
    "end": "94479"
  },
  {
    "text": "and to the left is the lower numbers and",
    "start": "94479",
    "end": "97439"
  },
  {
    "text": "the right is the highest number",
    "start": "97439",
    "end": "99119"
  },
  {
    "text": "and there you build the entire structure",
    "start": "99119",
    "end": "102000"
  },
  {
    "text": "and in the index itself you find the",
    "start": "102000",
    "end": "103840"
  },
  {
    "text": "number the value you're looking for",
    "start": "103840",
    "end": "106000"
  },
  {
    "text": "that there will be a pair for the row",
    "start": "106000",
    "end": "109040"
  },
  {
    "text": "position",
    "start": "109040",
    "end": "110320"
  },
  {
    "text": "on which that row exists on disk",
    "start": "110320",
    "end": "114880"
  },
  {
    "text": "that's obviously not the implementation",
    "start": "114880",
    "end": "117040"
  },
  {
    "text": "for every single database engine",
    "start": "117040",
    "end": "119280"
  },
  {
    "text": "it's it really differs some people some",
    "start": "119280",
    "end": "121280"
  },
  {
    "text": "databases store the row pointer some",
    "start": "121280",
    "end": "123759"
  },
  {
    "text": "some store the primary key but i don't",
    "start": "123759",
    "end": "125439"
  },
  {
    "text": "want to go into details but that's the",
    "start": "125439",
    "end": "127280"
  },
  {
    "text": "gist of it",
    "start": "127280",
    "end": "128160"
  },
  {
    "text": "let's talk about writing so rights are",
    "start": "128160",
    "end": "130959"
  },
  {
    "text": "technically",
    "start": "130959",
    "end": "131680"
  },
  {
    "text": "slower with the index than without the",
    "start": "131680",
    "end": "135040"
  },
  {
    "text": "index right well it depends how slow and",
    "start": "135040",
    "end": "137040"
  },
  {
    "text": "you can argue with that but",
    "start": "137040",
    "end": "138560"
  },
  {
    "text": "it is slower nonetheless right so what",
    "start": "138560",
    "end": "140800"
  },
  {
    "text": "are we gonna do if i'm gonna insert",
    "start": "140800",
    "end": "142640"
  },
  {
    "text": "a new row in a new table so now if i'm",
    "start": "142640",
    "end": "145920"
  },
  {
    "text": "inserting the",
    "start": "145920",
    "end": "146959"
  },
  {
    "text": "value number seven i'm gonna update the",
    "start": "146959",
    "end": "148959"
  },
  {
    "text": "index make it as a root and then write",
    "start": "148959",
    "end": "150959"
  },
  {
    "text": "it to the",
    "start": "150959",
    "end": "151920"
  },
  {
    "text": "table and then point that row location",
    "start": "151920",
    "end": "155280"
  },
  {
    "text": "and disk",
    "start": "155280",
    "end": "156000"
  },
  {
    "text": "on my index and then write another valve",
    "start": "156000",
    "end": "158879"
  },
  {
    "text": "and let's say we're the second row is",
    "start": "158879",
    "end": "161040"
  },
  {
    "text": "value number 10",
    "start": "161040",
    "end": "162239"
  },
  {
    "text": "10 is greater than seven so put it on",
    "start": "162239",
    "end": "164160"
  },
  {
    "text": "the right is this the right or left i",
    "start": "164160",
    "end": "165519"
  },
  {
    "text": "don't know",
    "start": "165519",
    "end": "166000"
  },
  {
    "text": "based on your how do you look at this so",
    "start": "166000",
    "end": "168319"
  },
  {
    "text": "put it on the right",
    "start": "168319",
    "end": "169440"
  },
  {
    "text": "and then update their value on the table",
    "start": "169440",
    "end": "172560"
  },
  {
    "text": "let's say the third value is the value",
    "start": "172560",
    "end": "174080"
  },
  {
    "text": "number one so value number one is less",
    "start": "174080",
    "end": "176640"
  },
  {
    "text": "than seven so you're going to put it to",
    "start": "176640",
    "end": "178080"
  },
  {
    "text": "the right",
    "start": "178080",
    "end": "178959"
  },
  {
    "text": "to the right to the left in this case",
    "start": "178959",
    "end": "180720"
  },
  {
    "text": "and you update the roll location and you",
    "start": "180720",
    "end": "182560"
  },
  {
    "text": "update everything",
    "start": "182560",
    "end": "184000"
  },
  {
    "text": "then you go on and you might say jose",
    "start": "184000",
    "end": "186319"
  },
  {
    "text": "this is not so bad right i'm",
    "start": "186319",
    "end": "188239"
  },
  {
    "text": "i'm just updating that and just",
    "start": "188239",
    "end": "189680"
  },
  {
    "text": "inserting insert so it should be fast",
    "start": "189680",
    "end": "191519"
  },
  {
    "text": "it's just like",
    "start": "191519",
    "end": "193040"
  },
  {
    "text": "very very little a little smaller i o",
    "start": "193040",
    "end": "196080"
  },
  {
    "text": "operation",
    "start": "196080",
    "end": "197280"
  },
  {
    "text": "but b trees in general have something",
    "start": "197280",
    "end": "200000"
  },
  {
    "text": "the problem with b3s is",
    "start": "200000",
    "end": "202400"
  },
  {
    "text": "you need to balance them from now on",
    "start": "202400",
    "end": "204319"
  },
  {
    "text": "otherwise you're going to get this long",
    "start": "204319",
    "end": "206400"
  },
  {
    "text": "chain that goes this way right that that",
    "start": "206400",
    "end": "209599"
  },
  {
    "text": "performance so the trigger of",
    "start": "209599",
    "end": "212959"
  },
  {
    "text": "rebalancing the three",
    "start": "212959",
    "end": "214319"
  },
  {
    "text": "is what's so that's why some some",
    "start": "214319",
    "end": "216640"
  },
  {
    "text": "answers will be",
    "start": "216640",
    "end": "217519"
  },
  {
    "text": "extremely fast some inserts after three",
    "start": "217519",
    "end": "220159"
  },
  {
    "text": "four million rows",
    "start": "220159",
    "end": "221440"
  },
  {
    "text": "will trigger a b3 update to rebalance",
    "start": "221440",
    "end": "224720"
  },
  {
    "text": "the tree",
    "start": "224720",
    "end": "225519"
  },
  {
    "text": "can potentially slow down your rights",
    "start": "225519",
    "end": "229200"
  },
  {
    "text": "and rebalancing in a nutshell is every",
    "start": "229200",
    "end": "232239"
  },
  {
    "text": "node should have only",
    "start": "232239",
    "end": "233920"
  },
  {
    "text": "two i believe or three children and if",
    "start": "233920",
    "end": "236799"
  },
  {
    "text": "it has a lot so",
    "start": "236799",
    "end": "238319"
  },
  {
    "text": "the the children will break and become",
    "start": "238319",
    "end": "240480"
  },
  {
    "text": "parent to other nodes and that's how we",
    "start": "240480",
    "end": "242799"
  },
  {
    "text": "will rebalance",
    "start": "242799",
    "end": "243760"
  },
  {
    "text": "the act of rebalancing the tree",
    "start": "243760",
    "end": "247439"
  },
  {
    "text": "can slow down rights and potentially can",
    "start": "247439",
    "end": "251519"
  },
  {
    "text": "damage your desk because what is a",
    "start": "251519",
    "end": "254560"
  },
  {
    "text": "rebalance a",
    "start": "254560",
    "end": "255519"
  },
  {
    "text": "rebound is not just an insert it's an",
    "start": "255519",
    "end": "257280"
  },
  {
    "text": "update because you're",
    "start": "257280",
    "end": "259359"
  },
  {
    "text": "updating in place that index to",
    "start": "259359",
    "end": "262400"
  },
  {
    "text": "to to mean something else right you're",
    "start": "262400",
    "end": "264320"
  },
  {
    "text": "rebalancing it right and",
    "start": "264320",
    "end": "265840"
  },
  {
    "text": "unlike just inserting it to the end of",
    "start": "265840",
    "end": "267680"
  },
  {
    "text": "the table right",
    "start": "267680",
    "end": "269120"
  },
  {
    "text": "and that an update to ssd is the worst",
    "start": "269120",
    "end": "272000"
  },
  {
    "text": "thing you can do over",
    "start": "272000",
    "end": "273360"
  },
  {
    "text": "so a b3 rebalancing is not so bad if you",
    "start": "273360",
    "end": "276400"
  },
  {
    "text": "have like a mechanical drive because",
    "start": "276400",
    "end": "278080"
  },
  {
    "text": "those can last longer but ssds",
    "start": "278080",
    "end": "280560"
  },
  {
    "text": "when you update in place those have",
    "start": "280560",
    "end": "282800"
  },
  {
    "text": "shelf life",
    "start": "282800",
    "end": "283680"
  },
  {
    "text": "you can only update so many time after",
    "start": "283680",
    "end": "286639"
  },
  {
    "text": "which though that bit",
    "start": "286639",
    "end": "288560"
  },
  {
    "text": "and that obviously depends really how",
    "start": "288560",
    "end": "290479"
  },
  {
    "text": "many times you're writing right if",
    "start": "290479",
    "end": "292240"
  },
  {
    "text": "you're writing only",
    "start": "292240",
    "end": "293360"
  },
  {
    "text": "like you wrote one terabyte worth of",
    "start": "293360",
    "end": "295840"
  },
  {
    "text": "content",
    "start": "295840",
    "end": "296960"
  },
  {
    "text": "and then you enabled an index that's not",
    "start": "296960",
    "end": "299360"
  },
  {
    "text": "so bad right you're just writing once",
    "start": "299360",
    "end": "301360"
  },
  {
    "text": "but",
    "start": "301360",
    "end": "302000"
  },
  {
    "text": "if you're so yeah it depends on the use",
    "start": "302000",
    "end": "304479"
  },
  {
    "text": "case if you're writing a lot i don't",
    "start": "304479",
    "end": "306320"
  },
  {
    "text": "know if you're building a",
    "start": "306320",
    "end": "307840"
  },
  {
    "text": "logging application that logs a lot",
    "start": "307840",
    "end": "310320"
  },
  {
    "text": "probably",
    "start": "310320",
    "end": "311199"
  },
  {
    "text": "a b3 is not that good idea that's when i",
    "start": "311199",
    "end": "314479"
  },
  {
    "text": "recommend an",
    "start": "314479",
    "end": "315120"
  },
  {
    "text": "lsm load structured log and if you're",
    "start": "315120",
    "end": "318320"
  },
  {
    "text": "doing like a batch",
    "start": "318320",
    "end": "319840"
  },
  {
    "text": "data loading i really recommend you",
    "start": "319840",
    "end": "322960"
  },
  {
    "text": "load the entire data without any indexes",
    "start": "322960",
    "end": "325680"
  },
  {
    "text": "and then enable the indexes",
    "start": "325680",
    "end": "327600"
  },
  {
    "text": "right this way you don't have to have",
    "start": "327600",
    "end": "330000"
  },
  {
    "text": "the hit right",
    "start": "330000",
    "end": "331199"
  },
  {
    "text": "right that's the right one it is also",
    "start": "331199",
    "end": "333280"
  },
  {
    "text": "true that the more indexes you have the",
    "start": "333280",
    "end": "335199"
  },
  {
    "text": "slower the right",
    "start": "335199",
    "end": "336400"
  },
  {
    "text": "becomes because every index you have is",
    "start": "336400",
    "end": "339520"
  },
  {
    "text": "basically another data structure that",
    "start": "339520",
    "end": "341440"
  },
  {
    "text": "the database have to worry about",
    "start": "341440",
    "end": "343360"
  },
  {
    "text": "updating right so it's very useful",
    "start": "343360",
    "end": "346160"
  },
  {
    "text": "technology obviously that's why if you",
    "start": "346160",
    "end": "347759"
  },
  {
    "text": "want to play with these",
    "start": "347759",
    "end": "349039"
  },
  {
    "text": "indexes and the data engine i really",
    "start": "349039",
    "end": "350880"
  },
  {
    "text": "recommend mysql or mariadb",
    "start": "350880",
    "end": "353360"
  },
  {
    "text": "because you can swizzle the database",
    "start": "353360",
    "end": "355440"
  },
  {
    "text": "underlying database engine",
    "start": "355440",
    "end": "357039"
  },
  {
    "text": "to be my asm or anodb or roxdb",
    "start": "357039",
    "end": "360560"
  },
  {
    "text": "and test and guys check out my database",
    "start": "360560",
    "end": "363759"
  },
  {
    "text": "engine youtube video just to database",
    "start": "363759",
    "end": "366639"
  },
  {
    "text": "engine hussein",
    "start": "366639",
    "end": "367919"
  },
  {
    "text": "and this is how you search for my",
    "start": "367919",
    "end": "369680"
  },
  {
    "text": "content that's the easiest way",
    "start": "369680",
    "end": "371039"
  },
  {
    "text": "right database enjoy i made like a",
    "start": "371039",
    "end": "372400"
  },
  {
    "text": "one-hour video talking about these",
    "start": "372400",
    "end": "373680"
  },
  {
    "text": "database engines check it out",
    "start": "373680",
    "end": "377520"
  }
]