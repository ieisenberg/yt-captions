[
  {
    "start": "0",
    "end": "780000"
  },
  {
    "text": "you know guys the basic architecture of the web as we know",
    "start": "0",
    "end": "6480"
  },
  {
    "text": "it it's quite simple and you might argue it's actually elegant",
    "start": "6480",
    "end": "13040"
  },
  {
    "text": "and beautiful if you actually look at it at its core but unfortunately",
    "start": "13040",
    "end": "19199"
  },
  {
    "text": "we need as we add more features to both",
    "start": "19199",
    "end": "24320"
  },
  {
    "text": "the web as it's a client the browser mainly and the web server which are the",
    "start": "24320",
    "end": "30320"
  },
  {
    "text": "feeder if you will of the content complexity arises problems arise as a",
    "start": "30320",
    "end": "37120"
  },
  {
    "text": "result one problem that you might familiar with is you visit a web page",
    "start": "37120",
    "end": "43040"
  },
  {
    "text": "and you get certain layout and after a fraction of a second that layout",
    "start": "43040",
    "end": "49120"
  },
  {
    "text": "started to kind of jiggle and shift you know and",
    "start": "49120",
    "end": "55680"
  },
  {
    "text": "and the reason if you're a fronted developer you you have the answer you know why right says",
    "start": "55680",
    "end": "61520"
  },
  {
    "text": "hey i loaded the html first i made a request i got",
    "start": "61520",
    "end": "68000"
  },
  {
    "text": "the first thing that the server responded to me with is the html and i",
    "start": "68000",
    "end": "73439"
  },
  {
    "text": "rendered whatever i can render right so the text will show up",
    "start": "73439",
    "end": "79439"
  },
  {
    "text": "right paragraphs if there is like dev's element they will show up but",
    "start": "79439",
    "end": "85520"
  },
  {
    "text": "we're still waiting for a lot of other things the browsers sometimes start to be smart and",
    "start": "85520",
    "end": "90880"
  },
  {
    "text": "not to learn things that depends on certain things but sometimes you see it",
    "start": "90880",
    "end": "96479"
  },
  {
    "text": "so the dependencies here like css files javascript if you have code that",
    "start": "96479",
    "end": "101920"
  },
  {
    "text": "shifts your layout along and as a result",
    "start": "101920",
    "end": "106798"
  },
  {
    "text": "once you get the html all these references are then turned around and requested",
    "start": "107119",
    "end": "113280"
  },
  {
    "text": "on the same connection that you requested the html on or",
    "start": "113280",
    "end": "118640"
  },
  {
    "text": "right it depends on the protocol http one or two multiple connections can be open and all",
    "start": "118640",
    "end": "125040"
  },
  {
    "text": "these requests are sent at the same time in http 1 you have a limit of six",
    "start": "125040",
    "end": "131360"
  },
  {
    "text": "connections i think um created this arbitrary limit and you can only sit since six requests",
    "start": "131360",
    "end": "137120"
  },
  {
    "text": "at a time and just you have to wait each connection has a request in http 2",
    "start": "137120",
    "end": "142239"
  },
  {
    "text": "we basically have no limit believe there is an artificial 200 limits",
    "start": "142239",
    "end": "147599"
  },
  {
    "text": "uh per connection right for each stream but that's enough that's more than",
    "start": "147599",
    "end": "153280"
  },
  {
    "text": "enough right so you can use this and send it in parallel regardless but the question here is",
    "start": "153280",
    "end": "159200"
  },
  {
    "text": "yeah you sent you have seven images and you have five css files and three javascript files",
    "start": "159200",
    "end": "167440"
  },
  {
    "text": "right and you made all these requests at the same time and even if you try to be smart they say",
    "start": "167440",
    "end": "172480"
  },
  {
    "text": "okay i'm going to send the javascript first because i need the verse and i'm going to send the c assist in a second",
    "start": "172480",
    "end": "177680"
  },
  {
    "text": "because i only need those and the images are not important so i'm going to add them request them at the end",
    "start": "177680",
    "end": "183920"
  },
  {
    "text": "the way you request doesn't matter right because",
    "start": "183920",
    "end": "189360"
  },
  {
    "text": "the end of the day these requests technically have no priority or anything like that they will all assuming you",
    "start": "189360",
    "end": "196640"
  },
  {
    "text": "didn't actually physically delay them but you just change the order of what the request you",
    "start": "196640",
    "end": "202800"
  },
  {
    "text": "sent all of these requests will be added off the server and the server will respond",
    "start": "202800",
    "end": "209360"
  },
  {
    "text": "as fast as possible to any of them",
    "start": "209360",
    "end": "215599"
  },
  {
    "text": "so if the images were happened to be cached by a front-end content management",
    "start": "215599",
    "end": "222560"
  },
  {
    "text": "content delivery network or a reverse proxy of some sort",
    "start": "222560",
    "end": "228239"
  },
  {
    "text": "those images will be served first and the css will be delayed right it's",
    "start": "228239",
    "end": "233599"
  },
  {
    "text": "just whatever is available just serve it that's that's how it works today and the problem here",
    "start": "233599",
    "end": "239680"
  },
  {
    "text": "is because we don't have that guarantee then we have this the the the",
    "start": "239680",
    "end": "247280"
  },
  {
    "text": "dependency tree is broken in our page and the experience of the user is",
    "start": "247280",
    "end": "252959"
  },
  {
    "text": "hindered so that's one user case use case right like where you can actually",
    "start": "252959",
    "end": "259759"
  },
  {
    "text": "there's a problem where we want to set some sort of priority",
    "start": "259759",
    "end": "265199"
  },
  {
    "text": "and the request which doesn't exist today you might argue that you can",
    "start": "265199",
    "end": "270240"
  },
  {
    "text": "fictitiously create this priority by literally just delaying sending those requests don't",
    "start": "270240",
    "end": "276000"
  },
  {
    "text": "send the images the images are not as important as the javascript files or css",
    "start": "276000",
    "end": "281040"
  },
  {
    "text": "okay just don't send them right well technically you don't have that",
    "start": "281040",
    "end": "289280"
  },
  {
    "text": "the browser does but not you as a front-end developer but if you're building an app",
    "start": "289280",
    "end": "295280"
  },
  {
    "text": "you get my point right another control you have",
    "start": "295280",
    "end": "300400"
  },
  {
    "text": "is don't build so many files and and a lot of the i i follow this channel the",
    "start": "300400",
    "end": "306720"
  },
  {
    "text": "chrome developers channel and they have good suggestions um i don't write front end code but",
    "start": "306720",
    "end": "313520"
  },
  {
    "text": "as as often but but it's it's very nice the the",
    "start": "313520",
    "end": "319840"
  },
  {
    "text": "the depth of knowledge they go into discussing how the browser works and",
    "start": "319840",
    "end": "326800"
  },
  {
    "text": "what what the browser decides to load first you know based on like what what",
    "start": "326800",
    "end": "332400"
  },
  {
    "text": "what synchronous requests are blocking what others are not the brothers does so much",
    "start": "332400",
    "end": "339759"
  },
  {
    "text": "complex things to be uh you know to give the user the best",
    "start": "339759",
    "end": "345840"
  },
  {
    "text": "user experience effectively and but yes though some some of these require some",
    "start": "345840",
    "end": "351759"
  },
  {
    "text": "of these um you know tabs they say use inline css instead of a css file",
    "start": "351759",
    "end": "359280"
  },
  {
    "text": "why because the inline css will arrive with your html file and because it will arrive",
    "start": "359280",
    "end": "367120"
  },
  {
    "text": "with the html file based on the what you see what you get principle",
    "start": "367120",
    "end": "372479"
  },
  {
    "text": "the browser has it and it doesn't have to turn around",
    "start": "372479",
    "end": "377680"
  },
  {
    "text": "and make a request to fetch that resource right same thing with javascript with",
    "start": "377680",
    "end": "384479"
  },
  {
    "text": "javascript i think it's a bad idea to use inline javascripts",
    "start": "384479",
    "end": "390720"
  },
  {
    "text": "right just because i mean uh the reason i don't like the inline",
    "start": "390720",
    "end": "398960"
  },
  {
    "text": "script and i try to disable them with the content security policy is is because i want to get rid of",
    "start": "398960",
    "end": "407520"
  },
  {
    "text": "cross-site scripting because that's one of the most nastiest you know security",
    "start": "407520",
    "end": "412639"
  },
  {
    "text": "attack right and if most of these are because of inline scripts right the script tag",
    "start": "412639",
    "end": "420960"
  },
  {
    "text": "script and then you close the tag so what you do is you host your javascript files",
    "start": "420960",
    "end": "427919"
  },
  {
    "text": "um on a specific domain that is trusted and your page is instructed not to load any javascript",
    "start": "427919",
    "end": "435919"
  },
  {
    "text": "from anywhere except this domain which is your domain and just because you have that that is an additional layer of",
    "start": "435919",
    "end": "443440"
  },
  {
    "text": "security so that nobody can just do like in an input text like inject the",
    "start": "443440",
    "end": "448639"
  },
  {
    "text": "javascript in your code in your page and then act on your behalf effectively that's",
    "start": "448639",
    "end": "454080"
  },
  {
    "text": "just one of the nastiest things right but but i understand sometimes it's not always possible to disable this because",
    "start": "454080",
    "end": "460240"
  },
  {
    "text": "you need you need certain there is always a reason right i i",
    "start": "460240",
    "end": "467199"
  },
  {
    "text": "i try not to tell people what's best anymore because",
    "start": "467199",
    "end": "473440"
  },
  {
    "text": "you know i i came to the comfort with myself that i don't",
    "start": "473440",
    "end": "479919"
  },
  {
    "text": "know everything you know whatever i say could possibly be wrong so",
    "start": "479919",
    "end": "487680"
  },
  {
    "text": "telling people that oh you should always do this and not never do this",
    "start": "487680",
    "end": "493280"
  },
  {
    "text": "sbs because like what do you know you are an outsider you're an arm chair",
    "start": "493280",
    "end": "499120"
  },
  {
    "text": "architect literally just spewing stuff on people you don't know",
    "start": "499120",
    "end": "504960"
  },
  {
    "text": "their use case you don't know anything about how many years they've been working on this card you don't know anything so you can't just tell people",
    "start": "504960",
    "end": "512479"
  },
  {
    "text": "to oh drop everything this is the way to go so i believe always believe that there is a",
    "start": "512479",
    "end": "518959"
  },
  {
    "text": "special use case for everything right and understanding the risks is what matters",
    "start": "518959",
    "end": "527200"
  },
  {
    "text": "i know we're going all over the place there's there's a point of of this back in engineering show actually",
    "start": "527200",
    "end": "534640"
  },
  {
    "text": "uh we're gonna get to it there's an rfc i want to discuss we can't always",
    "start": "534640",
    "end": "541519"
  },
  {
    "text": "set you know solve the problem of priority responses you know",
    "start": "541519",
    "end": "547680"
  },
  {
    "text": "and here's another problem when you even if you somehow",
    "start": "547680",
    "end": "554160"
  },
  {
    "text": "hard-coded the responses on your servers like you own the web server you're on the back",
    "start": "554160",
    "end": "559440"
  },
  {
    "text": "end and you always gonna configure your back end to respond with css javascript and then",
    "start": "559440",
    "end": "567200"
  },
  {
    "text": "images and then other unimportant files like whatever and",
    "start": "567200",
    "end": "574240"
  },
  {
    "text": "and guys you can generalize this you can go into apis",
    "start": "574480",
    "end": "580000"
  },
  {
    "text": "their uh apis also can request can have priorities like this api is more",
    "start": "580000",
    "end": "585200"
  },
  {
    "text": "important than this api so please res if i send you two requests respond with this first before this if if you can",
    "start": "585200",
    "end": "592720"
  },
  {
    "text": "right if applicable i think it's just generalized i'm giving the html uh javascript css because it's a kind of",
    "start": "592720",
    "end": "599680"
  },
  {
    "text": "common example right so you can configure your back to respond with whatever priority you",
    "start": "599680",
    "end": "605920"
  },
  {
    "text": "feel best right will that work",
    "start": "605920",
    "end": "611040"
  },
  {
    "text": "sure it will but it's kind of it's kind of nasty to code right i think",
    "start": "611040",
    "end": "619519"
  },
  {
    "text": "like it's like what if you want to spin up multiple servers and like like having special logic",
    "start": "619519",
    "end": "626320"
  },
  {
    "text": "what could go wrong right so that's one problem i'm not worried much about that but the",
    "start": "626320",
    "end": "633200"
  },
  {
    "text": "second problem is what if what about uh intermediaries right",
    "start": "633200",
    "end": "640880"
  },
  {
    "text": "things that are in the middle what if there's a cdn between you right and the client the client",
    "start": "640880",
    "end": "649040"
  },
  {
    "text": "and the back end and if you have a cdn the cdn is a layer",
    "start": "649040",
    "end": "654079"
  },
  {
    "text": "7 tls terminator always you know",
    "start": "654079",
    "end": "659200"
  },
  {
    "text": "reverse proxy that means it reads all the requests",
    "start": "659200",
    "end": "664240"
  },
  {
    "text": "it terminates all the requests read them decrypt them understand them serve the",
    "start": "664240",
    "end": "670000"
  },
  {
    "text": "client's certificate and then turns around and then request make this",
    "start": "670000",
    "end": "675360"
  },
  {
    "text": "request on another connection to the actual backend if it doesn't have the answer cached",
    "start": "675360",
    "end": "681600"
  },
  {
    "text": "even if you or backend obeyed the",
    "start": "681600",
    "end": "687200"
  },
  {
    "text": "that priority that you kind of hard coded in your app",
    "start": "687200",
    "end": "692240"
  },
  {
    "text": "right the cdn or the reverse proxies",
    "start": "692240",
    "end": "698560"
  },
  {
    "text": "will have no clue about them if you receive all the responses if you",
    "start": "698560",
    "end": "703600"
  },
  {
    "text": "respond to the reverse proxies the reverse proxy will follow whatever is",
    "start": "703600",
    "end": "710000"
  },
  {
    "text": "whatever is applicable for it right so if there is like a delay in the first",
    "start": "710000",
    "end": "715040"
  },
  {
    "text": "request for first response for some reason like a segment was lost and it was to re-transmit it but the rest of",
    "start": "715040",
    "end": "721200"
  },
  {
    "text": "them of the request responses went normally then it will say",
    "start": "721200",
    "end": "726480"
  },
  {
    "text": "whatever is available for me i will respond with this maybe right",
    "start": "726480",
    "end": "732399"
  },
  {
    "text": "maybe there is some sort of um memory contention and uh",
    "start": "732399",
    "end": "737760"
  },
  {
    "text": "maybe there is a certain logic that the responses are being",
    "start": "737760",
    "end": "743200"
  },
  {
    "text": "asserted maybe maybe the the the reverse proxy will decide oh i actually this is the first request so i must serve this",
    "start": "743200",
    "end": "750240"
  },
  {
    "text": "request first and this request maybe happened to be the image and no you",
    "start": "750240",
    "end": "755279"
  },
  {
    "text": "don't want to serve the image first i want to serve the css right but we can't control any of that so",
    "start": "755279",
    "end": "761760"
  },
  {
    "text": "people from cloud flare and fastly came together and built a very interesting",
    "start": "761760",
    "end": "769200"
  },
  {
    "text": "yeah let's just talk through this screen yeah yeah so this is it an rfc so this was a",
    "start": "769200",
    "end": "778240"
  },
  {
    "text": "designed actually very fresh you know it's june 2022 it's like literally this month has",
    "start": "778240",
    "end": "784000"
  },
  {
    "start": "780000",
    "end": "1500000"
  },
  {
    "text": "been proposed the standard i think right and it was basically designed by lucas",
    "start": "784000",
    "end": "790880"
  },
  {
    "text": "perdue he's from cloudflare and he he's also i think in the board of the",
    "start": "790880",
    "end": "796800"
  },
  {
    "text": "http 3n quick and mask and so many other stuff right and then oko kazuoko he's from",
    "start": "796800",
    "end": "804720"
  },
  {
    "text": "fastly and yeah those are two badasses engineers you know",
    "start": "804720",
    "end": "810320"
  },
  {
    "text": "they're so you know i like following them and just learning so much",
    "start": "810320",
    "end": "815519"
  },
  {
    "text": "from the depth of the you know they are into the trenches building this stuff you know",
    "start": "815519",
    "end": "821120"
  },
  {
    "text": "building something like this and taking care of the proxies and you",
    "start": "821120",
    "end": "826399"
  },
  {
    "text": "know the connect method what if i am in a proxy not a reverse proxy an actual proxy what does that mean taking care of",
    "start": "826399",
    "end": "833920"
  },
  {
    "text": "all of this stuff right so this is basically the the rfc i'm not",
    "start": "833920",
    "end": "839519"
  },
  {
    "text": "gonna go through it obviously right but just just just uh kind of summarize read",
    "start": "839519",
    "end": "845519"
  },
  {
    "text": "the abstract and and then talk talk through it with you guys a little bit",
    "start": "845519",
    "end": "850720"
  },
  {
    "text": "so this is a request for comment 92 18. uh again uh",
    "start": "850720",
    "end": "857440"
  },
  {
    "text": "lucas perdue and oko from fastly june 2022 fresh",
    "start": "857440",
    "end": "862639"
  },
  {
    "text": "again uh it's named extensible prior prioritization",
    "start": "862639",
    "end": "870279"
  },
  {
    "text": "scheme for http i butchered the heck out of that extensible prioritization",
    "start": "870560",
    "end": "877199"
  },
  {
    "text": "scheme for http and so this is basically introducing a",
    "start": "877199",
    "end": "882800"
  },
  {
    "text": "new header http header if i'm not mistaken okay i skimmed through the rfc",
    "start": "882800",
    "end": "889600"
  },
  {
    "text": "all right i read the main main points and that's what i basically got it and",
    "start": "889600",
    "end": "894959"
  },
  {
    "text": "it's it is a complex one in my opinion to implement right",
    "start": "894959",
    "end": "900800"
  },
  {
    "text": "this document describes a scheme that allows an http client to communicate its",
    "start": "900800",
    "end": "908560"
  },
  {
    "text": "preferences for how the upstream server prioritizes",
    "start": "908560",
    "end": "914399"
  },
  {
    "text": "responses to its request so the client here",
    "start": "914399",
    "end": "919839"
  },
  {
    "text": "you know tells the server hey i want this request",
    "start": "919839",
    "end": "925360"
  },
  {
    "text": "to be served before this not in the order they are essentially",
    "start": "925360",
    "end": "930880"
  },
  {
    "text": "received why because the order you sent them",
    "start": "930880",
    "end": "937600"
  },
  {
    "text": "the request are not guaranteed to be received in that order to begin with",
    "start": "937600",
    "end": "945440"
  },
  {
    "text": "there's this thing that's called tcp head offline blocking there is packets that get lost you know",
    "start": "945440",
    "end": "953120"
  },
  {
    "text": "and and i'm talking about all you know all the protocols you might say i say oh dv3",
    "start": "953120",
    "end": "959120"
  },
  {
    "text": "fixed the tcp head of rock yeah it did but that that doesn't mean it uses udp",
    "start": "959120",
    "end": "964320"
  },
  {
    "text": "so udb still can be lost and very transmitted so one stream one request",
    "start": "964320",
    "end": "971440"
  },
  {
    "text": "even if you send request one before request two request two might",
    "start": "971440",
    "end": "976800"
  },
  {
    "text": "arrive to the server before request one what do i mean by",
    "start": "976800",
    "end": "984320"
  },
  {
    "text": "arrive you know we we really",
    "start": "984320",
    "end": "990240"
  },
  {
    "text": "don't talk in much technical details as we should as software engineer",
    "start": "990320",
    "end": "996560"
  },
  {
    "text": "if i send a request that is get path",
    "start": "996560",
    "end": "1002399"
  },
  {
    "text": "let's say just slash app and then http slash one one",
    "start": "1002399",
    "end": "1009040"
  },
  {
    "text": "the fact that i sent that and i sent a bunch of hitters and then buddy there's",
    "start": "1009040",
    "end": "1014240"
  },
  {
    "text": "nobody can get i keep forgetting that just a bunch of stuff this string of things",
    "start": "1014240",
    "end": "1021279"
  },
  {
    "text": "is then transmitted into from the layer seven",
    "start": "1021279",
    "end": "1028880"
  },
  {
    "text": "like the application layer into the r4 and based on that",
    "start": "1028880",
    "end": "1034319"
  },
  {
    "text": "based on the maximum transmission unit of your network it will be broken down",
    "start": "1034319",
    "end": "1039678"
  },
  {
    "text": "into maximum segment sizes so into small segments based on that size that size is",
    "start": "1039679",
    "end": "1045438"
  },
  {
    "text": "around 1400 bytes give or take no",
    "start": "1045439",
    "end": "1050799"
  },
  {
    "text": "and could be larger in in cloud providers you know internal networks so this 1400 bytes so your string that",
    "start": "1050799",
    "end": "1058799"
  },
  {
    "text": "request it will be broken into 1400 segments and the last one will be obviously smaller based on whatever",
    "start": "1058799",
    "end": "1064480"
  },
  {
    "text": "remains so these segments are ordered labeled sequenced you know and then",
    "start": "1064480",
    "end": "1071440"
  },
  {
    "text": "sent yeah and and and they are placed in ip packets you know",
    "start": "1071440",
    "end": "1077600"
  },
  {
    "text": "and these ip packets are sent through the internet destined to the destination",
    "start": "1077600",
    "end": "1083360"
  },
  {
    "text": "ip address from you as the source ips as a client and and as they travel",
    "start": "1083360",
    "end": "1089520"
  },
  {
    "text": "the router look at these ip packets and try the best effort to take it to the shortest",
    "start": "1089520",
    "end": "1097440"
  },
  {
    "text": "path the best path you know there is no discrimination for",
    "start": "1097440",
    "end": "1104000"
  },
  {
    "text": "any ip packet all ip packets are treated okay i'm gonna give you the fastest best fast and if",
    "start": "1104000",
    "end": "1110720"
  },
  {
    "text": "that's what knit neutrality right tries to kind of preserve here and it's like",
    "start": "1110720",
    "end": "1116799"
  },
  {
    "text": "hey keep the net neutral as much as possible so i don't want",
    "start": "1116799",
    "end": "1123200"
  },
  {
    "text": "uh routers start preferring certain ip packets over others right but that's a",
    "start": "1123200",
    "end": "1128400"
  },
  {
    "text": "different story so that all these ip packets like i'm going to give you the shortest path",
    "start": "1128400",
    "end": "1134880"
  },
  {
    "text": "and if an ip packet number one which requires your first segment again four",
    "start": "1134880",
    "end": "1140160"
  },
  {
    "text": "or five or seven segments belonging to one request if one ip packet might take one route",
    "start": "1140160",
    "end": "1146559"
  },
  {
    "text": "the route that can get congested meanwhile and the second ib packet might",
    "start": "1146559",
    "end": "1152480"
  },
  {
    "text": "take a different route right but they will eventually arrive",
    "start": "1152480",
    "end": "1157600"
  },
  {
    "text": "out of order the tcp layer will order it and the segments will be arrived sometimes we will get lost",
    "start": "1157600",
    "end": "1163520"
  },
  {
    "text": "re-transmission happens congestion happens flow control i talk about all of this in my network course shameless plug",
    "start": "1163520",
    "end": "1170160"
  },
  {
    "text": "network dot hussein also dot com get a get yourself a discount coupon and uh",
    "start": "1170160",
    "end": "1176559"
  },
  {
    "text": "enjoy that of course it's pretty good i think um so yeah",
    "start": "1176559",
    "end": "1182559"
  },
  {
    "text": "so if that is what we mean by a request getting delivered all these segments",
    "start": "1182559",
    "end": "1188080"
  },
  {
    "text": "arrive acknowledged you know by the server and then once these segments arrived they",
    "start": "1188080",
    "end": "1194160"
  },
  {
    "text": "are we go from down to up because in the client",
    "start": "1194160",
    "end": "1200480"
  },
  {
    "text": "side from we went from layer 7 down to the layer 4 and the wires and now we go opposite from",
    "start": "1200480",
    "end": "1208080"
  },
  {
    "text": "layer 4 to r7 layer 7 doesn't know about any segments it just needs the data back so",
    "start": "1208080",
    "end": "1214640"
  },
  {
    "text": "we'll assembled obviously tls and decryption happens at the same time here decrypt",
    "start": "1214640",
    "end": "1220720"
  },
  {
    "text": "the content and deliver the app and only when i get that",
    "start": "1220720",
    "end": "1226480"
  },
  {
    "text": "the event on request on your node.js or in your any",
    "start": "1226480",
    "end": "1233280"
  },
  {
    "text": "application you want will get fired only if those four or five segments are",
    "start": "1233280",
    "end": "1238480"
  },
  {
    "text": "arrived and they are on order so that's what it means to all right so",
    "start": "1238480",
    "end": "1244159"
  },
  {
    "text": "request that's what it means just just",
    "start": "1244159",
    "end": "1249200"
  },
  {
    "text": "delivering a request is not some just synthetic questions get it yay",
    "start": "1249200",
    "end": "1255520"
  },
  {
    "text": "there is some stuff that's happening behind the scene and we really need to understand what is happening right and",
    "start": "1255520",
    "end": "1261600"
  },
  {
    "text": "talk about it so based on that once you understand how it works of course requests can be delayed",
    "start": "1261600",
    "end": "1268960"
  },
  {
    "text": "like one request can be arrived before the rest of them and it depends if it's in the same tcp connection if it's in",
    "start": "1268960",
    "end": "1274960"
  },
  {
    "text": "and multiple tcp connections right and if it's hdb2 right it should be two servers from tcp",
    "start": "1274960",
    "end": "1281440"
  },
  {
    "text": "head of line blocking to b3 right it doesn't have that you know because",
    "start": "1281440",
    "end": "1287600"
  },
  {
    "text": "everything is is like ordered at the stream level but i don't want to go into that either but yeah we",
    "start": "1287600",
    "end": "1294320"
  },
  {
    "text": "have this parabolic so yeah so the client can define the priorities here",
    "start": "1294320",
    "end": "1301200"
  },
  {
    "text": "and also allow the server to hint to a downstream intermediary how its",
    "start": "1301200",
    "end": "1307600"
  },
  {
    "text": "responses should be prioritized when they are forwarded so it's not just a client",
    "start": "1307600",
    "end": "1314159"
  },
  {
    "text": "request header field it's also a response header field",
    "start": "1314159",
    "end": "1320640"
  },
  {
    "text": "as far as i from this abstract i love reading abstracts because it usually explains",
    "start": "1320640",
    "end": "1326640"
  },
  {
    "text": "everything but sometimes leave me with more questions right like here",
    "start": "1326640",
    "end": "1332799"
  },
  {
    "text": "this document defines the priority header field for communicating the initial priority",
    "start": "1332799",
    "end": "1341280"
  },
  {
    "text": "in an http version independent",
    "start": "1341280",
    "end": "1346559"
  },
  {
    "text": "manner that is interesting",
    "start": "1346559",
    "end": "1353039"
  },
  {
    "text": "this means that regardless of the protocol this priority is supported and man i had",
    "start": "1353039",
    "end": "1359120"
  },
  {
    "text": "a big question about that but then they said as well as http 2 and http 3 frames for re-prioritizing",
    "start": "1359120",
    "end": "1365200"
  },
  {
    "text": "responses so http 3 and http 2 makes perfect sense because as a client i'm",
    "start": "1365200",
    "end": "1370640"
  },
  {
    "text": "going to use a single tcp connection for hdb2 and i'm going to use a single quick connection for hdb3 and i'm going to",
    "start": "1370640",
    "end": "1377520"
  },
  {
    "text": "stream you know all my requests in single multiplex them into a single",
    "start": "1377520",
    "end": "1384640"
  },
  {
    "text": "connection and they are different stream or if each request lives in a different stream so they all",
    "start": "1384640",
    "end": "1391360"
  },
  {
    "text": "they're going to be streamed into this connection so the server has context",
    "start": "1391360",
    "end": "1397360"
  },
  {
    "text": "for all these requests belong to the same client because they all kind of",
    "start": "1397360",
    "end": "1403120"
  },
  {
    "text": "what is this you know it's like if it's like there's a lot of you know sticks together",
    "start": "1403120",
    "end": "1409200"
  },
  {
    "text": "you know and that'll be an arabic we call it but i don't know what's in english it's like a group of things you know it's",
    "start": "1409200",
    "end": "1415039"
  },
  {
    "text": "like a stack of sticks you know it's like they are together you know",
    "start": "1415039",
    "end": "1420720"
  },
  {
    "text": "so so there's context supposedly should be 3-inch db2 now",
    "start": "1420720",
    "end": "1425919"
  },
  {
    "text": "how do you do this with hdp1 it doesn't make any sense",
    "start": "1425919",
    "end": "1431520"
  },
  {
    "text": "right you might say you're saying why because in http1 we don't support",
    "start": "1431520",
    "end": "1437760"
  },
  {
    "text": "multiple requests you know multiplexing requests into a single connection we stopped doing that",
    "start": "1437760",
    "end": "1444799"
  },
  {
    "text": "right because it's nasty that's the best best way to put it it's very nasty to do",
    "start": "1444799",
    "end": "1452320"
  },
  {
    "text": "you know so like pipelining it's just nasty so what people do is we",
    "start": "1452320",
    "end": "1459840"
  },
  {
    "text": "establish multiple tcp connection and and we kind of d multiplex if you will",
    "start": "1459840",
    "end": "1465120"
  },
  {
    "text": "you know so i have all these mark um requests and i just send them into multiple these",
    "start": "1465120",
    "end": "1470840"
  },
  {
    "text": "connections and so you open multiple connections to the same server as the same client",
    "start": "1470840",
    "end": "1477840"
  },
  {
    "text": "but there is no linkage between this connection and then http being stateless saves us here right",
    "start": "1477840",
    "end": "1486159"
  },
  {
    "text": "because it doesn't matter it's like hey yeah there is no context who cares just send me that stuff send me information",
    "start": "1486159",
    "end": "1494480"
  },
  {
    "text": "with every request so i can link those right and that's what they",
    "start": "1494480",
    "end": "1499600"
  },
  {
    "text": "actually rely on when i scrolled all the way let's let's go",
    "start": "1499600",
    "end": "1505360"
  },
  {
    "start": "1500000",
    "end": "1920000"
  },
  {
    "text": "there's exactly a paragraph addressing my concerns",
    "start": "1505360",
    "end": "1513039"
  },
  {
    "text": "see this is what i'm i'm talking about and i'm pretty sure there are other stuff",
    "start": "1513039",
    "end": "1518640"
  },
  {
    "text": "you know that i i never thought of and they did you know",
    "start": "1518640",
    "end": "1523760"
  },
  {
    "text": "but this is it let's read through this and then end the podcast how about that um",
    "start": "1523760",
    "end": "1529919"
  },
  {
    "text": "http 1x back-ends it is common for content delivery",
    "start": "1529919",
    "end": "1535039"
  },
  {
    "text": "network infrastructure to support different http versions on the front end and the",
    "start": "1535039",
    "end": "1541840"
  },
  {
    "text": "back end right um it makes sense right because uh cdns",
    "start": "1541840",
    "end": "1547039"
  },
  {
    "text": "like cloud player or fastly they want the front to be as fast as possible you know let's support http 3 or hdb2 but",
    "start": "1547039",
    "end": "1554400"
  },
  {
    "text": "the back end they cannot control because the back end is you as a back an engineer",
    "start": "1554400",
    "end": "1561120"
  },
  {
    "text": "right you might support hdb one or two or just",
    "start": "1561120",
    "end": "1566400"
  },
  {
    "text": "one right it's whatever version you support right they can't force you to",
    "start": "1566400",
    "end": "1571520"
  },
  {
    "text": "upgrade so they have to write support multiple versions so they",
    "start": "1571520",
    "end": "1576559"
  },
  {
    "text": "are a server the cdn that is they are a server",
    "start": "1576559",
    "end": "1582240"
  },
  {
    "text": "for hdb3 and tv 2 on the front end and they can be a client",
    "start": "1582240",
    "end": "1589360"
  },
  {
    "text": "of http 1 to your back and that is hdb1 on the back so what do they do in this",
    "start": "1589360",
    "end": "1595520"
  },
  {
    "text": "case let's read for instance the client facing edge edge",
    "start": "1595520",
    "end": "1601200"
  },
  {
    "text": "right here the edge means that the cdn edge right side might support hdb2 and hdb3 while",
    "start": "1601200",
    "end": "1608240"
  },
  {
    "text": "communication to back-end server is done using http one so that's just an example doesn't have to be hdb1 no but it",
    "start": "1608240",
    "end": "1617360"
  },
  {
    "text": "it could be right so unlike connection coalescing",
    "start": "1617360",
    "end": "1622960"
  },
  {
    "text": "i don't know what that means to be honest right need to read more about it",
    "start": "1622960",
    "end": "1630240"
  },
  {
    "text": "the cdn will demux will demultiplex effectively request into discrete",
    "start": "1630240",
    "end": "1635520"
  },
  {
    "text": "connections like this is what we when i talked about a multi multi-path tcp",
    "start": "1635520",
    "end": "1640559"
  },
  {
    "text": "right the idea of demultiplexing is being very popular right now so you did",
    "start": "1640559",
    "end": "1645760"
  },
  {
    "text": "a multiplex stuff so you have one pipe and it becomes multiple pipes you know",
    "start": "1645760",
    "end": "1650799"
  },
  {
    "text": "so this is what the same thing you have one http 3 connection",
    "start": "1650799",
    "end": "1657039"
  },
  {
    "text": "or one http 2 connection right with multiple requests but then",
    "start": "1657039",
    "end": "1663840"
  },
  {
    "text": "d-max's right am i doing this right demux is into",
    "start": "1663840",
    "end": "1669200"
  },
  {
    "text": "multiple tcp connection because the problem we mentioned with cb1 right has to be multiple connections",
    "start": "1669200",
    "end": "1676399"
  },
  {
    "text": "response multiplexing in single connection is not supported by http 1 or",
    "start": "1676399",
    "end": "1681520"
  },
  {
    "text": "older we talked about that right response multiplexing like",
    "start": "1681520",
    "end": "1687279"
  },
  {
    "text": "doesn't that also apply to request multiplexing i i would yes it's not just response you can't even request",
    "start": "1687279",
    "end": "1694000"
  },
  {
    "text": "multiplexing is not supported because of the pipelining problem right which we i think no longer support right",
    "start": "1694000",
    "end": "1700960"
  },
  {
    "text": "yeah i would i would i would i would guess this is both response and request",
    "start": "1700960",
    "end": "1708799"
  },
  {
    "text": "i would make that suggestion or correction or correct me if i'm wrong i don't know",
    "start": "1708799",
    "end": "1714320"
  },
  {
    "text": "so there is no to a fairness problem right however backend servers may still use",
    "start": "1714320",
    "end": "1721200"
  },
  {
    "text": "client headers for schedules so how so if you if i have multiple http",
    "start": "1721200",
    "end": "1728559"
  },
  {
    "text": "connections how do i link them to each other so that they belong to the same client",
    "start": "1728559",
    "end": "1733919"
  },
  {
    "text": "right so here's here it comes back in servers should only schedule based on client priority information",
    "start": "1733919",
    "end": "1741120"
  },
  {
    "text": "where that information is can be scoped to a individual and clients right",
    "start": "1741120",
    "end": "1747279"
  },
  {
    "text": "so you should really schedule because you're gonna have priorities from different clients what what is a client",
    "start": "1747279",
    "end": "1754320"
  },
  {
    "text": "here it's so you all these requests are coming",
    "start": "1754320",
    "end": "1759520"
  },
  {
    "text": "from different clients as as you can you can think of it as the ip address this",
    "start": "1759520",
    "end": "1764960"
  },
  {
    "text": "the originating rp address although that's not necessarily a good idea",
    "start": "1764960",
    "end": "1770559"
  },
  {
    "text": "because the cdn might use different ip headers right so to represent multiple clients so that's",
    "start": "1770559",
    "end": "1776799"
  },
  {
    "text": "not a good idea but uh that's that that's what it is",
    "start": "1776799",
    "end": "1782000"
  },
  {
    "text": "authentication and other session information might provide this link ability so this is this is",
    "start": "1782000",
    "end": "1788799"
  },
  {
    "text": "where they kind of hit it on the head here so if you want",
    "start": "1788799",
    "end": "1794960"
  },
  {
    "text": "to make sense of these multiple connections and and kind of prioritize multiple requests across multiple http",
    "start": "1794960",
    "end": "1801279"
  },
  {
    "text": "one one then use something on the back end you",
    "start": "1801279",
    "end": "1807039"
  },
  {
    "text": "are responsible to link them how i thought i'm not as a back-end engineer",
    "start": "1807039",
    "end": "1814480"
  },
  {
    "text": "my guess here this will be implemented as the http server responsibility",
    "start": "1814480",
    "end": "1821679"
  },
  {
    "text": "i shouldn't be doing anything now how would the back end",
    "start": "1821679",
    "end": "1829039"
  },
  {
    "text": "engineer or the the library or the web server you know damon if you will would know",
    "start": "1829039",
    "end": "1836640"
  },
  {
    "text": "how what is a session or was it an authorization or a cookie how does it",
    "start": "1836640",
    "end": "1841919"
  },
  {
    "text": "can't trust anything this seems to me like over engineering",
    "start": "1841919",
    "end": "1847919"
  },
  {
    "text": "in my opinion right this section",
    "start": "1847919",
    "end": "1852720"
  },
  {
    "text": "i know i i'm i'm not not suggesting anything",
    "start": "1852960",
    "end": "1858640"
  },
  {
    "text": "but we're just talking here right i just obviously i could be wrong with anything i say but",
    "start": "1858640",
    "end": "1866080"
  },
  {
    "text": "i think this is a little bit yikesy it's just very hard to implement",
    "start": "1866080",
    "end": "1872880"
  },
  {
    "text": "you know it's just like how to me yeah could be implemented by seems like",
    "start": "1872880",
    "end": "1879760"
  },
  {
    "text": "very complicated and and uh over engineering if if it was me i was just like hey",
    "start": "1879760",
    "end": "1886720"
  },
  {
    "text": "no support for priorities for http one one if you want priorities use http",
    "start": "1886720",
    "end": "1892960"
  },
  {
    "text": "2 or 3 and you have to use it all the way but i understand obviously they talked",
    "start": "1892960",
    "end": "1899279"
  },
  {
    "text": "about all of this this may have been there for years right so",
    "start": "1899279",
    "end": "1904720"
  },
  {
    "text": "now criticizing or anything like that so they meaning locus here specifically and",
    "start": "1904720",
    "end": "1911919"
  },
  {
    "text": "cloudflare and fastly they talked this through in details they're way",
    "start": "1911919",
    "end": "1917039"
  },
  {
    "text": "smarter than me obviously than they thought about all these ideas and they said okay maybe",
    "start": "1917039",
    "end": "1922880"
  },
  {
    "start": "1920000",
    "end": "2171000"
  },
  {
    "text": "we can't just support half a protocol you know it's just",
    "start": "1922880",
    "end": "1928080"
  },
  {
    "text": "if there's a priority how do you control all the intermediary it's just it's just very interesting and",
    "start": "1928080",
    "end": "1934240"
  },
  {
    "text": "then what i would end it here guys so i would in the guys i would end this show by saying that",
    "start": "1934240",
    "end": "1940799"
  },
  {
    "text": "i absolutely enjoy reading these rfcs because er first of all it addlesses problems",
    "start": "1940799",
    "end": "1946720"
  },
  {
    "text": "that i didn't know even existed you know like this i never had this",
    "start": "1946720",
    "end": "1952559"
  },
  {
    "text": "problem you know it's like having to prioritize you know requests",
    "start": "1952559",
    "end": "1957679"
  },
  {
    "text": "right well that's a good idea if you think about it right because if i would prioritize something i would",
    "start": "1957679",
    "end": "1963039"
  },
  {
    "text": "just delay it which is not great for performance right right",
    "start": "1963039",
    "end": "1968080"
  },
  {
    "text": "uh you would synchronously delay something you would send a request and then make it dependent nature if you",
    "start": "1968080",
    "end": "1973679"
  },
  {
    "text": "want to request to be in dependent of each other you know you would send the first request and you wait don't send the",
    "start": "1973679",
    "end": "1979760"
  },
  {
    "text": "second one once you get a response into the second one but that is so slow now come think about",
    "start": "1979760",
    "end": "1985600"
  },
  {
    "text": "it right this rfc opened my eye and how did i know about it linkedin randomly",
    "start": "1985600",
    "end": "1991840"
  },
  {
    "text": "um i believe everyone was mistaken uh danielle stanberg the creator of curl",
    "start": "1991840",
    "end": "1997840"
  },
  {
    "text": "liked the rfc from lucas and i followed lucas and then",
    "start": "1997840",
    "end": "2002960"
  },
  {
    "text": "and linkedin and i saw this i was like oh this is really interesting stuff yeah it's just",
    "start": "2002960",
    "end": "2008399"
  },
  {
    "text": "a lot of you ask me guys like how do you keep you know increasing or not how to",
    "start": "2008399",
    "end": "2013440"
  },
  {
    "text": "learn what books to read to be honest with you i don't read books anymore it's like",
    "start": "2013440",
    "end": "2020240"
  },
  {
    "text": "it's like yeah if i want to learn like linux i would i i buy the linux book bible for example",
    "start": "2020240",
    "end": "2026720"
  },
  {
    "text": "and i go through it you know from time to time just like to know i don't know how to",
    "start": "2026720",
    "end": "2032480"
  },
  {
    "text": "partition a drive or what is what is a swap things like that but",
    "start": "2032480",
    "end": "2038159"
  },
  {
    "text": "for things like that if you want to increase your knowledge i love reading rfcs man i just just absolutely love",
    "start": "2038159",
    "end": "2045120"
  },
  {
    "text": "because books go out of dates like what you're doing in learning books like this is",
    "start": "2045120",
    "end": "2050720"
  },
  {
    "text": "cutting edge stuff that what we're discussing right here this these are",
    "start": "2050720",
    "end": "2055760"
  },
  {
    "text": "problems maybe have been discussed before i never heard about them before but this",
    "start": "2055760",
    "end": "2061200"
  },
  {
    "text": "is to me this is fresh this is new this is now right",
    "start": "2061200",
    "end": "2066960"
  },
  {
    "text": "and and uh i just love reading the rfcs and to be honest it was reading the rfcs",
    "start": "2066960",
    "end": "2074000"
  },
  {
    "text": "was not easy you know in the beginning when i started doing this like six seven years actually",
    "start": "2074000",
    "end": "2081040"
  },
  {
    "text": "making content and trying to be better you know as",
    "start": "2081040",
    "end": "2086480"
  },
  {
    "text": "a better software engineer writing the rfc was so difficult because i didn't understand anything you know and a lot",
    "start": "2086480",
    "end": "2093919"
  },
  {
    "text": "of you might have the same problems like really if it's so complex because there is an internal assumption that you know",
    "start": "2093919",
    "end": "2100000"
  },
  {
    "text": "stuff and if you don't like this scheduling the connect method if you don't know",
    "start": "2100000",
    "end": "2105599"
  },
  {
    "text": "what a connect method is right you'll be get lost but that's what it",
    "start": "2105599",
    "end": "2111280"
  },
  {
    "text": "where you know collateral knowledge comes into the equation i spent a lot of years you know",
    "start": "2111280",
    "end": "2116720"
  },
  {
    "text": "just uh stumbling up reading something and then uh hitting a wall say oh what is this",
    "start": "2116720",
    "end": "2123359"
  },
  {
    "text": "and then go into it like a depth burst algorithm because go learn and then go back to the thing i wanted to learn and",
    "start": "2123359",
    "end": "2129520"
  },
  {
    "text": "then hit another thing and go learn that and then come back so it's just now i have a little bit of",
    "start": "2129520",
    "end": "2134800"
  },
  {
    "text": "a knowledge you know but i think it's still a little bit shallow i start to",
    "start": "2134800",
    "end": "2139920"
  },
  {
    "text": "dig as deep as possible but that yeah i really suggest uh rfcs is great knowledge you know going",
    "start": "2139920",
    "end": "2147280"
  },
  {
    "text": "back and just read the original http rfc the 1996 one",
    "start": "2147280",
    "end": "2153280"
  },
  {
    "text": "just so beautiful you know how people how how what are the original problems they tried to solve and how everything",
    "start": "2153280",
    "end": "2160880"
  },
  {
    "text": "changes now yeah guys i'm going to leave it at that uh it was a little bit of a long show",
    "start": "2160880",
    "end": "2165920"
  },
  {
    "text": "but it's a podcast so yeah talk to you later",
    "start": "2165920",
    "end": "2172640"
  }
]