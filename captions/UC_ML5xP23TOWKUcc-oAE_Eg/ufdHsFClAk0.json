[
  {
    "start": "0",
    "end": "170000"
  },
  {
    "text": "what's up y'all this is Hussein NAS from IGM Tre where we discuss software engineering by example in this video we",
    "start": "199",
    "end": "6200"
  },
  {
    "text": "will learn how we can use JavaScript to connect to a postgress database so we're",
    "start": "6200",
    "end": "13639"
  },
  {
    "text": "going to learn how to uh connect to a database how we essentially query the",
    "start": "13639",
    "end": "19080"
  },
  {
    "text": "database for a table and we're going to do some DML operations and we're going to learn about transactions like a block",
    "start": "19080",
    "end": "25599"
  },
  {
    "text": "of transactions where we can commit and roll back stuff all right so if you're writing JavaScript code you would you",
    "start": "25599",
    "end": "31920"
  },
  {
    "text": "would think like usually you sometimes you need to store some sort of a state",
    "start": "31920",
    "end": "37280"
  },
  {
    "text": "in your application so be this this is a browser or JavaScript reading the",
    "start": "37280",
    "end": "43960"
  },
  {
    "text": "browser or JavaScript reading on the server which is nodejs right because JavaScript application or a program need",
    "start": "43960",
    "end": "51239"
  },
  {
    "text": "to an execution engine and this engine is usually V8 and the server and in the",
    "start": "51239",
    "end": "56559"
  },
  {
    "text": "browser it's if it's Chrome then it's V8 and Firefox uses a different engine but",
    "start": "56559",
    "end": "62719"
  },
  {
    "text": "think of it like it needs an engine to execute right and this engine sometimes you need to connect to a database okay",
    "start": "62719",
    "end": "69680"
  },
  {
    "text": "so that being said in this video we'll learn how to essentially use nodejs right JavaScript code in nodejs",
    "start": "69680",
    "end": "77840"
  },
  {
    "text": "which is the execution engine and that will connect to the postris database so",
    "start": "77840",
    "end": "83159"
  },
  {
    "text": "here uh I have a postgress database on my laptop here so don't worry if uh if",
    "start": "83159",
    "end": "90960"
  },
  {
    "text": "if this is like a this is something new for you I I'll reference a video right here in the cards to show you exactly",
    "start": "90960",
    "end": "97960"
  },
  {
    "text": "how to spin up quickly a postgress instance as a database on your laptop in",
    "start": "97960",
    "end": "103560"
  },
  {
    "text": "less than 3 minutes it's very simple using Docker essentially right but if",
    "start": "103560",
    "end": "108840"
  },
  {
    "text": "you whether you have an existing database or you spin up your own that's that's totally fine right but we need",
    "start": "108840",
    "end": "114640"
  },
  {
    "text": "some sort of a database so here I have a table called employees that I created and have some rows right and uh we'll",
    "start": "114640",
    "end": "123560"
  },
  {
    "text": "learn just how to essentially query that and display it uh on the back end right",
    "start": "123560",
    "end": "129560"
  },
  {
    "text": "which is the node.js application okay cool guys let's get started so what do we need to start this video this",
    "start": "129560",
    "end": "136000"
  },
  {
    "text": "tutorial what do you need you need obviously number one you need a postris database right so I'm going to reference",
    "start": "136000",
    "end": "142319"
  },
  {
    "text": "the video to the database setup and all that stuff it's very simple okay and",
    "start": "142319",
    "end": "149160"
  },
  {
    "text": "second you obviously need no JS because we're going to write code on the server",
    "start": "149160",
    "end": "154560"
  },
  {
    "text": "or within the client right so that's the execution engine nodejs and installation",
    "start": "154560",
    "end": "160159"
  },
  {
    "text": "it's very simple I'm going to reference it as well here it's literally you download nodejs and run it and that's",
    "start": "160159",
    "end": "165720"
  },
  {
    "text": "that's that's all you need just install it and you'll be done okay and the third is code some some sort of uh text editor",
    "start": "165720",
    "end": "174159"
  },
  {
    "start": "170000",
    "end": "400000"
  },
  {
    "text": "and I prefer Visual Studio code it's my best editor ever so with that said I",
    "start": "174159",
    "end": "179360"
  },
  {
    "text": "think we are ready let's just jump into the tutorial okay I'm going to leave some jump cards for you guys to jump",
    "start": "179360",
    "end": "185799"
  },
  {
    "text": "toin uh uh necessary steps that you need essentially for every single step in the",
    "start": "185799",
    "end": "192640"
  },
  {
    "text": "tutorial all right with that said to to run the JavaScript code right",
    "start": "192640",
    "end": "200280"
  },
  {
    "text": "to the nodejs we need to create a project okay and uh and that project is",
    "start": "200280",
    "end": "205599"
  },
  {
    "text": "think of it like it's just a folder right so let's go ahead and create a folder here here and let's call this uh",
    "start": "205599",
    "end": "212680"
  },
  {
    "text": "JavaScript fulps okay then just open the folder right that's all I love about",
    "start": "212680",
    "end": "219200"
  },
  {
    "text": "Visual Studio code you open essentially you open folders and then when you once you open a folder you can start writing",
    "start": "219200",
    "end": "225599"
  },
  {
    "text": "uh files you you P you you put stuff there in the files okay so I'm going to",
    "start": "225599",
    "end": "231120"
  },
  {
    "text": "do here is I am going to create a file called",
    "start": "231120",
    "end": "236439"
  },
  {
    "text": "index.js which is the essentially the start of my application where where most",
    "start": "236439",
    "end": "241959"
  },
  {
    "text": "of my code lives here okay so before we write any single line of code and that's",
    "start": "241959",
    "end": "248079"
  },
  {
    "text": "another thing I like about uh Visual Studio code here just the moment you install it and it will tell you hey this",
    "start": "248079",
    "end": "255200"
  },
  {
    "text": "is Javascript file let me let me do an intellisense for you we'll install the necessary plugin for you to do",
    "start": "255200",
    "end": "261840"
  },
  {
    "text": "JavaScript uh nicely and uh very intuitively so with that said the first",
    "start": "261840",
    "end": "268560"
  },
  {
    "text": "thing we need to do here to write code is to initialize my project okay and uh",
    "start": "268560",
    "end": "275160"
  },
  {
    "text": "there are many ways to do this you can do it within uh from within Visual Studio code but it's essentially all",
    "start": "275160",
    "end": "281680"
  },
  {
    "text": "from terminal right so if you open a new terminal and then you literally say new terminal and visual studio code it will",
    "start": "281680",
    "end": "289440"
  },
  {
    "text": "essentially write put you back to the uh command terminal which is you can start",
    "start": "289440",
    "end": "295919"
  },
  {
    "text": "from your Mac here right or your Windows machine okay once you have that you would do npm in it this is the note",
    "start": "295919",
    "end": "303000"
  },
  {
    "text": "package manager to initialize your project okay and uh it will ask you uh",
    "start": "303000",
    "end": "308039"
  },
  {
    "text": "very simple stuff questions like what's your package name we're going to leave it as the same version same uh what's",
    "start": "308039",
    "end": "315039"
  },
  {
    "text": "the entry point very important going to leave it index.js like or if you chose another name just name it in whatever. JS that's",
    "start": "315039",
    "end": "322840"
  },
  {
    "text": "the Enterprise and the test command is how do you execute this and executing",
    "start": "322840",
    "end": "328520"
  },
  {
    "text": "this is not dot which is node and then index.js right so you can do node",
    "start": "328520",
    "end": "336080"
  },
  {
    "text": "index.js right zoom in here so you can see right or you can just say no dot",
    "start": "336080",
    "end": "342520"
  },
  {
    "text": "because default is index. JX let's just say that index.js okay repository None",
    "start": "342520",
    "end": "348720"
  },
  {
    "text": "author sure that's me license are you done yes okay and that concludes that we",
    "start": "348720",
    "end": "355919"
  },
  {
    "text": "are ready to work right so that in creates like a package Json which will",
    "start": "355919",
    "end": "362400"
  },
  {
    "text": "allow us to install the uh the dependencies right because to connect to postp you need a library and there's a",
    "start": "362400",
    "end": "370400"
  },
  {
    "text": "great Library all right uh written in it's called node postris and that's what we're going to use here okay so let's go",
    "start": "370400",
    "end": "378479"
  },
  {
    "text": "ahead and uh write our first line of code here the the first thing we need to do is to",
    "start": "378479",
    "end": "384759"
  },
  {
    "text": "connect to a database to connect to a database you need to create a client op object right this client object will",
    "start": "384759",
    "end": "392080"
  },
  {
    "text": "allow you to connect to the database right and and uh by providing the",
    "start": "392080",
    "end": "398400"
  },
  {
    "text": "information you know what's the username what's the password what's the database name what's the host right and all these",
    "start": "398400",
    "end": "403840"
  },
  {
    "start": "400000",
    "end": "640000"
  },
  {
    "text": "ports all this information okay but to do that you need the client right to do that there are many ways to do it here",
    "start": "403840",
    "end": "411240"
  },
  {
    "text": "okay so you you provide a constant which is the default JavaScript",
    "start": "411240",
    "end": "417720"
  },
  {
    "text": "uh type here I like to use constant a lot and then uh",
    "start": "417720",
    "end": "422879"
  },
  {
    "text": "you could call it client with capital K we're going to with capital CN we're going to go to that right then equal",
    "start": "422879",
    "end": "431720"
  },
  {
    "text": "require the post the the the library is called PG which is very easy to remember",
    "start": "431720",
    "end": "438000"
  },
  {
    "text": "unlike the python one which is like P psyo pg2 I think something something",
    "start": "438000",
    "end": "444520"
  },
  {
    "text": "like that right so when you do that okay you can require that right and let's uh",
    "start": "444520",
    "end": "451400"
  },
  {
    "text": "you can just do do client right this is one way to do it so this will require",
    "start": "451400",
    "end": "456759"
  },
  {
    "text": "the entire libr which has a bunch of other classes but we're interested only in the client here okay so that's one",
    "start": "456759",
    "end": "463840"
  },
  {
    "text": "one way to do it okay if you have noticed so this will work right but in",
    "start": "463840",
    "end": "470400"
  },
  {
    "text": "JavaScript since we want to be fancy right another way of writing this same",
    "start": "470400",
    "end": "475720"
  },
  {
    "text": "line of code is this okay",
    "start": "475720",
    "end": "480759"
  },
  {
    "text": "so what happens here is essentially this is equal to this is essentially exactly equal",
    "start": "481560",
    "end": "490560"
  },
  {
    "text": "to this is equal do client right so when you put in in between curly braces it",
    "start": "490560",
    "end": "496800"
  },
  {
    "text": "will essentially do a DOT and then we'll store that variable we'll take the",
    "start": "496800",
    "end": "502639"
  },
  {
    "text": "object the property of that uh required library and give you that property so so",
    "start": "502639",
    "end": "508759"
  },
  {
    "text": "that's one way of doing it so uh what regardless what you what you end up with",
    "start": "508759",
    "end": "514240"
  },
  {
    "text": "it will essentially work okay now that we have a client object now we can actually create a client instance",
    "start": "514240",
    "end": "520479"
  },
  {
    "text": "remember this is just objectoriented basic stuff right so what we're going to do is create a client object and guess",
    "start": "520479",
    "end": "527320"
  },
  {
    "text": "what new client okay to create a new client we need to send it adjacent",
    "start": "527320",
    "end": "533680"
  },
  {
    "text": "object and that's how we the client knows how",
    "start": "533680",
    "end": "539680"
  },
  {
    "text": "to create how to connect to the database okay so client is this if I did not do",
    "start": "539680",
    "end": "547560"
  },
  {
    "text": "this step I would have failed okay because this doesn't exist now that I create called this client I can actually",
    "start": "547560",
    "end": "555399"
  },
  {
    "text": "do new client okay because I have that variable okay so let's go ahead and do a",
    "start": "555399",
    "end": "560480"
  },
  {
    "text": "user right the first object user what's my user I know my username is called",
    "start": "560480",
    "end": "565880"
  },
  {
    "text": "pogress okay in my database and uh the",
    "start": "565880",
    "end": "571040"
  },
  {
    "text": "password it's called also pogress very secure host it's my machine name so Jose",
    "start": "571040",
    "end": "577959"
  },
  {
    "text": "Mac or your machine name in this case you put your machine name Port this is optional but I like to put it always the",
    "start": "577959",
    "end": "584720"
  },
  {
    "text": "port the default Port of post is 4 five4 5432 but sometimes that change so I like",
    "start": "584720",
    "end": "591000"
  },
  {
    "text": "to just specify it there and the database okay and the database name is remember guys what was the database name",
    "start": "591000",
    "end": "597560"
  },
  {
    "text": "if you ever forget the database name name was Hussein DB so that's what we're",
    "start": "597560",
    "end": "603040"
  },
  {
    "text": "going to use here okay Hussein DB right and just like that we created a client",
    "start": "603040",
    "end": "610200"
  },
  {
    "text": "so all right so to connect to the database there are multiple methods here right and uh I'll I'll give you two",
    "start": "610200",
    "end": "617480"
  },
  {
    "text": "methods here and uh maybe I'll I'll divide this video into I'll make it it",
    "start": "617480",
    "end": "623040"
  },
  {
    "text": "be little longer tutorial but I will show you all the steps essentially right",
    "start": "623040",
    "end": "628800"
  },
  {
    "text": "so once you have have that you would do client to do connect okay okay and",
    "start": "628800",
    "end": "634600"
  },
  {
    "text": "connect since we have the client object remember I use the small uh letter here",
    "start": "634600",
    "end": "639920"
  },
  {
    "text": "because that's the object you don't do Capital kind that's you take the object now that is filled with the connection",
    "start": "639920",
    "end": "646000"
  },
  {
    "start": "640000",
    "end": "810000"
  },
  {
    "text": "information and then you say connect on it okay since this is a promise this returns a promise obviously you're going",
    "start": "646000",
    "end": "652639"
  },
  {
    "text": "to do do then which tells you hey this has been successful okay",
    "start": "652639",
    "end": "659800"
  },
  {
    "text": "so you would do console.log connected",
    "start": "659800",
    "end": "666360"
  },
  {
    "text": "successfully right once you do that you would followed up with the catch right",
    "start": "666360",
    "end": "672360"
  },
  {
    "text": "what is in case of an error I want to show that error okay and that's the client always the with the promises you",
    "start": "672360",
    "end": "678880"
  },
  {
    "text": "do do then and then do catch and then do finally we're going to go through all these steps right catch is if I get a an",
    "start": "678880",
    "end": "688480"
  },
  {
    "text": "error E okay I want just to actually print it",
    "start": "688480",
    "end": "694519"
  },
  {
    "text": "okay console.log right or you can use console. error to actually show it as an",
    "start": "694519",
    "end": "700399"
  },
  {
    "text": "error but let's just introduce one as a step one step at a time and finally is",
    "start": "700399",
    "end": "705680"
  },
  {
    "text": "finally right what do you do finally all right the finally is is like the finally",
    "start": "705680",
    "end": "712680"
  },
  {
    "text": "when when you using try right so the when you execute that it can either go",
    "start": "712680",
    "end": "718240"
  },
  {
    "text": "here or here it won't go on both right so if fails it will go here and then to",
    "start": "718240",
    "end": "726120"
  },
  {
    "text": "go to catch and then will always execute finally all right if if it succeeds we will go to then and then it will always",
    "start": "726120",
    "end": "731800"
  },
  {
    "text": "execute finally so this is we use this finally to clean up essentially right and then the cleanup is client. end",
    "start": "731800",
    "end": "739279"
  },
  {
    "text": "which ends the connection very important to end the connection after you're done okay so let's go ahead and execute that",
    "start": "739279",
    "end": "748519"
  },
  {
    "text": "debug and we're getting an error and I want you to see this error now cannot find",
    "start": "749600",
    "end": "757279"
  },
  {
    "text": "module PG right so I I deferred this because I want you to see this error and",
    "start": "757279",
    "end": "764160"
  },
  {
    "text": "the reason is very clear because hey what is this PG thing you never installed this thing so now you actually",
    "start": "764160",
    "end": "771760"
  },
  {
    "text": "need to install this to install it you go to the terminal the same path and you do npm again and then you do install",
    "start": "771760",
    "end": "779320"
  },
  {
    "text": "guess what what's called PG you just write PG and that will install this for",
    "start": "779320",
    "end": "784519"
  },
  {
    "text": "your package just for your package this just for your project and just like that we have installed the postgress node",
    "start": "784519",
    "end": "792079"
  },
  {
    "text": "postgress uh client right so now that we have a library everything is okay let's",
    "start": "792079",
    "end": "797160"
  },
  {
    "text": "go ahead and run it again so either again run it from debugger or you can",
    "start": "797160",
    "end": "802880"
  },
  {
    "text": "run it from let's go ahead and run it from the debugger it says okay connected",
    "start": "802880",
    "end": "808040"
  },
  {
    "text": "sucess we got it here let's run from here npm test and we got also connected",
    "start": "808040",
    "end": "814680"
  },
  {
    "start": "810000",
    "end": "1090000"
  },
  {
    "text": "successfully beautiful guys okay so now we're going to leave the catch here and",
    "start": "814680",
    "end": "819880"
  },
  {
    "text": "then we're going to add another then which now that we are ready right so we",
    "start": "819880",
    "end": "826440"
  },
  {
    "text": "have connected the beauty of This Promise in JavaScript is will just chain things together right everything will",
    "start": "826440",
    "end": "833360"
  },
  {
    "text": "just call the second then as long as it's successful we'll call the second then and you can put more code there so",
    "start": "833360",
    "end": "839639"
  },
  {
    "text": "what I want to do here is that's how we do functions by the way in JavaScript if you if you didn't know already so this",
    "start": "839639",
    "end": "846000"
  },
  {
    "text": "is like a oneline function that's why we we can do it easily here but and this is",
    "start": "846000",
    "end": "852040"
  },
  {
    "text": "a function without a parameter okay this is a function with a parameter called e which we apparently forgot to print",
    "start": "852040",
    "end": "859480"
  },
  {
    "text": "right okay here all right so now that we have done that I want to print the",
    "start": "859480",
    "end": "867480"
  },
  {
    "text": "entire table of employees okay so this is really simple to do okay how to do we",
    "start": "867480",
    "end": "874040"
  },
  {
    "text": "connected successfully using client. connect right and then I'm I'm chaining this while I'm connected I want to do a",
    "start": "874040",
    "end": "880440"
  },
  {
    "text": "query so how do I do a query very easy client dot you guessed it query all",
    "start": "880440",
    "end": "887920"
  },
  {
    "text": "right and this is your standard SQL stuff right so let's go ahead and do a select star very bad idea guys but this",
    "start": "887920",
    "end": "895839"
  },
  {
    "text": "is the tutorial so we're we're exempt from that but select all from employees",
    "start": "895839",
    "end": "901680"
  },
  {
    "text": "you would never do this in a real production right because that's bad and",
    "start": "901680",
    "end": "907079"
  },
  {
    "text": "that's bad this is unbounded but our our table has like a 10 rows or whatever right so it doesn't really matter okay",
    "start": "907079",
    "end": "914320"
  },
  {
    "text": "so now this will execute the query but this is an asynchronous call so it will",
    "start": "914320",
    "end": "920120"
  },
  {
    "text": "just defer and will whenever it's ready it's going to call the next then which is I didn't put it here right so I'm",
    "start": "920120",
    "end": "926120"
  },
  {
    "text": "going to put a next then but this time this query returns a result so this",
    "start": "926120",
    "end": "933240"
  },
  {
    "text": "function that I'm going to call has to accept a results right has to accept a parameter and so my function now will",
    "start": "933240",
    "end": "940480"
  },
  {
    "text": "have an actual result all right and that result will be essentially the uh uh the",
    "start": "940480",
    "end": "948240"
  },
  {
    "text": "table that that was uh returned for me okay so let's go ahead and do results",
    "start": "948240",
    "end": "953680"
  },
  {
    "text": "and then for Simplicity the results object has an array called rows which is",
    "start": "953680",
    "end": "960519"
  },
  {
    "text": "all the results that got returned okay so I'm going to do ahe go ahead and do",
    "start": "960519",
    "end": "965600"
  },
  {
    "text": "console dot I can do a loop to Loop through all the tables but there is a nice function in in console called table",
    "start": "965600",
    "end": "973079"
  },
  {
    "text": "which actually takes an array and prints it in a nice column fashion right so",
    "start": "973079",
    "end": "979600"
  },
  {
    "text": "think of this dot table is actually a loop okay and we do results. rows okay",
    "start": "979600",
    "end": "987759"
  },
  {
    "text": "and that will print it so so let's go through the steps again zoom in a little bit connect successfully go here right",
    "start": "987759",
    "end": "996120"
  },
  {
    "text": "if it's fail we'll go to catch right successful right go to query it will query and then whenever we get the",
    "start": "996120",
    "end": "1002199"
  },
  {
    "text": "results we will'll call this right it's like it's it's always like it's a chain of events right and then",
    "start": "1002199",
    "end": "1009240"
  },
  {
    "text": "we're going to show you maybe uh after a while I'm going to show you the async",
    "start": "1009240",
    "end": "1014800"
  },
  {
    "text": "version of this so personally I like this approach to do a then then then",
    "start": "1014800",
    "end": "1020160"
  },
  {
    "text": "then catch finally because it's kind of um it's easier to read I don't like to",
    "start": "1020160",
    "end": "1026038"
  },
  {
    "text": "do a try catch essentially but it's all totally guys up to you and your",
    "start": "1026039",
    "end": "1031678"
  },
  {
    "text": "preferences okay so I'm going to show you two methods of doing things this is one method of them okay if you if you find this confusing I'm going to show",
    "start": "1031679",
    "end": "1037880"
  },
  {
    "text": "you the other method it's much more readable but you'll have to do more stuff as well so totally up to you so I",
    "start": "1037880",
    "end": "1045760"
  },
  {
    "text": "have everything in place let's do a debug and let's see if we we got this working come on",
    "start": "1045760",
    "end": "1053000"
  },
  {
    "text": "debugger oh debug console there you go debug console we have the table",
    "start": "1053000",
    "end": "1060080"
  },
  {
    "text": "pred and a nicely format and the beauty of this that you go here and then into",
    "start": "1060080",
    "end": "1065480"
  },
  {
    "text": "terminal and then you do mpm test test by the way is the command name right in",
    "start": "1065480",
    "end": "1070559"
  },
  {
    "text": "in the in the mpm right and you in the terminal you get",
    "start": "1070559",
    "end": "1075720"
  },
  {
    "text": "even even a more beautiful view in cons. log which is pretty cool guys right so",
    "start": "1075720",
    "end": "1081480"
  },
  {
    "text": "that's the table view right you can you can easily just rain one value you can",
    "start": "1081480",
    "end": "1089000"
  },
  {
    "text": "you can manipulate this values and you can do all kind of stuff right so let me",
    "start": "1089000",
    "end": "1094480"
  },
  {
    "start": "1090000",
    "end": "1320000"
  },
  {
    "text": "do one more thing let's say I want to show all",
    "start": "1094480",
    "end": "1100559"
  },
  {
    "text": "the all the employees that are called Edmund only okay so you would do where",
    "start": "1100559",
    "end": "1108159"
  },
  {
    "text": "okay I think in JavaScript we can do this no we can't does not like it so where",
    "start": "1108159",
    "end": "1114320"
  },
  {
    "text": "obviously uh name is equal",
    "start": "1114320",
    "end": "1120200"
  },
  {
    "text": "to so there are many ways to do this but the best way to avoid SQL injections is to do this guys right you you use",
    "start": "1120200",
    "end": "1127600"
  },
  {
    "text": "parameters okay and this quer is beautiful really nicely done I really recommend you to follow the the guy who",
    "start": "1127600",
    "end": "1134039"
  },
  {
    "text": "wrote this he's he's maintaining this in open source he's totally doing it for free and uh we really appreciate his",
    "start": "1134039",
    "end": "1140159"
  },
  {
    "text": "work his name is Brian I think okay and then you do uh a comma and you put an",
    "start": "1140159",
    "end": "1146520"
  },
  {
    "text": "array and that array will be corresponding one to one to the parameters okay and in this case I want",
    "start": "1146520",
    "end": "1152840"
  },
  {
    "text": "Edmund right so that will that is equ essentially equivalent to saying comma",
    "start": "1152840",
    "end": "1159520"
  },
  {
    "text": "Edmond but you don't you never do this in in a real production right that's why I want to show you these methods okay so",
    "start": "1159520",
    "end": "1167440"
  },
  {
    "text": "now that's one way to do it let's go ahead so now if I run this again I'm",
    "start": "1167440",
    "end": "1173120"
  },
  {
    "text": "just going to get EDM mod right run it again from here mpm test and I'm just going to do this so",
    "start": "1173120",
    "end": "1180159"
  },
  {
    "text": "another way of running it is just you can say node index.js which is our file name remember guys our file name is",
    "start": "1180159",
    "end": "1185640"
  },
  {
    "text": "called index.js you can say node index.js and that will execute so many",
    "start": "1185640",
    "end": "1190720"
  },
  {
    "text": "ways of doing this you don't have to be in Visual Studio code you can you can go here and then you go to the hopefully if",
    "start": "1190720",
    "end": "1197159"
  },
  {
    "text": "I remember my path what do we call JavaScript underscore postgress if you go here and you say in node index.js",
    "start": "1197159",
    "end": "1205520"
  },
  {
    "text": "you'll get the nice table in the terminal okay if you say npm test you'll",
    "start": "1205520",
    "end": "1210600"
  },
  {
    "text": "get the same result because npm test will call the node index tojs that's what will happen right but it's it's",
    "start": "1210600",
    "end": "1216720"
  },
  {
    "text": "nice to add multiple scripts here like uh like what we're going to do here hopefully you can write a script that",
    "start": "1216720",
    "end": "1223880"
  },
  {
    "text": "execute this you can write a script that like do a full table which is like let's",
    "start": "1223880",
    "end": "1229039"
  },
  {
    "text": "do that guys why why not all right let's do Full Table Right full table. JS and full table. JS is like literally copy",
    "start": "1229039",
    "end": "1235880"
  },
  {
    "text": "paste here and then U we without this without a we",
    "start": "1235880",
    "end": "1242919"
  },
  {
    "text": "close Boo and we make sure to close that's very important because it will",
    "start": "1242960",
    "end": "1248080"
  },
  {
    "text": "always close right and this is like index.js our test and then we go to",
    "start": "1248080",
    "end": "1253120"
  },
  {
    "text": "package thejason which is the npm right that's the test and that's our test command which executes that right and",
    "start": "1253120",
    "end": "1260799"
  },
  {
    "text": "I'm going to go ahead and do full table and then guess what this actually",
    "start": "1260799",
    "end": "1266200"
  },
  {
    "text": "execute not it's called Full table. JS let's see if this thing work guys all",
    "start": "1266200",
    "end": "1271640"
  },
  {
    "text": "right guys so once you do that like the multiple commands right you can run them",
    "start": "1271640",
    "end": "1277520"
  },
  {
    "text": "with mpm run if you do mpm run it will tell you hey you have two commands you have command called test which calls",
    "start": "1277520",
    "end": "1285159"
  },
  {
    "text": "this and you have a command called Full Table so let's do mpm run test or just mpm test that works okay if you do that",
    "start": "1285159",
    "end": "1293320"
  },
  {
    "text": "mpm run test will execute that which is just edmont right and if you do mpm run",
    "start": "1293320",
    "end": "1298720"
  },
  {
    "text": "Full Table it will actually execute the full table right and that's how you do",
    "start": "1298720",
    "end": "1304279"
  },
  {
    "text": "multiple test guys essentially that's uh looks good guys looks good okay all",
    "start": "1304279",
    "end": "1311080"
  },
  {
    "text": "right let's do one more thing here and we can move to the other script to do to",
    "start": "1311080",
    "end": "1319440"
  },
  {
    "text": "show you the async stuff right Let's do let's do the the insert maybe I'll do a the transactions in another uh video",
    "start": "1319440",
    "end": "1326360"
  },
  {
    "start": "1320000",
    "end": "1582000"
  },
  {
    "text": "because it's just it's getting too long right so you get before we going a view the table I am going",
    "start": "1326360",
    "end": "1334240"
  },
  {
    "text": "to insert a new row okay so insert into",
    "start": "1334240",
    "end": "1340559"
  },
  {
    "text": "employees and then if you do it the insert this way like as a query by",
    "start": "1340559",
    "end": "1345720"
  },
  {
    "text": "itself then it is a single atomic Transaction what will happen is you will",
    "start": "1345720",
    "end": "1351200"
  },
  {
    "text": "send a query and then it will start the transaction do the query commit",
    "start": "1351200",
    "end": "1357520"
  },
  {
    "text": "immediately right if we want to do multiple queries with multiple",
    "start": "1357520",
    "end": "1363200"
  },
  {
    "text": "transaction you have to start and end a transaction with that let's just stick to this now and we're going to discuss",
    "start": "1363200",
    "end": "1369200"
  },
  {
    "text": "the transactions in another episode right maybe step tutorial number two okay if you guys enjoy this insert into",
    "start": "1369200",
    "end": "1376919"
  },
  {
    "text": "employees right values we need two values right again",
    "start": "1376919",
    "end": "1382679"
  },
  {
    "text": "you never do the values right there so value number one value number two and",
    "start": "1382679",
    "end": "1387960"
  },
  {
    "text": "then this is Javascript doesn't know this right this is just purely the query whoever wrote this uh no J no no JS",
    "start": "1387960",
    "end": "1396440"
  },
  {
    "text": "query uh postgress right they they put it in a way that uh takes argument okay",
    "start": "1396440",
    "end": "1402679"
  },
  {
    "text": "so let's say I want a big number 101 as an ID and give me a a",
    "start": "1402679",
    "end": "1410080"
  },
  {
    "text": "uh John do I have a John think I have a John but it doesn't matter 101 is the is",
    "start": "1410080",
    "end": "1415840"
  },
  {
    "text": "the is the clue here so I've going to insert an employee",
    "start": "1415840",
    "end": "1421480"
  },
  {
    "text": "so let's go ahead and execute that okay and be very mindful of what you going to",
    "start": "1421480",
    "end": "1428600"
  },
  {
    "text": "get back guys all right we got back oh because we we are running let's what did",
    "start": "1428600",
    "end": "1435360"
  },
  {
    "text": "we change we Chang the full table I don't want to change the full table uh you know what let's change the Full",
    "start": "1435360",
    "end": "1441039"
  },
  {
    "text": "Table okay the full table has an insert statement now in it",
    "start": "1441039",
    "end": "1446720"
  },
  {
    "text": "okay and let's run this okay let's run the full",
    "start": "1446720",
    "end": "1453240"
  },
  {
    "text": "table npm run full table and we're going to get an error here guys okay and that",
    "start": "1453240",
    "end": "1460840"
  },
  {
    "text": "error is legit you want to see this error you want to get this error okay and the error is duplicate key values we",
    "start": "1460840",
    "end": "1468399"
  },
  {
    "text": "executed it twice the first time it was successful the second time all right we got an error because 101 actually exists",
    "start": "1468399",
    "end": "1476120"
  },
  {
    "text": "right let's see does 101 exist yes called Nea right so let's let's choose",
    "start": "1476120",
    "end": "1482600"
  },
  {
    "text": "another name all right let's choose another number okay thousand And1 right",
    "start": "1482600",
    "end": "1487919"
  },
  {
    "text": "so if I save this now and then go to terminal here and then execute no npm",
    "start": "1487919",
    "end": "1496399"
  },
  {
    "text": "run Full Table I'm going to get John th1 so we we added",
    "start": "1496399",
    "end": "1502600"
  },
  {
    "text": "it successfully but if I run it again mpm run full table I'm going to get an error",
    "start": "1502600",
    "end": "1510640"
  },
  {
    "text": "and that's because this is trying to insert th1 again but thousand And1 is",
    "start": "1510640",
    "end": "1516320"
  },
  {
    "text": "actually a primary key a PK can't be duplicated",
    "start": "1516320",
    "end": "1521760"
  },
  {
    "text": "son right so that's just like it was immediately committed you can go back and see that result immediately change",
    "start": "1521760",
    "end": "1528399"
  },
  {
    "text": "rare all right so now we can stop being fancy and just put your own IDs there",
    "start": "1528399",
    "end": "1533679"
  },
  {
    "text": "and uh you can add your own IDs using Max or whatever uh to to insert that",
    "start": "1533679",
    "end": "1539520"
  },
  {
    "text": "values but just showing you here that you can in fact just insert values and",
    "start": "1539520",
    "end": "1545760"
  },
  {
    "text": "and just turn around and view them all right it makes perfect sense all right",
    "start": "1545760",
    "end": "1550919"
  },
  {
    "text": "so we have this one will'll goes to this array this value will goes to this okay and that's how you basically execute",
    "start": "1550919",
    "end": "1557320"
  },
  {
    "text": "transactions very simple stuff right guys but imag remember this with the",
    "start": "1557320",
    "end": "1563360"
  },
  {
    "text": "same client you're doing this this will be a complete Atomic transaction if you",
    "start": "1563360",
    "end": "1568480"
  },
  {
    "text": "want to like insert and update another table and do another stuff and execute",
    "start": "1568480",
    "end": "1573799"
  },
  {
    "text": "multiple stuff then you might want to do something else",
    "start": "1573799",
    "end": "1579000"
  },
  {
    "text": "right so let's uh let's show you how you can",
    "start": "1579000",
    "end": "1584240"
  },
  {
    "start": "1582000",
    "end": "2220000"
  },
  {
    "text": "do the same thing guys with an async function it's the same ex same code",
    "start": "1584240",
    "end": "1591840"
  },
  {
    "text": "exactly it does the same exact thing but it just looks different so and then it's up to you to pick whatever you prefer",
    "start": "1591840",
    "end": "1599279"
  },
  {
    "text": "okay so let's go ahead and show you how you can do this with sync await okay",
    "start": "1599279",
    "end": "1604520"
  },
  {
    "text": "let's uh what are we going man we're going to call",
    "start": "1604520",
    "end": "1609880"
  },
  {
    "text": "it async full table do and then since we added that",
    "start": "1609880",
    "end": "1616880"
  },
  {
    "text": "might as well just add another package the Jon command here and then we can a full table Asing",
    "start": "1616880",
    "end": "1625240"
  },
  {
    "text": "Full Table why not then it's called ping Full",
    "start": "1625240",
    "end": "1630320"
  },
  {
    "text": "Table nice and uh copy past is your friend guys we we did the whole thing so",
    "start": "1630320",
    "end": "1637000"
  },
  {
    "text": "you know what I'm not going to do a copy paste here let's just write it from scratch so you can actually see it okay",
    "start": "1637000",
    "end": "1643000"
  },
  {
    "text": "again const client equal require Plus scis we got the client so",
    "start": "1643000",
    "end": "1650919"
  },
  {
    "text": "now what we do is we need a function here okay let's call a function called",
    "start": "1650919",
    "end": "1656200"
  },
  {
    "text": "you can call it anything you want I'm going to call it execute okay right and that function should be a",
    "start": "1656200",
    "end": "1663080"
  },
  {
    "text": "synchronous function right in anything wait I'm not going to explain it in details here but in in general how it",
    "start": "1663080",
    "end": "1668480"
  },
  {
    "text": "goes is your uh execut right in this case V8 engine or",
    "start": "1668480",
    "end": "1675039"
  },
  {
    "text": "not JS will pause before going to the next method it is asynchronous but it",
    "start": "1675039",
    "end": "1681799"
  },
  {
    "text": "feels very synchronous right and if you wondering the difference between the two guys I'm going to reference a nice video",
    "start": "1681799",
    "end": "1687720"
  },
  {
    "text": "that I did very popular between the difference between asynchronous and synchronous functions right just in general to get you like by example",
    "start": "1687720",
    "end": "1694399"
  },
  {
    "text": "showing you the difference between the two all right but the cool thing about this is like when you call a function",
    "start": "1694399",
    "end": "1701679"
  },
  {
    "text": "you will pause the execution before you move to the next line of code so let's",
    "start": "1701679",
    "end": "1707000"
  },
  {
    "text": "go ahead and do uh the first line of code which is uh before we do that we can actually do",
    "start": "1707000",
    "end": "1714840"
  },
  {
    "text": "it here I think right we can execute a client",
    "start": "1714840",
    "end": "1721880"
  },
  {
    "text": "object equal new client remember and",
    "start": "1721880",
    "end": "1727080"
  },
  {
    "text": "then again the user pogress the",
    "start": "1727080",
    "end": "1734398"
  },
  {
    "text": "password pogress and then and obviously the host where are you",
    "start": "1735159",
    "end": "1742360"
  },
  {
    "text": "connecting from to I mean myin Mac machine what's the port 5432 and then",
    "start": "1742360",
    "end": "1750080"
  },
  {
    "text": "what else obviously the most important thing is the database the same DB nice",
    "start": "1750080",
    "end": "1755720"
  },
  {
    "text": "all right you can also put this here it doesn't really matter but I just uh want to reuse it over and over again right I",
    "start": "1755720",
    "end": "1763039"
  },
  {
    "text": "don't want L this function to get confusing so client what is the first thing we do we do connect but then we're",
    "start": "1763039",
    "end": "1768880"
  },
  {
    "text": "not going to use then right this is actually returning a promise right and in the previous code we chain this",
    "start": "1768880",
    "end": "1776799"
  },
  {
    "text": "promise it say okay dot there returns a result and then we do the dot dot then dot then dot then because it keeps",
    "start": "1776799",
    "end": "1782919"
  },
  {
    "text": "returning a promise whether a promise is resolved like a then or rejected will go",
    "start": "1782919",
    "end": "1788640"
  },
  {
    "text": "catch eventually will go to finally okay here what you do is essentially you just",
    "start": "1788640",
    "end": "1794760"
  },
  {
    "text": "call a wait before it okay and that will give you exact exactly the same uh uh",
    "start": "1794760",
    "end": "1802679"
  },
  {
    "text": "exactly the same same result right so let's go ahead and do after that I want to do connected successfully feels very",
    "start": "1802679",
    "end": "1810960"
  },
  {
    "text": "intuitive if you think about it right guys because hey if I connect here I'm going to pose the execution the pointer",
    "start": "1810960",
    "end": "1817279"
  },
  {
    "text": "if I don't know if you see my mouse here but the once I connect I'm going to pose the execution will pause will never go",
    "start": "1817279",
    "end": "1823840"
  },
  {
    "text": "to the next line until it's finished right but that will not actually block",
    "start": "1823840",
    "end": "1830840"
  },
  {
    "text": "anything else it will do completely using different technology right it will just using generators okay so we'll wait",
    "start": "1830840",
    "end": "1837399"
  },
  {
    "text": "here once you're done we will go and connect successfully boom you're done and then once you do that completed",
    "start": "1837399",
    "end": "1844640"
  },
  {
    "text": "successfully now we can actually execute a query right so you can do con results",
    "start": "1844640",
    "end": "1851919"
  },
  {
    "text": "equal client. ququ and then let's do select all from employees",
    "start": "1851919",
    "end": "1859919"
  },
  {
    "text": "nice if you don't declare this function as async you will never be able to uh do",
    "start": "1864320",
    "end": "1870919"
  },
  {
    "text": "a wait here okay but another thing we forgot here since this is again another asynchronous function you have to call a",
    "start": "1870919",
    "end": "1877760"
  },
  {
    "text": "wait if you don't do that this code will immediately execute and it start executing the code below it okay once we",
    "start": "1877760",
    "end": "1884639"
  },
  {
    "text": "got the result what do we do with the results we do do table okay then results.",
    "start": "1884639",
    "end": "1893519"
  },
  {
    "text": "row okay all right so this is the same thing right since",
    "start": "1893519",
    "end": "1900519"
  },
  {
    "text": "this is returning results we can if you think about it let's take it step by",
    "start": "1900519",
    "end": "1906880"
  },
  {
    "text": "step let's just see if this is working first okay all right once you're done obviously you you will close the",
    "start": "1906880",
    "end": "1911960"
  },
  {
    "text": "connection and then to close it you would do uh client. end okay and then again you always do a wait before",
    "start": "1911960",
    "end": "1918559"
  },
  {
    "text": "calling any of these functions and then you do console.log we didn't do that previously",
    "start": "1918559",
    "end": "1924559"
  },
  {
    "text": "but it doesn't matter client disconnected successfully whatever right",
    "start": "1924559",
    "end": "1930200"
  },
  {
    "text": "but then if you think about this is taking care of things that would everything goes perfectly and dandy",
    "start": "1930200",
    "end": "1935960"
  },
  {
    "text": "right but what if the things fail you have to add your own TR cat to deal with",
    "start": "1935960",
    "end": "1941080"
  },
  {
    "text": "stuff that's what I don't like about this approach okay but let's see if",
    "start": "1941080",
    "end": "1947080"
  },
  {
    "text": "things Dandy you everything is dandy and happy right let's go ahead and execute",
    "start": "1947080",
    "end": "1953159"
  },
  {
    "text": "that uh sure and obviously you saw me called the",
    "start": "1953159",
    "end": "1959279"
  },
  {
    "text": "function right because this is a function we never called unless someone called it right and the execution is just boom and then execute okay let's go",
    "start": "1959279",
    "end": "1967159"
  },
  {
    "text": "ahead and call mpm run I forgot the name so I'm going to just the mpm run so mpm run async full table and if I do that I",
    "start": "1967159",
    "end": "1975399"
  },
  {
    "text": "get the same exact result right but if it fails then you have to deal with",
    "start": "1975399",
    "end": "1980720"
  },
  {
    "text": "failures right like the one when when fail with primary key uh violation okay",
    "start": "1980720",
    "end": "1987039"
  },
  {
    "text": "it will never catch it in this case right so you'll have to actually your code is not complete until you do it",
    "start": "1987039",
    "end": "1992240"
  },
  {
    "text": "this way okay you will do try catch",
    "start": "1992240",
    "end": "1998080"
  },
  {
    "text": "right wherever ex and then you say console.log something wrong happened and",
    "start": "1998080",
    "end": "2004440"
  },
  {
    "text": "then you do let's let's use the Tex here right",
    "start": "2004440",
    "end": "2013360"
  },
  {
    "text": "ex and then you can do finally same thing here right",
    "start": "2013480",
    "end": "2018519"
  },
  {
    "text": "finally console.log you can move the the two codes actually here here right",
    "start": "2018519",
    "end": "2026399"
  },
  {
    "text": "finally so this is where things go right this is where things might go wrong and",
    "start": "2026399",
    "end": "2032639"
  },
  {
    "text": "this eventually they will both call this function and they will uh I to add",
    "start": "2032639",
    "end": "2039039"
  },
  {
    "text": "another curly braces here guys okay this is where things go",
    "start": "2039039",
    "end": "2046200"
  },
  {
    "text": "right this is where things go wrong this",
    "start": "2046200",
    "end": "2051520"
  },
  {
    "text": "is where things eventually end up what the hell why do I have an extra that's",
    "start": "2051520",
    "end": "2059320"
  },
  {
    "text": "weird it's complaining I don't know I all right we'll see why it's",
    "start": "2059320",
    "end": "2066320"
  },
  {
    "text": "complaining in a second but it's complaining all right so why are you complaining",
    "start": "2066320",
    "end": "2072158"
  },
  {
    "text": "sir we have one this is the a we're missing a curly braces guys here this is",
    "start": "2072159",
    "end": "2079280"
  },
  {
    "text": "closing this this is oh this has nothing oh there oh man seriously okay yeah we",
    "start": "2079280",
    "end": "2087118"
  },
  {
    "text": "had an extra one okay guys all right sorry",
    "start": "2087119",
    "end": "2091919"
  },
  {
    "text": "mpm sorry andm start run async table and that's where",
    "start": "2093480",
    "end": "2102200"
  },
  {
    "text": "things go right okay so if you fail let's let's",
    "start": "2102200",
    "end": "2108040"
  },
  {
    "text": "do something that failed right let's do for example here let's",
    "start": "2108040",
    "end": "2114560"
  },
  {
    "text": "execute insert into employees values one and John okay",
    "start": "2114560",
    "end": "2122200"
  },
  {
    "text": "that's bad but it's just testing showing you that's another way of doing things but that's a bad way of doing things",
    "start": "2122200",
    "end": "2129079"
  },
  {
    "text": "okay so and that's uh query results usually insert does not return anything",
    "start": "2129079",
    "end": "2135599"
  },
  {
    "text": "right because it just say hey do that it doesn't return a result so you don't have to get results back okay so let's",
    "start": "2135599",
    "end": "2143520"
  },
  {
    "text": "go ahead and do it again and that's your error right there something wrong",
    "start": "2143520",
    "end": "2148680"
  },
  {
    "text": "happened that's our so we know that this will fail because one does exist right",
    "start": "2148680",
    "end": "2154240"
  },
  {
    "text": "we have that one is right there was saying is number",
    "start": "2154240",
    "end": "2159760"
  },
  {
    "text": "one so now what happened boo died it immediately goes to catch something",
    "start": "2159760",
    "end": "2166720"
  },
  {
    "text": "wrong something wrong happened and then we executed the error which is our duplicate key values right uh unique",
    "start": "2166720",
    "end": "2175319"
  },
  {
    "text": "constraint okay so both have uh some advantages and disadvantages to this",
    "start": "2175319",
    "end": "2180760"
  },
  {
    "text": "method right if you go to client then eventually will call finally but I like this method as well because it's easier",
    "start": "2180760",
    "end": "2187920"
  },
  {
    "text": "to debug because you can just do this let's let me show you right oh let me",
    "start": "2187920",
    "end": "2194240"
  },
  {
    "text": "let me modify my debugger to to actually read from this thing instead okay so you",
    "start": "2194240",
    "end": "2199400"
  },
  {
    "text": "go to option then execute what is it called a sync fold table instead then",
    "start": "2199400",
    "end": "2207560"
  },
  {
    "text": "let go ahead so what we'll do is it will execute that and I will just show you",
    "start": "2207560",
    "end": "2214040"
  },
  {
    "text": "that immediately right with the then then then it's very hard to execute very",
    "start": "2214040",
    "end": "2220520"
  },
  {
    "start": "2220000",
    "end": "2380000"
  },
  {
    "text": "hard to do but yeah so this is where go ahead and then this will fail immediately will take you there okay",
    "start": "2220520",
    "end": "2226319"
  },
  {
    "text": "it's it's nice it's it feels very synchronous feels very intuitive to the coding that we used to do it's just the",
    "start": "2226319",
    "end": "2232960"
  },
  {
    "text": "TR catch is ugly with the old Curly braces but I guess there is no solution to this it's really up to you guys both",
    "start": "2232960",
    "end": "2239880"
  },
  {
    "text": "mths are cool I like the other methods if you don't do much debugging but",
    "start": "2239880",
    "end": "2245160"
  },
  {
    "text": "obviously this will execute that and eventually will end the client eventually will do that and you're done okay all right guys let's let's do some",
    "start": "2245160",
    "end": "2252200"
  },
  {
    "text": "more debugging here and show you how the results object look like I I just go",
    "start": "2252200",
    "end": "2257520"
  },
  {
    "text": "ahead and I I commented this line so our script doesn't fail and then I change the configuration back to the async Full",
    "start": "2257520",
    "end": "2264680"
  },
  {
    "text": "Table let's go ahead and just uh start that and show you how it looks how about that guys so the first thing we're going",
    "start": "2264680",
    "end": "2270839"
  },
  {
    "text": "to do is execute connect poof done right and then print that and then go ahead",
    "start": "2270839",
    "end": "2276800"
  },
  {
    "text": "and execute this select all star that will give me the results and you can just look at the results which is pretty",
    "start": "2276800",
    "end": "2283520"
  },
  {
    "text": "neat right you can just take a look at the results these are the rows that",
    "start": "2283520",
    "end": "2289280"
  },
  {
    "text": "we're interested in right and then each row you can just take uh each Ro this is",
    "start": "2289280",
    "end": "2295079"
  },
  {
    "text": "an array of object right and each object is ID and Name ID and Name ID and name",
    "start": "2295079",
    "end": "2300400"
  },
  {
    "text": "okay and then uh you can just uh do all kind of manipulation of this right",
    "start": "2300400",
    "end": "2306280"
  },
  {
    "text": "return the results give the first result do fancy stuff and so on right then what",
    "start": "2306280",
    "end": "2311480"
  },
  {
    "text": "it does like results is actually this whole big Json object right but we only want to print the table which is rows",
    "start": "2311480",
    "end": "2318400"
  },
  {
    "text": "okay so that's why we did results. rows okay okay and then we continue running that then we get this nice table right",
    "start": "2318400",
    "end": "2325359"
  },
  {
    "text": "so remember based on this format which is here we can do the same thing right",
    "start": "2325359",
    "end": "2331079"
  },
  {
    "text": "so since results has dot rows in them what happens if I do this right can I do",
    "start": "2331079",
    "end": "2337040"
  },
  {
    "text": "this is this valid it is because this",
    "start": "2337040",
    "end": "2342560"
  },
  {
    "text": "Returns the result object okay and this means give me the property called rows",
    "start": "2342560",
    "end": "2349839"
  },
  {
    "text": "and store it in a variable called rows okay and this only works if the variable is actually the same name as the object",
    "start": "2349839",
    "end": "2356400"
  },
  {
    "text": "name okay so rows you have to call it rows you cannot call it rows one it will fail okay yeah you have to say rows and",
    "start": "2356400",
    "end": "2363720"
  },
  {
    "text": "that's basically the whole result do rows and that's another way of w in things in the JavaScript let's see if it",
    "start": "2363720",
    "end": "2370800"
  },
  {
    "text": "works right and it works guys this times you only",
    "start": "2370800",
    "end": "2377480"
  },
  {
    "text": "get the rows right and then you just boom print all of them okay cool all",
    "start": "2377480",
    "end": "2382920"
  },
  {
    "start": "2380000",
    "end": "3235000"
  },
  {
    "text": "right guys I actually since this is almost like 40 minutes let's let's complete the hour and do transactions",
    "start": "2382920",
    "end": "2388359"
  },
  {
    "text": "how about that guys let's do transactions right guys and let's do them uh in the async manner okay so",
    "start": "2388359",
    "end": "2394680"
  },
  {
    "text": "let's go ahead and create a new J file let's go it what you",
    "start": "2394680",
    "end": "2400319"
  },
  {
    "text": "call transactions the JS whatever okay and then same thing I like to rewrite",
    "start": "2400319",
    "end": "2406920"
  },
  {
    "text": "everything from scratch I don't like to copy paste much if you notice guys because if I it's just this is how I",
    "start": "2406920",
    "end": "2413560"
  },
  {
    "text": "learn personally right I write things and more and more and more right over and over again and it just like sticks",
    "start": "2413560",
    "end": "2419960"
  },
  {
    "text": "in my head I just remember them right copy and paste will just like uh you don't you don't feel with the code",
    "start": "2419960",
    "end": "2426760"
  },
  {
    "text": "anymore you don't have feelings with the code if you write it then you actually understand it more okay the more you",
    "start": "2426760",
    "end": "2432640"
  },
  {
    "text": "write it okay require PG I know that there is an client optic called PG okay",
    "start": "2432640",
    "end": "2438680"
  },
  {
    "text": "then we do here is this is what we're going to do we will uh uh do const client equal new",
    "start": "2438680",
    "end": "2447599"
  },
  {
    "text": "client all right and then you just do user pis password",
    "start": "2447599",
    "end": "2456040"
  },
  {
    "text": "pis right so the more you type this right it's just like it makes more sense",
    "start": "2456040",
    "end": "2462839"
  },
  {
    "text": "right it's just like this is how you basically learn you to learn you write more software guys that's how you become",
    "start": "2462839",
    "end": "2468560"
  },
  {
    "text": "better software engineer just keep writing software right and with each line of",
    "start": "2468560",
    "end": "2475400"
  },
  {
    "text": "code you write you become better and better",
    "start": "2475400",
    "end": "2482280"
  },
  {
    "text": "okay but if you keep Co copying and pasting",
    "start": "2482280",
    "end": "2487960"
  },
  {
    "text": "it will it will work but it won't take you so far right async",
    "start": "2488240",
    "end": "2495599"
  },
  {
    "text": "function execute so it's like even me right is Javas I learned JavaScript",
    "start": "2495599",
    "end": "2503280"
  },
  {
    "text": "you'll be surprised I learned JavaScript in 2017 which is like what two years ago and I didn't study it like didn't go to",
    "start": "2503280",
    "end": "2510520"
  },
  {
    "text": "courses or anything right I mean I went to a course but I I left the course didn't understand anything okay it look",
    "start": "2510520",
    "end": "2517520"
  },
  {
    "text": "like was more confused and because there was no examples in the course there was no by examples just like hey this is",
    "start": "2517520",
    "end": "2524359"
  },
  {
    "text": "this is code and just write it down I like I don't know I just don't like that",
    "start": "2524359",
    "end": "2529880"
  },
  {
    "text": "method of teaching this way to learn any pramming language guys learn from me",
    "start": "2529880",
    "end": "2535599"
  },
  {
    "text": "right just write more software with that language if you want to learn JavaScript don't go how to learn JavaScript",
    "start": "2535599",
    "end": "2543040"
  },
  {
    "text": "whatever do go and build an application with JavaScript right build a calcul lat or build it something right with with",
    "start": "2543040",
    "end": "2550319"
  },
  {
    "text": "the state or post and do do things right you have to do something useful with it",
    "start": "2550319",
    "end": "2555520"
  },
  {
    "text": "right any application and then just immediately learn it okay I'll try to",
    "start": "2555520",
    "end": "2562319"
  },
  {
    "text": "shut up guys and just code sorry execute we're going to execute that what what",
    "start": "2562319",
    "end": "2567960"
  },
  {
    "text": "are we going to do okay we're going to connect and we're going to await result we don't really need to console print",
    "start": "2567960",
    "end": "2574960"
  },
  {
    "text": "every time but query this is the trick to begin a",
    "start": "2574960",
    "end": "2580839"
  },
  {
    "text": "transaction you do begin and then when you're done you do commit right and if",
    "start": "2580839",
    "end": "2586760"
  },
  {
    "text": "you don't want the transaction to to to ever get executed okay you do uh client. query",
    "start": "2586760",
    "end": "2595480"
  },
  {
    "text": "roll back right it's very simple right so now let's show you what will happen",
    "start": "2595480",
    "end": "2600920"
  },
  {
    "text": "here and compare the results okay so what we're going to do is client do insert oh sorry",
    "start": "2600920",
    "end": "2607640"
  },
  {
    "text": "that's what I'm telling you guys you you don't really remember everything right insert so this will begin as an transaction and then I'm going to insert",
    "start": "2607640",
    "end": "2614520"
  },
  {
    "text": "into employees",
    "start": "2614520",
    "end": "2619600"
  },
  {
    "text": "[Music] uh one and two",
    "start": "2619600",
    "end": "2626680"
  },
  {
    "text": "values um what what I'm doing sorry",
    "start": "2628559",
    "end": "2633599"
  },
  {
    "text": "values this and then let's just give it an array then I don't know",
    "start": "2633599",
    "end": "2639160"
  },
  {
    "text": "th8 want something that doesn't exist there okay if I do that and then II for",
    "start": "2639160",
    "end": "2647599"
  },
  {
    "text": "example and then I go ahead and execute that thing",
    "start": "2647599",
    "end": "2653280"
  },
  {
    "text": "right I show you what exactly will happen forgot our wait",
    "start": "2653280",
    "end": "2659640"
  },
  {
    "text": "here okay I didn't put a try catch that's bad but uh let's do this here",
    "start": "2660000",
    "end": "2665880"
  },
  {
    "text": "guys okay console.log inserted a new row and the",
    "start": "2665880",
    "end": "2673280"
  },
  {
    "text": "row is called th8 right so let's let's go ahead and change the debugging so it",
    "start": "2673280",
    "end": "2679680"
  },
  {
    "text": "points from tx. JS right then go back and then run debug it's important to do",
    "start": "2679680",
    "end": "2687079"
  },
  {
    "text": "debugging here obviously I didn't call xute because I'm right and",
    "start": "2687079",
    "end": "2695680"
  },
  {
    "text": "then ah sorry so this is this is another thing right you have to do a try catch guys",
    "start": "2695680",
    "end": "2702680"
  },
  {
    "text": "you cannot escape the try catch it will just yell at you it was just like say hey you didn't do an promise rejection",
    "start": "2702680",
    "end": "2710800"
  },
  {
    "text": "right you didn't do the you didn't catch the rejected promise",
    "start": "2710800",
    "end": "2715839"
  },
  {
    "text": "okay promise me failed to execute something",
    "start": "2715839",
    "end": "2724520"
  },
  {
    "text": "then right I don't know how guys explain this this is the back tech notation",
    "start": "2724520",
    "end": "2729599"
  },
  {
    "text": "which is equivalent to doing console.log fa Al to execute something",
    "start": "2729599",
    "end": "2736319"
  },
  {
    "text": "and then you do that and then you do that this is equivalent to this right but this is much much much better okay",
    "start": "2736319",
    "end": "2745280"
  },
  {
    "text": "this is instead of adding pluses and and then if you do this like hey plus uh",
    "start": "2745280",
    "end": "2752000"
  },
  {
    "text": "this is not cool right you can just do this right here this is not cool in the",
    "start": "2752000",
    "end": "2757319"
  },
  {
    "text": "same string right which is which is insane and then finally remember guys",
    "start": "2757319",
    "end": "2764079"
  },
  {
    "text": "what do we do finally we Clos the thing don't ever forget to close your connection guys you don't want the",
    "start": "2764079",
    "end": "2769960"
  },
  {
    "text": "things leaking okay console.log cleaned baby cleaned all right let's do this I",
    "start": "2769960",
    "end": "2778079"
  },
  {
    "text": "think it will now yell at me oh it's yelling a database with C Mac",
    "start": "2778079",
    "end": "2783920"
  },
  {
    "text": "does not exist this is not cool what oh I'm sorry H DB I forgot I give",
    "start": "2783920",
    "end": "2792640"
  },
  {
    "text": "the database oh that's actually a nice error okay so it failed with because I give it a bad name",
    "start": "2792640",
    "end": "2799160"
  },
  {
    "text": "right that's the thing if you fail the the more you fail with errors you learn",
    "start": "2799160",
    "end": "2805079"
  },
  {
    "text": "more right guys that's if you everything is going Dandy and successful this is a new word to learn Dandy yest from Red",
    "start": "2805079",
    "end": "2811760"
  },
  {
    "text": "Dead Redemption to just playing this game now love it all",
    "start": "2811760",
    "end": "2818079"
  },
  {
    "text": "okay so now I am about I run begin I am about to run this but I'm not going to",
    "start": "2818079",
    "end": "2824240"
  },
  {
    "text": "commit it I just inserted it okay and I'm not even going to do that if I go",
    "start": "2824240",
    "end": "2831040"
  },
  {
    "text": "back and then I say Sir where is my 108th row I do not see it here in the",
    "start": "2831040",
    "end": "2838680"
  },
  {
    "text": "database physically in the database I queried and there's nothing there's no such thing as 108 you can see that guys",
    "start": "2838680",
    "end": "2845400"
  },
  {
    "text": "right boof boof boof boof there's nothing okay but the moment I do this",
    "start": "2845400",
    "end": "2853559"
  },
  {
    "text": "actually moment I do this then I go in qu and you can see Ali",
    "start": "2853559",
    "end": "2860559"
  },
  {
    "text": "Ali is here Sal look at",
    "start": "2860559",
    "end": "2867200"
  },
  {
    "text": "that nice and then obviously goes to finally and cleaning things",
    "start": "2867200",
    "end": "2875040"
  },
  {
    "text": "and nice right so commit actually commit the",
    "start": "2875440",
    "end": "2880680"
  },
  {
    "text": "transaction right what you want to do in case of an error if anything goes wrong",
    "start": "2880680",
    "end": "2886960"
  },
  {
    "text": "anything for any reason you don't want to commit you want to roll it back right okay so like hey I'm doing insert and",
    "start": "2886960",
    "end": "2894720"
  },
  {
    "text": "another update and maybe a fancy stuff let's just do this let's go nuts right",
    "start": "2894720",
    "end": "2900160"
  },
  {
    "text": "let's say someone got access to the update employees",
    "start": "2900160",
    "end": "2905480"
  },
  {
    "text": "set name name equal everybody's now",
    "start": "2905480",
    "end": "2910599"
  },
  {
    "text": "called Ray Donovan right damn it this this",
    "start": "2910599",
    "end": "2917920"
  },
  {
    "text": "Ray everybody's Ray now okay Ray Donovan hacked everything and then just yeah he",
    "start": "2917920",
    "end": "2925400"
  },
  {
    "text": "just it's just nuts he updated all the employees to have the same name I have no idea why he did that don't ask me",
    "start": "2925400",
    "end": "2933040"
  },
  {
    "text": "okay but he did it okay so let's go ahead and do that",
    "start": "2933040",
    "end": "2938200"
  },
  {
    "text": "query and then we have an error that's actually cool all right if I do that it",
    "start": "2938200",
    "end": "2944040"
  },
  {
    "text": "fails right and then we going to roll back and then we're done okay let's flip the equation",
    "start": "2944040",
    "end": "2950760"
  },
  {
    "text": "here if I do that let's go ahead to debug if I do",
    "start": "2951119",
    "end": "2958240"
  },
  {
    "text": "that I just updated all the employees name now everybody's called Ray obviously in the",
    "start": "2958240",
    "end": "2965520"
  },
  {
    "text": "database is is not committed right but the moment I execute that that",
    "start": "2965520",
    "end": "2972319"
  },
  {
    "text": "will fail and that will roll back the transaction okay but let's do that right",
    "start": "2972319",
    "end": "2978520"
  },
  {
    "text": "after this I am going to actually do const",
    "start": "2978520",
    "end": "2985079"
  },
  {
    "text": "rows equal this I don't need to do all that that will be just select all the",
    "start": "2985119",
    "end": "2990680"
  },
  {
    "text": "employees and see Chrome employees okay select all the",
    "start": "2990680",
    "end": "2998000"
  },
  {
    "text": "employees and we're going to we're going to inspect the rows here console. table rows okay just print the rows here okay",
    "start": "2998000",
    "end": "3006839"
  },
  {
    "text": "what do you think will happen guys since I did it in the same transaction I just updated all the rows everybody's named",
    "start": "3006839",
    "end": "3013960"
  },
  {
    "text": "Ray within this scope within this transaction okay but in the",
    "start": "3013960",
    "end": "3020200"
  },
  {
    "text": "database it is not the same thing at all",
    "start": "3020200",
    "end": "3025480"
  },
  {
    "text": "okay it's still in act right and then I am going to insert this which will fail 2008 and I by the way discussed the",
    "start": "3025480",
    "end": "3032640"
  },
  {
    "text": "atomic transactions and other list of videos there hopefully it get recommended to you by YouTube but if not",
    "start": "3032640",
    "end": "3038640"
  },
  {
    "text": "then you can you can check out the description below or the cards I talk about all kind of dirty reads and all",
    "start": "3038640",
    "end": "3046599"
  },
  {
    "text": "that stuff right all the database stuff so if this will fail which says hey what we do we just",
    "start": "3046599",
    "end": "3055400"
  },
  {
    "text": "updated everything you need to roll that back sir roll what the hell did I do",
    "start": "3055400",
    "end": "3060880"
  },
  {
    "text": "okay roll back and then roll back and clean everything up okay guys that's",
    "start": "3060880",
    "end": "3066680"
  },
  {
    "text": "that's some sort of an example of things that you can go and write code with so that's a transaction that's how you do a",
    "start": "3066680",
    "end": "3073359"
  },
  {
    "text": "transaction with no JS okay uh the author of this nice Library also had the",
    "start": "3073359",
    "end": "3079760"
  },
  {
    "text": "concept of pooling I might do another video of this right but pooling essentially is just like you have a pool",
    "start": "3079760",
    "end": "3085760"
  },
  {
    "text": "of connection and just for uh especially when you're writing an Express app or a",
    "start": "3085760",
    "end": "3091319"
  },
  {
    "text": "web app server you want every request that comes to if it's like item potent",
    "start": "3091319",
    "end": "3097799"
  },
  {
    "text": "if it's if it's like you want a stateless then each request will be",
    "start": "3097799",
    "end": "3102880"
  },
  {
    "text": "served by a different pool of connection and whenever you're done you will release the client connection so instead",
    "start": "3102880",
    "end": "3110160"
  },
  {
    "text": "of doing this connect which is expensive if your if your if your application has",
    "start": "3110160",
    "end": "3115319"
  },
  {
    "text": "thousand or 2,000 or or million user connect is very expensive you don't want every user to connect every user to",
    "start": "3115319",
    "end": "3122359"
  },
  {
    "text": "connect right so you want to have a pool of connections okay and these",
    "start": "3122359",
    "end": "3127480"
  },
  {
    "text": "connections will just be released and uh returned to the pool whenever uh",
    "start": "3127480",
    "end": "3132640"
  },
  {
    "text": "whenever you want to execute something you get a connection from the pool execute your stuff and then you whenever",
    "start": "3132640",
    "end": "3138240"
  },
  {
    "text": "you're done you just release it you don't EP you release it okay so that's another way because uh just like to",
    "start": "3138240",
    "end": "3145559"
  },
  {
    "text": "enable scalability essentially right we don't want you to worry about that if you're rting a simple application you",
    "start": "3145559",
    "end": "3151359"
  },
  {
    "text": "can still just use this method the advantage of the disadvantage of this is is you're connecting a disconnecting for",
    "start": "3151359",
    "end": "3158200"
  },
  {
    "text": "every single request or for every single execution you but it's okay if you're if",
    "start": "3158200",
    "end": "3163920"
  },
  {
    "text": "you're doing one job like you run the script you do something you insert a massive amount of rows or or you do",
    "start": "3163920",
    "end": "3170720"
  },
  {
    "text": "something some something like that you can you can immediately you can eventually use that all right guys I",
    "start": "3170720",
    "end": "3176160"
  },
  {
    "text": "think I am going stop here I swear all right it's been an hour but it's a it's it's a",
    "start": "3176160",
    "end": "3182720"
  },
  {
    "text": "full tutorial guys that uh I'm providing this for to you hopefully you you",
    "start": "3182720",
    "end": "3187760"
  },
  {
    "text": "enjoyed it if you're still watching thank you so much you made it until the end of the tutorial right and obviously",
    "start": "3187760",
    "end": "3195240"
  },
  {
    "text": "guys you have any questions leave them in the comments below if you're new here if you're for just minute my name is",
    "start": "3195240",
    "end": "3201599"
  },
  {
    "text": "Hussein uh that's that I like to do this in my free time I love coding okay I",
    "start": "3201599",
    "end": "3207680"
  },
  {
    "text": "have this YouTube channel where we discuss software engineering by example we do tutorials like these we do mobile",
    "start": "3207680",
    "end": "3213079"
  },
  {
    "text": "tutorials where we take a a live application like to do a tw Twitter and TW try to reverse engineer that how it",
    "start": "3213079",
    "end": "3220359"
  },
  {
    "text": "works so anything software engineering you've come to the right place so consider subscribing if you like this",
    "start": "3220359",
    "end": "3225839"
  },
  {
    "text": "stuff right will really uh boost the channel and leave a like on this video If you really like it and I'm going to",
    "start": "3225839",
    "end": "3232160"
  },
  {
    "text": "see you in the next one you guys stay awesome",
    "start": "3232160",
    "end": "3236640"
  }
]