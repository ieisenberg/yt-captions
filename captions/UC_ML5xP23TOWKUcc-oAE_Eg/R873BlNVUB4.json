[
  {
    "start": "0",
    "end": "152000"
  },
  {
    "text": "a party Kafka is a distributed stream processing software developed by LinkedIn and written in Scala and Java",
    "start": "30",
    "end": "6000"
  },
  {
    "text": "in this video I want to focus on the basics on Kafka I want to talk about the",
    "start": "6000",
    "end": "12450"
  },
  {
    "text": "components of Kafka how it works and finally spin up our own Kafka cluster on",
    "start": "12450",
    "end": "18480"
  },
  {
    "text": "docker and write some applications some producers and some consumers using",
    "start": "18480",
    "end": "24320"
  },
  {
    "text": "nodejs and Kafka GS if you're interested stay",
    "start": "24320",
    "end": "29429"
  },
  {
    "text": "tuned you have no idea how many comments I got to make this video right everyone",
    "start": "29429",
    "end": "37410"
  },
  {
    "text": "is asking about Kafka it's ever since I made the video about RabbitMQ and",
    "start": "37410",
    "end": "43070"
  },
  {
    "text": "publish/subscribe all it's just flooding with Kafka right system I know at some",
    "start": "43070",
    "end": "48840"
  },
  {
    "text": "point I wanted to make this video and here it is it took a lot of research this is a very interesting Tech self so",
    "start": "48840",
    "end": "56969"
  },
  {
    "text": "if you're interested let's just jump into it as I go through the table of content or their gender you will see",
    "start": "56969",
    "end": "64439"
  },
  {
    "text": "your start seeing time codes where you can jump into the interesting part of the video alright the first topic is",
    "start": "64439",
    "end": "71189"
  },
  {
    "text": "Kafka components this is the longest topic really I'm gonna break down the components of Kafka I'm gonna explain",
    "start": "71189",
    "end": "78540"
  },
  {
    "text": "how Kafka actually works I'm gonna introduce one component at a time as I",
    "start": "78540",
    "end": "84200"
  },
  {
    "text": "explained the necessity of this company I'm not just throw all the components and just explain it because I started",
    "start": "84200",
    "end": "91170"
  },
  {
    "text": "that way and I got confusing really so I start with the basics brokers and producers consumers and will slowly",
    "start": "91170",
    "end": "97710"
  },
  {
    "text": "build up up until zookeeper and all that self so then obviously we're gonna go an",
    "start": "97710",
    "end": "103020"
  },
  {
    "text": "example because yeah right I need to see this working right so we're gonna spin up our own Kafka cluster I'm gonna spin",
    "start": "103020",
    "end": "109890"
  },
  {
    "text": "up a zookeeper because you need that stuff and we're gonna write our own code nodejs and producer and consumer and",
    "start": "109890",
    "end": "118530"
  },
  {
    "text": "create a topic and do all that jazz right so that is an example and then",
    "start": "118530",
    "end": "123930"
  },
  {
    "text": "finally we're gonna talk about the pros and cons of Kafka because guess what nothing is perfect right",
    "start": "123930",
    "end": "130349"
  },
  {
    "text": "I don't gotta summarize the whole thing it's just yeah I'm going to a few here welcome my name is Hussein",
    "start": "130349",
    "end": "136950"
  },
  {
    "text": "and this channel we discuss all sorts of software engineering by example so if you want to become a better software",
    "start": "136950",
    "end": "142140"
  },
  {
    "text": "engineer consider subscribe and hit that be like and so you get notified every time I upload a new video",
    "start": "142140",
    "end": "147629"
  },
  {
    "text": "well that's it let's just jump into Kafka guys the first component of Kafka is what we",
    "start": "147629",
    "end": "154049"
  },
  {
    "start": "152000",
    "end": "339000"
  },
  {
    "text": "call this Kafka server or the Kafka broker and that Kafka broker is this",
    "start": "154049",
    "end": "160890"
  },
  {
    "text": "basically the first server that users interact with and since it's a server",
    "start": "160890",
    "end": "167700"
  },
  {
    "text": "right it's listening to some TCP connection to accept connections right",
    "start": "167700",
    "end": "173190"
  },
  {
    "text": "that's how rabbit in the queue work that's how web servers work that's how pretty much any networking application",
    "start": "173190",
    "end": "179459"
  },
  {
    "text": "works you have a server get a lesson on a port that's the default port for Kafka",
    "start": "179459",
    "end": "186239"
  },
  {
    "text": "it's got 1992 and it's called a broker and there's magic inside the stuff right",
    "start": "186239",
    "end": "191849"
  },
  {
    "text": "we're gonna go into it and there are two pieces of abstractions here which we",
    "start": "191849",
    "end": "198120"
  },
  {
    "text": "call the producers this producers produce content it publishes content to",
    "start": "198120",
    "end": "204329"
  },
  {
    "text": "the broker and then consumer consumes content from the broker okay so that's seems simple right it just seems very",
    "start": "204329",
    "end": "212190"
  },
  {
    "text": "simple and to the point right your eyes if you are interested to know like more",
    "start": "212190",
    "end": "217470"
  },
  {
    "text": "about the publishing a pop sub system versus queue and all that stuff I'm gonna reference a video that I did just",
    "start": "217470",
    "end": "223739"
  },
  {
    "text": "talking about pops up right because I'm gonna glance over the idea of pops up because I do get deep into that",
    "start": "223739",
    "end": "230340"
  },
  {
    "text": "technology just in another video so go go and check that out if you're interested but here's the thing",
    "start": "230340",
    "end": "236970"
  },
  {
    "text": "right so the other abstraction and Kafka is essentially the connection right and",
    "start": "236970",
    "end": "243750"
  },
  {
    "text": "then you have obviously a producer connect to the broker using a TCP",
    "start": "243750",
    "end": "250139"
  },
  {
    "text": "connection and that's a raw TCP connection so it's bi-directional so broker can send information to the",
    "start": "250139",
    "end": "256380"
  },
  {
    "text": "producer and the producer can send information to the to the broker and so on consumer is the same thing you",
    "start": "256380",
    "end": "262650"
  },
  {
    "text": "establish this TCP connection right there is a protocol I couldn't fall the details of that protocol to be",
    "start": "262650",
    "end": "269550"
  },
  {
    "text": "honest and well on my searching so I'm not sure what's the protocol here maybe it's just custom binary TCP okay and",
    "start": "269550",
    "end": "278610"
  },
  {
    "text": "here's the thing so once you establish these TCP connections which we know how works right we made we talked about TCP",
    "start": "278610",
    "end": "285150"
  },
  {
    "text": "I'm gonna reference it here just talk about just general TCP connection here's the concept there's a topic right topics",
    "start": "285150",
    "end": "293190"
  },
  {
    "text": "are basically this logical partitions",
    "start": "293190",
    "end": "298290"
  },
  {
    "text": "where you write contents to write so",
    "start": "298290",
    "end": "303600"
  },
  {
    "text": "such as logical partitioning of data right and then when the producer writes",
    "start": "303600",
    "end": "308640"
  },
  {
    "text": "it has to specify which topic to write to okay so hey I wanna write message a",
    "start": "308640",
    "end": "314640"
  },
  {
    "text": "to topic a right that was bad I wanna write message hello to topic a write",
    "start": "314640",
    "end": "321060"
  },
  {
    "text": "consumer hey I want to consume topic be the broker will send the messages to the",
    "start": "321060",
    "end": "326880"
  },
  {
    "text": "consumer right and then and so on essentially so that's essentially these two pieces so topics consumer producer",
    "start": "326880",
    "end": "334590"
  },
  {
    "text": "broker sounds good self simple let's complicate a little bit so we're gonna zoom in here to the actual topic so I",
    "start": "334590",
    "end": "340890"
  },
  {
    "start": "339000",
    "end": "431000"
  },
  {
    "text": "made a little bit of space here so I have a topic called users and my Kafka",
    "start": "340890",
    "end": "347640"
  },
  {
    "text": "broker and then I'm gonna talk about how producing work how the Kafka producer",
    "start": "347640",
    "end": "353070"
  },
  {
    "text": "works right so I'm gonna set an example here where hey I own producer hey broker",
    "start": "353070",
    "end": "359550"
  },
  {
    "text": "because we establish the connection right now we send a request and that request says hey broker publish John the",
    "start": "359550",
    "end": "369000"
  },
  {
    "text": "string John to users topic okay and it did right just go take that string and",
    "start": "369000",
    "end": "377040"
  },
  {
    "text": "then attends it to the topic okay and then very interesting the word opinion we're gonna we're gonna explain",
    "start": "377040",
    "end": "384330"
  },
  {
    "text": "the concept of a pending later and Kafka which is very critical thing here okay",
    "start": "384330",
    "end": "389580"
  },
  {
    "text": "you can always add stuff to Kafka you cannot delete stuff it's always there penned only right so it's just like hey",
    "start": "389580",
    "end": "395729"
  },
  {
    "text": "shove that sounds simple all right let's publish something else publish",
    "start": "395729",
    "end": "400800"
  },
  {
    "text": "to users it goes into the end of that and each message is referred to by",
    "start": "400800",
    "end": "407479"
  },
  {
    "text": "essentially the topic and the position right and the position is very fast",
    "start": "407479",
    "end": "412830"
  },
  {
    "text": "access because hey go to the position number zero that's John go to the position number one that's Edie right so",
    "start": "412830",
    "end": "419580"
  },
  {
    "text": "that's very simple to go and index very quickly to that right because it's everything is sequential essential so",
    "start": "419580",
    "end": "426539"
  },
  {
    "text": "here's a topic with a bunch of users bunch of data and let's say I'm gonna",
    "start": "426539",
    "end": "431879"
  },
  {
    "start": "431000",
    "end": "514000"
  },
  {
    "text": "produce another message just say hey Leo publish Leo to users topic and append it",
    "start": "431879",
    "end": "437610"
  },
  {
    "text": "to the end and you can start seeing that the topic is getting larger and larger and larger and larger right and we're",
    "start": "437610",
    "end": "444960"
  },
  {
    "text": "gonna talk about what we're gonna do with this right because we as software giant database engineer have solutions",
    "start": "444960",
    "end": "452039"
  },
  {
    "text": "to these kind of problems things that grow really Raj right so what happened",
    "start": "452039",
    "end": "458310"
  },
  {
    "text": "if I consume so consumer says hey I want to consume it topic users right let's go",
    "start": "458310",
    "end": "465599"
  },
  {
    "text": "ahead what's going on there so if this is the first brand new consumer based on configuration it's gonna read from",
    "start": "465599",
    "end": "472020"
  },
  {
    "text": "position number Z no so it's gonna get John so the moment to get John it's gonna get the next one which is e D and",
    "start": "472020",
    "end": "478500"
  },
  {
    "text": "so on so the moments start polling information consumer is actually pulling",
    "start": "478500",
    "end": "484590"
  },
  {
    "text": "from information this is not a push model okay well we're gonna talk about that in detail later on the video right",
    "start": "484590",
    "end": "490800"
  },
  {
    "text": "so the consumer just start asking for more asking for more asking for more",
    "start": "490800",
    "end": "496919"
  },
  {
    "text": "right unlike rabbit Emma Q where they actually the broker pushes information",
    "start": "496919",
    "end": "502199"
  },
  {
    "text": "to the consumer yeah so that's a very important thing to distinguish yeah okay",
    "start": "502199",
    "end": "507330"
  },
  {
    "text": "sounds simple still simple saying that doesn't sound complex how about we dive",
    "start": "507330",
    "end": "512880"
  },
  {
    "text": "deeper alright now we know right topics grow large what do we do guys with",
    "start": "512880",
    "end": "519089"
  },
  {
    "start": "514000",
    "end": "770000"
  },
  {
    "text": "databases when they grow large when their table goes to millions millions millions of rows we do sharding right",
    "start": "519089",
    "end": "525959"
  },
  {
    "text": "because it says okay consumers from number one 200,000 goes to this table to",
    "start": "525959",
    "end": "533970"
  },
  {
    "text": "this from hundred and one thousand until two hundred thousand goes to this table on",
    "start": "533970",
    "end": "540139"
  },
  {
    "text": "this database and you guys consumers or database clients please know if you know",
    "start": "540139",
    "end": "546949"
  },
  {
    "text": "we're querying customer number hundred you not to go to database a if you're",
    "start": "546949",
    "end": "552019"
  },
  {
    "text": "quitting customer number 205 two hundred thousand and five then go to this",
    "start": "552019",
    "end": "558350"
  },
  {
    "text": "database so that's essential that console sharding and Kafka just borrowed that concept right because we want to",
    "start": "558350",
    "end": "564410"
  },
  {
    "text": "distribute the data because queries get slower and slower if the data is large",
    "start": "564410",
    "end": "570019"
  },
  {
    "text": "right so what do you do is like hey let's shrink it up okay and where's what we're gonna do we're gonna do the same",
    "start": "570019",
    "end": "575690"
  },
  {
    "text": "thing and tough call them partitions the same concept is shortening essentially and what we're gonna do is that hey this",
    "start": "575690",
    "end": "582800"
  },
  {
    "text": "users is so big right so let's let's say I'm gonna create two partitions",
    "start": "582800",
    "end": "588259"
  },
  {
    "text": "partition one user word first names that start from A to M goes here and users",
    "start": "588259",
    "end": "594880"
  },
  {
    "text": "from n to Z go to partition two well that sounds simple that doesn't sound",
    "start": "594880",
    "end": "600019"
  },
  {
    "text": "hard and now we're working with a little bit of manageable data and then these can grow as as independently right this",
    "start": "600019",
    "end": "609769"
  },
  {
    "text": "can grow and dependently and that's cool alright so this is simple but you know",
    "start": "609769",
    "end": "616579"
  },
  {
    "text": "guys it's constant of for sure and we didn't talk about charting in this channel I gotta make another video about",
    "start": "616579",
    "end": "622519"
  },
  {
    "text": "it but the moment you introduce shorting or partitioning then those guys suffer right because now they have to know what",
    "start": "622519",
    "end": "629389"
  },
  {
    "text": "the heck is a partition right they need to understand what partition not only what topic to write or read from they",
    "start": "629389",
    "end": "637490"
  },
  {
    "text": "need to understand what partition to read and write from and that kind of sucks because that introduced complexity",
    "start": "637490",
    "end": "644120"
  },
  {
    "text": "to consumer and producer we're going to talk about that later alright so what happened now if a part a producer wanna",
    "start": "644120",
    "end": "651230"
  },
  {
    "text": "publish nada a user nada to users to topic users and",
    "start": "651230",
    "end": "657649"
  },
  {
    "text": "on partition two I just we just talked about now we know that hey now there is in an innocent between N and Z so yeah",
    "start": "657649",
    "end": "665120"
  },
  {
    "text": "so here they producer have to figure out which partition to publish the which kind of",
    "start": "665120",
    "end": "671390"
  },
  {
    "text": "sucks but it all because of a scalability we're gonna suffer right life is suffering as a Jordan Peterson",
    "start": "671390",
    "end": "679220"
  },
  {
    "text": "say right it's all suffering you don't you cannot escape it well you accept it that's what life is",
    "start": "679220",
    "end": "684950"
  },
  {
    "text": "like it's suffering life is suffering yes so yeah so another will go to",
    "start": "684950",
    "end": "691880"
  },
  {
    "text": "partition to let's go ahead and just write it to partition to that's so simple and here's what happened the",
    "start": "691880",
    "end": "697370"
  },
  {
    "text": "moment you write it this now you get a new position right and that position is",
    "start": "697370",
    "end": "703550"
  },
  {
    "text": "returned to the producers hey by the way the current put the position on partition 2 is 4 ok 0 1 2 3 4 and then",
    "start": "703550",
    "end": "712400"
  },
  {
    "text": "consumers I say I want to consume partition to on position 0 right and I",
    "start": "712400",
    "end": "718520"
  },
  {
    "text": "will start reading that and if you want to and it would update its position until it reaches the latest data",
    "start": "718520",
    "end": "726020"
  },
  {
    "text": "essentially and says ok there's nothing more to read because you reach the end of the partition and you can see how",
    "start": "726020",
    "end": "731510"
  },
  {
    "text": "fast this thing is because you only work with indexes you work with positions and",
    "start": "731510",
    "end": "740140"
  },
  {
    "text": "partitions and you don't really say so look star from topics where first-name",
    "start": "740140",
    "end": "748340"
  },
  {
    "text": "equals era alright you don't do that right this is not relational Postgres database right",
    "start": "748340",
    "end": "754370"
  },
  {
    "text": "you don't use Kafka to do ad hoc queries you you use it for fast writing and",
    "start": "754370",
    "end": "761140"
  },
  {
    "text": "distributed of events that happens and we're going to talk about the benefits essentially alright so nice Before we",
    "start": "761140",
    "end": "768650"
  },
  {
    "text": "jump into the next abstraction and Kafka we need to talk about this difference",
    "start": "768650",
    "end": "775070"
  },
  {
    "start": "770000",
    "end": "1007000"
  },
  {
    "text": "between Q and a pops up right so a Q is essentially when a message is published",
    "start": "775070",
    "end": "782600"
  },
  {
    "text": "all right it is published once and it is only consumed by one consumer right and",
    "start": "782600",
    "end": "790160"
  },
  {
    "text": "that's that's makes sense right it's a queue you publish it to the end of the queue some consumer pulls it or pops it",
    "start": "790160",
    "end": "797570"
  },
  {
    "text": "from the queue and consumes an and go gone it's gone from the queue right nobody else can consume it so that has",
    "start": "797570",
    "end": "805940"
  },
  {
    "text": "it said advantages and you want to do that rabbitmq is great for this and this is really good for like job execution",
    "start": "805940",
    "end": "813440"
  },
  {
    "text": "hey please execute this task you wanna you want one of your workers to pull the",
    "start": "813440",
    "end": "819740"
  },
  {
    "text": "task and execute it you don't want someone else executing the same task twice that's bad right and some some",
    "start": "819740",
    "end": "826160"
  },
  {
    "text": "things some application some use cases you want to execute only once and queue",
    "start": "826160",
    "end": "832280"
  },
  {
    "text": "is great for that and the other concept is a pops up says hey I want to publish",
    "start": "832280",
    "end": "837800"
  },
  {
    "text": "a message once but I want it to be consumed by a lot of users okay a lot of",
    "start": "837800",
    "end": "844940"
  },
  {
    "text": "consumers the same message I want to broadcast it I want to multicast it to multiple",
    "start": "844940",
    "end": "850820"
  },
  {
    "text": "consumers I don't want to remove it from my data right from my mic you it can't",
    "start": "850820",
    "end": "857570"
  },
  {
    "text": "say Q it's something else but I don't want to remove it from my source right I want it just to broadcast it and there's",
    "start": "857570",
    "end": "864560"
  },
  {
    "text": "a lot of use case for this as well right hey I just another example we talked about that where let's say YouTube right",
    "start": "864560",
    "end": "871520"
  },
  {
    "text": "I want to publish a video right you upload a video the moment you upload the raw video well",
    "start": "871520",
    "end": "878570"
  },
  {
    "text": "you want to do you want to multiple services to consume this raw video like one service could be that cans compress",
    "start": "878570",
    "end": "885980"
  },
  {
    "text": "service right take that raw video and do some stuff on it right compress it the",
    "start": "885980",
    "end": "891410"
  },
  {
    "text": "other video take the rock the raw video and make it into multiple Kodak right",
    "start": "891410",
    "end": "897740"
  },
  {
    "text": "let's also like 480p and 1080p and 4k just encoding different formats for for",
    "start": "897740",
    "end": "903770"
  },
  {
    "text": "mobile and streaming right another one is like hey at the copyright service let's pull that up all the raw video and",
    "start": "903770",
    "end": "910970"
  },
  {
    "text": "check if someone is like a infringing on some Content ID right if saying someone",
    "start": "910970",
    "end": "916550"
  },
  {
    "text": "is using other people material or there is a music that you can't really use or",
    "start": "916550",
    "end": "922010"
  },
  {
    "text": "something is a fan offensive right so that's an example for pub/sub",
    "start": "922010",
    "end": "927160"
  },
  {
    "text": "architecture where a pops up is useful okay so observe cue each has used case",
    "start": "927160",
    "end": "933769"
  },
  {
    "text": "Kafka came in here and the picture and says we want a boo do both and that's",
    "start": "933769",
    "end": "939889"
  },
  {
    "text": "bald man that's bald caution right and it is what what RabbitMQ did and I",
    "start": "939889",
    "end": "946369"
  },
  {
    "text": "believe they messed up with this Robin and Q started as a queue it's the name",
    "start": "946369",
    "end": "952970"
  },
  {
    "text": "message kill rabbit message kill right they started that but then they said oh oh but people wanted to do pops up and",
    "start": "952970",
    "end": "959989"
  },
  {
    "text": "obviously you cannot do Robert and Q pops up but they invented the concept of exchanges I believe ran a might be wrong",
    "start": "959989",
    "end": "968089"
  },
  {
    "text": "to kind of hack their way to introduce this feature right which made it really",
    "start": "968089",
    "end": "975369"
  },
  {
    "text": "complex and and make the system really weird and awkward okay Kafka answered this question from the",
    "start": "975369",
    "end": "982069"
  },
  {
    "text": "beginning from the get-go from the design they designed they built a system with those two in mind okay and the",
    "start": "982069",
    "end": "990259"
  },
  {
    "text": "answer to this was consumer group right and this is one of the most confusing to",
    "start": "990259",
    "end": "996589"
  },
  {
    "text": "be honest abstraction in Kafka it took a while for me to I really understand and",
    "start": "996589",
    "end": "1001959"
  },
  {
    "text": "nail this down so I'm gonna explain consumer groups right now all right so consumer groups who are invented to",
    "start": "1001959",
    "end": "1009999"
  },
  {
    "start": "1007000",
    "end": "1386000"
  },
  {
    "text": "do essentially parallel processing and partitions right cuz now consumers can",
    "start": "1009999",
    "end": "1015999"
  },
  {
    "text": "read from my partition you're aware of the partition right and that's bad so",
    "start": "1015999",
    "end": "1021369"
  },
  {
    "text": "the consumer group can actually fix that problem remove the awareness from the consumer",
    "start": "1021369",
    "end": "1027459"
  },
  {
    "text": "of a partition another benefit is it can kind of run and consume parallel data",
    "start": "1027459",
    "end": "1035548"
  },
  {
    "text": "like consume parallel information from multiple partitions and we're gonna talk",
    "start": "1035549",
    "end": "1041649"
  },
  {
    "text": "about that so let's assume here you have here a consumer group as go to group one I'm gonna add a new brand new consumer",
    "start": "1041649",
    "end": "1048520"
  },
  {
    "text": "just joining the group right if you create a new consumer and then do you say join group and the moment you join a",
    "start": "1048520",
    "end": "1055000"
  },
  {
    "text": "group and if you're the only consumer tough luck man because you are now",
    "start": "1055000",
    "end": "1060639"
  },
  {
    "text": "responsible of all partitions in this topic because now you subscribe to topic",
    "start": "1060639",
    "end": "1066580"
  },
  {
    "text": "users all right and that topic has two partitions and if had seven you are",
    "start": "1066580",
    "end": "1072299"
  },
  {
    "text": "responsible for the seven partitions and what does that mean it means that any",
    "start": "1072299",
    "end": "1077370"
  },
  {
    "text": "time you start consuming right you will get essentially a message from partition",
    "start": "1077370",
    "end": "1085510"
  },
  {
    "text": "one write a message from partition two or if there is existing partition three",
    "start": "1085510",
    "end": "1090730"
  },
  {
    "text": "so you start receiving messages from both partitions and that's not bad okay",
    "start": "1090730",
    "end": "1095980"
  },
  {
    "text": "that's okay because if you're a good consumer and can handle the load you can just essentially receive messages and",
    "start": "1095980",
    "end": "1101980"
  },
  {
    "text": "you don't really care which partition this is coming from right so what this is this is where really interesting the",
    "start": "1101980",
    "end": "1109990"
  },
  {
    "text": "moment you add another consumer to the group the group rebalances is you okay",
    "start": "1109990",
    "end": "1115120"
  },
  {
    "text": "consumer one was really overloaded so let's remove partition one and give you partition two consumer to alright and",
    "start": "1115120",
    "end": "1122230"
  },
  {
    "text": "here's the thing each partition have to be consumed by one and only one consumer",
    "start": "1122230",
    "end": "1128590"
  },
  {
    "text": "right right you can have one consumer consumes - that's good confusing you can",
    "start": "1128590",
    "end": "1136690"
  },
  {
    "text": "have one consumer consuming two partitions or three person or four",
    "start": "1136690",
    "end": "1142690"
  },
  {
    "text": "partitions but one partition better be consumed with one consumer that's the",
    "start": "1142690",
    "end": "1147850"
  },
  {
    "text": "rule and consumer group makes sure of that okay so now we have the rule that's",
    "start": "1147850",
    "end": "1153820"
  },
  {
    "text": "good and there is a thing consumer free cannot join the group because they say hey you you don't have anything to do",
    "start": "1153820",
    "end": "1160149"
  },
  {
    "text": "man right so and the moment you do that and something interesting happen because now those two can work because they are",
    "start": "1160149",
    "end": "1168070"
  },
  {
    "text": "different processes I would assume right it doesn't have to be but you can put them in different processes and the",
    "start": "1168070",
    "end": "1173500"
  },
  {
    "text": "moment you do that you'll start receiving right you can start consuming",
    "start": "1173500",
    "end": "1179139"
  },
  {
    "text": "these two partitions in parallel and that's really cool concept right and the",
    "start": "1179139",
    "end": "1186850"
  },
  {
    "text": "moment you do that right it starts consuming these partitions you will act",
    "start": "1186850",
    "end": "1193299"
  },
  {
    "text": "essentially like a queue right the system becomes a queue and you say who",
    "start": "1193299",
    "end": "1198399"
  },
  {
    "text": "saying how right and here's the thing if partition 1 and consumer all is a responsible partition",
    "start": "1198399",
    "end": "1204330"
  },
  {
    "text": "1 it will only receive data from partition 1 and the moment it consumes",
    "start": "1204330",
    "end": "1210240"
  },
  {
    "text": "one piece that said the position is updated in the groups is or partition 1",
    "start": "1210240",
    "end": "1216000"
  },
  {
    "text": "zero position zero has been read move on okay the moment you read one it goes to",
    "start": "1216000",
    "end": "1222870"
  },
  {
    "text": "two and three and four and five you can get just keeps going right that's by",
    "start": "1222870",
    "end": "1229110"
  },
  {
    "text": "default obviously you can fix the position to going back and read but by",
    "start": "1229110",
    "end": "1236820"
  },
  {
    "text": "default if you just left the group as it is it will act like a queue right the",
    "start": "1236820",
    "end": "1242100"
  },
  {
    "text": "moment you read John that's said it's almost like popped off the queue and you start reading the next information in",
    "start": "1242100",
    "end": "1248160"
  },
  {
    "text": "the next information right and consumer two will never be able to read John because it's responsible for partition",
    "start": "1248160",
    "end": "1255270"
  },
  {
    "text": "two right so here's we just achieve the ability to do a queue which is amazing",
    "start": "1255270",
    "end": "1262020"
  },
  {
    "text": "right so consumer group if you want to act like a queue put all your consumers",
    "start": "1262020",
    "end": "1270060"
  },
  {
    "text": "in one group and immediately you will become a queue the system becomes a",
    "start": "1270060",
    "end": "1276090"
  },
  {
    "text": "queue right because what will happen is you will each consumer in the group will",
    "start": "1276090",
    "end": "1282150"
  },
  {
    "text": "be responsible for one partition and that partition will never be seen by any other consumers in that group so the",
    "start": "1282150",
    "end": "1289170"
  },
  {
    "text": "moment you that consumer read one message it's gone right you can read the",
    "start": "1289170",
    "end": "1294330"
  },
  {
    "text": "second message it's gone the third message it's gone right when I say it's gone it has been committed as read it's",
    "start": "1294330",
    "end": "1301800"
  },
  {
    "text": "still in the system right but it has been committed as right you still can do",
    "start": "1301800",
    "end": "1308070"
  },
  {
    "text": "stuff and go back and read it but by out on the Box it will just normally work",
    "start": "1308070",
    "end": "1313590"
  },
  {
    "text": "which is powerful stuff guys right so that's how you do it how do you occur if",
    "start": "1313590",
    "end": "1319170"
  },
  {
    "text": "you want to do a RabbitMQ set up put all your consumers in one group and tada",
    "start": "1319170",
    "end": "1324180"
  },
  {
    "text": "right if you want to act like a pop sub system where the message is broadcasted",
    "start": "1324180",
    "end": "1331320"
  },
  {
    "text": "to every consumer each consumer goes into its unique group",
    "start": "1331320",
    "end": "1338300"
  },
  {
    "text": "and that's okay because a partition can be consumed by multiple consumers in",
    "start": "1338300",
    "end": "1347360"
  },
  {
    "text": "different group right because the partition is a group dependent right and that's okay right so that's how consumer",
    "start": "1347360",
    "end": "1355010"
  },
  {
    "text": "a group essentially act right and what do we get as a result we get parallel",
    "start": "1355010",
    "end": "1360890"
  },
  {
    "text": "processing for free which is amazing right because if you have like multiple consumers in running group they can start reading multiple partition in",
    "start": "1360890",
    "end": "1367520"
  },
  {
    "text": "parallel and do so much kulish stuff all",
    "start": "1367520",
    "end": "1372770"
  },
  {
    "text": "right almost at the end distributor system so yeah that's another piece of",
    "start": "1372770",
    "end": "1378320"
  },
  {
    "text": "the Kafka puzzle right it's a distributive system but how right",
    "start": "1378320",
    "end": "1383330"
  },
  {
    "text": "well distributive system means take a broker and copy it right and make it a",
    "start": "1383330",
    "end": "1389600"
  },
  {
    "start": "1386000",
    "end": "1785000"
  },
  {
    "text": "leader follower system right where we have one leader where it takes all the",
    "start": "1389600",
    "end": "1394700"
  },
  {
    "text": "requests and one follower where it just reads from the leader right all right",
    "start": "1394700",
    "end": "1401750"
  },
  {
    "text": "kind a master follower kind of a configuration right so let's do that well that's gonna spin up another Kafka",
    "start": "1401750",
    "end": "1408710"
  },
  {
    "text": "broker who's gonna listen to another port that sounds easy right and there is",
    "start": "1408710",
    "end": "1413990"
  },
  {
    "text": "what we're gonna do we're gonna copy copy stuff and when you copy we're gonna",
    "start": "1413990",
    "end": "1419270"
  },
  {
    "text": "mark things as leader and follower right so if you copy everything let's copy this users topic this is the major",
    "start": "1419270",
    "end": "1425650"
  },
  {
    "text": "broker right and the moment I do that I start copying partition one copying",
    "start": "1425650",
    "end": "1432580"
  },
  {
    "text": "partition two I'm done right what here's the thing how do I know which broker",
    "start": "1432580",
    "end": "1443380"
  },
  {
    "text": "responsible is the leader and which broker is the follower you need a system",
    "start": "1443380",
    "end": "1451310"
  },
  {
    "text": "that tells you that all right we're gonna talk about what the system that is right",
    "start": "1451310",
    "end": "1456680"
  },
  {
    "text": "and here's another constant Kafka says like no in Kafka we don't want a leader",
    "start": "1456680",
    "end": "1462260"
  },
  {
    "text": "broker and a follower broker no I want that a finer level I wanted a partition lever",
    "start": "1462260",
    "end": "1469490"
  },
  {
    "text": "I want you to be the leader I want this broker to be the leader of",
    "start": "1469490",
    "end": "1475940"
  },
  {
    "text": "partition - but this broker the leader of partition one and that's cool because",
    "start": "1475940",
    "end": "1481490"
  },
  {
    "text": "now if the the whole broker went down you can you don't lose your entire data",
    "start": "1481490",
    "end": "1489020"
  },
  {
    "text": "right because you don't have one master one leader right the leader is responsible for multiple partitions",
    "start": "1489020",
    "end": "1495530"
  },
  {
    "text": "essentially and that's good for partitioning and and having that ability to do to a distributed system so we're",
    "start": "1495530",
    "end": "1502490"
  },
  {
    "text": "having distributed at the party level but where is this data stored man where",
    "start": "1502490",
    "end": "1507920"
  },
  {
    "text": "is this concept sorted Oh broker 909 3",
    "start": "1507920",
    "end": "1513710"
  },
  {
    "text": "is the leader of partition 2 on topic users and 90 or 909 2 is the leader of",
    "start": "1513710",
    "end": "1521660"
  },
  {
    "text": "partition 1 on users topic and where is that information stored meet zookeeper",
    "start": "1521660",
    "end": "1528820"
  },
  {
    "text": "the biggest disaster in Kafka again this is a controversial topic a lot of people",
    "start": "1528820",
    "end": "1534980"
  },
  {
    "text": "like zookeeper right I personally did not use it by a lot of people do not",
    "start": "1534980",
    "end": "1541850"
  },
  {
    "text": "like this technology because it caused a lot of pain than good alright but",
    "start": "1541850",
    "end": "1548320"
  },
  {
    "text": "essentially what a zookeeper does is it does it just hurts the cat and they as",
    "start": "1548320",
    "end": "1555200"
  },
  {
    "text": "they say right just just says hey you are the leader you are the leader follow the leader leader leader follow the",
    "start": "1555200",
    "end": "1562160"
  },
  {
    "text": "leader that's what it does right ok and let's go an example dude let's go through an",
    "start": "1562160",
    "end": "1569150"
  },
  {
    "text": "example produce and how do we produce in this configuration where we have",
    "start": "1569150",
    "end": "1575660"
  },
  {
    "text": "zookeeper right and here's the thing is this ok when you connect to create this to bi-directional connection from a",
    "start": "1575660",
    "end": "1582440"
  },
  {
    "text": "producer to the broker you actually what do you do is as you asked before you",
    "start": "1582440",
    "end": "1587900"
  },
  {
    "text": "submit something you ask man who is really the partition leader of the thing",
    "start": "1587900",
    "end": "1594530"
  },
  {
    "text": "I'm about to write you and then you write to it ok so let's say ah we're about to write",
    "start": "1594530",
    "end": "1599929"
  },
  {
    "text": "as a user Zayn to users topic and on partition to because I had to figure out",
    "start": "1599929",
    "end": "1606860"
  },
  {
    "text": "what partitioned by doing this simple check and my end a little bit complex",
    "start": "1606860",
    "end": "1612919"
  },
  {
    "text": "but sure why not right and then or just like shove that information says hey I want to write to",
    "start": "1612919",
    "end": "1618679"
  },
  {
    "text": "that I have no idea who's the leader and here's what I am not sure about and someone can correct me in the comments",
    "start": "1618679",
    "end": "1625100"
  },
  {
    "text": "section if you guys know right I'm not sure if the producer is aware of who is",
    "start": "1625100",
    "end": "1632649"
  },
  {
    "text": "the partition leader right because you got a right to all the leader you cannot",
    "start": "1632649",
    "end": "1639200"
  },
  {
    "text": "try to a follower right you can only read from a fellow er right if you were writing you better write to a leader",
    "start": "1639200",
    "end": "1645590"
  },
  {
    "text": "right but how do you know right so what I'm not sure about is the producer does",
    "start": "1645590",
    "end": "1654049"
  },
  {
    "text": "the producer know that oh for partition - oh let me query partition - is",
    "start": "1654049",
    "end": "1660350"
  },
  {
    "text": "actually nine oh nine and three let me establish a connection to nine on or three and let me write to nine or three",
    "start": "1660350",
    "end": "1667009"
  },
  {
    "text": "because that's the partition leader is that the case or is the other case where",
    "start": "1667009",
    "end": "1672289"
  },
  {
    "text": "hey any broker and I think it's the latter any broker that I'm connected to 909 -",
    "start": "1672289",
    "end": "1679789"
  },
  {
    "text": "please write this message to producers partition - and those guys gossip",
    "start": "1679789",
    "end": "1685039"
  },
  {
    "text": "between each other that's another word zookeeper actually they use a gossip system to determine who's the leader and",
    "start": "1685039",
    "end": "1691820"
  },
  {
    "text": "they talk of each other oh so yeah so that the brokers gossip between each other and this is ooh who's the",
    "start": "1691820",
    "end": "1697789"
  },
  {
    "text": "partition - later okay okay yeah it's me 909 three let's go right so a wall they",
    "start": "1697789",
    "end": "1704419"
  },
  {
    "text": "will communicate between each other and they will write same to the correct partition to the correct broker to the",
    "start": "1704419",
    "end": "1711860"
  },
  {
    "text": "correct topic right once it does that what happens is wait a second we just",
    "start": "1711860",
    "end": "1716899"
  },
  {
    "text": "raw raw - the partition - on 909 three the follower need to read that",
    "start": "1716899",
    "end": "1722779"
  },
  {
    "text": "information and then just copies it right that's what we do right seems good",
    "start": "1722779",
    "end": "1728929"
  },
  {
    "text": "how about consuming right I want to consumes topic users on partition one again with",
    "start": "1728929",
    "end": "1737960"
  },
  {
    "text": "a consumer group you can avoid saying partition one if you want to right because the what happens essentially is",
    "start": "1737960",
    "end": "1745810"
  },
  {
    "text": "the group will assign you a partition right and then you'll be responsible for",
    "start": "1745810",
    "end": "1751580"
  },
  {
    "text": "that partition and you can read just read you don't have to specify a partition right and we're going to show",
    "start": "1751580",
    "end": "1757670"
  },
  {
    "text": "that by an example sweet right so hey I want to partition one well you can",
    "start": "1757670",
    "end": "1764180"
  },
  {
    "text": "either write write read from a leader and depends on whatever is available in this in pencil the completely depends on",
    "start": "1764180",
    "end": "1771170"
  },
  {
    "text": "zookeeper and how whatever this algorithm is right and then you can hit another follower node and read that for",
    "start": "1771170",
    "end": "1779210"
  },
  {
    "text": "same information because they better be the same right essentially sweet let's",
    "start": "1779210",
    "end": "1784580"
  },
  {
    "text": "jump to an example guys here's what we're gonna do all right so the first thing we're gonna do is we're gonna spin",
    "start": "1784580",
    "end": "1789800"
  },
  {
    "start": "1785000",
    "end": "3768000"
  },
  {
    "text": "up a zookeeper instance because even if we're gonna work with one broker unfortunately we need zookeeper I have",
    "start": "1789800",
    "end": "1796880"
  },
  {
    "text": "no idea why it's just baked into the technologies it's based on the baked into the tech and the whole thing is",
    "start": "1796880",
    "end": "1804830"
  },
  {
    "text": "just they need it right to start just to start right so you need zookeeper to just hurt the cast as a herd the cats as",
    "start": "1804830",
    "end": "1812720"
  },
  {
    "text": "we said and then we're gonna spin up a Kafka cluster single Kafka slugfest are",
    "start": "1812720",
    "end": "1817910"
  },
  {
    "text": "both of them on docker I don't want to pull it with your machine with installation and all that stuff alright",
    "start": "1817910",
    "end": "1824360"
  },
  {
    "text": "and guys I didn't use the confluent QuickStart whatever it's called docker",
    "start": "1824360",
    "end": "1830660"
  },
  {
    "text": "composed to me it was very complicated it needed to just eight gigabyte to",
    "start": "1830660",
    "end": "1837110"
  },
  {
    "text": "install that stuff and there are they have like Kafka connect and streams and",
    "start": "1837110",
    "end": "1843710"
  },
  {
    "text": "the command-line I don't need any of that I'm just showing you guys how to do Kafka and zookeeper so I'm just spinning",
    "start": "1843710",
    "end": "1850610"
  },
  {
    "text": "up just those two docker containers so that's that's how I'm gonna do it in this video all right and we're gonna",
    "start": "1850610",
    "end": "1857570"
  },
  {
    "text": "learn how to create a topic we're gonna create the users topic I'm gonna use this beautiful nodejs",
    "start": "1857570",
    "end": "1863330"
  },
  {
    "text": "package for library for Kafka is right I checked out another library",
    "start": "1863330",
    "end": "1869429"
  },
  {
    "text": "called a note cough cough cough connote it wasn't great really was so buggy and",
    "start": "1869429",
    "end": "1874830"
  },
  {
    "text": "didn't have promises so just out of the box is just I had to just work with",
    "start": "1874830",
    "end": "1880619"
  },
  {
    "text": "something else and thank God I found this Kafka JSO again I lose that we're gonna create a producer we're gonna",
    "start": "1880619",
    "end": "1886259"
  },
  {
    "text": "write a message to the user stuff to the users topic and then we get a write a",
    "start": "1886259",
    "end": "1891779"
  },
  {
    "text": "consumer to consumes from the user stopping let's just jump into it alright guys so let's start with by spinning up",
    "start": "1891779",
    "end": "1900899"
  },
  {
    "text": "a zookeeper docker container right so the first thing we're gonna do is let's",
    "start": "1900899",
    "end": "1906240"
  },
  {
    "text": "make sure you have darker go and install it for Mac or Windows that will work the Montt you can do docker hello docker run",
    "start": "1906240",
    "end": "1913980"
  },
  {
    "text": "hello - word and you can just see that there is a result here hello from docker",
    "start": "1913980",
    "end": "1920129"
  },
  {
    "text": "you are good to go sir you can start this tutorial right now let's spin up a zookeeper instance and to do that we do",
    "start": "1920129",
    "end": "1927570"
  },
  {
    "text": "docker run ok and I want you to do docker run the first thing we need to do",
    "start": "1927570",
    "end": "1933269"
  },
  {
    "text": "is give the container a name that's always a good idea so how do you give it a container name - - name we're gonna",
    "start": "1933269",
    "end": "1940080"
  },
  {
    "text": "call it Kazuki / ok and then since you keep her running on a port you're gonna expose that port outside -",
    "start": "1940080",
    "end": "1947970"
  },
  {
    "text": "to my machine so we can communicate with it right there are better ways but this",
    "start": "1947970",
    "end": "1953759"
  },
  {
    "text": "is just a tutorial right so we're gonna do it the the hacky way as they say alright so what are we gonna do is just",
    "start": "1953759",
    "end": "1960749"
  },
  {
    "text": "expose the port which is the port of zookeeper and the port of zookeeper is",
    "start": "1960749",
    "end": "1966659"
  },
  {
    "text": "called - won 8-1 ok and we want to expose port to one",
    "start": "1966659",
    "end": "1976320"
  },
  {
    "text": "eight one that is in the container to the same port on my machine cuz it I",
    "start": "1976320",
    "end": "1982379"
  },
  {
    "text": "don't have zookeeper running so this will work right so that's the second step right and finally what we're gonna",
    "start": "1982379",
    "end": "1989399"
  },
  {
    "text": "do is just pull from the image that is called zookeeper and then run it's very",
    "start": "1989399",
    "end": "1995460"
  },
  {
    "text": "simple we'll start downloading if the image if it doesn't have it and then we'll start running and just like that",
    "start": "1995460",
    "end": "2000970"
  },
  {
    "text": "we have zookeeper running that terminal is now occupied I know guys you can do",
    "start": "2000970",
    "end": "2006370"
  },
  {
    "text": "dash D and make it detach by always if you if you know me I like to have the terminal and I see what's going on right",
    "start": "2006370",
    "end": "2013330"
  },
  {
    "text": "so that terminal is now occupied with zookeeper let's spin up another terminal",
    "start": "2013330",
    "end": "2018550"
  },
  {
    "text": "so we're gonna do is show new tab with profile and let's do now this is what",
    "start": "2018550",
    "end": "2025030"
  },
  {
    "text": "keyboard we can tell this is a keeper which is nice right now I'm gonna run Kafka and that is now you're gonna",
    "start": "2025030",
    "end": "2031780"
  },
  {
    "text": "you're gonna have to copy this right I'm gonna go through the command one by one but I'm gonna leave the actual command",
    "start": "2031780",
    "end": "2038890"
  },
  {
    "text": "in the description below so you just copy and paste it right but here's what you do docker run same thing and",
    "start": "2038890",
    "end": "2045490"
  },
  {
    "text": "obviously we need name the container let's call it Kafka right that's not",
    "start": "2045490",
    "end": "2050620"
  },
  {
    "text": "hard so far so far simple all right another thing we need to do is expose a port because again Kafka is running on a",
    "start": "2050620",
    "end": "2057220"
  },
  {
    "text": "port and what's the port for Kafka it is remember guys was 909 - and obviously",
    "start": "2057220",
    "end": "2066340"
  },
  {
    "text": "909 - okay so I'm gonna expose the 909 to that is running in the container to",
    "start": "2066340",
    "end": "2072879"
  },
  {
    "text": "my machine 909 - so if I say Hussein Mac which is my machine name that's how",
    "start": "2072880",
    "end": "2078760"
  },
  {
    "text": "we're gonna communicate with a broker right and that will be mapped to the internal one I can call this whatever I",
    "start": "2078760",
    "end": "2084100"
  },
  {
    "text": "want but I'm gonna call it the same import because I don't have anything running on 909 - what else now you're",
    "start": "2084100",
    "end": "2091960"
  },
  {
    "text": "gonna start writing the list of environment variables for the container",
    "start": "2091960",
    "end": "2098320"
  },
  {
    "text": "to start spinning because Kafka what does Kafka broker needs guys it needs the zookeeper instance and what is the",
    "start": "2098320",
    "end": "2105370"
  },
  {
    "text": "zookeeper instance it's very simple we just do - II which is environment and",
    "start": "2105370",
    "end": "2111580"
  },
  {
    "text": "here's how you specify that zookeeper instance it's called Kafka zoo keeper",
    "start": "2111580",
    "end": "2119460"
  },
  {
    "text": "underscore connect and you say equal and just by doing that you will specify the",
    "start": "2119460",
    "end": "2127720"
  },
  {
    "text": "zookeeper instance and do you guys know right we we just spin up",
    "start": "2127720",
    "end": "2132790"
  },
  {
    "text": "zookeeper on port two one eight one so I'm gonna do it's essentially Hussein",
    "start": "2132790",
    "end": "2138370"
  },
  {
    "text": "Mac which is my machine : two one eight one so that's the first",
    "start": "2138370",
    "end": "2144040"
  },
  {
    "text": "environment variable what is the second environment variable is when we do this calf qey broker you",
    "start": "2144040",
    "end": "2153040"
  },
  {
    "text": "need to expose the address of the broker to your client like producer and",
    "start": "2153040",
    "end": "2159610"
  },
  {
    "text": "consumer how does how do how do the brokers do that so you have to tell them and the reason is you have to tell the",
    "start": "2159610",
    "end": "2166690"
  },
  {
    "text": "kafka broker what is your address because you can have multiple listeners in one kafka cluster that's where it",
    "start": "2166690",
    "end": "2174100"
  },
  {
    "text": "gets really complicated to configure this thing man it's a beast right so so",
    "start": "2174100",
    "end": "2180130"
  },
  {
    "text": "we have to specify and in this case the advertised listener is just one and that's the one we're listening to 99 -",
    "start": "2180130",
    "end": "2187180"
  },
  {
    "text": "so what is called as Kafka and it's called advertised underscore less ten",
    "start": "2187180",
    "end": "2196140"
  },
  {
    "text": "right I know how to pronounce listen I'm just being silly guys because that's",
    "start": "2196140",
    "end": "2201520"
  },
  {
    "text": "that's how I learn English by the way I actually over pronounce all the letters because I don't know how they are",
    "start": "2201520",
    "end": "2206770"
  },
  {
    "text": "spilled right that's why I have to say listeners and and you can laugh it's okay won't be mad at you all right so",
    "start": "2206770",
    "end": "2214540"
  },
  {
    "text": "here's the thing so maybe just do let's push some spaces here so so we can just",
    "start": "2214540",
    "end": "2221230"
  },
  {
    "text": "see that all right sweet - a nice list -",
    "start": "2221230",
    "end": "2226540"
  },
  {
    "text": "notice we have all the listeners so what we do here's the thing Kafka supports",
    "start": "2226540",
    "end": "2233310"
  },
  {
    "text": "SSL and plaintext communications right and for some reason if you do plain you",
    "start": "2233310",
    "end": "2238900"
  },
  {
    "text": "have to do like plain text protocol which is the encrypted version of things",
    "start": "2238900",
    "end": "2244390"
  },
  {
    "text": "and the other one is I think it's called either TLS or SSL forgot so because obviously you need just sometimes to do",
    "start": "2244390",
    "end": "2250510"
  },
  {
    "text": "to do secure communication all right versus unsecure and how does the system know that this is secure versus unsecure",
    "start": "2250510",
    "end": "2257860"
  },
  {
    "text": "this is not HTTP HTTPS right so we need a Kafka similar terminology so plain",
    "start": "2257860",
    "end": "2264520"
  },
  {
    "text": "text is the HTTP well and then the other one is the HTTP",
    "start": "2264520",
    "end": "2269680"
  },
  {
    "text": "right but yeah once you do that I say okay where is your broker and it is",
    "start": "2269680",
    "end": "2278860"
  },
  {
    "text": "he'll say Mack that's what guys now I know 9 - because that's what we will we send back to the consumers so they can",
    "start": "2278860",
    "end": "2286510"
  },
  {
    "text": "actually send the communicate with the with the broker ok sweet so far almost",
    "start": "2286510",
    "end": "2292750"
  },
  {
    "text": "done almost done the final one which really got me so many times right is this guy yeah Kafka",
    "start": "2292750",
    "end": "2299160"
  },
  {
    "text": "you know when we when we did sue keeper and all this replicated stuff right we",
    "start": "2299160",
    "end": "2304750"
  },
  {
    "text": "copied the broker into a new instance right we still we spin up a 909 three",
    "start": "2304750",
    "end": "2310420"
  },
  {
    "text": "right Kafka by default or zookeeper by default spin up three instances by default right",
    "start": "2310420",
    "end": "2318130"
  },
  {
    "text": "and if you don't tell if I if I just now run Kafka just like that it will assume",
    "start": "2318130",
    "end": "2324460"
  },
  {
    "text": "you have three instances I will did really confused and says hey I only see one one broker where are the other two",
    "start": "2324460",
    "end": "2331450"
  },
  {
    "text": "I'm sorry there will die so what are you gonna do essentially to get force Kafka",
    "start": "2331450",
    "end": "2337450"
  },
  {
    "text": "hey idiot Kafka I have only one offset",
    "start": "2337450",
    "end": "2342700"
  },
  {
    "text": "topic replication so that's why you do offsets underscore topic underscore",
    "start": "2342700",
    "end": "2350010"
  },
  {
    "text": "replication underscore factor and you can say equal one right obviously guys",
    "start": "2350010",
    "end": "2355870"
  },
  {
    "text": "you can skip through this right you can just copy and paste but I like to explain what's going on but with every",
    "start": "2355870",
    "end": "2362230"
  },
  {
    "text": "single command that we put right and finally guys the image and the image for",
    "start": "2362230",
    "end": "2368320"
  },
  {
    "text": "some reason doesn't live by itself it lives in this confluence which is the the company that actually maintains this",
    "start": "2368320",
    "end": "2374080"
  },
  {
    "text": "project right corn flew went in /cp F",
    "start": "2374080",
    "end": "2382600"
  },
  {
    "text": "gap and we're done let's see if we nailed it alright so",
    "start": "2382600",
    "end": "2387640"
  },
  {
    "text": "yeah run it and we'll start running and we'll check if the zookeeper is running",
    "start": "2387640",
    "end": "2393760"
  },
  {
    "text": "and everything is good and just like that it was just a",
    "start": "2393760",
    "end": "2400120"
  },
  {
    "text": "for the and we have a Kafka Custer spen and we have a zookeeper right we really",
    "start": "2400120",
    "end": "2406540"
  },
  {
    "text": "don't care about zookeepers gonna be in the background but we really really really really care about this guy right",
    "start": "2406540",
    "end": "2413170"
  },
  {
    "text": "and looks like it's up how do I communicate with it we say in Mac 909 -",
    "start": "2413170",
    "end": "2419260"
  },
  {
    "text": "that's broker that's how we deal with them how about we write some code guys let's just jump into it and write some",
    "start": "2419260",
    "end": "2424840"
  },
  {
    "text": "code all right guys I have Visual Studio code here and I have no GS installed",
    "start": "2424840",
    "end": "2430150"
  },
  {
    "text": "that's the only two pieces you need to do this tutorial right you already have",
    "start": "2430150",
    "end": "2436120"
  },
  {
    "text": "docker we already spin up a broker right that rhymed alright so we're gonna we're",
    "start": "2436120",
    "end": "2442870"
  },
  {
    "text": "gonna now write our own first code to communicate with the broker so let's",
    "start": "2442870",
    "end": "2450490"
  },
  {
    "text": "start a project how about that we're gonna go ahead open go to JavaScript",
    "start": "2450490",
    "end": "2458170"
  },
  {
    "text": "JavaScript playground and got a great a folder called Kafka and then just open it it's a brand new project and then for",
    "start": "2458170",
    "end": "2466980"
  },
  {
    "text": "let's spin up let's initialize NPM guys cuz because we're gonna need NPM right",
    "start": "2466980",
    "end": "2473860"
  },
  {
    "text": "so let's do NPM you need - why so that's a project called Kafka that's pretty",
    "start": "2473860",
    "end": "2479200"
  },
  {
    "text": "cool right so that's all right now we have a package.json let's create a new file and",
    "start": "2479200",
    "end": "2484780"
  },
  {
    "text": "let's call it topic the GS okay and that's we're gonna create a topic that's the first thing we're gonna do yeah and",
    "start": "2484780",
    "end": "2490810"
  },
  {
    "text": "to do that to create a topic guys first of all we need to require the library",
    "start": "2490810",
    "end": "2497380"
  },
  {
    "text": "that will allow us to do the fancy stuff to communicate with the broker and Kafka",
    "start": "2497380",
    "end": "2503110"
  },
  {
    "text": "and that rubber is called Kafka yes so I'm gonna create a constant",
    "start": "2503110",
    "end": "2510160"
  },
  {
    "text": "called Kafka equal require Kafka yes and then you can either do this right or you",
    "start": "2510160",
    "end": "2520600"
  },
  {
    "text": "can do the destructuring assignment right sometimes I find this confusing that's why I like to do I show you guys",
    "start": "2520600",
    "end": "2527470"
  },
  {
    "text": "both right but I find this sometimes confusing but this is exactly the same essentially so",
    "start": "2527470",
    "end": "2533650"
  },
  {
    "text": "whatever rocks your boat right so essentially this will give and I made a video about the structuring assignment",
    "start": "2533650",
    "end": "2539259"
  },
  {
    "text": "I'm gonna reference that video well that still gets me right distract me advance I mean sometimes in cases it gets really",
    "start": "2539259",
    "end": "2546400"
  },
  {
    "text": "confusing to understand it and it becomes readable it's pretty to look at but very hard in my opinion I might be",
    "start": "2546400",
    "end": "2553960"
  },
  {
    "text": "just a bad programmer though all right so calf care we have Kafka as an object here what we need to do",
    "start": "2553960",
    "end": "2560799"
  },
  {
    "text": "essentially the next step is is do this we're gonna create a function right",
    "start": "2560799",
    "end": "2568630"
  },
  {
    "text": "and that's func you should call that I don't know run because this will be",
    "start": "2568630",
    "end": "2573910"
  },
  {
    "text": "since we're gonna deal with promises we need to do an async function right and just do the Jazz try catch all that",
    "start": "2573910",
    "end": "2582099"
  },
  {
    "text": "stuff right and then it's just to a console that error in case of error",
    "start": "2582099",
    "end": "2587849"
  },
  {
    "text": "something bad happen and then did this",
    "start": "2587849",
    "end": "2593349"
  },
  {
    "text": "do this right yeah you know their usual Slav stuff and here's what I wanna do we",
    "start": "2593349",
    "end": "2600519"
  },
  {
    "text": "will create an admin right this is something we didn't talk about to create",
    "start": "2600519",
    "end": "2606730"
  },
  {
    "text": "a topic you have to create an admin connection right and to do that you can",
    "start": "2606730",
    "end": "2611890"
  },
  {
    "text": "do this before we write any more code the first thing remember guys what do we do the first thing we do when we",
    "start": "2611890",
    "end": "2618309"
  },
  {
    "text": "communicate with a broker we need to establish a TCP connection is that right that's what we need to do how do we",
    "start": "2618309",
    "end": "2624730"
  },
  {
    "text": "establish a TCP connection it is very simple right so what are we gonna do is you create a Kafka object here and we're",
    "start": "2624730",
    "end": "2632049"
  },
  {
    "text": "gonna create a new Kafka object and then this guy takes an object okay and and it",
    "start": "2632049",
    "end": "2639220"
  },
  {
    "text": "takes like Kafka object but we're not getting any intellisense because Kafka",
    "start": "2639220",
    "end": "2644859"
  },
  {
    "text": "is is not installed so let's go ahead and just install Kafka yes so how do you do install Kafka yes npm install Kafka",
    "start": "2644859",
    "end": "2652299"
  },
  {
    "text": "yes that's not hard don't you install it now you should start seeing some sort of intelligence",
    "start": "2652299",
    "end": "2660579"
  },
  {
    "text": "which is very important there you go Kafka convect now what we're gonna do is essentially what we want",
    "start": "2660579",
    "end": "2665730"
  },
  {
    "text": "what we're interested in here when we create a new connection to Kafka you have to tell Kafka",
    "start": "2665730",
    "end": "2670920"
  },
  {
    "text": "what is your client ID and this is just a string and you can call it anything you want like I don't know my app all",
    "start": "2670920",
    "end": "2679050"
  },
  {
    "text": "right and if you do that will uniquely identify the client right the second",
    "start": "2679050",
    "end": "2685230"
  },
  {
    "text": "information and here's the thing and when you do codes well I'll tell you right there are a lot of other stuff but",
    "start": "2685230",
    "end": "2691440"
  },
  {
    "text": "we're interested this guy brokers very interested the war brokers not broker and this is very important because since",
    "start": "2691440",
    "end": "2699660"
  },
  {
    "text": "you're working with zookeeper one broker can go down and the other can go up so you can you can't actually give the",
    "start": "2699660",
    "end": "2706080"
  },
  {
    "text": "client multiple broker as an array right that's why you can you can have multiple brokers and they can give all of them",
    "start": "2706080",
    "end": "2712980"
  },
  {
    "text": "and then the client will choose which one to connect to right in my case",
    "start": "2712980",
    "end": "2718369"
  },
  {
    "text": "Hussein Mac 909 - that's my broker right there guys all right so now we have a",
    "start": "2718369",
    "end": "2724530"
  },
  {
    "text": "connection the second thing we do is since we're creating a topic we need Thee in the",
    "start": "2724530",
    "end": "2729990"
  },
  {
    "text": "admin interface to create topics right and house this is how you get it",
    "start": "2729990",
    "end": "2735240"
  },
  {
    "text": "essentially you do Kafka don't admin right and then the moment you do that you will get back an admin object so",
    "start": "2735240",
    "end": "2742560"
  },
  {
    "text": "let's go ahead and just do admin equal this right and then when we have admin",
    "start": "2742560",
    "end": "2748250"
  },
  {
    "text": "now up until this point we didn't really connect right because we didn't really",
    "start": "2748250",
    "end": "2753750"
  },
  {
    "text": "tell til to explicitly connect you can throw in some configuration to auto connect but let's be explicit all the",
    "start": "2753750",
    "end": "2760470"
  },
  {
    "text": "time so it holds better and here's the thing the moment you connect right this is a promise and what do we do promises",
    "start": "2760470",
    "end": "2767190"
  },
  {
    "text": "we have waved them because something can go wrong right so let's do that console that log I'm connecting right and then",
    "start": "2767190",
    "end": "2775380"
  },
  {
    "text": "once we make it here we do a console dot log connected right how about that okay",
    "start": "2775380",
    "end": "2783930"
  },
  {
    "text": "so what do we do that now I'm connected what's the next step I'm gonna create a topic right and how do you create topics",
    "start": "2783930",
    "end": "2792180"
  },
  {
    "text": "very simples literally cultural topics and the reason it says create topics and not topic is for efficient",
    "start": "2792180",
    "end": "2798390"
  },
  {
    "text": "right let's send all the topics you want to create and we're gonna take care of it and then when do you say create",
    "start": "2798390",
    "end": "2804240"
  },
  {
    "text": "topics you know this is a wire call right a network call and I've been",
    "start": "2804240",
    "end": "2810660"
  },
  {
    "text": "without looking actually I know that it's gonna retain a promise so I have to await it right and then when we have",
    "start": "2810660",
    "end": "2817230"
  },
  {
    "text": "that create topics let's do what I see what it takes it takes an option so - it's a conveyor it's essentially a JSON",
    "start": "2817230",
    "end": "2825269"
  },
  {
    "text": "object and what does it do it takes time out topics valid only wait for leaders",
    "start": "2825269",
    "end": "2830970"
  },
  {
    "text": "I'm gonna leave that all of them as default I really care about the topics which is literally an array right and an",
    "start": "2830970",
    "end": "2839730"
  },
  {
    "text": "array of how many topics I just need one really right so you need",
    "start": "2839730",
    "end": "2846269"
  },
  {
    "text": "to tell me what is the topic name here and then what's the topic name here I'm gonna create a topic called users and",
    "start": "2846269",
    "end": "2852680"
  },
  {
    "text": "the next information here is how many partitions are in this topic you can",
    "start": "2852680",
    "end": "2859380"
  },
  {
    "text": "specify here so that's the called num partitions because I would have never remembered this without intellisense",
    "start": "2859380",
    "end": "2865859"
  },
  {
    "text": "really guys so you do that and says hey it's too partition because remember it's",
    "start": "2865859",
    "end": "2871380"
  },
  {
    "text": "a - what M + n - Z right so that's the",
    "start": "2871380",
    "end": "2879539"
  },
  {
    "text": "topic we can make this fancier a little bit and make it like take a parameter to",
    "start": "2879539",
    "end": "2885059"
  },
  {
    "text": "create any topic we want but we don't really care because we're gonna run this once and that's it once we done console",
    "start": "2885059",
    "end": "2892289"
  },
  {
    "text": "dot log done right created successfully",
    "start": "2892289",
    "end": "2898250"
  },
  {
    "text": "and then finally once we've done we can disconnect and we can away this thing",
    "start": "2898250",
    "end": "2905730"
  },
  {
    "text": "and then once we're done we can do like a finally here I think and then do what",
    "start": "2905730",
    "end": "2913500"
  },
  {
    "text": "let's just process that exit because we good all right the last step is I don't",
    "start": "2913500",
    "end": "2921690"
  },
  {
    "text": "know if you see but this is like a little bit lighter color that means just you never called me son so let's go",
    "start": "2921690",
    "end": "2928559"
  },
  {
    "text": "ahead and run this thing so run will run this create a Kafka object with these",
    "start": "2928559",
    "end": "2934150"
  },
  {
    "text": "parameters for the admin object actually connect create a topic once it's done",
    "start": "2934150",
    "end": "2941260"
  },
  {
    "text": "disconnect looks good how about we run it guys so we can either run it from debug or really just run it from here so",
    "start": "2941260",
    "end": "2948510"
  },
  {
    "text": "zoom in we do node what was the J's file",
    "start": "2948510",
    "end": "2953619"
  },
  {
    "text": "for god what did we call topic Jas all right so we're gonna call it topic da GS",
    "start": "2953619",
    "end": "2960900"
  },
  {
    "text": "and connecting connected created successfully we can take their word for",
    "start": "2960900",
    "end": "2969339"
  },
  {
    "text": "it but let's see if it actually works right so we know we created something",
    "start": "2969339",
    "end": "2975309"
  },
  {
    "text": "here so how about we actually start producing something right so the second",
    "start": "2975309",
    "end": "2981160"
  },
  {
    "text": "thing we need to do is write a producer let's do a producer ojs and here's the",
    "start": "2981160",
    "end": "2989170"
  },
  {
    "text": "thing about producer is very similar very very similar so I'm gonna copy the whole code here right and here's the",
    "start": "2989170",
    "end": "2996789"
  },
  {
    "text": "thing I am going to remove this stuff right because it's really I don't really",
    "start": "2996789",
    "end": "3005430"
  },
  {
    "text": "care about that right but here's what really differs about this the only",
    "start": "3005430",
    "end": "3012119"
  },
  {
    "text": "difference is instead of saying I want an admin you say I want a producer okay",
    "start": "3012119",
    "end": "3018349"
  },
  {
    "text": "and that's it let's call it really a producer for simplicity and we're gonna",
    "start": "3018349",
    "end": "3024569"
  },
  {
    "text": "connect with the producer and we're gonna disconnect to the producer and all looks good right but here's the cool",
    "start": "3024569",
    "end": "3030750"
  },
  {
    "text": "part the producer have a function called send right and when you do send you can",
    "start": "3030750",
    "end": "3038250"
  },
  {
    "text": "actually send a record and the record is an object and then in the object you can",
    "start": "3038250",
    "end": "3043619"
  },
  {
    "text": "specify which topic you want to send to all that's cool right the moment you do",
    "start": "3043619",
    "end": "3048960"
  },
  {
    "text": "that what's the topic name guys the topic name is always called users so I'm gonna gonna bother sending that as a",
    "start": "3048960",
    "end": "3055740"
  },
  {
    "text": "parameter okay so it's called users and then the second parameter is called",
    "start": "3055740",
    "end": "3060809"
  },
  {
    "text": "messages okay and then send since you can actually send multiple",
    "start": "3060809",
    "end": "3067109"
  },
  {
    "text": "messages that's why it's an array yeah that's nice okay so each message will",
    "start": "3067109",
    "end": "3076590"
  },
  {
    "text": "have an object okay and what do we have here we have a key partition value right you can leave",
    "start": "3076590",
    "end": "3083280"
  },
  {
    "text": "these information empty headers and key right I really interested in the value",
    "start": "3083280",
    "end": "3089100"
  },
  {
    "text": "what's the value of that message the value of the message is and here's the",
    "start": "3089100",
    "end": "3094260"
  },
  {
    "text": "thing I want to call it message msg right and I'm gonna ask the user for it",
    "start": "3094260",
    "end": "3100470"
  },
  {
    "text": "how about that that's even better right Kohn's message equal process dot Arg V",
    "start": "3100470",
    "end": "3105590"
  },
  {
    "text": "sub two sub zero this is our arguments",
    "start": "3105590",
    "end": "3110700"
  },
  {
    "text": "by the way Sub Zero scorpion MORTAL KOMBAT Sub Zero is the node.js application sub",
    "start": "3110700",
    "end": "3117990"
  },
  {
    "text": "one is the file which is producer two gs sub two is the first argument so if I do",
    "start": "3117990",
    "end": "3125220"
  },
  {
    "text": "like no would producer Jas and I say test then sub sub two is actually this",
    "start": "3125220",
    "end": "3132720"
  },
  {
    "text": "guy right that's what essentially that's why I did that okay so that will be test or whatever",
    "start": "3132720",
    "end": "3138270"
  },
  {
    "text": "the user sends right and if I do that I'm gonna send that message and here's",
    "start": "3138270",
    "end": "3143730"
  },
  {
    "text": "the thing I want to actually specify the",
    "start": "3143730",
    "end": "3149220"
  },
  {
    "text": "partition right so the partition is actually let's call it partition but how",
    "start": "3149220",
    "end": "3155609"
  },
  {
    "text": "do I know which partition remember guys if it's a whether it was it if a to M is",
    "start": "3155609",
    "end": "3162300"
  },
  {
    "text": "partition 0 and in to Z is partition 1 okay so how do I can tell this it's it's",
    "start": "3162300",
    "end": "3170430"
  },
  {
    "text": "actually very simple so const partition equal you basically take the first character of the message",
    "start": "3170430",
    "end": "3177720"
  },
  {
    "text": "right and if it's less than in what does",
    "start": "3177720",
    "end": "3183750"
  },
  {
    "text": "that mean that means this partition 0 if it's greater than n else",
    "start": "3183750",
    "end": "3189230"
  },
  {
    "text": "it's partition 1 right so that's the ternary operator in JavaScript so check",
    "start": "3189230",
    "end": "3195930"
  },
  {
    "text": "that if it's less then obviously the first letter is listening and then it's the",
    "start": "3195930",
    "end": "3201060"
  },
  {
    "text": "first partition otherwise the second write simple stuff we have a producer",
    "start": "3201060",
    "end": "3206280"
  },
  {
    "text": "guys okay let's how about we test our producer we do note producer Oh Jess and that's the",
    "start": "3206280",
    "end": "3216210"
  },
  {
    "text": "test created successfully how would I call it sent successfully right and the",
    "start": "3216210",
    "end": "3223920"
  },
  {
    "text": "next thing we did if we forgot to do is actually we forgot to away this guy right because it's definitely a promise and let's do console cons to result",
    "start": "3223920",
    "end": "3232320"
  },
  {
    "text": "because this definitely returns a result right and let's do since successfully and then let's just throw in the result",
    "start": "3232320",
    "end": "3241619"
  },
  {
    "text": "here how about that right let's see what do we get I'm gonna send it again object",
    "start": "3241619",
    "end": "3248570"
  },
  {
    "text": "well a string defy it see what we get",
    "start": "3248570",
    "end": "3253880"
  },
  {
    "text": "and there you go we have topic name",
    "start": "3255590",
    "end": "3263160"
  },
  {
    "text": "users partition error code base append and all that stuff it will tell you",
    "start": "3263160",
    "end": "3268980"
  },
  {
    "text": "which what is the current offset yes guy we talked about all right where's the error code if there is any and which",
    "start": "3268980",
    "end": "3275550"
  },
  {
    "text": "partition did we write you write how about if I write to Ali right that's",
    "start": "3275550",
    "end": "3282390"
  },
  {
    "text": "partition zero how about if I write to Zane right that's partition one because Z",
    "start": "3282390",
    "end": "3287430"
  },
  {
    "text": "right and so on we stick we can stop populating stuff and you can obviously",
    "start": "3287430",
    "end": "3293339"
  },
  {
    "text": "duplicate right it doesn't really care",
    "start": "3293339",
    "end": "3297170"
  },
  {
    "text": "these are not really users but I'm testing right so now I'm position number three zero one two three right and then",
    "start": "3298490",
    "end": "3307280"
  },
  {
    "text": "three and position partition number one three and partition number zero right so the the offset is unique per essentially",
    "start": "3307280",
    "end": "3314580"
  },
  {
    "text": "pair partition okay we have producer seems to be working but I really need to consume guys how about we consume let's",
    "start": "3314580",
    "end": "3322380"
  },
  {
    "text": "write a consumer very simple very similar so I'm gonna copy the code consumer digest then paste",
    "start": "3322380",
    "end": "3330380"
  },
  {
    "text": "and then I'm gonna call this guy right so when we consume right we really need",
    "start": "3330380",
    "end": "3338910"
  },
  {
    "text": "to consume a topic right so we know that the topic we're gonna consume so I'm",
    "start": "3338910",
    "end": "3345780"
  },
  {
    "text": "gonna specify and we don't need to specify a message maybe we need to specify a partition to consume from but",
    "start": "3345780",
    "end": "3352830"
  },
  {
    "text": "that will change based on which group you are so we don't really specify",
    "start": "3352830",
    "end": "3358770"
  },
  {
    "text": "anything we just run the consumer and will tell us what to consume so how about that let's do it",
    "start": "3358770",
    "end": "3364320"
  },
  {
    "text": "so not producer I want a consumer right and here's the thing I want to specify",
    "start": "3364320",
    "end": "3369960"
  },
  {
    "text": "here information here and I won't specify the group ID and they grew up here any consumer that we spend it's",
    "start": "3369960",
    "end": "3377369"
  },
  {
    "text": "gonna belong to the same group all the time and I gotta call the group Ayano test right and then we're gonna get a",
    "start": "3377369",
    "end": "3384360"
  },
  {
    "text": "consumer back right then we're gonna connect that seems ok and I don't really",
    "start": "3384360",
    "end": "3389850"
  },
  {
    "text": "care about that I don't really care about that I'm not sending anything I'm not doing any of that I'm not yeah we're",
    "start": "3389850",
    "end": "3397740"
  },
  {
    "text": "still disconnected that's sure I don't want to disconnect l also I want to keep",
    "start": "3397740",
    "end": "3403470"
  },
  {
    "text": "the consumer running all right because what is essentially the consumer is doing is they do long polling and it",
    "start": "3403470",
    "end": "3411180"
  },
  {
    "text": "will keep polling for messages right in a long polling manner and we're gonna talk about that sweet guys all right so",
    "start": "3411180",
    "end": "3420480"
  },
  {
    "text": "let's do this so consumer dot subscribe",
    "start": "3420480",
    "end": "3425850"
  },
  {
    "text": "that's how you subscribe to a topic right and you essentially what you do is is hey what topic you want to subscribe",
    "start": "3425850",
    "end": "3432090"
  },
  {
    "text": "to well it's called users and do you want to read from beginning even if you are a",
    "start": "3432090",
    "end": "3438600"
  },
  {
    "text": "new consumer well yes sir all the time right from the beginning right so you've",
    "start": "3438600",
    "end": "3443910"
  },
  {
    "text": "got it you have an option as a consumer to read from the latest position and forward like or if you're interested to",
    "start": "3443910",
    "end": "3452010"
  },
  {
    "text": "read everything that's really up to you right but sometimes if the topic is so big and you really don't care about old",
    "start": "3452010",
    "end": "3457950"
  },
  {
    "text": "messages you can say false Argos now that we are subscribed to the topic the next step is",
    "start": "3457950",
    "end": "3463840"
  },
  {
    "text": "actually run the consumer right and just keep it running and let it pull the",
    "start": "3463840",
    "end": "3470320"
  },
  {
    "text": "topic for results right how do we do that we do a function called run and when we do that run there is a function",
    "start": "3470320",
    "end": "3479320"
  },
  {
    "text": "called here called each message right that's a key and you can pass the function or we can call it a saying",
    "start": "3479320",
    "end": "3486100"
  },
  {
    "text": "result function and that function will get executed for each message you",
    "start": "3486100",
    "end": "3491290"
  },
  {
    "text": "receive and then essentially what we're gonna do is just print the result dot",
    "start": "3491290",
    "end": "3496360"
  },
  {
    "text": "messed you can you can print the result of partition topic and all that stuff right we're gonna interest we're",
    "start": "3496360",
    "end": "3503590"
  },
  {
    "text": "interested to print the message for example right let's say a received",
    "start": "3503590",
    "end": "3510510"
  },
  {
    "text": "message or just received message result",
    "start": "3510510",
    "end": "3516280"
  },
  {
    "text": "dot message the value right on partition",
    "start": "3516280",
    "end": "3525360"
  },
  {
    "text": "partition result dot message of",
    "start": "3526350",
    "end": "3534100"
  },
  {
    "text": "partition how about that let's just do that okay and here's the thing we need to do we really move to we",
    "start": "3534100",
    "end": "3540400"
  },
  {
    "text": "need to remove that process to the exit we can't just kill the process consume we need to make it always running right",
    "start": "3540400",
    "end": "3546520"
  },
  {
    "text": "let's do it no consumer the jeaious guys come on",
    "start": "3546520",
    "end": "3552810"
  },
  {
    "text": "joining the group there you go we received all the messages essentially",
    "start": "3552810",
    "end": "3559090"
  },
  {
    "text": "and this guy is still running and you can see right I receive messages from partition zero I receive messages from",
    "start": "3559090",
    "end": "3565840"
  },
  {
    "text": "partition one and it's amazing stuff guys all right so here's what we're",
    "start": "3565840",
    "end": "3572290"
  },
  {
    "text": "gonna do I'm gonna open terminal write a new brand terminal here and how about we",
    "start": "3572290",
    "end": "3578350"
  },
  {
    "text": "do that yeah and then we're gonna do a",
    "start": "3578350",
    "end": "3584320"
  },
  {
    "text": "new tab and also a new tab and this will",
    "start": "3584320",
    "end": "3590080"
  },
  {
    "text": "guide this will be my producer right so JavaScript JavaScript playground",
    "start": "3590080",
    "end": "3596950"
  },
  {
    "text": "Kafka and then you say node right this",
    "start": "3596950",
    "end": "3601960"
  },
  {
    "text": "is the producer and this guy I want it to be the consumer so how do we do a consumer C JavaScript JavaScript",
    "start": "3601960",
    "end": "3608170"
  },
  {
    "text": "playground Kafka and then just do note consumer the GS wait for messages and",
    "start": "3608170",
    "end": "3614890"
  },
  {
    "text": "this guy is a group test right so start joining the group that's cool and now join the group there are no other",
    "start": "3614890",
    "end": "3621730"
  },
  {
    "text": "consumers right now it is a responsible board for both of our stations right so",
    "start": "3621730",
    "end": "3628810"
  },
  {
    "text": "here's what I'm gonna do I'm gonna go here and then go a nerd producer and",
    "start": "3628810",
    "end": "3634030"
  },
  {
    "text": "let's say test I just published something immediately we got a result here hey receive message one partition",
    "start": "3634030",
    "end": "3641020"
  },
  {
    "text": "one well how but I'm gonna do something on partition zero Ali right that's",
    "start": "3641020",
    "end": "3646600"
  },
  {
    "text": "partition zero right message partition one that's because it's lowercase let's",
    "start": "3646600",
    "end": "3653680"
  },
  {
    "text": "do it capital right I didn't take into consideration their lowercase so that should do it right so now receive them",
    "start": "3653680",
    "end": "3661360"
  },
  {
    "text": "partition zero right so bar bra also partition zero right so",
    "start": "3661360",
    "end": "3668050"
  },
  {
    "text": "this guy's responsible for both partition how about you go here and say",
    "start": "3668050",
    "end": "3673770"
  },
  {
    "text": "especially need to go to the JavaScript Kafka and then node consumer join the",
    "start": "3673770",
    "end": "3680290"
  },
  {
    "text": "group sir now this guy joined a group a he will be responsible for the other",
    "start": "3680290",
    "end": "3686740"
  },
  {
    "text": "partition I have no idea how they gonna zookeeper I'll get balanced nose right",
    "start": "3686740",
    "end": "3691870"
  },
  {
    "text": "but this guy support one partition this guy is another partition let's find out who is who write the node producer let's",
    "start": "3691870",
    "end": "3701920"
  },
  {
    "text": "publish Ali so that's a or Adam Adams partition zero",
    "start": "3701920",
    "end": "3709110"
  },
  {
    "text": "we come here we receive the Adam those this guy's partition zero right let's",
    "start": "3709110",
    "end": "3714400"
  },
  {
    "text": "publish again Adam one all right we still got here this guy did not get Adam",
    "start": "3714400",
    "end": "3719980"
  },
  {
    "text": "because he's responsible partition one apparently so let's do partitions either one zine this guy did now get it right",
    "start": "3719980",
    "end": "3730690"
  },
  {
    "text": "but this guy got it right and now you can start just doing a for loop and just produce a lot of messages and let's just",
    "start": "3730690",
    "end": "3739690"
  },
  {
    "text": "do st. twos and to look at that can produce as much as possible and those",
    "start": "3739690",
    "end": "3745540"
  },
  {
    "text": "guys immediately will get it because they are subscribed they're running they're consuming stuff guys I'm gonna",
    "start": "3745540",
    "end": "3751090"
  },
  {
    "text": "make this code available guys for you you don't have to pause the video and look at that but essentially all the",
    "start": "3751090",
    "end": "3757780"
  },
  {
    "text": "coders are smaller is available in the description below let's go find analyze",
    "start": "3757780",
    "end": "3762790"
  },
  {
    "text": "there this course guys by talking about the pros and cons almost done guys",
    "start": "3762790",
    "end": "3767890"
  },
  {
    "text": "almost done there's a lot of stuff this this this statistic is amazing guys so",
    "start": "3767890",
    "end": "3774130"
  },
  {
    "start": "3768000",
    "end": "4620000"
  },
  {
    "text": "let's talk about a little bit about the pros of Kafka ok Kafka is an amazing",
    "start": "3774130",
    "end": "3779170"
  },
  {
    "text": "technology right and there's a lot of advantages to it and the first one or I",
    "start": "3779170",
    "end": "3784870"
  },
  {
    "text": "took up talk about the append-only commit log this is at the heart of Kafka all the partitions all the topics",
    "start": "3784870",
    "end": "3792340"
  },
  {
    "text": "everything message use you right it goes to a log and that log is append-only",
    "start": "3792340",
    "end": "3798640"
  },
  {
    "text": "right so it always goes in the end and if we know anything about computer",
    "start": "3798640",
    "end": "3803980"
  },
  {
    "text": "science and computers they thrive on appending stuff because it's the best",
    "start": "3803980",
    "end": "3809740"
  },
  {
    "text": "you go to the end it's all right there you know where the end is first ass that's the first thing you always know",
    "start": "3809740",
    "end": "3816790"
  },
  {
    "text": "where the end is you can go very fast to the end and you can append extremely",
    "start": "3816790",
    "end": "3822700"
  },
  {
    "text": "fast to the end right you're not seeking to the middle and you're inserting data between two block of data right unlike",
    "start": "3822700",
    "end": "3831850"
  },
  {
    "text": "relational databases and B trees right you're not doing that you're not manipulating the actual desk space and",
    "start": "3831850",
    "end": "3841270"
  },
  {
    "text": "fragment of stuff it's always append only that's why there are special SSDs that you can write once too and that you",
    "start": "3841270",
    "end": "3848830"
  },
  {
    "text": "can never delete too right so that's what Kafka does a lot of databases by",
    "start": "3848830",
    "end": "3854080"
  },
  {
    "text": "the way do the same thing right they always have the append commit log where",
    "start": "3854080",
    "end": "3859630"
  },
  {
    "text": "any event you do anything any insert goes into this append love first committed like Cassandra works the",
    "start": "3859630",
    "end": "3866800"
  },
  {
    "text": "same as well and then what it does essentially you creatives this logical tables and and all that other stuff",
    "start": "3866800",
    "end": "3874110"
  },
  {
    "text": "materializes differently for you right so that's how we work Kafka works like that so it's very fast",
    "start": "3874110",
    "end": "3879660"
  },
  {
    "text": "the performance is amazing with with Kafka because you're always commenting",
    "start": "3879660",
    "end": "3884830"
  },
  {
    "text": "and you when you read you know what you're gonna read and they are very fast",
    "start": "3884830",
    "end": "3889960"
  },
  {
    "text": "they are very fast and indexed because we work with positions and partitions and that's it and append logs so seeking",
    "start": "3889960",
    "end": "3898750"
  },
  {
    "text": "to a position is extremely vast because hey I I wanna go to sector five block",
    "start": "3898750",
    "end": "3907600"
  },
  {
    "text": "seven on the desk go there right and immediately pull that data that's easy",
    "start": "3907600",
    "end": "3915040"
  },
  {
    "text": "because that's the input so the consumers really build a little bit suffer because they have to figure out",
    "start": "3915040",
    "end": "3920320"
  },
  {
    "text": "which position they want to read from but you cannot disadvantage or this you cannot do like a select star or from",
    "start": "3920320",
    "end": "3927810"
  },
  {
    "text": "topic where I D call this I mean maybe the new sequel Kafka whatever they call",
    "start": "3927810",
    "end": "3935260"
  },
  {
    "text": "it have this I think it's called Kafka sequel have this ability but at the",
    "start": "3935260",
    "end": "3940630"
  },
  {
    "text": "heart of it and it's an append commit load only right happened only commit luck so that's like that's how it's very",
    "start": "3940630",
    "end": "3946570"
  },
  {
    "text": "fast you can read fast you can write fast because that it is it is designed for events right an event happened and",
    "start": "3946570",
    "end": "3954330"
  },
  {
    "text": "video has been uploaded a video has been compressed something happened you go to",
    "start": "3954330",
    "end": "3959440"
  },
  {
    "text": "happened and the events do not change right if you if you do something you",
    "start": "3959440",
    "end": "3965080"
  },
  {
    "text": "cannot undo it right in real life it is done and that's how a calf car",
    "start": "3965080",
    "end": "3970450"
  },
  {
    "text": "essentially works in certain that so performance is amazing because of that",
    "start": "3970450",
    "end": "3975660"
  },
  {
    "text": "distributed with zookeeper right well well with zookeeper the concept of",
    "start": "3975660",
    "end": "3984010"
  },
  {
    "text": "partitions were still it's an append log right it's an append commit log you can",
    "start": "3984010",
    "end": "3989650"
  },
  {
    "text": "distribute this partitions and you can have one leader partition and you can",
    "start": "3989650",
    "end": "3995710"
  },
  {
    "text": "always rewrite to that one and the of the partition will follow that and get copies of the latest information",
    "start": "3995710",
    "end": "4003110"
  },
  {
    "text": "latest messages right so it's very distributed and and because of the",
    "start": "4003110",
    "end": "4008580"
  },
  {
    "text": "design because like they're short this partition they can very easily distribute these things around and you",
    "start": "4008580",
    "end": "4015930"
  },
  {
    "text": "can easily scale as a result long polling I want to talk about that a",
    "start": "4015930",
    "end": "4021360"
  },
  {
    "text": "little bit so RabbitMQ I made a video about rubidium Kim then reference it here and essentially what RabbitMQ does",
    "start": "4021360",
    "end": "4028620"
  },
  {
    "text": "when it tries to send an information to a consumer it actually uses the push",
    "start": "4028620",
    "end": "4035160"
  },
  {
    "text": "model and it can because it's a TCP connection even Kafka can do that but it",
    "start": "4035160",
    "end": "4040350"
  },
  {
    "text": "doesn't right and the limitation of the push model is the consumer cannot really",
    "start": "4040350",
    "end": "4047300"
  },
  {
    "text": "consume as fast as producers most of the time because you have you can have",
    "start": "4047300",
    "end": "4052680"
  },
  {
    "text": "producers like Gary Vee pushes content like 700 videos a day right and and we",
    "start": "4052680",
    "end": "4059970"
  },
  {
    "text": "poor consumers cannot consume any of it right apparently consume any of it so if you stop pushing pushing pushing",
    "start": "4059970",
    "end": "4065820"
  },
  {
    "text": "information consumers don't have the cycles to consume that stuff with push",
    "start": "4065820",
    "end": "4072060"
  },
  {
    "text": "model so Kafka flipped it it says hey let's use the polling model where the",
    "start": "4072060",
    "end": "4077160"
  },
  {
    "text": "consumer ask for a message but we don't want to do a dumb polling model where",
    "start": "4077160",
    "end": "4082440"
  },
  {
    "text": "consumer says hey do I have a message they have a message they have a message they have message no here's the criteria",
    "start": "4082440",
    "end": "4088350"
  },
  {
    "text": "for long polling give me a response here's a is there a message and don't",
    "start": "4088350",
    "end": "4096299"
  },
  {
    "text": "respond immediately if you if there isn't any messages right don't tell me hey there isn't any messages wait for X",
    "start": "4096300",
    "end": "4103470"
  },
  {
    "text": "amount of time and by the way if the message if there are at least seven",
    "start": "4103470",
    "end": "4109410"
  },
  {
    "text": "messages push them to me or if there's at least 700 bytes of messages ready for",
    "start": "4109410",
    "end": "4116100"
  },
  {
    "text": "me push them for me if there's only data available push it to me don't don't tell",
    "start": "4116100",
    "end": "4121170"
  },
  {
    "text": "me don't send me empty responses essentially right so that's sensual long polling is you",
    "start": "4121170",
    "end": "4126210"
  },
  {
    "text": "make a request and you wait for it right so there is no empty misses",
    "start": "4126210",
    "end": "4131730"
  },
  {
    "text": "right there's no miss requesters you'd make a request and you find out that hey",
    "start": "4131730",
    "end": "4137160"
  },
  {
    "text": "there is nothing and these are very harmful if you make requests that saturate the bandwidth right and in soon",
    "start": "4137160",
    "end": "4143790"
  },
  {
    "text": "CPU cycles both from the server and the client right so long polling in that",
    "start": "4143790",
    "end": "4148798"
  },
  {
    "text": "other hand whatever we did right we rent the consumer and the consumers start doing their long polling behind the",
    "start": "4148799",
    "end": "4154528"
  },
  {
    "text": "scene it's all the calf kgs in this example which is an amazing library by the way it does drug only for us right",
    "start": "4154529",
    "end": "4161640"
  },
  {
    "text": "and I'm gonna make a video just separated just to talk about a long point so it's an event-driven architecture",
    "start": "4161640",
    "end": "4169650"
  },
  {
    "text": "it's a pops up and it's a queue right all at once right it's a queue because",
    "start": "4169650",
    "end": "4175620"
  },
  {
    "text": "you can put all your consumers in one group and each group each consumer will",
    "start": "4175620",
    "end": "4181140"
  },
  {
    "text": "receive one and only one message no message will be received by other consumer which is that's what a queue is",
    "start": "4181140",
    "end": "4188008"
  },
  {
    "text": "right it can be a pops up a broadcast message hey i uploaded this video please",
    "start": "4188009",
    "end": "4195030"
  },
  {
    "text": "consumers consume a head right go and check the copyright service can consume",
    "start": "4195030",
    "end": "4202920"
  },
  {
    "text": "that stuff the caching service can consume that stuff in cash the stuff that the the Content ID can consume it",
    "start": "4202920",
    "end": "4211920"
  },
  {
    "text": "the the codec service can consume it other services can consume and they can",
    "start": "4211920",
    "end": "4217260"
  },
  {
    "text": "do stuff for the same message can be sent to multiple consumer and you can do that by creating consumers with",
    "start": "4217260",
    "end": "4223140"
  },
  {
    "text": "different groups right because if you do that we we essentially send a message",
    "start": "4223140",
    "end": "4228420"
  },
  {
    "text": "for for each group the message is a group dependent thing yeah and it's also",
    "start": "4228420",
    "end": "4233760"
  },
  {
    "text": "event-driven and a lot of people use micro services with Kafka right and the",
    "start": "4233760",
    "end": "4240150"
  },
  {
    "text": "reason they do that is like Kafka is kind of work naturally with micro services because instead of markers are",
    "start": "4240150",
    "end": "4246570"
  },
  {
    "text": "talking to each other let since everything is like almost like event-driven hey a video has been",
    "start": "4246570",
    "end": "4252480"
  },
  {
    "text": "uploaded hey a video has been compressed hey a video has been copyrighted hey a",
    "start": "4252480",
    "end": "4258930"
  },
  {
    "text": "video is ready to be edited something like that right so all these are events you can store the events in Kafka",
    "start": "4258930",
    "end": "4265190"
  },
  {
    "text": "and listen to those events as a consumer and do something with it right so you",
    "start": "4265190",
    "end": "4271160"
  },
  {
    "text": "can have everything as an event-driven Oh when something happened do this when something happened do this and instead",
    "start": "4271160",
    "end": "4277370"
  },
  {
    "text": "of having to do this logic in your application which kind of gets complicated obviously it's scales like",
    "start": "4277370",
    "end": "4284570"
  },
  {
    "text": "there is no tomorrow right because just spin up another broker and you're done",
    "start": "4284570",
    "end": "4291020"
  },
  {
    "text": "because zookeeper will just pick it up and they will understand that stuff what",
    "start": "4291020",
    "end": "4296270"
  },
  {
    "text": "I'll processing fewer consumers in one group then you can just shove just",
    "start": "4296270",
    "end": "4301969"
  },
  {
    "text": "consume the rest like there is no tomorrow right because all of those consumers will hit that list of",
    "start": "4301969",
    "end": "4308150"
  },
  {
    "text": "partitions in parallel so one topic multiple partition you can read them in",
    "start": "4308150",
    "end": "4314180"
  },
  {
    "text": "parallel if there was no partitions you cannot do that you have to sequentially",
    "start": "4314180",
    "end": "4319489"
  },
  {
    "text": "read the log but because now I use sharding I sharted my data I now can",
    "start": "4319489",
    "end": "4328010"
  },
  {
    "text": "consume in parallel data the problem with this is as a producer it sucks for",
    "start": "4328010",
    "end": "4333949"
  },
  {
    "text": "me now I have to kind of know that partition which kind of sucks which kind of complicate the application a little",
    "start": "4333949",
    "end": "4340550"
  },
  {
    "text": "bit cons this is the big biggest hurdle",
    "start": "4340550",
    "end": "4346219"
  },
  {
    "text": "and I think the community is working on I think I read somewhere that the",
    "start": "4346219",
    "end": "4351290"
  },
  {
    "text": "community is working on removing zookeeper as a dependency from Kafka I",
    "start": "4351290",
    "end": "4356810"
  },
  {
    "text": "might be wrong but I read a couple places I forgot where I I'm trying to find the article on generes reference",
    "start": "4356810",
    "end": "4364400"
  },
  {
    "text": "and in the description below but zookeeper I haven't worked with zookeeper to be honest right so I'm I'm",
    "start": "4364400",
    "end": "4370370"
  },
  {
    "text": "not an expert in this technology but I heard a lot of people engineers complaining about this especially at",
    "start": "4370370",
    "end": "4376850"
  },
  {
    "text": "scale if a scale it behaved really weird with microservices a lot of people use",
    "start": "4376850",
    "end": "4383000"
  },
  {
    "text": "zookeeper as a service discovery mechanism says hey tell me who's who where is the service discovery service",
    "start": "4383000",
    "end": "4390469"
  },
  {
    "text": "that I need to communicate with the nf it's down it brings the entire system to",
    "start": "4390469",
    "end": "4395750"
  },
  {
    "text": "its knees and that's bad right because you're kind of relying the entire system on this",
    "start": "4395750",
    "end": "4402160"
  },
  {
    "text": "piece of technology and if it's down oh my god things can go wrong while I was",
    "start": "4402160",
    "end": "4408100"
  },
  {
    "text": "making this video zookeeper start start making started acting really weird and I",
    "start": "4408100",
    "end": "4415300"
  },
  {
    "text": "had to restore several times and and this is just with single broker right I",
    "start": "4415300",
    "end": "4421570"
  },
  {
    "text": "didn't make a video yet to make it multiple broker and it's it's really complicated right guys so zookeeper kind",
    "start": "4421570",
    "end": "4429040"
  },
  {
    "text": "of complicated things and skinning becomes maintenance essentially it becomes really hard and I can also add",
    "start": "4429040",
    "end": "4438670"
  },
  {
    "text": "the consumer to this but producer essentially having the knowledge of",
    "start": "4438670",
    "end": "4443680"
  },
  {
    "text": "which partition to publish to right can lead to problems because now you have",
    "start": "4443680",
    "end": "4450010"
  },
  {
    "text": "the complexity of knowing the partition and we have the same problem today with",
    "start": "4450010",
    "end": "4455680"
  },
  {
    "text": "relational databases charting right because the moment that you start shortening yeah you have database one",
    "start": "4455680",
    "end": "4462100"
  },
  {
    "text": "two three four five well I'm I want to read user seven where the heck should I",
    "start": "4462100",
    "end": "4469690"
  },
  {
    "text": "query which database should I worry is a seven seven eight and you have to know all by the way you have to keep the",
    "start": "4469690",
    "end": "4475630"
  },
  {
    "text": "ranges the partition key they called her the sharding key you have to know oh oh this all this users actually on this",
    "start": "4475630",
    "end": "4482440"
  },
  {
    "text": "database so I better connect to this server and yeah it's very beneficial but",
    "start": "4482440",
    "end": "4488020"
  },
  {
    "text": "it complicated the clients that's why there's another software called Vitesse",
    "start": "4488020",
    "end": "4494680"
  },
  {
    "text": "I think and Vitesse abstracts the sharding from you as a client and takes",
    "start": "4494680",
    "end": "4501400"
  },
  {
    "text": "care of the sharding and all the Shari",
    "start": "4501400",
    "end": "4506470"
  },
  {
    "text": "sharding and just make a query and we'll does everything for you and I think it's running on my sick one I think that",
    "start": "4506470",
    "end": "4512710"
  },
  {
    "text": "YouTube actually uses it the tests that's what's called I'm gonna reference in the description complex to install",
    "start": "4512710",
    "end": "4520120"
  },
  {
    "text": "configure manage it took me a whole day to figure this out guys to the video I",
    "start": "4520120",
    "end": "4525700"
  },
  {
    "text": "made for just to spin up one broker and one zookeeper don't me whole day right just imagine how do you",
    "start": "4525700",
    "end": "4534400"
  },
  {
    "text": "do how do guys how do people do multiple brokers I know there are like scripts",
    "start": "4534400",
    "end": "4539949"
  },
  {
    "text": "that you just run and and just just take",
    "start": "4539949",
    "end": "4545290"
  },
  {
    "text": "care of everything but I really didn't want to do that for you guys I didn't want to download that compose docker",
    "start": "4545290",
    "end": "4552070"
  },
  {
    "text": "thing and just say hey there's download this unwind I didn't want to do that I wanted to understand what's going on I'm",
    "start": "4552070",
    "end": "4558340"
  },
  {
    "text": "this is I think this is this is on me really I just do not like to copy and",
    "start": "4558340",
    "end": "4564280"
  },
  {
    "text": "paste code I don't like to show you things that I don't understand because I",
    "start": "4564280",
    "end": "4570610"
  },
  {
    "text": "owe it to you guys if I'm explaining something I need to understand it right I'm not gonna show you",
    "start": "4570610",
    "end": "4577480"
  },
  {
    "text": "hey go this take the sea amel and they just run in and is gonna do everything",
    "start": "4577480",
    "end": "4583090"
  },
  {
    "text": "for you maybe I'm gonna do it if if I understand the things but that that's",
    "start": "4583090",
    "end": "4589600"
  },
  {
    "text": "why slow slows it that's why I it takes me a while to make videos because I",
    "start": "4589600",
    "end": "4595210"
  },
  {
    "text": "really need to understand every single piece right and then and a lot of technologies are like that so you need",
    "start": "4595210",
    "end": "4601420"
  },
  {
    "text": "to understand everything that's why I try to isolate everything make the setup as simple as possible but believe me if",
    "start": "4601420",
    "end": "4608679"
  },
  {
    "text": "you go there I could not find those two lines of code that spin up a zookeeper",
    "start": "4608679",
    "end": "4614739"
  },
  {
    "text": "and Kafka cluster has a single I could not find it I swear God or that's why I had to write it myself I have to",
    "start": "4614739",
    "end": "4621550"
  },
  {
    "start": "4620000",
    "end": "4686000"
  },
  {
    "text": "understand what's going on and essentially I'd do it right the rest of the stuffs are very complicated and I",
    "start": "4621550",
    "end": "4627520"
  },
  {
    "text": "wanted to make as simple as possible summary guys huge video I know I know I",
    "start": "4627520",
    "end": "4634389"
  },
  {
    "text": "know all right so hopefully humanity the end right the comment section I made it the",
    "start": "4634389",
    "end": "4639580"
  },
  {
    "text": "end all right if you did I really appreciate it guys hope you don't really enjoy this video so essentially we",
    "start": "4639580",
    "end": "4645280"
  },
  {
    "text": "talked about kafka component we talked about the brokers I am talking about partitions we talked about producers",
    "start": "4645280",
    "end": "4652810"
  },
  {
    "text": "consumers right we talked about zookeeper we talked about Venna we did at an example where we spin up a Kafka",
    "start": "4652810",
    "end": "4658690"
  },
  {
    "text": "cluster a zookeeper all that jazz we wrote a producer and consumer",
    "start": "4658690",
    "end": "4663940"
  },
  {
    "text": "yes we show how the load balancing is done we'll show how the the rebalancing",
    "start": "4663940",
    "end": "4671530"
  },
  {
    "text": "and a group is done and all that stuff we talked about the pros and cons of Kafka right hope you enjoyed this video",
    "start": "4671530",
    "end": "4678010"
  },
  {
    "text": "guys all the resources will be available in the description below I hope you enjoy this video I'm gonna see you in",
    "start": "4678010",
    "end": "4683890"
  },
  {
    "text": "the next one you guys stay awesome",
    "start": "4683890",
    "end": "4687449"
  }
]