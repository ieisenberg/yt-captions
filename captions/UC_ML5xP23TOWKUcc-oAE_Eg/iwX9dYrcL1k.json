[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "AWS serverless Lambda has just released",
    "start": "0",
    "end": "3419"
  },
  {
    "text": "support for response payload streaming",
    "start": "3419",
    "end": "7620"
  },
  {
    "text": "so if you ever had uh built a Lambda you",
    "start": "7620",
    "end": "12719"
  },
  {
    "text": "will know that there is a limit of",
    "start": "12719",
    "end": "14700"
  },
  {
    "text": "around I think six megabyte I don't I",
    "start": "14700",
    "end": "17400"
  },
  {
    "text": "don't use I think I used it once or",
    "start": "17400",
    "end": "19859"
  },
  {
    "text": "twice Lambda serverless but there is",
    "start": "19859",
    "end": "22380"
  },
  {
    "text": "like a limit when you build the response",
    "start": "22380",
    "end": "24779"
  },
  {
    "text": "that is sent to the client and not only",
    "start": "24779",
    "end": "27000"
  },
  {
    "text": "that a six megabyte limit",
    "start": "27000",
    "end": "29720"
  },
  {
    "text": "the response has to be completely",
    "start": "29720",
    "end": "33059"
  },
  {
    "text": "buffered in the Lambda response and then",
    "start": "33059",
    "end": "36660"
  },
  {
    "text": "send at once and that's because of the",
    "start": "36660",
    "end": "39000"
  },
  {
    "text": "nature architecture of Lambda because it",
    "start": "39000",
    "end": "42300"
  },
  {
    "text": "has to run the function and to",
    "start": "42300",
    "end": "43920"
  },
  {
    "text": "completion and then once it's done it's",
    "start": "43920",
    "end": "46020"
  },
  {
    "text": "done it can't give you like half",
    "start": "46020",
    "end": "48000"
  },
  {
    "text": "execution you got how to kind of finish",
    "start": "48000",
    "end": "50100"
  },
  {
    "text": "everything and then send that with full",
    "start": "50100",
    "end": "52020"
  },
  {
    "text": "response so they just release a feature",
    "start": "52020",
    "end": "54420"
  },
  {
    "text": "where you can stream uh the responses",
    "start": "54420",
    "end": "58199"
  },
  {
    "text": "back to the client this is actually",
    "start": "58199",
    "end": "59760"
  },
  {
    "text": "pretty good because transfer chunk",
    "start": "59760",
    "end": "62100"
  },
  {
    "start": "60000",
    "end": "180000"
  },
  {
    "text": "encoding which is an HTTP",
    "start": "62100",
    "end": "64040"
  },
  {
    "text": "server uh content type has never been",
    "start": "64040",
    "end": "67680"
  },
  {
    "text": "supported in this case for uh Lambda I",
    "start": "67680",
    "end": "70619"
  },
  {
    "text": "think a lot of developers Will Rejoice",
    "start": "70619",
    "end": "72479"
  },
  {
    "text": "let's discuss this so this comes from",
    "start": "72479",
    "end": "73920"
  },
  {
    "text": "the AWS blog let's read and discuss AWS",
    "start": "73920",
    "end": "78360"
  },
  {
    "text": "Lambda introduces response payload",
    "start": "78360",
    "end": "80759"
  },
  {
    "text": "streaming AWS Lambda functions can now",
    "start": "80759",
    "end": "83759"
  },
  {
    "text": "progressively stream response payloads",
    "start": "83759",
    "end": "87060"
  },
  {
    "text": "back to the client including payloads",
    "start": "87060",
    "end": "89340"
  },
  {
    "text": "larger than six megabytes so that means",
    "start": "89340",
    "end": "91500"
  },
  {
    "text": "they had in fact this limit at some",
    "start": "91500",
    "end": "94380"
  },
  {
    "text": "point right helping you improve the",
    "start": "94380",
    "end": "96420"
  },
  {
    "text": "performance of web and mobile",
    "start": "96420",
    "end": "98100"
  },
  {
    "text": "applications AWS Lambda is a serverless",
    "start": "98100",
    "end": "100920"
  },
  {
    "text": "compute service that lets you run code",
    "start": "100920",
    "end": "103439"
  },
  {
    "text": "without provisioning or managing",
    "start": "103439",
    "end": "105479"
  },
  {
    "text": "infrastructure",
    "start": "105479",
    "end": "106799"
  },
  {
    "text": "before today Lambda based applications",
    "start": "106799",
    "end": "108960"
  },
  {
    "text": "using the traditional request response",
    "start": "108960",
    "end": "111119"
  },
  {
    "text": "invocation model had to fully generate",
    "start": "111119",
    "end": "113579"
  },
  {
    "text": "and buffer the response before returning",
    "start": "113579",
    "end": "116700"
  },
  {
    "text": "it to the client which could delay the",
    "start": "116700",
    "end": "119100"
  },
  {
    "text": "time to First byte or ttfb right it's",
    "start": "119100",
    "end": "122640"
  },
  {
    "text": "very critical",
    "start": "122640",
    "end": "124759"
  },
  {
    "text": "property in the in the client side for",
    "start": "124759",
    "end": "128099"
  },
  {
    "text": "performance measuring right what we",
    "start": "128099",
    "end": "130020"
  },
  {
    "text": "notice here is the server has because",
    "start": "130020",
    "end": "133379"
  },
  {
    "text": "it's a function you call it once it has",
    "start": "133379",
    "end": "135959"
  },
  {
    "text": "to run to completion",
    "start": "135959",
    "end": "137879"
  },
  {
    "text": "even if you're riding to the socket in",
    "start": "137879",
    "end": "142080"
  },
  {
    "text": "your code you literally have multiple",
    "start": "142080",
    "end": "144000"
  },
  {
    "text": "rights right and even flushes to the",
    "start": "144000",
    "end": "147840"
  },
  {
    "text": "socket that will not",
    "start": "147840",
    "end": "150120"
  },
  {
    "text": "uh send them to the TCP actual TCP",
    "start": "150120",
    "end": "154440"
  },
  {
    "text": "socket it will buffer in the Lambda its",
    "start": "154440",
    "end": "158640"
  },
  {
    "text": "own buffer effectively and then once the",
    "start": "158640",
    "end": "161099"
  },
  {
    "text": "function terminates they take your",
    "start": "161099",
    "end": "163200"
  },
  {
    "text": "entire payload that you wrote and then",
    "start": "163200",
    "end": "165540"
  },
  {
    "text": "flush it once to the actual Network",
    "start": "165540",
    "end": "168239"
  },
  {
    "text": "socket that is facing the client and",
    "start": "168239",
    "end": "171599"
  },
  {
    "text": "it's not really directly to the clients",
    "start": "171599",
    "end": "173280"
  },
  {
    "text": "probably there are like a lot of you",
    "start": "173280",
    "end": "175319"
  },
  {
    "text": "know edges and proxies until it actually",
    "start": "175319",
    "end": "178260"
  },
  {
    "text": "reaches the client right so that is the",
    "start": "178260",
    "end": "181920"
  },
  {
    "start": "180000",
    "end": "300000"
  },
  {
    "text": "current limitation so what they did is",
    "start": "181920",
    "end": "185340"
  },
  {
    "text": "the third time to First Response is now",
    "start": "185340",
    "end": "187739"
  },
  {
    "text": "much much better with response streaming",
    "start": "187739",
    "end": "191280"
  },
  {
    "text": "function and this is not uh limited to",
    "start": "191280",
    "end": "194580"
  },
  {
    "text": "http of course right you can even do it",
    "start": "194580",
    "end": "197700"
  },
  {
    "text": "with normal TCP which is pretty",
    "start": "197700",
    "end": "201680"
  },
  {
    "text": "important if you think about it right",
    "start": "201680",
    "end": "203580"
  },
  {
    "text": "with response streaming functions can",
    "start": "203580",
    "end": "205440"
  },
  {
    "text": "send partial responses back to the",
    "start": "205440",
    "end": "207420"
  },
  {
    "text": "client as they become ready",
    "start": "207420",
    "end": "209180"
  },
  {
    "text": "significantly approving the time to",
    "start": "209180",
    "end": "211560"
  },
  {
    "text": "First buy which more web mobile and",
    "start": "211560",
    "end": "214920"
  },
  {
    "text": "mobile applications are especially",
    "start": "214920",
    "end": "216780"
  },
  {
    "text": "sensitive to so I think we can welcome",
    "start": "216780",
    "end": "219959"
  },
  {
    "text": "if you want the server sent events",
    "start": "219959",
    "end": "224640"
  },
  {
    "text": "and Lambda you can do that today now",
    "start": "224640",
    "end": "226739"
  },
  {
    "text": "with this you should be able to I don't",
    "start": "226739",
    "end": "229739"
  },
  {
    "text": "think you could you could have ever done",
    "start": "229739",
    "end": "231360"
  },
  {
    "text": "that right because server sent the event",
    "start": "231360",
    "end": "233400"
  },
  {
    "text": "which is the event slash stream it's",
    "start": "233400",
    "end": "236099"
  },
  {
    "text": "technically this identical to the",
    "start": "236099",
    "end": "238620"
  },
  {
    "text": "transfer chunk and coding right all you",
    "start": "238620",
    "end": "241319"
  },
  {
    "text": "have to do is just send",
    "start": "241319",
    "end": "243180"
  },
  {
    "text": "events like actual messages",
    "start": "243180",
    "end": "246319"
  },
  {
    "text": "down to the client and this request this",
    "start": "246319",
    "end": "250560"
  },
  {
    "text": "response is actually never ending when",
    "start": "250560",
    "end": "252840"
  },
  {
    "text": "it comes to the SSE right you send one",
    "start": "252840",
    "end": "255060"
  },
  {
    "text": "request and it's a fleet of stream of",
    "start": "255060",
    "end": "258000"
  },
  {
    "text": "stuff so I could I could say like SSE is",
    "start": "258000",
    "end": "261720"
  },
  {
    "text": "a kind of a special case of transversion",
    "start": "261720",
    "end": "264540"
  },
  {
    "text": "concording which you can do pretty much",
    "start": "264540",
    "end": "266820"
  },
  {
    "text": "anything you want like chat gpts works",
    "start": "266820",
    "end": "269460"
  },
  {
    "text": "with SSE right same thing so in one",
    "start": "269460",
    "end": "272340"
  },
  {
    "text": "request you send that request and it",
    "start": "272340",
    "end": "273960"
  },
  {
    "text": "keeps generating this content for you",
    "start": "273960",
    "end": "277080"
  },
  {
    "text": "right and then displaying it as you go",
    "start": "277080",
    "end": "279900"
  },
  {
    "text": "so serverless is a very attractive",
    "start": "279900",
    "end": "282660"
  },
  {
    "text": "features now become right",
    "start": "282660",
    "end": "284280"
  },
  {
    "text": "the small streaming currently supports",
    "start": "284280",
    "end": "287180"
  },
  {
    "text": "node.js14x and newer runtimes so now you",
    "start": "287180",
    "end": "291180"
  },
  {
    "text": "can start doing your application all of",
    "start": "291180",
    "end": "294240"
  },
  {
    "text": "a sudden I don't know I'm not sure if",
    "start": "294240",
    "end": "298320"
  },
  {
    "text": "this is now a capability that you enable",
    "start": "298320",
    "end": "302220"
  },
  {
    "start": "300000",
    "end": "360000"
  },
  {
    "text": "opt in or just happens because",
    "start": "302220",
    "end": "306419"
  },
  {
    "text": "if",
    "start": "306419",
    "end": "308580"
  },
  {
    "text": "I can see like a behavioral change if if",
    "start": "308580",
    "end": "312060"
  },
  {
    "text": "you're serverless Now function all of a",
    "start": "312060",
    "end": "314699"
  },
  {
    "text": "sudden starts streaming your client",
    "start": "314699",
    "end": "317040"
  },
  {
    "text": "might might freak out it's like whoa",
    "start": "317040",
    "end": "319199"
  },
  {
    "text": "what is it I'm now receiving partial",
    "start": "319199",
    "end": "321360"
  },
  {
    "text": "results all of a sudden right",
    "start": "321360",
    "end": "324720"
  },
  {
    "text": "and uh you'll you will see some",
    "start": "324720",
    "end": "327600"
  },
  {
    "text": "performance of course you will see that",
    "start": "327600",
    "end": "329460"
  },
  {
    "text": "results immediately but I'm afraid that",
    "start": "329460",
    "end": "332460"
  },
  {
    "text": "the clients might not",
    "start": "332460",
    "end": "334020"
  },
  {
    "text": "might not might not know how to deal",
    "start": "334020",
    "end": "336300"
  },
  {
    "text": "with the partial responses so yeah you",
    "start": "336300",
    "end": "339600"
  },
  {
    "text": "might",
    "start": "339600",
    "end": "340740"
  },
  {
    "text": "need to deal with these partial",
    "start": "340740",
    "end": "343139"
  },
  {
    "text": "responses in your client code I might be",
    "start": "343139",
    "end": "345360"
  },
  {
    "text": "wrong there but it's just something that",
    "start": "345360",
    "end": "348060"
  },
  {
    "text": "came to my mind you can also stream",
    "start": "348060",
    "end": "350100"
  },
  {
    "text": "responses with custom runtimes you can",
    "start": "350100",
    "end": "353100"
  },
  {
    "text": "customize that what's that again I'm not",
    "start": "353100",
    "end": "355800"
  },
  {
    "text": "really versed in AWS I I think I wrote",
    "start": "355800",
    "end": "359460"
  },
  {
    "text": "One Lambda function or two functions you",
    "start": "359460",
    "end": "362220"
  },
  {
    "start": "360000",
    "end": "420000"
  },
  {
    "text": "can stream responses via Lambda API AWS",
    "start": "362220",
    "end": "365100"
  },
  {
    "text": "is dkos is that what it is Lambda",
    "start": "365100",
    "end": "367740"
  },
  {
    "text": "functions URL including as as an Amazon",
    "start": "367740",
    "end": "370860"
  },
  {
    "text": "Cloud front response streaming is",
    "start": "370860",
    "end": "373440"
  },
  {
    "text": "available in the following regions oh",
    "start": "373440",
    "end": "375419"
  },
  {
    "text": "it's not available everywhere so uh if",
    "start": "375419",
    "end": "378300"
  },
  {
    "text": "you create your Lambda in Us East Ohio",
    "start": "378300",
    "end": "381860"
  },
  {
    "text": "used East North Virginia U.S West North",
    "start": "381860",
    "end": "385440"
  },
  {
    "text": "California U.S West origin Canada",
    "start": "385440",
    "end": "389400"
  },
  {
    "text": "Central Europe Ireland Europe London",
    "start": "389400",
    "end": "393300"
  },
  {
    "text": "Paris Frankfurt Stockholm Milan the",
    "start": "393300",
    "end": "398160"
  },
  {
    "text": "Middle East Bahrain no way",
    "start": "398160",
    "end": "402560"
  },
  {
    "text": "I grew up there",
    "start": "402919",
    "end": "405080"
  },
  {
    "text": "Africa Cape Town Hong Kong Tokyo Osaka",
    "start": "405080",
    "end": "410539"
  },
  {
    "text": "Seoul Singapore Sydney Jakarta Mumbai",
    "start": "410539",
    "end": "415880"
  },
  {
    "text": "and Sao Paulo pretty cool feature they",
    "start": "415880",
    "end": "420419"
  },
  {
    "start": "420000",
    "end": "746000"
  },
  {
    "text": "just posted this actually is today good",
    "start": "420419",
    "end": "424199"
  },
  {
    "text": "news I think it's a um so yeah I think",
    "start": "424199",
    "end": "426840"
  },
  {
    "text": "it's a pretty cool thing I think this",
    "start": "426840",
    "end": "428759"
  },
  {
    "text": "will enable",
    "start": "428759",
    "end": "429919"
  },
  {
    "text": "massive you know Fleet of applications",
    "start": "429919",
    "end": "432840"
  },
  {
    "text": "you know because now you with the",
    "start": "432840",
    "end": "435840"
  },
  {
    "text": "support especially to a HTTP if you're",
    "start": "435840",
    "end": "438300"
  },
  {
    "text": "talking about HTTP then you now all of a",
    "start": "438300",
    "end": "440759"
  },
  {
    "text": "sudden supports this streaming",
    "start": "440759",
    "end": "442139"
  },
  {
    "text": "capability like content chunk encoding",
    "start": "442139",
    "end": "444979"
  },
  {
    "text": "and uh",
    "start": "444979",
    "end": "447259"
  },
  {
    "text": "the event streaming like SSE right",
    "start": "447259",
    "end": "450000"
  },
  {
    "text": "servers and events and if you have K use",
    "start": "450000",
    "end": "453780"
  },
  {
    "text": "cases where you must want to return",
    "start": "453780",
    "end": "456419"
  },
  {
    "text": "large payloads such as larger than six",
    "start": "456419",
    "end": "459000"
  },
  {
    "text": "megabyte that that limit you have you",
    "start": "459000",
    "end": "462599"
  },
  {
    "text": "can do it today you can break cure",
    "start": "462599",
    "end": "465720"
  },
  {
    "text": "application the response into multiple",
    "start": "465720",
    "end": "469020"
  },
  {
    "text": "sex megabytes so you can download",
    "start": "469020",
    "end": "470880"
  },
  {
    "text": "effectively more than that if you want",
    "start": "470880",
    "end": "472860"
  },
  {
    "text": "it's just I think this six megabyte they",
    "start": "472860",
    "end": "476099"
  },
  {
    "text": "put it as a as a cap",
    "start": "476099",
    "end": "478340"
  },
  {
    "text": "to control the bandwidth in their",
    "start": "478340",
    "end": "480840"
  },
  {
    "text": "Network right because uh imagine like",
    "start": "480840",
    "end": "483780"
  },
  {
    "text": "having one gigabyte and just like",
    "start": "483780",
    "end": "485479"
  },
  {
    "text": "flooding the network with one gigabyte",
    "start": "485479",
    "end": "487860"
  },
  {
    "text": "at once at the same time right and in in",
    "start": "487860",
    "end": "490500"
  },
  {
    "text": "in each of the vacation so they want to",
    "start": "490500",
    "end": "492840"
  },
  {
    "text": "control that so one thing I can think of",
    "start": "492840",
    "end": "495000"
  },
  {
    "text": "here is like another value is",
    "start": "495000",
    "end": "497419"
  },
  {
    "text": "specifically with HTTP of course this is",
    "start": "497419",
    "end": "500340"
  },
  {
    "text": "not not limited to https it's actually",
    "start": "500340",
    "end": "502680"
  },
  {
    "text": "any protocol right even if you roll out",
    "start": "502680",
    "end": "504660"
  },
  {
    "text": "your own TCP socket and your own",
    "start": "504660",
    "end": "507120"
  },
  {
    "text": "protocol now any byte you send assuming",
    "start": "507120",
    "end": "510479"
  },
  {
    "text": "you enable Nigel algorithm in your",
    "start": "510479",
    "end": "513419"
  },
  {
    "text": "server side such that you can send",
    "start": "513419",
    "end": "515839"
  },
  {
    "text": "bytes smaller than the maximum segment",
    "start": "515839",
    "end": "520140"
  },
  {
    "text": "size right without actually waiting for",
    "start": "520140",
    "end": "522659"
  },
  {
    "text": "an acknowledgment so you can effectively",
    "start": "522659",
    "end": "525240"
  },
  {
    "text": "send even one by door two just send it",
    "start": "525240",
    "end": "527760"
  },
  {
    "text": "to the client if that byte is necessary",
    "start": "527760",
    "end": "529980"
  },
  {
    "text": "for clients rendering or client decision",
    "start": "529980",
    "end": "533880"
  },
  {
    "text": "making or or anything in that sort that",
    "start": "533880",
    "end": "537720"
  },
  {
    "text": "would be really powerful but also I see",
    "start": "537720",
    "end": "539940"
  },
  {
    "text": "a value in Split particular HTTP",
    "start": "539940",
    "end": "542940"
  },
  {
    "text": "applications right if you use HTTP with",
    "start": "542940",
    "end": "545399"
  },
  {
    "text": "your serverless and that is the headers",
    "start": "545399",
    "end": "548100"
  },
  {
    "text": "right prior to this",
    "start": "548100",
    "end": "550620"
  },
  {
    "text": "uh",
    "start": "550620",
    "end": "552240"
  },
  {
    "text": "we never sent anything from the",
    "start": "552240",
    "end": "554580"
  },
  {
    "text": "serverless Lambda to decline so if I",
    "start": "554580",
    "end": "557399"
  },
  {
    "text": "send an HTTP request like a post or a",
    "start": "557399",
    "end": "559560"
  },
  {
    "text": "get the card didn't get anything until",
    "start": "559560",
    "end": "562620"
  },
  {
    "text": "they get their full response so if you",
    "start": "562620",
    "end": "564959"
  },
  {
    "text": "have a large response",
    "start": "564959",
    "end": "567000"
  },
  {
    "text": "unfortunately the client has to wait the",
    "start": "567000",
    "end": "570240"
  },
  {
    "text": "whole",
    "start": "570240",
    "end": "571440"
  },
  {
    "text": "TR for the whole buffer to be filled",
    "start": "571440",
    "end": "574800"
  },
  {
    "text": "with that six megabytes or whatever and",
    "start": "574800",
    "end": "577320"
  },
  {
    "text": "then get the whole response including",
    "start": "577320",
    "end": "579300"
  },
  {
    "text": "the headers and the body",
    "start": "579300",
    "end": "581160"
  },
  {
    "text": "all in one go right",
    "start": "581160",
    "end": "583740"
  },
  {
    "text": "what's the problem with that the problem",
    "start": "583740",
    "end": "585540"
  },
  {
    "text": "with that is like the client will freak",
    "start": "585540",
    "end": "586980"
  },
  {
    "text": "out right because like all of a sudden",
    "start": "586980",
    "end": "588680"
  },
  {
    "text": "whoa what is this right the client",
    "start": "588680",
    "end": "591720"
  },
  {
    "text": "doesn't know what the account is is",
    "start": "591720",
    "end": "593399"
  },
  {
    "text": "gonna get that it doesn't know the",
    "start": "593399",
    "end": "595080"
  },
  {
    "text": "content type there's another content",
    "start": "595080",
    "end": "596820"
  },
  {
    "text": "length right and it has to do their",
    "start": "596820",
    "end": "599399"
  },
  {
    "text": "calculation as the in the same time and",
    "start": "599399",
    "end": "602220"
  },
  {
    "text": "the parsing at the same time uh as it",
    "start": "602220",
    "end": "604860"
  },
  {
    "text": "receives that response but with this you",
    "start": "604860",
    "end": "608160"
  },
  {
    "text": "can flush the header early like any web",
    "start": "608160",
    "end": "611399"
  },
  {
    "text": "servers do today right you can flush",
    "start": "611399",
    "end": "613980"
  },
  {
    "text": "those headers inly and you can hint to",
    "start": "613980",
    "end": "616440"
  },
  {
    "text": "the client about metadata about this",
    "start": "616440",
    "end": "619140"
  },
  {
    "text": "response you can hint that content",
    "start": "619140",
    "end": "620820"
  },
  {
    "text": "length if you want right content type",
    "start": "620820",
    "end": "623040"
  },
  {
    "text": "you can hint uh the link headers which",
    "start": "623040",
    "end": "626880"
  },
  {
    "text": "is hey by the way you're gonna need this",
    "start": "626880",
    "end": "629279"
  },
  {
    "text": "kind of resources I'm not sure if it",
    "start": "629279",
    "end": "631440"
  },
  {
    "text": "makes sense in serverless probably not",
    "start": "631440",
    "end": "633300"
  },
  {
    "text": "but but this is kind of a thing that you",
    "start": "633300",
    "end": "636240"
  },
  {
    "text": "can do with headers right",
    "start": "636240",
    "end": "638160"
  },
  {
    "text": "headers or can be critical like set",
    "start": "638160",
    "end": "640920"
  },
  {
    "text": "cookies or things like that right",
    "start": "640920",
    "end": "642839"
  },
  {
    "text": "uh probably not not a good idea to do",
    "start": "642839",
    "end": "645060"
  },
  {
    "text": "that said cookies like it doesn't make",
    "start": "645060",
    "end": "647100"
  },
  {
    "text": "sense can you do a host a page on",
    "start": "647100",
    "end": "650100"
  },
  {
    "text": "serverless I never thought about this",
    "start": "650100",
    "end": "651720"
  },
  {
    "text": "like I I guess you can",
    "start": "651720",
    "end": "653880"
  },
  {
    "text": "but uh you host a web page all the",
    "start": "653880",
    "end": "657180"
  },
  {
    "text": "serverless probably and if you do",
    "start": "657180",
    "end": "660600"
  },
  {
    "text": "again I never never thought about it but",
    "start": "660600",
    "end": "662519"
  },
  {
    "text": "if you do",
    "start": "662519",
    "end": "663959"
  },
  {
    "text": "you you can do it this way and you can",
    "start": "663959",
    "end": "667260"
  },
  {
    "text": "take advantage yeah I don't see why not",
    "start": "667260",
    "end": "669480"
  },
  {
    "text": "you can host a web page on serverless it",
    "start": "669480",
    "end": "672300"
  },
  {
    "text": "reads from disk and serves you content",
    "start": "672300",
    "end": "674459"
  },
  {
    "text": "static content why not",
    "start": "674459",
    "end": "676620"
  },
  {
    "text": "I can't think of any bad idea about this",
    "start": "676620",
    "end": "679200"
  },
  {
    "text": "and as a result the headers will be",
    "start": "679200",
    "end": "681899"
  },
  {
    "text": "really powerful in this case right",
    "start": "681899",
    "end": "684000"
  },
  {
    "text": "because now it will hint you that",
    "start": "684000",
    "end": "685920"
  },
  {
    "text": "they'll go ahead and download these",
    "start": "685920",
    "end": "687600"
  },
  {
    "text": "JavaScript and CSS so once you receive",
    "start": "687600",
    "end": "690420"
  },
  {
    "text": "the headers while the",
    "start": "690420",
    "end": "692660"
  },
  {
    "text": "index.html is being transmitted to you",
    "start": "692660",
    "end": "696000"
  },
  {
    "text": "you can make decisions about oh now I",
    "start": "696000",
    "end": "699120"
  },
  {
    "text": "need let's go let me go and request the",
    "start": "699120",
    "end": "701399"
  },
  {
    "text": "CSS or JavaScript or other stuff and",
    "start": "701399",
    "end": "704399"
  },
  {
    "text": "even better you can you can send",
    "start": "704399",
    "end": "707839"
  },
  {
    "text": "the early hints 103 right if your",
    "start": "707839",
    "end": "711899"
  },
  {
    "text": "browser is a browser which I think",
    "start": "711899",
    "end": "713519"
  },
  {
    "text": "Chrome does now the recent versions so",
    "start": "713519",
    "end": "717060"
  },
  {
    "text": "your your serverless can send",
    "start": "717060",
    "end": "719160"
  },
  {
    "text": "very very early and before even starting",
    "start": "719160",
    "end": "723079"
  },
  {
    "text": "the execution and the on vocation it",
    "start": "723079",
    "end": "726300"
  },
  {
    "text": "will say hey 103 status code you're",
    "start": "726300",
    "end": "730320"
  },
  {
    "text": "gonna need this and then the actual",
    "start": "730320",
    "end": "732660"
  },
  {
    "text": "final headers will be sent and then the",
    "start": "732660",
    "end": "734940"
  },
  {
    "text": "actual body will be flushed you know I",
    "start": "734940",
    "end": "737940"
  },
  {
    "text": "think it's a very interesting what do",
    "start": "737940",
    "end": "739380"
  },
  {
    "text": "you guys think are you gonna planning to",
    "start": "739380",
    "end": "740700"
  },
  {
    "text": "use this uh feature let me know in the",
    "start": "740700",
    "end": "743160"
  },
  {
    "text": "comment section below gonna see in the",
    "start": "743160",
    "end": "744720"
  },
  {
    "text": "next one bye",
    "start": "744720",
    "end": "747379"
  }
]